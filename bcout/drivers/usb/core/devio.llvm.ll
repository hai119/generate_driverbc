; ModuleID = '../bcout/drivers/usb/core/devio.llvm.bc'
source_filename = "drivers/usb/core/devio.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.usb_driver = type { i8*, i32 (%struct.usb_interface*, %struct.usb_device_id*)*, void (%struct.usb_interface*)*, i32 (%struct.usb_interface*, i32, i8*)*, i32 (%struct.usb_interface*, i32)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, %struct.usb_device_id*, %struct.attribute_group**, %struct.usb_dynids, %struct.usbdrv_wrap, i8 }
%struct.usb_interface = type { %struct.usb_host_interface*, %struct.usb_host_interface*, i32, %struct.usb_interface_assoc_descriptor*, i32, i32, i8, %struct.device, %struct.device*, %struct.work_struct }
%struct.usb_host_interface = type { %struct.usb_interface_descriptor, i32, i8*, %struct.usb_host_endpoint*, i8* }
%struct.usb_interface_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.usb_host_endpoint = type <{ %struct.usb_endpoint_descriptor, %struct.usb_ss_ep_comp_descriptor, %struct.usb_ssp_isoc_ep_comp_descriptor, i8, %struct.list_head, i8*, %struct.ep_device*, i8*, i32, i32, i32, [4 x i8] }>
%struct.usb_endpoint_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8 }>
%struct.usb_ss_ep_comp_descriptor = type { i8, i8, i8, i8, i16 }
%struct.usb_ssp_isoc_ep_comp_descriptor = type { i8, i8, i16, i32 }
%struct.ep_device = type opaque
%struct.usb_interface_assoc_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.69, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.69 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.67, %struct.list_head, %struct.list_head, %union.anon.68 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.65 }
%union.anon.65 = type { %struct.anon.66 }
%struct.anon.66 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.3, %union.anon.57, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.57 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.58, i32 }
%union.anon.58 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.50, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.36, %union.anon.37, i32 }
%struct.request_queue = type opaque
%union.anon.36 = type { %struct.list_head }
%union.anon.37 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.42 }
%struct.anon.42 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.49, i32, [12 x i8] }
%union.anon.49 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.50 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.51, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.54 }
%union.anon.51 = type { %struct.anon.52 }
%struct.anon.52 = type { i64, i64 }
%union.anon.54 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.31 }
%union.anon.31 = type { %struct.anon.32, [48 x i8] }
%struct.anon.32 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.33, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.33 = type { %struct.anon.34 }
%struct.anon.34 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.67 = type { %struct.list_head }
%union.anon.68 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.59, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.60, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.61, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.64, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.59 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.60 = type { %struct.callback_head }
%union.anon.61 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.64 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.62 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.62 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.35 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.35 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.usb_device_id = type { i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i64 }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.usb_dynids = type { %struct.spinlock, %struct.list_head }
%struct.usbdrv_wrap = type { %struct.device_driver, i32 }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.kmem_cache = type opaque
%struct.cpuinfo_x86 = type { i8, i8, i8, i8, i32, [3 x i32], i8, i8, i8, i8, i32, i32, %union.anon.71, [16 x i8], [64 x i8], i32, i32, i32, i32, i32, i32, i64, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i8, i8 }
%union.anon.71 = type { i64, [72 x i8] }
%struct.usb_device = type <{ i32, [16 x i8], i32, i32, i32, i32, i32, %struct.usb_tt*, i32, [2 x i32], [4 x i8], %struct.usb_device*, %struct.usb_bus*, %struct.usb_host_endpoint, %struct.device, %struct.usb_device_descriptor, [6 x i8], %struct.usb_host_bos*, %struct.usb_host_config*, %struct.usb_host_config*, [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*], i8**, i16, i8, i8, i8, i16, i8, i32, [4 x i8], i8*, i8*, i8*, %struct.list_head, i32, i32, %struct.atomic_t, [4 x i8], i64, i64, i8, [7 x i8], %struct.wusb_dev*, i32, i32, %struct.usb2_lpm_parameters, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters, i32, i16, i8, i8 }>
%struct.usb_tt = type { %struct.usb_device*, i32, i32, i8*, %struct.spinlock, %struct.list_head, %struct.work_struct }
%struct.usb_bus = type { %struct.device*, %struct.device*, i32, i8*, i8, i8, i8, i32, i32, %struct.mutex, %struct.usb_devmap, %struct.usb_device*, %struct.usb_bus*, i32, i32, i32, i32 }
%struct.usb_devmap = type { [2 x i64] }
%struct.usb_device_descriptor = type { i8, i8, i16, i8, i8, i8, i8, i16, i16, i16, i8, i8, i8, i8 }
%struct.usb_host_bos = type { %struct.usb_bos_descriptor*, %struct.usb_ext_cap_descriptor*, %struct.usb_ss_cap_descriptor*, %struct.usb_ssp_cap_descriptor*, %struct.usb_ss_container_id_descriptor*, %struct.usb_ptm_cap_descriptor* }
%struct.usb_bos_descriptor = type <{ i8, i8, i16, i8 }>
%struct.usb_ext_cap_descriptor = type <{ i8, i8, i8, i32 }>
%struct.usb_ss_cap_descriptor = type { i8, i8, i8, i8, i16, i8, i8, i16 }
%struct.usb_ssp_cap_descriptor = type { i8, i8, i8, i8, i32, i16, i16, [1 x i32] }
%struct.usb_ss_container_id_descriptor = type { i8, i8, i8, i8, [16 x i8] }
%struct.usb_ptm_cap_descriptor = type { i8, i8, i8 }
%struct.usb_host_config = type { %struct.usb_config_descriptor, i8*, [16 x %struct.usb_interface_assoc_descriptor*], [32 x %struct.usb_interface*], [32 x %struct.usb_interface_cache*], i8*, i32 }
%struct.usb_config_descriptor = type <{ i8, i8, i16, i8, i8, i8, i8, i8 }>
%struct.usb_interface_cache = type { i32, %struct.kref, [0 x %struct.usb_host_interface] }
%struct.wusb_dev = type opaque
%struct.usb2_lpm_parameters = type { i32, i32 }
%struct.usb3_lpm_parameters = type { i32, i32, i32, i32 }
%struct.usb_dev_state = type { %struct.list_head, %struct.usb_device*, %struct.file*, %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head, %struct.wait_queue_head, %struct.wait_queue_head, i32, %struct.pid*, %struct.cred*, %union.sigval, i64, i32, i64, i32, i8, i8 }
%union.sigval = type { i8* }
%struct.usb_memory = type { %struct.list_head, i32, i32, i32, i8*, i64, i64, %struct.usb_dev_state* }
%struct.usb_hcd = type { %struct.usb_bus, %struct.kref, i8*, i32, [24 x i8], %struct.timer_list, %struct.urb*, %struct.work_struct, %struct.work_struct, %struct.hc_driver*, %struct.usb_phy*, %struct.usb_phy_roothub*, i64, i32, i16, i32, i8*, i64, i64, i32, %struct.giveback_urb_bh, %struct.giveback_urb_bh, %struct.mutex*, %struct.mutex*, %struct.usb_hcd*, %struct.usb_hcd*, [4 x %struct.dma_pool*], i32, %struct.gen_pool*, [0 x i64] }
%struct.urb = type { %struct.kref, i32, i8*, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.usb_anchor*, %struct.usb_device*, %struct.usb_host_endpoint*, i32, i32, i32, i32, i8*, i64, %struct.scatterlist*, i32, i32, i32, i32, i8*, i64, i32, i32, i32, i32, i8*, void (%struct.urb*)*, [0 x %struct.usb_iso_packet_descriptor] }
%struct.usb_anchor = type { %struct.list_head, %struct.wait_queue_head, %struct.spinlock, %struct.atomic_t, i8 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.usb_iso_packet_descriptor = type { i32, i32, i32, i32 }
%struct.hc_driver = type { i8*, i8*, i64, i32 (%struct.usb_hcd*)*, i32, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*, i1)*, i32 (%struct.usb_hcd*, i1)*, void (%struct.usb_hcd*)*, void (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, void (%struct.usb_hcd*, %struct.urb*)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, i8*)*, i32 (%struct.usb_hcd*, i16, i16, i16, i8*, i16)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*, i32)*, i64 (%struct.usb_hcd*)*, void (%struct.usb_hcd*, i32)*, i32 (%struct.usb_hcd*, i32)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, void (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint**, i32, i32, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint**, i32, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, void (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_tt*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, i32)*, i32 (%struct.usb_hcd*, i32, i1)* }
%struct.usb_phy = type opaque
%struct.usb_phy_roothub = type opaque
%struct.giveback_urb_bh = type { i8, %struct.spinlock, %struct.list_head, %struct.tasklet_struct, %struct.usb_host_endpoint* }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.72, i64 }
%union.anon.72 = type { void (i64)* }
%struct.dma_pool = type opaque
%struct.gen_pool = type opaque
%struct.async = type { %struct.list_head, %struct.usb_dev_state*, %struct.pid*, %struct.cred*, i32, i32, i8*, i8*, %union.sigval, %struct.urb*, %struct.usb_memory*, i32, i32, i8, i8 }
%struct.usbdevfs_ctrltransfer = type { i8, i8, i16, i16, i16, i32, i8* }
%struct.usbdevfs_bulktransfer = type { i32, i32, i32, i8* }
%struct.usbdevfs_getdriver = type { i32, [256 x i8] }
%struct.usbdevfs_connectinfo = type { i32, i8 }
%struct.usbdevfs_setinterface = type { i32, i32 }
%struct.usbdevfs_urb = type { i8, i8, i32, i32, i8*, i32, i32, i32, %union.anon.70, i32, i32, i8*, [0 x %struct.usbdevfs_iso_packet_desc] }
%union.anon.70 = type { i32 }
%struct.usbdevfs_iso_packet_desc = type { i32, i32, i32 }
%struct.usbdevfs_disconnectsignal = type { i32, i8* }
%struct.usbdevfs_ioctl = type { i32, i32, i8* }
%struct.usbdevfs_disconnect_claim = type { i32, i32, [256 x i8] }
%struct.usbdevfs_streams = type { i32, i32, [0 x i8] }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.usbdevfs_conninfo_ex = type { i32, i32, i32, i32, i8, [7 x i8] }
%struct.usb_ctrlrequest = type { i8, i8, i16, i16, i16 }

@__param_str_usbfs_snoop = internal constant [20 x i8] c"usbcore.usbfs_snoop\00", align 16, !dbg !0
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@usbfs_snoop = internal global i8 0, align 1, !dbg !4915
@__param_usbfs_snoop = internal constant %struct.kernel_param { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__param_str_usbfs_snoop, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 420, i8 -1, i8 0, %union.anon { i8* @usbfs_snoop } }, section "__param", align 8, !dbg !4828
@__UNIQUE_ID_usbfs_snooptype247 = internal constant [34 x i8] c"usbcore.parmtype=usbfs_snoop:bool\00", section ".modinfo", align 1, !dbg !4880
@__UNIQUE_ID_usbfs_snoop248 = internal constant [55 x i8] c"usbcore.parm=usbfs_snoop:true to log all usbfs traffic\00", section ".modinfo", align 1, !dbg !4885
@__param_str_usbfs_snoop_max = internal constant [24 x i8] c"usbcore.usbfs_snoop_max\00", align 16, !dbg !4919
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 8
@usbfs_snoop_max = internal global i32 65536, align 4, !dbg !4922
@__param_usbfs_snoop_max = internal constant %struct.kernel_param { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__param_str_usbfs_snoop_max, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @usbfs_snoop_max to i8*) } }, section "__param", align 8, !dbg !4890
@__UNIQUE_ID_usbfs_snoop_maxtype249 = internal constant [38 x i8] c"usbcore.parmtype=usbfs_snoop_max:uint\00", section ".modinfo", align 1, !dbg !4892
@__UNIQUE_ID_usbfs_snoop_max250 = internal constant [77 x i8] c"usbcore.parm=usbfs_snoop_max:maximum number of bytes to print while snooping\00", section ".modinfo", align 1, !dbg !4897
@__param_str_usbfs_memory_mb = internal constant [24 x i8] c"usbcore.usbfs_memory_mb\00", align 16, !dbg !4924
@usbfs_memory_mb = internal global i32 16, align 4, !dbg !4926
@__param_usbfs_memory_mb = internal constant %struct.kernel_param { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__param_str_usbfs_memory_mb, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @usbfs_memory_mb to i8*) } }, section "__param", align 8, !dbg !4902
@__UNIQUE_ID_usbfs_memory_mbtype251 = internal constant [38 x i8] c"usbcore.parmtype=usbfs_memory_mb:uint\00", section ".modinfo", align 1, !dbg !4904
@__UNIQUE_ID_usbfs_memory_mb252 = internal constant [81 x i8] c"usbcore.parm=usbfs_memory_mb:maximum MB allowed for usbfs buffers (0 = no limit)\00", section ".modinfo", align 1, !dbg !4906
@usbfs_mutex = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @usbfs_mutex to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @usbfs_mutex to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !4928
@.str = private unnamed_addr constant [6 x i8] c"usbfs\00", align 1
@usbfs_driver = dso_local global %struct.usb_driver { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i32 (%struct.usb_interface*, %struct.usb_device_id*)* @driver_probe, void (%struct.usb_interface*)* @driver_disconnect, i32 (%struct.usb_interface*, i32, i8*)* null, i32 (%struct.usb_interface*, i32)* @driver_suspend, i32 (%struct.usb_interface*)* @driver_resume, i32 (%struct.usb_interface*)* null, i32 (%struct.usb_interface*)* null, i32 (%struct.usb_interface*)* null, %struct.usb_device_id* null, %struct.attribute_group** null, %struct.usb_dynids zeroinitializer, %struct.usbdrv_wrap zeroinitializer, i8 2 }, align 8, !dbg !4911
@usbdev_file_operations = dso_local constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @no_seek_end_llseek, i64 (%struct.file*, i8*, i64, i64*)* @usbdev_read, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.kiocb*, i1)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* @usbdev_poll, i64 (%struct.file*, i32, i64)* @usbdev_ioctl, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* @usbdev_mmap, i64 0, i32 (%struct.inode*, %struct.file*)* @usbdev_open, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* @usbdev_release, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, i64, i32)* null }, align 8, !dbg !4913
@.str.1 = private unnamed_addr constant [11 x i8] c"usb_device\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"\013Unable to register minors for usb_device\0A\00", align 1
@usb_device_cdev = internal global %struct.cdev zeroinitializer, align 8, !dbg !4917
@.str.3 = private unnamed_addr constant [37 x i8] c"\013Unable to get usb_device major %d\0A\00", align 1
@usbdev_nb = internal global %struct.notifier_block { i32 (%struct.notifier_block*, i64, i8*)* @usbdev_notify, %struct.notifier_block* null, i32 0 }, align 8, !dbg !4948
@.str.4 = private unnamed_addr constant [34 x i8] c"interface number %u out of range\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.5 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"%s: REAPURB\0A\00", align 1
@__func__.usbdev_do_ioctl = private unnamed_addr constant [16 x i8] c"usbdev_do_ioctl\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"%s: REAPURBNDELAY\0A\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"%s: CONTROL\0A\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"%s: BULK\0A\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"%s: RESETEP\0A\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"%s: RESET\0A\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"%s: CLEAR_HALT\0A\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"%s: GETDRIVER\0A\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"%s: CONNECTINFO\0A\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"%s: SETINTERFACE\0A\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"%s: SETCONFIGURATION\0A\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"%s: SUBMITURB\0A\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"%s: DISCARDURB %px\0A\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"%s: DISCSIGNAL\0A\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"%s: CLAIMINTERFACE\0A\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"%s: RELEASEINTERFACE\0A\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"%s: IOCTL\0A\00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"%s: CLAIM_PORT\0A\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"%s: RELEASE_PORT\0A\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"reap %px\0A\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@usbfs_memory_usage = internal global %struct.atomic64_t zeroinitializer, align 8, !dbg !4930
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@.str.27 = private unnamed_addr constant [83 x i8] c"control urb: bRequestType=%02x bRequest=%02x wValue=%04x wIndex=%04x wLength=%04x\0A\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"\017\00", align 1
@.str.29 = private unnamed_addr constant [66 x i8] c"usbfs: USBDEVFS_CONTROL failed cmd %s rqt %u rq %u len %u ret %d\0A\00", align 1
@.str.30 = private unnamed_addr constant [55 x i8] c"%s: process %i (%s) requesting ep %02x but needs %02x\0A\00", align 1
@__func__.check_ctrlrecip = private unnamed_addr constant [16 x i8] c"check_ctrlrecip\00", align 1
@.str.31 = private unnamed_addr constant [62 x i8] c"usbfs: process %d (%s) did not claim interface %u before use\0A\00", align 1
@snoop_urb.types = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0)], align 16, !dbg !4932
@.str.32 = private unnamed_addr constant [5 x i8] c"isoc\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"ctrl\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"bulk\00", align 1
@snoop_urb.dirs = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i32 0, i32 0)], align 16, !dbg !4938
@.str.36 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.38 = private unnamed_addr constant [36 x i8] c"userurb %px, ep%d %s-%s, length %u\0A\00", align 1
@.str.39 = private unnamed_addr constant [53 x i8] c"userurb %px, ep%d %s-%s, actual_length %u status %d\0A\00", align 1
@.str.40 = private unnamed_addr constant [35 x i8] c"ep%d %s-%s, length %u, timeout %d\0A\00", align 1
@.str.41 = private unnamed_addr constant [41 x i8] c"ep%d %s-%s, actual_length %u, status %d\0A\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"data: \00", align 1
@.str.43 = private unnamed_addr constant [20 x i8] c"include/linux/usb.h\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.44 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"RESETEP\00", align 1
@.str.46 = private unnamed_addr constant [63 x i8] c"Process %d (%s) called USBDEVFS_%s for active endpoint 0x%02x\0A\00", align 1
@.str.47 = private unnamed_addr constant [60 x i8] c"usbfs: interface %d claimed by %s while '%s' resets device\0A\00", align 1
@.str.48 = private unnamed_addr constant [11 x i8] c"CLEAR_HALT\00", align 1
@.str.49 = private unnamed_addr constant [62 x i8] c"usbfs: interface %d claimed by %s while '%s' sets config #%d\0A\00", align 1
@.str.50 = private unnamed_addr constant [50 x i8] c"Requested nonsensical USBDEVFS_URB_SHORT_NOT_OK.\0A\00", align 1
@.str.51 = private unnamed_addr constant [49 x i8] c"Requested nonsensical USBDEVFS_URB_ZERO_PACKET.\0A\00", align 1
@.str.52 = private unnamed_addr constant [35 x i8] c"usbfs: usb_submit_urb returned %d\0A\00", align 1
@boot_cpu_data = external dso_local global %struct.cpuinfo_x86, align 8
@.str.53 = private unnamed_addr constant [28 x i8] c"include/linux/scatterlist.h\00", align 1
@phys_base = external dso_local global i64, align 8
@.str.54 = private unnamed_addr constant [14 x i8] c"urb complete\0A\00", align 1
@.str.55 = private unnamed_addr constant [35 x i8] c"port %d claimed by process %d: %s\0A\00", align 1
@usbdev_vm_ops = internal constant %struct.vm_operations_struct { void (%struct.vm_area_struct*)* @usbdev_vm_open, void (%struct.vm_area_struct*)* @usbdev_vm_close, i32 (%struct.vm_area_struct*, i64)* null, i32 (%struct.vm_area_struct*)* null, i32 (%struct.vm_fault*)* null, i32 (%struct.vm_fault*, i32)* null, void (%struct.vm_fault*, i64, i64)* null, i64 (%struct.vm_area_struct*)* null, i32 (%struct.vm_fault*)* null, i32 (%struct.vm_fault*)* null, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)* null, i8* (%struct.vm_area_struct*)* null, %struct.page* (%struct.vm_area_struct*, i64)* null }, align 8, !dbg !4941
@usbdev_open.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4943
@.str.56 = private unnamed_addr constant [10 x i8] c"&ps->wait\00", align 1
@usbdev_open.__key.57 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4946
@.str.58 = private unnamed_addr constant [21 x i8] c"&ps->wait_for_resume\00", align 1
@.str.59 = private unnamed_addr constant [26 x i8] c"opened by process %d: %s\0A\00", align 1
@usb_bus_type = external dso_local global %struct.bus_type, align 8
@llvm.used = appending global [9 x i8*] [i8* bitcast (%struct.kernel_param* @__param_usbfs_snoop to i8*), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__UNIQUE_ID_usbfs_snooptype247, i32 0, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @__UNIQUE_ID_usbfs_snoop248, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_usbfs_snoop_max to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_usbfs_snoop_maxtype249, i32 0, i32 0), i8* getelementptr inbounds ([77 x i8], [77 x i8]* @__UNIQUE_ID_usbfs_snoop_max250, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_usbfs_memory_mb to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_usbfs_memory_mbtype251, i32 0, i32 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__UNIQUE_ID_usbfs_memory_mb252, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @usbfs_notify_suspend(%struct.usb_device* %udev) #0 !dbg !4968 {
entry:
  %udev.addr = alloca %struct.usb_device*, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !4971, metadata !DIExpression()), !dbg !4972
  ret void, !dbg !4973
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @usbfs_notify_resume(%struct.usb_device* %udev) #0 !dbg !4974 {
entry:
  %udev.addr = alloca %struct.usb_device*, align 8
  %ps = alloca %struct.usb_dev_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.usb_dev_state*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp13 = alloca %struct.usb_dev_state*, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !4975, metadata !DIExpression()), !dbg !4976
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps, metadata !4977, metadata !DIExpression()), !dbg !4978
  call void @mutex_lock(%struct.mutex* @usbfs_mutex) #11, !dbg !4979
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4980, metadata !DIExpression()), !dbg !4983
  %0 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !4983
  %filelist = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 34, !dbg !4983
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %filelist, i32 0, i32 0, !dbg !4983
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4983
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !4983
  store i8* %2, i8** %__mptr, align 8, !dbg !4983
  br label %do.body, !dbg !4983

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4984

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !4983
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !4983
  %4 = bitcast i8* %add.ptr to %struct.usb_dev_state*, !dbg !4983
  store %struct.usb_dev_state* %4, %struct.usb_dev_state** %tmp, align 8, !dbg !4984
  %5 = load %struct.usb_dev_state*, %struct.usb_dev_state** %tmp, align 8, !dbg !4983
  store %struct.usb_dev_state* %5, %struct.usb_dev_state** %ps, align 8, !dbg !4986
  br label %for.cond, !dbg !4986

for.cond:                                         ; preds = %do.end12, %do.end
  %6 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !4987
  %list = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 0, !dbg !4987
  %7 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !4987
  %filelist1 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 34, !dbg !4987
  %cmp = icmp eq %struct.list_head* %list, %filelist1, !dbg !4987
  %lnot = xor i1 %cmp, true, !dbg !4987
  br i1 %lnot, label %for.body, label %for.end, !dbg !4986

for.body:                                         ; preds = %for.cond
  br label %do.body2, !dbg !4989

do.body2:                                         ; preds = %for.body
  br label %do.body3, !dbg !4991

do.body3:                                         ; preds = %do.body2
  br label %do.end4, !dbg !4993

do.end4:                                          ; preds = %do.body3
  br label %do.body5, !dbg !4991

do.body5:                                         ; preds = %do.end4
  %8 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !4995
  %not_yet_resumed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 16, !dbg !4995
  store volatile i32 0, i32* %not_yet_resumed, align 8, !dbg !4995
  br label %do.end6, !dbg !4995

do.end6:                                          ; preds = %do.body5
  br label %do.end7, !dbg !4991

do.end7:                                          ; preds = %do.end6
  %9 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !4997
  %wait_for_resume = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %9, i32 0, i32 8, !dbg !4997
  call void @__wake_up(%struct.wait_queue_head* %wait_for_resume, i32 3, i32 0, i8* null) #11, !dbg !4997
  br label %for.inc, !dbg !4998

for.inc:                                          ; preds = %do.end7
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !4999, metadata !DIExpression()), !dbg !5001
  %10 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5001
  %list9 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %10, i32 0, i32 0, !dbg !5001
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %list9, i32 0, i32 0, !dbg !5001
  %11 = load %struct.list_head*, %struct.list_head** %next10, align 8, !dbg !5001
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !5001
  store i8* %12, i8** %__mptr8, align 8, !dbg !5001
  br label %do.body11, !dbg !5001

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !5002

do.end12:                                         ; preds = %do.body11
  %13 = load i8*, i8** %__mptr8, align 8, !dbg !5001
  %add.ptr14 = getelementptr i8, i8* %13, i64 0, !dbg !5001
  %14 = bitcast i8* %add.ptr14 to %struct.usb_dev_state*, !dbg !5001
  store %struct.usb_dev_state* %14, %struct.usb_dev_state** %tmp13, align 8, !dbg !5002
  %15 = load %struct.usb_dev_state*, %struct.usb_dev_state** %tmp13, align 8, !dbg !5001
  store %struct.usb_dev_state* %15, %struct.usb_dev_state** %ps, align 8, !dbg !4987
  br label %for.cond, !dbg !4987, !llvm.loop !5004

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @usbfs_mutex) #11, !dbg !5006
  ret void, !dbg !5007
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @driver_probe(%struct.usb_interface* %intf, %struct.usb_device_id* %id) #0 !dbg !5008 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  %id.addr = alloca %struct.usb_device_id*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !5009, metadata !DIExpression()), !dbg !5010
  store %struct.usb_device_id* %id, %struct.usb_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device_id** %id.addr, metadata !5011, metadata !DIExpression()), !dbg !5012
  ret i32 -19, !dbg !5013
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @driver_disconnect(%struct.usb_interface* %intf) #0 !dbg !5014 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  %ps = alloca %struct.usb_dev_state*, align 8
  %ifnum = alloca i32, align 4
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !5015, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps, metadata !5017, metadata !DIExpression()), !dbg !5018
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5019
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %0) #11, !dbg !5020
  %1 = bitcast i8* %call to %struct.usb_dev_state*, !dbg !5020
  store %struct.usb_dev_state* %1, %struct.usb_dev_state** %ps, align 8, !dbg !5018
  call void @llvm.dbg.declare(metadata i32* %ifnum, metadata !5021, metadata !DIExpression()), !dbg !5022
  %2 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5023
  %altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %2, i32 0, i32 0, !dbg !5024
  %3 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting, align 8, !dbg !5024
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %3, i32 0, i32 0, !dbg !5025
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2, !dbg !5026
  %4 = load i8, i8* %bInterfaceNumber, align 2, !dbg !5026
  %conv = zext i8 %4 to i32, !dbg !5023
  store i32 %conv, i32* %ifnum, align 4, !dbg !5022
  %5 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5027
  %tobool = icmp ne %struct.usb_dev_state* %5, null, !dbg !5027
  br i1 %tobool, label %if.end, label %if.then, !dbg !5029

if.then:                                          ; preds = %entry
  br label %return, !dbg !5030

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %ifnum, align 4, !dbg !5031
  %conv1 = zext i32 %6 to i64, !dbg !5031
  %cmp = icmp ult i64 %conv1, 64, !dbg !5031
  %lnot = xor i1 %cmp, true, !dbg !5031
  %lnot3 = xor i1 %lnot, true, !dbg !5031
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !5031
  %conv4 = sext i32 %lnot.ext to i64, !dbg !5031
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !5031
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !5033

if.then6:                                         ; preds = %if.end
  %7 = load i32, i32* %ifnum, align 4, !dbg !5034
  %conv7 = zext i32 %7 to i64, !dbg !5034
  %8 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5035
  %ifclaimed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 13, !dbg !5036
  call void @clear_bit(i64 %conv7, i64* %ifclaimed) #11, !dbg !5037
  br label %if.end8, !dbg !5037

if.else:                                          ; preds = %if.end
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5038
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %9, i32 0, i32 7, !dbg !5038
  %10 = load i32, i32* %ifnum, align 4, !dbg !5038
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i32 %10) #12, !dbg !5038
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then6
  %11 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5039
  call void @usb_set_intfdata(%struct.usb_interface* %11, i8* null) #11, !dbg !5040
  %12 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5041
  %13 = load i32, i32* %ifnum, align 4, !dbg !5042
  call void @destroy_async_on_interface(%struct.usb_dev_state* %12, i32 %13) #11, !dbg !5043
  br label %return, !dbg !5044

return:                                           ; preds = %if.end8, %if.then
  ret void, !dbg !5044
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @driver_suspend(%struct.usb_interface* %intf, i32 %msg.coerce) #0 !dbg !5045 {
entry:
  %msg = alloca %struct.pm_message, align 4
  %intf.addr = alloca %struct.usb_interface*, align 8
  %coerce.dive = getelementptr inbounds %struct.pm_message, %struct.pm_message* %msg, i32 0, i32 0
  store i32 %msg.coerce, i32* %coerce.dive, align 4
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !5046, metadata !DIExpression()), !dbg !5047
  call void @llvm.dbg.declare(metadata %struct.pm_message* %msg, metadata !5048, metadata !DIExpression()), !dbg !5049
  ret i32 0, !dbg !5050
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @driver_resume(%struct.usb_interface* %intf) #0 !dbg !5051 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !5052, metadata !DIExpression()), !dbg !5053
  ret i32 0, !dbg !5054
}

; Function Attrs: noredzone
declare dso_local i64 @no_seek_end_llseek(%struct.file*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @usbdev_read(%struct.file* %file, i8* %buf, i64 %nbytes, i64* %ppos) #0 !dbg !5055 {
entry:
  %retval.i.i91 = alloca i1, align 1
  %addr.addr.i.i92 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i92, metadata !5056, metadata !DIExpression()), !dbg !5061
  %bytes.addr.i.i93 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i93, metadata !5077, metadata !DIExpression()), !dbg !5078
  %is_source.addr.i.i94 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i94, metadata !5079, metadata !DIExpression()), !dbg !5080
  %sz.i.i95 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i95, metadata !5081, metadata !DIExpression()), !dbg !5082
  %__ret_warn_on.i.i96 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i96, metadata !5083, metadata !DIExpression()), !dbg !5086
  %tmp.i.i97 = alloca i64, align 8
  %to.addr.i98 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i98, metadata !5087, metadata !DIExpression()), !dbg !5088
  %from.addr.i99 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i99, metadata !5089, metadata !DIExpression()), !dbg !5090
  %n.addr.i100 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i100, metadata !5091, metadata !DIExpression()), !dbg !5092
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !5093
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !5099
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !5100
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !5101
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !5102
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5087, metadata !DIExpression()), !dbg !5103
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5089, metadata !DIExpression()), !dbg !5104
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5091, metadata !DIExpression()), !dbg !5105
  %file.addr = alloca %struct.file*, align 8
  %buf.addr = alloca i8*, align 8
  %nbytes.addr = alloca i64, align 8
  %ppos.addr = alloca i64*, align 8
  %ps = alloca %struct.usb_dev_state*, align 8
  %dev = alloca %struct.usb_device*, align 8
  %ret = alloca i64, align 8
  %len = alloca i32, align 4
  %pos = alloca i64, align 8
  %i = alloca i32, align 4
  %temp_desc = alloca %struct.usb_device_descriptor, align 1
  %config = alloca %struct.usb_config_descriptor*, align 8
  %length = alloca i32, align 4
  %alloclen = alloca i32, align 4
  %__UNIQUE_ID___x254 = alloca i32, align 4
  %__UNIQUE_ID___y255 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !5106, metadata !DIExpression()), !dbg !5107
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5108, metadata !DIExpression()), !dbg !5109
  store i64 %nbytes, i64* %nbytes.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nbytes.addr, metadata !5110, metadata !DIExpression()), !dbg !5111
  store i64* %ppos, i64** %ppos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %ppos.addr, metadata !5112, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps, metadata !5114, metadata !DIExpression()), !dbg !5115
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5116
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !5117
  %1 = load i8*, i8** %private_data, align 8, !dbg !5117
  %2 = bitcast i8* %1 to %struct.usb_dev_state*, !dbg !5116
  store %struct.usb_dev_state* %2, %struct.usb_dev_state** %ps, align 8, !dbg !5115
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev, metadata !5118, metadata !DIExpression()), !dbg !5119
  %3 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5120
  %dev1 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %3, i32 0, i32 1, !dbg !5121
  %4 = load %struct.usb_device*, %struct.usb_device** %dev1, align 8, !dbg !5121
  store %struct.usb_device* %4, %struct.usb_device** %dev, align 8, !dbg !5119
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !5122, metadata !DIExpression()), !dbg !5123
  store i64 0, i64* %ret, align 8, !dbg !5123
  call void @llvm.dbg.declare(metadata i32* %len, metadata !5124, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !5126, metadata !DIExpression()), !dbg !5127
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5128, metadata !DIExpression()), !dbg !5129
  %5 = load i64*, i64** %ppos.addr, align 8, !dbg !5130
  %6 = load i64, i64* %5, align 8, !dbg !5131
  store i64 %6, i64* %pos, align 8, !dbg !5132
  %7 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5133
  %dev2 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 14, !dbg !5133
  call void @device_lock(%struct.device* %dev2) #11, !dbg !5133
  %8 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5134
  %call = call i32 @connected(%struct.usb_dev_state* %8) #11, !dbg !5136
  %tobool = icmp ne i32 %call, 0, !dbg !5136
  br i1 %tobool, label %if.else, label %if.then, !dbg !5137

if.then:                                          ; preds = %entry
  store i64 -19, i64* %ret, align 8, !dbg !5138
  br label %err, !dbg !5140

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %pos, align 8, !dbg !5141
  %cmp = icmp slt i64 %9, 0, !dbg !5143
  br i1 %cmp, label %if.then3, label %if.end, !dbg !5144

if.then3:                                         ; preds = %if.else
  store i64 -22, i64* %ret, align 8, !dbg !5145
  br label %err, !dbg !5147

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end
  %10 = load i64, i64* %pos, align 8, !dbg !5148
  %cmp5 = icmp ult i64 %10, 18, !dbg !5149
  br i1 %cmp5, label %if.then6, label %if.end30, !dbg !5150

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.usb_device_descriptor* %temp_desc, metadata !5151, metadata !DIExpression()), !dbg !5152
  %11 = bitcast %struct.usb_device_descriptor* %temp_desc to i8*, !dbg !5153
  %12 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5154
  %descriptor = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 15, !dbg !5155
  %13 = bitcast %struct.usb_device_descriptor* %descriptor to i8*, !dbg !5153
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 8 %13, i64 18, i1 false), !dbg !5153
  br label %do.body, !dbg !5156

do.body:                                          ; preds = %if.then6
  %bcdUSB = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %temp_desc, i32 0, i32 2, !dbg !5157
  br label %do.end, !dbg !5157

do.end:                                           ; preds = %do.body
  br label %do.body7, !dbg !5159

do.body7:                                         ; preds = %do.end
  %idVendor = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %temp_desc, i32 0, i32 7, !dbg !5160
  br label %do.end8, !dbg !5160

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !5162

do.body9:                                         ; preds = %do.end8
  %idProduct = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %temp_desc, i32 0, i32 8, !dbg !5163
  br label %do.end10, !dbg !5163

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !5165

do.body11:                                        ; preds = %do.end10
  %bcdDevice = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %temp_desc, i32 0, i32 9, !dbg !5166
  br label %do.end12, !dbg !5166

do.end12:                                         ; preds = %do.body11
  %14 = load i64, i64* %pos, align 8, !dbg !5168
  %sub = sub i64 18, %14, !dbg !5169
  %conv = trunc i64 %sub to i32, !dbg !5170
  store i32 %conv, i32* %len, align 4, !dbg !5171
  %15 = load i32, i32* %len, align 4, !dbg !5172
  %conv13 = zext i32 %15 to i64, !dbg !5172
  %16 = load i64, i64* %nbytes.addr, align 8, !dbg !5174
  %cmp14 = icmp ugt i64 %conv13, %16, !dbg !5175
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !5176

if.then16:                                        ; preds = %do.end12
  %17 = load i64, i64* %nbytes.addr, align 8, !dbg !5177
  %conv17 = trunc i64 %17 to i32, !dbg !5177
  store i32 %conv17, i32* %len, align 4, !dbg !5178
  br label %if.end18, !dbg !5179

if.end18:                                         ; preds = %if.then16, %do.end12
  %18 = load i8*, i8** %buf.addr, align 8, !dbg !5180
  %19 = bitcast %struct.usb_device_descriptor* %temp_desc to i8*, !dbg !5181
  %20 = load i64, i64* %pos, align 8, !dbg !5182
  %add.ptr = getelementptr i8, i8* %19, i64 %20, !dbg !5183
  %21 = load i32, i32* %len, align 4, !dbg !5184
  %conv19 = zext i32 %21 to i64, !dbg !5184
  store i8* %18, i8** %to.addr.i, align 8
  store i8* %add.ptr, i8** %from.addr.i, align 8
  store i64 %conv19, i64* %n.addr.i, align 8
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !5185
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !5185
  store i8* %22, i8** %addr.addr.i.i, align 8
  store i64 %23, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !5101
  %24 = load i32, i32* %sz.i.i, align 4, !dbg !5186
  %cmp.i.i = icmp sge i32 %24, 0, !dbg !5186
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !5186

land.rhs.i.i:                                     ; preds = %if.end18
  %25 = load i32, i32* %sz.i.i, align 4, !dbg !5186
  %conv.i.i = sext i32 %25 to i64, !dbg !5186
  %26 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5186
  %cmp1.i.i = icmp ult i64 %conv.i.i, %26, !dbg !5186
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end18
  %27 = phi i1 [ false, %if.end18 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !5188
  %lnot.i.i = xor i1 %27, true, !dbg !5186
  %lnot.ext.i.i = zext i1 %27 to i32, !dbg !5186
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5186
  br i1 %27, label %if.then.i.i, label %if.end10.i.i, !dbg !5189

if.then.i.i:                                      ; preds = %land.end.i.i
  %28 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5190
  %29 = call i1 @llvm.is.constant.i64(i64 %28) #7, !dbg !5193
  br i1 %29, label %if.else.i.i, label %if.then5.i.i, !dbg !5194

if.then5.i.i:                                     ; preds = %if.then.i.i
  %30 = load i32, i32* %sz.i.i, align 4, !dbg !5195
  %31 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5196
  call void @copy_overflow(i32 %30, i64 %31) #13, !dbg !5197
  br label %if.end9.i.i, !dbg !5197

if.else.i.i:                                      ; preds = %if.then.i.i
  %32 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !5198
  %tobool6.i.i = trunc i8 %32 to i1, !dbg !5198
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !5200

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !5201
  br label %if.end.i.i, !dbg !5201

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !5202
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !5203
  br label %check_copy_size.exit.i, !dbg !5203

if.end10.i.i:                                     ; preds = %land.end.i.i
  %33 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5102
  %cmp11.i.i = icmp ugt i64 %33, 2147483647, !dbg !5102
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !5102
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !5102
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !5102
  %34 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !5204
  %tobool17.i.i = icmp ne i32 %34, 0, !dbg !5204
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !5204
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !5204
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !5204
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !5102

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !5206, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !5210, !srcloc !5212
  br label %if.end31.i.i, !dbg !5213

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %35 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !5102
  %tobool32.i.i = icmp ne i32 %35, 0, !dbg !5102
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !5102
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !5102
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !5102
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !5204
  %36 = load i64, i64* %tmp.i.i, align 8, !dbg !5102
  %tobool38.i.i = icmp ne i64 %36, 0, !dbg !5214
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !5215

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !5216
  br label %check_copy_size.exit.i, !dbg !5216

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %37 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !5217
  %38 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !5218
  %39 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !5219
  %tobool41.i.i = trunc i8 %39 to i1, !dbg !5219
  call void @check_object_size(i8* %37, i64 %38, i1 zeroext %tobool41.i.i) #13, !dbg !5220
  store i1 true, i1* %retval.i.i, align 1, !dbg !5221
  br label %check_copy_size.exit.i, !dbg !5221

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %40 = load i1, i1* %retval.i.i, align 1, !dbg !5222
  %lnot.i = xor i1 %40, true, !dbg !5185
  %lnot.ext.i = zext i1 %40 to i32, !dbg !5185
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !5185
  br i1 %40, label %if.then.i, label %copy_to_user.exit, !dbg !5223

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %41 = load i8*, i8** %to.addr.i, align 8, !dbg !5224
  %42 = load i8*, i8** %from.addr.i, align 8, !dbg !5225
  %43 = load i64, i64* %n.addr.i, align 8, !dbg !5226
  %call2.i = call i64 @_copy_to_user(i8* %41, i8* %42, i64 %43) #13, !dbg !5227
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !5228
  br label %copy_to_user.exit, !dbg !5229

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %44 = load i64, i64* %n.addr.i, align 8, !dbg !5230
  %tobool21 = icmp ne i64 %44, 0, !dbg !5231
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !5232

if.then22:                                        ; preds = %copy_to_user.exit
  store i64 -14, i64* %ret, align 8, !dbg !5233
  br label %err, !dbg !5235

if.end23:                                         ; preds = %copy_to_user.exit
  %45 = load i32, i32* %len, align 4, !dbg !5236
  %conv24 = zext i32 %45 to i64, !dbg !5236
  %46 = load i64*, i64** %ppos.addr, align 8, !dbg !5237
  %47 = load i64, i64* %46, align 8, !dbg !5238
  %add = add i64 %47, %conv24, !dbg !5238
  store i64 %add, i64* %46, align 8, !dbg !5238
  %48 = load i32, i32* %len, align 4, !dbg !5239
  %49 = load i8*, i8** %buf.addr, align 8, !dbg !5240
  %idx.ext = zext i32 %48 to i64, !dbg !5240
  %add.ptr25 = getelementptr i8, i8* %49, i64 %idx.ext, !dbg !5240
  store i8* %add.ptr25, i8** %buf.addr, align 8, !dbg !5240
  %50 = load i32, i32* %len, align 4, !dbg !5241
  %conv26 = zext i32 %50 to i64, !dbg !5241
  %51 = load i64, i64* %nbytes.addr, align 8, !dbg !5242
  %sub27 = sub i64 %51, %conv26, !dbg !5242
  store i64 %sub27, i64* %nbytes.addr, align 8, !dbg !5242
  %52 = load i32, i32* %len, align 4, !dbg !5243
  %conv28 = zext i32 %52 to i64, !dbg !5243
  %53 = load i64, i64* %ret, align 8, !dbg !5244
  %add29 = add i64 %53, %conv28, !dbg !5244
  store i64 %add29, i64* %ret, align 8, !dbg !5244
  br label %if.end30, !dbg !5245

if.end30:                                         ; preds = %if.end23, %if.end4
  store i64 18, i64* %pos, align 8, !dbg !5246
  store i32 0, i32* %i, align 4, !dbg !5247
  br label %for.cond, !dbg !5248

for.cond:                                         ; preds = %for.inc, %if.end30
  %54 = load i64, i64* %nbytes.addr, align 8, !dbg !5249
  %tobool31 = icmp ne i64 %54, 0, !dbg !5249
  br i1 %tobool31, label %land.rhs, label %land.end, !dbg !5250

land.rhs:                                         ; preds = %for.cond
  %55 = load i32, i32* %i, align 4, !dbg !5251
  %56 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5252
  %descriptor32 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %56, i32 0, i32 15, !dbg !5253
  %bNumConfigurations = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor32, i32 0, i32 13, !dbg !5254
  %57 = load i8, i8* %bNumConfigurations, align 1, !dbg !5254
  %conv33 = zext i8 %57 to i32, !dbg !5252
  %cmp34 = icmp slt i32 %55, %conv33, !dbg !5255
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %58 = phi i1 [ false, %for.cond ], [ %cmp34, %land.rhs ], !dbg !5256
  br i1 %58, label %for.body, label %for.end, !dbg !5257

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.usb_config_descriptor** %config, metadata !5258, metadata !DIExpression()), !dbg !5259
  %59 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5260
  %rawdescriptors = getelementptr inbounds %struct.usb_device, %struct.usb_device* %59, i32 0, i32 22, !dbg !5261
  %60 = load i8**, i8*** %rawdescriptors, align 8, !dbg !5261
  %61 = load i32, i32* %i, align 4, !dbg !5262
  %idxprom = sext i32 %61 to i64, !dbg !5260
  %arrayidx = getelementptr i8*, i8** %60, i64 %idxprom, !dbg !5260
  %62 = load i8*, i8** %arrayidx, align 8, !dbg !5260
  %63 = bitcast i8* %62 to %struct.usb_config_descriptor*, !dbg !5263
  store %struct.usb_config_descriptor* %63, %struct.usb_config_descriptor** %config, align 8, !dbg !5259
  call void @llvm.dbg.declare(metadata i32* %length, metadata !5264, metadata !DIExpression()), !dbg !5265
  %64 = load %struct.usb_config_descriptor*, %struct.usb_config_descriptor** %config, align 8, !dbg !5266
  %wTotalLength = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %64, i32 0, i32 2, !dbg !5266
  %65 = load i16, i16* %wTotalLength, align 1, !dbg !5266
  %conv36 = zext i16 %65 to i32, !dbg !5266
  store i32 %conv36, i32* %length, align 4, !dbg !5265
  %66 = load i64*, i64** %ppos.addr, align 8, !dbg !5267
  %67 = load i64, i64* %66, align 8, !dbg !5268
  %68 = load i64, i64* %pos, align 8, !dbg !5269
  %69 = load i32, i32* %length, align 4, !dbg !5270
  %conv37 = zext i32 %69 to i64, !dbg !5270
  %add38 = add i64 %68, %conv37, !dbg !5271
  %cmp39 = icmp slt i64 %67, %add38, !dbg !5272
  br i1 %cmp39, label %if.then41, label %if.end87, !dbg !5273

if.then41:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %alloclen, metadata !5274, metadata !DIExpression()), !dbg !5275
  %70 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5276
  %config42 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %70, i32 0, i32 18, !dbg !5276
  %71 = load %struct.usb_host_config*, %struct.usb_host_config** %config42, align 8, !dbg !5276
  %72 = load i32, i32* %i, align 4, !dbg !5276
  %idxprom43 = sext i32 %72 to i64, !dbg !5276
  %arrayidx44 = getelementptr %struct.usb_host_config, %struct.usb_host_config* %71, i64 %idxprom43, !dbg !5276
  %desc = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %arrayidx44, i32 0, i32 0, !dbg !5276
  %wTotalLength45 = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %desc, i32 0, i32 2, !dbg !5276
  %73 = load i16, i16* %wTotalLength45, align 2, !dbg !5276
  %conv46 = zext i16 %73 to i32, !dbg !5276
  store i32 %conv46, i32* %alloclen, align 4, !dbg !5275
  %74 = load i32, i32* %length, align 4, !dbg !5277
  %conv47 = zext i32 %74 to i64, !dbg !5277
  %75 = load i64*, i64** %ppos.addr, align 8, !dbg !5278
  %76 = load i64, i64* %75, align 8, !dbg !5279
  %77 = load i64, i64* %pos, align 8, !dbg !5280
  %sub48 = sub i64 %76, %77, !dbg !5281
  %sub49 = sub i64 %conv47, %sub48, !dbg !5282
  %conv50 = trunc i64 %sub49 to i32, !dbg !5277
  store i32 %conv50, i32* %len, align 4, !dbg !5283
  %78 = load i32, i32* %len, align 4, !dbg !5284
  %conv51 = zext i32 %78 to i64, !dbg !5284
  %79 = load i64, i64* %nbytes.addr, align 8, !dbg !5286
  %cmp52 = icmp ugt i64 %conv51, %79, !dbg !5287
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !5288

if.then54:                                        ; preds = %if.then41
  %80 = load i64, i64* %nbytes.addr, align 8, !dbg !5289
  %conv55 = trunc i64 %80 to i32, !dbg !5289
  store i32 %conv55, i32* %len, align 4, !dbg !5290
  br label %if.end56, !dbg !5291

if.end56:                                         ; preds = %if.then54, %if.then41
  %81 = load i32, i32* %alloclen, align 4, !dbg !5292
  %conv57 = zext i32 %81 to i64, !dbg !5292
  %82 = load i64*, i64** %ppos.addr, align 8, !dbg !5293
  %83 = load i64, i64* %82, align 8, !dbg !5294
  %84 = load i64, i64* %pos, align 8, !dbg !5295
  %sub58 = sub i64 %83, %84, !dbg !5296
  %cmp59 = icmp sgt i64 %conv57, %sub58, !dbg !5297
  br i1 %cmp59, label %if.then61, label %if.end78, !dbg !5298

if.then61:                                        ; preds = %if.end56
  %85 = load i64*, i64** %ppos.addr, align 8, !dbg !5299
  %86 = load i64, i64* %85, align 8, !dbg !5300
  %87 = load i64, i64* %pos, align 8, !dbg !5301
  %sub62 = sub i64 %86, %87, !dbg !5302
  %88 = load i32, i32* %alloclen, align 4, !dbg !5303
  %conv63 = zext i32 %88 to i64, !dbg !5303
  %sub64 = sub i64 %conv63, %sub62, !dbg !5303
  %conv65 = trunc i64 %sub64 to i32, !dbg !5303
  store i32 %conv65, i32* %alloclen, align 4, !dbg !5303
  %89 = load i8*, i8** %buf.addr, align 8, !dbg !5304
  %90 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5305
  %rawdescriptors66 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %90, i32 0, i32 22, !dbg !5306
  %91 = load i8**, i8*** %rawdescriptors66, align 8, !dbg !5306
  %92 = load i32, i32* %i, align 4, !dbg !5307
  %idxprom67 = sext i32 %92 to i64, !dbg !5305
  %arrayidx68 = getelementptr i8*, i8** %91, i64 %idxprom67, !dbg !5305
  %93 = load i8*, i8** %arrayidx68, align 8, !dbg !5305
  %94 = load i64*, i64** %ppos.addr, align 8, !dbg !5308
  %95 = load i64, i64* %94, align 8, !dbg !5309
  %96 = load i64, i64* %pos, align 8, !dbg !5310
  %sub69 = sub i64 %95, %96, !dbg !5311
  %add.ptr70 = getelementptr i8, i8* %93, i64 %sub69, !dbg !5312
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x254, metadata !5313, metadata !DIExpression()), !dbg !5315
  %97 = load i32, i32* %len, align 4, !dbg !5315
  store i32 %97, i32* %__UNIQUE_ID___x254, align 4, !dbg !5315
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y255, metadata !5316, metadata !DIExpression()), !dbg !5315
  %98 = load i32, i32* %alloclen, align 4, !dbg !5315
  store i32 %98, i32* %__UNIQUE_ID___y255, align 4, !dbg !5315
  %99 = load i32, i32* %__UNIQUE_ID___x254, align 4, !dbg !5315
  %100 = load i32, i32* %__UNIQUE_ID___y255, align 4, !dbg !5315
  %cmp71 = icmp ult i32 %99, %100, !dbg !5315
  br i1 %cmp71, label %cond.true, label %cond.false, !dbg !5315

cond.true:                                        ; preds = %if.then61
  %101 = load i32, i32* %__UNIQUE_ID___x254, align 4, !dbg !5315
  br label %cond.end, !dbg !5315

cond.false:                                       ; preds = %if.then61
  %102 = load i32, i32* %__UNIQUE_ID___y255, align 4, !dbg !5315
  br label %cond.end, !dbg !5315

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %101, %cond.true ], [ %102, %cond.false ], !dbg !5315
  store i32 %cond, i32* %tmp, align 4, !dbg !5315
  %103 = load i32, i32* %tmp, align 4, !dbg !5315
  %conv73 = zext i32 %103 to i64, !dbg !5317
  store i8* %89, i8** %to.addr.i98, align 8
  store i8* %add.ptr70, i8** %from.addr.i99, align 8
  store i64 %conv73, i64* %n.addr.i100, align 8
  %104 = load i8*, i8** %from.addr.i99, align 8, !dbg !5318
  %105 = load i64, i64* %n.addr.i100, align 8, !dbg !5318
  store i8* %104, i8** %addr.addr.i.i92, align 8
  store i64 %105, i64* %bytes.addr.i.i93, align 8
  store i8 1, i8* %is_source.addr.i.i94, align 1
  store i32 -1, i32* %sz.i.i95, align 4, !dbg !5082
  %106 = load i32, i32* %sz.i.i95, align 4, !dbg !5319
  %cmp.i.i101 = icmp sge i32 %106, 0, !dbg !5319
  br i1 %cmp.i.i101, label %land.rhs.i.i104, label %land.end.i.i108, !dbg !5319

land.rhs.i.i104:                                  ; preds = %cond.end
  %107 = load i32, i32* %sz.i.i95, align 4, !dbg !5319
  %conv.i.i102 = sext i32 %107 to i64, !dbg !5319
  %108 = load i64, i64* %bytes.addr.i.i93, align 8, !dbg !5319
  %cmp1.i.i103 = icmp ult i64 %conv.i.i102, %108, !dbg !5319
  br label %land.end.i.i108

land.end.i.i108:                                  ; preds = %land.rhs.i.i104, %cond.end
  %109 = phi i1 [ false, %cond.end ], [ %cmp1.i.i103, %land.rhs.i.i104 ], !dbg !5320
  %lnot.i.i105 = xor i1 %109, true, !dbg !5319
  %lnot.ext.i.i106 = zext i1 %109 to i32, !dbg !5319
  %conv4.i.i107 = sext i32 %lnot.ext.i.i106 to i64, !dbg !5319
  br i1 %109, label %if.then.i.i109, label %if.end10.i.i124, !dbg !5321

if.then.i.i109:                                   ; preds = %land.end.i.i108
  %110 = load i64, i64* %bytes.addr.i.i93, align 8, !dbg !5322
  %111 = call i1 @llvm.is.constant.i64(i64 %110) #7, !dbg !5323
  br i1 %111, label %if.else.i.i112, label %if.then5.i.i110, !dbg !5324

if.then5.i.i110:                                  ; preds = %if.then.i.i109
  %112 = load i32, i32* %sz.i.i95, align 4, !dbg !5325
  %113 = load i64, i64* %bytes.addr.i.i93, align 8, !dbg !5326
  call void @copy_overflow(i32 %112, i64 %113) #13, !dbg !5327
  br label %if.end9.i.i116, !dbg !5327

if.else.i.i112:                                   ; preds = %if.then.i.i109
  %114 = load i8, i8* %is_source.addr.i.i94, align 1, !dbg !5328
  %tobool6.i.i111 = trunc i8 %114 to i1, !dbg !5328
  br i1 %tobool6.i.i111, label %if.then7.i.i113, label %if.else8.i.i114, !dbg !5329

if.then7.i.i113:                                  ; preds = %if.else.i.i112
  call void @__bad_copy_from() #13, !dbg !5330
  br label %if.end.i.i115, !dbg !5330

if.else8.i.i114:                                  ; preds = %if.else.i.i112
  call void @__bad_copy_to() #13, !dbg !5331
  br label %if.end.i.i115

if.end.i.i115:                                    ; preds = %if.else8.i.i114, %if.then7.i.i113
  br label %if.end9.i.i116

if.end9.i.i116:                                   ; preds = %if.end.i.i115, %if.then5.i.i110
  store i1 false, i1* %retval.i.i91, align 1, !dbg !5332
  br label %check_copy_size.exit.i138, !dbg !5332

if.end10.i.i124:                                  ; preds = %land.end.i.i108
  %115 = load i64, i64* %bytes.addr.i.i93, align 8, !dbg !5086
  %cmp11.i.i117 = icmp ugt i64 %115, 2147483647, !dbg !5086
  %lnot13.i.i118 = xor i1 %cmp11.i.i117, true, !dbg !5086
  %lnot.ext16.i.i119 = zext i1 %cmp11.i.i117 to i32, !dbg !5086
  store i32 %lnot.ext16.i.i119, i32* %__ret_warn_on.i.i96, align 4, !dbg !5086
  %116 = load i32, i32* %__ret_warn_on.i.i96, align 4, !dbg !5333
  %tobool17.i.i120 = icmp ne i32 %116, 0, !dbg !5333
  %lnot18.i.i121 = xor i1 %tobool17.i.i120, true, !dbg !5333
  %lnot.ext21.i.i122 = zext i1 %tobool17.i.i120 to i32, !dbg !5333
  %conv22.i.i123 = sext i32 %lnot.ext21.i.i122 to i64, !dbg !5333
  br i1 %tobool17.i.i120, label %if.then24.i.i125, label %if.end31.i.i131, !dbg !5086

if.then24.i.i125:                                 ; preds = %if.end10.i.i124
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !5334, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !5335, !srcloc !5212
  br label %if.end31.i.i131, !dbg !5336

if.end31.i.i131:                                  ; preds = %if.then24.i.i125, %if.end10.i.i124
  %117 = load i32, i32* %__ret_warn_on.i.i96, align 4, !dbg !5086
  %tobool32.i.i126 = icmp ne i32 %117, 0, !dbg !5086
  %lnot33.i.i127 = xor i1 %tobool32.i.i126, true, !dbg !5086
  %lnot.ext36.i.i128 = zext i1 %tobool32.i.i126 to i32, !dbg !5086
  %conv37.i.i129 = sext i32 %lnot.ext36.i.i128 to i64, !dbg !5086
  store i64 %conv37.i.i129, i64* %tmp.i.i97, align 8, !dbg !5333
  %118 = load i64, i64* %tmp.i.i97, align 8, !dbg !5086
  %tobool38.i.i130 = icmp ne i64 %118, 0, !dbg !5337
  br i1 %tobool38.i.i130, label %if.then39.i.i132, label %if.end40.i.i134, !dbg !5338

if.then39.i.i132:                                 ; preds = %if.end31.i.i131
  store i1 false, i1* %retval.i.i91, align 1, !dbg !5339
  br label %check_copy_size.exit.i138, !dbg !5339

if.end40.i.i134:                                  ; preds = %if.end31.i.i131
  %119 = load i8*, i8** %addr.addr.i.i92, align 8, !dbg !5340
  %120 = load i64, i64* %bytes.addr.i.i93, align 8, !dbg !5341
  %121 = load i8, i8* %is_source.addr.i.i94, align 1, !dbg !5342
  %tobool41.i.i133 = trunc i8 %121 to i1, !dbg !5342
  call void @check_object_size(i8* %119, i64 %120, i1 zeroext %tobool41.i.i133) #13, !dbg !5343
  store i1 true, i1* %retval.i.i91, align 1, !dbg !5344
  br label %check_copy_size.exit.i138, !dbg !5344

check_copy_size.exit.i138:                        ; preds = %if.end40.i.i134, %if.then39.i.i132, %if.end9.i.i116
  %122 = load i1, i1* %retval.i.i91, align 1, !dbg !5345
  %lnot.i135 = xor i1 %122, true, !dbg !5318
  %lnot.ext.i136 = zext i1 %122 to i32, !dbg !5318
  %conv.i137 = sext i32 %lnot.ext.i136 to i64, !dbg !5318
  br i1 %122, label %if.then.i140, label %copy_to_user.exit141, !dbg !5346

if.then.i140:                                     ; preds = %check_copy_size.exit.i138
  %123 = load i8*, i8** %to.addr.i98, align 8, !dbg !5347
  %124 = load i8*, i8** %from.addr.i99, align 8, !dbg !5348
  %125 = load i64, i64* %n.addr.i100, align 8, !dbg !5349
  %call2.i139 = call i64 @_copy_to_user(i8* %123, i8* %124, i64 %125) #13, !dbg !5350
  store i64 %call2.i139, i64* %n.addr.i100, align 8, !dbg !5351
  br label %copy_to_user.exit141, !dbg !5352

copy_to_user.exit141:                             ; preds = %check_copy_size.exit.i138, %if.then.i140
  %126 = load i64, i64* %n.addr.i100, align 8, !dbg !5353
  %tobool75 = icmp ne i64 %126, 0, !dbg !5354
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !5355

if.then76:                                        ; preds = %copy_to_user.exit141
  store i64 -14, i64* %ret, align 8, !dbg !5356
  br label %err, !dbg !5358

if.end77:                                         ; preds = %copy_to_user.exit141
  br label %if.end78, !dbg !5359

if.end78:                                         ; preds = %if.end77, %if.end56
  %127 = load i32, i32* %len, align 4, !dbg !5360
  %conv79 = zext i32 %127 to i64, !dbg !5360
  %128 = load i64*, i64** %ppos.addr, align 8, !dbg !5361
  %129 = load i64, i64* %128, align 8, !dbg !5362
  %add80 = add i64 %129, %conv79, !dbg !5362
  store i64 %add80, i64* %128, align 8, !dbg !5362
  %130 = load i32, i32* %len, align 4, !dbg !5363
  %131 = load i8*, i8** %buf.addr, align 8, !dbg !5364
  %idx.ext81 = zext i32 %130 to i64, !dbg !5364
  %add.ptr82 = getelementptr i8, i8* %131, i64 %idx.ext81, !dbg !5364
  store i8* %add.ptr82, i8** %buf.addr, align 8, !dbg !5364
  %132 = load i32, i32* %len, align 4, !dbg !5365
  %conv83 = zext i32 %132 to i64, !dbg !5365
  %133 = load i64, i64* %nbytes.addr, align 8, !dbg !5366
  %sub84 = sub i64 %133, %conv83, !dbg !5366
  store i64 %sub84, i64* %nbytes.addr, align 8, !dbg !5366
  %134 = load i32, i32* %len, align 4, !dbg !5367
  %conv85 = zext i32 %134 to i64, !dbg !5367
  %135 = load i64, i64* %ret, align 8, !dbg !5368
  %add86 = add i64 %135, %conv85, !dbg !5368
  store i64 %add86, i64* %ret, align 8, !dbg !5368
  br label %if.end87, !dbg !5369

if.end87:                                         ; preds = %if.end78, %for.body
  %136 = load i32, i32* %length, align 4, !dbg !5370
  %conv88 = zext i32 %136 to i64, !dbg !5370
  %137 = load i64, i64* %pos, align 8, !dbg !5371
  %add89 = add i64 %137, %conv88, !dbg !5371
  store i64 %add89, i64* %pos, align 8, !dbg !5371
  br label %for.inc, !dbg !5372

for.inc:                                          ; preds = %if.end87
  %138 = load i32, i32* %i, align 4, !dbg !5373
  %inc = add i32 %138, 1, !dbg !5373
  store i32 %inc, i32* %i, align 4, !dbg !5373
  br label %for.cond, !dbg !5374, !llvm.loop !5375

for.end:                                          ; preds = %land.end
  br label %err, !dbg !5376

err:                                              ; preds = %for.end, %if.then76, %if.then22, %if.then3, %if.then
  call void @llvm.dbg.label(metadata !5377), !dbg !5378
  %139 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5379
  %dev90 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %139, i32 0, i32 14, !dbg !5379
  call void @device_unlock(%struct.device* %dev90) #11, !dbg !5379
  %140 = load i64, i64* %ret, align 8, !dbg !5380
  ret i64 %140, !dbg !5381
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usbdev_poll(%struct.file* %file, %struct.poll_table_struct* %wait) #0 !dbg !5382 {
entry:
  %file.addr = alloca %struct.file*, align 8
  %wait.addr = alloca %struct.poll_table_struct*, align 8
  %ps = alloca %struct.usb_dev_state*, align 8
  %mask = alloca i32, align 4
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !5383, metadata !DIExpression()), !dbg !5384
  store %struct.poll_table_struct* %wait, %struct.poll_table_struct** %wait.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %wait.addr, metadata !5385, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps, metadata !5387, metadata !DIExpression()), !dbg !5388
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5389
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !5390
  %1 = load i8*, i8** %private_data, align 8, !dbg !5390
  %2 = bitcast i8* %1 to %struct.usb_dev_state*, !dbg !5389
  store %struct.usb_dev_state* %2, %struct.usb_dev_state** %ps, align 8, !dbg !5388
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !5391, metadata !DIExpression()), !dbg !5392
  store i32 0, i32* %mask, align 4, !dbg !5392
  %3 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5393
  %4 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5394
  %wait1 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %4, i32 0, i32 7, !dbg !5395
  %5 = load %struct.poll_table_struct*, %struct.poll_table_struct** %wait.addr, align 8, !dbg !5396
  call void @poll_wait(%struct.file* %3, %struct.wait_queue_head* %wait1, %struct.poll_table_struct* %5) #11, !dbg !5397
  %6 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5398
  %f_mode = getelementptr inbounds %struct.file, %struct.file* %6, i32 0, i32 8, !dbg !5400
  %7 = load i32, i32* %f_mode, align 4, !dbg !5400
  %and = and i32 %7, 2, !dbg !5401
  %tobool = icmp ne i32 %and, 0, !dbg !5401
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5402

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5403
  %async_completed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 5, !dbg !5404
  %call = call i32 @list_empty(%struct.list_head* %async_completed) #11, !dbg !5405
  %tobool2 = icmp ne i32 %call, 0, !dbg !5405
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5406

if.then:                                          ; preds = %land.lhs.true
  %9 = load i32, i32* %mask, align 4, !dbg !5407
  %or = or i32 %9, 260, !dbg !5407
  store i32 %or, i32* %mask, align 4, !dbg !5407
  br label %if.end, !dbg !5408

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5409
  %call3 = call i32 @connected(%struct.usb_dev_state* %10) #11, !dbg !5411
  %tobool4 = icmp ne i32 %call3, 0, !dbg !5411
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !5412

if.then5:                                         ; preds = %if.end
  %11 = load i32, i32* %mask, align 4, !dbg !5413
  %or6 = or i32 %11, 16, !dbg !5413
  store i32 %or6, i32* %mask, align 4, !dbg !5413
  br label %if.end7, !dbg !5414

if.end7:                                          ; preds = %if.then5, %if.end
  %12 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5415
  %list = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %12, i32 0, i32 0, !dbg !5417
  %call8 = call i32 @list_empty(%struct.list_head* %list) #11, !dbg !5418
  %tobool9 = icmp ne i32 %call8, 0, !dbg !5418
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !5419

if.then10:                                        ; preds = %if.end7
  %13 = load i32, i32* %mask, align 4, !dbg !5420
  %or11 = or i32 %13, 8, !dbg !5420
  store i32 %or11, i32* %mask, align 4, !dbg !5420
  br label %if.end12, !dbg !5421

if.end12:                                         ; preds = %if.then10, %if.end7
  %14 = load i32, i32* %mask, align 4, !dbg !5422
  ret i32 %14, !dbg !5423
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @usbdev_ioctl(%struct.file* %file, i32 %cmd, i64 %arg) #0 !dbg !5424 {
entry:
  %file.addr = alloca %struct.file*, align 8
  %cmd.addr = alloca i32, align 4
  %arg.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !5425, metadata !DIExpression()), !dbg !5426
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !5427, metadata !DIExpression()), !dbg !5428
  store i64 %arg, i64* %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %arg.addr, metadata !5429, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5431, metadata !DIExpression()), !dbg !5432
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5433
  %1 = load i32, i32* %cmd.addr, align 4, !dbg !5434
  %2 = load i64, i64* %arg.addr, align 8, !dbg !5435
  %3 = inttoptr i64 %2 to i8*, !dbg !5436
  %call = call i64 @usbdev_do_ioctl(%struct.file* %0, i32 %1, i8* %3) #11, !dbg !5437
  %conv = trunc i64 %call to i32, !dbg !5437
  store i32 %conv, i32* %ret, align 4, !dbg !5438
  %4 = load i32, i32* %ret, align 4, !dbg !5439
  %conv1 = sext i32 %4 to i64, !dbg !5439
  ret i64 %conv1, !dbg !5440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usbdev_mmap(%struct.file* %file, %struct.vm_area_struct* %vma) #0 !dbg !5441 {
entry:
  %lock.addr.i60 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i60, metadata !5442, metadata !DIExpression()), !dbg !5447
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5449, metadata !DIExpression()), !dbg !5450
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5451, metadata !DIExpression()), !dbg !5456
  %retval = alloca i32, align 4
  %file.addr = alloca %struct.file*, align 8
  %vma.addr = alloca %struct.vm_area_struct*, align 8
  %usbm = alloca %struct.usb_memory*, align 8
  %ps = alloca %struct.usb_dev_state*, align 8
  %hcd = alloca %struct.usb_hcd*, align 8
  %size = alloca i64, align 8
  %mem = alloca i8*, align 8
  %flags = alloca i64, align 8
  %dma_handle = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy42 = alloca i64, align 8
  %__dummy243 = alloca i64, align 8
  %tmp46 = alloca i32, align 4
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !5463, metadata !DIExpression()), !dbg !5464
  store %struct.vm_area_struct* %vma, %struct.vm_area_struct** %vma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vm_area_struct** %vma.addr, metadata !5465, metadata !DIExpression()), !dbg !5466
  call void @llvm.dbg.declare(metadata %struct.usb_memory** %usbm, metadata !5467, metadata !DIExpression()), !dbg !5468
  store %struct.usb_memory* null, %struct.usb_memory** %usbm, align 8, !dbg !5468
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps, metadata !5469, metadata !DIExpression()), !dbg !5470
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5471
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !5472
  %1 = load i8*, i8** %private_data, align 8, !dbg !5472
  %2 = bitcast i8* %1 to %struct.usb_dev_state*, !dbg !5471
  store %struct.usb_dev_state* %2, %struct.usb_dev_state** %ps, align 8, !dbg !5470
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd, metadata !5473, metadata !DIExpression()), !dbg !5474
  %3 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5475
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %3, i32 0, i32 1, !dbg !5476
  %4 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5476
  %bus = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 12, !dbg !5477
  %5 = load %struct.usb_bus*, %struct.usb_bus** %bus, align 8, !dbg !5477
  %call = call %struct.usb_hcd* @bus_to_hcd(%struct.usb_bus* %5) #11, !dbg !5478
  store %struct.usb_hcd* %call, %struct.usb_hcd** %hcd, align 8, !dbg !5474
  call void @llvm.dbg.declare(metadata i64* %size, metadata !5479, metadata !DIExpression()), !dbg !5480
  %6 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5481
  %vm_end = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %6, i32 0, i32 1, !dbg !5482
  %7 = load i64, i64* %vm_end, align 8, !dbg !5482
  %8 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5483
  %vm_start = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %8, i32 0, i32 0, !dbg !5484
  %9 = load i64, i64* %vm_start, align 8, !dbg !5484
  %sub = sub i64 %7, %9, !dbg !5485
  store i64 %sub, i64* %size, align 8, !dbg !5480
  call void @llvm.dbg.declare(metadata i8** %mem, metadata !5486, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5488, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.declare(metadata i64* %dma_handle, metadata !5490, metadata !DIExpression()), !dbg !5491
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5492, metadata !DIExpression()), !dbg !5493
  %10 = load i64, i64* %size, align 8, !dbg !5494
  %add = add i64 %10, 64, !dbg !5495
  %call1 = call i32 @usbfs_increase_memory_usage(i64 %add) #11, !dbg !5496
  store i32 %call1, i32* %ret, align 4, !dbg !5497
  %11 = load i32, i32* %ret, align 4, !dbg !5498
  %tobool = icmp ne i32 %11, 0, !dbg !5498
  br i1 %tobool, label %if.then, label %if.end, !dbg !5500

if.then:                                          ; preds = %entry
  br label %error, !dbg !5501

if.end:                                           ; preds = %entry
  %call2 = call i8* @kzalloc(i64 64, i32 3264) #11, !dbg !5502
  %12 = bitcast i8* %call2 to %struct.usb_memory*, !dbg !5502
  store %struct.usb_memory* %12, %struct.usb_memory** %usbm, align 8, !dbg !5503
  %13 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5504
  %tobool3 = icmp ne %struct.usb_memory* %13, null, !dbg !5504
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !5506

if.then4:                                         ; preds = %if.end
  store i32 -12, i32* %ret, align 4, !dbg !5507
  br label %error_decrease_mem, !dbg !5509

if.end5:                                          ; preds = %if.end
  %14 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5510
  %dev6 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %14, i32 0, i32 1, !dbg !5511
  %15 = load %struct.usb_device*, %struct.usb_device** %dev6, align 8, !dbg !5511
  %16 = load i64, i64* %size, align 8, !dbg !5512
  %call7 = call i8* @usb_alloc_coherent(%struct.usb_device* %15, i64 %16, i32 1060032, i64* %dma_handle) #11, !dbg !5513
  store i8* %call7, i8** %mem, align 8, !dbg !5514
  %17 = load i8*, i8** %mem, align 8, !dbg !5515
  %tobool8 = icmp ne i8* %17, null, !dbg !5515
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !5517

if.then9:                                         ; preds = %if.end5
  store i32 -12, i32* %ret, align 4, !dbg !5518
  br label %error_free_usbm, !dbg !5520

if.end10:                                         ; preds = %if.end5
  %18 = load i8*, i8** %mem, align 8, !dbg !5521
  %19 = load i64, i64* %size, align 8, !dbg !5522
  call void @llvm.memset.p0i8.i64(i8* align 1 %18, i8 0, i64 %19, i1 false), !dbg !5523
  %20 = load i8*, i8** %mem, align 8, !dbg !5524
  %21 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5525
  %mem11 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %21, i32 0, i32 4, !dbg !5526
  store i8* %20, i8** %mem11, align 8, !dbg !5527
  %22 = load i64, i64* %dma_handle, align 8, !dbg !5528
  %23 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5529
  %dma_handle12 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %23, i32 0, i32 5, !dbg !5530
  store i64 %22, i64* %dma_handle12, align 8, !dbg !5531
  %24 = load i64, i64* %size, align 8, !dbg !5532
  %conv = trunc i64 %24 to i32, !dbg !5532
  %25 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5533
  %size13 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %25, i32 0, i32 3, !dbg !5534
  store i32 %conv, i32* %size13, align 8, !dbg !5535
  %26 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5536
  %27 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5537
  %ps14 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %27, i32 0, i32 7, !dbg !5538
  store %struct.usb_dev_state* %26, %struct.usb_dev_state** %ps14, align 8, !dbg !5539
  %28 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5540
  %vm_start15 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %28, i32 0, i32 0, !dbg !5541
  %29 = load i64, i64* %vm_start15, align 8, !dbg !5541
  %30 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5542
  %vm_start16 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %30, i32 0, i32 6, !dbg !5543
  store i64 %29, i64* %vm_start16, align 8, !dbg !5544
  %31 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5545
  %vma_use_count = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %31, i32 0, i32 1, !dbg !5546
  store i32 1, i32* %vma_use_count, align 8, !dbg !5547
  %32 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5548
  %memlist = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %32, i32 0, i32 0, !dbg !5549
  call void @INIT_LIST_HEAD(%struct.list_head* %memlist) #11, !dbg !5550
  %33 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !5551
  %localmem_pool = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %33, i32 0, i32 28, !dbg !5553
  %34 = load %struct.gen_pool*, %struct.gen_pool** %localmem_pool, align 8, !dbg !5553
  %tobool17 = icmp ne %struct.gen_pool* %34, null, !dbg !5551
  br i1 %tobool17, label %if.then19, label %lor.lhs.false, !dbg !5554

lor.lhs.false:                                    ; preds = %if.end10
  %35 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !5555
  %call18 = call zeroext i1 @hcd_uses_dma(%struct.usb_hcd* %35) #11, !dbg !5556
  br i1 %call18, label %if.else, label %if.then19, !dbg !5557

if.then19:                                        ; preds = %lor.lhs.false, %if.end10
  %36 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5558
  %37 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5561
  %vm_start20 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %37, i32 0, i32 0, !dbg !5562
  %38 = load i64, i64* %vm_start20, align 8, !dbg !5562
  %39 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5563
  %mem21 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %39, i32 0, i32 4, !dbg !5564
  %40 = load i8*, i8** %mem21, align 8, !dbg !5564
  %call22 = call i64 @virt_to_phys(i8* %40) #11, !dbg !5565
  %shr = lshr i64 %call22, 12, !dbg !5566
  %41 = load i64, i64* %size, align 8, !dbg !5567
  %42 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5568
  %vm_page_prot = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %42, i32 0, i32 7, !dbg !5569
  %coerce.dive = getelementptr inbounds %struct.pgprot, %struct.pgprot* %vm_page_prot, i32 0, i32 0, !dbg !5570
  %43 = load i64, i64* %coerce.dive, align 8, !dbg !5570
  %call23 = call i32 @remap_pfn_range(%struct.vm_area_struct* %36, i64 %38, i64 %shr, i64 %41, i64 %43) #11, !dbg !5570
  %cmp = icmp slt i32 %call23, 0, !dbg !5571
  br i1 %cmp, label %if.then25, label %if.end27, !dbg !5572

if.then25:                                        ; preds = %if.then19
  %44 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5573
  %45 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5575
  %vma_use_count26 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %45, i32 0, i32 1, !dbg !5576
  call void @dec_usb_memory_use_count(%struct.usb_memory* %44, i32* %vma_use_count26) #11, !dbg !5577
  store i32 -11, i32* %retval, align 4, !dbg !5578
  br label %return, !dbg !5578

if.end27:                                         ; preds = %if.then19
  br label %if.end33, !dbg !5579

if.else:                                          ; preds = %lor.lhs.false
  %46 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !5580
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %46, i32 0, i32 0, !dbg !5580
  %sysdev = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 1, !dbg !5580
  %47 = load %struct.device*, %struct.device** %sysdev, align 8, !dbg !5580
  %48 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5580
  %49 = load i8*, i8** %mem, align 8, !dbg !5580
  %50 = load i64, i64* %dma_handle, align 8, !dbg !5580
  %51 = load i64, i64* %size, align 8, !dbg !5580
  %call28 = call i32 @dma_mmap_attrs(%struct.device* %47, %struct.vm_area_struct* %48, i8* %49, i64 %50, i64 %51, i64 0) #11, !dbg !5580
  %tobool29 = icmp ne i32 %call28, 0, !dbg !5580
  br i1 %tobool29, label %if.then30, label %if.end32, !dbg !5583

if.then30:                                        ; preds = %if.else
  %52 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5584
  %53 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5586
  %vma_use_count31 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %53, i32 0, i32 1, !dbg !5587
  call void @dec_usb_memory_use_count(%struct.usb_memory* %52, i32* %vma_use_count31) #11, !dbg !5588
  store i32 -11, i32* %retval, align 4, !dbg !5589
  br label %return, !dbg !5589

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end27
  %54 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5590
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %54, i32 0, i32 8, !dbg !5591
  %55 = load i64, i64* %vm_flags, align 8, !dbg !5592
  %or = or i64 %55, 16384, !dbg !5592
  store i64 %or, i64* %vm_flags, align 8, !dbg !5592
  %56 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5593
  %vm_flags34 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %56, i32 0, i32 8, !dbg !5594
  %57 = load i64, i64* %vm_flags34, align 8, !dbg !5595
  %or35 = or i64 %57, 67371008, !dbg !5595
  store i64 %or35, i64* %vm_flags34, align 8, !dbg !5595
  %58 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5596
  %vm_ops = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %58, i32 0, i32 12, !dbg !5597
  store %struct.vm_operations_struct* @usbdev_vm_ops, %struct.vm_operations_struct** %vm_ops, align 8, !dbg !5598
  %59 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5599
  %60 = bitcast %struct.usb_memory* %59 to i8*, !dbg !5599
  %61 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !5600
  %vm_private_data = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %61, i32 0, i32 15, !dbg !5601
  store i8* %60, i8** %vm_private_data, align 8, !dbg !5602
  br label %do.body, !dbg !5603

do.body:                                          ; preds = %if.end33
  br label %do.body36, !dbg !5604

do.body36:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5605, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5608, metadata !DIExpression()), !dbg !5607
  %cmp37 = icmp eq i64* %__dummy, %__dummy2, !dbg !5607
  %conv38 = zext i1 %cmp37 to i32, !dbg !5607
  store i32 1, i32* %tmp, align 4, !dbg !5607
  %62 = load i32, i32* %tmp, align 4, !dbg !5607
  br label %do.body39, !dbg !5609

do.body39:                                        ; preds = %do.body36
  br label %do.body40, !dbg !5610

do.body40:                                        ; preds = %do.body39
  br label %do.body41, !dbg !5611

do.body41:                                        ; preds = %do.body40
  call void @llvm.dbg.declare(metadata i64* %__dummy42, metadata !5613, metadata !DIExpression()), !dbg !5616
  call void @llvm.dbg.declare(metadata i64* %__dummy243, metadata !5617, metadata !DIExpression()), !dbg !5616
  %cmp44 = icmp eq i64* %__dummy42, %__dummy243, !dbg !5616
  %conv45 = zext i1 %cmp44 to i32, !dbg !5616
  store i32 1, i32* %tmp46, align 4, !dbg !5616
  %63 = load i32, i32* %tmp46, align 4, !dbg !5616
  %call47 = call i64 @arch_local_irq_save() #11, !dbg !5618
  store i64 %call47, i64* %flags, align 8, !dbg !5618
  br label %do.end, !dbg !5618

do.end:                                           ; preds = %do.body41
  br label %do.end48, !dbg !5611

do.end48:                                         ; preds = %do.end
  br label %do.body49, !dbg !5610

do.body49:                                        ; preds = %do.end48
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5619, !srcloc !5620
  br label %do.body50, !dbg !5619

do.body50:                                        ; preds = %do.body49
  %64 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5621
  %lock = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %64, i32 0, i32 3, !dbg !5621
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %65 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5622
  %66 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %65, i32 0, i32 0, !dbg !5623
  %rlock.i = bitcast %union.anon.0* %66 to %struct.raw_spinlock*, !dbg !5623
  br label %do.end52, !dbg !5621

do.end52:                                         ; preds = %do.body50
  br label %do.end53, !dbg !5619

do.end53:                                         ; preds = %do.end52
  br label %do.end54, !dbg !5610

do.end54:                                         ; preds = %do.end53
  br label %do.end55, !dbg !5609

do.end55:                                         ; preds = %do.end54
  br label %do.end56, !dbg !5604

do.end56:                                         ; preds = %do.end55
  %67 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5624
  %memlist57 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %67, i32 0, i32 0, !dbg !5625
  %68 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5626
  %memory_list = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %68, i32 0, i32 6, !dbg !5627
  call void @list_add_tail(%struct.list_head* %memlist57, %struct.list_head* %memory_list) #11, !dbg !5628
  %69 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5629
  %lock58 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %69, i32 0, i32 3, !dbg !5630
  %70 = load i64, i64* %flags, align 8, !dbg !5631
  store %struct.spinlock* %lock58, %struct.spinlock** %lock.addr.i60, align 8
  store i64 %70, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !243, metadata !5632, metadata !DIExpression()) #7, !dbg !5635
  call void @llvm.dbg.declare(metadata !243, metadata !5636, metadata !DIExpression()) #7, !dbg !5635
  store i32 1, i32* %tmp.i, align 4, !dbg !5635
  %71 = load i32, i32* %tmp.i, align 4, !dbg !5635
  call void @llvm.dbg.declare(metadata !243, metadata !5637, metadata !DIExpression()) #7, !dbg !5642
  call void @llvm.dbg.declare(metadata !243, metadata !5643, metadata !DIExpression()) #7, !dbg !5642
  store i32 1, i32* %tmp8.i, align 4, !dbg !5642
  %72 = load i32, i32* %tmp8.i, align 4, !dbg !5642
  %73 = load i64, i64* %flags.addr.i, align 8, !dbg !5644
  call void @arch_local_irq_restore(i64 %73) #13, !dbg !5644
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5645, !srcloc !5647
  %74 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i60, align 8, !dbg !5648
  %75 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %74, i32 0, i32 0, !dbg !5648
  %rlock.i61 = bitcast %union.anon.0* %75 to %struct.raw_spinlock*, !dbg !5648
  store i32 0, i32* %retval, align 4, !dbg !5650
  br label %return, !dbg !5650

error_free_usbm:                                  ; preds = %if.then9
  call void @llvm.dbg.label(metadata !5651), !dbg !5652
  %76 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !5653
  %77 = bitcast %struct.usb_memory* %76 to i8*, !dbg !5653
  call void @kfree(i8* %77) #11, !dbg !5654
  br label %error_decrease_mem, !dbg !5654

error_decrease_mem:                               ; preds = %error_free_usbm, %if.then4
  call void @llvm.dbg.label(metadata !5655), !dbg !5656
  %78 = load i64, i64* %size, align 8, !dbg !5657
  %add59 = add i64 %78, 64, !dbg !5658
  call void @usbfs_decrease_memory_usage(i64 %add59) #11, !dbg !5659
  br label %error, !dbg !5659

error:                                            ; preds = %error_decrease_mem, %if.then
  call void @llvm.dbg.label(metadata !5660), !dbg !5661
  %79 = load i32, i32* %ret, align 4, !dbg !5662
  store i32 %79, i32* %retval, align 4, !dbg !5663
  br label %return, !dbg !5663

return:                                           ; preds = %error, %do.end56, %if.then30, %if.then25
  %80 = load i32, i32* %retval, align 4, !dbg !5664
  ret i32 %80, !dbg !5664
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usbdev_open(%struct.inode* %inode, %struct.file* %file) #0 !dbg !4945 {
entry:
  %pscr_ret__.i54 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i54, metadata !5665, metadata !DIExpression()), !dbg !5671
  %__vpp_verify.i55 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i55, metadata !5675, metadata !DIExpression()), !dbg !5677
  %pfo_val__.i56 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i56, metadata !5678, metadata !DIExpression()), !dbg !5680
  %tmp.i57 = alloca %struct.task_struct*, align 8
  %tmp1.i58 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i49 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i49, metadata !5665, metadata !DIExpression()), !dbg !5681
  %__vpp_verify.i50 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i50, metadata !5675, metadata !DIExpression()), !dbg !5683
  %pfo_val__.i51 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i51, metadata !5678, metadata !DIExpression()), !dbg !5684
  %tmp.i52 = alloca %struct.task_struct*, align 8
  %tmp1.i53 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i44 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i44, metadata !5665, metadata !DIExpression()), !dbg !5685
  %__vpp_verify.i45 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i45, metadata !5675, metadata !DIExpression()), !dbg !5688
  %pfo_val__.i46 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i46, metadata !5678, metadata !DIExpression()), !dbg !5689
  %tmp.i47 = alloca %struct.task_struct*, align 8
  %tmp1.i48 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5665, metadata !DIExpression()), !dbg !5690
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !5675, metadata !DIExpression()), !dbg !5692
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !5678, metadata !DIExpression()), !dbg !5693
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5451, metadata !DIExpression()), !dbg !5694
  %retval = alloca i32, align 4
  %inode.addr = alloca %struct.inode*, align 8
  %file.addr = alloca %struct.file*, align 8
  %dev = alloca %struct.usb_device*, align 8
  %ps = alloca %struct.usb_dev_state*, align 8
  %ret = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  %tmp = alloca %struct.cred*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !5697, metadata !DIExpression()), !dbg !5698
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !5699, metadata !DIExpression()), !dbg !5700
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev, metadata !5701, metadata !DIExpression()), !dbg !5702
  store %struct.usb_device* null, %struct.usb_device** %dev, align 8, !dbg !5702
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps, metadata !5703, metadata !DIExpression()), !dbg !5704
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5705, metadata !DIExpression()), !dbg !5706
  store i32 -12, i32* %ret, align 4, !dbg !5707
  %call = call i8* @kzalloc(i64 176, i32 3264) #11, !dbg !5708
  %0 = bitcast i8* %call to %struct.usb_dev_state*, !dbg !5708
  store %struct.usb_dev_state* %0, %struct.usb_dev_state** %ps, align 8, !dbg !5709
  %1 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5710
  %tobool = icmp ne %struct.usb_dev_state* %1, null, !dbg !5710
  br i1 %tobool, label %if.end, label %if.then, !dbg !5712

if.then:                                          ; preds = %entry
  br label %out_free_ps, !dbg !5713

if.end:                                           ; preds = %entry
  store i32 -19, i32* %ret, align 4, !dbg !5714
  %2 = load %struct.inode*, %struct.inode** %inode.addr, align 8, !dbg !5715
  %call1 = call i32 @imajor(%struct.inode* %2) #11, !dbg !5717
  %cmp = icmp eq i32 %call1, 189, !dbg !5718
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !5719

if.then2:                                         ; preds = %if.end
  %3 = load %struct.inode*, %struct.inode** %inode.addr, align 8, !dbg !5720
  %i_rdev = getelementptr inbounds %struct.inode, %struct.inode* %3, i32 0, i32 10, !dbg !5721
  %4 = load i32, i32* %i_rdev, align 4, !dbg !5721
  %call3 = call %struct.usb_device* @usbdev_lookup_by_devt(i32 %4) #11, !dbg !5722
  store %struct.usb_device* %call3, %struct.usb_device** %dev, align 8, !dbg !5723
  br label %if.end4, !dbg !5724

if.end4:                                          ; preds = %if.then2, %if.end
  %5 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5725
  %tobool5 = icmp ne %struct.usb_device* %5, null, !dbg !5725
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !5727

if.then6:                                         ; preds = %if.end4
  br label %out_free_ps, !dbg !5728

if.end7:                                          ; preds = %if.end4
  %6 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5729
  %dev8 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 14, !dbg !5729
  call void @device_lock(%struct.device* %dev8) #11, !dbg !5729
  %7 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5730
  %state = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 3, !dbg !5732
  %8 = load i32, i32* %state, align 8, !dbg !5732
  %cmp9 = icmp eq i32 %8, 0, !dbg !5733
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !5734

if.then10:                                        ; preds = %if.end7
  br label %out_unlock_device, !dbg !5735

if.end11:                                         ; preds = %if.end7
  %9 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5736
  %call12 = call i32 @usb_autoresume_device(%struct.usb_device* %9) #11, !dbg !5737
  store i32 %call12, i32* %ret, align 4, !dbg !5738
  %10 = load i32, i32* %ret, align 4, !dbg !5739
  %tobool13 = icmp ne i32 %10, 0, !dbg !5739
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !5741

if.then14:                                        ; preds = %if.end11
  br label %out_unlock_device, !dbg !5742

if.end15:                                         ; preds = %if.end11
  %11 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5743
  %12 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5744
  %dev16 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %12, i32 0, i32 1, !dbg !5745
  store %struct.usb_device* %11, %struct.usb_device** %dev16, align 8, !dbg !5746
  %13 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5747
  %14 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5748
  %file17 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %14, i32 0, i32 2, !dbg !5749
  store %struct.file* %13, %struct.file** %file17, align 8, !dbg !5750
  %15 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5751
  %interface_allowed_mask = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %15, i32 0, i32 15, !dbg !5752
  store i64 4294967295, i64* %interface_allowed_mask, align 8, !dbg !5753
  br label %do.body, !dbg !5754

do.body:                                          ; preds = %if.end15
  %16 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5755
  %lock = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %16, i32 0, i32 3, !dbg !5755
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5756
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !5757
  %rlock.i = bitcast %union.anon.0* %18 to %struct.raw_spinlock*, !dbg !5757
  %19 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5755
  %lock19 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %19, i32 0, i32 3, !dbg !5755
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !5755
  %rlock = bitcast %union.anon.0* %20 to %struct.raw_spinlock*, !dbg !5755
  %21 = bitcast %struct.spinlock* %lock19 to i8*, !dbg !5755
  %22 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !5755
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 1 %22, i64 0, i1 false), !dbg !5755
  br label %do.end, !dbg !5755

do.end:                                           ; preds = %do.body
  %23 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5758
  %list = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %23, i32 0, i32 0, !dbg !5759
  call void @INIT_LIST_HEAD(%struct.list_head* %list) #11, !dbg !5760
  %24 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5761
  %async_pending = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %24, i32 0, i32 4, !dbg !5762
  call void @INIT_LIST_HEAD(%struct.list_head* %async_pending) #11, !dbg !5763
  %25 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5764
  %async_completed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %25, i32 0, i32 5, !dbg !5765
  call void @INIT_LIST_HEAD(%struct.list_head* %async_completed) #11, !dbg !5766
  %26 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5767
  %memory_list = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %26, i32 0, i32 6, !dbg !5768
  call void @INIT_LIST_HEAD(%struct.list_head* %memory_list) #11, !dbg !5769
  br label %do.body20, !dbg !5770

do.body20:                                        ; preds = %do.end
  %27 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5771
  %wait = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %27, i32 0, i32 7, !dbg !5771
  call void @__init_waitqueue_head(%struct.wait_queue_head* %wait, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0), %struct.lock_class_key* @usbdev_open.__key) #11, !dbg !5771
  br label %do.end21, !dbg !5771

do.end21:                                         ; preds = %do.body20
  br label %do.body22, !dbg !5773

do.body22:                                        ; preds = %do.end21
  %28 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5774
  %wait_for_resume = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %28, i32 0, i32 8, !dbg !5774
  call void @__init_waitqueue_head(%struct.wait_queue_head* %wait_for_resume, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.58, i64 0, i64 0), %struct.lock_class_key* @usbdev_open.__key.57) #11, !dbg !5774
  br label %do.end23, !dbg !5774

do.end23:                                         ; preds = %do.body22
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !5692
  %29 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !5692
  %30 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !5693, !srcloc !5776
  store i64 %30, i64* %pfo_val__.i, align 8, !dbg !5693
  %31 = load i64, i64* %pfo_val__.i, align 8, !dbg !5693
  %32 = inttoptr i64 %31 to %struct.task_struct*, !dbg !5693
  store %struct.task_struct* %32, %struct.task_struct** %tmp.i, align 8, !dbg !5693
  %33 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !5693
  store %struct.task_struct* %33, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !5690
  %34 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !5690
  store %struct.task_struct* %34, %struct.task_struct** %tmp1.i, align 8, !dbg !5690
  %35 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !5690
  %call25 = call %struct.pid* @task_pid(%struct.task_struct* %35) #11, !dbg !5777
  %call26 = call %struct.pid* @get_pid(%struct.pid* %call25) #11, !dbg !5778
  %36 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5779
  %disc_pid = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %36, i32 0, i32 10, !dbg !5780
  store %struct.pid* %call26, %struct.pid** %disc_pid, align 8, !dbg !5781
  br label %do.body27, !dbg !5782

do.body27:                                        ; preds = %do.end23
  br label %do.end28, !dbg !5783

do.end28:                                         ; preds = %do.body27
  store i8* null, i8** %__vpp_verify.i45, align 8, !dbg !5688
  %37 = load i8*, i8** %__vpp_verify.i45, align 8, !dbg !5688
  %38 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !5689, !srcloc !5776
  store i64 %38, i64* %pfo_val__.i46, align 8, !dbg !5689
  %39 = load i64, i64* %pfo_val__.i46, align 8, !dbg !5689
  %40 = inttoptr i64 %39 to %struct.task_struct*, !dbg !5689
  store %struct.task_struct* %40, %struct.task_struct** %tmp.i47, align 8, !dbg !5689
  %41 = load %struct.task_struct*, %struct.task_struct** %tmp.i47, align 8, !dbg !5689
  store %struct.task_struct* %41, %struct.task_struct** %pscr_ret__.i44, align 8, !dbg !5685
  %42 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i44, align 8, !dbg !5685
  store %struct.task_struct* %42, %struct.task_struct** %tmp1.i48, align 8, !dbg !5685
  %43 = load %struct.task_struct*, %struct.task_struct** %tmp1.i48, align 8, !dbg !5685
  %cred = getelementptr inbounds %struct.task_struct, %struct.task_struct* %43, i32 0, i32 66, !dbg !5782
  %44 = load %struct.cred*, %struct.cred** %cred, align 8, !dbg !5782
  store %struct.cred* %44, %struct.cred** %tmp, align 8, !dbg !5783
  %45 = load %struct.cred*, %struct.cred** %tmp, align 8, !dbg !5782
  %call30 = call %struct.cred* @get_cred(%struct.cred* %45) #11, !dbg !5785
  %46 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5786
  %cred31 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %46, i32 0, i32 11, !dbg !5787
  store %struct.cred* %call30, %struct.cred** %cred31, align 8, !dbg !5788
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5789, !srcloc !5790
  %47 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5791
  %list32 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %47, i32 0, i32 0, !dbg !5792
  %48 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5793
  %filelist = getelementptr inbounds %struct.usb_device, %struct.usb_device* %48, i32 0, i32 34, !dbg !5794
  call void @list_add_tail(%struct.list_head* %list32, %struct.list_head* %filelist) #11, !dbg !5795
  %49 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5796
  %50 = bitcast %struct.usb_dev_state* %49 to i8*, !dbg !5796
  %51 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5797
  %private_data = getelementptr inbounds %struct.file, %struct.file* %51, i32 0, i32 15, !dbg !5798
  store i8* %50, i8** %private_data, align 8, !dbg !5799
  %52 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5800
  %dev33 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %52, i32 0, i32 14, !dbg !5800
  call void @device_unlock(%struct.device* %dev33) #11, !dbg !5800
  br label %do.body34, !dbg !5801

do.body34:                                        ; preds = %do.end28
  %53 = load i8, i8* @usbfs_snoop, align 1, !dbg !5802
  %tobool35 = trunc i8 %53 to i1, !dbg !5802
  br i1 %tobool35, label %if.then36, label %if.end41, !dbg !5803

if.then36:                                        ; preds = %do.body34
  %54 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5802
  %dev37 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %54, i32 0, i32 14, !dbg !5802
  store i8* null, i8** %__vpp_verify.i50, align 8, !dbg !5683
  %55 = load i8*, i8** %__vpp_verify.i50, align 8, !dbg !5683
  %56 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !5684, !srcloc !5776
  store i64 %56, i64* %pfo_val__.i51, align 8, !dbg !5684
  %57 = load i64, i64* %pfo_val__.i51, align 8, !dbg !5684
  %58 = inttoptr i64 %57 to %struct.task_struct*, !dbg !5684
  store %struct.task_struct* %58, %struct.task_struct** %tmp.i52, align 8, !dbg !5684
  %59 = load %struct.task_struct*, %struct.task_struct** %tmp.i52, align 8, !dbg !5684
  store %struct.task_struct* %59, %struct.task_struct** %pscr_ret__.i49, align 8, !dbg !5681
  %60 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i49, align 8, !dbg !5681
  store %struct.task_struct* %60, %struct.task_struct** %tmp1.i53, align 8, !dbg !5681
  %61 = load %struct.task_struct*, %struct.task_struct** %tmp1.i53, align 8, !dbg !5681
  %call39 = call i32 @task_pid_nr(%struct.task_struct* %61) #11, !dbg !5802
  store i8* null, i8** %__vpp_verify.i55, align 8, !dbg !5677
  %62 = load i8*, i8** %__vpp_verify.i55, align 8, !dbg !5677
  %63 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !5680, !srcloc !5776
  store i64 %63, i64* %pfo_val__.i56, align 8, !dbg !5680
  %64 = load i64, i64* %pfo_val__.i56, align 8, !dbg !5680
  %65 = inttoptr i64 %64 to %struct.task_struct*, !dbg !5680
  store %struct.task_struct* %65, %struct.task_struct** %tmp.i57, align 8, !dbg !5680
  %66 = load %struct.task_struct*, %struct.task_struct** %tmp.i57, align 8, !dbg !5680
  store %struct.task_struct* %66, %struct.task_struct** %pscr_ret__.i54, align 8, !dbg !5671
  %67 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i54, align 8, !dbg !5671
  store %struct.task_struct* %67, %struct.task_struct** %tmp1.i58, align 8, !dbg !5671
  %68 = load %struct.task_struct*, %struct.task_struct** %tmp1.i58, align 8, !dbg !5671
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %68, i32 0, i32 68, !dbg !5802
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !5802
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev37, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.59, i64 0, i64 0), i32 %call39, i8* %arraydecay) #12, !dbg !5802
  br label %if.end41, !dbg !5802

if.end41:                                         ; preds = %if.then36, %do.body34
  br label %do.end42, !dbg !5803

do.end42:                                         ; preds = %if.end41
  %69 = load i32, i32* %ret, align 4, !dbg !5804
  store i32 %69, i32* %retval, align 4, !dbg !5805
  br label %return, !dbg !5805

out_unlock_device:                                ; preds = %if.then14, %if.then10
  call void @llvm.dbg.label(metadata !5806), !dbg !5807
  %70 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5808
  %dev43 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %70, i32 0, i32 14, !dbg !5808
  call void @device_unlock(%struct.device* %dev43) #11, !dbg !5808
  %71 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5809
  call void @usb_put_dev(%struct.usb_device* %71) #11, !dbg !5810
  br label %out_free_ps, !dbg !5810

out_free_ps:                                      ; preds = %out_unlock_device, %if.then6, %if.then
  call void @llvm.dbg.label(metadata !5811), !dbg !5812
  %72 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5813
  %73 = bitcast %struct.usb_dev_state* %72 to i8*, !dbg !5813
  call void @kfree(i8* %73) #11, !dbg !5814
  %74 = load i32, i32* %ret, align 4, !dbg !5815
  store i32 %74, i32* %retval, align 4, !dbg !5816
  br label %return, !dbg !5816

return:                                           ; preds = %out_free_ps, %do.end42
  %75 = load i32, i32* %retval, align 4, !dbg !5817
  ret i32 %75, !dbg !5817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usbdev_release(%struct.inode* %inode, %struct.file* %file) #0 !dbg !5818 {
entry:
  %inode.addr = alloca %struct.inode*, align 8
  %file.addr = alloca %struct.file*, align 8
  %ps = alloca %struct.usb_dev_state*, align 8
  %dev = alloca %struct.usb_device*, align 8
  %ifnum = alloca i32, align 4
  %as = alloca %struct.async*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !5819, metadata !DIExpression()), !dbg !5820
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !5821, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps, metadata !5823, metadata !DIExpression()), !dbg !5824
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !5825
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !5826
  %1 = load i8*, i8** %private_data, align 8, !dbg !5826
  %2 = bitcast i8* %1 to %struct.usb_dev_state*, !dbg !5825
  store %struct.usb_dev_state* %2, %struct.usb_dev_state** %ps, align 8, !dbg !5824
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev, metadata !5827, metadata !DIExpression()), !dbg !5828
  %3 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5829
  %dev1 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %3, i32 0, i32 1, !dbg !5830
  %4 = load %struct.usb_device*, %struct.usb_device** %dev1, align 8, !dbg !5830
  store %struct.usb_device* %4, %struct.usb_device** %dev, align 8, !dbg !5828
  call void @llvm.dbg.declare(metadata i32* %ifnum, metadata !5831, metadata !DIExpression()), !dbg !5832
  call void @llvm.dbg.declare(metadata %struct.async** %as, metadata !5833, metadata !DIExpression()), !dbg !5834
  %5 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5835
  %dev2 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 14, !dbg !5835
  call void @device_lock(%struct.device* %dev2) #11, !dbg !5835
  %6 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5836
  %7 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5837
  call void @usb_hub_release_all_ports(%struct.usb_device* %6, %struct.usb_dev_state* %7) #11, !dbg !5838
  call void @mutex_lock(%struct.mutex* @usbfs_mutex) #11, !dbg !5839
  %8 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5840
  %list = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 0, !dbg !5841
  call void @list_del_init(%struct.list_head* %list) #11, !dbg !5842
  call void @mutex_unlock(%struct.mutex* @usbfs_mutex) #11, !dbg !5843
  store i32 0, i32* %ifnum, align 4, !dbg !5844
  br label %for.cond, !dbg !5846

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5847
  %ifclaimed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %9, i32 0, i32 13, !dbg !5849
  %10 = load i64, i64* %ifclaimed, align 8, !dbg !5849
  %tobool = icmp ne i64 %10, 0, !dbg !5847
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5850

land.rhs:                                         ; preds = %for.cond
  %11 = load i32, i32* %ifnum, align 4, !dbg !5851
  %conv = zext i32 %11 to i64, !dbg !5851
  %cmp = icmp ult i64 %conv, 64, !dbg !5852
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %12 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !5853
  br i1 %12, label %for.body, label %for.end, !dbg !5854

for.body:                                         ; preds = %land.end
  %13 = load i32, i32* %ifnum, align 4, !dbg !5855
  %conv4 = zext i32 %13 to i64, !dbg !5855
  %14 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5858
  %ifclaimed5 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %14, i32 0, i32 13, !dbg !5859
  %call = call zeroext i1 @test_bit(i64 %conv4, i64* %ifclaimed5) #11, !dbg !5860
  br i1 %call, label %if.then, label %if.end, !dbg !5861

if.then:                                          ; preds = %for.body
  %15 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5862
  %16 = load i32, i32* %ifnum, align 4, !dbg !5863
  %call6 = call i32 @releaseintf(%struct.usb_dev_state* %15, i32 %16) #11, !dbg !5864
  br label %if.end, !dbg !5864

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !5865

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %ifnum, align 4, !dbg !5866
  %inc = add i32 %17, 1, !dbg !5866
  store i32 %inc, i32* %ifnum, align 4, !dbg !5866
  br label %for.cond, !dbg !5867, !llvm.loop !5868

for.end:                                          ; preds = %land.end
  %18 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5870
  call void @destroy_all_async(%struct.usb_dev_state* %18) #11, !dbg !5871
  %19 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5872
  %suspend_allowed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %19, i32 0, i32 17, !dbg !5874
  %20 = load i8, i8* %suspend_allowed, align 4, !dbg !5874
  %tobool7 = trunc i8 %20 to i1, !dbg !5874
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !5875

if.then8:                                         ; preds = %for.end
  %21 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5876
  call void @usb_autosuspend_device(%struct.usb_device* %21) #11, !dbg !5877
  br label %if.end9, !dbg !5877

if.end9:                                          ; preds = %if.then8, %for.end
  %22 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5878
  %dev10 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %22, i32 0, i32 14, !dbg !5878
  call void @device_unlock(%struct.device* %dev10) #11, !dbg !5878
  %23 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !5879
  call void @usb_put_dev(%struct.usb_device* %23) #11, !dbg !5880
  %24 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5881
  %disc_pid = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %24, i32 0, i32 10, !dbg !5882
  %25 = load %struct.pid*, %struct.pid** %disc_pid, align 8, !dbg !5882
  call void @put_pid(%struct.pid* %25) #11, !dbg !5883
  %26 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5884
  %cred = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %26, i32 0, i32 11, !dbg !5885
  %27 = load %struct.cred*, %struct.cred** %cred, align 8, !dbg !5885
  call void @put_cred(%struct.cred* %27) #11, !dbg !5886
  %28 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5887
  %call11 = call %struct.async* @async_getcompleted(%struct.usb_dev_state* %28) #11, !dbg !5888
  store %struct.async* %call11, %struct.async** %as, align 8, !dbg !5889
  br label %while.cond, !dbg !5890

while.cond:                                       ; preds = %while.body, %if.end9
  %29 = load %struct.async*, %struct.async** %as, align 8, !dbg !5891
  %tobool12 = icmp ne %struct.async* %29, null, !dbg !5890
  br i1 %tobool12, label %while.body, label %while.end, !dbg !5890

while.body:                                       ; preds = %while.cond
  %30 = load %struct.async*, %struct.async** %as, align 8, !dbg !5892
  call void @free_async(%struct.async* %30) #11, !dbg !5894
  %31 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5895
  %call13 = call %struct.async* @async_getcompleted(%struct.usb_dev_state* %31) #11, !dbg !5896
  store %struct.async* %call13, %struct.async** %as, align 8, !dbg !5897
  br label %while.cond, !dbg !5890, !llvm.loop !5898

while.end:                                        ; preds = %while.cond
  %32 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !5900
  %33 = bitcast %struct.usb_dev_state* %32 to i8*, !dbg !5900
  call void @kfree(i8* %33) #11, !dbg !5901
  ret i32 0, !dbg !5902
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define dso_local i32 @usb_devio_init() #3 section ".init.text" !dbg !5903 {
entry:
  %retval1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !5906, metadata !DIExpression()), !dbg !5907
  %call = call i32 @register_chrdev_region(i32 198180864, i32 8192, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0)) #11, !dbg !5908
  store i32 %call, i32* %retval1, align 4, !dbg !5909
  %0 = load i32, i32* %retval1, align 4, !dbg !5910
  %tobool = icmp ne i32 %0, 0, !dbg !5910
  br i1 %tobool, label %if.then, label %if.end, !dbg !5912

if.then:                                          ; preds = %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0)) #12, !dbg !5913
  br label %out, !dbg !5915

if.end:                                           ; preds = %entry
  call void @cdev_init(%struct.cdev* @usb_device_cdev, %struct.file_operations* @usbdev_file_operations) #11, !dbg !5916
  %call3 = call i32 @cdev_add(%struct.cdev* @usb_device_cdev, i32 198180864, i32 8192) #11, !dbg !5917
  store i32 %call3, i32* %retval1, align 4, !dbg !5918
  %1 = load i32, i32* %retval1, align 4, !dbg !5919
  %tobool4 = icmp ne i32 %1, 0, !dbg !5919
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !5921

if.then5:                                         ; preds = %if.end
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i32 189) #12, !dbg !5922
  br label %error_cdev, !dbg !5924

if.end7:                                          ; preds = %if.end
  call void @usb_register_notify(%struct.notifier_block* @usbdev_nb) #11, !dbg !5925
  br label %out, !dbg !5925

out:                                              ; preds = %error_cdev, %if.end7, %if.then
  call void @llvm.dbg.label(metadata !5926), !dbg !5927
  %2 = load i32, i32* %retval1, align 4, !dbg !5928
  ret i32 %2, !dbg !5929

error_cdev:                                       ; preds = %if.then5
  call void @llvm.dbg.label(metadata !5930), !dbg !5931
  call void @unregister_chrdev_region(i32 198180864, i32 8192) #11, !dbg !5932
  br label %out, !dbg !5933
}

; Function Attrs: noredzone
declare dso_local i32 @register_chrdev_region(i32, i32, i8*) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @cdev_init(%struct.cdev*, %struct.file_operations*) #2

; Function Attrs: noredzone
declare dso_local i32 @cdev_add(%struct.cdev*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @usb_register_notify(%struct.notifier_block*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @unregister_chrdev_region(i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @usb_devio_cleanup() #0 !dbg !5934 {
entry:
  call void @usb_unregister_notify(%struct.notifier_block* @usbdev_nb) #11, !dbg !5935
  call void @cdev_del(%struct.cdev* @usb_device_cdev) #11, !dbg !5936
  call void @unregister_chrdev_region(i32 198180864, i32 8192) #11, !dbg !5937
  ret void, !dbg !5938
}

; Function Attrs: noredzone
declare dso_local void @usb_unregister_notify(%struct.notifier_block*) #2

; Function Attrs: noredzone
declare dso_local void @cdev_del(%struct.cdev*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @usb_get_intfdata(%struct.usb_interface* %intf) #0 !dbg !5939 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !5942, metadata !DIExpression()), !dbg !5943
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !5944
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7, !dbg !5945
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #11, !dbg !5946
  ret i8* %call, !dbg !5947
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !5948 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !5954, metadata !DIExpression()), !dbg !5957
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !5959, metadata !DIExpression()), !dbg !5960
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5961, metadata !DIExpression()), !dbg !5969
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5971, metadata !DIExpression()), !dbg !5972
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !5973, metadata !DIExpression()), !dbg !5974
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !5975, metadata !DIExpression()), !dbg !5976
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !5977
  %1 = load i64, i64* %nr.addr, align 8, !dbg !5978
  %div = sdiv i64 %1, 64, !dbg !5978
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !5979
  %2 = bitcast i64* %add.ptr to i8*, !dbg !5977
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !5980
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5981
  %conv.i = trunc i64 %4 to i32, !dbg !5981
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !5982
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !5983
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !5983
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !5983
  %7 = load i64, i64* %nr.addr, align 8, !dbg !5984
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !5985
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !5986
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !5988
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !5989

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !5990
  %12 = bitcast i64* %11 to i8*, !dbg !5990
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !5990
  %shr.i = ashr i64 %13, 3, !dbg !5990
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !5990
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !5992
  %and.i = and i64 %14, 7, !dbg !5992
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !5992
  %shl.i = shl i32 1, %sh_prom.i, !dbg !5992
  %neg.i = xor i32 %shl.i, -1, !dbg !5993
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #7, !dbg !5994, !srcloc !5995
  br label %arch_clear_bit.exit, !dbg !5996

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !5997
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !5999
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !6000, !srcloc !6001
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !6002
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usb_set_intfdata(%struct.usb_interface* %intf, i8* %data) #0 !dbg !6003 {
entry:
  %intf.addr = alloca %struct.usb_interface*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.usb_interface* %intf, %struct.usb_interface** %intf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf.addr, metadata !6006, metadata !DIExpression()), !dbg !6007
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6008, metadata !DIExpression()), !dbg !6009
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf.addr, align 8, !dbg !6010
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7, !dbg !6011
  %1 = load i8*, i8** %data.addr, align 8, !dbg !6012
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !6013
  ret void, !dbg !6014
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @destroy_async_on_interface(%struct.usb_dev_state* %ps, i32 %ifnum) #0 !dbg !6015 {
entry:
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !5442, metadata !DIExpression()), !dbg !6018
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5449, metadata !DIExpression()), !dbg !6020
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5451, metadata !DIExpression()), !dbg !6021
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %ifnum.addr = alloca i32, align 4
  %p = alloca %struct.list_head*, align 8
  %q = alloca %struct.list_head*, align 8
  %hitlist = alloca %struct.list_head, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp25 = alloca %struct.async*, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !6028, metadata !DIExpression()), !dbg !6029
  store i32 %ifnum, i32* %ifnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ifnum.addr, metadata !6030, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.declare(metadata %struct.list_head** %p, metadata !6032, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.declare(metadata %struct.list_head** %q, metadata !6034, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.declare(metadata %struct.list_head* %hitlist, metadata !6036, metadata !DIExpression()), !dbg !6037
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6038, metadata !DIExpression()), !dbg !6039
  call void @INIT_LIST_HEAD(%struct.list_head* %hitlist) #11, !dbg !6040
  br label %do.body, !dbg !6041

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6042

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6043, metadata !DIExpression()), !dbg !6045
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6046, metadata !DIExpression()), !dbg !6045
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6045
  %conv = zext i1 %cmp to i32, !dbg !6045
  store i32 1, i32* %tmp, align 4, !dbg !6045
  %0 = load i32, i32* %tmp, align 4, !dbg !6045
  br label %do.body2, !dbg !6047

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6048

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6049

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6051, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6055, metadata !DIExpression()), !dbg !6054
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6054
  %conv8 = zext i1 %cmp7 to i32, !dbg !6054
  store i32 1, i32* %tmp9, align 4, !dbg !6054
  %1 = load i32, i32* %tmp9, align 4, !dbg !6054
  %call = call i64 @arch_local_irq_save() #11, !dbg !6056
  store i64 %call, i64* %flags, align 8, !dbg !6056
  br label %do.end, !dbg !6056

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6049

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6048

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6057, !srcloc !6058
  br label %do.body12, !dbg !6057

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6059
  %lock = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %2, i32 0, i32 3, !dbg !6059
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6060
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !6061
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !6061
  br label %do.end14, !dbg !6059

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6057

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6048

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6047

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6042

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6062
  %async_pending = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 4, !dbg !6062
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %async_pending, i32 0, i32 0, !dbg !6062
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6062
  store %struct.list_head* %6, %struct.list_head** %p, align 8, !dbg !6062
  %7 = load %struct.list_head*, %struct.list_head** %p, align 8, !dbg !6062
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %7, i32 0, i32 0, !dbg !6062
  %8 = load %struct.list_head*, %struct.list_head** %next19, align 8, !dbg !6062
  store %struct.list_head* %8, %struct.list_head** %q, align 8, !dbg !6062
  br label %for.cond, !dbg !6062

for.cond:                                         ; preds = %for.inc, %do.end18
  %9 = load %struct.list_head*, %struct.list_head** %p, align 8, !dbg !6064
  %10 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6064
  %async_pending20 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %10, i32 0, i32 4, !dbg !6064
  %cmp21 = icmp ne %struct.list_head* %9, %async_pending20, !dbg !6064
  br i1 %cmp21, label %for.body, label %for.end, !dbg !6062

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %ifnum.addr, align 4, !dbg !6066
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6068, metadata !DIExpression()), !dbg !6070
  %12 = load %struct.list_head*, %struct.list_head** %p, align 8, !dbg !6070
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !6070
  store i8* %13, i8** %__mptr, align 8, !dbg !6070
  br label %do.body23, !dbg !6070

do.body23:                                        ; preds = %for.body
  br label %do.end24, !dbg !6071

do.end24:                                         ; preds = %do.body23
  %14 = load i8*, i8** %__mptr, align 8, !dbg !6070
  %add.ptr = getelementptr i8, i8* %14, i64 0, !dbg !6070
  %15 = bitcast i8* %add.ptr to %struct.async*, !dbg !6070
  store %struct.async* %15, %struct.async** %tmp25, align 8, !dbg !6071
  %16 = load %struct.async*, %struct.async** %tmp25, align 8, !dbg !6070
  %ifnum26 = getelementptr inbounds %struct.async, %struct.async* %16, i32 0, i32 5, !dbg !6073
  %17 = load i32, i32* %ifnum26, align 4, !dbg !6073
  %cmp27 = icmp eq i32 %11, %17, !dbg !6074
  br i1 %cmp27, label %if.then, label %if.end, !dbg !6075

if.then:                                          ; preds = %do.end24
  %18 = load %struct.list_head*, %struct.list_head** %p, align 8, !dbg !6076
  call void @list_move_tail(%struct.list_head* %18, %struct.list_head* %hitlist) #11, !dbg !6077
  br label %if.end, !dbg !6077

if.end:                                           ; preds = %if.then, %do.end24
  br label %for.inc, !dbg !6073

for.inc:                                          ; preds = %if.end
  %19 = load %struct.list_head*, %struct.list_head** %q, align 8, !dbg !6064
  store %struct.list_head* %19, %struct.list_head** %p, align 8, !dbg !6064
  %20 = load %struct.list_head*, %struct.list_head** %p, align 8, !dbg !6064
  %next29 = getelementptr inbounds %struct.list_head, %struct.list_head* %20, i32 0, i32 0, !dbg !6064
  %21 = load %struct.list_head*, %struct.list_head** %next29, align 8, !dbg !6064
  store %struct.list_head* %21, %struct.list_head** %q, align 8, !dbg !6064
  br label %for.cond, !dbg !6064, !llvm.loop !6078

for.end:                                          ; preds = %for.cond
  %22 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6080
  %lock30 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %22, i32 0, i32 3, !dbg !6081
  %23 = load i64, i64* %flags, align 8, !dbg !6082
  store %struct.spinlock* %lock30, %struct.spinlock** %lock.addr.i31, align 8
  store i64 %23, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !243, metadata !5632, metadata !DIExpression()) #7, !dbg !6083
  call void @llvm.dbg.declare(metadata !243, metadata !5636, metadata !DIExpression()) #7, !dbg !6083
  store i32 1, i32* %tmp.i, align 4, !dbg !6083
  %24 = load i32, i32* %tmp.i, align 4, !dbg !6083
  call void @llvm.dbg.declare(metadata !243, metadata !5637, metadata !DIExpression()) #7, !dbg !6084
  call void @llvm.dbg.declare(metadata !243, metadata !5643, metadata !DIExpression()) #7, !dbg !6084
  store i32 1, i32* %tmp8.i, align 4, !dbg !6084
  %25 = load i32, i32* %tmp8.i, align 4, !dbg !6084
  %26 = load i64, i64* %flags.addr.i, align 8, !dbg !6085
  call void @arch_local_irq_restore(i64 %26) #13, !dbg !6085
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6086, !srcloc !5647
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !6087
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !6087
  %rlock.i32 = bitcast %union.anon.0* %28 to %struct.raw_spinlock*, !dbg !6087
  %29 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6088
  call void @destroy_async(%struct.usb_dev_state* %29, %struct.list_head* %hitlist) #11, !dbg !6089
  ret void, !dbg !6090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !6091 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6094, metadata !DIExpression()), !dbg !6095
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6096
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !6097
  %1 = load i8*, i8** %driver_data, align 8, !dbg !6097
  ret i8* %1, !dbg !6098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !6099 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6103, metadata !DIExpression()), !dbg !6104
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6105, metadata !DIExpression()), !dbg !6106
  ret i1 true, !dbg !6107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !6108 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6112, metadata !DIExpression()), !dbg !6113
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6114, metadata !DIExpression()), !dbg !6115
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6116, metadata !DIExpression()), !dbg !6117
  ret void, !dbg !6118
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !6119 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6122, metadata !DIExpression()), !dbg !6123
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6124, metadata !DIExpression()), !dbg !6125
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6126
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6127
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !6128
  store i8* %0, i8** %driver_data, align 8, !dbg !6129
  ret void, !dbg !6130
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !6131 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !6135, metadata !DIExpression()), !dbg !6136
  br label %do.body, !dbg !6137

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6138

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !6140

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !6138

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6142
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6142
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !6142
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !6142
  br label %do.end3, !dbg !6142

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !6138

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6144
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6145
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !6146
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !6147
  ret void, !dbg !6148
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !6149 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !6153, metadata !DIExpression()), !dbg !6154
  %call = call i64 @arch_local_save_flags() #11, !dbg !6155
  store i64 %call, i64* %f, align 8, !dbg !6156
  call void @arch_local_irq_disable() #11, !dbg !6157
  %0 = load i64, i64* %f, align 8, !dbg !6158
  ret i64 %0, !dbg !6159
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_move_tail(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !6160 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !6163, metadata !DIExpression()), !dbg !6164
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6165, metadata !DIExpression()), !dbg !6166
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6167
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !6168
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6169
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6170
  call void @list_add_tail(%struct.list_head* %1, %struct.list_head* %2) #11, !dbg !6171
  ret void, !dbg !6172
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @destroy_async(%struct.usb_dev_state* %ps, %struct.list_head* %list) #0 !dbg !6173 {
entry:
  %lock.addr.i61 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i61, metadata !5451, metadata !DIExpression()), !dbg !6176
  %lock.addr.i56 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i56, metadata !5442, metadata !DIExpression()), !dbg !6184
  %flags.addr.i57 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i57, metadata !5449, metadata !DIExpression()), !dbg !6186
  %tmp.i58 = alloca i32, align 4
  %tmp8.i59 = alloca i32, align 4
  %lock.addr.i54 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i54, metadata !5442, metadata !DIExpression()), !dbg !6187
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5449, metadata !DIExpression()), !dbg !6189
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5451, metadata !DIExpression()), !dbg !6190
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %list.addr = alloca %struct.list_head*, align 8
  %urb = alloca %struct.urb*, align 8
  %as = alloca %struct.async*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp22 = alloca %struct.async*, align 8
  %__dummy28 = alloca i64, align 8
  %__dummy229 = alloca i64, align 8
  %tmp32 = alloca i32, align 4
  %__dummy36 = alloca i64, align 8
  %__dummy237 = alloca i64, align 8
  %tmp40 = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !6197, metadata !DIExpression()), !dbg !6198
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !6199, metadata !DIExpression()), !dbg !6200
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !6201, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.declare(metadata %struct.async** %as, metadata !6203, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6205, metadata !DIExpression()), !dbg !6206
  br label %do.body, !dbg !6207

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6208

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6209, metadata !DIExpression()), !dbg !6211
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6212, metadata !DIExpression()), !dbg !6211
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6211
  %conv = zext i1 %cmp to i32, !dbg !6211
  store i32 1, i32* %tmp, align 4, !dbg !6211
  %0 = load i32, i32* %tmp, align 4, !dbg !6211
  br label %do.body2, !dbg !6213

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6214

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6215

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6217, metadata !DIExpression()), !dbg !6220
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6221, metadata !DIExpression()), !dbg !6220
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6220
  %conv8 = zext i1 %cmp7 to i32, !dbg !6220
  store i32 1, i32* %tmp9, align 4, !dbg !6220
  %1 = load i32, i32* %tmp9, align 4, !dbg !6220
  %call = call i64 @arch_local_irq_save() #11, !dbg !6222
  store i64 %call, i64* %flags, align 8, !dbg !6222
  br label %do.end, !dbg !6222

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6215

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6214

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6223, !srcloc !6224
  br label %do.body12, !dbg !6223

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6225
  %lock = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %2, i32 0, i32 3, !dbg !6225
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6226
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !6227
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !6227
  br label %do.end14, !dbg !6225

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6223

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6214

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6213

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6208

do.end18:                                         ; preds = %do.end17
  br label %while.cond, !dbg !6228

while.cond:                                       ; preds = %do.end52, %do.end18
  %5 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6229
  %call19 = call i32 @list_empty(%struct.list_head* %5) #11, !dbg !6230
  %tobool = icmp ne i32 %call19, 0, !dbg !6231
  %lnot = xor i1 %tobool, true, !dbg !6231
  br i1 %lnot, label %while.body, label %while.end, !dbg !6228

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6232, metadata !DIExpression()), !dbg !6234
  %6 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !6234
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 1, !dbg !6234
  %7 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !6234
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !6234
  store i8* %8, i8** %__mptr, align 8, !dbg !6234
  br label %do.body20, !dbg !6234

do.body20:                                        ; preds = %while.body
  br label %do.end21, !dbg !6235

do.end21:                                         ; preds = %do.body20
  %9 = load i8*, i8** %__mptr, align 8, !dbg !6234
  %add.ptr = getelementptr i8, i8* %9, i64 0, !dbg !6234
  %10 = bitcast i8* %add.ptr to %struct.async*, !dbg !6234
  store %struct.async* %10, %struct.async** %tmp22, align 8, !dbg !6235
  %11 = load %struct.async*, %struct.async** %tmp22, align 8, !dbg !6234
  store %struct.async* %11, %struct.async** %as, align 8, !dbg !6237
  %12 = load %struct.async*, %struct.async** %as, align 8, !dbg !6238
  %asynclist = getelementptr inbounds %struct.async, %struct.async* %12, i32 0, i32 0, !dbg !6239
  call void @list_del_init(%struct.list_head* %asynclist) #11, !dbg !6240
  %13 = load %struct.async*, %struct.async** %as, align 8, !dbg !6241
  %urb23 = getelementptr inbounds %struct.async, %struct.async* %13, i32 0, i32 9, !dbg !6242
  %14 = load %struct.urb*, %struct.urb** %urb23, align 8, !dbg !6242
  store %struct.urb* %14, %struct.urb** %urb, align 8, !dbg !6243
  %15 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !6244
  %call24 = call %struct.urb* @usb_get_urb(%struct.urb* %15) #11, !dbg !6245
  %16 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6246
  %lock25 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %16, i32 0, i32 3, !dbg !6247
  %17 = load i64, i64* %flags, align 8, !dbg !6248
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i56, align 8
  store i64 %17, i64* %flags.addr.i57, align 8
  call void @llvm.dbg.declare(metadata !243, metadata !5632, metadata !DIExpression()) #7, !dbg !6249
  call void @llvm.dbg.declare(metadata !243, metadata !5636, metadata !DIExpression()) #7, !dbg !6249
  store i32 1, i32* %tmp.i58, align 4, !dbg !6249
  %18 = load i32, i32* %tmp.i58, align 4, !dbg !6249
  call void @llvm.dbg.declare(metadata !243, metadata !5637, metadata !DIExpression()) #7, !dbg !6250
  call void @llvm.dbg.declare(metadata !243, metadata !5643, metadata !DIExpression()) #7, !dbg !6250
  store i32 1, i32* %tmp8.i59, align 4, !dbg !6250
  %19 = load i32, i32* %tmp8.i59, align 4, !dbg !6250
  %20 = load i64, i64* %flags.addr.i57, align 8, !dbg !6251
  call void @arch_local_irq_restore(i64 %20) #13, !dbg !6251
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6252, !srcloc !5647
  %21 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i56, align 8, !dbg !6253
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0, !dbg !6253
  %rlock.i60 = bitcast %union.anon.0* %22 to %struct.raw_spinlock*, !dbg !6253
  %23 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !6254
  call void @usb_kill_urb(%struct.urb* %23) #11, !dbg !6255
  %24 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !6256
  call void @usb_free_urb(%struct.urb* %24) #11, !dbg !6257
  br label %do.body26, !dbg !6258

do.body26:                                        ; preds = %do.end21
  br label %do.body27, !dbg !6259

do.body27:                                        ; preds = %do.body26
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !6260, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.declare(metadata i64* %__dummy229, metadata !6263, metadata !DIExpression()), !dbg !6262
  %cmp30 = icmp eq i64* %__dummy28, %__dummy229, !dbg !6262
  %conv31 = zext i1 %cmp30 to i32, !dbg !6262
  store i32 1, i32* %tmp32, align 4, !dbg !6262
  %25 = load i32, i32* %tmp32, align 4, !dbg !6262
  br label %do.body33, !dbg !6264

do.body33:                                        ; preds = %do.body27
  br label %do.body34, !dbg !6265

do.body34:                                        ; preds = %do.body33
  br label %do.body35, !dbg !6266

do.body35:                                        ; preds = %do.body34
  call void @llvm.dbg.declare(metadata i64* %__dummy36, metadata !6268, metadata !DIExpression()), !dbg !6271
  call void @llvm.dbg.declare(metadata i64* %__dummy237, metadata !6272, metadata !DIExpression()), !dbg !6271
  %cmp38 = icmp eq i64* %__dummy36, %__dummy237, !dbg !6271
  %conv39 = zext i1 %cmp38 to i32, !dbg !6271
  store i32 1, i32* %tmp40, align 4, !dbg !6271
  %26 = load i32, i32* %tmp40, align 4, !dbg !6271
  %call41 = call i64 @arch_local_irq_save() #11, !dbg !6273
  store i64 %call41, i64* %flags, align 8, !dbg !6273
  br label %do.end42, !dbg !6273

do.end42:                                         ; preds = %do.body35
  br label %do.end43, !dbg !6266

do.end43:                                         ; preds = %do.end42
  br label %do.body44, !dbg !6265

do.body44:                                        ; preds = %do.end43
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6274, !srcloc !6275
  br label %do.body45, !dbg !6274

do.body45:                                        ; preds = %do.body44
  %27 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6276
  %lock46 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %27, i32 0, i32 3, !dbg !6276
  store %struct.spinlock* %lock46, %struct.spinlock** %lock.addr.i61, align 8
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i61, align 8, !dbg !6277
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !6278
  %rlock.i62 = bitcast %union.anon.0* %29 to %struct.raw_spinlock*, !dbg !6278
  br label %do.end48, !dbg !6276

do.end48:                                         ; preds = %do.body45
  br label %do.end49, !dbg !6274

do.end49:                                         ; preds = %do.end48
  br label %do.end50, !dbg !6265

do.end50:                                         ; preds = %do.end49
  br label %do.end51, !dbg !6264

do.end51:                                         ; preds = %do.end50
  br label %do.end52, !dbg !6259

do.end52:                                         ; preds = %do.end51
  br label %while.cond, !dbg !6228, !llvm.loop !6279

while.end:                                        ; preds = %while.cond
  %30 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6281
  %lock53 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %30, i32 0, i32 3, !dbg !6282
  %31 = load i64, i64* %flags, align 8, !dbg !6283
  store %struct.spinlock* %lock53, %struct.spinlock** %lock.addr.i54, align 8
  store i64 %31, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !243, metadata !5632, metadata !DIExpression()) #7, !dbg !6284
  call void @llvm.dbg.declare(metadata !243, metadata !5636, metadata !DIExpression()) #7, !dbg !6284
  store i32 1, i32* %tmp.i, align 4, !dbg !6284
  %32 = load i32, i32* %tmp.i, align 4, !dbg !6284
  call void @llvm.dbg.declare(metadata !243, metadata !5637, metadata !DIExpression()) #7, !dbg !6285
  call void @llvm.dbg.declare(metadata !243, metadata !5643, metadata !DIExpression()) #7, !dbg !6285
  store i32 1, i32* %tmp8.i, align 4, !dbg !6285
  %33 = load i32, i32* %tmp8.i, align 4, !dbg !6285
  %34 = load i64, i64* %flags.addr.i, align 8, !dbg !6286
  call void @arch_local_irq_restore(i64 %34) #13, !dbg !6286
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6287, !srcloc !5647
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i54, align 8, !dbg !6288
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !6288
  %rlock.i55 = bitcast %union.anon.0* %36 to %struct.raw_spinlock*, !dbg !6288
  ret void, !dbg !6289
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !6290 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !6291, metadata !DIExpression()), !dbg !6293
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6294, metadata !DIExpression()), !dbg !6293
  %0 = load i64, i64* %__edi, align 8, !dbg !6293
  store i64 %0, i64* %__edi, align 8, !dbg !6293
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6295, metadata !DIExpression()), !dbg !6293
  %1 = load i64, i64* %__esi, align 8, !dbg !6293
  store i64 %1, i64* %__esi, align 8, !dbg !6293
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6296, metadata !DIExpression()), !dbg !6293
  %2 = load i64, i64* %__edx, align 8, !dbg !6293
  store i64 %2, i64* %__edx, align 8, !dbg !6293
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6297, metadata !DIExpression()), !dbg !6293
  %3 = load i64, i64* %__ecx, align 8, !dbg !6293
  store i64 %3, i64* %__ecx, align 8, !dbg !6293
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6298, metadata !DIExpression()), !dbg !6293
  %4 = load i64, i64* %__eax, align 8, !dbg !6293
  store i64 %4, i64* %__eax, align 8, !dbg !6293
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !6293
  %6 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !6299
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !6299, !srcloc !6302
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6299
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6299
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6299
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult1), !dbg !6299
  %8 = load i64, i64* %__eax, align 8, !dbg !6299
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !6303, metadata !DIExpression()), !dbg !6305
  store i64 -1, i64* %__mask, align 8, !dbg !6305
  %9 = load i64, i64* %__mask, align 8, !dbg !6305
  store i64 %9, i64* %tmp, align 8, !dbg !6305
  %10 = load i64, i64* %tmp, align 8, !dbg !6305
  %and = and i64 %8, %10, !dbg !6299
  store i64 %and, i64* %__ret, align 8, !dbg !6299
  %11 = load i64, i64* %__ret, align 8, !dbg !6293
  store i64 %11, i64* %tmp2, align 8, !dbg !6306
  %12 = load i64, i64* %tmp2, align 8, !dbg !6293
  ret i64 %12, !dbg !6307
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !6308 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6309, metadata !DIExpression()), !dbg !6311
  %0 = load i64, i64* %__edi, align 8, !dbg !6311
  store i64 %0, i64* %__edi, align 8, !dbg !6311
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6312, metadata !DIExpression()), !dbg !6311
  %1 = load i64, i64* %__esi, align 8, !dbg !6311
  store i64 %1, i64* %__esi, align 8, !dbg !6311
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6313, metadata !DIExpression()), !dbg !6311
  %2 = load i64, i64* %__edx, align 8, !dbg !6311
  store i64 %2, i64* %__edx, align 8, !dbg !6311
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6314, metadata !DIExpression()), !dbg !6311
  %3 = load i64, i64* %__ecx, align 8, !dbg !6311
  store i64 %3, i64* %__ecx, align 8, !dbg !6311
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6315, metadata !DIExpression()), !dbg !6311
  %4 = load i64, i64* %__eax, align 8, !dbg !6311
  store i64 %4, i64* %__eax, align 8, !dbg !6311
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !6311
  %6 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !6311
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !6311, !srcloc !6316
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !6311
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !6311
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6311
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult1), !dbg !6311
  ret void, !dbg !6317
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !6318 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6319, metadata !DIExpression()), !dbg !6320
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6321
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !6323
  br i1 %call, label %if.end, label %if.then, !dbg !6324

if.then:                                          ; preds = %entry
  br label %return, !dbg !6325

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6326
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !6327
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !6327
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6328
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !6329
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6329
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !6330
  br label %return, !dbg !6331

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !6332 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6333, metadata !DIExpression()), !dbg !6334
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6335, metadata !DIExpression()), !dbg !6336
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6337
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6338
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !6339
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !6339
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6340
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !6341
  ret void, !dbg !6342
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !6343 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6346, metadata !DIExpression()), !dbg !6347
  ret i1 true, !dbg !6348
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !6349 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !6350, metadata !DIExpression()), !dbg !6351
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !6352, metadata !DIExpression()), !dbg !6353
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6354
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6355
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !6356
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !6357
  br label %do.body, !dbg !6358

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !6359

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !6361

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !6359

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6363
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6363
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !6363
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !6363
  br label %do.end5, !dbg !6363

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !6359

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !6365
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !6366 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6369, metadata !DIExpression()), !dbg !6370
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !6371, metadata !DIExpression()), !dbg !6372
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !6373, metadata !DIExpression()), !dbg !6374
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6375
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6377
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6378
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !6379
  br i1 %call, label %if.end, label %if.then, !dbg !6380

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !6381

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6382
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6383
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !6384
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !6385
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6386
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6387
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !6388
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !6389
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6390
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6391
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !6392
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !6393
  br label %do.body, !dbg !6394

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !6395

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !6397

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !6395

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6399
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6399
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !6399
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !6399
  br label %do.end7, !dbg !6399

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !6395

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !6401
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !6402 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6405, metadata !DIExpression()), !dbg !6406
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !6407, metadata !DIExpression()), !dbg !6408
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !6409, metadata !DIExpression()), !dbg !6410
  ret i1 true, !dbg !6411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !6412 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !6413, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !6415, metadata !DIExpression()), !dbg !6417
  %0 = load i64, i64* %__edi, align 8, !dbg !6417
  store i64 %0, i64* %__edi, align 8, !dbg !6417
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !6418, metadata !DIExpression()), !dbg !6417
  %1 = load i64, i64* %__esi, align 8, !dbg !6417
  store i64 %1, i64* %__esi, align 8, !dbg !6417
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !6419, metadata !DIExpression()), !dbg !6417
  %2 = load i64, i64* %__edx, align 8, !dbg !6417
  store i64 %2, i64* %__edx, align 8, !dbg !6417
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !6420, metadata !DIExpression()), !dbg !6417
  %3 = load i64, i64* %__ecx, align 8, !dbg !6417
  store i64 %3, i64* %__ecx, align 8, !dbg !6417
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !6421, metadata !DIExpression()), !dbg !6417
  %4 = load i64, i64* %__eax, align 8, !dbg !6417
  store i64 %4, i64* %__eax, align 8, !dbg !6417
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !6417
  %6 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !6417
  %7 = load i64, i64* %f.addr, align 8, !dbg !6417
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !6417, !srcloc !6422
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !6417
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !6417
  store i64 %asmresult, i64* %__eax, align 8, !dbg !6417
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult1), !dbg !6417
  ret void, !dbg !6423
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !6424 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6429, metadata !DIExpression()), !dbg !6430
  br label %do.body, !dbg !6431

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6433

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6431
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !6431
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6431
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !6433
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !6431
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6435
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !6436
  %conv = zext i1 %cmp to i32, !dbg !6436
  ret i32 %conv, !dbg !6437
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #0 !dbg !6438 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6439, metadata !DIExpression()), !dbg !6440
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6441
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !6442
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6443
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #11, !dbg !6444
  ret void, !dbg !6445
}

; Function Attrs: noredzone
declare dso_local %struct.urb* @usb_get_urb(%struct.urb*) #2

; Function Attrs: noredzone
declare dso_local void @usb_kill_urb(%struct.urb*) #2

; Function Attrs: noredzone
declare dso_local void @usb_free_urb(%struct.urb*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_lock(%struct.device* %dev) #0 !dbg !6446 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6447, metadata !DIExpression()), !dbg !6448
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6449
  %mutex = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 9, !dbg !6450
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !6451
  ret void, !dbg !6452
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @connected(%struct.usb_dev_state* %ps) #0 !dbg !6453 {
entry:
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !6456, metadata !DIExpression()), !dbg !6457
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6458
  %list = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 0, !dbg !6459
  %call = call i32 @list_empty(%struct.list_head* %list) #11, !dbg !6460
  %tobool = icmp ne i32 %call, 0, !dbg !6460
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !6461

land.rhs:                                         ; preds = %entry
  %1 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6462
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %1, i32 0, i32 1, !dbg !6463
  %2 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6463
  %state = getelementptr inbounds %struct.usb_device, %struct.usb_device* %2, i32 0, i32 3, !dbg !6464
  %3 = load i32, i32* %state, align 8, !dbg !6464
  %cmp = icmp ne i32 %3, 0, !dbg !6465
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !6466
  %land.ext = zext i1 %4 to i32, !dbg !6461
  ret i32 %land.ext, !dbg !6467
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_unlock(%struct.device* %dev) #0 !dbg !6468 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6469, metadata !DIExpression()), !dbg !6470
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6471
  %mutex = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 9, !dbg !6472
  call void @mutex_unlock(%struct.mutex* %mutex) #11, !dbg !6473
  ret void, !dbg !6474
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #0 !dbg !6475 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !6478, metadata !DIExpression()), !dbg !6479
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !6480, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6482, metadata !DIExpression()), !dbg !6484
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !6484
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !6485
  %tobool = icmp ne i32 %0, 0, !dbg !6485
  %lnot = xor i1 %tobool, true, !dbg !6485
  %lnot1 = xor i1 %lnot, true, !dbg !6485
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6485
  %conv = sext i32 %lnot.ext to i64, !dbg !6485
  %tobool2 = icmp ne i64 %conv, 0, !dbg !6485
  br i1 %tobool2, label %if.then, label %if.end, !dbg !6484

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6485

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !6487

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !6489

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !6487
  %2 = load i64, i64* %count.addr, align 8, !dbg !6487
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i32 %1, i64 %2) #11, !dbg !6487
  br label %do.body4, !dbg !6487

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !6491

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !6493

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !6491

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 134, i32 2313, i64 12) #7, !dbg !6495, !srcloc !6497
  br label %do.end8, !dbg !6495

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #7, !dbg !6498, !srcloc !6500
  br label %do.body9, !dbg !6491

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !6501

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !6491

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !6487

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !6503

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !6487

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !6487

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !6484
  %tobool15 = icmp ne i32 %3, 0, !dbg !6484
  %lnot16 = xor i1 %tobool15, true, !dbg !6484
  %lnot18 = xor i1 %lnot16, true, !dbg !6484
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !6484
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !6484
  store i64 %conv20, i64* %tmp, align 8, !dbg !6485
  %4 = load i64, i64* %tmp, align 8, !dbg !6484
  ret void, !dbg !6505
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #2

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #0 !dbg !6506 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6509, metadata !DIExpression()), !dbg !6510
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6511, metadata !DIExpression()), !dbg !6512
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !6513, metadata !DIExpression()), !dbg !6514
  ret void, !dbg !6515
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @poll_wait(%struct.file* %filp, %struct.wait_queue_head* %wait_address, %struct.poll_table_struct* %p) #0 !dbg !6516 {
entry:
  %filp.addr = alloca %struct.file*, align 8
  %wait_address.addr = alloca %struct.wait_queue_head*, align 8
  %p.addr = alloca %struct.poll_table_struct*, align 8
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !6521, metadata !DIExpression()), !dbg !6522
  store %struct.wait_queue_head* %wait_address, %struct.wait_queue_head** %wait_address.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wait_queue_head** %wait_address.addr, metadata !6523, metadata !DIExpression()), !dbg !6524
  store %struct.poll_table_struct* %p, %struct.poll_table_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %p.addr, metadata !6525, metadata !DIExpression()), !dbg !6526
  %0 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !6527
  %tobool = icmp ne %struct.poll_table_struct* %0, null, !dbg !6527
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6529

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !6530
  %_qproc = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %1, i32 0, i32 0, !dbg !6531
  %2 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc, align 8, !dbg !6531
  %tobool1 = icmp ne void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)* %2, null, !dbg !6530
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !6532

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !6533
  %tobool3 = icmp ne %struct.wait_queue_head* %3, null, !dbg !6533
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6534

if.then:                                          ; preds = %land.lhs.true2
  %4 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !6535
  %_qproc4 = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %4, i32 0, i32 0, !dbg !6536
  %5 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc4, align 8, !dbg !6536
  %6 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !6537
  %7 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !6538
  %8 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !6539
  call void %5(%struct.file* %6, %struct.wait_queue_head* %7, %struct.poll_table_struct* %8) #11, !dbg !6535
  br label %if.end, !dbg !6535

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !6540
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @usbdev_do_ioctl(%struct.file* %file, i32 %cmd, i8* %p) #0 !dbg !6541 {
entry:
  %retval = alloca i64, align 8
  %file.addr = alloca %struct.file*, align 8
  %cmd.addr = alloca i32, align 4
  %p.addr = alloca i8*, align 8
  %ps = alloca %struct.usb_dev_state*, align 8
  %inode = alloca %struct.inode*, align 8
  %dev = alloca %struct.usb_device*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca %struct.timespec64, align 8
  %tmp43 = alloca %struct.timespec64, align 8
  %tmp57 = alloca %struct.timespec64, align 8
  %tmp79 = alloca %struct.timespec64, align 8
  %tmp125 = alloca %struct.timespec64, align 8
  %tmp212 = alloca %struct.timespec64, align 8
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !6544, metadata !DIExpression()), !dbg !6545
  store i32 %cmd, i32* %cmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmd.addr, metadata !6546, metadata !DIExpression()), !dbg !6547
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6548, metadata !DIExpression()), !dbg !6549
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps, metadata !6550, metadata !DIExpression()), !dbg !6551
  %0 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6552
  %private_data = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15, !dbg !6553
  %1 = load i8*, i8** %private_data, align 8, !dbg !6553
  %2 = bitcast i8* %1 to %struct.usb_dev_state*, !dbg !6552
  store %struct.usb_dev_state* %2, %struct.usb_dev_state** %ps, align 8, !dbg !6551
  call void @llvm.dbg.declare(metadata %struct.inode** %inode, metadata !6554, metadata !DIExpression()), !dbg !6555
  %3 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6556
  %call = call %struct.inode* @file_inode(%struct.file* %3) #11, !dbg !6557
  store %struct.inode* %call, %struct.inode** %inode, align 8, !dbg !6555
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev, metadata !6558, metadata !DIExpression()), !dbg !6559
  %4 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6560
  %dev1 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %4, i32 0, i32 1, !dbg !6561
  %5 = load %struct.usb_device*, %struct.usb_device** %dev1, align 8, !dbg !6561
  store %struct.usb_device* %5, %struct.usb_device** %dev, align 8, !dbg !6559
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6562, metadata !DIExpression()), !dbg !6563
  store i32 -25, i32* %ret, align 4, !dbg !6563
  %6 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !6564
  %f_mode = getelementptr inbounds %struct.file, %struct.file* %6, i32 0, i32 8, !dbg !6566
  %7 = load i32, i32* %f_mode, align 4, !dbg !6566
  %and = and i32 %7, 2, !dbg !6567
  %tobool = icmp ne i32 %and, 0, !dbg !6567
  br i1 %tobool, label %if.end, label %if.then, !dbg !6568

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !6569
  br label %return, !dbg !6569

if.end:                                           ; preds = %entry
  %8 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6570
  %dev2 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %8, i32 0, i32 14, !dbg !6570
  call void @device_lock(%struct.device* %dev2) #11, !dbg !6570
  %9 = load i32, i32* %cmd.addr, align 4, !dbg !6571
  switch i32 %9, label %sw.epilog [
    i32 1074287884, label %sw.bb
    i32 1074287885, label %sw.bb8
  ], !dbg !6572

sw.bb:                                            ; preds = %if.end
  br label %do.body, !dbg !6573

do.body:                                          ; preds = %sw.bb
  %10 = load i8, i8* @usbfs_snoop, align 1, !dbg !6575
  %tobool3 = trunc i8 %10 to i1, !dbg !6575
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !6578

if.then4:                                         ; preds = %do.body
  %11 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6575
  %dev5 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %11, i32 0, i32 14, !dbg !6575
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6575
  br label %if.end6, !dbg !6575

if.end6:                                          ; preds = %if.then4, %do.body
  br label %do.end, !dbg !6578

do.end:                                           ; preds = %if.end6
  %12 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6579
  %13 = load i8*, i8** %p.addr, align 8, !dbg !6580
  %call7 = call i32 @proc_reapurb(%struct.usb_dev_state* %12, i8* %13) #11, !dbg !6581
  store i32 %call7, i32* %ret, align 4, !dbg !6582
  br label %done, !dbg !6583

sw.bb8:                                           ; preds = %if.end
  br label %do.body9, !dbg !6584

do.body9:                                         ; preds = %sw.bb8
  %14 = load i8, i8* @usbfs_snoop, align 1, !dbg !6585
  %tobool10 = trunc i8 %14 to i1, !dbg !6585
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !6588

if.then11:                                        ; preds = %do.body9
  %15 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6585
  %dev12 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %15, i32 0, i32 14, !dbg !6585
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev12, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6585
  br label %if.end13, !dbg !6585

if.end13:                                         ; preds = %if.then11, %do.body9
  br label %do.end14, !dbg !6588

do.end14:                                         ; preds = %if.end13
  %16 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6589
  %17 = load i8*, i8** %p.addr, align 8, !dbg !6590
  %call15 = call i32 @proc_reapurbnonblock(%struct.usb_dev_state* %16, i8* %17) #11, !dbg !6591
  store i32 %call15, i32* %ret, align 4, !dbg !6592
  br label %done, !dbg !6593

sw.epilog:                                        ; preds = %if.end
  %18 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6594
  %call16 = call i32 @connected(%struct.usb_dev_state* %18) #11, !dbg !6596
  %tobool17 = icmp ne i32 %call16, 0, !dbg !6596
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !6597

if.then18:                                        ; preds = %sw.epilog
  %19 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6598
  %dev19 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %19, i32 0, i32 14, !dbg !6598
  call void @device_unlock(%struct.device* %dev19) #11, !dbg !6598
  store i64 -19, i64* %retval, align 8, !dbg !6600
  br label %return, !dbg !6600

if.end20:                                         ; preds = %sw.epilog
  %20 = load i32, i32* %cmd.addr, align 4, !dbg !6601
  switch i32 %20, label %sw.epilog202 [
    i32 -1072147200, label %sw.bb21
    i32 -1072147198, label %sw.bb32
    i32 -2147199741, label %sw.bb46
    i32 21780, label %sw.bb60
    i32 -2147199723, label %sw.bb68
    i32 1090802952, label %sw.bb82
    i32 1074287889, label %sw.bb90
    i32 -2146937596, label %sw.bb98
    i32 -2147199739, label %sw.bb106
    i32 -2143791862, label %sw.bb114
    i32 21771, label %sw.bb128
    i32 -2146413298, label %sw.bb136
    i32 -2147199729, label %sw.bb144
    i32 -2147199728, label %sw.bb152
    i32 -1072671470, label %sw.bb160
    i32 -2147199720, label %sw.bb168
    i32 -2147199719, label %sw.bb176
    i32 -2147199718, label %sw.bb184
    i32 -2130160357, label %sw.bb186
    i32 -2146937572, label %sw.bb188
    i32 -2146937571, label %sw.bb190
    i32 1074025758, label %sw.bb192
    i32 21791, label %sw.bb194
    i32 21793, label %sw.bb196
    i32 21794, label %sw.bb198
    i32 21795, label %sw.bb200
  ], !dbg !6602

sw.bb21:                                          ; preds = %if.end20
  br label %do.body22, !dbg !6603

do.body22:                                        ; preds = %sw.bb21
  %21 = load i8, i8* @usbfs_snoop, align 1, !dbg !6605
  %tobool23 = trunc i8 %21 to i1, !dbg !6605
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !6608

if.then24:                                        ; preds = %do.body22
  %22 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6605
  %dev25 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %22, i32 0, i32 14, !dbg !6605
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev25, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6605
  br label %if.end26, !dbg !6605

if.end26:                                         ; preds = %if.then24, %do.body22
  br label %do.end27, !dbg !6608

do.end27:                                         ; preds = %if.end26
  %23 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6609
  %24 = load i8*, i8** %p.addr, align 8, !dbg !6610
  %call28 = call i32 @proc_control(%struct.usb_dev_state* %23, i8* %24) #11, !dbg !6611
  store i32 %call28, i32* %ret, align 4, !dbg !6612
  %25 = load i32, i32* %ret, align 4, !dbg !6613
  %cmp = icmp sge i32 %25, 0, !dbg !6615
  br i1 %cmp, label %if.then29, label %if.end31, !dbg !6616

if.then29:                                        ; preds = %do.end27
  %26 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !6617
  %i_mtime = getelementptr inbounds %struct.inode, %struct.inode* %26, i32 0, i32 13, !dbg !6618
  %27 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !6619
  %call30 = call { i64, i64 } @current_time(%struct.inode* %27) #11, !dbg !6620
  %28 = bitcast %struct.timespec64* %tmp to { i64, i64 }*, !dbg !6620
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !6620
  %30 = extractvalue { i64, i64 } %call30, 0, !dbg !6620
  store i64 %30, i64* %29, align 8, !dbg !6620
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !6620
  %32 = extractvalue { i64, i64 } %call30, 1, !dbg !6620
  store i64 %32, i64* %31, align 8, !dbg !6620
  %33 = bitcast %struct.timespec64* %i_mtime to i8*, !dbg !6620
  %34 = bitcast %struct.timespec64* %tmp to i8*, !dbg !6620
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 16, i1 false), !dbg !6620
  br label %if.end31, !dbg !6617

if.end31:                                         ; preds = %if.then29, %do.end27
  br label %sw.epilog202, !dbg !6621

sw.bb32:                                          ; preds = %if.end20
  br label %do.body33, !dbg !6622

do.body33:                                        ; preds = %sw.bb32
  %35 = load i8, i8* @usbfs_snoop, align 1, !dbg !6623
  %tobool34 = trunc i8 %35 to i1, !dbg !6623
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !6626

if.then35:                                        ; preds = %do.body33
  %36 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6623
  %dev36 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %36, i32 0, i32 14, !dbg !6623
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev36, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6623
  br label %if.end37, !dbg !6623

if.end37:                                         ; preds = %if.then35, %do.body33
  br label %do.end38, !dbg !6626

do.end38:                                         ; preds = %if.end37
  %37 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6627
  %38 = load i8*, i8** %p.addr, align 8, !dbg !6628
  %call39 = call i32 @proc_bulk(%struct.usb_dev_state* %37, i8* %38) #11, !dbg !6629
  store i32 %call39, i32* %ret, align 4, !dbg !6630
  %39 = load i32, i32* %ret, align 4, !dbg !6631
  %cmp40 = icmp sge i32 %39, 0, !dbg !6633
  br i1 %cmp40, label %if.then41, label %if.end45, !dbg !6634

if.then41:                                        ; preds = %do.end38
  %40 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !6635
  %i_mtime42 = getelementptr inbounds %struct.inode, %struct.inode* %40, i32 0, i32 13, !dbg !6636
  %41 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !6637
  %call44 = call { i64, i64 } @current_time(%struct.inode* %41) #11, !dbg !6638
  %42 = bitcast %struct.timespec64* %tmp43 to { i64, i64 }*, !dbg !6638
  %43 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %42, i32 0, i32 0, !dbg !6638
  %44 = extractvalue { i64, i64 } %call44, 0, !dbg !6638
  store i64 %44, i64* %43, align 8, !dbg !6638
  %45 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %42, i32 0, i32 1, !dbg !6638
  %46 = extractvalue { i64, i64 } %call44, 1, !dbg !6638
  store i64 %46, i64* %45, align 8, !dbg !6638
  %47 = bitcast %struct.timespec64* %i_mtime42 to i8*, !dbg !6638
  %48 = bitcast %struct.timespec64* %tmp43 to i8*, !dbg !6638
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 16, i1 false), !dbg !6638
  br label %if.end45, !dbg !6635

if.end45:                                         ; preds = %if.then41, %do.end38
  br label %sw.epilog202, !dbg !6639

sw.bb46:                                          ; preds = %if.end20
  br label %do.body47, !dbg !6640

do.body47:                                        ; preds = %sw.bb46
  %49 = load i8, i8* @usbfs_snoop, align 1, !dbg !6641
  %tobool48 = trunc i8 %49 to i1, !dbg !6641
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !6644

if.then49:                                        ; preds = %do.body47
  %50 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6641
  %dev50 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %50, i32 0, i32 14, !dbg !6641
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev50, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6641
  br label %if.end51, !dbg !6641

if.end51:                                         ; preds = %if.then49, %do.body47
  br label %do.end52, !dbg !6644

do.end52:                                         ; preds = %if.end51
  %51 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6645
  %52 = load i8*, i8** %p.addr, align 8, !dbg !6646
  %call53 = call i32 @proc_resetep(%struct.usb_dev_state* %51, i8* %52) #11, !dbg !6647
  store i32 %call53, i32* %ret, align 4, !dbg !6648
  %53 = load i32, i32* %ret, align 4, !dbg !6649
  %cmp54 = icmp sge i32 %53, 0, !dbg !6651
  br i1 %cmp54, label %if.then55, label %if.end59, !dbg !6652

if.then55:                                        ; preds = %do.end52
  %54 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !6653
  %i_mtime56 = getelementptr inbounds %struct.inode, %struct.inode* %54, i32 0, i32 13, !dbg !6654
  %55 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !6655
  %call58 = call { i64, i64 } @current_time(%struct.inode* %55) #11, !dbg !6656
  %56 = bitcast %struct.timespec64* %tmp57 to { i64, i64 }*, !dbg !6656
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %56, i32 0, i32 0, !dbg !6656
  %58 = extractvalue { i64, i64 } %call58, 0, !dbg !6656
  store i64 %58, i64* %57, align 8, !dbg !6656
  %59 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %56, i32 0, i32 1, !dbg !6656
  %60 = extractvalue { i64, i64 } %call58, 1, !dbg !6656
  store i64 %60, i64* %59, align 8, !dbg !6656
  %61 = bitcast %struct.timespec64* %i_mtime56 to i8*, !dbg !6656
  %62 = bitcast %struct.timespec64* %tmp57 to i8*, !dbg !6656
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 16, i1 false), !dbg !6656
  br label %if.end59, !dbg !6653

if.end59:                                         ; preds = %if.then55, %do.end52
  br label %sw.epilog202, !dbg !6657

sw.bb60:                                          ; preds = %if.end20
  br label %do.body61, !dbg !6658

do.body61:                                        ; preds = %sw.bb60
  %63 = load i8, i8* @usbfs_snoop, align 1, !dbg !6659
  %tobool62 = trunc i8 %63 to i1, !dbg !6659
  br i1 %tobool62, label %if.then63, label %if.end65, !dbg !6662

if.then63:                                        ; preds = %do.body61
  %64 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6659
  %dev64 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %64, i32 0, i32 14, !dbg !6659
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev64, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6659
  br label %if.end65, !dbg !6659

if.end65:                                         ; preds = %if.then63, %do.body61
  br label %do.end66, !dbg !6662

do.end66:                                         ; preds = %if.end65
  %65 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6663
  %call67 = call i32 @proc_resetdevice(%struct.usb_dev_state* %65) #11, !dbg !6664
  store i32 %call67, i32* %ret, align 4, !dbg !6665
  br label %sw.epilog202, !dbg !6666

sw.bb68:                                          ; preds = %if.end20
  br label %do.body69, !dbg !6667

do.body69:                                        ; preds = %sw.bb68
  %66 = load i8, i8* @usbfs_snoop, align 1, !dbg !6668
  %tobool70 = trunc i8 %66 to i1, !dbg !6668
  br i1 %tobool70, label %if.then71, label %if.end73, !dbg !6671

if.then71:                                        ; preds = %do.body69
  %67 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6668
  %dev72 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %67, i32 0, i32 14, !dbg !6668
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev72, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6668
  br label %if.end73, !dbg !6668

if.end73:                                         ; preds = %if.then71, %do.body69
  br label %do.end74, !dbg !6671

do.end74:                                         ; preds = %if.end73
  %68 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6672
  %69 = load i8*, i8** %p.addr, align 8, !dbg !6673
  %call75 = call i32 @proc_clearhalt(%struct.usb_dev_state* %68, i8* %69) #11, !dbg !6674
  store i32 %call75, i32* %ret, align 4, !dbg !6675
  %70 = load i32, i32* %ret, align 4, !dbg !6676
  %cmp76 = icmp sge i32 %70, 0, !dbg !6678
  br i1 %cmp76, label %if.then77, label %if.end81, !dbg !6679

if.then77:                                        ; preds = %do.end74
  %71 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !6680
  %i_mtime78 = getelementptr inbounds %struct.inode, %struct.inode* %71, i32 0, i32 13, !dbg !6681
  %72 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !6682
  %call80 = call { i64, i64 } @current_time(%struct.inode* %72) #11, !dbg !6683
  %73 = bitcast %struct.timespec64* %tmp79 to { i64, i64 }*, !dbg !6683
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %73, i32 0, i32 0, !dbg !6683
  %75 = extractvalue { i64, i64 } %call80, 0, !dbg !6683
  store i64 %75, i64* %74, align 8, !dbg !6683
  %76 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %73, i32 0, i32 1, !dbg !6683
  %77 = extractvalue { i64, i64 } %call80, 1, !dbg !6683
  store i64 %77, i64* %76, align 8, !dbg !6683
  %78 = bitcast %struct.timespec64* %i_mtime78 to i8*, !dbg !6683
  %79 = bitcast %struct.timespec64* %tmp79 to i8*, !dbg !6683
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %78, i8* align 8 %79, i64 16, i1 false), !dbg !6683
  br label %if.end81, !dbg !6680

if.end81:                                         ; preds = %if.then77, %do.end74
  br label %sw.epilog202, !dbg !6684

sw.bb82:                                          ; preds = %if.end20
  br label %do.body83, !dbg !6685

do.body83:                                        ; preds = %sw.bb82
  %80 = load i8, i8* @usbfs_snoop, align 1, !dbg !6686
  %tobool84 = trunc i8 %80 to i1, !dbg !6686
  br i1 %tobool84, label %if.then85, label %if.end87, !dbg !6689

if.then85:                                        ; preds = %do.body83
  %81 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6686
  %dev86 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %81, i32 0, i32 14, !dbg !6686
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev86, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6686
  br label %if.end87, !dbg !6686

if.end87:                                         ; preds = %if.then85, %do.body83
  br label %do.end88, !dbg !6689

do.end88:                                         ; preds = %if.end87
  %82 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6690
  %83 = load i8*, i8** %p.addr, align 8, !dbg !6691
  %call89 = call i32 @proc_getdriver(%struct.usb_dev_state* %82, i8* %83) #11, !dbg !6692
  store i32 %call89, i32* %ret, align 4, !dbg !6693
  br label %sw.epilog202, !dbg !6694

sw.bb90:                                          ; preds = %if.end20
  br label %do.body91, !dbg !6695

do.body91:                                        ; preds = %sw.bb90
  %84 = load i8, i8* @usbfs_snoop, align 1, !dbg !6696
  %tobool92 = trunc i8 %84 to i1, !dbg !6696
  br i1 %tobool92, label %if.then93, label %if.end95, !dbg !6699

if.then93:                                        ; preds = %do.body91
  %85 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6696
  %dev94 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %85, i32 0, i32 14, !dbg !6696
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev94, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6696
  br label %if.end95, !dbg !6696

if.end95:                                         ; preds = %if.then93, %do.body91
  br label %do.end96, !dbg !6699

do.end96:                                         ; preds = %if.end95
  %86 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6700
  %87 = load i8*, i8** %p.addr, align 8, !dbg !6701
  %call97 = call i32 @proc_connectinfo(%struct.usb_dev_state* %86, i8* %87) #11, !dbg !6702
  store i32 %call97, i32* %ret, align 4, !dbg !6703
  br label %sw.epilog202, !dbg !6704

sw.bb98:                                          ; preds = %if.end20
  br label %do.body99, !dbg !6705

do.body99:                                        ; preds = %sw.bb98
  %88 = load i8, i8* @usbfs_snoop, align 1, !dbg !6706
  %tobool100 = trunc i8 %88 to i1, !dbg !6706
  br i1 %tobool100, label %if.then101, label %if.end103, !dbg !6709

if.then101:                                       ; preds = %do.body99
  %89 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6706
  %dev102 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %89, i32 0, i32 14, !dbg !6706
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev102, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6706
  br label %if.end103, !dbg !6706

if.end103:                                        ; preds = %if.then101, %do.body99
  br label %do.end104, !dbg !6709

do.end104:                                        ; preds = %if.end103
  %90 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6710
  %91 = load i8*, i8** %p.addr, align 8, !dbg !6711
  %call105 = call i32 @proc_setintf(%struct.usb_dev_state* %90, i8* %91) #11, !dbg !6712
  store i32 %call105, i32* %ret, align 4, !dbg !6713
  br label %sw.epilog202, !dbg !6714

sw.bb106:                                         ; preds = %if.end20
  br label %do.body107, !dbg !6715

do.body107:                                       ; preds = %sw.bb106
  %92 = load i8, i8* @usbfs_snoop, align 1, !dbg !6716
  %tobool108 = trunc i8 %92 to i1, !dbg !6716
  br i1 %tobool108, label %if.then109, label %if.end111, !dbg !6719

if.then109:                                       ; preds = %do.body107
  %93 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6716
  %dev110 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %93, i32 0, i32 14, !dbg !6716
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev110, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6716
  br label %if.end111, !dbg !6716

if.end111:                                        ; preds = %if.then109, %do.body107
  br label %do.end112, !dbg !6719

do.end112:                                        ; preds = %if.end111
  %94 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6720
  %95 = load i8*, i8** %p.addr, align 8, !dbg !6721
  %call113 = call i32 @proc_setconfig(%struct.usb_dev_state* %94, i8* %95) #11, !dbg !6722
  store i32 %call113, i32* %ret, align 4, !dbg !6723
  br label %sw.epilog202, !dbg !6724

sw.bb114:                                         ; preds = %if.end20
  br label %do.body115, !dbg !6725

do.body115:                                       ; preds = %sw.bb114
  %96 = load i8, i8* @usbfs_snoop, align 1, !dbg !6726
  %tobool116 = trunc i8 %96 to i1, !dbg !6726
  br i1 %tobool116, label %if.then117, label %if.end119, !dbg !6729

if.then117:                                       ; preds = %do.body115
  %97 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6726
  %dev118 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %97, i32 0, i32 14, !dbg !6726
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev118, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6726
  br label %if.end119, !dbg !6726

if.end119:                                        ; preds = %if.then117, %do.body115
  br label %do.end120, !dbg !6729

do.end120:                                        ; preds = %if.end119
  %98 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6730
  %99 = load i8*, i8** %p.addr, align 8, !dbg !6731
  %call121 = call i32 @proc_submiturb(%struct.usb_dev_state* %98, i8* %99) #11, !dbg !6732
  store i32 %call121, i32* %ret, align 4, !dbg !6733
  %100 = load i32, i32* %ret, align 4, !dbg !6734
  %cmp122 = icmp sge i32 %100, 0, !dbg !6736
  br i1 %cmp122, label %if.then123, label %if.end127, !dbg !6737

if.then123:                                       ; preds = %do.end120
  %101 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !6738
  %i_mtime124 = getelementptr inbounds %struct.inode, %struct.inode* %101, i32 0, i32 13, !dbg !6739
  %102 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !6740
  %call126 = call { i64, i64 } @current_time(%struct.inode* %102) #11, !dbg !6741
  %103 = bitcast %struct.timespec64* %tmp125 to { i64, i64 }*, !dbg !6741
  %104 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %103, i32 0, i32 0, !dbg !6741
  %105 = extractvalue { i64, i64 } %call126, 0, !dbg !6741
  store i64 %105, i64* %104, align 8, !dbg !6741
  %106 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %103, i32 0, i32 1, !dbg !6741
  %107 = extractvalue { i64, i64 } %call126, 1, !dbg !6741
  store i64 %107, i64* %106, align 8, !dbg !6741
  %108 = bitcast %struct.timespec64* %i_mtime124 to i8*, !dbg !6741
  %109 = bitcast %struct.timespec64* %tmp125 to i8*, !dbg !6741
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 16, i1 false), !dbg !6741
  br label %if.end127, !dbg !6738

if.end127:                                        ; preds = %if.then123, %do.end120
  br label %sw.epilog202, !dbg !6742

sw.bb128:                                         ; preds = %if.end20
  br label %do.body129, !dbg !6743

do.body129:                                       ; preds = %sw.bb128
  %110 = load i8, i8* @usbfs_snoop, align 1, !dbg !6744
  %tobool130 = trunc i8 %110 to i1, !dbg !6744
  br i1 %tobool130, label %if.then131, label %if.end133, !dbg !6747

if.then131:                                       ; preds = %do.body129
  %111 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6744
  %dev132 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %111, i32 0, i32 14, !dbg !6744
  %112 = load i8*, i8** %p.addr, align 8, !dbg !6744
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev132, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0), i8* %112) #12, !dbg !6744
  br label %if.end133, !dbg !6744

if.end133:                                        ; preds = %if.then131, %do.body129
  br label %do.end134, !dbg !6747

do.end134:                                        ; preds = %if.end133
  %113 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6748
  %114 = load i8*, i8** %p.addr, align 8, !dbg !6749
  %call135 = call i32 @proc_unlinkurb(%struct.usb_dev_state* %113, i8* %114) #11, !dbg !6750
  store i32 %call135, i32* %ret, align 4, !dbg !6751
  br label %sw.epilog202, !dbg !6752

sw.bb136:                                         ; preds = %if.end20
  br label %do.body137, !dbg !6753

do.body137:                                       ; preds = %sw.bb136
  %115 = load i8, i8* @usbfs_snoop, align 1, !dbg !6754
  %tobool138 = trunc i8 %115 to i1, !dbg !6754
  br i1 %tobool138, label %if.then139, label %if.end141, !dbg !6757

if.then139:                                       ; preds = %do.body137
  %116 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6754
  %dev140 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %116, i32 0, i32 14, !dbg !6754
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev140, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6754
  br label %if.end141, !dbg !6754

if.end141:                                        ; preds = %if.then139, %do.body137
  br label %do.end142, !dbg !6757

do.end142:                                        ; preds = %if.end141
  %117 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6758
  %118 = load i8*, i8** %p.addr, align 8, !dbg !6759
  %call143 = call i32 @proc_disconnectsignal(%struct.usb_dev_state* %117, i8* %118) #11, !dbg !6760
  store i32 %call143, i32* %ret, align 4, !dbg !6761
  br label %sw.epilog202, !dbg !6762

sw.bb144:                                         ; preds = %if.end20
  br label %do.body145, !dbg !6763

do.body145:                                       ; preds = %sw.bb144
  %119 = load i8, i8* @usbfs_snoop, align 1, !dbg !6764
  %tobool146 = trunc i8 %119 to i1, !dbg !6764
  br i1 %tobool146, label %if.then147, label %if.end149, !dbg !6767

if.then147:                                       ; preds = %do.body145
  %120 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6764
  %dev148 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %120, i32 0, i32 14, !dbg !6764
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev148, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6764
  br label %if.end149, !dbg !6764

if.end149:                                        ; preds = %if.then147, %do.body145
  br label %do.end150, !dbg !6767

do.end150:                                        ; preds = %if.end149
  %121 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6768
  %122 = load i8*, i8** %p.addr, align 8, !dbg !6769
  %call151 = call i32 @proc_claiminterface(%struct.usb_dev_state* %121, i8* %122) #11, !dbg !6770
  store i32 %call151, i32* %ret, align 4, !dbg !6771
  br label %sw.epilog202, !dbg !6772

sw.bb152:                                         ; preds = %if.end20
  br label %do.body153, !dbg !6773

do.body153:                                       ; preds = %sw.bb152
  %123 = load i8, i8* @usbfs_snoop, align 1, !dbg !6774
  %tobool154 = trunc i8 %123 to i1, !dbg !6774
  br i1 %tobool154, label %if.then155, label %if.end157, !dbg !6777

if.then155:                                       ; preds = %do.body153
  %124 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6774
  %dev156 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %124, i32 0, i32 14, !dbg !6774
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev156, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6774
  br label %if.end157, !dbg !6774

if.end157:                                        ; preds = %if.then155, %do.body153
  br label %do.end158, !dbg !6777

do.end158:                                        ; preds = %if.end157
  %125 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6778
  %126 = load i8*, i8** %p.addr, align 8, !dbg !6779
  %call159 = call i32 @proc_releaseinterface(%struct.usb_dev_state* %125, i8* %126) #11, !dbg !6780
  store i32 %call159, i32* %ret, align 4, !dbg !6781
  br label %sw.epilog202, !dbg !6782

sw.bb160:                                         ; preds = %if.end20
  br label %do.body161, !dbg !6783

do.body161:                                       ; preds = %sw.bb160
  %127 = load i8, i8* @usbfs_snoop, align 1, !dbg !6784
  %tobool162 = trunc i8 %127 to i1, !dbg !6784
  br i1 %tobool162, label %if.then163, label %if.end165, !dbg !6787

if.then163:                                       ; preds = %do.body161
  %128 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6784
  %dev164 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %128, i32 0, i32 14, !dbg !6784
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev164, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6784
  br label %if.end165, !dbg !6784

if.end165:                                        ; preds = %if.then163, %do.body161
  br label %do.end166, !dbg !6787

do.end166:                                        ; preds = %if.end165
  %129 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6788
  %130 = load i8*, i8** %p.addr, align 8, !dbg !6789
  %call167 = call i32 @proc_ioctl_default(%struct.usb_dev_state* %129, i8* %130) #11, !dbg !6790
  store i32 %call167, i32* %ret, align 4, !dbg !6791
  br label %sw.epilog202, !dbg !6792

sw.bb168:                                         ; preds = %if.end20
  br label %do.body169, !dbg !6793

do.body169:                                       ; preds = %sw.bb168
  %131 = load i8, i8* @usbfs_snoop, align 1, !dbg !6794
  %tobool170 = trunc i8 %131 to i1, !dbg !6794
  br i1 %tobool170, label %if.then171, label %if.end173, !dbg !6797

if.then171:                                       ; preds = %do.body169
  %132 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6794
  %dev172 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %132, i32 0, i32 14, !dbg !6794
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev172, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6794
  br label %if.end173, !dbg !6794

if.end173:                                        ; preds = %if.then171, %do.body169
  br label %do.end174, !dbg !6797

do.end174:                                        ; preds = %if.end173
  %133 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6798
  %134 = load i8*, i8** %p.addr, align 8, !dbg !6799
  %call175 = call i32 @proc_claim_port(%struct.usb_dev_state* %133, i8* %134) #11, !dbg !6800
  store i32 %call175, i32* %ret, align 4, !dbg !6801
  br label %sw.epilog202, !dbg !6802

sw.bb176:                                         ; preds = %if.end20
  br label %do.body177, !dbg !6803

do.body177:                                       ; preds = %sw.bb176
  %135 = load i8, i8* @usbfs_snoop, align 1, !dbg !6804
  %tobool178 = trunc i8 %135 to i1, !dbg !6804
  br i1 %tobool178, label %if.then179, label %if.end181, !dbg !6807

if.then179:                                       ; preds = %do.body177
  %136 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6804
  %dev180 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %136, i32 0, i32 14, !dbg !6804
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev180, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i64 0, i64 0)) #12, !dbg !6804
  br label %if.end181, !dbg !6804

if.end181:                                        ; preds = %if.then179, %do.body177
  br label %do.end182, !dbg !6807

do.end182:                                        ; preds = %if.end181
  %137 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6808
  %138 = load i8*, i8** %p.addr, align 8, !dbg !6809
  %call183 = call i32 @proc_release_port(%struct.usb_dev_state* %137, i8* %138) #11, !dbg !6810
  store i32 %call183, i32* %ret, align 4, !dbg !6811
  br label %sw.epilog202, !dbg !6812

sw.bb184:                                         ; preds = %if.end20
  %139 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6813
  %140 = load i8*, i8** %p.addr, align 8, !dbg !6814
  %call185 = call i32 @proc_get_capabilities(%struct.usb_dev_state* %139, i8* %140) #11, !dbg !6815
  store i32 %call185, i32* %ret, align 4, !dbg !6816
  br label %sw.epilog202, !dbg !6817

sw.bb186:                                         ; preds = %if.end20
  %141 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6818
  %142 = load i8*, i8** %p.addr, align 8, !dbg !6819
  %call187 = call i32 @proc_disconnect_claim(%struct.usb_dev_state* %141, i8* %142) #11, !dbg !6820
  store i32 %call187, i32* %ret, align 4, !dbg !6821
  br label %sw.epilog202, !dbg !6822

sw.bb188:                                         ; preds = %if.end20
  %143 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6823
  %144 = load i8*, i8** %p.addr, align 8, !dbg !6824
  %call189 = call i32 @proc_alloc_streams(%struct.usb_dev_state* %143, i8* %144) #11, !dbg !6825
  store i32 %call189, i32* %ret, align 4, !dbg !6826
  br label %sw.epilog202, !dbg !6827

sw.bb190:                                         ; preds = %if.end20
  %145 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6828
  %146 = load i8*, i8** %p.addr, align 8, !dbg !6829
  %call191 = call i32 @proc_free_streams(%struct.usb_dev_state* %145, i8* %146) #11, !dbg !6830
  store i32 %call191, i32* %ret, align 4, !dbg !6831
  br label %sw.epilog202, !dbg !6832

sw.bb192:                                         ; preds = %if.end20
  %147 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6833
  %148 = load i8*, i8** %p.addr, align 8, !dbg !6834
  %call193 = call i32 @proc_drop_privileges(%struct.usb_dev_state* %147, i8* %148) #11, !dbg !6835
  store i32 %call193, i32* %ret, align 4, !dbg !6836
  br label %sw.epilog202, !dbg !6837

sw.bb194:                                         ; preds = %if.end20
  %149 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6838
  %dev195 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %149, i32 0, i32 1, !dbg !6839
  %150 = load %struct.usb_device*, %struct.usb_device** %dev195, align 8, !dbg !6839
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %150, i32 0, i32 4, !dbg !6840
  %151 = load i32, i32* %speed, align 4, !dbg !6840
  store i32 %151, i32* %ret, align 4, !dbg !6841
  br label %sw.epilog202, !dbg !6842

sw.bb196:                                         ; preds = %if.end20
  %152 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6843
  %call197 = call i32 @proc_forbid_suspend(%struct.usb_dev_state* %152) #11, !dbg !6844
  store i32 %call197, i32* %ret, align 4, !dbg !6845
  br label %sw.epilog202, !dbg !6846

sw.bb198:                                         ; preds = %if.end20
  %153 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6847
  %call199 = call i32 @proc_allow_suspend(%struct.usb_dev_state* %153) #11, !dbg !6848
  store i32 %call199, i32* %ret, align 4, !dbg !6849
  br label %sw.epilog202, !dbg !6850

sw.bb200:                                         ; preds = %if.end20
  %154 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6851
  %call201 = call i32 @proc_wait_for_resume(%struct.usb_dev_state* %154) #11, !dbg !6852
  store i32 %call201, i32* %ret, align 4, !dbg !6853
  br label %sw.epilog202, !dbg !6854

sw.epilog202:                                     ; preds = %if.end20, %sw.bb200, %sw.bb198, %sw.bb196, %sw.bb194, %sw.bb192, %sw.bb190, %sw.bb188, %sw.bb186, %sw.bb184, %do.end182, %do.end174, %do.end166, %do.end158, %do.end150, %do.end142, %do.end134, %if.end127, %do.end112, %do.end104, %do.end96, %do.end88, %if.end81, %do.end66, %if.end59, %if.end45, %if.end31
  %155 = load i32, i32* %cmd.addr, align 4, !dbg !6855
  %and203 = and i32 %155, -1073676289, !dbg !6856
  switch i32 %and203, label %sw.epilog207 [
    i32 -2147461856, label %sw.bb204
  ], !dbg !6857

sw.bb204:                                         ; preds = %sw.epilog202
  %156 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !6858
  %157 = load i8*, i8** %p.addr, align 8, !dbg !6860
  %158 = load i32, i32* %cmd.addr, align 4, !dbg !6861
  %shr = lshr i32 %158, 16, !dbg !6861
  %and205 = and i32 %shr, 16383, !dbg !6861
  %conv = zext i32 %and205 to i64, !dbg !6861
  %call206 = call i32 @proc_conninfo_ex(%struct.usb_dev_state* %156, i8* %157, i64 %conv) #11, !dbg !6862
  store i32 %call206, i32* %ret, align 4, !dbg !6863
  br label %sw.epilog207, !dbg !6864

sw.epilog207:                                     ; preds = %sw.epilog202, %sw.bb204
  br label %done, !dbg !6865

done:                                             ; preds = %sw.epilog207, %do.end14, %do.end
  call void @llvm.dbg.label(metadata !6866), !dbg !6867
  %159 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6868
  %dev208 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %159, i32 0, i32 14, !dbg !6868
  call void @device_unlock(%struct.device* %dev208) #11, !dbg !6868
  %160 = load i32, i32* %ret, align 4, !dbg !6869
  %cmp209 = icmp sge i32 %160, 0, !dbg !6871
  br i1 %cmp209, label %if.then211, label %if.end214, !dbg !6872

if.then211:                                       ; preds = %done
  %161 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !6873
  %i_atime = getelementptr inbounds %struct.inode, %struct.inode* %161, i32 0, i32 12, !dbg !6874
  %162 = load %struct.inode*, %struct.inode** %inode, align 8, !dbg !6875
  %call213 = call { i64, i64 } @current_time(%struct.inode* %162) #11, !dbg !6876
  %163 = bitcast %struct.timespec64* %tmp212 to { i64, i64 }*, !dbg !6876
  %164 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %163, i32 0, i32 0, !dbg !6876
  %165 = extractvalue { i64, i64 } %call213, 0, !dbg !6876
  store i64 %165, i64* %164, align 8, !dbg !6876
  %166 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %163, i32 0, i32 1, !dbg !6876
  %167 = extractvalue { i64, i64 } %call213, 1, !dbg !6876
  store i64 %167, i64* %166, align 8, !dbg !6876
  %168 = bitcast %struct.timespec64* %i_atime to i8*, !dbg !6876
  %169 = bitcast %struct.timespec64* %tmp212 to i8*, !dbg !6876
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %168, i8* align 8 %169, i64 16, i1 false), !dbg !6876
  br label %if.end214, !dbg !6873

if.end214:                                        ; preds = %if.then211, %done
  %170 = load i32, i32* %ret, align 4, !dbg !6877
  %conv215 = sext i32 %170 to i64, !dbg !6877
  store i64 %conv215, i64* %retval, align 8, !dbg !6878
  br label %return, !dbg !6878

return:                                           ; preds = %if.end214, %if.then18, %if.then
  %171 = load i64, i64* %retval, align 8, !dbg !6879
  ret i64 %171, !dbg !6879
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.inode* @file_inode(%struct.file* %f) #0 !dbg !6880 {
entry:
  %f.addr = alloca %struct.file*, align 8
  store %struct.file* %f, %struct.file** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %f.addr, metadata !6885, metadata !DIExpression()), !dbg !6886
  %0 = load %struct.file*, %struct.file** %f.addr, align 8, !dbg !6887
  %f_inode = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 2, !dbg !6888
  %1 = load %struct.inode*, %struct.inode** %f_inode, align 8, !dbg !6888
  ret %struct.inode* %1, !dbg !6889
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_reapurb(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !6890 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5665, metadata !DIExpression()), !dbg !6893
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !5675, metadata !DIExpression()), !dbg !6896
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !5678, metadata !DIExpression()), !dbg !6897
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %as = alloca %struct.async*, align 8
  %retval1 = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !6898, metadata !DIExpression()), !dbg !6899
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.declare(metadata %struct.async** %as, metadata !6902, metadata !DIExpression()), !dbg !6903
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6904
  %call = call %struct.async* @reap_as(%struct.usb_dev_state* %0) #11, !dbg !6905
  store %struct.async* %call, %struct.async** %as, align 8, !dbg !6903
  %1 = load %struct.async*, %struct.async** %as, align 8, !dbg !6906
  %tobool = icmp ne %struct.async* %1, null, !dbg !6906
  br i1 %tobool, label %if.then, label %if.end6, !dbg !6908

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6909, metadata !DIExpression()), !dbg !6911
  br label %do.body, !dbg !6912

do.body:                                          ; preds = %if.then
  %2 = load i8, i8* @usbfs_snoop, align 1, !dbg !6913
  %tobool2 = trunc i8 %2 to i1, !dbg !6913
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !6916

if.then3:                                         ; preds = %do.body
  %3 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6913
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %3, i32 0, i32 1, !dbg !6913
  %4 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6913
  %dev4 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 14, !dbg !6913
  %5 = load %struct.async*, %struct.async** %as, align 8, !dbg !6913
  %userurb = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 7, !dbg !6913
  %6 = load i8*, i8** %userurb, align 8, !dbg !6913
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0), i8* %6) #12, !dbg !6913
  br label %if.end, !dbg !6913

if.end:                                           ; preds = %if.then3, %do.body
  br label %do.end, !dbg !6916

do.end:                                           ; preds = %if.end
  %7 = load %struct.async*, %struct.async** %as, align 8, !dbg !6917
  %8 = load i8*, i8** %arg.addr, align 8, !dbg !6918
  %9 = bitcast i8* %8 to i8**, !dbg !6919
  %call5 = call i32 @processcompl(%struct.async* %7, i8** %9) #11, !dbg !6920
  store i32 %call5, i32* %retval1, align 4, !dbg !6921
  %10 = load %struct.async*, %struct.async** %as, align 8, !dbg !6922
  call void @free_async(%struct.async* %10) #11, !dbg !6923
  %11 = load i32, i32* %retval1, align 4, !dbg !6924
  store i32 %11, i32* %retval, align 4, !dbg !6925
  br label %return, !dbg !6925

if.end6:                                          ; preds = %entry
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !6896
  %12 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !6896
  %13 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !6897, !srcloc !5776
  store i64 %13, i64* %pfo_val__.i, align 8, !dbg !6897
  %14 = load i64, i64* %pfo_val__.i, align 8, !dbg !6897
  %15 = inttoptr i64 %14 to %struct.task_struct*, !dbg !6897
  store %struct.task_struct* %15, %struct.task_struct** %tmp.i, align 8, !dbg !6897
  %16 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !6897
  store %struct.task_struct* %16, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !6893
  %17 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !6893
  store %struct.task_struct* %17, %struct.task_struct** %tmp1.i, align 8, !dbg !6893
  %18 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !6893
  %call8 = call i32 @signal_pending(%struct.task_struct* %18) #11, !dbg !6926
  %tobool9 = icmp ne i32 %call8, 0, !dbg !6926
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !6927

if.then10:                                        ; preds = %if.end6
  store i32 -4, i32* %retval, align 4, !dbg !6928
  br label %return, !dbg !6928

if.end11:                                         ; preds = %if.end6
  store i32 -19, i32* %retval, align 4, !dbg !6929
  br label %return, !dbg !6929

return:                                           ; preds = %if.end11, %if.then10, %do.end
  %19 = load i32, i32* %retval, align 4, !dbg !6930
  ret i32 %19, !dbg !6930
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_reapurbnonblock(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !6931 {
entry:
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %retval1 = alloca i32, align 4
  %as = alloca %struct.async*, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !6932, metadata !DIExpression()), !dbg !6933
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !6934, metadata !DIExpression()), !dbg !6935
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6936, metadata !DIExpression()), !dbg !6937
  call void @llvm.dbg.declare(metadata %struct.async** %as, metadata !6938, metadata !DIExpression()), !dbg !6939
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6940
  %call = call %struct.async* @async_getcompleted(%struct.usb_dev_state* %0) #11, !dbg !6941
  store %struct.async* %call, %struct.async** %as, align 8, !dbg !6942
  %1 = load %struct.async*, %struct.async** %as, align 8, !dbg !6943
  %tobool = icmp ne %struct.async* %1, null, !dbg !6943
  br i1 %tobool, label %if.then, label %if.else, !dbg !6945

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6946

do.body:                                          ; preds = %if.then
  %2 = load i8, i8* @usbfs_snoop, align 1, !dbg !6948
  %tobool2 = trunc i8 %2 to i1, !dbg !6948
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !6951

if.then3:                                         ; preds = %do.body
  %3 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6948
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %3, i32 0, i32 1, !dbg !6948
  %4 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !6948
  %dev4 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 14, !dbg !6948
  %5 = load %struct.async*, %struct.async** %as, align 8, !dbg !6948
  %userurb = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 7, !dbg !6948
  %6 = load i8*, i8** %userurb, align 8, !dbg !6948
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0), i8* %6) #12, !dbg !6948
  br label %if.end, !dbg !6948

if.end:                                           ; preds = %if.then3, %do.body
  br label %do.end, !dbg !6951

do.end:                                           ; preds = %if.end
  %7 = load %struct.async*, %struct.async** %as, align 8, !dbg !6952
  %8 = load i8*, i8** %arg.addr, align 8, !dbg !6953
  %9 = bitcast i8* %8 to i8**, !dbg !6954
  %call5 = call i32 @processcompl(%struct.async* %7, i8** %9) #11, !dbg !6955
  store i32 %call5, i32* %retval1, align 4, !dbg !6956
  %10 = load %struct.async*, %struct.async** %as, align 8, !dbg !6957
  call void @free_async(%struct.async* %10) #11, !dbg !6958
  br label %if.end8, !dbg !6959

if.else:                                          ; preds = %entry
  %11 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !6960
  %call6 = call i32 @connected(%struct.usb_dev_state* %11) #11, !dbg !6962
  %tobool7 = icmp ne i32 %call6, 0, !dbg !6962
  %12 = zext i1 %tobool7 to i64, !dbg !6962
  %cond = select i1 %tobool7, i32 -11, i32 -19, !dbg !6962
  store i32 %cond, i32* %retval1, align 4, !dbg !6963
  br label %if.end8

if.end8:                                          ; preds = %if.else, %do.end
  %13 = load i32, i32* %retval1, align 4, !dbg !6964
  ret i32 %13, !dbg !6965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_control(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !6966 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !6967
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !6973
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !6974
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !6975
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !6976
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6977, metadata !DIExpression()), !dbg !6978
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6979, metadata !DIExpression()), !dbg !6980
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6981, metadata !DIExpression()), !dbg !6982
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %ctrl = alloca %struct.usbdevfs_ctrltransfer, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !6983, metadata !DIExpression()), !dbg !6984
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !6985, metadata !DIExpression()), !dbg !6986
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_ctrltransfer* %ctrl, metadata !6987, metadata !DIExpression()), !dbg !6997
  %0 = bitcast %struct.usbdevfs_ctrltransfer* %ctrl to i8*, !dbg !6998
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !6999
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 24, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !7000
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !7000
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !6975
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !7001
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !7001
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7001

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !7001
  %conv.i.i = sext i32 %5 to i64, !dbg !7001
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7001
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !7001
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7002
  %lnot.i.i = xor i1 %7, true, !dbg !7001
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !7001
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7001
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !7003

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7004
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #7, !dbg !7005
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !7006

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !7007
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7008
  call void @copy_overflow(i32 %10, i64 %11) #13, !dbg !7009
  br label %if.end9.i.i, !dbg !7009

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7010
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !7010
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7011

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !7012
  br label %if.end.i.i, !dbg !7012

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !7013
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7014
  br label %check_copy_size.exit.i, !dbg !7014

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !6976
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !6976
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !6976
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !6976
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !6976
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7015
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !7015
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7015
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7015
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7015
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !6976

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !7016, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !7017, !srcloc !5212
  br label %if.end31.i.i, !dbg !7018

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !6976
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !6976
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !6976
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !6976
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !6976
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7015
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !6976
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !7019
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7020

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7021
  br label %check_copy_size.exit.i, !dbg !7021

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7022
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7023
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7024
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !7024
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #13, !dbg !7025
  store i1 true, i1* %retval.i.i, align 1, !dbg !7026
  br label %check_copy_size.exit.i, !dbg !7026

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !7027
  %lnot.i = xor i1 %20, true, !dbg !7000
  %lnot.ext.i = zext i1 %20 to i32, !dbg !7000
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7000
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !7028

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !7029
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !7030
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !7031
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #13, !dbg !7032
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7033
  br label %copy_from_user.exit, !dbg !7034

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !7035
  %tobool = icmp ne i64 %24, 0, !dbg !7036
  br i1 %tobool, label %if.then, label %if.end, !dbg !7037

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7038
  br label %return, !dbg !7038

if.end:                                           ; preds = %copy_from_user.exit
  %25 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7039
  %call1 = call i32 @do_proc_control(%struct.usb_dev_state* %25, %struct.usbdevfs_ctrltransfer* %ctrl) #11, !dbg !7040
  store i32 %call1, i32* %retval, align 4, !dbg !7041
  br label %return, !dbg !7041

return:                                           ; preds = %if.end, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !7042
  ret i32 %26, !dbg !7042
}

; Function Attrs: noredzone
declare dso_local { i64, i64 } @current_time(%struct.inode*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_bulk(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !7043 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !7044
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !7048
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !7049
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !7050
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !7051
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6977, metadata !DIExpression()), !dbg !7052
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6979, metadata !DIExpression()), !dbg !7053
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6981, metadata !DIExpression()), !dbg !7054
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %bulk = alloca %struct.usbdevfs_bulktransfer, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !7055, metadata !DIExpression()), !dbg !7056
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7057, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_bulktransfer* %bulk, metadata !7059, metadata !DIExpression()), !dbg !7066
  %0 = bitcast %struct.usbdevfs_bulktransfer* %bulk to i8*, !dbg !7067
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7068
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 24, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !7069
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !7069
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7050
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !7070
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !7070
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7070

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !7070
  %conv.i.i = sext i32 %5 to i64, !dbg !7070
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7070
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !7070
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7071
  %lnot.i.i = xor i1 %7, true, !dbg !7070
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !7070
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7070
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !7072

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7073
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #7, !dbg !7074
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !7075

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !7076
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7077
  call void @copy_overflow(i32 %10, i64 %11) #13, !dbg !7078
  br label %if.end9.i.i, !dbg !7078

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7079
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !7079
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7080

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !7081
  br label %if.end.i.i, !dbg !7081

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !7082
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7083
  br label %check_copy_size.exit.i, !dbg !7083

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7051
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !7051
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7051
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7051
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7051
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7084
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !7084
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7084
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7084
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7084
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7051

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !7085, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !7086, !srcloc !5212
  br label %if.end31.i.i, !dbg !7087

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7051
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !7051
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7051
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7051
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7051
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7084
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !7051
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !7088
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7089

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7090
  br label %check_copy_size.exit.i, !dbg !7090

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7091
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7092
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7093
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !7093
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #13, !dbg !7094
  store i1 true, i1* %retval.i.i, align 1, !dbg !7095
  br label %check_copy_size.exit.i, !dbg !7095

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !7096
  %lnot.i = xor i1 %20, true, !dbg !7069
  %lnot.ext.i = zext i1 %20 to i32, !dbg !7069
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7069
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !7097

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !7098
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !7099
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !7100
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #13, !dbg !7101
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7102
  br label %copy_from_user.exit, !dbg !7103

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !7104
  %tobool = icmp ne i64 %24, 0, !dbg !7105
  br i1 %tobool, label %if.then, label %if.end, !dbg !7106

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7107
  br label %return, !dbg !7107

if.end:                                           ; preds = %copy_from_user.exit
  %25 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7108
  %call1 = call i32 @do_proc_bulk(%struct.usb_dev_state* %25, %struct.usbdevfs_bulktransfer* %bulk) #11, !dbg !7109
  store i32 %call1, i32* %retval, align 4, !dbg !7110
  br label %return, !dbg !7110

return:                                           ; preds = %if.end, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !7111
  ret i32 %26, !dbg !7111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_resetep(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !7112 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %ep = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i32, align 4
  %tmp3 = alloca i64, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !7113, metadata !DIExpression()), !dbg !7114
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7115, metadata !DIExpression()), !dbg !7116
  call void @llvm.dbg.declare(metadata i32* %ep, metadata !7117, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7119, metadata !DIExpression()), !dbg !7120
  call void @might_fault() #11, !dbg !7121
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !7124, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.declare(metadata i32* %__val_gu, metadata !7127, metadata !DIExpression()), !dbg !7126
  %0 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !7126
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7126
  %2 = bitcast i8* %1 to i32*, !dbg !7126
  %3 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %2, i64 4, i64 %0) #7, !dbg !7126, !srcloc !7128
  %asmresult = extractvalue { i32*, i32, i64 } %3, 0, !dbg !7126
  %asmresult1 = extractvalue { i32*, i32, i64 } %3, 1, !dbg !7126
  %asmresult2 = extractvalue { i32*, i32, i64 } %3, 2, !dbg !7126
  %4 = ptrtoint i32* %asmresult to i64, !dbg !7126
  %5 = trunc i64 %4 to i32, !dbg !7126
  store i32 %5, i32* %__ret_gu, align 4, !dbg !7126
  store i32 %asmresult1, i32* %__val_gu, align 4, !dbg !7126
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult2), !dbg !7126
  %6 = load i32, i32* %__val_gu, align 4, !dbg !7126
  store i32 %6, i32* %ep, align 4, !dbg !7126
  %7 = load i32, i32* %__ret_gu, align 4, !dbg !7126
  %conv = sext i32 %7 to i64, !dbg !7126
  store i64 %conv, i64* %tmp3, align 8, !dbg !7126
  %8 = load i64, i64* %tmp3, align 8, !dbg !7126
  store i64 %8, i64* %tmp, align 8, !dbg !7121
  %9 = load i64, i64* %tmp, align 8, !dbg !7121
  %tobool = icmp ne i64 %9, 0, !dbg !7129
  br i1 %tobool, label %if.then, label %if.end, !dbg !7130

if.then:                                          ; preds = %entry
  store i32 -14, i32* %retval, align 4, !dbg !7131
  br label %return, !dbg !7131

if.end:                                           ; preds = %entry
  %10 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7132
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %10, i32 0, i32 1, !dbg !7133
  %11 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !7133
  %12 = load i32, i32* %ep, align 4, !dbg !7134
  %call = call i32 @findintfep(%struct.usb_device* %11, i32 %12) #11, !dbg !7135
  store i32 %call, i32* %ret, align 4, !dbg !7136
  %13 = load i32, i32* %ret, align 4, !dbg !7137
  %cmp = icmp slt i32 %13, 0, !dbg !7139
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !7140

if.then5:                                         ; preds = %if.end
  %14 = load i32, i32* %ret, align 4, !dbg !7141
  store i32 %14, i32* %retval, align 4, !dbg !7142
  br label %return, !dbg !7142

if.end6:                                          ; preds = %if.end
  %15 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7143
  %16 = load i32, i32* %ret, align 4, !dbg !7144
  %call7 = call i32 @checkintf(%struct.usb_dev_state* %15, i32 %16) #11, !dbg !7145
  store i32 %call7, i32* %ret, align 4, !dbg !7146
  %17 = load i32, i32* %ret, align 4, !dbg !7147
  %tobool8 = icmp ne i32 %17, 0, !dbg !7147
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7149

if.then9:                                         ; preds = %if.end6
  %18 = load i32, i32* %ret, align 4, !dbg !7150
  store i32 %18, i32* %retval, align 4, !dbg !7151
  br label %return, !dbg !7151

if.end10:                                         ; preds = %if.end6
  %19 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7152
  %dev11 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %19, i32 0, i32 1, !dbg !7153
  %20 = load %struct.usb_device*, %struct.usb_device** %dev11, align 8, !dbg !7153
  %21 = load i32, i32* %ep, align 4, !dbg !7154
  call void @check_reset_of_active_ep(%struct.usb_device* %20, i32 %21, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i64 0, i64 0)) #11, !dbg !7155
  %22 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7156
  %dev12 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %22, i32 0, i32 1, !dbg !7157
  %23 = load %struct.usb_device*, %struct.usb_device** %dev12, align 8, !dbg !7157
  %24 = load i32, i32* %ep, align 4, !dbg !7158
  call void @usb_reset_endpoint(%struct.usb_device* %23, i32 %24) #11, !dbg !7159
  store i32 0, i32* %retval, align 4, !dbg !7160
  br label %return, !dbg !7160

return:                                           ; preds = %if.end10, %if.then9, %if.then5, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !7161
  ret i32 %25, !dbg !7161
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_resetdevice(%struct.usb_dev_state* %ps) #0 !dbg !7162 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5665, metadata !DIExpression()), !dbg !7163
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !5675, metadata !DIExpression()), !dbg !7172
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !5678, metadata !DIExpression()), !dbg !7173
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %actconfig = alloca %struct.usb_host_config*, align 8
  %interface = alloca %struct.usb_interface*, align 8
  %i = alloca i32, align 4
  %number = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !7174, metadata !DIExpression()), !dbg !7175
  call void @llvm.dbg.declare(metadata %struct.usb_host_config** %actconfig, metadata !7176, metadata !DIExpression()), !dbg !7177
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7178
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1, !dbg !7179
  %1 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !7179
  %actconfig1 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 19, !dbg !7180
  %2 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig1, align 8, !dbg !7180
  store %struct.usb_host_config* %2, %struct.usb_host_config** %actconfig, align 8, !dbg !7177
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %interface, metadata !7181, metadata !DIExpression()), !dbg !7182
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7183, metadata !DIExpression()), !dbg !7184
  call void @llvm.dbg.declare(metadata i32* %number, metadata !7185, metadata !DIExpression()), !dbg !7186
  %3 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7187
  %privileges_dropped = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %3, i32 0, i32 18, !dbg !7188
  %4 = load i8, i8* %privileges_dropped, align 1, !dbg !7188
  %tobool = trunc i8 %4 to i1, !dbg !7188
  br i1 %tobool, label %land.lhs.true, label %if.end16, !dbg !7189

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !7190
  %tobool2 = icmp ne %struct.usb_host_config* %5, null, !dbg !7190
  br i1 %tobool2, label %if.then, label %if.end16, !dbg !7191

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %i, align 4, !dbg !7192
  br label %for.cond, !dbg !7193

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !7194
  %7 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !7195
  %desc = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %7, i32 0, i32 0, !dbg !7196
  %bNumInterfaces = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %desc, i32 0, i32 3, !dbg !7197
  %8 = load i8, i8* %bNumInterfaces, align 4, !dbg !7197
  %conv = zext i8 %8 to i32, !dbg !7195
  %cmp = icmp slt i32 %6, %conv, !dbg !7198
  br i1 %cmp, label %for.body, label %for.end, !dbg !7199

for.body:                                         ; preds = %for.cond
  %9 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !7200
  %interface4 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %9, i32 0, i32 3, !dbg !7201
  %10 = load i32, i32* %i, align 4, !dbg !7202
  %idxprom = sext i32 %10 to i64, !dbg !7200
  %arrayidx = getelementptr [32 x %struct.usb_interface*], [32 x %struct.usb_interface*]* %interface4, i64 0, i64 %idxprom, !dbg !7200
  %11 = load %struct.usb_interface*, %struct.usb_interface** %arrayidx, align 8, !dbg !7200
  store %struct.usb_interface* %11, %struct.usb_interface** %interface, align 8, !dbg !7203
  %12 = load %struct.usb_interface*, %struct.usb_interface** %interface, align 8, !dbg !7204
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %12, i32 0, i32 1, !dbg !7205
  %13 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !dbg !7205
  %desc5 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %13, i32 0, i32 0, !dbg !7206
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc5, i32 0, i32 2, !dbg !7207
  %14 = load i8, i8* %bInterfaceNumber, align 2, !dbg !7207
  %conv6 = zext i8 %14 to i32, !dbg !7204
  store i32 %conv6, i32* %number, align 4, !dbg !7208
  %15 = load %struct.usb_interface*, %struct.usb_interface** %interface, align 8, !dbg !7209
  %call = call i32 @usb_interface_claimed(%struct.usb_interface* %15) #11, !dbg !7210
  %tobool7 = icmp ne i32 %call, 0, !dbg !7210
  br i1 %tobool7, label %land.lhs.true8, label %if.end, !dbg !7211

land.lhs.true8:                                   ; preds = %for.body
  %16 = load i32, i32* %number, align 4, !dbg !7212
  %conv9 = sext i32 %16 to i64, !dbg !7212
  %17 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7213
  %ifclaimed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %17, i32 0, i32 13, !dbg !7214
  %call10 = call zeroext i1 @test_bit(i64 %conv9, i64* %ifclaimed) #11, !dbg !7215
  br i1 %call10, label %if.end, label %if.then11, !dbg !7216

if.then11:                                        ; preds = %land.lhs.true8
  %18 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7217
  %dev12 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %18, i32 0, i32 1, !dbg !7217
  %19 = load %struct.usb_device*, %struct.usb_device** %dev12, align 8, !dbg !7217
  %dev13 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %19, i32 0, i32 14, !dbg !7217
  %20 = load i32, i32* %number, align 4, !dbg !7217
  %21 = load %struct.usb_interface*, %struct.usb_interface** %interface, align 8, !dbg !7217
  %dev14 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %21, i32 0, i32 7, !dbg !7217
  %driver = getelementptr inbounds %struct.device, %struct.device* %dev14, i32 0, i32 6, !dbg !7217
  %22 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !7217
  %name = getelementptr inbounds %struct.device_driver, %struct.device_driver* %22, i32 0, i32 0, !dbg !7217
  %23 = load i8*, i8** %name, align 8, !dbg !7217
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !7172
  %24 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !7172
  %25 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !7173, !srcloc !5776
  store i64 %25, i64* %pfo_val__.i, align 8, !dbg !7173
  %26 = load i64, i64* %pfo_val__.i, align 8, !dbg !7173
  %27 = inttoptr i64 %26 to %struct.task_struct*, !dbg !7173
  store %struct.task_struct* %27, %struct.task_struct** %tmp.i, align 8, !dbg !7173
  %28 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !7173
  store %struct.task_struct* %28, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !7163
  %29 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !7163
  store %struct.task_struct* %29, %struct.task_struct** %tmp1.i, align 8, !dbg !7163
  %30 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !7163
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %30, i32 0, i32 68, !dbg !7217
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !7217
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev13, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.47, i64 0, i64 0), i32 %20, i8* %23, i8* %arraydecay) #12, !dbg !7217
  store i32 -13, i32* %retval, align 4, !dbg !7218
  br label %return, !dbg !7218

if.end:                                           ; preds = %land.lhs.true8, %for.body
  br label %for.inc, !dbg !7219

for.inc:                                          ; preds = %if.end
  %31 = load i32, i32* %i, align 4, !dbg !7220
  %inc = add i32 %31, 1, !dbg !7220
  store i32 %inc, i32* %i, align 4, !dbg !7220
  br label %for.cond, !dbg !7221, !llvm.loop !7222

for.end:                                          ; preds = %for.cond
  br label %if.end16, !dbg !7224

if.end16:                                         ; preds = %for.end, %land.lhs.true, %entry
  %32 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7225
  %dev17 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %32, i32 0, i32 1, !dbg !7226
  %33 = load %struct.usb_device*, %struct.usb_device** %dev17, align 8, !dbg !7226
  %call18 = call i32 @usb_reset_device(%struct.usb_device* %33) #11, !dbg !7227
  store i32 %call18, i32* %retval, align 4, !dbg !7228
  br label %return, !dbg !7228

return:                                           ; preds = %if.end16, %if.then11
  %34 = load i32, i32* %retval, align 4, !dbg !7229
  ret i32 %34, !dbg !7229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_clearhalt(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !7230 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %ep = alloca i32, align 4
  %pipe = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i32, align 4
  %tmp3 = alloca i64, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !7231, metadata !DIExpression()), !dbg !7232
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7233, metadata !DIExpression()), !dbg !7234
  call void @llvm.dbg.declare(metadata i32* %ep, metadata !7235, metadata !DIExpression()), !dbg !7236
  call void @llvm.dbg.declare(metadata i32* %pipe, metadata !7237, metadata !DIExpression()), !dbg !7238
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7239, metadata !DIExpression()), !dbg !7240
  call void @might_fault() #11, !dbg !7241
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !7244, metadata !DIExpression()), !dbg !7246
  call void @llvm.dbg.declare(metadata i32* %__val_gu, metadata !7247, metadata !DIExpression()), !dbg !7246
  %0 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !7246
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7246
  %2 = bitcast i8* %1 to i32*, !dbg !7246
  %3 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %2, i64 4, i64 %0) #7, !dbg !7246, !srcloc !7248
  %asmresult = extractvalue { i32*, i32, i64 } %3, 0, !dbg !7246
  %asmresult1 = extractvalue { i32*, i32, i64 } %3, 1, !dbg !7246
  %asmresult2 = extractvalue { i32*, i32, i64 } %3, 2, !dbg !7246
  %4 = ptrtoint i32* %asmresult to i64, !dbg !7246
  %5 = trunc i64 %4 to i32, !dbg !7246
  store i32 %5, i32* %__ret_gu, align 4, !dbg !7246
  store i32 %asmresult1, i32* %__val_gu, align 4, !dbg !7246
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult2), !dbg !7246
  %6 = load i32, i32* %__val_gu, align 4, !dbg !7246
  store i32 %6, i32* %ep, align 4, !dbg !7246
  %7 = load i32, i32* %__ret_gu, align 4, !dbg !7246
  %conv = sext i32 %7 to i64, !dbg !7246
  store i64 %conv, i64* %tmp3, align 8, !dbg !7246
  %8 = load i64, i64* %tmp3, align 8, !dbg !7246
  store i64 %8, i64* %tmp, align 8, !dbg !7241
  %9 = load i64, i64* %tmp, align 8, !dbg !7241
  %tobool = icmp ne i64 %9, 0, !dbg !7249
  br i1 %tobool, label %if.then, label %if.end, !dbg !7250

if.then:                                          ; preds = %entry
  store i32 -14, i32* %retval, align 4, !dbg !7251
  br label %return, !dbg !7251

if.end:                                           ; preds = %entry
  %10 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7252
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %10, i32 0, i32 1, !dbg !7253
  %11 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !7253
  %12 = load i32, i32* %ep, align 4, !dbg !7254
  %call = call i32 @findintfep(%struct.usb_device* %11, i32 %12) #11, !dbg !7255
  store i32 %call, i32* %ret, align 4, !dbg !7256
  %13 = load i32, i32* %ret, align 4, !dbg !7257
  %cmp = icmp slt i32 %13, 0, !dbg !7259
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !7260

if.then5:                                         ; preds = %if.end
  %14 = load i32, i32* %ret, align 4, !dbg !7261
  store i32 %14, i32* %retval, align 4, !dbg !7262
  br label %return, !dbg !7262

if.end6:                                          ; preds = %if.end
  %15 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7263
  %16 = load i32, i32* %ret, align 4, !dbg !7264
  %call7 = call i32 @checkintf(%struct.usb_dev_state* %15, i32 %16) #11, !dbg !7265
  store i32 %call7, i32* %ret, align 4, !dbg !7266
  %17 = load i32, i32* %ret, align 4, !dbg !7267
  %tobool8 = icmp ne i32 %17, 0, !dbg !7267
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !7269

if.then9:                                         ; preds = %if.end6
  %18 = load i32, i32* %ret, align 4, !dbg !7270
  store i32 %18, i32* %retval, align 4, !dbg !7271
  br label %return, !dbg !7271

if.end10:                                         ; preds = %if.end6
  %19 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7272
  %dev11 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %19, i32 0, i32 1, !dbg !7273
  %20 = load %struct.usb_device*, %struct.usb_device** %dev11, align 8, !dbg !7273
  %21 = load i32, i32* %ep, align 4, !dbg !7274
  call void @check_reset_of_active_ep(%struct.usb_device* %20, i32 %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i64 0, i64 0)) #11, !dbg !7275
  %22 = load i32, i32* %ep, align 4, !dbg !7276
  %and = and i32 %22, 128, !dbg !7278
  %tobool12 = icmp ne i32 %and, 0, !dbg !7278
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !7279

if.then13:                                        ; preds = %if.end10
  %23 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7280
  %dev14 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %23, i32 0, i32 1, !dbg !7280
  %24 = load %struct.usb_device*, %struct.usb_device** %dev14, align 8, !dbg !7280
  %25 = load i32, i32* %ep, align 4, !dbg !7280
  %and15 = and i32 %25, 127, !dbg !7280
  %call16 = call i32 @__create_pipe(%struct.usb_device* %24, i32 %and15) #11, !dbg !7280
  %or = or i32 -1073741824, %call16, !dbg !7280
  %or17 = or i32 %or, 128, !dbg !7280
  store i32 %or17, i32* %pipe, align 4, !dbg !7281
  br label %if.end22, !dbg !7282

if.else:                                          ; preds = %if.end10
  %26 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7283
  %dev18 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %26, i32 0, i32 1, !dbg !7283
  %27 = load %struct.usb_device*, %struct.usb_device** %dev18, align 8, !dbg !7283
  %28 = load i32, i32* %ep, align 4, !dbg !7283
  %and19 = and i32 %28, 127, !dbg !7283
  %call20 = call i32 @__create_pipe(%struct.usb_device* %27, i32 %and19) #11, !dbg !7283
  %or21 = or i32 -1073741824, %call20, !dbg !7283
  store i32 %or21, i32* %pipe, align 4, !dbg !7284
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then13
  %29 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7285
  %dev23 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %29, i32 0, i32 1, !dbg !7286
  %30 = load %struct.usb_device*, %struct.usb_device** %dev23, align 8, !dbg !7286
  %31 = load i32, i32* %pipe, align 4, !dbg !7287
  %call24 = call i32 @usb_clear_halt(%struct.usb_device* %30, i32 %31) #11, !dbg !7288
  store i32 %call24, i32* %retval, align 4, !dbg !7289
  br label %return, !dbg !7289

return:                                           ; preds = %if.end22, %if.then9, %if.then5, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !7290
  ret i32 %32, !dbg !7290
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_getdriver(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !7291 {
entry:
  %retval.i.i13 = alloca i1, align 1
  %addr.addr.i.i14 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i14, metadata !5056, metadata !DIExpression()), !dbg !7292
  %bytes.addr.i.i15 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i15, metadata !5077, metadata !DIExpression()), !dbg !7297
  %is_source.addr.i.i16 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i16, metadata !5079, metadata !DIExpression()), !dbg !7298
  %sz.i.i17 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i17, metadata !5081, metadata !DIExpression()), !dbg !7299
  %__ret_warn_on.i.i18 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i18, metadata !5083, metadata !DIExpression()), !dbg !7300
  %tmp.i.i19 = alloca i64, align 8
  %to.addr.i20 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i20, metadata !5087, metadata !DIExpression()), !dbg !7301
  %from.addr.i21 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i21, metadata !5089, metadata !DIExpression()), !dbg !7302
  %n.addr.i22 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i22, metadata !5091, metadata !DIExpression()), !dbg !7303
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !7304
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !7308
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !7309
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !7310
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !7311
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6977, metadata !DIExpression()), !dbg !7312
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6979, metadata !DIExpression()), !dbg !7313
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6981, metadata !DIExpression()), !dbg !7314
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %gd = alloca %struct.usbdevfs_getdriver, align 4
  %intf = alloca %struct.usb_interface*, align 8
  %ret = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !7315, metadata !DIExpression()), !dbg !7316
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7317, metadata !DIExpression()), !dbg !7318
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_getdriver* %gd, metadata !7319, metadata !DIExpression()), !dbg !7327
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf, metadata !7328, metadata !DIExpression()), !dbg !7329
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7330, metadata !DIExpression()), !dbg !7331
  %0 = bitcast %struct.usbdevfs_getdriver* %gd to i8*, !dbg !7332
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7333
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 260, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !7334
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !7334
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7310
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !7335
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !7335
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7335

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !7335
  %conv.i.i = sext i32 %5 to i64, !dbg !7335
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7335
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !7335
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7336
  %lnot.i.i = xor i1 %7, true, !dbg !7335
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !7335
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7335
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !7337

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7338
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #7, !dbg !7339
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !7340

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !7341
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7342
  call void @copy_overflow(i32 %10, i64 %11) #13, !dbg !7343
  br label %if.end9.i.i, !dbg !7343

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7344
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !7344
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7345

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !7346
  br label %if.end.i.i, !dbg !7346

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !7347
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7348
  br label %check_copy_size.exit.i, !dbg !7348

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7311
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !7311
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7311
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7311
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7311
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7349
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !7349
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7349
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7349
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7349
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7311

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !7350, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !7351, !srcloc !5212
  br label %if.end31.i.i, !dbg !7352

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7311
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !7311
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7311
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7311
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7311
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7349
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !7311
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !7353
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7354

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7355
  br label %check_copy_size.exit.i, !dbg !7355

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7356
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7357
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7358
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !7358
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #13, !dbg !7359
  store i1 true, i1* %retval.i.i, align 1, !dbg !7360
  br label %check_copy_size.exit.i, !dbg !7360

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !7361
  %lnot.i = xor i1 %20, true, !dbg !7334
  %lnot.ext.i = zext i1 %20 to i32, !dbg !7334
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7334
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !7362

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !7363
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !7364
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !7365
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #13, !dbg !7366
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7367
  br label %copy_from_user.exit, !dbg !7368

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !7369
  %tobool = icmp ne i64 %24, 0, !dbg !7370
  br i1 %tobool, label %if.then, label %if.end, !dbg !7371

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7372
  br label %return, !dbg !7372

if.end:                                           ; preds = %copy_from_user.exit
  %25 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7373
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %25, i32 0, i32 1, !dbg !7374
  %26 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !7374
  %interface = getelementptr inbounds %struct.usbdevfs_getdriver, %struct.usbdevfs_getdriver* %gd, i32 0, i32 0, !dbg !7375
  %27 = load i32, i32* %interface, align 4, !dbg !7375
  %call1 = call %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device* %26, i32 %27) #11, !dbg !7376
  store %struct.usb_interface* %call1, %struct.usb_interface** %intf, align 8, !dbg !7377
  %28 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !7378
  %tobool2 = icmp ne %struct.usb_interface* %28, null, !dbg !7378
  br i1 %tobool2, label %lor.lhs.false, label %if.then5, !dbg !7379

lor.lhs.false:                                    ; preds = %if.end
  %29 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !7380
  %dev3 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %29, i32 0, i32 7, !dbg !7381
  %driver = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 6, !dbg !7382
  %30 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !7382
  %tobool4 = icmp ne %struct.device_driver* %30, null, !dbg !7380
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !7383

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -61, i32* %ret, align 4, !dbg !7384
  br label %if.end12, !dbg !7385

if.else:                                          ; preds = %lor.lhs.false
  %driver6 = getelementptr inbounds %struct.usbdevfs_getdriver, %struct.usbdevfs_getdriver* %gd, i32 0, i32 1, !dbg !7386
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %driver6, i64 0, i64 0, !dbg !7387
  %31 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !7388
  %dev7 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %31, i32 0, i32 7, !dbg !7389
  %driver8 = getelementptr inbounds %struct.device, %struct.device* %dev7, i32 0, i32 6, !dbg !7390
  %32 = load %struct.device_driver*, %struct.device_driver** %driver8, align 8, !dbg !7390
  %name = getelementptr inbounds %struct.device_driver, %struct.device_driver* %32, i32 0, i32 0, !dbg !7391
  %33 = load i8*, i8** %name, align 8, !dbg !7391
  %call9 = call i64 @strlcpy(i8* %arraydecay, i8* %33, i64 256) #11, !dbg !7392
  %34 = load i8*, i8** %arg.addr, align 8, !dbg !7393
  %35 = bitcast %struct.usbdevfs_getdriver* %gd to i8*, !dbg !7394
  store i8* %34, i8** %to.addr.i20, align 8
  store i8* %35, i8** %from.addr.i21, align 8
  store i64 260, i64* %n.addr.i22, align 8
  %36 = load i8*, i8** %from.addr.i21, align 8, !dbg !7395
  %37 = load i64, i64* %n.addr.i22, align 8, !dbg !7395
  store i8* %36, i8** %addr.addr.i.i14, align 8
  store i64 %37, i64* %bytes.addr.i.i15, align 8
  store i8 1, i8* %is_source.addr.i.i16, align 1
  store i32 -1, i32* %sz.i.i17, align 4, !dbg !7299
  %38 = load i32, i32* %sz.i.i17, align 4, !dbg !7396
  %cmp.i.i23 = icmp sge i32 %38, 0, !dbg !7396
  br i1 %cmp.i.i23, label %land.rhs.i.i26, label %land.end.i.i30, !dbg !7396

land.rhs.i.i26:                                   ; preds = %if.else
  %39 = load i32, i32* %sz.i.i17, align 4, !dbg !7396
  %conv.i.i24 = sext i32 %39 to i64, !dbg !7396
  %40 = load i64, i64* %bytes.addr.i.i15, align 8, !dbg !7396
  %cmp1.i.i25 = icmp ult i64 %conv.i.i24, %40, !dbg !7396
  br label %land.end.i.i30

land.end.i.i30:                                   ; preds = %land.rhs.i.i26, %if.else
  %41 = phi i1 [ false, %if.else ], [ %cmp1.i.i25, %land.rhs.i.i26 ], !dbg !7397
  %lnot.i.i27 = xor i1 %41, true, !dbg !7396
  %lnot.ext.i.i28 = zext i1 %41 to i32, !dbg !7396
  %conv4.i.i29 = sext i32 %lnot.ext.i.i28 to i64, !dbg !7396
  br i1 %41, label %if.then.i.i31, label %if.end10.i.i46, !dbg !7398

if.then.i.i31:                                    ; preds = %land.end.i.i30
  %42 = load i64, i64* %bytes.addr.i.i15, align 8, !dbg !7399
  %43 = call i1 @llvm.is.constant.i64(i64 %42) #7, !dbg !7400
  br i1 %43, label %if.else.i.i34, label %if.then5.i.i32, !dbg !7401

if.then5.i.i32:                                   ; preds = %if.then.i.i31
  %44 = load i32, i32* %sz.i.i17, align 4, !dbg !7402
  %45 = load i64, i64* %bytes.addr.i.i15, align 8, !dbg !7403
  call void @copy_overflow(i32 %44, i64 %45) #13, !dbg !7404
  br label %if.end9.i.i38, !dbg !7404

if.else.i.i34:                                    ; preds = %if.then.i.i31
  %46 = load i8, i8* %is_source.addr.i.i16, align 1, !dbg !7405
  %tobool6.i.i33 = trunc i8 %46 to i1, !dbg !7405
  br i1 %tobool6.i.i33, label %if.then7.i.i35, label %if.else8.i.i36, !dbg !7406

if.then7.i.i35:                                   ; preds = %if.else.i.i34
  call void @__bad_copy_from() #13, !dbg !7407
  br label %if.end.i.i37, !dbg !7407

if.else8.i.i36:                                   ; preds = %if.else.i.i34
  call void @__bad_copy_to() #13, !dbg !7408
  br label %if.end.i.i37

if.end.i.i37:                                     ; preds = %if.else8.i.i36, %if.then7.i.i35
  br label %if.end9.i.i38

if.end9.i.i38:                                    ; preds = %if.end.i.i37, %if.then5.i.i32
  store i1 false, i1* %retval.i.i13, align 1, !dbg !7409
  br label %check_copy_size.exit.i60, !dbg !7409

if.end10.i.i46:                                   ; preds = %land.end.i.i30
  %47 = load i64, i64* %bytes.addr.i.i15, align 8, !dbg !7300
  %cmp11.i.i39 = icmp ugt i64 %47, 2147483647, !dbg !7300
  %lnot13.i.i40 = xor i1 %cmp11.i.i39, true, !dbg !7300
  %lnot.ext16.i.i41 = zext i1 %cmp11.i.i39 to i32, !dbg !7300
  store i32 %lnot.ext16.i.i41, i32* %__ret_warn_on.i.i18, align 4, !dbg !7300
  %48 = load i32, i32* %__ret_warn_on.i.i18, align 4, !dbg !7410
  %tobool17.i.i42 = icmp ne i32 %48, 0, !dbg !7410
  %lnot18.i.i43 = xor i1 %tobool17.i.i42, true, !dbg !7410
  %lnot.ext21.i.i44 = zext i1 %tobool17.i.i42 to i32, !dbg !7410
  %conv22.i.i45 = sext i32 %lnot.ext21.i.i44 to i64, !dbg !7410
  br i1 %tobool17.i.i42, label %if.then24.i.i47, label %if.end31.i.i53, !dbg !7300

if.then24.i.i47:                                  ; preds = %if.end10.i.i46
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !7411, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !7412, !srcloc !5212
  br label %if.end31.i.i53, !dbg !7413

if.end31.i.i53:                                   ; preds = %if.then24.i.i47, %if.end10.i.i46
  %49 = load i32, i32* %__ret_warn_on.i.i18, align 4, !dbg !7300
  %tobool32.i.i48 = icmp ne i32 %49, 0, !dbg !7300
  %lnot33.i.i49 = xor i1 %tobool32.i.i48, true, !dbg !7300
  %lnot.ext36.i.i50 = zext i1 %tobool32.i.i48 to i32, !dbg !7300
  %conv37.i.i51 = sext i32 %lnot.ext36.i.i50 to i64, !dbg !7300
  store i64 %conv37.i.i51, i64* %tmp.i.i19, align 8, !dbg !7410
  %50 = load i64, i64* %tmp.i.i19, align 8, !dbg !7300
  %tobool38.i.i52 = icmp ne i64 %50, 0, !dbg !7414
  br i1 %tobool38.i.i52, label %if.then39.i.i54, label %if.end40.i.i56, !dbg !7415

if.then39.i.i54:                                  ; preds = %if.end31.i.i53
  store i1 false, i1* %retval.i.i13, align 1, !dbg !7416
  br label %check_copy_size.exit.i60, !dbg !7416

if.end40.i.i56:                                   ; preds = %if.end31.i.i53
  %51 = load i8*, i8** %addr.addr.i.i14, align 8, !dbg !7417
  %52 = load i64, i64* %bytes.addr.i.i15, align 8, !dbg !7418
  %53 = load i8, i8* %is_source.addr.i.i16, align 1, !dbg !7419
  %tobool41.i.i55 = trunc i8 %53 to i1, !dbg !7419
  call void @check_object_size(i8* %51, i64 %52, i1 zeroext %tobool41.i.i55) #13, !dbg !7420
  store i1 true, i1* %retval.i.i13, align 1, !dbg !7421
  br label %check_copy_size.exit.i60, !dbg !7421

check_copy_size.exit.i60:                         ; preds = %if.end40.i.i56, %if.then39.i.i54, %if.end9.i.i38
  %54 = load i1, i1* %retval.i.i13, align 1, !dbg !7422
  %lnot.i57 = xor i1 %54, true, !dbg !7395
  %lnot.ext.i58 = zext i1 %54 to i32, !dbg !7395
  %conv.i59 = sext i32 %lnot.ext.i58 to i64, !dbg !7395
  br i1 %54, label %if.then.i62, label %copy_to_user.exit, !dbg !7423

if.then.i62:                                      ; preds = %check_copy_size.exit.i60
  %55 = load i8*, i8** %to.addr.i20, align 8, !dbg !7424
  %56 = load i8*, i8** %from.addr.i21, align 8, !dbg !7425
  %57 = load i64, i64* %n.addr.i22, align 8, !dbg !7426
  %call2.i61 = call i64 @_copy_to_user(i8* %55, i8* %56, i64 %57) #13, !dbg !7427
  store i64 %call2.i61, i64* %n.addr.i22, align 8, !dbg !7428
  br label %copy_to_user.exit, !dbg !7429

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i60, %if.then.i62
  %58 = load i64, i64* %n.addr.i22, align 8, !dbg !7430
  %tobool11 = icmp ne i64 %58, 0, !dbg !7431
  %59 = zext i1 %tobool11 to i64, !dbg !7431
  %cond = select i1 %tobool11, i32 -14, i32 0, !dbg !7431
  store i32 %cond, i32* %ret, align 4, !dbg !7432
  br label %if.end12

if.end12:                                         ; preds = %copy_to_user.exit, %if.then5
  %60 = load i32, i32* %ret, align 4, !dbg !7433
  store i32 %60, i32* %retval, align 4, !dbg !7434
  br label %return, !dbg !7434

return:                                           ; preds = %if.end12, %if.then
  %61 = load i32, i32* %retval, align 4, !dbg !7435
  ret i32 %61, !dbg !7435
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_connectinfo(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !7436 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !7437
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !7441
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !7442
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !7443
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !7444
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5087, metadata !DIExpression()), !dbg !7445
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5089, metadata !DIExpression()), !dbg !7446
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5091, metadata !DIExpression()), !dbg !7447
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %ci = alloca %struct.usbdevfs_connectinfo, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !7448, metadata !DIExpression()), !dbg !7449
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7450, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_connectinfo* %ci, metadata !7452, metadata !DIExpression()), !dbg !7457
  %0 = bitcast %struct.usbdevfs_connectinfo* %ci to i8*, !dbg !7458
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 8, i1 false), !dbg !7458
  %1 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7459
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %1, i32 0, i32 1, !dbg !7460
  %2 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !7460
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %2, i32 0, i32 0, !dbg !7461
  %3 = load i32, i32* %devnum, align 8, !dbg !7461
  %devnum1 = getelementptr inbounds %struct.usbdevfs_connectinfo, %struct.usbdevfs_connectinfo* %ci, i32 0, i32 0, !dbg !7462
  store i32 %3, i32* %devnum1, align 4, !dbg !7463
  %4 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7464
  %dev2 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %4, i32 0, i32 1, !dbg !7465
  %5 = load %struct.usb_device*, %struct.usb_device** %dev2, align 8, !dbg !7465
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 4, !dbg !7466
  %6 = load i32, i32* %speed, align 4, !dbg !7466
  %cmp = icmp eq i32 %6, 1, !dbg !7467
  %conv = zext i1 %cmp to i32, !dbg !7467
  %conv3 = trunc i32 %conv to i8, !dbg !7464
  %slow = getelementptr inbounds %struct.usbdevfs_connectinfo, %struct.usbdevfs_connectinfo* %ci, i32 0, i32 1, !dbg !7468
  store i8 %conv3, i8* %slow, align 4, !dbg !7469
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !7470
  %8 = bitcast %struct.usbdevfs_connectinfo* %ci to i8*, !dbg !7471
  store i8* %7, i8** %to.addr.i, align 8
  store i8* %8, i8** %from.addr.i, align 8
  store i64 8, i64* %n.addr.i, align 8
  %9 = load i8*, i8** %from.addr.i, align 8, !dbg !7472
  %10 = load i64, i64* %n.addr.i, align 8, !dbg !7472
  store i8* %9, i8** %addr.addr.i.i, align 8
  store i64 %10, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7443
  %11 = load i32, i32* %sz.i.i, align 4, !dbg !7473
  %cmp.i.i = icmp sge i32 %11, 0, !dbg !7473
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7473

land.rhs.i.i:                                     ; preds = %entry
  %12 = load i32, i32* %sz.i.i, align 4, !dbg !7473
  %conv.i.i = sext i32 %12 to i64, !dbg !7473
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7473
  %cmp1.i.i = icmp ult i64 %conv.i.i, %13, !dbg !7473
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %14 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7474
  %lnot.i.i = xor i1 %14, true, !dbg !7473
  %lnot.ext.i.i = zext i1 %14 to i32, !dbg !7473
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7473
  br i1 %14, label %if.then.i.i, label %if.end10.i.i, !dbg !7475

if.then.i.i:                                      ; preds = %land.end.i.i
  %15 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7476
  %16 = call i1 @llvm.is.constant.i64(i64 %15) #7, !dbg !7477
  br i1 %16, label %if.else.i.i, label %if.then5.i.i, !dbg !7478

if.then5.i.i:                                     ; preds = %if.then.i.i
  %17 = load i32, i32* %sz.i.i, align 4, !dbg !7479
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7480
  call void @copy_overflow(i32 %17, i64 %18) #13, !dbg !7481
  br label %if.end9.i.i, !dbg !7481

if.else.i.i:                                      ; preds = %if.then.i.i
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7482
  %tobool6.i.i = trunc i8 %19 to i1, !dbg !7482
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7483

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !7484
  br label %if.end.i.i, !dbg !7484

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !7485
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7486
  br label %check_copy_size.exit.i, !dbg !7486

if.end10.i.i:                                     ; preds = %land.end.i.i
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7444
  %cmp11.i.i = icmp ugt i64 %20, 2147483647, !dbg !7444
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7444
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7444
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7444
  %21 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7487
  %tobool17.i.i = icmp ne i32 %21, 0, !dbg !7487
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7487
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7487
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7487
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7444

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !7488, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !7489, !srcloc !5212
  br label %if.end31.i.i, !dbg !7490

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %22 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7444
  %tobool32.i.i = icmp ne i32 %22, 0, !dbg !7444
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7444
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7444
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7444
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7487
  %23 = load i64, i64* %tmp.i.i, align 8, !dbg !7444
  %tobool38.i.i = icmp ne i64 %23, 0, !dbg !7491
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7492

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7493
  br label %check_copy_size.exit.i, !dbg !7493

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %24 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7494
  %25 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7495
  %26 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7496
  %tobool41.i.i = trunc i8 %26 to i1, !dbg !7496
  call void @check_object_size(i8* %24, i64 %25, i1 zeroext %tobool41.i.i) #13, !dbg !7497
  store i1 true, i1* %retval.i.i, align 1, !dbg !7498
  br label %check_copy_size.exit.i, !dbg !7498

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %27 = load i1, i1* %retval.i.i, align 1, !dbg !7499
  %lnot.i = xor i1 %27, true, !dbg !7472
  %lnot.ext.i = zext i1 %27 to i32, !dbg !7472
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7472
  br i1 %27, label %if.then.i, label %copy_to_user.exit, !dbg !7500

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %28 = load i8*, i8** %to.addr.i, align 8, !dbg !7501
  %29 = load i8*, i8** %from.addr.i, align 8, !dbg !7502
  %30 = load i64, i64* %n.addr.i, align 8, !dbg !7503
  %call2.i = call i64 @_copy_to_user(i8* %28, i8* %29, i64 %30) #13, !dbg !7504
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7505
  br label %copy_to_user.exit, !dbg !7506

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %31 = load i64, i64* %n.addr.i, align 8, !dbg !7507
  %tobool = icmp ne i64 %31, 0, !dbg !7508
  br i1 %tobool, label %if.then, label %if.end, !dbg !7509

if.then:                                          ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7510
  br label %return, !dbg !7510

if.end:                                           ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !7511
  br label %return, !dbg !7511

return:                                           ; preds = %if.end, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !7512
  ret i32 %32, !dbg !7512
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_setintf(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !7513 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !7514
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !7518
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !7519
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !7520
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !7521
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6977, metadata !DIExpression()), !dbg !7522
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6979, metadata !DIExpression()), !dbg !7523
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6981, metadata !DIExpression()), !dbg !7524
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %setintf = alloca %struct.usbdevfs_setinterface, align 4
  %ret = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !7525, metadata !DIExpression()), !dbg !7526
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7527, metadata !DIExpression()), !dbg !7528
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_setinterface* %setintf, metadata !7529, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7535, metadata !DIExpression()), !dbg !7536
  %0 = bitcast %struct.usbdevfs_setinterface* %setintf to i8*, !dbg !7537
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7538
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 8, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !7539
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !7539
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7520
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !7540
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !7540
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7540

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !7540
  %conv.i.i = sext i32 %5 to i64, !dbg !7540
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7540
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !7540
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7541
  %lnot.i.i = xor i1 %7, true, !dbg !7540
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !7540
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7540
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !7542

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7543
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #7, !dbg !7544
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !7545

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !7546
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7547
  call void @copy_overflow(i32 %10, i64 %11) #13, !dbg !7548
  br label %if.end9.i.i, !dbg !7548

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7549
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !7549
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7550

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !7551
  br label %if.end.i.i, !dbg !7551

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !7552
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7553
  br label %check_copy_size.exit.i, !dbg !7553

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7521
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !7521
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7521
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7521
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7521
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7554
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !7554
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7554
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7554
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7554
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7521

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !7555, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !7556, !srcloc !5212
  br label %if.end31.i.i, !dbg !7557

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7521
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !7521
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7521
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7521
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7521
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7554
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !7521
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !7558
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7559

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7560
  br label %check_copy_size.exit.i, !dbg !7560

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7561
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7562
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7563
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !7563
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #13, !dbg !7564
  store i1 true, i1* %retval.i.i, align 1, !dbg !7565
  br label %check_copy_size.exit.i, !dbg !7565

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !7566
  %lnot.i = xor i1 %20, true, !dbg !7539
  %lnot.ext.i = zext i1 %20 to i32, !dbg !7539
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7539
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !7567

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !7568
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !7569
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !7570
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #13, !dbg !7571
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7572
  br label %copy_from_user.exit, !dbg !7573

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !7574
  %tobool = icmp ne i64 %24, 0, !dbg !7575
  br i1 %tobool, label %if.then, label %if.end, !dbg !7576

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7577
  br label %return, !dbg !7577

if.end:                                           ; preds = %copy_from_user.exit
  %25 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7578
  %interface = getelementptr inbounds %struct.usbdevfs_setinterface, %struct.usbdevfs_setinterface* %setintf, i32 0, i32 0, !dbg !7579
  %26 = load i32, i32* %interface, align 4, !dbg !7579
  %call1 = call i32 @checkintf(%struct.usb_dev_state* %25, i32 %26) #11, !dbg !7580
  store i32 %call1, i32* %ret, align 4, !dbg !7581
  %27 = load i32, i32* %ret, align 4, !dbg !7582
  %tobool2 = icmp ne i32 %27, 0, !dbg !7582
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7584

if.then3:                                         ; preds = %if.end
  %28 = load i32, i32* %ret, align 4, !dbg !7585
  store i32 %28, i32* %retval, align 4, !dbg !7586
  br label %return, !dbg !7586

if.end4:                                          ; preds = %if.end
  %29 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7587
  %interface5 = getelementptr inbounds %struct.usbdevfs_setinterface, %struct.usbdevfs_setinterface* %setintf, i32 0, i32 0, !dbg !7588
  %30 = load i32, i32* %interface5, align 4, !dbg !7588
  call void @destroy_async_on_interface(%struct.usb_dev_state* %29, i32 %30) #11, !dbg !7589
  %31 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7590
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %31, i32 0, i32 1, !dbg !7591
  %32 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !7591
  %interface6 = getelementptr inbounds %struct.usbdevfs_setinterface, %struct.usbdevfs_setinterface* %setintf, i32 0, i32 0, !dbg !7592
  %33 = load i32, i32* %interface6, align 4, !dbg !7592
  %altsetting = getelementptr inbounds %struct.usbdevfs_setinterface, %struct.usbdevfs_setinterface* %setintf, i32 0, i32 1, !dbg !7593
  %34 = load i32, i32* %altsetting, align 4, !dbg !7593
  %call7 = call i32 @usb_set_interface(%struct.usb_device* %32, i32 %33, i32 %34) #11, !dbg !7594
  store i32 %call7, i32* %retval, align 4, !dbg !7595
  br label %return, !dbg !7595

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !7596
  ret i32 %35, !dbg !7596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_setconfig(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !7597 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5665, metadata !DIExpression()), !dbg !7598
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !5675, metadata !DIExpression()), !dbg !7607
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !5678, metadata !DIExpression()), !dbg !7608
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %u = alloca i32, align 4
  %status = alloca i32, align 4
  %actconfig = alloca %struct.usb_host_config*, align 8
  %tmp = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i32, align 4
  %tmp3 = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !7609, metadata !DIExpression()), !dbg !7610
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7611, metadata !DIExpression()), !dbg !7612
  call void @llvm.dbg.declare(metadata i32* %u, metadata !7613, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7615, metadata !DIExpression()), !dbg !7616
  store i32 0, i32* %status, align 4, !dbg !7616
  call void @llvm.dbg.declare(metadata %struct.usb_host_config** %actconfig, metadata !7617, metadata !DIExpression()), !dbg !7618
  call void @might_fault() #11, !dbg !7619
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !7622, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.declare(metadata i32* %__val_gu, metadata !7625, metadata !DIExpression()), !dbg !7624
  %0 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !7624
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7624
  %2 = bitcast i8* %1 to i32*, !dbg !7624
  %3 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %2, i64 4, i64 %0) #7, !dbg !7624, !srcloc !7626
  %asmresult = extractvalue { i32*, i32, i64 } %3, 0, !dbg !7624
  %asmresult1 = extractvalue { i32*, i32, i64 } %3, 1, !dbg !7624
  %asmresult2 = extractvalue { i32*, i32, i64 } %3, 2, !dbg !7624
  %4 = ptrtoint i32* %asmresult to i64, !dbg !7624
  %5 = trunc i64 %4 to i32, !dbg !7624
  store i32 %5, i32* %__ret_gu, align 4, !dbg !7624
  store i32 %asmresult1, i32* %__val_gu, align 4, !dbg !7624
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult2), !dbg !7624
  %6 = load i32, i32* %__val_gu, align 4, !dbg !7624
  store i32 %6, i32* %u, align 4, !dbg !7624
  %7 = load i32, i32* %__ret_gu, align 4, !dbg !7624
  %conv = sext i32 %7 to i64, !dbg !7624
  store i64 %conv, i64* %tmp3, align 8, !dbg !7624
  %8 = load i64, i64* %tmp3, align 8, !dbg !7624
  store i64 %8, i64* %tmp, align 8, !dbg !7619
  %9 = load i64, i64* %tmp, align 8, !dbg !7619
  %tobool = icmp ne i64 %9, 0, !dbg !7627
  br i1 %tobool, label %if.then, label %if.end, !dbg !7628

if.then:                                          ; preds = %entry
  store i32 -14, i32* %retval, align 4, !dbg !7629
  br label %return, !dbg !7629

if.end:                                           ; preds = %entry
  %10 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7630
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %10, i32 0, i32 1, !dbg !7631
  %11 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !7631
  %actconfig4 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %11, i32 0, i32 19, !dbg !7632
  %12 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig4, align 8, !dbg !7632
  store %struct.usb_host_config* %12, %struct.usb_host_config** %actconfig, align 8, !dbg !7633
  %13 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !7634
  %tobool5 = icmp ne %struct.usb_host_config* %13, null, !dbg !7634
  br i1 %tobool5, label %if.then6, label %if.end24, !dbg !7635

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7636, metadata !DIExpression()), !dbg !7637
  store i32 0, i32* %i, align 4, !dbg !7638
  br label %for.cond, !dbg !7639

for.cond:                                         ; preds = %for.inc, %if.then6
  %14 = load i32, i32* %i, align 4, !dbg !7640
  %15 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !7641
  %desc = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %15, i32 0, i32 0, !dbg !7642
  %bNumInterfaces = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %desc, i32 0, i32 3, !dbg !7643
  %16 = load i8, i8* %bNumInterfaces, align 4, !dbg !7643
  %conv7 = zext i8 %16 to i32, !dbg !7641
  %cmp = icmp slt i32 %14, %conv7, !dbg !7644
  br i1 %cmp, label %for.body, label %for.end, !dbg !7645

for.body:                                         ; preds = %for.cond
  %17 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !7646
  %interface = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %17, i32 0, i32 3, !dbg !7647
  %18 = load i32, i32* %i, align 4, !dbg !7648
  %idxprom = sext i32 %18 to i64, !dbg !7646
  %arrayidx = getelementptr [32 x %struct.usb_interface*], [32 x %struct.usb_interface*]* %interface, i64 0, i64 %idxprom, !dbg !7646
  %19 = load %struct.usb_interface*, %struct.usb_interface** %arrayidx, align 8, !dbg !7646
  %call = call i32 @usb_interface_claimed(%struct.usb_interface* %19) #11, !dbg !7649
  %tobool9 = icmp ne i32 %call, 0, !dbg !7649
  br i1 %tobool9, label %if.then10, label %if.end23, !dbg !7650

if.then10:                                        ; preds = %for.body
  %20 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7651
  %dev11 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %20, i32 0, i32 1, !dbg !7651
  %21 = load %struct.usb_device*, %struct.usb_device** %dev11, align 8, !dbg !7651
  %dev12 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %21, i32 0, i32 14, !dbg !7651
  %22 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !7651
  %interface13 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %22, i32 0, i32 3, !dbg !7651
  %23 = load i32, i32* %i, align 4, !dbg !7651
  %idxprom14 = sext i32 %23 to i64, !dbg !7651
  %arrayidx15 = getelementptr [32 x %struct.usb_interface*], [32 x %struct.usb_interface*]* %interface13, i64 0, i64 %idxprom14, !dbg !7651
  %24 = load %struct.usb_interface*, %struct.usb_interface** %arrayidx15, align 8, !dbg !7651
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %24, i32 0, i32 1, !dbg !7651
  %25 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !dbg !7651
  %desc16 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %25, i32 0, i32 0, !dbg !7651
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc16, i32 0, i32 2, !dbg !7651
  %26 = load i8, i8* %bInterfaceNumber, align 2, !dbg !7651
  %conv17 = zext i8 %26 to i32, !dbg !7651
  %27 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !7651
  %interface18 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %27, i32 0, i32 3, !dbg !7651
  %28 = load i32, i32* %i, align 4, !dbg !7651
  %idxprom19 = sext i32 %28 to i64, !dbg !7651
  %arrayidx20 = getelementptr [32 x %struct.usb_interface*], [32 x %struct.usb_interface*]* %interface18, i64 0, i64 %idxprom19, !dbg !7651
  %29 = load %struct.usb_interface*, %struct.usb_interface** %arrayidx20, align 8, !dbg !7651
  %dev21 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %29, i32 0, i32 7, !dbg !7651
  %driver = getelementptr inbounds %struct.device, %struct.device* %dev21, i32 0, i32 6, !dbg !7651
  %30 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !7651
  %name = getelementptr inbounds %struct.device_driver, %struct.device_driver* %30, i32 0, i32 0, !dbg !7651
  %31 = load i8*, i8** %name, align 8, !dbg !7651
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !7607
  %32 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !7607
  %33 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !7608, !srcloc !5776
  store i64 %33, i64* %pfo_val__.i, align 8, !dbg !7608
  %34 = load i64, i64* %pfo_val__.i, align 8, !dbg !7608
  %35 = inttoptr i64 %34 to %struct.task_struct*, !dbg !7608
  store %struct.task_struct* %35, %struct.task_struct** %tmp.i, align 8, !dbg !7608
  %36 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !7608
  store %struct.task_struct* %36, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !7598
  %37 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !7598
  store %struct.task_struct* %37, %struct.task_struct** %tmp1.i, align 8, !dbg !7598
  %38 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !7598
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %38, i32 0, i32 68, !dbg !7651
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !7651
  %39 = load i32, i32* %u, align 4, !dbg !7651
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev12, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.49, i64 0, i64 0), i32 %conv17, i8* %31, i8* %arraydecay, i32 %39) #12, !dbg !7651
  store i32 -16, i32* %status, align 4, !dbg !7652
  br label %for.end, !dbg !7653

if.end23:                                         ; preds = %for.body
  br label %for.inc, !dbg !7654

for.inc:                                          ; preds = %if.end23
  %40 = load i32, i32* %i, align 4, !dbg !7655
  %inc = add i32 %40, 1, !dbg !7655
  store i32 %inc, i32* %i, align 4, !dbg !7655
  br label %for.cond, !dbg !7656, !llvm.loop !7657

for.end:                                          ; preds = %if.then10, %for.cond
  br label %if.end24, !dbg !7659

if.end24:                                         ; preds = %for.end, %if.end
  %41 = load i32, i32* %status, align 4, !dbg !7660
  %cmp25 = icmp eq i32 %41, 0, !dbg !7662
  br i1 %cmp25, label %if.then27, label %if.end39, !dbg !7663

if.then27:                                        ; preds = %if.end24
  %42 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !7664
  %tobool28 = icmp ne %struct.usb_host_config* %42, null, !dbg !7664
  br i1 %tobool28, label %land.lhs.true, label %if.else, !dbg !7667

land.lhs.true:                                    ; preds = %if.then27
  %43 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !7668
  %desc29 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %43, i32 0, i32 0, !dbg !7669
  %bConfigurationValue = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %desc29, i32 0, i32 4, !dbg !7670
  %44 = load i8, i8* %bConfigurationValue, align 1, !dbg !7670
  %conv30 = zext i8 %44 to i32, !dbg !7668
  %45 = load i32, i32* %u, align 4, !dbg !7671
  %cmp31 = icmp eq i32 %conv30, %45, !dbg !7672
  br i1 %cmp31, label %if.then33, label %if.else, !dbg !7673

if.then33:                                        ; preds = %land.lhs.true
  %46 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7674
  %dev34 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %46, i32 0, i32 1, !dbg !7675
  %47 = load %struct.usb_device*, %struct.usb_device** %dev34, align 8, !dbg !7675
  %call35 = call i32 @usb_reset_configuration(%struct.usb_device* %47) #11, !dbg !7676
  store i32 %call35, i32* %status, align 4, !dbg !7677
  br label %if.end38, !dbg !7678

if.else:                                          ; preds = %land.lhs.true, %if.then27
  %48 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7679
  %dev36 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %48, i32 0, i32 1, !dbg !7680
  %49 = load %struct.usb_device*, %struct.usb_device** %dev36, align 8, !dbg !7680
  %50 = load i32, i32* %u, align 4, !dbg !7681
  %call37 = call i32 @usb_set_configuration(%struct.usb_device* %49, i32 %50) #11, !dbg !7682
  store i32 %call37, i32* %status, align 4, !dbg !7683
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then33
  br label %if.end39, !dbg !7684

if.end39:                                         ; preds = %if.end38, %if.end24
  %51 = load i32, i32* %status, align 4, !dbg !7685
  store i32 %51, i32* %retval, align 4, !dbg !7686
  br label %return, !dbg !7686

return:                                           ; preds = %if.end39, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !7687
  ret i32 %52, !dbg !7687
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_submiturb(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !7688 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !7689
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !7693
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !7694
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !7695
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !7696
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6977, metadata !DIExpression()), !dbg !7697
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6979, metadata !DIExpression()), !dbg !7698
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6981, metadata !DIExpression()), !dbg !7699
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %uurb = alloca %struct.usbdevfs_urb, align 8
  %userurb_sigval = alloca %union.sigval, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !7700, metadata !DIExpression()), !dbg !7701
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7702, metadata !DIExpression()), !dbg !7703
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_urb* %uurb, metadata !7704, metadata !DIExpression()), !dbg !7705
  call void @llvm.dbg.declare(metadata %union.sigval* %userurb_sigval, metadata !7706, metadata !DIExpression()), !dbg !7707
  %0 = bitcast %struct.usbdevfs_urb* %uurb to i8*, !dbg !7708
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7709
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 56, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !7710
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !7710
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7695
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !7711
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !7711
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7711

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !7711
  %conv.i.i = sext i32 %5 to i64, !dbg !7711
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7711
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !7711
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7712
  %lnot.i.i = xor i1 %7, true, !dbg !7711
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !7711
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7711
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !7713

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7714
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #7, !dbg !7715
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !7716

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !7717
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7718
  call void @copy_overflow(i32 %10, i64 %11) #13, !dbg !7719
  br label %if.end9.i.i, !dbg !7719

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7720
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !7720
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7721

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !7722
  br label %if.end.i.i, !dbg !7722

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !7723
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7724
  br label %check_copy_size.exit.i, !dbg !7724

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7696
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !7696
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7696
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7696
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7696
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7725
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !7725
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7725
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7725
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7725
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7696

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !7726, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !7727, !srcloc !5212
  br label %if.end31.i.i, !dbg !7728

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7696
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !7696
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7696
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7696
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7696
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7725
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !7696
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !7729
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7730

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7731
  br label %check_copy_size.exit.i, !dbg !7731

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7732
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7733
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7734
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !7734
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #13, !dbg !7735
  store i1 true, i1* %retval.i.i, align 1, !dbg !7736
  br label %check_copy_size.exit.i, !dbg !7736

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !7737
  %lnot.i = xor i1 %20, true, !dbg !7710
  %lnot.ext.i = zext i1 %20 to i32, !dbg !7710
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7710
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !7738

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !7739
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !7740
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !7741
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #13, !dbg !7742
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7743
  br label %copy_from_user.exit, !dbg !7744

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !7745
  %tobool = icmp ne i64 %24, 0, !dbg !7746
  br i1 %tobool, label %if.then, label %if.end, !dbg !7747

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7748
  br label %return, !dbg !7748

if.end:                                           ; preds = %copy_from_user.exit
  %25 = bitcast %union.sigval* %userurb_sigval to i8*, !dbg !7749
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 8, i1 false), !dbg !7749
  %26 = load i8*, i8** %arg.addr, align 8, !dbg !7750
  %sival_ptr = bitcast %union.sigval* %userurb_sigval to i8**, !dbg !7751
  store i8* %26, i8** %sival_ptr, align 8, !dbg !7752
  %27 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7753
  %28 = load i8*, i8** %arg.addr, align 8, !dbg !7754
  %29 = bitcast i8* %28 to %struct.usbdevfs_urb*, !dbg !7755
  %iso_frame_desc = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %29, i32 0, i32 12, !dbg !7756
  %arraydecay = getelementptr inbounds [0 x %struct.usbdevfs_iso_packet_desc], [0 x %struct.usbdevfs_iso_packet_desc]* %iso_frame_desc, i64 0, i64 0, !dbg !7757
  %30 = load i8*, i8** %arg.addr, align 8, !dbg !7758
  %coerce.dive = getelementptr inbounds %union.sigval, %union.sigval* %userurb_sigval, i32 0, i32 0, !dbg !7759
  %31 = load i8*, i8** %coerce.dive, align 8, !dbg !7759
  %call1 = call i32 @proc_do_submiturb(%struct.usb_dev_state* %27, %struct.usbdevfs_urb* %uurb, %struct.usbdevfs_iso_packet_desc* %arraydecay, i8* %30, i8* %31) #11, !dbg !7759
  store i32 %call1, i32* %retval, align 4, !dbg !7760
  br label %return, !dbg !7760

return:                                           ; preds = %if.end, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !7761
  ret i32 %32, !dbg !7761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_unlinkurb(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !7762 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !5442, metadata !DIExpression()), !dbg !7763
  %flags.addr.i27 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i27, metadata !5449, metadata !DIExpression()), !dbg !7767
  %tmp.i28 = alloca i32, align 4
  %tmp8.i29 = alloca i32, align 4
  %lock.addr.i24 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i24, metadata !5442, metadata !DIExpression()), !dbg !7768
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5449, metadata !DIExpression()), !dbg !7770
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5451, metadata !DIExpression()), !dbg !7771
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %urb = alloca %struct.urb*, align 8
  %as = alloca %struct.async*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !7778, metadata !DIExpression()), !dbg !7779
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7780, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !7782, metadata !DIExpression()), !dbg !7783
  call void @llvm.dbg.declare(metadata %struct.async** %as, metadata !7784, metadata !DIExpression()), !dbg !7785
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7786, metadata !DIExpression()), !dbg !7787
  br label %do.body, !dbg !7788

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7789

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7790, metadata !DIExpression()), !dbg !7792
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7793, metadata !DIExpression()), !dbg !7792
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7792
  %conv = zext i1 %cmp to i32, !dbg !7792
  store i32 1, i32* %tmp, align 4, !dbg !7792
  %0 = load i32, i32* %tmp, align 4, !dbg !7792
  br label %do.body2, !dbg !7794

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7795

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7796

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7798, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7802, metadata !DIExpression()), !dbg !7801
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7801
  %conv8 = zext i1 %cmp7 to i32, !dbg !7801
  store i32 1, i32* %tmp9, align 4, !dbg !7801
  %1 = load i32, i32* %tmp9, align 4, !dbg !7801
  %call = call i64 @arch_local_irq_save() #11, !dbg !7803
  store i64 %call, i64* %flags, align 8, !dbg !7803
  br label %do.end, !dbg !7803

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7796

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7795

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7804, !srcloc !7805
  br label %do.body12, !dbg !7804

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7806
  %lock = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %2, i32 0, i32 3, !dbg !7806
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7807
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !7808
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !7808
  br label %do.end14, !dbg !7806

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7804

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7795

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7794

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7789

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7809
  %6 = load i8*, i8** %arg.addr, align 8, !dbg !7810
  %call19 = call %struct.async* @async_getpending(%struct.usb_dev_state* %5, i8* %6) #11, !dbg !7811
  store %struct.async* %call19, %struct.async** %as, align 8, !dbg !7812
  %7 = load %struct.async*, %struct.async** %as, align 8, !dbg !7813
  %tobool = icmp ne %struct.async* %7, null, !dbg !7813
  br i1 %tobool, label %if.end, label %if.then, !dbg !7814

if.then:                                          ; preds = %do.end18
  %8 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7815
  %lock20 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 3, !dbg !7816
  %9 = load i64, i64* %flags, align 8, !dbg !7817
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %9, i64* %flags.addr.i27, align 8
  call void @llvm.dbg.declare(metadata !243, metadata !5632, metadata !DIExpression()) #7, !dbg !7818
  call void @llvm.dbg.declare(metadata !243, metadata !5636, metadata !DIExpression()) #7, !dbg !7818
  store i32 1, i32* %tmp.i28, align 4, !dbg !7818
  %10 = load i32, i32* %tmp.i28, align 4, !dbg !7818
  call void @llvm.dbg.declare(metadata !243, metadata !5637, metadata !DIExpression()) #7, !dbg !7819
  call void @llvm.dbg.declare(metadata !243, metadata !5643, metadata !DIExpression()) #7, !dbg !7819
  store i32 1, i32* %tmp8.i29, align 4, !dbg !7819
  %11 = load i32, i32* %tmp8.i29, align 4, !dbg !7819
  %12 = load i64, i64* %flags.addr.i27, align 8, !dbg !7820
  call void @arch_local_irq_restore(i64 %12) #13, !dbg !7820
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7821, !srcloc !5647
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !7822
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !7822
  %rlock.i30 = bitcast %union.anon.0* %14 to %struct.raw_spinlock*, !dbg !7822
  store i32 -22, i32* %retval, align 4, !dbg !7823
  br label %return, !dbg !7823

if.end:                                           ; preds = %do.end18
  %15 = load %struct.async*, %struct.async** %as, align 8, !dbg !7824
  %urb21 = getelementptr inbounds %struct.async, %struct.async* %15, i32 0, i32 9, !dbg !7825
  %16 = load %struct.urb*, %struct.urb** %urb21, align 8, !dbg !7825
  store %struct.urb* %16, %struct.urb** %urb, align 8, !dbg !7826
  %17 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !7827
  %call22 = call %struct.urb* @usb_get_urb(%struct.urb* %17) #11, !dbg !7828
  %18 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7829
  %lock23 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %18, i32 0, i32 3, !dbg !7830
  %19 = load i64, i64* %flags, align 8, !dbg !7831
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i24, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !243, metadata !5632, metadata !DIExpression()) #7, !dbg !7832
  call void @llvm.dbg.declare(metadata !243, metadata !5636, metadata !DIExpression()) #7, !dbg !7832
  store i32 1, i32* %tmp.i, align 4, !dbg !7832
  %20 = load i32, i32* %tmp.i, align 4, !dbg !7832
  call void @llvm.dbg.declare(metadata !243, metadata !5637, metadata !DIExpression()) #7, !dbg !7833
  call void @llvm.dbg.declare(metadata !243, metadata !5643, metadata !DIExpression()) #7, !dbg !7833
  store i32 1, i32* %tmp8.i, align 4, !dbg !7833
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !7833
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !7834
  call void @arch_local_irq_restore(i64 %22) #13, !dbg !7834
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7835, !srcloc !5647
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i24, align 8, !dbg !7836
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !7836
  %rlock.i25 = bitcast %union.anon.0* %24 to %struct.raw_spinlock*, !dbg !7836
  %25 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !7837
  call void @usb_kill_urb(%struct.urb* %25) #11, !dbg !7838
  %26 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !7839
  call void @usb_free_urb(%struct.urb* %26) #11, !dbg !7840
  store i32 0, i32* %retval, align 4, !dbg !7841
  br label %return, !dbg !7841

return:                                           ; preds = %if.end, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !7842
  ret i32 %27, !dbg !7842
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_disconnectsignal(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !7843 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !7844
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !7848
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !7849
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !7850
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !7851
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6977, metadata !DIExpression()), !dbg !7852
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6979, metadata !DIExpression()), !dbg !7853
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6981, metadata !DIExpression()), !dbg !7854
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %ds = alloca %struct.usbdevfs_disconnectsignal, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !7855, metadata !DIExpression()), !dbg !7856
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7857, metadata !DIExpression()), !dbg !7858
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_disconnectsignal* %ds, metadata !7859, metadata !DIExpression()), !dbg !7864
  %0 = bitcast %struct.usbdevfs_disconnectsignal* %ds to i8*, !dbg !7865
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7866
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 16, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !7867
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !7867
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7850
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !7868
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !7868
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7868

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !7868
  %conv.i.i = sext i32 %5 to i64, !dbg !7868
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7868
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !7868
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7869
  %lnot.i.i = xor i1 %7, true, !dbg !7868
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !7868
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7868
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !7870

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7871
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #7, !dbg !7872
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !7873

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !7874
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7875
  call void @copy_overflow(i32 %10, i64 %11) #13, !dbg !7876
  br label %if.end9.i.i, !dbg !7876

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7877
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !7877
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7878

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !7879
  br label %if.end.i.i, !dbg !7879

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !7880
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7881
  br label %check_copy_size.exit.i, !dbg !7881

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7851
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !7851
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7851
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7851
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7851
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7882
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !7882
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7882
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7882
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7882
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7851

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !7883, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !7884, !srcloc !5212
  br label %if.end31.i.i, !dbg !7885

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7851
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !7851
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7851
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7851
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7851
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7882
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !7851
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !7886
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7887

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7888
  br label %check_copy_size.exit.i, !dbg !7888

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7889
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7890
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7891
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !7891
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #13, !dbg !7892
  store i1 true, i1* %retval.i.i, align 1, !dbg !7893
  br label %check_copy_size.exit.i, !dbg !7893

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !7894
  %lnot.i = xor i1 %20, true, !dbg !7867
  %lnot.ext.i = zext i1 %20 to i32, !dbg !7867
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7867
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !7895

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !7896
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !7897
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !7898
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #13, !dbg !7899
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7900
  br label %copy_from_user.exit, !dbg !7901

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !7902
  %tobool = icmp ne i64 %24, 0, !dbg !7903
  br i1 %tobool, label %if.then, label %if.end, !dbg !7904

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7905
  br label %return, !dbg !7905

if.end:                                           ; preds = %copy_from_user.exit
  %signr = getelementptr inbounds %struct.usbdevfs_disconnectsignal, %struct.usbdevfs_disconnectsignal* %ds, i32 0, i32 0, !dbg !7906
  %25 = load i32, i32* %signr, align 8, !dbg !7906
  %26 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7907
  %discsignr = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %26, i32 0, i32 9, !dbg !7908
  store i32 %25, i32* %discsignr, align 8, !dbg !7909
  %context = getelementptr inbounds %struct.usbdevfs_disconnectsignal, %struct.usbdevfs_disconnectsignal* %ds, i32 0, i32 1, !dbg !7910
  %27 = load i8*, i8** %context, align 8, !dbg !7910
  %28 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7911
  %disccontext = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %28, i32 0, i32 12, !dbg !7912
  %sival_ptr = bitcast %union.sigval* %disccontext to i8**, !dbg !7913
  store i8* %27, i8** %sival_ptr, align 8, !dbg !7914
  store i32 0, i32* %retval, align 4, !dbg !7915
  br label %return, !dbg !7915

return:                                           ; preds = %if.end, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !7916
  ret i32 %29, !dbg !7916
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_claiminterface(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !7917 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %ifnum = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i32, align 4
  %tmp3 = alloca i64, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !7918, metadata !DIExpression()), !dbg !7919
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7920, metadata !DIExpression()), !dbg !7921
  call void @llvm.dbg.declare(metadata i32* %ifnum, metadata !7922, metadata !DIExpression()), !dbg !7923
  call void @might_fault() #11, !dbg !7924
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !7927, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.declare(metadata i32* %__val_gu, metadata !7930, metadata !DIExpression()), !dbg !7929
  %0 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !7929
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7929
  %2 = bitcast i8* %1 to i32*, !dbg !7929
  %3 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %2, i64 4, i64 %0) #7, !dbg !7929, !srcloc !7931
  %asmresult = extractvalue { i32*, i32, i64 } %3, 0, !dbg !7929
  %asmresult1 = extractvalue { i32*, i32, i64 } %3, 1, !dbg !7929
  %asmresult2 = extractvalue { i32*, i32, i64 } %3, 2, !dbg !7929
  %4 = ptrtoint i32* %asmresult to i64, !dbg !7929
  %5 = trunc i64 %4 to i32, !dbg !7929
  store i32 %5, i32* %__ret_gu, align 4, !dbg !7929
  store i32 %asmresult1, i32* %__val_gu, align 4, !dbg !7929
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult2), !dbg !7929
  %6 = load i32, i32* %__val_gu, align 4, !dbg !7929
  store i32 %6, i32* %ifnum, align 4, !dbg !7929
  %7 = load i32, i32* %__ret_gu, align 4, !dbg !7929
  %conv = sext i32 %7 to i64, !dbg !7929
  store i64 %conv, i64* %tmp3, align 8, !dbg !7929
  %8 = load i64, i64* %tmp3, align 8, !dbg !7929
  store i64 %8, i64* %tmp, align 8, !dbg !7924
  %9 = load i64, i64* %tmp, align 8, !dbg !7924
  %tobool = icmp ne i64 %9, 0, !dbg !7932
  br i1 %tobool, label %if.then, label %if.end, !dbg !7933

if.then:                                          ; preds = %entry
  store i32 -14, i32* %retval, align 4, !dbg !7934
  br label %return, !dbg !7934

if.end:                                           ; preds = %entry
  %10 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7935
  %11 = load i32, i32* %ifnum, align 4, !dbg !7936
  %call = call i32 @claimintf(%struct.usb_dev_state* %10, i32 %11) #11, !dbg !7937
  store i32 %call, i32* %retval, align 4, !dbg !7938
  br label %return, !dbg !7938

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7939
  ret i32 %12, !dbg !7939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_releaseinterface(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !7940 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %ifnum = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i32, align 4
  %tmp3 = alloca i64, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !7941, metadata !DIExpression()), !dbg !7942
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7943, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.declare(metadata i32* %ifnum, metadata !7945, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7947, metadata !DIExpression()), !dbg !7948
  call void @might_fault() #11, !dbg !7949
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !7952, metadata !DIExpression()), !dbg !7954
  call void @llvm.dbg.declare(metadata i32* %__val_gu, metadata !7955, metadata !DIExpression()), !dbg !7954
  %0 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !7954
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7954
  %2 = bitcast i8* %1 to i32*, !dbg !7954
  %3 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %2, i64 4, i64 %0) #7, !dbg !7954, !srcloc !7956
  %asmresult = extractvalue { i32*, i32, i64 } %3, 0, !dbg !7954
  %asmresult1 = extractvalue { i32*, i32, i64 } %3, 1, !dbg !7954
  %asmresult2 = extractvalue { i32*, i32, i64 } %3, 2, !dbg !7954
  %4 = ptrtoint i32* %asmresult to i64, !dbg !7954
  %5 = trunc i64 %4 to i32, !dbg !7954
  store i32 %5, i32* %__ret_gu, align 4, !dbg !7954
  store i32 %asmresult1, i32* %__val_gu, align 4, !dbg !7954
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult2), !dbg !7954
  %6 = load i32, i32* %__val_gu, align 4, !dbg !7954
  store i32 %6, i32* %ifnum, align 4, !dbg !7954
  %7 = load i32, i32* %__ret_gu, align 4, !dbg !7954
  %conv = sext i32 %7 to i64, !dbg !7954
  store i64 %conv, i64* %tmp3, align 8, !dbg !7954
  %8 = load i64, i64* %tmp3, align 8, !dbg !7954
  store i64 %8, i64* %tmp, align 8, !dbg !7949
  %9 = load i64, i64* %tmp, align 8, !dbg !7949
  %tobool = icmp ne i64 %9, 0, !dbg !7957
  br i1 %tobool, label %if.then, label %if.end, !dbg !7958

if.then:                                          ; preds = %entry
  store i32 -14, i32* %retval, align 4, !dbg !7959
  br label %return, !dbg !7959

if.end:                                           ; preds = %entry
  %10 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7960
  %11 = load i32, i32* %ifnum, align 4, !dbg !7961
  %call = call i32 @releaseintf(%struct.usb_dev_state* %10, i32 %11) #11, !dbg !7962
  store i32 %call, i32* %ret, align 4, !dbg !7963
  %12 = load i32, i32* %ret, align 4, !dbg !7964
  %cmp = icmp slt i32 %12, 0, !dbg !7966
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !7967

if.then5:                                         ; preds = %if.end
  %13 = load i32, i32* %ret, align 4, !dbg !7968
  store i32 %13, i32* %retval, align 4, !dbg !7969
  br label %return, !dbg !7969

if.end6:                                          ; preds = %if.end
  %14 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !7970
  %15 = load i32, i32* %ifnum, align 4, !dbg !7971
  call void @destroy_async_on_interface(%struct.usb_dev_state* %14, i32 %15) #11, !dbg !7972
  store i32 0, i32* %retval, align 4, !dbg !7973
  br label %return, !dbg !7973

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !7974
  ret i32 %16, !dbg !7974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_ioctl_default(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !7975 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !7976
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !7980
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !7981
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !7982
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !7983
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6977, metadata !DIExpression()), !dbg !7984
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6979, metadata !DIExpression()), !dbg !7985
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6981, metadata !DIExpression()), !dbg !7986
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %ctrl = alloca %struct.usbdevfs_ioctl, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !7987, metadata !DIExpression()), !dbg !7988
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !7989, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_ioctl* %ctrl, metadata !7991, metadata !DIExpression()), !dbg !7997
  %0 = bitcast %struct.usbdevfs_ioctl* %ctrl to i8*, !dbg !7998
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !7999
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 16, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !8000
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !8000
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7982
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !8001
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !8001
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8001

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !8001
  %conv.i.i = sext i32 %5 to i64, !dbg !8001
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8001
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !8001
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8002
  %lnot.i.i = xor i1 %7, true, !dbg !8001
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !8001
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8001
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !8003

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8004
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #7, !dbg !8005
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !8006

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !8007
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8008
  call void @copy_overflow(i32 %10, i64 %11) #13, !dbg !8009
  br label %if.end9.i.i, !dbg !8009

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8010
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !8010
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8011

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !8012
  br label %if.end.i.i, !dbg !8012

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !8013
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8014
  br label %check_copy_size.exit.i, !dbg !8014

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7983
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !7983
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7983
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7983
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7983
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8015
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !8015
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8015
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8015
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8015
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7983

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !8016, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !8017, !srcloc !5212
  br label %if.end31.i.i, !dbg !8018

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7983
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !7983
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7983
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7983
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7983
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8015
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !7983
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !8019
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8020

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8021
  br label %check_copy_size.exit.i, !dbg !8021

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8022
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8023
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8024
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !8024
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #13, !dbg !8025
  store i1 true, i1* %retval.i.i, align 1, !dbg !8026
  br label %check_copy_size.exit.i, !dbg !8026

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !8027
  %lnot.i = xor i1 %20, true, !dbg !8000
  %lnot.ext.i = zext i1 %20 to i32, !dbg !8000
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8000
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !8028

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !8029
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !8030
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !8031
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #13, !dbg !8032
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8033
  br label %copy_from_user.exit, !dbg !8034

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !8035
  %tobool = icmp ne i64 %24, 0, !dbg !8036
  br i1 %tobool, label %if.then, label %if.end, !dbg !8037

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8038
  br label %return, !dbg !8038

if.end:                                           ; preds = %copy_from_user.exit
  %25 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8039
  %call1 = call i32 @proc_ioctl(%struct.usb_dev_state* %25, %struct.usbdevfs_ioctl* %ctrl) #11, !dbg !8040
  store i32 %call1, i32* %retval, align 4, !dbg !8041
  br label %return, !dbg !8041

return:                                           ; preds = %if.end, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !8042
  ret i32 %26, !dbg !8042
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_claim_port(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !8043 {
entry:
  %pscr_ret__.i15 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i15, metadata !5665, metadata !DIExpression()), !dbg !8044
  %__vpp_verify.i16 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i16, metadata !5675, metadata !DIExpression()), !dbg !8049
  %pfo_val__.i17 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i17, metadata !5678, metadata !DIExpression()), !dbg !8050
  %tmp.i18 = alloca %struct.task_struct*, align 8
  %tmp1.i19 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5665, metadata !DIExpression()), !dbg !8051
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !5675, metadata !DIExpression()), !dbg !8053
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !5678, metadata !DIExpression()), !dbg !8054
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %portnum = alloca i32, align 4
  %rc = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i32, align 4
  %tmp3 = alloca i64, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !8055, metadata !DIExpression()), !dbg !8056
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8057, metadata !DIExpression()), !dbg !8058
  call void @llvm.dbg.declare(metadata i32* %portnum, metadata !8059, metadata !DIExpression()), !dbg !8060
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8061, metadata !DIExpression()), !dbg !8062
  call void @might_fault() #11, !dbg !8063
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !8066, metadata !DIExpression()), !dbg !8068
  call void @llvm.dbg.declare(metadata i32* %__val_gu, metadata !8069, metadata !DIExpression()), !dbg !8068
  %0 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !8068
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8068
  %2 = bitcast i8* %1 to i32*, !dbg !8068
  %3 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %2, i64 4, i64 %0) #7, !dbg !8068, !srcloc !8070
  %asmresult = extractvalue { i32*, i32, i64 } %3, 0, !dbg !8068
  %asmresult1 = extractvalue { i32*, i32, i64 } %3, 1, !dbg !8068
  %asmresult2 = extractvalue { i32*, i32, i64 } %3, 2, !dbg !8068
  %4 = ptrtoint i32* %asmresult to i64, !dbg !8068
  %5 = trunc i64 %4 to i32, !dbg !8068
  store i32 %5, i32* %__ret_gu, align 4, !dbg !8068
  store i32 %asmresult1, i32* %__val_gu, align 4, !dbg !8068
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult2), !dbg !8068
  %6 = load i32, i32* %__val_gu, align 4, !dbg !8068
  store i32 %6, i32* %portnum, align 4, !dbg !8068
  %7 = load i32, i32* %__ret_gu, align 4, !dbg !8068
  %conv = sext i32 %7 to i64, !dbg !8068
  store i64 %conv, i64* %tmp3, align 8, !dbg !8068
  %8 = load i64, i64* %tmp3, align 8, !dbg !8068
  store i64 %8, i64* %tmp, align 8, !dbg !8063
  %9 = load i64, i64* %tmp, align 8, !dbg !8063
  %tobool = icmp ne i64 %9, 0, !dbg !8071
  br i1 %tobool, label %if.then, label %if.end, !dbg !8072

if.then:                                          ; preds = %entry
  store i32 -14, i32* %retval, align 4, !dbg !8073
  br label %return, !dbg !8073

if.end:                                           ; preds = %entry
  %10 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8074
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %10, i32 0, i32 1, !dbg !8075
  %11 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !8075
  %12 = load i32, i32* %portnum, align 4, !dbg !8076
  %13 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8077
  %call = call i32 @usb_hub_claim_port(%struct.usb_device* %11, i32 %12, %struct.usb_dev_state* %13) #11, !dbg !8078
  store i32 %call, i32* %rc, align 4, !dbg !8079
  %14 = load i32, i32* %rc, align 4, !dbg !8080
  %cmp = icmp eq i32 %14, 0, !dbg !8081
  br i1 %cmp, label %if.then5, label %if.end14, !dbg !8082

if.then5:                                         ; preds = %if.end
  br label %do.body, !dbg !8083

do.body:                                          ; preds = %if.then5
  %15 = load i8, i8* @usbfs_snoop, align 1, !dbg !8084
  %tobool6 = trunc i8 %15 to i1, !dbg !8084
  br i1 %tobool6, label %if.then7, label %if.end13, !dbg !8085

if.then7:                                         ; preds = %do.body
  %16 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8084
  %dev8 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %16, i32 0, i32 1, !dbg !8084
  %17 = load %struct.usb_device*, %struct.usb_device** %dev8, align 8, !dbg !8084
  %dev9 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %17, i32 0, i32 14, !dbg !8084
  %18 = load i32, i32* %portnum, align 4, !dbg !8084
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !8053
  %19 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !8053
  %20 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !8054, !srcloc !5776
  store i64 %20, i64* %pfo_val__.i, align 8, !dbg !8054
  %21 = load i64, i64* %pfo_val__.i, align 8, !dbg !8054
  %22 = inttoptr i64 %21 to %struct.task_struct*, !dbg !8054
  store %struct.task_struct* %22, %struct.task_struct** %tmp.i, align 8, !dbg !8054
  %23 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !8054
  store %struct.task_struct* %23, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !8051
  %24 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !8051
  store %struct.task_struct* %24, %struct.task_struct** %tmp1.i, align 8, !dbg !8051
  %25 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !8051
  %call11 = call i32 @task_pid_nr(%struct.task_struct* %25) #11, !dbg !8084
  store i8* null, i8** %__vpp_verify.i16, align 8, !dbg !8049
  %26 = load i8*, i8** %__vpp_verify.i16, align 8, !dbg !8049
  %27 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !8050, !srcloc !5776
  store i64 %27, i64* %pfo_val__.i17, align 8, !dbg !8050
  %28 = load i64, i64* %pfo_val__.i17, align 8, !dbg !8050
  %29 = inttoptr i64 %28 to %struct.task_struct*, !dbg !8050
  store %struct.task_struct* %29, %struct.task_struct** %tmp.i18, align 8, !dbg !8050
  %30 = load %struct.task_struct*, %struct.task_struct** %tmp.i18, align 8, !dbg !8050
  store %struct.task_struct* %30, %struct.task_struct** %pscr_ret__.i15, align 8, !dbg !8044
  %31 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i15, align 8, !dbg !8044
  store %struct.task_struct* %31, %struct.task_struct** %tmp1.i19, align 8, !dbg !8044
  %32 = load %struct.task_struct*, %struct.task_struct** %tmp1.i19, align 8, !dbg !8044
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %32, i32 0, i32 68, !dbg !8084
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !8084
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev9, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.55, i64 0, i64 0), i32 %18, i32 %call11, i8* %arraydecay) #12, !dbg !8084
  br label %if.end13, !dbg !8084

if.end13:                                         ; preds = %if.then7, %do.body
  br label %do.end, !dbg !8085

do.end:                                           ; preds = %if.end13
  br label %if.end14, !dbg !8085

if.end14:                                         ; preds = %do.end, %if.end
  %33 = load i32, i32* %rc, align 4, !dbg !8086
  store i32 %33, i32* %retval, align 4, !dbg !8087
  br label %return, !dbg !8087

return:                                           ; preds = %if.end14, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !8088
  ret i32 %34, !dbg !8088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_release_port(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !8089 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %portnum = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i32, align 4
  %tmp3 = alloca i64, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !8090, metadata !DIExpression()), !dbg !8091
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8092, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.declare(metadata i32* %portnum, metadata !8094, metadata !DIExpression()), !dbg !8095
  call void @might_fault() #11, !dbg !8096
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !8099, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.declare(metadata i32* %__val_gu, metadata !8102, metadata !DIExpression()), !dbg !8101
  %0 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !8101
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8101
  %2 = bitcast i8* %1 to i32*, !dbg !8101
  %3 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %2, i64 4, i64 %0) #7, !dbg !8101, !srcloc !8103
  %asmresult = extractvalue { i32*, i32, i64 } %3, 0, !dbg !8101
  %asmresult1 = extractvalue { i32*, i32, i64 } %3, 1, !dbg !8101
  %asmresult2 = extractvalue { i32*, i32, i64 } %3, 2, !dbg !8101
  %4 = ptrtoint i32* %asmresult to i64, !dbg !8101
  %5 = trunc i64 %4 to i32, !dbg !8101
  store i32 %5, i32* %__ret_gu, align 4, !dbg !8101
  store i32 %asmresult1, i32* %__val_gu, align 4, !dbg !8101
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult2), !dbg !8101
  %6 = load i32, i32* %__val_gu, align 4, !dbg !8101
  store i32 %6, i32* %portnum, align 4, !dbg !8101
  %7 = load i32, i32* %__ret_gu, align 4, !dbg !8101
  %conv = sext i32 %7 to i64, !dbg !8101
  store i64 %conv, i64* %tmp3, align 8, !dbg !8101
  %8 = load i64, i64* %tmp3, align 8, !dbg !8101
  store i64 %8, i64* %tmp, align 8, !dbg !8096
  %9 = load i64, i64* %tmp, align 8, !dbg !8096
  %tobool = icmp ne i64 %9, 0, !dbg !8104
  br i1 %tobool, label %if.then, label %if.end, !dbg !8105

if.then:                                          ; preds = %entry
  store i32 -14, i32* %retval, align 4, !dbg !8106
  br label %return, !dbg !8106

if.end:                                           ; preds = %entry
  %10 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8107
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %10, i32 0, i32 1, !dbg !8108
  %11 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !8108
  %12 = load i32, i32* %portnum, align 4, !dbg !8109
  %13 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8110
  %call = call i32 @usb_hub_release_port(%struct.usb_device* %11, i32 %12, %struct.usb_dev_state* %13) #11, !dbg !8111
  store i32 %call, i32* %retval, align 4, !dbg !8112
  br label %return, !dbg !8112

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !8113
  ret i32 %14, !dbg !8113
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_get_capabilities(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !8114 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %caps = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp8 = alloca i64, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !8115, metadata !DIExpression()), !dbg !8116
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8117, metadata !DIExpression()), !dbg !8118
  call void @llvm.dbg.declare(metadata i32* %caps, metadata !8119, metadata !DIExpression()), !dbg !8120
  store i32 501, i32* %caps, align 4, !dbg !8121
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8122
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1, !dbg !8124
  %1 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !8124
  %bus = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 12, !dbg !8125
  %2 = load %struct.usb_bus*, %struct.usb_bus** %bus, align 8, !dbg !8125
  %no_stop_on_short = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %2, i32 0, i32 6, !dbg !8126
  %bf.load = load i8, i8* %no_stop_on_short, align 2, !dbg !8126
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !8126
  %bf.clear = and i8 %bf.lshr, 1, !dbg !8126
  %bf.cast = zext i8 %bf.clear to i32, !dbg !8126
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8122
  br i1 %tobool, label %if.end, label %if.then, !dbg !8127

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %caps, align 4, !dbg !8128
  %or = or i32 %3, 2, !dbg !8128
  store i32 %or, i32* %caps, align 4, !dbg !8128
  br label %if.end, !dbg !8129

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8130
  %dev1 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %4, i32 0, i32 1, !dbg !8132
  %5 = load %struct.usb_device*, %struct.usb_device** %dev1, align 8, !dbg !8132
  %bus2 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 12, !dbg !8133
  %6 = load %struct.usb_bus*, %struct.usb_bus** %bus2, align 8, !dbg !8133
  %sg_tablesize = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %6, i32 0, i32 7, !dbg !8134
  %7 = load i32, i32* %sg_tablesize, align 4, !dbg !8134
  %tobool3 = icmp ne i32 %7, 0, !dbg !8130
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !8135

if.then4:                                         ; preds = %if.end
  %8 = load i32, i32* %caps, align 4, !dbg !8136
  %or5 = or i32 %8, 8, !dbg !8136
  store i32 %or5, i32* %caps, align 4, !dbg !8136
  br label %if.end6, !dbg !8137

if.end6:                                          ; preds = %if.then4, %if.end
  call void @might_fault() #11, !dbg !8138
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !8141, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !8144, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !8145, metadata !DIExpression()), !dbg !8143
  %9 = load i8*, i8** %arg.addr, align 8, !dbg !8143
  %10 = bitcast i8* %9 to i32*, !dbg !8143
  %11 = bitcast i32* %10 to i8*, !dbg !8143
  store i8* %11, i8** %__ptr_pu, align 8, !dbg !8143
  %12 = load i32, i32* %caps, align 4, !dbg !8143
  store i32 %12, i32* %__val_pu, align 4, !dbg !8143
  %13 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !8143
  %14 = load i8*, i8** %__ptr_pu, align 8, !dbg !8143
  %15 = load i32, i32* %__val_pu, align 4, !dbg !8143
  %16 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %14, i32 %15, i64 4, i64 %13) #7, !dbg !8143, !srcloc !8146
  %asmresult = extractvalue { i8*, i64 } %16, 0, !dbg !8143
  %asmresult7 = extractvalue { i8*, i64 } %16, 1, !dbg !8143
  %17 = ptrtoint i8* %asmresult to i64, !dbg !8143
  %18 = trunc i64 %17 to i32, !dbg !8143
  store i32 %18, i32* %__ret_pu, align 4, !dbg !8143
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult7), !dbg !8143
  %19 = load i32, i32* %__ret_pu, align 4, !dbg !8143
  %conv = sext i32 %19 to i64, !dbg !8143
  store i64 %conv, i64* %tmp8, align 8, !dbg !8143
  %20 = load i64, i64* %tmp8, align 8, !dbg !8143
  store i64 %20, i64* %tmp, align 8, !dbg !8138
  %21 = load i64, i64* %tmp, align 8, !dbg !8138
  %tobool9 = icmp ne i64 %21, 0, !dbg !8147
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !8148

if.then10:                                        ; preds = %if.end6
  store i32 -14, i32* %retval, align 4, !dbg !8149
  br label %return, !dbg !8149

if.end11:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !8150
  br label %return, !dbg !8150

return:                                           ; preds = %if.end11, %if.then10
  %22 = load i32, i32* %retval, align 4, !dbg !8151
  ret i32 %22, !dbg !8151
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_disconnect_claim(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !8152 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !8153
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !8157
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !8158
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !8159
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !8160
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6977, metadata !DIExpression()), !dbg !8161
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6979, metadata !DIExpression()), !dbg !8162
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6981, metadata !DIExpression()), !dbg !8163
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %dc = alloca %struct.usbdevfs_disconnect_claim, align 4
  %intf = alloca %struct.usb_interface*, align 8
  %driver8 = alloca %struct.usb_driver*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.usb_driver*, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !8164, metadata !DIExpression()), !dbg !8165
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8166, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_disconnect_claim* %dc, metadata !8168, metadata !DIExpression()), !dbg !8174
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf, metadata !8175, metadata !DIExpression()), !dbg !8176
  %0 = bitcast %struct.usbdevfs_disconnect_claim* %dc to i8*, !dbg !8177
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8178
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 264, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !8179
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !8179
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8159
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !8180
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !8180
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8180

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !8180
  %conv.i.i = sext i32 %5 to i64, !dbg !8180
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8180
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !8180
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8181
  %lnot.i.i = xor i1 %7, true, !dbg !8180
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !8180
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8180
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !8182

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8183
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #7, !dbg !8184
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !8185

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !8186
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8187
  call void @copy_overflow(i32 %10, i64 %11) #13, !dbg !8188
  br label %if.end9.i.i, !dbg !8188

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8189
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !8189
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8190

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !8191
  br label %if.end.i.i, !dbg !8191

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !8192
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8193
  br label %check_copy_size.exit.i, !dbg !8193

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8160
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !8160
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8160
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8160
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8160
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8194
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !8194
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8194
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8194
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8194
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8160

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !8195, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !8196, !srcloc !5212
  br label %if.end31.i.i, !dbg !8197

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8160
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !8160
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8160
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8160
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8160
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8194
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !8160
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !8198
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8199

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8200
  br label %check_copy_size.exit.i, !dbg !8200

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8201
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8202
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8203
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !8203
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #13, !dbg !8204
  store i1 true, i1* %retval.i.i, align 1, !dbg !8205
  br label %check_copy_size.exit.i, !dbg !8205

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !8206
  %lnot.i = xor i1 %20, true, !dbg !8179
  %lnot.ext.i = zext i1 %20 to i32, !dbg !8179
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8179
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !8207

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !8208
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !8209
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !8210
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #13, !dbg !8211
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8212
  br label %copy_from_user.exit, !dbg !8213

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !8214
  %tobool = icmp ne i64 %24, 0, !dbg !8215
  br i1 %tobool, label %if.then, label %if.end, !dbg !8216

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8217
  br label %return, !dbg !8217

if.end:                                           ; preds = %copy_from_user.exit
  %25 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8218
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %25, i32 0, i32 1, !dbg !8219
  %26 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !8219
  %interface = getelementptr inbounds %struct.usbdevfs_disconnect_claim, %struct.usbdevfs_disconnect_claim* %dc, i32 0, i32 0, !dbg !8220
  %27 = load i32, i32* %interface, align 4, !dbg !8220
  %call1 = call %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device* %26, i32 %27) #11, !dbg !8221
  store %struct.usb_interface* %call1, %struct.usb_interface** %intf, align 8, !dbg !8222
  %28 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !8223
  %tobool2 = icmp ne %struct.usb_interface* %28, null, !dbg !8223
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !8225

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8226
  br label %return, !dbg !8226

if.end4:                                          ; preds = %if.end
  %29 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !8227
  %dev5 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %29, i32 0, i32 7, !dbg !8229
  %driver = getelementptr inbounds %struct.device, %struct.device* %dev5, i32 0, i32 6, !dbg !8230
  %30 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !8230
  %tobool6 = icmp ne %struct.device_driver* %30, null, !dbg !8227
  br i1 %tobool6, label %if.then7, label %if.end34, !dbg !8231

if.then7:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.usb_driver** %driver8, metadata !8232, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8235, metadata !DIExpression()), !dbg !8237
  %31 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !8237
  %dev9 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %31, i32 0, i32 7, !dbg !8237
  %driver10 = getelementptr inbounds %struct.device, %struct.device* %dev9, i32 0, i32 6, !dbg !8237
  %32 = load %struct.device_driver*, %struct.device_driver** %driver10, align 8, !dbg !8237
  %33 = bitcast %struct.device_driver* %32 to i8*, !dbg !8237
  store i8* %33, i8** %__mptr, align 8, !dbg !8237
  br label %do.body, !dbg !8237

do.body:                                          ; preds = %if.then7
  br label %do.end, !dbg !8238

do.end:                                           ; preds = %do.body
  %34 = load i8*, i8** %__mptr, align 8, !dbg !8237
  %add.ptr = getelementptr i8, i8* %34, i64 -104, !dbg !8237
  %35 = bitcast i8* %add.ptr to %struct.usb_driver*, !dbg !8237
  store %struct.usb_driver* %35, %struct.usb_driver** %tmp, align 8, !dbg !8238
  %36 = load %struct.usb_driver*, %struct.usb_driver** %tmp, align 8, !dbg !8237
  store %struct.usb_driver* %36, %struct.usb_driver** %driver8, align 8, !dbg !8234
  %37 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8240
  %privileges_dropped = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %37, i32 0, i32 18, !dbg !8242
  %38 = load i8, i8* %privileges_dropped, align 1, !dbg !8242
  %tobool11 = trunc i8 %38 to i1, !dbg !8242
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !8243

if.then12:                                        ; preds = %do.end
  store i32 -13, i32* %retval, align 4, !dbg !8244
  br label %return, !dbg !8244

if.end13:                                         ; preds = %do.end
  %flags = getelementptr inbounds %struct.usbdevfs_disconnect_claim, %struct.usbdevfs_disconnect_claim* %dc, i32 0, i32 1, !dbg !8245
  %39 = load i32, i32* %flags, align 4, !dbg !8245
  %and = and i32 %39, 1, !dbg !8247
  %tobool14 = icmp ne i32 %and, 0, !dbg !8247
  br i1 %tobool14, label %land.lhs.true, label %if.end20, !dbg !8248

land.lhs.true:                                    ; preds = %if.end13
  %driver15 = getelementptr inbounds %struct.usbdevfs_disconnect_claim, %struct.usbdevfs_disconnect_claim* %dc, i32 0, i32 2, !dbg !8249
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %driver15, i64 0, i64 0, !dbg !8250
  %40 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !8251
  %dev16 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %40, i32 0, i32 7, !dbg !8252
  %driver17 = getelementptr inbounds %struct.device, %struct.device* %dev16, i32 0, i32 6, !dbg !8253
  %41 = load %struct.device_driver*, %struct.device_driver** %driver17, align 8, !dbg !8253
  %name = getelementptr inbounds %struct.device_driver, %struct.device_driver* %41, i32 0, i32 0, !dbg !8254
  %42 = load i8*, i8** %name, align 8, !dbg !8254
  %call18 = call i32 @strncmp(i8* %arraydecay, i8* %42, i64 256) #11, !dbg !8255
  %cmp = icmp ne i32 %call18, 0, !dbg !8256
  br i1 %cmp, label %if.then19, label %if.end20, !dbg !8257

if.then19:                                        ; preds = %land.lhs.true
  store i32 -16, i32* %retval, align 4, !dbg !8258
  br label %return, !dbg !8258

if.end20:                                         ; preds = %land.lhs.true, %if.end13
  %flags21 = getelementptr inbounds %struct.usbdevfs_disconnect_claim, %struct.usbdevfs_disconnect_claim* %dc, i32 0, i32 1, !dbg !8259
  %43 = load i32, i32* %flags21, align 4, !dbg !8259
  %and22 = and i32 %43, 2, !dbg !8261
  %tobool23 = icmp ne i32 %and22, 0, !dbg !8261
  br i1 %tobool23, label %land.lhs.true24, label %if.end33, !dbg !8262

land.lhs.true24:                                  ; preds = %if.end20
  %driver25 = getelementptr inbounds %struct.usbdevfs_disconnect_claim, %struct.usbdevfs_disconnect_claim* %dc, i32 0, i32 2, !dbg !8263
  %arraydecay26 = getelementptr inbounds [256 x i8], [256 x i8]* %driver25, i64 0, i64 0, !dbg !8264
  %44 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !8265
  %dev27 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %44, i32 0, i32 7, !dbg !8266
  %driver28 = getelementptr inbounds %struct.device, %struct.device* %dev27, i32 0, i32 6, !dbg !8267
  %45 = load %struct.device_driver*, %struct.device_driver** %driver28, align 8, !dbg !8267
  %name29 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %45, i32 0, i32 0, !dbg !8268
  %46 = load i8*, i8** %name29, align 8, !dbg !8268
  %call30 = call i32 @strncmp(i8* %arraydecay26, i8* %46, i64 256) #11, !dbg !8269
  %cmp31 = icmp eq i32 %call30, 0, !dbg !8270
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !8271

if.then32:                                        ; preds = %land.lhs.true24
  store i32 -16, i32* %retval, align 4, !dbg !8272
  br label %return, !dbg !8272

if.end33:                                         ; preds = %land.lhs.true24, %if.end20
  %47 = load %struct.usb_driver*, %struct.usb_driver** %driver8, align 8, !dbg !8273
  %48 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !8274
  call void @usb_driver_release_interface(%struct.usb_driver* %47, %struct.usb_interface* %48) #11, !dbg !8275
  br label %if.end34, !dbg !8276

if.end34:                                         ; preds = %if.end33, %if.end4
  %49 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8277
  %interface35 = getelementptr inbounds %struct.usbdevfs_disconnect_claim, %struct.usbdevfs_disconnect_claim* %dc, i32 0, i32 0, !dbg !8278
  %50 = load i32, i32* %interface35, align 4, !dbg !8278
  %call36 = call i32 @claimintf(%struct.usb_dev_state* %49, i32 %50) #11, !dbg !8279
  store i32 %call36, i32* %retval, align 4, !dbg !8280
  br label %return, !dbg !8280

return:                                           ; preds = %if.end34, %if.then32, %if.then19, %if.then12, %if.then3, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !8281
  ret i32 %51, !dbg !8281
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_alloc_streams(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !8282 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %num_streams = alloca i32, align 4
  %num_eps = alloca i32, align 4
  %eps = alloca %struct.usb_host_endpoint**, align 8
  %intf = alloca %struct.usb_interface*, align 8
  %r = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8285, metadata !DIExpression()), !dbg !8286
  call void @llvm.dbg.declare(metadata i32* %num_streams, metadata !8287, metadata !DIExpression()), !dbg !8288
  call void @llvm.dbg.declare(metadata i32* %num_eps, metadata !8289, metadata !DIExpression()), !dbg !8290
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint*** %eps, metadata !8291, metadata !DIExpression()), !dbg !8292
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf, metadata !8293, metadata !DIExpression()), !dbg !8294
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8295, metadata !DIExpression()), !dbg !8296
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8297
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8298
  %2 = bitcast i8* %1 to %struct.usbdevfs_streams*, !dbg !8298
  %call = call i32 @parse_usbdevfs_streams(%struct.usb_dev_state* %0, %struct.usbdevfs_streams* %2, i32* %num_streams, i32* %num_eps, %struct.usb_host_endpoint*** %eps, %struct.usb_interface** %intf) #11, !dbg !8299
  store i32 %call, i32* %r, align 4, !dbg !8300
  %3 = load i32, i32* %r, align 4, !dbg !8301
  %tobool = icmp ne i32 %3, 0, !dbg !8301
  br i1 %tobool, label %if.then, label %if.end, !dbg !8303

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %r, align 4, !dbg !8304
  store i32 %4, i32* %retval, align 4, !dbg !8305
  br label %return, !dbg !8305

if.end:                                           ; preds = %entry
  %5 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8306
  %6 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !8307
  %altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %6, i32 0, i32 0, !dbg !8308
  %7 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting, align 8, !dbg !8308
  %arrayidx = getelementptr %struct.usb_host_interface, %struct.usb_host_interface* %7, i64 0, !dbg !8307
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0, !dbg !8309
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2, !dbg !8310
  %8 = load i8, i8* %bInterfaceNumber, align 2, !dbg !8310
  %conv = zext i8 %8 to i32, !dbg !8307
  call void @destroy_async_on_interface(%struct.usb_dev_state* %5, i32 %conv) #11, !dbg !8311
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !8312
  %10 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps, align 8, !dbg !8313
  %11 = load i32, i32* %num_eps, align 4, !dbg !8314
  %12 = load i32, i32* %num_streams, align 4, !dbg !8315
  %call1 = call i32 @usb_alloc_streams(%struct.usb_interface* %9, %struct.usb_host_endpoint** %10, i32 %11, i32 %12, i32 3264) #11, !dbg !8316
  store i32 %call1, i32* %r, align 4, !dbg !8317
  %13 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps, align 8, !dbg !8318
  %14 = bitcast %struct.usb_host_endpoint** %13 to i8*, !dbg !8318
  call void @kfree(i8* %14) #11, !dbg !8319
  %15 = load i32, i32* %r, align 4, !dbg !8320
  store i32 %15, i32* %retval, align 4, !dbg !8321
  br label %return, !dbg !8321

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !8322
  ret i32 %16, !dbg !8322
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_free_streams(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !8323 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %num_eps = alloca i32, align 4
  %eps = alloca %struct.usb_host_endpoint**, align 8
  %intf = alloca %struct.usb_interface*, align 8
  %r = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !8324, metadata !DIExpression()), !dbg !8325
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8326, metadata !DIExpression()), !dbg !8327
  call void @llvm.dbg.declare(metadata i32* %num_eps, metadata !8328, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint*** %eps, metadata !8330, metadata !DIExpression()), !dbg !8331
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf, metadata !8332, metadata !DIExpression()), !dbg !8333
  call void @llvm.dbg.declare(metadata i32* %r, metadata !8334, metadata !DIExpression()), !dbg !8335
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8336
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8337
  %2 = bitcast i8* %1 to %struct.usbdevfs_streams*, !dbg !8337
  %call = call i32 @parse_usbdevfs_streams(%struct.usb_dev_state* %0, %struct.usbdevfs_streams* %2, i32* null, i32* %num_eps, %struct.usb_host_endpoint*** %eps, %struct.usb_interface** %intf) #11, !dbg !8338
  store i32 %call, i32* %r, align 4, !dbg !8339
  %3 = load i32, i32* %r, align 4, !dbg !8340
  %tobool = icmp ne i32 %3, 0, !dbg !8340
  br i1 %tobool, label %if.then, label %if.end, !dbg !8342

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %r, align 4, !dbg !8343
  store i32 %4, i32* %retval, align 4, !dbg !8344
  br label %return, !dbg !8344

if.end:                                           ; preds = %entry
  %5 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8345
  %6 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !8346
  %altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %6, i32 0, i32 0, !dbg !8347
  %7 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting, align 8, !dbg !8347
  %arrayidx = getelementptr %struct.usb_host_interface, %struct.usb_host_interface* %7, i64 0, !dbg !8346
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0, !dbg !8348
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2, !dbg !8349
  %8 = load i8, i8* %bInterfaceNumber, align 2, !dbg !8349
  %conv = zext i8 %8 to i32, !dbg !8346
  call void @destroy_async_on_interface(%struct.usb_dev_state* %5, i32 %conv) #11, !dbg !8350
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !8351
  %10 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps, align 8, !dbg !8352
  %11 = load i32, i32* %num_eps, align 4, !dbg !8353
  %call1 = call i32 @usb_free_streams(%struct.usb_interface* %9, %struct.usb_host_endpoint** %10, i32 %11, i32 3264) #11, !dbg !8354
  store i32 %call1, i32* %r, align 4, !dbg !8355
  %12 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps, align 8, !dbg !8356
  %13 = bitcast %struct.usb_host_endpoint** %12 to i8*, !dbg !8356
  call void @kfree(i8* %13) #11, !dbg !8357
  %14 = load i32, i32* %r, align 4, !dbg !8358
  store i32 %14, i32* %retval, align 4, !dbg !8359
  br label %return, !dbg !8359

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !8360
  ret i32 %15, !dbg !8360
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_drop_privileges(%struct.usb_dev_state* %ps, i8* %arg) #0 !dbg !8361 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !8362
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !8366
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !8367
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !8368
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !8369
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6977, metadata !DIExpression()), !dbg !8370
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6979, metadata !DIExpression()), !dbg !8371
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6981, metadata !DIExpression()), !dbg !8372
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %data = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !8373, metadata !DIExpression()), !dbg !8374
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8375, metadata !DIExpression()), !dbg !8376
  call void @llvm.dbg.declare(metadata i32* %data, metadata !8377, metadata !DIExpression()), !dbg !8378
  %0 = bitcast i32* %data to i8*, !dbg !8379
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !8380
  store i8* %0, i8** %to.addr.i, align 8
  store i8* %1, i8** %from.addr.i, align 8
  store i64 4, i64* %n.addr.i, align 8
  %2 = load i8*, i8** %to.addr.i, align 8, !dbg !8381
  %3 = load i64, i64* %n.addr.i, align 8, !dbg !8381
  store i8* %2, i8** %addr.addr.i.i, align 8
  store i64 %3, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8368
  %4 = load i32, i32* %sz.i.i, align 4, !dbg !8382
  %cmp.i.i = icmp sge i32 %4, 0, !dbg !8382
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8382

land.rhs.i.i:                                     ; preds = %entry
  %5 = load i32, i32* %sz.i.i, align 4, !dbg !8382
  %conv.i.i = sext i32 %5 to i64, !dbg !8382
  %6 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8382
  %cmp1.i.i = icmp ult i64 %conv.i.i, %6, !dbg !8382
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %7 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8383
  %lnot.i.i = xor i1 %7, true, !dbg !8382
  %lnot.ext.i.i = zext i1 %7 to i32, !dbg !8382
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8382
  br i1 %7, label %if.then.i.i, label %if.end10.i.i, !dbg !8384

if.then.i.i:                                      ; preds = %land.end.i.i
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8385
  %9 = call i1 @llvm.is.constant.i64(i64 %8) #7, !dbg !8386
  br i1 %9, label %if.else.i.i, label %if.then5.i.i, !dbg !8387

if.then5.i.i:                                     ; preds = %if.then.i.i
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !8388
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8389
  call void @copy_overflow(i32 %10, i64 %11) #13, !dbg !8390
  br label %if.end9.i.i, !dbg !8390

if.else.i.i:                                      ; preds = %if.then.i.i
  %12 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8391
  %tobool6.i.i = trunc i8 %12 to i1, !dbg !8391
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8392

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !8393
  br label %if.end.i.i, !dbg !8393

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !8394
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8395
  br label %check_copy_size.exit.i, !dbg !8395

if.end10.i.i:                                     ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8369
  %cmp11.i.i = icmp ugt i64 %13, 2147483647, !dbg !8369
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8369
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8369
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8369
  %14 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8396
  %tobool17.i.i = icmp ne i32 %14, 0, !dbg !8396
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8396
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8396
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8396
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8369

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !8397, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !8398, !srcloc !5212
  br label %if.end31.i.i, !dbg !8399

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %15 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8369
  %tobool32.i.i = icmp ne i32 %15, 0, !dbg !8369
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8369
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8369
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8369
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8396
  %16 = load i64, i64* %tmp.i.i, align 8, !dbg !8369
  %tobool38.i.i = icmp ne i64 %16, 0, !dbg !8400
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8401

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8402
  br label %check_copy_size.exit.i, !dbg !8402

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %17 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8403
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8404
  %19 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8405
  %tobool41.i.i = trunc i8 %19 to i1, !dbg !8405
  call void @check_object_size(i8* %17, i64 %18, i1 zeroext %tobool41.i.i) #13, !dbg !8406
  store i1 true, i1* %retval.i.i, align 1, !dbg !8407
  br label %check_copy_size.exit.i, !dbg !8407

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %20 = load i1, i1* %retval.i.i, align 1, !dbg !8408
  %lnot.i = xor i1 %20, true, !dbg !8381
  %lnot.ext.i = zext i1 %20 to i32, !dbg !8381
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8381
  br i1 %20, label %if.then.i, label %copy_from_user.exit, !dbg !8409

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %21 = load i8*, i8** %to.addr.i, align 8, !dbg !8410
  %22 = load i8*, i8** %from.addr.i, align 8, !dbg !8411
  %23 = load i64, i64* %n.addr.i, align 8, !dbg !8412
  %call2.i = call i64 @_copy_from_user(i8* %21, i8* %22, i64 %23) #13, !dbg !8413
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8414
  br label %copy_from_user.exit, !dbg !8415

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %24 = load i64, i64* %n.addr.i, align 8, !dbg !8416
  %tobool = icmp ne i64 %24, 0, !dbg !8417
  br i1 %tobool, label %if.then, label %if.end, !dbg !8418

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8419
  br label %return, !dbg !8419

if.end:                                           ; preds = %copy_from_user.exit
  %25 = load i32, i32* %data, align 4, !dbg !8420
  %conv = zext i32 %25 to i64, !dbg !8420
  %26 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8421
  %interface_allowed_mask = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %26, i32 0, i32 15, !dbg !8422
  %27 = load i64, i64* %interface_allowed_mask, align 8, !dbg !8423
  %and = and i64 %27, %conv, !dbg !8423
  store i64 %and, i64* %interface_allowed_mask, align 8, !dbg !8423
  %28 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8424
  %privileges_dropped = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %28, i32 0, i32 18, !dbg !8425
  store i8 1, i8* %privileges_dropped, align 1, !dbg !8426
  store i32 0, i32* %retval, align 4, !dbg !8427
  br label %return, !dbg !8427

return:                                           ; preds = %if.end, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !8428
  ret i32 %29, !dbg !8428
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_forbid_suspend(%struct.usb_dev_state* %ps) #0 !dbg !8429 {
entry:
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %ret = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !8430, metadata !DIExpression()), !dbg !8431
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8432, metadata !DIExpression()), !dbg !8433
  store i32 0, i32* %ret, align 4, !dbg !8433
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8434
  %suspend_allowed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 17, !dbg !8436
  %1 = load i8, i8* %suspend_allowed, align 4, !dbg !8436
  %tobool = trunc i8 %1 to i1, !dbg !8436
  br i1 %tobool, label %if.then, label %if.end6, !dbg !8437

if.then:                                          ; preds = %entry
  %2 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8438
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %2, i32 0, i32 1, !dbg !8440
  %3 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !8440
  %call = call i32 @usb_autoresume_device(%struct.usb_device* %3) #11, !dbg !8441
  store i32 %call, i32* %ret, align 4, !dbg !8442
  %4 = load i32, i32* %ret, align 4, !dbg !8443
  %cmp = icmp eq i32 %4, 0, !dbg !8445
  br i1 %cmp, label %if.then1, label %if.else, !dbg !8446

if.then1:                                         ; preds = %if.then
  %5 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8447
  %suspend_allowed2 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 17, !dbg !8448
  store i8 0, i8* %suspend_allowed2, align 4, !dbg !8449
  br label %if.end5, !dbg !8447

if.else:                                          ; preds = %if.then
  %6 = load i32, i32* %ret, align 4, !dbg !8450
  %cmp3 = icmp ne i32 %6, -19, !dbg !8452
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !8453

if.then4:                                         ; preds = %if.else
  store i32 -5, i32* %ret, align 4, !dbg !8454
  br label %if.end, !dbg !8455

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then1
  br label %if.end6, !dbg !8456

if.end6:                                          ; preds = %if.end5, %entry
  %7 = load i32, i32* %ret, align 4, !dbg !8457
  ret i32 %7, !dbg !8458
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_allow_suspend(%struct.usb_dev_state* %ps) #0 !dbg !8459 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !8460, metadata !DIExpression()), !dbg !8461
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8462
  %call = call i32 @connected(%struct.usb_dev_state* %0) #11, !dbg !8464
  %tobool = icmp ne i32 %call, 0, !dbg !8464
  br i1 %tobool, label %if.end, label %if.then, !dbg !8465

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !8466
  br label %return, !dbg !8466

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !8467

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !8468

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !8470

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !8468

do.body2:                                         ; preds = %do.end
  %1 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8472
  %not_yet_resumed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %1, i32 0, i32 16, !dbg !8472
  store volatile i32 1, i32* %not_yet_resumed, align 8, !dbg !8472
  br label %do.end3, !dbg !8472

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !8468

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8474
  %suspend_allowed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %2, i32 0, i32 17, !dbg !8476
  %3 = load i8, i8* %suspend_allowed, align 4, !dbg !8476
  %tobool5 = trunc i8 %3 to i1, !dbg !8476
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !8477

if.then6:                                         ; preds = %do.end4
  %4 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8478
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %4, i32 0, i32 1, !dbg !8480
  %5 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !8480
  call void @usb_autosuspend_device(%struct.usb_device* %5) #11, !dbg !8481
  %6 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8482
  %suspend_allowed7 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 17, !dbg !8483
  store i8 1, i8* %suspend_allowed7, align 4, !dbg !8484
  br label %if.end8, !dbg !8485

if.end8:                                          ; preds = %if.then6, %do.end4
  store i32 0, i32* %retval, align 4, !dbg !8486
  br label %return, !dbg !8486

return:                                           ; preds = %if.end8, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !8487
  ret i32 %7, !dbg !8487
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_wait_for_resume(%struct.usb_dev_state* %ps) #0 !dbg !8488 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %ret = alloca i32, align 4
  %__ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret6 = alloca i64, align 8
  %__int = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %tmp16 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !8489, metadata !DIExpression()), !dbg !8490
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8491, metadata !DIExpression()), !dbg !8492
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8493
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1, !dbg !8493
  %1 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !8493
  %dev1 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 14, !dbg !8493
  call void @device_unlock(%struct.device* %dev1) #11, !dbg !8493
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !8494, metadata !DIExpression()), !dbg !8496
  store i32 0, i32* %__ret, align 4, !dbg !8496
  br label %do.body, !dbg !8496

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !8497

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !8499

do.end:                                           ; preds = %do.body2
  br label %do.end3, !dbg !8497

do.end3:                                          ; preds = %do.end
  br label %do.body4, !dbg !8501

do.body4:                                         ; preds = %do.end3
  br label %do.end5, !dbg !8504

do.end5:                                          ; preds = %do.body4
  %2 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8501
  %not_yet_resumed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %2, i32 0, i32 16, !dbg !8501
  %3 = load volatile i32, i32* %not_yet_resumed, align 8, !dbg !8501
  store i32 %3, i32* %tmp, align 4, !dbg !8504
  %4 = load i32, i32* %tmp, align 4, !dbg !8501
  %cmp = icmp eq i32 %4, 0, !dbg !8506
  br i1 %cmp, label %if.end17, label %if.then, !dbg !8496

if.then:                                          ; preds = %do.end5
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !8507, metadata !DIExpression()), !dbg !8520
  call void @llvm.dbg.declare(metadata i64* %__ret6, metadata !8521, metadata !DIExpression()), !dbg !8520
  store i64 0, i64* %__ret6, align 8, !dbg !8520
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #11, !dbg !8520
  br label %for.cond, !dbg !8520

for.cond:                                         ; preds = %if.end14, %if.then
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !8522, metadata !DIExpression()), !dbg !8526
  %5 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8526
  %wait_for_resume = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 8, !dbg !8526
  %call = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %wait_for_resume, %struct.wait_queue_entry* %__wq_entry, i32 1) #11, !dbg !8526
  store i64 %call, i64* %__int, align 8, !dbg !8526
  br label %do.body7, !dbg !8527

do.body7:                                         ; preds = %for.cond
  br label %do.end8, !dbg !8530

do.end8:                                          ; preds = %do.body7
  %6 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8527
  %not_yet_resumed10 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 16, !dbg !8527
  %7 = load volatile i32, i32* %not_yet_resumed10, align 8, !dbg !8527
  store i32 %7, i32* %tmp9, align 4, !dbg !8530
  %8 = load i32, i32* %tmp9, align 4, !dbg !8527
  %cmp11 = icmp eq i32 %8, 0, !dbg !8532
  br i1 %cmp11, label %if.then12, label %if.end, !dbg !8526

if.then12:                                        ; preds = %do.end8
  br label %for.end, !dbg !8532

if.end:                                           ; preds = %do.end8
  %9 = load i64, i64* %__int, align 8, !dbg !8533
  %tobool = icmp ne i64 %9, 0, !dbg !8533
  br i1 %tobool, label %if.then13, label %if.end14, !dbg !8526

if.then13:                                        ; preds = %if.end
  %10 = load i64, i64* %__int, align 8, !dbg !8535
  store i64 %10, i64* %__ret6, align 8, !dbg !8535
  br label %__out, !dbg !8535

if.end14:                                         ; preds = %if.end
  call void @schedule() #11, !dbg !8526
  br label %for.cond, !dbg !8537, !llvm.loop !8538

for.end:                                          ; preds = %if.then12
  %11 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8520
  %wait_for_resume15 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %11, i32 0, i32 8, !dbg !8520
  call void @finish_wait(%struct.wait_queue_head* %wait_for_resume15, %struct.wait_queue_entry* %__wq_entry) #11, !dbg !8520
  br label %__out, !dbg !8520

__out:                                            ; preds = %for.end, %if.then13
  call void @llvm.dbg.label(metadata !8540), !dbg !8520
  %12 = load i64, i64* %__ret6, align 8, !dbg !8520
  store i64 %12, i64* %tmp16, align 8, !dbg !8520
  %13 = load i64, i64* %tmp16, align 8, !dbg !8520
  %conv = trunc i64 %13 to i32, !dbg !8506
  store i32 %conv, i32* %__ret, align 4, !dbg !8506
  br label %if.end17, !dbg !8506

if.end17:                                         ; preds = %__out, %do.end5
  %14 = load i32, i32* %__ret, align 4, !dbg !8496
  store i32 %14, i32* %tmp18, align 4, !dbg !8506
  %15 = load i32, i32* %tmp18, align 4, !dbg !8496
  store i32 %15, i32* %ret, align 4, !dbg !8541
  %16 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8542
  %dev19 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %16, i32 0, i32 1, !dbg !8542
  %17 = load %struct.usb_device*, %struct.usb_device** %dev19, align 8, !dbg !8542
  %dev20 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %17, i32 0, i32 14, !dbg !8542
  call void @device_lock(%struct.device* %dev20) #11, !dbg !8542
  %18 = load i32, i32* %ret, align 4, !dbg !8543
  %cmp21 = icmp ne i32 %18, 0, !dbg !8545
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !8546

if.then23:                                        ; preds = %if.end17
  store i32 -4, i32* %retval, align 4, !dbg !8547
  br label %return, !dbg !8547

if.end24:                                         ; preds = %if.end17
  %19 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8548
  %call25 = call i32 @proc_forbid_suspend(%struct.usb_dev_state* %19) #11, !dbg !8549
  store i32 %call25, i32* %retval, align 4, !dbg !8550
  br label %return, !dbg !8550

return:                                           ; preds = %if.end24, %if.then23
  %20 = load i32, i32* %retval, align 4, !dbg !8551
  ret i32 %20, !dbg !8551
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_conninfo_ex(%struct.usb_dev_state* %ps, i8* %arg, i64 %size) #0 !dbg !8552 {
entry:
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !8555
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !8559
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !8560
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !8561
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !8562
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5087, metadata !DIExpression()), !dbg !8563
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5089, metadata !DIExpression()), !dbg !8564
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5091, metadata !DIExpression()), !dbg !8565
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %arg.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %ci = alloca %struct.usbdevfs_conninfo_ex, align 4
  %udev = alloca %struct.usb_device*, align 8
  %__UNIQUE_ID___x283 = alloca i64, align 8
  %__UNIQUE_ID___y284 = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !8566, metadata !DIExpression()), !dbg !8567
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !8568, metadata !DIExpression()), !dbg !8569
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8570, metadata !DIExpression()), !dbg !8571
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_conninfo_ex* %ci, metadata !8572, metadata !DIExpression()), !dbg !8584
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !8585, metadata !DIExpression()), !dbg !8586
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8587
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1, !dbg !8588
  %1 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !8588
  store %struct.usb_device* %1, %struct.usb_device** %udev, align 8, !dbg !8586
  %2 = load i64, i64* %size.addr, align 8, !dbg !8589
  %cmp = icmp ult i64 %2, 4, !dbg !8591
  br i1 %cmp, label %if.then, label %if.end, !dbg !8592

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8593
  br label %return, !dbg !8593

if.end:                                           ; preds = %entry
  %3 = bitcast %struct.usbdevfs_conninfo_ex* %ci to i8*, !dbg !8594
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 24, i1 false), !dbg !8594
  %size1 = getelementptr inbounds %struct.usbdevfs_conninfo_ex, %struct.usbdevfs_conninfo_ex* %ci, i32 0, i32 0, !dbg !8595
  store i32 24, i32* %size1, align 4, !dbg !8596
  %4 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8597
  %bus = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 12, !dbg !8598
  %5 = load %struct.usb_bus*, %struct.usb_bus** %bus, align 8, !dbg !8598
  %busnum = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %5, i32 0, i32 2, !dbg !8599
  %6 = load i32, i32* %busnum, align 8, !dbg !8599
  %busnum2 = getelementptr inbounds %struct.usbdevfs_conninfo_ex, %struct.usbdevfs_conninfo_ex* %ci, i32 0, i32 1, !dbg !8600
  store i32 %6, i32* %busnum2, align 4, !dbg !8601
  %7 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8602
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 0, !dbg !8603
  %8 = load i32, i32* %devnum, align 8, !dbg !8603
  %devnum3 = getelementptr inbounds %struct.usbdevfs_conninfo_ex, %struct.usbdevfs_conninfo_ex* %ci, i32 0, i32 2, !dbg !8604
  store i32 %8, i32* %devnum3, align 4, !dbg !8605
  %9 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8606
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %9, i32 0, i32 4, !dbg !8607
  %10 = load i32, i32* %speed, align 4, !dbg !8607
  %speed4 = getelementptr inbounds %struct.usbdevfs_conninfo_ex, %struct.usbdevfs_conninfo_ex* %ci, i32 0, i32 3, !dbg !8608
  store i32 %10, i32* %speed4, align 4, !dbg !8609
  br label %while.cond, !dbg !8610

while.cond:                                       ; preds = %if.end14, %if.end
  %11 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8611
  %tobool = icmp ne %struct.usb_device* %11, null, !dbg !8611
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8612

land.rhs:                                         ; preds = %while.cond
  %12 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8613
  %portnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 24, !dbg !8614
  %13 = load i8, i8* %portnum, align 2, !dbg !8614
  %conv = zext i8 %13 to i32, !dbg !8613
  %cmp5 = icmp ne i32 %conv, 0, !dbg !8615
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %cmp5, %land.rhs ], !dbg !8616
  br i1 %14, label %while.body, label %while.end, !dbg !8610

while.body:                                       ; preds = %land.end
  %num_ports = getelementptr inbounds %struct.usbdevfs_conninfo_ex, %struct.usbdevfs_conninfo_ex* %ci, i32 0, i32 4, !dbg !8617
  %15 = load i8, i8* %num_ports, align 4, !dbg !8620
  %inc = add i8 %15, 1, !dbg !8620
  store i8 %inc, i8* %num_ports, align 4, !dbg !8620
  %conv7 = zext i8 %inc to i64, !dbg !8620
  %cmp8 = icmp ule i64 %conv7, 7, !dbg !8621
  br i1 %cmp8, label %if.then10, label %if.end14, !dbg !8622

if.then10:                                        ; preds = %while.body
  %16 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8623
  %portnum11 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %16, i32 0, i32 24, !dbg !8624
  %17 = load i8, i8* %portnum11, align 2, !dbg !8624
  %ports = getelementptr inbounds %struct.usbdevfs_conninfo_ex, %struct.usbdevfs_conninfo_ex* %ci, i32 0, i32 5, !dbg !8625
  %num_ports12 = getelementptr inbounds %struct.usbdevfs_conninfo_ex, %struct.usbdevfs_conninfo_ex* %ci, i32 0, i32 4, !dbg !8626
  %18 = load i8, i8* %num_ports12, align 4, !dbg !8626
  %conv13 = zext i8 %18 to i64, !dbg !8627
  %sub = sub i64 7, %conv13, !dbg !8628
  %arrayidx = getelementptr [7 x i8], [7 x i8]* %ports, i64 0, i64 %sub, !dbg !8629
  store i8 %17, i8* %arrayidx, align 1, !dbg !8630
  br label %if.end14, !dbg !8629

if.end14:                                         ; preds = %if.then10, %while.body
  %19 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !8631
  %parent = getelementptr inbounds %struct.usb_device, %struct.usb_device* %19, i32 0, i32 11, !dbg !8632
  %20 = load %struct.usb_device*, %struct.usb_device** %parent, align 8, !dbg !8632
  store %struct.usb_device* %20, %struct.usb_device** %udev, align 8, !dbg !8633
  br label %while.cond, !dbg !8610, !llvm.loop !8634

while.end:                                        ; preds = %land.end
  %num_ports15 = getelementptr inbounds %struct.usbdevfs_conninfo_ex, %struct.usbdevfs_conninfo_ex* %ci, i32 0, i32 4, !dbg !8636
  %21 = load i8, i8* %num_ports15, align 4, !dbg !8636
  %conv16 = zext i8 %21 to i64, !dbg !8638
  %cmp17 = icmp ult i64 %conv16, 7, !dbg !8639
  br i1 %cmp17, label %if.then19, label %if.end29, !dbg !8640

if.then19:                                        ; preds = %while.end
  %ports20 = getelementptr inbounds %struct.usbdevfs_conninfo_ex, %struct.usbdevfs_conninfo_ex* %ci, i32 0, i32 5, !dbg !8641
  %arrayidx21 = getelementptr [7 x i8], [7 x i8]* %ports20, i64 0, i64 0, !dbg !8642
  %ports22 = getelementptr inbounds %struct.usbdevfs_conninfo_ex, %struct.usbdevfs_conninfo_ex* %ci, i32 0, i32 5, !dbg !8643
  %num_ports23 = getelementptr inbounds %struct.usbdevfs_conninfo_ex, %struct.usbdevfs_conninfo_ex* %ci, i32 0, i32 4, !dbg !8644
  %22 = load i8, i8* %num_ports23, align 4, !dbg !8644
  %conv24 = zext i8 %22 to i64, !dbg !8645
  %sub25 = sub i64 7, %conv24, !dbg !8646
  %arrayidx26 = getelementptr [7 x i8], [7 x i8]* %ports22, i64 0, i64 %sub25, !dbg !8647
  %num_ports27 = getelementptr inbounds %struct.usbdevfs_conninfo_ex, %struct.usbdevfs_conninfo_ex* %ci, i32 0, i32 4, !dbg !8648
  %23 = load i8, i8* %num_ports27, align 4, !dbg !8648
  %conv28 = zext i8 %23 to i64, !dbg !8649
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %arrayidx21, i8* align 1 %arrayidx26, i64 %conv28, i1 false), !dbg !8650
  br label %if.end29, !dbg !8650

if.end29:                                         ; preds = %if.then19, %while.end
  %24 = load i8*, i8** %arg.addr, align 8, !dbg !8651
  %25 = bitcast %struct.usbdevfs_conninfo_ex* %ci to i8*, !dbg !8652
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x283, metadata !8653, metadata !DIExpression()), !dbg !8655
  store i64 24, i64* %__UNIQUE_ID___x283, align 8, !dbg !8655
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y284, metadata !8656, metadata !DIExpression()), !dbg !8655
  %26 = load i64, i64* %size.addr, align 8, !dbg !8655
  store i64 %26, i64* %__UNIQUE_ID___y284, align 8, !dbg !8655
  %27 = load i64, i64* %__UNIQUE_ID___x283, align 8, !dbg !8655
  %28 = load i64, i64* %__UNIQUE_ID___y284, align 8, !dbg !8655
  %cmp30 = icmp ult i64 %27, %28, !dbg !8655
  br i1 %cmp30, label %cond.true, label %cond.false, !dbg !8655

cond.true:                                        ; preds = %if.end29
  %29 = load i64, i64* %__UNIQUE_ID___x283, align 8, !dbg !8655
  br label %cond.end, !dbg !8655

cond.false:                                       ; preds = %if.end29
  %30 = load i64, i64* %__UNIQUE_ID___y284, align 8, !dbg !8655
  br label %cond.end, !dbg !8655

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %29, %cond.true ], [ %30, %cond.false ], !dbg !8655
  store i64 %cond, i64* %tmp, align 8, !dbg !8655
  %31 = load i64, i64* %tmp, align 8, !dbg !8655
  store i8* %24, i8** %to.addr.i, align 8
  store i8* %25, i8** %from.addr.i, align 8
  store i64 %31, i64* %n.addr.i, align 8
  %32 = load i8*, i8** %from.addr.i, align 8, !dbg !8657
  %33 = load i64, i64* %n.addr.i, align 8, !dbg !8657
  store i8* %32, i8** %addr.addr.i.i, align 8
  store i64 %33, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8561
  %34 = load i32, i32* %sz.i.i, align 4, !dbg !8658
  %cmp.i.i = icmp sge i32 %34, 0, !dbg !8658
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !8658

land.rhs.i.i:                                     ; preds = %cond.end
  %35 = load i32, i32* %sz.i.i, align 4, !dbg !8658
  %conv.i.i = sext i32 %35 to i64, !dbg !8658
  %36 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8658
  %cmp1.i.i = icmp ult i64 %conv.i.i, %36, !dbg !8658
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %cond.end
  %37 = phi i1 [ false, %cond.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !8659
  %lnot.i.i = xor i1 %37, true, !dbg !8658
  %lnot.ext.i.i = zext i1 %37 to i32, !dbg !8658
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8658
  br i1 %37, label %if.then.i.i, label %if.end10.i.i, !dbg !8660

if.then.i.i:                                      ; preds = %land.end.i.i
  %38 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8661
  %39 = call i1 @llvm.is.constant.i64(i64 %38) #7, !dbg !8662
  br i1 %39, label %if.else.i.i, label %if.then5.i.i, !dbg !8663

if.then5.i.i:                                     ; preds = %if.then.i.i
  %40 = load i32, i32* %sz.i.i, align 4, !dbg !8664
  %41 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8665
  call void @copy_overflow(i32 %40, i64 %41) #13, !dbg !8666
  br label %if.end9.i.i, !dbg !8666

if.else.i.i:                                      ; preds = %if.then.i.i
  %42 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8667
  %tobool6.i.i = trunc i8 %42 to i1, !dbg !8667
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !8668

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !8669
  br label %if.end.i.i, !dbg !8669

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !8670
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8671
  br label %check_copy_size.exit.i, !dbg !8671

if.end10.i.i:                                     ; preds = %land.end.i.i
  %43 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8562
  %cmp11.i.i = icmp ugt i64 %43, 2147483647, !dbg !8562
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8562
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8562
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8562
  %44 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8672
  %tobool17.i.i = icmp ne i32 %44, 0, !dbg !8672
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !8672
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !8672
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !8672
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8562

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !8673, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !8674, !srcloc !5212
  br label %if.end31.i.i, !dbg !8675

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %45 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8562
  %tobool32.i.i = icmp ne i32 %45, 0, !dbg !8562
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8562
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8562
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8562
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !8672
  %46 = load i64, i64* %tmp.i.i, align 8, !dbg !8562
  %tobool38.i.i = icmp ne i64 %46, 0, !dbg !8676
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !8677

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !8678
  br label %check_copy_size.exit.i, !dbg !8678

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %47 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !8679
  %48 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8680
  %49 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !8681
  %tobool41.i.i = trunc i8 %49 to i1, !dbg !8681
  call void @check_object_size(i8* %47, i64 %48, i1 zeroext %tobool41.i.i) #13, !dbg !8682
  store i1 true, i1* %retval.i.i, align 1, !dbg !8683
  br label %check_copy_size.exit.i, !dbg !8683

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %50 = load i1, i1* %retval.i.i, align 1, !dbg !8684
  %lnot.i = xor i1 %50, true, !dbg !8657
  %lnot.ext.i = zext i1 %50 to i32, !dbg !8657
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !8657
  br i1 %50, label %if.then.i, label %copy_to_user.exit, !dbg !8685

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %51 = load i8*, i8** %to.addr.i, align 8, !dbg !8686
  %52 = load i8*, i8** %from.addr.i, align 8, !dbg !8687
  %53 = load i64, i64* %n.addr.i, align 8, !dbg !8688
  %call2.i = call i64 @_copy_to_user(i8* %51, i8* %52, i64 %53) #13, !dbg !8689
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !8690
  br label %copy_to_user.exit, !dbg !8691

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %54 = load i64, i64* %n.addr.i, align 8, !dbg !8692
  %tobool32 = icmp ne i64 %54, 0, !dbg !8693
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !8694

if.then33:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !8695
  br label %return, !dbg !8695

if.end34:                                         ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !8696
  br label %return, !dbg !8696

return:                                           ; preds = %if.end34, %if.then33, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !8697
  ret i32 %55, !dbg !8697
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.async* @reap_as(%struct.usb_dev_state* %ps) #0 !dbg !8698 {
entry:
  %pscr_ret__.i34 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i34, metadata !5665, metadata !DIExpression()), !dbg !8701
  %__vpp_verify.i35 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i35, metadata !5675, metadata !DIExpression()), !dbg !8706
  %pfo_val__.i36 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i36, metadata !5678, metadata !DIExpression()), !dbg !8707
  %tmp.i37 = alloca %struct.task_struct*, align 8
  %tmp1.i38 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i29 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i29, metadata !5665, metadata !DIExpression()), !dbg !8708
  %__vpp_verify.i30 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i30, metadata !5675, metadata !DIExpression()), !dbg !8714
  %pfo_val__.i31 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i31, metadata !5678, metadata !DIExpression()), !dbg !8715
  %tmp.i32 = alloca %struct.task_struct*, align 8
  %tmp1.i33 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i24 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i24, metadata !5665, metadata !DIExpression()), !dbg !8716
  %__vpp_verify.i25 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i25, metadata !5675, metadata !DIExpression()), !dbg !8718
  %pfo_val__.i26 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i26, metadata !5678, metadata !DIExpression()), !dbg !8719
  %tmp.i27 = alloca %struct.task_struct*, align 8
  %tmp1.i28 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5665, metadata !DIExpression()), !dbg !8720
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !5675, metadata !DIExpression()), !dbg !8722
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !5678, metadata !DIExpression()), !dbg !8723
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %wait = alloca %struct.wait_queue_entry, align 8
  %as = alloca %struct.async*, align 8
  %dev = alloca %struct.usb_device*, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !8724, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %wait, metadata !8726, metadata !DIExpression()), !dbg !8727
  %flags = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 0, !dbg !8727
  store i32 0, i32* %flags, align 8, !dbg !8727
  %private = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 1, !dbg !8727
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !8722
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !8722
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !8723, !srcloc !5776
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !8723
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !8723
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !8723
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !8723
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !8723
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !8720
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !8720
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !8720
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !8720
  %7 = bitcast %struct.task_struct* %6 to i8*, !dbg !8727
  store i8* %7, i8** %private, align 8, !dbg !8727
  %func = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 2, !dbg !8727
  store i32 (%struct.wait_queue_entry*, i32, i32, i8*)* @default_wake_function, i32 (%struct.wait_queue_entry*, i32, i32, i8*)** %func, align 8, !dbg !8727
  %entry1 = getelementptr inbounds %struct.wait_queue_entry, %struct.wait_queue_entry* %wait, i32 0, i32 3, !dbg !8727
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 0, !dbg !8727
  store %struct.list_head* null, %struct.list_head** %next, align 8, !dbg !8727
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 1, !dbg !8727
  store %struct.list_head* null, %struct.list_head** %prev, align 8, !dbg !8727
  call void @llvm.dbg.declare(metadata %struct.async** %as, metadata !8728, metadata !DIExpression()), !dbg !8729
  store %struct.async* null, %struct.async** %as, align 8, !dbg !8729
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev, metadata !8730, metadata !DIExpression()), !dbg !8731
  %8 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8732
  %dev2 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 1, !dbg !8733
  %9 = load %struct.usb_device*, %struct.usb_device** %dev2, align 8, !dbg !8733
  store %struct.usb_device* %9, %struct.usb_device** %dev, align 8, !dbg !8731
  %10 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8734
  %wait3 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %10, i32 0, i32 7, !dbg !8735
  call void @add_wait_queue(%struct.wait_queue_head* %wait3, %struct.wait_queue_entry* %wait) #11, !dbg !8736
  br label %for.cond, !dbg !8737

for.cond:                                         ; preds = %if.end12, %entry
  store i8* null, i8** %__vpp_verify.i25, align 8, !dbg !8718
  %11 = load i8*, i8** %__vpp_verify.i25, align 8, !dbg !8718
  %12 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !8719, !srcloc !5776
  store i64 %12, i64* %pfo_val__.i26, align 8, !dbg !8719
  %13 = load i64, i64* %pfo_val__.i26, align 8, !dbg !8719
  %14 = inttoptr i64 %13 to %struct.task_struct*, !dbg !8719
  store %struct.task_struct* %14, %struct.task_struct** %tmp.i27, align 8, !dbg !8719
  %15 = load %struct.task_struct*, %struct.task_struct** %tmp.i27, align 8, !dbg !8719
  store %struct.task_struct* %15, %struct.task_struct** %pscr_ret__.i24, align 8, !dbg !8716
  %16 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i24, align 8, !dbg !8716
  store %struct.task_struct* %16, %struct.task_struct** %tmp1.i28, align 8, !dbg !8716
  %17 = load %struct.task_struct*, %struct.task_struct** %tmp1.i28, align 8, !dbg !8716
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %17, i32 0, i32 1, !dbg !8738
  store volatile i64 1, i64* %state, align 16, !dbg !8738
  %18 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8739
  %call5 = call %struct.async* @async_getcompleted(%struct.usb_dev_state* %18) #11, !dbg !8740
  store %struct.async* %call5, %struct.async** %as, align 8, !dbg !8741
  %19 = load %struct.async*, %struct.async** %as, align 8, !dbg !8742
  %tobool = icmp ne %struct.async* %19, null, !dbg !8742
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !8744

lor.lhs.false:                                    ; preds = %for.cond
  %20 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8745
  %call6 = call i32 @connected(%struct.usb_dev_state* %20) #11, !dbg !8746
  %tobool7 = icmp ne i32 %call6, 0, !dbg !8746
  br i1 %tobool7, label %if.end, label %if.then, !dbg !8747

if.then:                                          ; preds = %lor.lhs.false, %for.cond
  br label %for.end, !dbg !8748

if.end:                                           ; preds = %lor.lhs.false
  store i8* null, i8** %__vpp_verify.i30, align 8, !dbg !8714
  %21 = load i8*, i8** %__vpp_verify.i30, align 8, !dbg !8714
  %22 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !8715, !srcloc !5776
  store i64 %22, i64* %pfo_val__.i31, align 8, !dbg !8715
  %23 = load i64, i64* %pfo_val__.i31, align 8, !dbg !8715
  %24 = inttoptr i64 %23 to %struct.task_struct*, !dbg !8715
  store %struct.task_struct* %24, %struct.task_struct** %tmp.i32, align 8, !dbg !8715
  %25 = load %struct.task_struct*, %struct.task_struct** %tmp.i32, align 8, !dbg !8715
  store %struct.task_struct* %25, %struct.task_struct** %pscr_ret__.i29, align 8, !dbg !8708
  %26 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i29, align 8, !dbg !8708
  store %struct.task_struct* %26, %struct.task_struct** %tmp1.i33, align 8, !dbg !8708
  %27 = load %struct.task_struct*, %struct.task_struct** %tmp1.i33, align 8, !dbg !8708
  %call9 = call i32 @signal_pending(%struct.task_struct* %27) #11, !dbg !8749
  %tobool10 = icmp ne i32 %call9, 0, !dbg !8749
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !8750

if.then11:                                        ; preds = %if.end
  br label %for.end, !dbg !8751

if.end12:                                         ; preds = %if.end
  %28 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !8752
  %dev13 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %28, i32 0, i32 14, !dbg !8752
  call void @device_unlock(%struct.device* %dev13) #11, !dbg !8752
  call void @schedule() #11, !dbg !8753
  %29 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !8754
  %dev14 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %29, i32 0, i32 14, !dbg !8754
  call void @device_lock(%struct.device* %dev14) #11, !dbg !8754
  br label %for.cond, !dbg !8755, !llvm.loop !8756

for.end:                                          ; preds = %if.then11, %if.then
  %30 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !8759
  %wait15 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %30, i32 0, i32 7, !dbg !8760
  call void @remove_wait_queue(%struct.wait_queue_head* %wait15, %struct.wait_queue_entry* %wait) #11, !dbg !8761
  br label %do.body, !dbg !8762

do.body:                                          ; preds = %for.end
  br label %do.body16, !dbg !8763

do.body16:                                        ; preds = %do.body
  br label %do.body17, !dbg !8764

do.body17:                                        ; preds = %do.body16
  br label %do.end, !dbg !8765

do.end:                                           ; preds = %do.body17
  br label %do.body18, !dbg !8764

do.body18:                                        ; preds = %do.end
  store i8* null, i8** %__vpp_verify.i35, align 8, !dbg !8706
  %31 = load i8*, i8** %__vpp_verify.i35, align 8, !dbg !8706
  %32 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !8707, !srcloc !5776
  store i64 %32, i64* %pfo_val__.i36, align 8, !dbg !8707
  %33 = load i64, i64* %pfo_val__.i36, align 8, !dbg !8707
  %34 = inttoptr i64 %33 to %struct.task_struct*, !dbg !8707
  store %struct.task_struct* %34, %struct.task_struct** %tmp.i37, align 8, !dbg !8707
  %35 = load %struct.task_struct*, %struct.task_struct** %tmp.i37, align 8, !dbg !8707
  store %struct.task_struct* %35, %struct.task_struct** %pscr_ret__.i34, align 8, !dbg !8701
  %36 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i34, align 8, !dbg !8701
  store %struct.task_struct* %36, %struct.task_struct** %tmp1.i38, align 8, !dbg !8701
  %37 = load %struct.task_struct*, %struct.task_struct** %tmp1.i38, align 8, !dbg !8701
  %state20 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %37, i32 0, i32 1, !dbg !8767
  store volatile i64 0, i64* %state20, align 16, !dbg !8767
  br label %do.end21, !dbg !8767

do.end21:                                         ; preds = %do.body18
  br label %do.end22, !dbg !8764

do.end22:                                         ; preds = %do.end21
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8763, !srcloc !8768
  br label %do.end23, !dbg !8763

do.end23:                                         ; preds = %do.end22
  %38 = load %struct.async*, %struct.async** %as, align 8, !dbg !8769
  ret %struct.async* %38, !dbg !8770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @processcompl(%struct.async* %as, i8** %arg) #0 !dbg !8771 {
entry:
  %retval = alloca i32, align 4
  %as.addr = alloca %struct.async*, align 8
  %arg.addr = alloca i8**, align 8
  %urb = alloca %struct.urb*, align 8
  %userurb = alloca %struct.usbdevfs_urb*, align 8
  %addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_pu = alloca i32, align 4
  %__ptr_pu = alloca i8*, align 8
  %__val_pu = alloca i32, align 4
  %tmp11 = alloca i64, align 8
  %tmp15 = alloca i64, align 8
  %__ret_pu16 = alloca i32, align 4
  %__ptr_pu17 = alloca i8*, align 8
  %__val_pu18 = alloca i32, align 4
  %tmp23 = alloca i64, align 8
  %tmp28 = alloca i64, align 8
  %__ret_pu29 = alloca i32, align 4
  %__ptr_pu30 = alloca i8*, align 8
  %__val_pu31 = alloca i32, align 4
  %tmp35 = alloca i64, align 8
  %tmp44 = alloca i64, align 8
  %__ret_pu45 = alloca i32, align 4
  %__ptr_pu46 = alloca i8*, align 8
  %__val_pu47 = alloca i32, align 4
  %tmp55 = alloca i64, align 8
  %tmp60 = alloca i64, align 8
  %__ret_pu61 = alloca i32, align 4
  %__ptr_pu62 = alloca i8*, align 8
  %__val_pu63 = alloca i32, align 4
  %tmp74 = alloca i64, align 8
  %tmp80 = alloca i64, align 8
  %__ret_pu81 = alloca i32, align 4
  %__ptr_pu82 = alloca i8*, align 8
  %__val_pu83 = alloca i8*, align 8
  %tmp86 = alloca i64, align 8
  store %struct.async* %as, %struct.async** %as.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.async** %as.addr, metadata !8774, metadata !DIExpression()), !dbg !8775
  store i8** %arg, i8*** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %arg.addr, metadata !8776, metadata !DIExpression()), !dbg !8777
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !8778, metadata !DIExpression()), !dbg !8779
  %0 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8780
  %urb1 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 9, !dbg !8781
  %1 = load %struct.urb*, %struct.urb** %urb1, align 8, !dbg !8781
  store %struct.urb* %1, %struct.urb** %urb, align 8, !dbg !8779
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_urb** %userurb, metadata !8782, metadata !DIExpression()), !dbg !8783
  %2 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8784
  %userurb2 = getelementptr inbounds %struct.async, %struct.async* %2, i32 0, i32 7, !dbg !8785
  %3 = load i8*, i8** %userurb2, align 8, !dbg !8785
  %4 = bitcast i8* %3 to %struct.usbdevfs_urb*, !dbg !8784
  store %struct.usbdevfs_urb* %4, %struct.usbdevfs_urb** %userurb, align 8, !dbg !8783
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !8786, metadata !DIExpression()), !dbg !8787
  %5 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8788
  %userurb3 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 7, !dbg !8789
  %6 = load i8*, i8** %userurb3, align 8, !dbg !8789
  store i8* %6, i8** %addr, align 8, !dbg !8787
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8790, metadata !DIExpression()), !dbg !8791
  %7 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8792
  call void @compute_isochronous_actual_length(%struct.urb* %7) #11, !dbg !8793
  %8 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8794
  %userbuffer = getelementptr inbounds %struct.async, %struct.async* %8, i32 0, i32 6, !dbg !8796
  %9 = load i8*, i8** %userbuffer, align 8, !dbg !8796
  %tobool = icmp ne i8* %9, null, !dbg !8794
  br i1 %tobool, label %land.lhs.true, label %if.end8, !dbg !8797

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8798
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %10, i32 0, i32 20, !dbg !8799
  %11 = load i32, i32* %actual_length, align 4, !dbg !8799
  %tobool4 = icmp ne i32 %11, 0, !dbg !8798
  br i1 %tobool4, label %if.then, label %if.end8, !dbg !8800

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8801
  %userbuffer5 = getelementptr inbounds %struct.async, %struct.async* %12, i32 0, i32 6, !dbg !8804
  %13 = load i8*, i8** %userbuffer5, align 8, !dbg !8804
  %14 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8805
  %call = call i32 @copy_urb_data_to_user(i8* %13, %struct.urb* %14) #11, !dbg !8806
  %tobool6 = icmp ne i32 %call, 0, !dbg !8806
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !8807

if.then7:                                         ; preds = %if.then
  br label %err_out, !dbg !8808

if.end:                                           ; preds = %if.then
  br label %if.end8, !dbg !8809

if.end8:                                          ; preds = %if.end, %land.lhs.true, %entry
  call void @might_fault() #11, !dbg !8810
  call void @llvm.dbg.declare(metadata i32* %__ret_pu, metadata !8813, metadata !DIExpression()), !dbg !8815
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu, metadata !8816, metadata !DIExpression()), !dbg !8815
  call void @llvm.dbg.declare(metadata i32* %__val_pu, metadata !8817, metadata !DIExpression()), !dbg !8815
  %15 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %userurb, align 8, !dbg !8815
  %status = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %15, i32 0, i32 2, !dbg !8815
  %16 = bitcast i32* %status to i8*, !dbg !8815
  store i8* %16, i8** %__ptr_pu, align 8, !dbg !8815
  %17 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8815
  %status9 = getelementptr inbounds %struct.async, %struct.async* %17, i32 0, i32 12, !dbg !8815
  %18 = load i32, i32* %status9, align 4, !dbg !8815
  store i32 %18, i32* %__val_pu, align 4, !dbg !8815
  %19 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !8815
  %20 = load i8*, i8** %__ptr_pu, align 8, !dbg !8815
  %21 = load i32, i32* %__val_pu, align 4, !dbg !8815
  %22 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %20, i32 %21, i64 4, i64 %19) #7, !dbg !8815, !srcloc !8818
  %asmresult = extractvalue { i8*, i64 } %22, 0, !dbg !8815
  %asmresult10 = extractvalue { i8*, i64 } %22, 1, !dbg !8815
  %23 = ptrtoint i8* %asmresult to i64, !dbg !8815
  %24 = trunc i64 %23 to i32, !dbg !8815
  store i32 %24, i32* %__ret_pu, align 4, !dbg !8815
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult10), !dbg !8815
  %25 = load i32, i32* %__ret_pu, align 4, !dbg !8815
  %conv = sext i32 %25 to i64, !dbg !8815
  store i64 %conv, i64* %tmp11, align 8, !dbg !8815
  %26 = load i64, i64* %tmp11, align 8, !dbg !8815
  store i64 %26, i64* %tmp, align 8, !dbg !8810
  %27 = load i64, i64* %tmp, align 8, !dbg !8810
  %tobool12 = icmp ne i64 %27, 0, !dbg !8819
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !8820

if.then13:                                        ; preds = %if.end8
  br label %err_out, !dbg !8821

if.end14:                                         ; preds = %if.end8
  call void @might_fault() #11, !dbg !8822
  call void @llvm.dbg.declare(metadata i32* %__ret_pu16, metadata !8825, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu17, metadata !8828, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.declare(metadata i32* %__val_pu18, metadata !8829, metadata !DIExpression()), !dbg !8827
  %28 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %userurb, align 8, !dbg !8827
  %actual_length19 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %28, i32 0, i32 6, !dbg !8827
  %29 = bitcast i32* %actual_length19 to i8*, !dbg !8827
  store i8* %29, i8** %__ptr_pu17, align 8, !dbg !8827
  %30 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8827
  %actual_length20 = getelementptr inbounds %struct.urb, %struct.urb* %30, i32 0, i32 20, !dbg !8827
  %31 = load i32, i32* %actual_length20, align 4, !dbg !8827
  store i32 %31, i32* %__val_pu18, align 4, !dbg !8827
  %32 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !8827
  %33 = load i8*, i8** %__ptr_pu17, align 8, !dbg !8827
  %34 = load i32, i32* %__val_pu18, align 4, !dbg !8827
  %35 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %33, i32 %34, i64 4, i64 %32) #7, !dbg !8827, !srcloc !8830
  %asmresult21 = extractvalue { i8*, i64 } %35, 0, !dbg !8827
  %asmresult22 = extractvalue { i8*, i64 } %35, 1, !dbg !8827
  %36 = ptrtoint i8* %asmresult21 to i64, !dbg !8827
  %37 = trunc i64 %36 to i32, !dbg !8827
  store i32 %37, i32* %__ret_pu16, align 4, !dbg !8827
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult22), !dbg !8827
  %38 = load i32, i32* %__ret_pu16, align 4, !dbg !8827
  %conv24 = sext i32 %38 to i64, !dbg !8827
  store i64 %conv24, i64* %tmp23, align 8, !dbg !8827
  %39 = load i64, i64* %tmp23, align 8, !dbg !8827
  store i64 %39, i64* %tmp15, align 8, !dbg !8822
  %40 = load i64, i64* %tmp15, align 8, !dbg !8822
  %tobool25 = icmp ne i64 %40, 0, !dbg !8831
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !8832

if.then26:                                        ; preds = %if.end14
  br label %err_out, !dbg !8833

if.end27:                                         ; preds = %if.end14
  call void @might_fault() #11, !dbg !8834
  call void @llvm.dbg.declare(metadata i32* %__ret_pu29, metadata !8837, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu30, metadata !8840, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.declare(metadata i32* %__val_pu31, metadata !8841, metadata !DIExpression()), !dbg !8839
  %41 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %userurb, align 8, !dbg !8839
  %error_count = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %41, i32 0, i32 9, !dbg !8839
  %42 = bitcast i32* %error_count to i8*, !dbg !8839
  store i8* %42, i8** %__ptr_pu30, align 8, !dbg !8839
  %43 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8839
  %error_count32 = getelementptr inbounds %struct.urb, %struct.urb* %43, i32 0, i32 26, !dbg !8839
  %44 = load i32, i32* %error_count32, align 4, !dbg !8839
  store i32 %44, i32* %__val_pu31, align 4, !dbg !8839
  %45 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !8839
  %46 = load i8*, i8** %__ptr_pu30, align 8, !dbg !8839
  %47 = load i32, i32* %__val_pu31, align 4, !dbg !8839
  %48 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %46, i32 %47, i64 4, i64 %45) #7, !dbg !8839, !srcloc !8842
  %asmresult33 = extractvalue { i8*, i64 } %48, 0, !dbg !8839
  %asmresult34 = extractvalue { i8*, i64 } %48, 1, !dbg !8839
  %49 = ptrtoint i8* %asmresult33 to i64, !dbg !8839
  %50 = trunc i64 %49 to i32, !dbg !8839
  store i32 %50, i32* %__ret_pu29, align 4, !dbg !8839
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult34), !dbg !8839
  %51 = load i32, i32* %__ret_pu29, align 4, !dbg !8839
  %conv36 = sext i32 %51 to i64, !dbg !8839
  store i64 %conv36, i64* %tmp35, align 8, !dbg !8839
  %52 = load i64, i64* %tmp35, align 8, !dbg !8839
  store i64 %52, i64* %tmp28, align 8, !dbg !8834
  %53 = load i64, i64* %tmp28, align 8, !dbg !8834
  %tobool37 = icmp ne i64 %53, 0, !dbg !8843
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !8844

if.then38:                                        ; preds = %if.end27
  br label %err_out, !dbg !8845

if.end39:                                         ; preds = %if.end27
  %54 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8846
  %ep = getelementptr inbounds %struct.urb, %struct.urb* %54, i32 0, i32 9, !dbg !8848
  %55 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !8848
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %55, i32 0, i32 0, !dbg !8849
  %call40 = call i32 @usb_endpoint_xfer_isoc(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !8850
  %tobool41 = icmp ne i32 %call40, 0, !dbg !8850
  br i1 %tobool41, label %if.then42, label %if.end79, !dbg !8851

if.then42:                                        ; preds = %if.end39
  store i32 0, i32* %i, align 4, !dbg !8852
  br label %for.cond, !dbg !8855

for.cond:                                         ; preds = %for.inc, %if.then42
  %56 = load i32, i32* %i, align 4, !dbg !8856
  %57 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8858
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %57, i32 0, i32 24, !dbg !8859
  %58 = load i32, i32* %number_of_packets, align 4, !dbg !8859
  %cmp = icmp ult i32 %56, %58, !dbg !8860
  br i1 %cmp, label %for.body, label %for.end, !dbg !8861

for.body:                                         ; preds = %for.cond
  call void @might_fault() #11, !dbg !8862
  call void @llvm.dbg.declare(metadata i32* %__ret_pu45, metadata !8866, metadata !DIExpression()), !dbg !8868
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu46, metadata !8869, metadata !DIExpression()), !dbg !8868
  call void @llvm.dbg.declare(metadata i32* %__val_pu47, metadata !8870, metadata !DIExpression()), !dbg !8868
  %59 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %userurb, align 8, !dbg !8868
  %iso_frame_desc = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %59, i32 0, i32 12, !dbg !8868
  %60 = load i32, i32* %i, align 4, !dbg !8868
  %idxprom = zext i32 %60 to i64, !dbg !8868
  %arrayidx = getelementptr [0 x %struct.usbdevfs_iso_packet_desc], [0 x %struct.usbdevfs_iso_packet_desc]* %iso_frame_desc, i64 0, i64 %idxprom, !dbg !8868
  %actual_length48 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %arrayidx, i32 0, i32 1, !dbg !8868
  %61 = bitcast i32* %actual_length48 to i8*, !dbg !8868
  store i8* %61, i8** %__ptr_pu46, align 8, !dbg !8868
  %62 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8868
  %iso_frame_desc49 = getelementptr inbounds %struct.urb, %struct.urb* %62, i32 0, i32 29, !dbg !8868
  %63 = load i32, i32* %i, align 4, !dbg !8868
  %idxprom50 = zext i32 %63 to i64, !dbg !8868
  %arrayidx51 = getelementptr [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %iso_frame_desc49, i64 0, i64 %idxprom50, !dbg !8868
  %actual_length52 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %arrayidx51, i32 0, i32 2, !dbg !8868
  %64 = load i32, i32* %actual_length52, align 8, !dbg !8868
  store i32 %64, i32* %__val_pu47, align 4, !dbg !8868
  %65 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !8868
  %66 = load i8*, i8** %__ptr_pu46, align 8, !dbg !8868
  %67 = load i32, i32* %__val_pu47, align 4, !dbg !8868
  %68 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %66, i32 %67, i64 4, i64 %65) #7, !dbg !8868, !srcloc !8871
  %asmresult53 = extractvalue { i8*, i64 } %68, 0, !dbg !8868
  %asmresult54 = extractvalue { i8*, i64 } %68, 1, !dbg !8868
  %69 = ptrtoint i8* %asmresult53 to i64, !dbg !8868
  %70 = trunc i64 %69 to i32, !dbg !8868
  store i32 %70, i32* %__ret_pu45, align 4, !dbg !8868
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult54), !dbg !8868
  %71 = load i32, i32* %__ret_pu45, align 4, !dbg !8868
  %conv56 = sext i32 %71 to i64, !dbg !8868
  store i64 %conv56, i64* %tmp55, align 8, !dbg !8868
  %72 = load i64, i64* %tmp55, align 8, !dbg !8868
  store i64 %72, i64* %tmp44, align 8, !dbg !8862
  %73 = load i64, i64* %tmp44, align 8, !dbg !8862
  %tobool57 = icmp ne i64 %73, 0, !dbg !8872
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !8873

if.then58:                                        ; preds = %for.body
  br label %err_out, !dbg !8874

if.end59:                                         ; preds = %for.body
  call void @might_fault() #11, !dbg !8875
  call void @llvm.dbg.declare(metadata i32* %__ret_pu61, metadata !8878, metadata !DIExpression()), !dbg !8880
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu62, metadata !8881, metadata !DIExpression()), !dbg !8880
  call void @llvm.dbg.declare(metadata i32* %__val_pu63, metadata !8882, metadata !DIExpression()), !dbg !8880
  %74 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %userurb, align 8, !dbg !8880
  %iso_frame_desc64 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %74, i32 0, i32 12, !dbg !8880
  %75 = load i32, i32* %i, align 4, !dbg !8880
  %idxprom65 = zext i32 %75 to i64, !dbg !8880
  %arrayidx66 = getelementptr [0 x %struct.usbdevfs_iso_packet_desc], [0 x %struct.usbdevfs_iso_packet_desc]* %iso_frame_desc64, i64 0, i64 %idxprom65, !dbg !8880
  %status67 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %arrayidx66, i32 0, i32 2, !dbg !8880
  %76 = bitcast i32* %status67 to i8*, !dbg !8880
  store i8* %76, i8** %__ptr_pu62, align 8, !dbg !8880
  %77 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8880
  %iso_frame_desc68 = getelementptr inbounds %struct.urb, %struct.urb* %77, i32 0, i32 29, !dbg !8880
  %78 = load i32, i32* %i, align 4, !dbg !8880
  %idxprom69 = zext i32 %78 to i64, !dbg !8880
  %arrayidx70 = getelementptr [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %iso_frame_desc68, i64 0, i64 %idxprom69, !dbg !8880
  %status71 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %arrayidx70, i32 0, i32 3, !dbg !8880
  %79 = load i32, i32* %status71, align 4, !dbg !8880
  store i32 %79, i32* %__val_pu63, align 4, !dbg !8880
  %80 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !8880
  %81 = load i8*, i8** %__ptr_pu62, align 8, !dbg !8880
  %82 = load i32, i32* %__val_pu63, align 4, !dbg !8880
  %83 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %81, i32 %82, i64 4, i64 %80) #7, !dbg !8880, !srcloc !8883
  %asmresult72 = extractvalue { i8*, i64 } %83, 0, !dbg !8880
  %asmresult73 = extractvalue { i8*, i64 } %83, 1, !dbg !8880
  %84 = ptrtoint i8* %asmresult72 to i64, !dbg !8880
  %85 = trunc i64 %84 to i32, !dbg !8880
  store i32 %85, i32* %__ret_pu61, align 4, !dbg !8880
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult73), !dbg !8880
  %86 = load i32, i32* %__ret_pu61, align 4, !dbg !8880
  %conv75 = sext i32 %86 to i64, !dbg !8880
  store i64 %conv75, i64* %tmp74, align 8, !dbg !8880
  %87 = load i64, i64* %tmp74, align 8, !dbg !8880
  store i64 %87, i64* %tmp60, align 8, !dbg !8875
  %88 = load i64, i64* %tmp60, align 8, !dbg !8875
  %tobool76 = icmp ne i64 %88, 0, !dbg !8884
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !8885

if.then77:                                        ; preds = %if.end59
  br label %err_out, !dbg !8886

if.end78:                                         ; preds = %if.end59
  br label %for.inc, !dbg !8887

for.inc:                                          ; preds = %if.end78
  %89 = load i32, i32* %i, align 4, !dbg !8888
  %inc = add i32 %89, 1, !dbg !8888
  store i32 %inc, i32* %i, align 4, !dbg !8888
  br label %for.cond, !dbg !8889, !llvm.loop !8890

for.end:                                          ; preds = %for.cond
  br label %if.end79, !dbg !8892

if.end79:                                         ; preds = %for.end, %if.end39
  call void @might_fault() #11, !dbg !8893
  call void @llvm.dbg.declare(metadata i32* %__ret_pu81, metadata !8896, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.declare(metadata i8** %__ptr_pu82, metadata !8899, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.declare(metadata i8** %__val_pu83, metadata !8900, metadata !DIExpression()), !dbg !8898
  %90 = load i8**, i8*** %arg.addr, align 8, !dbg !8898
  %91 = bitcast i8** %90 to i8*, !dbg !8898
  store i8* %91, i8** %__ptr_pu82, align 8, !dbg !8898
  %92 = load i8*, i8** %addr, align 8, !dbg !8898
  store i8* %92, i8** %__val_pu83, align 8, !dbg !8898
  %93 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !8898
  %94 = load i8*, i8** %__ptr_pu82, align 8, !dbg !8898
  %95 = load i8*, i8** %__val_pu83, align 8, !dbg !8898
  %96 = call { i8*, i64 } asm sideeffect "call __put_user_${4:P}", "={cx},={rsp},0,{rax},i,1,~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %94, i8* %95, i64 8, i64 %93) #7, !dbg !8898, !srcloc !8901
  %asmresult84 = extractvalue { i8*, i64 } %96, 0, !dbg !8898
  %asmresult85 = extractvalue { i8*, i64 } %96, 1, !dbg !8898
  %97 = ptrtoint i8* %asmresult84 to i64, !dbg !8898
  %98 = trunc i64 %97 to i32, !dbg !8898
  store i32 %98, i32* %__ret_pu81, align 4, !dbg !8898
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult85), !dbg !8898
  %99 = load i32, i32* %__ret_pu81, align 4, !dbg !8898
  %conv87 = sext i32 %99 to i64, !dbg !8898
  store i64 %conv87, i64* %tmp86, align 8, !dbg !8898
  %100 = load i64, i64* %tmp86, align 8, !dbg !8898
  store i64 %100, i64* %tmp80, align 8, !dbg !8893
  %101 = load i64, i64* %tmp80, align 8, !dbg !8893
  %tobool88 = icmp ne i64 %101, 0, !dbg !8902
  br i1 %tobool88, label %if.then89, label %if.end90, !dbg !8903

if.then89:                                        ; preds = %if.end79
  store i32 -14, i32* %retval, align 4, !dbg !8904
  br label %return, !dbg !8904

if.end90:                                         ; preds = %if.end79
  store i32 0, i32* %retval, align 4, !dbg !8905
  br label %return, !dbg !8905

err_out:                                          ; preds = %if.then77, %if.then58, %if.then38, %if.then26, %if.then13, %if.then7
  call void @llvm.dbg.label(metadata !8906), !dbg !8907
  store i32 -14, i32* %retval, align 4, !dbg !8908
  br label %return, !dbg !8908

return:                                           ; preds = %err_out, %if.end90, %if.then89
  %102 = load i32, i32* %retval, align 4, !dbg !8909
  ret i32 %102, !dbg !8909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @free_async(%struct.async* %as) #0 !dbg !8910 {
entry:
  %as.addr = alloca %struct.async*, align 8
  %i = alloca i32, align 4
  store %struct.async* %as, %struct.async** %as.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.async** %as.addr, metadata !8913, metadata !DIExpression()), !dbg !8914
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8915, metadata !DIExpression()), !dbg !8916
  %0 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8917
  %pid = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 2, !dbg !8918
  %1 = load %struct.pid*, %struct.pid** %pid, align 8, !dbg !8918
  call void @put_pid(%struct.pid* %1) #11, !dbg !8919
  %2 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8920
  %cred = getelementptr inbounds %struct.async, %struct.async* %2, i32 0, i32 3, !dbg !8922
  %3 = load %struct.cred*, %struct.cred** %cred, align 8, !dbg !8922
  %tobool = icmp ne %struct.cred* %3, null, !dbg !8920
  br i1 %tobool, label %if.then, label %if.end, !dbg !8923

if.then:                                          ; preds = %entry
  %4 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8924
  %cred1 = getelementptr inbounds %struct.async, %struct.async* %4, i32 0, i32 3, !dbg !8925
  %5 = load %struct.cred*, %struct.cred** %cred1, align 8, !dbg !8925
  call void @put_cred(%struct.cred* %5) #11, !dbg !8926
  br label %if.end, !dbg !8926

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !8927
  br label %for.cond, !dbg !8929

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !8930
  %7 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8932
  %urb = getelementptr inbounds %struct.async, %struct.async* %7, i32 0, i32 9, !dbg !8933
  %8 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !8933
  %num_sgs = getelementptr inbounds %struct.urb, %struct.urb* %8, i32 0, i32 18, !dbg !8934
  %9 = load i32, i32* %num_sgs, align 4, !dbg !8934
  %cmp = icmp slt i32 %6, %9, !dbg !8935
  br i1 %cmp, label %for.body, label %for.end, !dbg !8936

for.body:                                         ; preds = %for.cond
  %10 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8937
  %urb2 = getelementptr inbounds %struct.async, %struct.async* %10, i32 0, i32 9, !dbg !8940
  %11 = load %struct.urb*, %struct.urb** %urb2, align 8, !dbg !8940
  %sg = getelementptr inbounds %struct.urb, %struct.urb* %11, i32 0, i32 16, !dbg !8941
  %12 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !8941
  %13 = load i32, i32* %i, align 4, !dbg !8942
  %idxprom = sext i32 %13 to i64, !dbg !8937
  %arrayidx = getelementptr %struct.scatterlist, %struct.scatterlist* %12, i64 %idxprom, !dbg !8937
  %call = call %struct.page* @sg_page(%struct.scatterlist* %arrayidx) #11, !dbg !8943
  %tobool3 = icmp ne %struct.page* %call, null, !dbg !8943
  br i1 %tobool3, label %if.then4, label %if.end10, !dbg !8944

if.then4:                                         ; preds = %for.body
  %14 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8945
  %urb5 = getelementptr inbounds %struct.async, %struct.async* %14, i32 0, i32 9, !dbg !8946
  %15 = load %struct.urb*, %struct.urb** %urb5, align 8, !dbg !8946
  %sg6 = getelementptr inbounds %struct.urb, %struct.urb* %15, i32 0, i32 16, !dbg !8947
  %16 = load %struct.scatterlist*, %struct.scatterlist** %sg6, align 8, !dbg !8947
  %17 = load i32, i32* %i, align 4, !dbg !8948
  %idxprom7 = sext i32 %17 to i64, !dbg !8945
  %arrayidx8 = getelementptr %struct.scatterlist, %struct.scatterlist* %16, i64 %idxprom7, !dbg !8945
  %call9 = call i8* @sg_virt(%struct.scatterlist* %arrayidx8) #11, !dbg !8949
  call void @kfree(i8* %call9) #11, !dbg !8950
  br label %if.end10, !dbg !8950

if.end10:                                         ; preds = %if.then4, %for.body
  br label %for.inc, !dbg !8951

for.inc:                                          ; preds = %if.end10
  %18 = load i32, i32* %i, align 4, !dbg !8952
  %inc = add i32 %18, 1, !dbg !8952
  store i32 %inc, i32* %i, align 4, !dbg !8952
  br label %for.cond, !dbg !8953, !llvm.loop !8954

for.end:                                          ; preds = %for.cond
  %19 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8956
  %urb11 = getelementptr inbounds %struct.async, %struct.async* %19, i32 0, i32 9, !dbg !8957
  %20 = load %struct.urb*, %struct.urb** %urb11, align 8, !dbg !8957
  %sg12 = getelementptr inbounds %struct.urb, %struct.urb* %20, i32 0, i32 16, !dbg !8958
  %21 = load %struct.scatterlist*, %struct.scatterlist** %sg12, align 8, !dbg !8958
  %22 = bitcast %struct.scatterlist* %21 to i8*, !dbg !8956
  call void @kfree(i8* %22) #11, !dbg !8959
  %23 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8960
  %usbm = getelementptr inbounds %struct.async, %struct.async* %23, i32 0, i32 10, !dbg !8962
  %24 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !8962
  %cmp13 = icmp eq %struct.usb_memory* %24, null, !dbg !8963
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !8964

if.then14:                                        ; preds = %for.end
  %25 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8965
  %urb15 = getelementptr inbounds %struct.async, %struct.async* %25, i32 0, i32 9, !dbg !8966
  %26 = load %struct.urb*, %struct.urb** %urb15, align 8, !dbg !8966
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %26, i32 0, i32 14, !dbg !8967
  %27 = load i8*, i8** %transfer_buffer, align 8, !dbg !8967
  call void @kfree(i8* %27) #11, !dbg !8968
  br label %if.end18, !dbg !8968

if.else:                                          ; preds = %for.end
  %28 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8969
  %usbm16 = getelementptr inbounds %struct.async, %struct.async* %28, i32 0, i32 10, !dbg !8970
  %29 = load %struct.usb_memory*, %struct.usb_memory** %usbm16, align 8, !dbg !8970
  %30 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8971
  %usbm17 = getelementptr inbounds %struct.async, %struct.async* %30, i32 0, i32 10, !dbg !8972
  %31 = load %struct.usb_memory*, %struct.usb_memory** %usbm17, align 8, !dbg !8972
  %urb_use_count = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %31, i32 0, i32 2, !dbg !8973
  call void @dec_usb_memory_use_count(%struct.usb_memory* %29, i32* %urb_use_count) #11, !dbg !8974
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then14
  %32 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8975
  %urb19 = getelementptr inbounds %struct.async, %struct.async* %32, i32 0, i32 9, !dbg !8976
  %33 = load %struct.urb*, %struct.urb** %urb19, align 8, !dbg !8976
  %setup_packet = getelementptr inbounds %struct.urb, %struct.urb* %33, i32 0, i32 21, !dbg !8977
  %34 = load i8*, i8** %setup_packet, align 8, !dbg !8977
  call void @kfree(i8* %34) #11, !dbg !8978
  %35 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8979
  %urb20 = getelementptr inbounds %struct.async, %struct.async* %35, i32 0, i32 9, !dbg !8980
  %36 = load %struct.urb*, %struct.urb** %urb20, align 8, !dbg !8980
  call void @usb_free_urb(%struct.urb* %36) #11, !dbg !8981
  %37 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8982
  %mem_usage = getelementptr inbounds %struct.async, %struct.async* %37, i32 0, i32 11, !dbg !8983
  %38 = load i32, i32* %mem_usage, align 8, !dbg !8983
  %conv = zext i32 %38 to i64, !dbg !8982
  call void @usbfs_decrease_memory_usage(i64 %conv) #11, !dbg !8984
  %39 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !8985
  %40 = bitcast %struct.async* %39 to i8*, !dbg !8985
  call void @kfree(i8* %40) #11, !dbg !8986
  ret void, !dbg !8987
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @signal_pending(%struct.task_struct* %p) #0 !dbg !8988 {
entry:
  %p.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %p, %struct.task_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %p.addr, metadata !8991, metadata !DIExpression()), !dbg !8992
  %0 = load %struct.task_struct*, %struct.task_struct** %p.addr, align 8, !dbg !8993
  %call = call i32 @test_tsk_thread_flag(%struct.task_struct* %0, i32 2) #11, !dbg !8993
  %tobool = icmp ne i32 %call, 0, !dbg !8993
  %lnot = xor i1 %tobool, true, !dbg !8993
  %lnot1 = xor i1 %lnot, true, !dbg !8993
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8993
  %conv = sext i32 %lnot.ext to i64, !dbg !8993
  %conv2 = trunc i64 %conv to i32, !dbg !8993
  ret i32 %conv2, !dbg !8994
}

; Function Attrs: noredzone
declare dso_local i32 @default_wake_function(%struct.wait_queue_entry*, i32, i32, i8*) #2

; Function Attrs: noredzone
declare dso_local void @add_wait_queue(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.async* @async_getcompleted(%struct.usb_dev_state* %ps) #0 !dbg !8995 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !5442, metadata !DIExpression()), !dbg !8996
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5449, metadata !DIExpression()), !dbg !8998
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5451, metadata !DIExpression()), !dbg !8999
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %flags = alloca i64, align 8
  %as = alloca %struct.async*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp23 = alloca %struct.async*, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !9006, metadata !DIExpression()), !dbg !9007
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9008, metadata !DIExpression()), !dbg !9009
  call void @llvm.dbg.declare(metadata %struct.async** %as, metadata !9010, metadata !DIExpression()), !dbg !9011
  store %struct.async* null, %struct.async** %as, align 8, !dbg !9011
  br label %do.body, !dbg !9012

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9013

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9014, metadata !DIExpression()), !dbg !9016
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9017, metadata !DIExpression()), !dbg !9016
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9016
  %conv = zext i1 %cmp to i32, !dbg !9016
  store i32 1, i32* %tmp, align 4, !dbg !9016
  %0 = load i32, i32* %tmp, align 4, !dbg !9016
  br label %do.body2, !dbg !9018

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9019

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9020

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9022, metadata !DIExpression()), !dbg !9025
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9026, metadata !DIExpression()), !dbg !9025
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9025
  %conv8 = zext i1 %cmp7 to i32, !dbg !9025
  store i32 1, i32* %tmp9, align 4, !dbg !9025
  %1 = load i32, i32* %tmp9, align 4, !dbg !9025
  %call = call i64 @arch_local_irq_save() #11, !dbg !9027
  store i64 %call, i64* %flags, align 8, !dbg !9027
  br label %do.end, !dbg !9027

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9020

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9019

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9028, !srcloc !9029
  br label %do.body12, !dbg !9028

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !9030
  %lock = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %2, i32 0, i32 3, !dbg !9030
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9031
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !9032
  %rlock.i = bitcast %union.anon.0* %4 to %struct.raw_spinlock*, !dbg !9032
  br label %do.end14, !dbg !9030

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9028

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9019

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9018

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9013

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !9033
  %async_completed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 5, !dbg !9035
  %call19 = call i32 @list_empty(%struct.list_head* %async_completed) #11, !dbg !9036
  %tobool = icmp ne i32 %call19, 0, !dbg !9036
  br i1 %tobool, label %if.end, label %if.then, !dbg !9037

if.then:                                          ; preds = %do.end18
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9038, metadata !DIExpression()), !dbg !9041
  %6 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !9041
  %async_completed20 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 5, !dbg !9041
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %async_completed20, i32 0, i32 0, !dbg !9041
  %7 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9041
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !9041
  store i8* %8, i8** %__mptr, align 8, !dbg !9041
  br label %do.body21, !dbg !9041

do.body21:                                        ; preds = %if.then
  br label %do.end22, !dbg !9042

do.end22:                                         ; preds = %do.body21
  %9 = load i8*, i8** %__mptr, align 8, !dbg !9041
  %add.ptr = getelementptr i8, i8* %9, i64 0, !dbg !9041
  %10 = bitcast i8* %add.ptr to %struct.async*, !dbg !9041
  store %struct.async* %10, %struct.async** %tmp23, align 8, !dbg !9042
  %11 = load %struct.async*, %struct.async** %tmp23, align 8, !dbg !9041
  store %struct.async* %11, %struct.async** %as, align 8, !dbg !9044
  %12 = load %struct.async*, %struct.async** %as, align 8, !dbg !9045
  %asynclist = getelementptr inbounds %struct.async, %struct.async* %12, i32 0, i32 0, !dbg !9046
  call void @list_del_init(%struct.list_head* %asynclist) #11, !dbg !9047
  br label %if.end, !dbg !9048

if.end:                                           ; preds = %do.end22, %do.end18
  %13 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !9049
  %lock24 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %13, i32 0, i32 3, !dbg !9050
  %14 = load i64, i64* %flags, align 8, !dbg !9051
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !243, metadata !5632, metadata !DIExpression()) #7, !dbg !9052
  call void @llvm.dbg.declare(metadata !243, metadata !5636, metadata !DIExpression()) #7, !dbg !9052
  store i32 1, i32* %tmp.i, align 4, !dbg !9052
  %15 = load i32, i32* %tmp.i, align 4, !dbg !9052
  call void @llvm.dbg.declare(metadata !243, metadata !5637, metadata !DIExpression()) #7, !dbg !9053
  call void @llvm.dbg.declare(metadata !243, metadata !5643, metadata !DIExpression()) #7, !dbg !9053
  store i32 1, i32* %tmp8.i, align 4, !dbg !9053
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !9053
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !9054
  call void @arch_local_irq_restore(i64 %17) #13, !dbg !9054
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9055, !srcloc !5647
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !9056
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !9056
  %rlock.i26 = bitcast %union.anon.0* %19 to %struct.raw_spinlock*, !dbg !9056
  %20 = load %struct.async*, %struct.async** %as, align 8, !dbg !9057
  ret %struct.async* %20, !dbg !9058
}

; Function Attrs: noredzone
declare dso_local void @schedule() #2

; Function Attrs: noredzone
declare dso_local void @remove_wait_queue(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @compute_isochronous_actual_length(%struct.urb* %urb) #0 !dbg !9059 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  %i = alloca i32, align 4
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !9060, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9062, metadata !DIExpression()), !dbg !9063
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9064
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 24, !dbg !9066
  %1 = load i32, i32* %number_of_packets, align 4, !dbg !9066
  %cmp = icmp sgt i32 %1, 0, !dbg !9067
  br i1 %cmp, label %if.then, label %if.end, !dbg !9068

if.then:                                          ; preds = %entry
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9069
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 20, !dbg !9071
  store i32 0, i32* %actual_length, align 4, !dbg !9072
  store i32 0, i32* %i, align 4, !dbg !9073
  br label %for.cond, !dbg !9075

for.cond:                                         ; preds = %for.inc, %if.then
  %3 = load i32, i32* %i, align 4, !dbg !9076
  %4 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9078
  %number_of_packets1 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 24, !dbg !9079
  %5 = load i32, i32* %number_of_packets1, align 4, !dbg !9079
  %cmp2 = icmp ult i32 %3, %5, !dbg !9080
  br i1 %cmp2, label %for.body, label %for.end, !dbg !9081

for.body:                                         ; preds = %for.cond
  %6 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9082
  %iso_frame_desc = getelementptr inbounds %struct.urb, %struct.urb* %6, i32 0, i32 29, !dbg !9083
  %7 = load i32, i32* %i, align 4, !dbg !9084
  %idxprom = zext i32 %7 to i64, !dbg !9082
  %arrayidx = getelementptr [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %iso_frame_desc, i64 0, i64 %idxprom, !dbg !9082
  %actual_length3 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %arrayidx, i32 0, i32 2, !dbg !9085
  %8 = load i32, i32* %actual_length3, align 8, !dbg !9085
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9086
  %actual_length4 = getelementptr inbounds %struct.urb, %struct.urb* %9, i32 0, i32 20, !dbg !9087
  %10 = load i32, i32* %actual_length4, align 4, !dbg !9088
  %add = add i32 %10, %8, !dbg !9088
  store i32 %add, i32* %actual_length4, align 4, !dbg !9088
  br label %for.inc, !dbg !9086

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %i, align 4, !dbg !9089
  %inc = add i32 %11, 1, !dbg !9089
  store i32 %inc, i32* %i, align 4, !dbg !9089
  br label %for.cond, !dbg !9090, !llvm.loop !9091

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !9093

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !9094
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @copy_urb_data_to_user(i8* %userbuffer, %struct.urb* %urb) #0 !dbg !9095 {
entry:
  %retval.i.i18 = alloca i1, align 1
  %addr.addr.i.i19 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i19, metadata !5056, metadata !DIExpression()), !dbg !9099
  %bytes.addr.i.i20 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i20, metadata !5077, metadata !DIExpression()), !dbg !9106
  %is_source.addr.i.i21 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i21, metadata !5079, metadata !DIExpression()), !dbg !9107
  %sz.i.i22 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i22, metadata !5081, metadata !DIExpression()), !dbg !9108
  %__ret_warn_on.i.i23 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i23, metadata !5083, metadata !DIExpression()), !dbg !9109
  %tmp.i.i24 = alloca i64, align 8
  %to.addr.i25 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i25, metadata !5087, metadata !DIExpression()), !dbg !9110
  %from.addr.i26 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i26, metadata !5089, metadata !DIExpression()), !dbg !9111
  %n.addr.i27 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i27, metadata !5091, metadata !DIExpression()), !dbg !9112
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !9113
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !9119
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !9120
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !9121
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !9122
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5087, metadata !DIExpression()), !dbg !9123
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5089, metadata !DIExpression()), !dbg !9124
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5091, metadata !DIExpression()), !dbg !9125
  %retval = alloca i32, align 4
  %userbuffer.addr = alloca i8*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %i = alloca i32, align 4
  %len = alloca i32, align 4
  %size = alloca i32, align 4
  store i8* %userbuffer, i8** %userbuffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userbuffer.addr, metadata !9126, metadata !DIExpression()), !dbg !9127
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !9128, metadata !DIExpression()), !dbg !9129
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9130, metadata !DIExpression()), !dbg !9131
  call void @llvm.dbg.declare(metadata i32* %len, metadata !9132, metadata !DIExpression()), !dbg !9133
  call void @llvm.dbg.declare(metadata i32* %size, metadata !9134, metadata !DIExpression()), !dbg !9135
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9136
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 24, !dbg !9138
  %1 = load i32, i32* %number_of_packets, align 4, !dbg !9138
  %cmp = icmp sgt i32 %1, 0, !dbg !9139
  br i1 %cmp, label %if.then, label %if.else, !dbg !9140

if.then:                                          ; preds = %entry
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9141
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 19, !dbg !9142
  %3 = load i32, i32* %transfer_buffer_length, align 8, !dbg !9142
  store i32 %3, i32* %len, align 4, !dbg !9143
  br label %if.end, !dbg !9144

if.else:                                          ; preds = %entry
  %4 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9145
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 20, !dbg !9146
  %5 = load i32, i32* %actual_length, align 4, !dbg !9146
  store i32 %5, i32* %len, align 4, !dbg !9147
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9148
  %num_sgs = getelementptr inbounds %struct.urb, %struct.urb* %6, i32 0, i32 18, !dbg !9149
  %7 = load i32, i32* %num_sgs, align 4, !dbg !9149
  %cmp1 = icmp eq i32 %7, 0, !dbg !9150
  br i1 %cmp1, label %if.then2, label %if.end5, !dbg !9151

if.then2:                                         ; preds = %if.end
  %8 = load i8*, i8** %userbuffer.addr, align 8, !dbg !9152
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9153
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %9, i32 0, i32 14, !dbg !9154
  %10 = load i8*, i8** %transfer_buffer, align 8, !dbg !9154
  %11 = load i32, i32* %len, align 4, !dbg !9155
  %conv = zext i32 %11 to i64, !dbg !9155
  store i8* %8, i8** %to.addr.i, align 8
  store i8* %10, i8** %from.addr.i, align 8
  store i64 %conv, i64* %n.addr.i, align 8
  %12 = load i8*, i8** %from.addr.i, align 8, !dbg !9156
  %13 = load i64, i64* %n.addr.i, align 8, !dbg !9156
  store i8* %12, i8** %addr.addr.i.i, align 8
  store i64 %13, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !9121
  %14 = load i32, i32* %sz.i.i, align 4, !dbg !9157
  %cmp.i.i = icmp sge i32 %14, 0, !dbg !9157
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !9157

land.rhs.i.i:                                     ; preds = %if.then2
  %15 = load i32, i32* %sz.i.i, align 4, !dbg !9157
  %conv.i.i = sext i32 %15 to i64, !dbg !9157
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9157
  %cmp1.i.i = icmp ult i64 %conv.i.i, %16, !dbg !9157
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.then2
  %17 = phi i1 [ false, %if.then2 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !9158
  %lnot.i.i = xor i1 %17, true, !dbg !9157
  %lnot.ext.i.i = zext i1 %17 to i32, !dbg !9157
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9157
  br i1 %17, label %if.then.i.i, label %if.end10.i.i, !dbg !9159

if.then.i.i:                                      ; preds = %land.end.i.i
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9160
  %19 = call i1 @llvm.is.constant.i64(i64 %18) #7, !dbg !9161
  br i1 %19, label %if.else.i.i, label %if.then5.i.i, !dbg !9162

if.then5.i.i:                                     ; preds = %if.then.i.i
  %20 = load i32, i32* %sz.i.i, align 4, !dbg !9163
  %21 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9164
  call void @copy_overflow(i32 %20, i64 %21) #13, !dbg !9165
  br label %if.end9.i.i, !dbg !9165

if.else.i.i:                                      ; preds = %if.then.i.i
  %22 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9166
  %tobool6.i.i = trunc i8 %22 to i1, !dbg !9166
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !9167

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !9168
  br label %if.end.i.i, !dbg !9168

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !9169
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9170
  br label %check_copy_size.exit.i, !dbg !9170

if.end10.i.i:                                     ; preds = %land.end.i.i
  %23 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9122
  %cmp11.i.i = icmp ugt i64 %23, 2147483647, !dbg !9122
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !9122
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !9122
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !9122
  %24 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9171
  %tobool17.i.i = icmp ne i32 %24, 0, !dbg !9171
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !9171
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !9171
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !9171
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !9122

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !9172, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !9173, !srcloc !5212
  br label %if.end31.i.i, !dbg !9174

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %25 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9122
  %tobool32.i.i = icmp ne i32 %25, 0, !dbg !9122
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !9122
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !9122
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !9122
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !9171
  %26 = load i64, i64* %tmp.i.i, align 8, !dbg !9122
  %tobool38.i.i = icmp ne i64 %26, 0, !dbg !9175
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !9176

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9177
  br label %check_copy_size.exit.i, !dbg !9177

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %27 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !9178
  %28 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9179
  %29 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9180
  %tobool41.i.i = trunc i8 %29 to i1, !dbg !9180
  call void @check_object_size(i8* %27, i64 %28, i1 zeroext %tobool41.i.i) #13, !dbg !9181
  store i1 true, i1* %retval.i.i, align 1, !dbg !9182
  br label %check_copy_size.exit.i, !dbg !9182

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %30 = load i1, i1* %retval.i.i, align 1, !dbg !9183
  %lnot.i = xor i1 %30, true, !dbg !9156
  %lnot.ext.i = zext i1 %30 to i32, !dbg !9156
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !9156
  br i1 %30, label %if.then.i, label %copy_to_user.exit, !dbg !9184

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %31 = load i8*, i8** %to.addr.i, align 8, !dbg !9185
  %32 = load i8*, i8** %from.addr.i, align 8, !dbg !9186
  %33 = load i64, i64* %n.addr.i, align 8, !dbg !9187
  %call2.i = call i64 @_copy_to_user(i8* %31, i8* %32, i64 %33) #13, !dbg !9188
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !9189
  br label %copy_to_user.exit, !dbg !9190

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %34 = load i64, i64* %n.addr.i, align 8, !dbg !9191
  %tobool = icmp ne i64 %34, 0, !dbg !9192
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !9193

if.then3:                                         ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !9194
  br label %return, !dbg !9194

if.end4:                                          ; preds = %copy_to_user.exit
  store i32 0, i32* %retval, align 4, !dbg !9195
  br label %return, !dbg !9195

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !9196
  br label %for.cond, !dbg !9197

for.cond:                                         ; preds = %for.inc, %if.end5
  %35 = load i32, i32* %i, align 4, !dbg !9198
  %36 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9199
  %num_sgs6 = getelementptr inbounds %struct.urb, %struct.urb* %36, i32 0, i32 18, !dbg !9200
  %37 = load i32, i32* %num_sgs6, align 4, !dbg !9200
  %cmp7 = icmp ult i32 %35, %37, !dbg !9201
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !9202

land.rhs:                                         ; preds = %for.cond
  %38 = load i32, i32* %len, align 4, !dbg !9203
  %tobool9 = icmp ne i32 %38, 0, !dbg !9202
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %39 = phi i1 [ false, %for.cond ], [ %tobool9, %land.rhs ], !dbg !9204
  br i1 %39, label %for.body, label %for.end, !dbg !9205

for.body:                                         ; preds = %land.end
  %40 = load i32, i32* %len, align 4, !dbg !9206
  %cmp10 = icmp ugt i32 %40, 16384, !dbg !9207
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !9208

cond.true:                                        ; preds = %for.body
  br label %cond.end, !dbg !9208

cond.false:                                       ; preds = %for.body
  %41 = load i32, i32* %len, align 4, !dbg !9209
  br label %cond.end, !dbg !9208

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 16384, %cond.true ], [ %41, %cond.false ], !dbg !9208
  store i32 %cond, i32* %size, align 4, !dbg !9210
  %42 = load i8*, i8** %userbuffer.addr, align 8, !dbg !9211
  %43 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9212
  %sg = getelementptr inbounds %struct.urb, %struct.urb* %43, i32 0, i32 16, !dbg !9213
  %44 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !9213
  %45 = load i32, i32* %i, align 4, !dbg !9214
  %idxprom = zext i32 %45 to i64, !dbg !9212
  %arrayidx = getelementptr %struct.scatterlist, %struct.scatterlist* %44, i64 %idxprom, !dbg !9212
  %call12 = call i8* @sg_virt(%struct.scatterlist* %arrayidx) #11, !dbg !9215
  %46 = load i32, i32* %size, align 4, !dbg !9216
  %conv13 = zext i32 %46 to i64, !dbg !9216
  store i8* %42, i8** %to.addr.i25, align 8
  store i8* %call12, i8** %from.addr.i26, align 8
  store i64 %conv13, i64* %n.addr.i27, align 8
  %47 = load i8*, i8** %from.addr.i26, align 8, !dbg !9217
  %48 = load i64, i64* %n.addr.i27, align 8, !dbg !9217
  store i8* %47, i8** %addr.addr.i.i19, align 8
  store i64 %48, i64* %bytes.addr.i.i20, align 8
  store i8 1, i8* %is_source.addr.i.i21, align 1
  store i32 -1, i32* %sz.i.i22, align 4, !dbg !9108
  %49 = load i32, i32* %sz.i.i22, align 4, !dbg !9218
  %cmp.i.i28 = icmp sge i32 %49, 0, !dbg !9218
  br i1 %cmp.i.i28, label %land.rhs.i.i31, label %land.end.i.i35, !dbg !9218

land.rhs.i.i31:                                   ; preds = %cond.end
  %50 = load i32, i32* %sz.i.i22, align 4, !dbg !9218
  %conv.i.i29 = sext i32 %50 to i64, !dbg !9218
  %51 = load i64, i64* %bytes.addr.i.i20, align 8, !dbg !9218
  %cmp1.i.i30 = icmp ult i64 %conv.i.i29, %51, !dbg !9218
  br label %land.end.i.i35

land.end.i.i35:                                   ; preds = %land.rhs.i.i31, %cond.end
  %52 = phi i1 [ false, %cond.end ], [ %cmp1.i.i30, %land.rhs.i.i31 ], !dbg !9219
  %lnot.i.i32 = xor i1 %52, true, !dbg !9218
  %lnot.ext.i.i33 = zext i1 %52 to i32, !dbg !9218
  %conv4.i.i34 = sext i32 %lnot.ext.i.i33 to i64, !dbg !9218
  br i1 %52, label %if.then.i.i36, label %if.end10.i.i51, !dbg !9220

if.then.i.i36:                                    ; preds = %land.end.i.i35
  %53 = load i64, i64* %bytes.addr.i.i20, align 8, !dbg !9221
  %54 = call i1 @llvm.is.constant.i64(i64 %53) #7, !dbg !9222
  br i1 %54, label %if.else.i.i39, label %if.then5.i.i37, !dbg !9223

if.then5.i.i37:                                   ; preds = %if.then.i.i36
  %55 = load i32, i32* %sz.i.i22, align 4, !dbg !9224
  %56 = load i64, i64* %bytes.addr.i.i20, align 8, !dbg !9225
  call void @copy_overflow(i32 %55, i64 %56) #13, !dbg !9226
  br label %if.end9.i.i43, !dbg !9226

if.else.i.i39:                                    ; preds = %if.then.i.i36
  %57 = load i8, i8* %is_source.addr.i.i21, align 1, !dbg !9227
  %tobool6.i.i38 = trunc i8 %57 to i1, !dbg !9227
  br i1 %tobool6.i.i38, label %if.then7.i.i40, label %if.else8.i.i41, !dbg !9228

if.then7.i.i40:                                   ; preds = %if.else.i.i39
  call void @__bad_copy_from() #13, !dbg !9229
  br label %if.end.i.i42, !dbg !9229

if.else8.i.i41:                                   ; preds = %if.else.i.i39
  call void @__bad_copy_to() #13, !dbg !9230
  br label %if.end.i.i42

if.end.i.i42:                                     ; preds = %if.else8.i.i41, %if.then7.i.i40
  br label %if.end9.i.i43

if.end9.i.i43:                                    ; preds = %if.end.i.i42, %if.then5.i.i37
  store i1 false, i1* %retval.i.i18, align 1, !dbg !9231
  br label %check_copy_size.exit.i65, !dbg !9231

if.end10.i.i51:                                   ; preds = %land.end.i.i35
  %58 = load i64, i64* %bytes.addr.i.i20, align 8, !dbg !9109
  %cmp11.i.i44 = icmp ugt i64 %58, 2147483647, !dbg !9109
  %lnot13.i.i45 = xor i1 %cmp11.i.i44, true, !dbg !9109
  %lnot.ext16.i.i46 = zext i1 %cmp11.i.i44 to i32, !dbg !9109
  store i32 %lnot.ext16.i.i46, i32* %__ret_warn_on.i.i23, align 4, !dbg !9109
  %59 = load i32, i32* %__ret_warn_on.i.i23, align 4, !dbg !9232
  %tobool17.i.i47 = icmp ne i32 %59, 0, !dbg !9232
  %lnot18.i.i48 = xor i1 %tobool17.i.i47, true, !dbg !9232
  %lnot.ext21.i.i49 = zext i1 %tobool17.i.i47 to i32, !dbg !9232
  %conv22.i.i50 = sext i32 %lnot.ext21.i.i49 to i64, !dbg !9232
  br i1 %tobool17.i.i47, label %if.then24.i.i52, label %if.end31.i.i58, !dbg !9109

if.then24.i.i52:                                  ; preds = %if.end10.i.i51
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !9233, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !9234, !srcloc !5212
  br label %if.end31.i.i58, !dbg !9235

if.end31.i.i58:                                   ; preds = %if.then24.i.i52, %if.end10.i.i51
  %60 = load i32, i32* %__ret_warn_on.i.i23, align 4, !dbg !9109
  %tobool32.i.i53 = icmp ne i32 %60, 0, !dbg !9109
  %lnot33.i.i54 = xor i1 %tobool32.i.i53, true, !dbg !9109
  %lnot.ext36.i.i55 = zext i1 %tobool32.i.i53 to i32, !dbg !9109
  %conv37.i.i56 = sext i32 %lnot.ext36.i.i55 to i64, !dbg !9109
  store i64 %conv37.i.i56, i64* %tmp.i.i24, align 8, !dbg !9232
  %61 = load i64, i64* %tmp.i.i24, align 8, !dbg !9109
  %tobool38.i.i57 = icmp ne i64 %61, 0, !dbg !9236
  br i1 %tobool38.i.i57, label %if.then39.i.i59, label %if.end40.i.i61, !dbg !9237

if.then39.i.i59:                                  ; preds = %if.end31.i.i58
  store i1 false, i1* %retval.i.i18, align 1, !dbg !9238
  br label %check_copy_size.exit.i65, !dbg !9238

if.end40.i.i61:                                   ; preds = %if.end31.i.i58
  %62 = load i8*, i8** %addr.addr.i.i19, align 8, !dbg !9239
  %63 = load i64, i64* %bytes.addr.i.i20, align 8, !dbg !9240
  %64 = load i8, i8* %is_source.addr.i.i21, align 1, !dbg !9241
  %tobool41.i.i60 = trunc i8 %64 to i1, !dbg !9241
  call void @check_object_size(i8* %62, i64 %63, i1 zeroext %tobool41.i.i60) #13, !dbg !9242
  store i1 true, i1* %retval.i.i18, align 1, !dbg !9243
  br label %check_copy_size.exit.i65, !dbg !9243

check_copy_size.exit.i65:                         ; preds = %if.end40.i.i61, %if.then39.i.i59, %if.end9.i.i43
  %65 = load i1, i1* %retval.i.i18, align 1, !dbg !9244
  %lnot.i62 = xor i1 %65, true, !dbg !9217
  %lnot.ext.i63 = zext i1 %65 to i32, !dbg !9217
  %conv.i64 = sext i32 %lnot.ext.i63 to i64, !dbg !9217
  br i1 %65, label %if.then.i67, label %copy_to_user.exit68, !dbg !9245

if.then.i67:                                      ; preds = %check_copy_size.exit.i65
  %66 = load i8*, i8** %to.addr.i25, align 8, !dbg !9246
  %67 = load i8*, i8** %from.addr.i26, align 8, !dbg !9247
  %68 = load i64, i64* %n.addr.i27, align 8, !dbg !9248
  %call2.i66 = call i64 @_copy_to_user(i8* %66, i8* %67, i64 %68) #13, !dbg !9249
  store i64 %call2.i66, i64* %n.addr.i27, align 8, !dbg !9250
  br label %copy_to_user.exit68, !dbg !9251

copy_to_user.exit68:                              ; preds = %check_copy_size.exit.i65, %if.then.i67
  %69 = load i64, i64* %n.addr.i27, align 8, !dbg !9252
  %tobool15 = icmp ne i64 %69, 0, !dbg !9253
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !9254

if.then16:                                        ; preds = %copy_to_user.exit68
  store i32 -14, i32* %retval, align 4, !dbg !9255
  br label %return, !dbg !9255

if.end17:                                         ; preds = %copy_to_user.exit68
  %70 = load i32, i32* %size, align 4, !dbg !9256
  %71 = load i8*, i8** %userbuffer.addr, align 8, !dbg !9257
  %idx.ext = zext i32 %70 to i64, !dbg !9257
  %add.ptr = getelementptr i8, i8* %71, i64 %idx.ext, !dbg !9257
  store i8* %add.ptr, i8** %userbuffer.addr, align 8, !dbg !9257
  %72 = load i32, i32* %size, align 4, !dbg !9258
  %73 = load i32, i32* %len, align 4, !dbg !9259
  %sub = sub i32 %73, %72, !dbg !9259
  store i32 %sub, i32* %len, align 4, !dbg !9259
  br label %for.inc, !dbg !9260

for.inc:                                          ; preds = %if.end17
  %74 = load i32, i32* %i, align 4, !dbg !9261
  %inc = add i32 %74, 1, !dbg !9261
  store i32 %inc, i32* %i, align 4, !dbg !9261
  br label %for.cond, !dbg !9262, !llvm.loop !9263

for.end:                                          ; preds = %land.end
  store i32 0, i32* %retval, align 4, !dbg !9265
  br label %return, !dbg !9265

return:                                           ; preds = %for.end, %if.then16, %if.end4, %if.then3
  %75 = load i32, i32* %retval, align 4, !dbg !9266
  ret i32 %75, !dbg !9266
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @might_fault() #0 !dbg !9267 {
entry:
  ret void, !dbg !9269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_xfer_isoc(%struct.usb_endpoint_descriptor* %epd) #0 !dbg !9270 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !9275, metadata !DIExpression()), !dbg !9276
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !9277
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3, !dbg !9278
  %1 = load i8, i8* %bmAttributes, align 1, !dbg !9278
  %conv = zext i8 %1 to i32, !dbg !9277
  %and = and i32 %conv, 3, !dbg !9279
  %cmp = icmp eq i32 %and, 1, !dbg !9280
  %conv1 = zext i1 %cmp to i32, !dbg !9280
  ret i32 %conv1, !dbg !9281
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @sg_virt(%struct.scatterlist* %sg) #0 !dbg !9282 {
entry:
  %page.addr.i = alloca %struct.page*, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr.i, metadata !9285, metadata !DIExpression()), !dbg !9291
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !9293, metadata !DIExpression()), !dbg !9294
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !9295
  %call = call %struct.page* @sg_page(%struct.scatterlist* %0) #11, !dbg !9295
  store %struct.page* %call, %struct.page** %page.addr.i, align 8
  %1 = load %struct.page*, %struct.page** %page.addr.i, align 8, !dbg !9296
  %2 = load i64, i64* @vmemmap_base, align 8, !dbg !9296
  %3 = inttoptr i64 %2 to %struct.page*, !dbg !9296
  %sub.ptr.lhs.cast.i = ptrtoint %struct.page* %1 to i64, !dbg !9296
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %2, !dbg !9296
  %sub.ptr.div.i = sdiv exact i64 %sub.ptr.sub.i, 64, !dbg !9296
  %shl.i = shl i64 %sub.ptr.div.i, 12, !dbg !9296
  %4 = load i64, i64* @page_offset_base, align 8, !dbg !9296
  %add.i = add i64 %shl.i, %4, !dbg !9296
  %5 = inttoptr i64 %add.i to i8*, !dbg !9296
  %6 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !9297
  %offset = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %6, i32 0, i32 1, !dbg !9298
  %7 = load i32, i32* %offset, align 8, !dbg !9298
  %idx.ext = zext i32 %7 to i64, !dbg !9299
  %add.ptr = getelementptr i8, i8* %5, i64 %idx.ext, !dbg !9299
  ret i8* %add.ptr, !dbg !9300
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @sg_page(%struct.scatterlist* %sg) #0 !dbg !9301 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !9304, metadata !DIExpression()), !dbg !9305
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !9306
  %page_link = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0, !dbg !9307
  %1 = load i64, i64* %page_link, align 8, !dbg !9307
  %and = and i64 %1, -4, !dbg !9308
  %2 = inttoptr i64 %and to %struct.page*, !dbg !9309
  ret %struct.page* %2, !dbg !9310
}

; Function Attrs: noredzone
declare dso_local void @put_pid(%struct.pid*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @put_cred(%struct.cred* %_cred) #0 !dbg !9311 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !9314, metadata !DIExpression()), !dbg !9320
  %c.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i.i, metadata !9328, metadata !DIExpression()), !dbg !9330
  %tmp.i.i = alloca i8, align 1
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !9331, metadata !DIExpression()), !dbg !9333
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9335, metadata !DIExpression()), !dbg !9336
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !9337, metadata !DIExpression()), !dbg !9338
  %_cred.addr = alloca %struct.cred*, align 8
  %cred = alloca %struct.cred*, align 8
  store %struct.cred* %_cred, %struct.cred** %_cred.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cred** %_cred.addr, metadata !9339, metadata !DIExpression()), !dbg !9340
  call void @llvm.dbg.declare(metadata %struct.cred** %cred, metadata !9341, metadata !DIExpression()), !dbg !9342
  %0 = load %struct.cred*, %struct.cred** %_cred.addr, align 8, !dbg !9343
  store %struct.cred* %0, %struct.cred** %cred, align 8, !dbg !9342
  %1 = load %struct.cred*, %struct.cred** %cred, align 8, !dbg !9344
  %tobool = icmp ne %struct.cred* %1, null, !dbg !9344
  br i1 %tobool, label %if.then, label %if.end2, !dbg !9345

if.then:                                          ; preds = %entry
  %2 = load %struct.cred*, %struct.cred** %cred, align 8, !dbg !9346
  call void @validate_creds(%struct.cred* %2) #11, !dbg !9347
  %3 = load %struct.cred*, %struct.cred** %cred, align 8, !dbg !9348
  %usage = getelementptr inbounds %struct.cred, %struct.cred* %3, i32 0, i32 0, !dbg !9349
  store %struct.atomic_t* %usage, %struct.atomic_t** %v.addr.i, align 8
  %4 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9350
  %5 = bitcast %struct.atomic_t* %4 to i8*, !dbg !9350
  store i8* %5, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9351
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !9352
  %conv.i.i = trunc i64 %7 to i32, !dbg !9352
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %6, i32 %conv.i.i) #13, !dbg !9353
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9354
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !9354
  call void @kcsan_check_access(i8* %8, i64 %9, i32 7) #13, !dbg !9354
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !9355
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i1.i, align 8
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !9330
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !9330
  %12 = call i8 asm sideeffect "decl $0\0A\09/* output condition code e*/\0A", "=*m,={@cce},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #7, !dbg !9330, !srcloc !9356
  store i8 %12, i8* %c.i.i, align 1, !dbg !9330
  %13 = load i8, i8* %c.i.i, align 1, !dbg !9330
  %tobool.i.i = trunc i8 %13 to i1, !dbg !9330
  %frombool.i.i = zext i1 %tobool.i.i to i8, !dbg !9330
  store i8 %frombool.i.i, i8* %tmp.i.i, align 1, !dbg !9330
  %14 = load i8, i8* %tmp.i.i, align 1, !dbg !9330
  %tobool1.i.i = trunc i8 %14 to i1, !dbg !9330
  br i1 %tobool1.i.i, label %if.then1, label %if.end, !dbg !9357

if.then1:                                         ; preds = %if.then
  %15 = load %struct.cred*, %struct.cred** %cred, align 8, !dbg !9358
  call void @__put_cred(%struct.cred* %15) #11, !dbg !9359
  br label %if.end, !dbg !9359

if.end:                                           ; preds = %if.then1, %if.then
  br label %if.end2, !dbg !9360

if.end2:                                          ; preds = %if.end, %entry
  ret void, !dbg !9361
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dec_usb_memory_use_count(%struct.usb_memory* %usbm, i32* %count) #0 !dbg !9362 {
entry:
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !5442, metadata !DIExpression()), !dbg !9365
  %flags.addr.i32 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i32, metadata !5449, metadata !DIExpression()), !dbg !9369
  %tmp.i33 = alloca i32, align 4
  %tmp8.i34 = alloca i32, align 4
  %lock.addr.i29 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i29, metadata !5442, metadata !DIExpression()), !dbg !9370
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5449, metadata !DIExpression()), !dbg !9373
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5451, metadata !DIExpression()), !dbg !9374
  %usbm.addr = alloca %struct.usb_memory*, align 8
  %count.addr = alloca i32*, align 8
  %ps = alloca %struct.usb_dev_state*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.usb_memory* %usbm, %struct.usb_memory** %usbm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_memory** %usbm.addr, metadata !9381, metadata !DIExpression()), !dbg !9382
  store i32* %count, i32** %count.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %count.addr, metadata !9383, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps, metadata !9385, metadata !DIExpression()), !dbg !9386
  %0 = load %struct.usb_memory*, %struct.usb_memory** %usbm.addr, align 8, !dbg !9387
  %ps1 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %0, i32 0, i32 7, !dbg !9388
  %1 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps1, align 8, !dbg !9388
  store %struct.usb_dev_state* %1, %struct.usb_dev_state** %ps, align 8, !dbg !9386
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9389, metadata !DIExpression()), !dbg !9390
  br label %do.body, !dbg !9391

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !9392

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9393, metadata !DIExpression()), !dbg !9395
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9396, metadata !DIExpression()), !dbg !9395
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9395
  %conv = zext i1 %cmp to i32, !dbg !9395
  store i32 1, i32* %tmp, align 4, !dbg !9395
  %2 = load i32, i32* %tmp, align 4, !dbg !9395
  br label %do.body3, !dbg !9397

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9398

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !9399

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !9401, metadata !DIExpression()), !dbg !9404
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !9405, metadata !DIExpression()), !dbg !9404
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !9404
  %conv9 = zext i1 %cmp8 to i32, !dbg !9404
  store i32 1, i32* %tmp10, align 4, !dbg !9404
  %3 = load i32, i32* %tmp10, align 4, !dbg !9404
  %call = call i64 @arch_local_irq_save() #11, !dbg !9406
  store i64 %call, i64* %flags, align 8, !dbg !9406
  br label %do.end, !dbg !9406

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !9399

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !9398

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9407, !srcloc !9408
  br label %do.body13, !dbg !9407

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !9409
  %lock = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %4, i32 0, i32 3, !dbg !9409
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9410
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !9411
  %rlock.i = bitcast %union.anon.0* %6 to %struct.raw_spinlock*, !dbg !9411
  br label %do.end15, !dbg !9409

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !9407

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9398

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9397

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9392

do.end19:                                         ; preds = %do.end18
  %7 = load i32*, i32** %count.addr, align 8, !dbg !9412
  %8 = load i32, i32* %7, align 4, !dbg !9413
  %dec = add i32 %8, -1, !dbg !9413
  store i32 %dec, i32* %7, align 4, !dbg !9413
  %9 = load %struct.usb_memory*, %struct.usb_memory** %usbm.addr, align 8, !dbg !9414
  %urb_use_count = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %9, i32 0, i32 2, !dbg !9415
  %10 = load i32, i32* %urb_use_count, align 4, !dbg !9415
  %cmp20 = icmp eq i32 %10, 0, !dbg !9416
  br i1 %cmp20, label %land.lhs.true, label %if.else, !dbg !9417

land.lhs.true:                                    ; preds = %do.end19
  %11 = load %struct.usb_memory*, %struct.usb_memory** %usbm.addr, align 8, !dbg !9418
  %vma_use_count = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %11, i32 0, i32 1, !dbg !9419
  %12 = load i32, i32* %vma_use_count, align 8, !dbg !9419
  %cmp22 = icmp eq i32 %12, 0, !dbg !9420
  br i1 %cmp22, label %if.then, label %if.else, !dbg !9421

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct.usb_memory*, %struct.usb_memory** %usbm.addr, align 8, !dbg !9422
  %memlist = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %13, i32 0, i32 0, !dbg !9423
  call void @list_del(%struct.list_head* %memlist) #11, !dbg !9424
  %14 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !9425
  %lock24 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %14, i32 0, i32 3, !dbg !9426
  %15 = load i64, i64* %flags, align 8, !dbg !9427
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i31, align 8
  store i64 %15, i64* %flags.addr.i32, align 8
  call void @llvm.dbg.declare(metadata !243, metadata !5632, metadata !DIExpression()) #7, !dbg !9428
  call void @llvm.dbg.declare(metadata !243, metadata !5636, metadata !DIExpression()) #7, !dbg !9428
  store i32 1, i32* %tmp.i33, align 4, !dbg !9428
  %16 = load i32, i32* %tmp.i33, align 4, !dbg !9428
  call void @llvm.dbg.declare(metadata !243, metadata !5637, metadata !DIExpression()) #7, !dbg !9429
  call void @llvm.dbg.declare(metadata !243, metadata !5643, metadata !DIExpression()) #7, !dbg !9429
  store i32 1, i32* %tmp8.i34, align 4, !dbg !9429
  %17 = load i32, i32* %tmp8.i34, align 4, !dbg !9429
  %18 = load i64, i64* %flags.addr.i32, align 8, !dbg !9430
  call void @arch_local_irq_restore(i64 %18) #13, !dbg !9430
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9431, !srcloc !5647
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !9432
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !9432
  %rlock.i35 = bitcast %union.anon.0* %20 to %struct.raw_spinlock*, !dbg !9432
  %21 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !9433
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %21, i32 0, i32 1, !dbg !9434
  %22 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9434
  %23 = load %struct.usb_memory*, %struct.usb_memory** %usbm.addr, align 8, !dbg !9435
  %size = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %23, i32 0, i32 3, !dbg !9436
  %24 = load i32, i32* %size, align 8, !dbg !9436
  %conv25 = zext i32 %24 to i64, !dbg !9435
  %25 = load %struct.usb_memory*, %struct.usb_memory** %usbm.addr, align 8, !dbg !9437
  %mem = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %25, i32 0, i32 4, !dbg !9438
  %26 = load i8*, i8** %mem, align 8, !dbg !9438
  %27 = load %struct.usb_memory*, %struct.usb_memory** %usbm.addr, align 8, !dbg !9439
  %dma_handle = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %27, i32 0, i32 5, !dbg !9440
  %28 = load i64, i64* %dma_handle, align 8, !dbg !9440
  call void @usb_free_coherent(%struct.usb_device* %22, i64 %conv25, i8* %26, i64 %28) #11, !dbg !9441
  %29 = load %struct.usb_memory*, %struct.usb_memory** %usbm.addr, align 8, !dbg !9442
  %size26 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %29, i32 0, i32 3, !dbg !9443
  %30 = load i32, i32* %size26, align 8, !dbg !9443
  %conv27 = zext i32 %30 to i64, !dbg !9442
  %add = add i64 %conv27, 64, !dbg !9444
  call void @usbfs_decrease_memory_usage(i64 %add) #11, !dbg !9445
  %31 = load %struct.usb_memory*, %struct.usb_memory** %usbm.addr, align 8, !dbg !9446
  %32 = bitcast %struct.usb_memory* %31 to i8*, !dbg !9446
  call void @kfree(i8* %32) #11, !dbg !9447
  br label %if.end, !dbg !9448

if.else:                                          ; preds = %land.lhs.true, %do.end19
  %33 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !9449
  %lock28 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %33, i32 0, i32 3, !dbg !9450
  %34 = load i64, i64* %flags, align 8, !dbg !9451
  store %struct.spinlock* %lock28, %struct.spinlock** %lock.addr.i29, align 8
  store i64 %34, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !243, metadata !5632, metadata !DIExpression()) #7, !dbg !9452
  call void @llvm.dbg.declare(metadata !243, metadata !5636, metadata !DIExpression()) #7, !dbg !9452
  store i32 1, i32* %tmp.i, align 4, !dbg !9452
  %35 = load i32, i32* %tmp.i, align 4, !dbg !9452
  call void @llvm.dbg.declare(metadata !243, metadata !5637, metadata !DIExpression()) #7, !dbg !9453
  call void @llvm.dbg.declare(metadata !243, metadata !5643, metadata !DIExpression()) #7, !dbg !9453
  store i32 1, i32* %tmp8.i, align 4, !dbg !9453
  %36 = load i32, i32* %tmp8.i, align 4, !dbg !9453
  %37 = load i64, i64* %flags.addr.i, align 8, !dbg !9454
  call void @arch_local_irq_restore(i64 %37) #13, !dbg !9454
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9455, !srcloc !5647
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i29, align 8, !dbg !9456
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !9456
  %rlock.i30 = bitcast %union.anon.0* %39 to %struct.raw_spinlock*, !dbg !9456
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usbfs_decrease_memory_usage(i64 %amount) #0 !dbg !9458 {
entry:
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !9331, metadata !DIExpression()), !dbg !9461
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9335, metadata !DIExpression()), !dbg !9468
  %i.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr.i, metadata !9469, metadata !DIExpression()), !dbg !9470
  %v.addr.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i, metadata !9471, metadata !DIExpression()), !dbg !9472
  %amount.addr = alloca i64, align 8
  store i64 %amount, i64* %amount.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %amount.addr, metadata !9473, metadata !DIExpression()), !dbg !9474
  %0 = load i64, i64* %amount.addr, align 8, !dbg !9475
  store i64 %0, i64* %i.addr.i, align 8
  store %struct.atomic64_t* @usbfs_memory_usage, %struct.atomic64_t** %v.addr.i, align 8
  %1 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !9476
  %2 = bitcast %struct.atomic64_t* %1 to i8*, !dbg !9476
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 8, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9477
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !9478
  %conv.i.i = trunc i64 %4 to i32, !dbg !9478
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #13, !dbg !9479
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !9480
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !9480
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #13, !dbg !9480
  %7 = load i64, i64* %i.addr.i, align 8, !dbg !9481
  %8 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !9482
  call void @arch_atomic64_sub(i64 %7, %struct.atomic64_t* %8) #13, !dbg !9483
  ret void, !dbg !9484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @validate_creds(%struct.cred* %cred) #0 !dbg !9485 {
entry:
  %cred.addr = alloca %struct.cred*, align 8
  store %struct.cred* %cred, %struct.cred** %cred.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cred** %cred.addr, metadata !9486, metadata !DIExpression()), !dbg !9487
  ret void, !dbg !9488
}

; Function Attrs: noredzone
declare dso_local void @__put_cred(%struct.cred*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !9489 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9490, metadata !DIExpression()), !dbg !9491
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9492
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !9493
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9494
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !9495
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !9496
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9497
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !9498
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !9499
  ret void, !dbg !9500
}

; Function Attrs: noredzone
declare dso_local void @usb_free_coherent(%struct.usb_device*, i64, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_atomic64_sub(i64 %i, %struct.atomic64_t* %v) #0 !dbg !9501 {
entry:
  %i.addr = alloca i64, align 8
  %v.addr = alloca %struct.atomic64_t*, align 8
  store i64 %i, i64* %i.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !9503, metadata !DIExpression()), !dbg !9504
  store %struct.atomic64_t* %v, %struct.atomic64_t** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr, metadata !9505, metadata !DIExpression()), !dbg !9506
  %0 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr, align 8, !dbg !9507
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %0, i32 0, i32 0, !dbg !9508
  %1 = load i64, i64* %i.addr, align 8, !dbg !9509
  %2 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr, align 8, !dbg !9510
  %counter1 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %2, i32 0, i32 0, !dbg !9511
  call void asm sideeffect "subq $1,$0", "=*m,er,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %counter, i64 %1, i64* %counter1) #7, !dbg !9512, !srcloc !9513
  ret void, !dbg !9514
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_tsk_thread_flag(%struct.task_struct* %tsk, i32 %flag) #0 !dbg !9515 {
entry:
  %tsk.addr = alloca %struct.task_struct*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.task_struct* %tsk, %struct.task_struct** %tsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %tsk.addr, metadata !9518, metadata !DIExpression()), !dbg !9519
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !9520, metadata !DIExpression()), !dbg !9521
  %0 = load %struct.task_struct*, %struct.task_struct** %tsk.addr, align 8, !dbg !9522
  %call = call %struct.thread_info* @task_thread_info(%struct.task_struct* %0) #11, !dbg !9523
  %1 = load i32, i32* %flag.addr, align 4, !dbg !9524
  %call1 = call i32 @test_ti_thread_flag(%struct.thread_info* %call, i32 %1) #11, !dbg !9525
  ret i32 %call1, !dbg !9526
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @test_ti_thread_flag(%struct.thread_info* %ti, i32 %flag) #0 !dbg !9527 {
entry:
  %ti.addr = alloca %struct.thread_info*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.thread_info* %ti, %struct.thread_info** %ti.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.thread_info** %ti.addr, metadata !9531, metadata !DIExpression()), !dbg !9532
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !9533, metadata !DIExpression()), !dbg !9534
  %0 = load i32, i32* %flag.addr, align 4, !dbg !9535
  %conv = sext i32 %0 to i64, !dbg !9535
  %1 = load %struct.thread_info*, %struct.thread_info** %ti.addr, align 8, !dbg !9536
  %flags = getelementptr inbounds %struct.thread_info, %struct.thread_info* %1, i32 0, i32 0, !dbg !9537
  %call = call zeroext i1 @test_bit(i64 %conv, i64* %flags) #11, !dbg !9538
  %conv1 = zext i1 %call to i32, !dbg !9538
  ret i32 %conv1, !dbg !9539
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.thread_info* @task_thread_info(%struct.task_struct* %task) #0 !dbg !9540 {
entry:
  %task.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %task, %struct.task_struct** %task.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %task.addr, metadata !9543, metadata !DIExpression()), !dbg !9544
  %0 = load %struct.task_struct*, %struct.task_struct** %task.addr, align 8, !dbg !9545
  %thread_info = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 0, !dbg !9546
  ret %struct.thread_info* %thread_info, !dbg !9547
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !9548 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !9554, metadata !DIExpression()), !dbg !9556
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !9558, metadata !DIExpression()), !dbg !9559
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !9560, metadata !DIExpression()), !dbg !9561
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !9562, metadata !DIExpression()), !dbg !9564
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !9566, metadata !DIExpression()), !dbg !9567
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9568, metadata !DIExpression()), !dbg !9570
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9572, metadata !DIExpression()), !dbg !9573
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !9574, metadata !DIExpression()), !dbg !9575
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !9576, metadata !DIExpression()), !dbg !9577
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !9578
  %1 = load i64, i64* %nr.addr, align 8, !dbg !9579
  %div = sdiv i64 %1, 64, !dbg !9579
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !9580
  %2 = bitcast i64* %add.ptr to i8*, !dbg !9578
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !9581
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9582
  %conv.i = trunc i64 %4 to i32, !dbg !9582
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #13, !dbg !9583
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !9584
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !9584
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #13, !dbg !9584
  %7 = load i64, i64* %nr.addr, align 8, !dbg !9585
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !9585
  br i1 %8, label %cond.true, label %cond.false, !dbg !9585

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !9585
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !9585
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !9586
  %and.i = and i64 %11, 63, !dbg !9587
  %shl.i = shl i64 1, %and.i, !dbg !9588
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !9589
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !9590
  %shr.i = ashr i64 %13, 6, !dbg !9591
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !9589
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !9589
  %and1.i = and i64 %shl.i, %14, !dbg !9592
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !9593
  %conv = zext i1 %cmp.i to i32, !dbg !9585
  br label %cond.end, !dbg !9585

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !9585
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !9585
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !9594
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !9595
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #7, !dbg !9596, !srcloc !9597
  store i8 %19, i8* %oldbit.i, align 1, !dbg !9596
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !9598
  %tobool.i = trunc i8 %20 to i1, !dbg !9598
  %conv2 = zext i1 %tobool.i to i32, !dbg !9585
  br label %cond.end, !dbg !9585

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !9585
  %tobool = icmp ne i32 %cond, 0, !dbg !9585
  ret i1 %tobool, !dbg !9599
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !9600 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !9601, metadata !DIExpression()), !dbg !9602
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9603, metadata !DIExpression()), !dbg !9604
  ret i1 true, !dbg !9605
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_proc_control(%struct.usb_dev_state* %ps, %struct.usbdevfs_ctrltransfer* %ctrl) #0 !dbg !9606 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5665, metadata !DIExpression()), !dbg !9610
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !5675, metadata !DIExpression()), !dbg !9614
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !5678, metadata !DIExpression()), !dbg !9615
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval.i.i132 = alloca i1, align 1
  %addr.addr.i.i133 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i133, metadata !5056, metadata !DIExpression()), !dbg !9616
  %bytes.addr.i.i134 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i134, metadata !5077, metadata !DIExpression()), !dbg !9624
  %is_source.addr.i.i135 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i135, metadata !5079, metadata !DIExpression()), !dbg !9625
  %sz.i.i136 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i136, metadata !5081, metadata !DIExpression()), !dbg !9626
  %__ret_warn_on.i.i137 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i137, metadata !5083, metadata !DIExpression()), !dbg !9627
  %tmp.i.i138 = alloca i64, align 8
  %to.addr.i139 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i139, metadata !6977, metadata !DIExpression()), !dbg !9628
  %from.addr.i140 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i140, metadata !6979, metadata !DIExpression()), !dbg !9629
  %n.addr.i141 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i141, metadata !6981, metadata !DIExpression()), !dbg !9630
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !9631
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !9638
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !9639
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !9640
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !9641
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5087, metadata !DIExpression()), !dbg !9642
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5089, metadata !DIExpression()), !dbg !9643
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5091, metadata !DIExpression()), !dbg !9644
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %ctrl.addr = alloca %struct.usbdevfs_ctrltransfer*, align 8
  %dev = alloca %struct.usb_device*, align 8
  %tmo = alloca i32, align 4
  %tbuf = alloca i8*, align 8
  %wLength = alloca i32, align 4
  %i = alloca i32, align 4
  %pipe = alloca i32, align 4
  %ret = alloca i32, align 4
  %__UNIQUE_ID___x273 = alloca i32, align 4
  %__UNIQUE_ID___y274 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x275 = alloca i32, align 4
  %__UNIQUE_ID___y276 = alloca i32, align 4
  %tmp49 = alloca i32, align 4
  %__UNIQUE_ID___x277 = alloca i32, align 4
  %__UNIQUE_ID___y278 = alloca i32, align 4
  %tmp56 = alloca i32, align 4
  %__UNIQUE_ID___x279 = alloca i32, align 4
  %__UNIQUE_ID___y280 = alloca i32, align 4
  %tmp102 = alloca i32, align 4
  %__UNIQUE_ID___x281 = alloca i32, align 4
  %__UNIQUE_ID___y282 = alloca i32, align 4
  %tmp109 = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !9645, metadata !DIExpression()), !dbg !9646
  store %struct.usbdevfs_ctrltransfer* %ctrl, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_ctrltransfer** %ctrl.addr, metadata !9647, metadata !DIExpression()), !dbg !9648
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev, metadata !9649, metadata !DIExpression()), !dbg !9650
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !9651
  %dev1 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1, !dbg !9652
  %1 = load %struct.usb_device*, %struct.usb_device** %dev1, align 8, !dbg !9652
  store %struct.usb_device* %1, %struct.usb_device** %dev, align 8, !dbg !9650
  call void @llvm.dbg.declare(metadata i32* %tmo, metadata !9653, metadata !DIExpression()), !dbg !9654
  call void @llvm.dbg.declare(metadata i8** %tbuf, metadata !9655, metadata !DIExpression()), !dbg !9656
  call void @llvm.dbg.declare(metadata i32* %wLength, metadata !9657, metadata !DIExpression()), !dbg !9658
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9659, metadata !DIExpression()), !dbg !9660
  call void @llvm.dbg.declare(metadata i32* %pipe, metadata !9661, metadata !DIExpression()), !dbg !9662
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9663, metadata !DIExpression()), !dbg !9664
  %2 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !9665
  %3 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9666
  %bRequestType = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 0, !dbg !9667
  %4 = load i8, i8* %bRequestType, align 8, !dbg !9667
  %conv = zext i8 %4 to i32, !dbg !9666
  %5 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9668
  %bRequest = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %5, i32 0, i32 1, !dbg !9669
  %6 = load i8, i8* %bRequest, align 1, !dbg !9669
  %conv2 = zext i8 %6 to i32, !dbg !9668
  %7 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9670
  %wIndex = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %7, i32 0, i32 3, !dbg !9671
  %8 = load i16, i16* %wIndex, align 4, !dbg !9671
  %conv3 = zext i16 %8 to i32, !dbg !9670
  %call = call i32 @check_ctrlrecip(%struct.usb_dev_state* %2, i32 %conv, i32 %conv2, i32 %conv3) #11, !dbg !9672
  store i32 %call, i32* %ret, align 4, !dbg !9673
  %9 = load i32, i32* %ret, align 4, !dbg !9674
  %tobool = icmp ne i32 %9, 0, !dbg !9674
  br i1 %tobool, label %if.then, label %if.end, !dbg !9676

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %ret, align 4, !dbg !9677
  store i32 %10, i32* %retval, align 4, !dbg !9678
  br label %return, !dbg !9678

if.end:                                           ; preds = %entry
  %11 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9679
  %wLength4 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %11, i32 0, i32 4, !dbg !9680
  %12 = load i16, i16* %wLength4, align 2, !dbg !9680
  %conv5 = zext i16 %12 to i32, !dbg !9679
  store i32 %conv5, i32* %wLength, align 4, !dbg !9681
  %13 = load i32, i32* %wLength, align 4, !dbg !9682
  %conv6 = zext i32 %13 to i64, !dbg !9682
  %cmp = icmp ugt i64 %conv6, 4096, !dbg !9684
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !9685

if.then8:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !9686
  br label %return, !dbg !9686

if.end9:                                          ; preds = %if.end
  %call10 = call i32 @usbfs_increase_memory_usage(i64 4288) #11, !dbg !9687
  store i32 %call10, i32* %ret, align 4, !dbg !9688
  %14 = load i32, i32* %ret, align 4, !dbg !9689
  %tobool11 = icmp ne i32 %14, 0, !dbg !9689
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !9691

if.then12:                                        ; preds = %if.end9
  %15 = load i32, i32* %ret, align 4, !dbg !9692
  store i32 %15, i32* %retval, align 4, !dbg !9693
  br label %return, !dbg !9693

if.end13:                                         ; preds = %if.end9
  %call14 = call i64 @__get_free_pages(i32 3264, i32 0) #11, !dbg !9694
  %16 = inttoptr i64 %call14 to i8*, !dbg !9695
  store i8* %16, i8** %tbuf, align 8, !dbg !9696
  %17 = load i8*, i8** %tbuf, align 8, !dbg !9697
  %tobool15 = icmp ne i8* %17, null, !dbg !9697
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !9699

if.then16:                                        ; preds = %if.end13
  store i32 -12, i32* %ret, align 4, !dbg !9700
  br label %done, !dbg !9702

if.end17:                                         ; preds = %if.end13
  %18 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9703
  %timeout = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %18, i32 0, i32 5, !dbg !9704
  %19 = load i32, i32* %timeout, align 8, !dbg !9704
  store i32 %19, i32* %tmo, align 4, !dbg !9705
  br label %do.body, !dbg !9706

do.body:                                          ; preds = %if.end17
  %20 = load i8, i8* @usbfs_snoop, align 1, !dbg !9707
  %tobool18 = trunc i8 %20 to i1, !dbg !9707
  br i1 %tobool18, label %if.then19, label %if.end30, !dbg !9710

if.then19:                                        ; preds = %do.body
  %21 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9707
  %dev20 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %21, i32 0, i32 14, !dbg !9707
  %22 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9707
  %bRequestType21 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %22, i32 0, i32 0, !dbg !9707
  %23 = load i8, i8* %bRequestType21, align 8, !dbg !9707
  %conv22 = zext i8 %23 to i32, !dbg !9707
  %24 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9707
  %bRequest23 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %24, i32 0, i32 1, !dbg !9707
  %25 = load i8, i8* %bRequest23, align 1, !dbg !9707
  %conv24 = zext i8 %25 to i32, !dbg !9707
  %26 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9707
  %wValue = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %26, i32 0, i32 2, !dbg !9707
  %27 = load i16, i16* %wValue, align 2, !dbg !9707
  %conv25 = zext i16 %27 to i32, !dbg !9707
  %28 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9707
  %wIndex26 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %28, i32 0, i32 3, !dbg !9707
  %29 = load i16, i16* %wIndex26, align 4, !dbg !9707
  %conv27 = zext i16 %29 to i32, !dbg !9707
  %30 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9707
  %wLength28 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %30, i32 0, i32 4, !dbg !9707
  %31 = load i16, i16* %wLength28, align 2, !dbg !9707
  %conv29 = zext i16 %31 to i32, !dbg !9707
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev20, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.27, i64 0, i64 0), i32 %conv22, i32 %conv24, i32 %conv25, i32 %conv27, i32 %conv29) #12, !dbg !9707
  br label %if.end30, !dbg !9707

if.end30:                                         ; preds = %if.then19, %do.body
  br label %do.end, !dbg !9710

do.end:                                           ; preds = %if.end30
  %32 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9711
  %bRequestType31 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %32, i32 0, i32 0, !dbg !9712
  %33 = load i8, i8* %bRequestType31, align 8, !dbg !9712
  %conv32 = zext i8 %33 to i32, !dbg !9711
  %and = and i32 %conv32, 128, !dbg !9713
  %tobool33 = icmp ne i32 %and, 0, !dbg !9713
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !9714

if.then34:                                        ; preds = %do.end
  %34 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9715
  %call35 = call i32 @__create_pipe(%struct.usb_device* %34, i32 0) #11, !dbg !9715
  %or = or i32 -2147483648, %call35, !dbg !9715
  %or36 = or i32 %or, 128, !dbg !9715
  store i32 %or36, i32* %pipe, align 4, !dbg !9716
  %35 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9717
  %36 = load i32, i32* %pipe, align 4, !dbg !9718
  %37 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9719
  %wLength37 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %37, i32 0, i32 4, !dbg !9720
  %38 = load i16, i16* %wLength37, align 2, !dbg !9720
  %conv38 = zext i16 %38 to i32, !dbg !9719
  %39 = load i32, i32* %tmo, align 4, !dbg !9721
  call void @snoop_urb(%struct.usb_device* %35, i8* null, i32 %36, i32 %conv38, i32 %39, i32 0, i8* null, i32 0) #11, !dbg !9722
  %40 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9723
  %dev39 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %40, i32 0, i32 14, !dbg !9723
  call void @device_unlock(%struct.device* %dev39) #11, !dbg !9723
  %41 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9724
  %42 = load i32, i32* %pipe, align 4, !dbg !9725
  %43 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9726
  %bRequest40 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %43, i32 0, i32 1, !dbg !9727
  %44 = load i8, i8* %bRequest40, align 1, !dbg !9727
  %45 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9728
  %bRequestType41 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %45, i32 0, i32 0, !dbg !9729
  %46 = load i8, i8* %bRequestType41, align 8, !dbg !9729
  %47 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9730
  %wValue42 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %47, i32 0, i32 2, !dbg !9731
  %48 = load i16, i16* %wValue42, align 2, !dbg !9731
  %49 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9732
  %wIndex43 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %49, i32 0, i32 3, !dbg !9733
  %50 = load i16, i16* %wIndex43, align 4, !dbg !9733
  %51 = load i8*, i8** %tbuf, align 8, !dbg !9734
  %52 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9735
  %wLength44 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %52, i32 0, i32 4, !dbg !9736
  %53 = load i16, i16* %wLength44, align 2, !dbg !9736
  %54 = load i32, i32* %tmo, align 4, !dbg !9737
  %call45 = call i32 @usb_control_msg(%struct.usb_device* %41, i32 %42, i8 zeroext %44, i8 zeroext %46, i16 zeroext %48, i16 zeroext %50, i8* %51, i16 zeroext %53, i32 %54) #11, !dbg !9738
  store i32 %call45, i32* %i, align 4, !dbg !9739
  %55 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9740
  %dev46 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %55, i32 0, i32 14, !dbg !9740
  call void @device_lock(%struct.device* %dev46) #11, !dbg !9740
  %56 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9741
  %57 = load i32, i32* %pipe, align 4, !dbg !9742
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x273, metadata !9743, metadata !DIExpression()), !dbg !9745
  %58 = load i32, i32* %i, align 4, !dbg !9745
  store i32 %58, i32* %__UNIQUE_ID___x273, align 4, !dbg !9745
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y274, metadata !9746, metadata !DIExpression()), !dbg !9745
  store i32 0, i32* %__UNIQUE_ID___y274, align 4, !dbg !9745
  %59 = load i32, i32* %__UNIQUE_ID___x273, align 4, !dbg !9745
  %60 = load i32, i32* %__UNIQUE_ID___y274, align 4, !dbg !9745
  %cmp47 = icmp sgt i32 %59, %60, !dbg !9745
  br i1 %cmp47, label %cond.true, label %cond.false, !dbg !9745

cond.true:                                        ; preds = %if.then34
  %61 = load i32, i32* %__UNIQUE_ID___x273, align 4, !dbg !9745
  br label %cond.end, !dbg !9745

cond.false:                                       ; preds = %if.then34
  %62 = load i32, i32* %__UNIQUE_ID___y274, align 4, !dbg !9745
  br label %cond.end, !dbg !9745

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %61, %cond.true ], [ %62, %cond.false ], !dbg !9745
  store i32 %cond, i32* %tmp, align 4, !dbg !9745
  %63 = load i32, i32* %tmp, align 4, !dbg !9745
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x275, metadata !9747, metadata !DIExpression()), !dbg !9749
  %64 = load i32, i32* %i, align 4, !dbg !9749
  store i32 %64, i32* %__UNIQUE_ID___x275, align 4, !dbg !9749
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y276, metadata !9750, metadata !DIExpression()), !dbg !9749
  store i32 0, i32* %__UNIQUE_ID___y276, align 4, !dbg !9749
  %65 = load i32, i32* %__UNIQUE_ID___x275, align 4, !dbg !9749
  %66 = load i32, i32* %__UNIQUE_ID___y276, align 4, !dbg !9749
  %cmp50 = icmp slt i32 %65, %66, !dbg !9749
  br i1 %cmp50, label %cond.true52, label %cond.false53, !dbg !9749

cond.true52:                                      ; preds = %cond.end
  %67 = load i32, i32* %__UNIQUE_ID___x275, align 4, !dbg !9749
  br label %cond.end54, !dbg !9749

cond.false53:                                     ; preds = %cond.end
  %68 = load i32, i32* %__UNIQUE_ID___y276, align 4, !dbg !9749
  br label %cond.end54, !dbg !9749

cond.end54:                                       ; preds = %cond.false53, %cond.true52
  %cond55 = phi i32 [ %67, %cond.true52 ], [ %68, %cond.false53 ], !dbg !9749
  store i32 %cond55, i32* %tmp49, align 4, !dbg !9749
  %69 = load i32, i32* %tmp49, align 4, !dbg !9749
  %70 = load i8*, i8** %tbuf, align 8, !dbg !9751
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x277, metadata !9752, metadata !DIExpression()), !dbg !9754
  %71 = load i32, i32* %i, align 4, !dbg !9754
  store i32 %71, i32* %__UNIQUE_ID___x277, align 4, !dbg !9754
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y278, metadata !9755, metadata !DIExpression()), !dbg !9754
  store i32 0, i32* %__UNIQUE_ID___y278, align 4, !dbg !9754
  %72 = load i32, i32* %__UNIQUE_ID___x277, align 4, !dbg !9754
  %73 = load i32, i32* %__UNIQUE_ID___y278, align 4, !dbg !9754
  %cmp57 = icmp sgt i32 %72, %73, !dbg !9754
  br i1 %cmp57, label %cond.true59, label %cond.false60, !dbg !9754

cond.true59:                                      ; preds = %cond.end54
  %74 = load i32, i32* %__UNIQUE_ID___x277, align 4, !dbg !9754
  br label %cond.end61, !dbg !9754

cond.false60:                                     ; preds = %cond.end54
  %75 = load i32, i32* %__UNIQUE_ID___y278, align 4, !dbg !9754
  br label %cond.end61, !dbg !9754

cond.end61:                                       ; preds = %cond.false60, %cond.true59
  %cond62 = phi i32 [ %74, %cond.true59 ], [ %75, %cond.false60 ], !dbg !9754
  store i32 %cond62, i32* %tmp56, align 4, !dbg !9754
  %76 = load i32, i32* %tmp56, align 4, !dbg !9754
  call void @snoop_urb(%struct.usb_device* %56, i8* null, i32 %57, i32 %63, i32 %69, i32 1, i8* %70, i32 %76) #11, !dbg !9756
  %77 = load i32, i32* %i, align 4, !dbg !9757
  %cmp63 = icmp sgt i32 %77, 0, !dbg !9758
  br i1 %cmp63, label %land.lhs.true, label %if.end74, !dbg !9759

land.lhs.true:                                    ; preds = %cond.end61
  %78 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9760
  %wLength65 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %78, i32 0, i32 4, !dbg !9761
  %79 = load i16, i16* %wLength65, align 2, !dbg !9761
  %conv66 = zext i16 %79 to i32, !dbg !9760
  %tobool67 = icmp ne i32 %conv66, 0, !dbg !9760
  br i1 %tobool67, label %if.then68, label %if.end74, !dbg !9762

if.then68:                                        ; preds = %land.lhs.true
  %80 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9763
  %data = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %80, i32 0, i32 6, !dbg !9764
  %81 = load i8*, i8** %data, align 8, !dbg !9764
  %82 = load i8*, i8** %tbuf, align 8, !dbg !9765
  %83 = load i32, i32* %i, align 4, !dbg !9766
  %conv69 = sext i32 %83 to i64, !dbg !9766
  store i8* %81, i8** %to.addr.i, align 8
  store i8* %82, i8** %from.addr.i, align 8
  store i64 %conv69, i64* %n.addr.i, align 8
  %84 = load i8*, i8** %from.addr.i, align 8, !dbg !9767
  %85 = load i64, i64* %n.addr.i, align 8, !dbg !9767
  store i8* %84, i8** %addr.addr.i.i, align 8
  store i64 %85, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !9640
  %86 = load i32, i32* %sz.i.i, align 4, !dbg !9768
  %cmp.i.i = icmp sge i32 %86, 0, !dbg !9768
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !9768

land.rhs.i.i:                                     ; preds = %if.then68
  %87 = load i32, i32* %sz.i.i, align 4, !dbg !9768
  %conv.i.i = sext i32 %87 to i64, !dbg !9768
  %88 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9768
  %cmp1.i.i = icmp ult i64 %conv.i.i, %88, !dbg !9768
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.then68
  %89 = phi i1 [ false, %if.then68 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !9769
  %lnot.i.i = xor i1 %89, true, !dbg !9768
  %lnot.ext.i.i = zext i1 %89 to i32, !dbg !9768
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9768
  br i1 %89, label %if.then.i.i, label %if.end10.i.i, !dbg !9770

if.then.i.i:                                      ; preds = %land.end.i.i
  %90 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9771
  %91 = call i1 @llvm.is.constant.i64(i64 %90) #7, !dbg !9772
  br i1 %91, label %if.else.i.i, label %if.then5.i.i, !dbg !9773

if.then5.i.i:                                     ; preds = %if.then.i.i
  %92 = load i32, i32* %sz.i.i, align 4, !dbg !9774
  %93 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9775
  call void @copy_overflow(i32 %92, i64 %93) #13, !dbg !9776
  br label %if.end9.i.i, !dbg !9776

if.else.i.i:                                      ; preds = %if.then.i.i
  %94 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9777
  %tobool6.i.i = trunc i8 %94 to i1, !dbg !9777
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !9778

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !9779
  br label %if.end.i.i, !dbg !9779

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !9780
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9781
  br label %check_copy_size.exit.i, !dbg !9781

if.end10.i.i:                                     ; preds = %land.end.i.i
  %95 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9641
  %cmp11.i.i = icmp ugt i64 %95, 2147483647, !dbg !9641
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !9641
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !9641
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !9641
  %96 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9782
  %tobool17.i.i = icmp ne i32 %96, 0, !dbg !9782
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !9782
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !9782
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !9782
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !9641

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !9783, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !9784, !srcloc !5212
  br label %if.end31.i.i, !dbg !9785

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %97 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9641
  %tobool32.i.i = icmp ne i32 %97, 0, !dbg !9641
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !9641
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !9641
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !9641
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !9782
  %98 = load i64, i64* %tmp.i.i, align 8, !dbg !9641
  %tobool38.i.i = icmp ne i64 %98, 0, !dbg !9786
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !9787

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9788
  br label %check_copy_size.exit.i, !dbg !9788

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %99 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !9789
  %100 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9790
  %101 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9791
  %tobool41.i.i = trunc i8 %101 to i1, !dbg !9791
  call void @check_object_size(i8* %99, i64 %100, i1 zeroext %tobool41.i.i) #13, !dbg !9792
  store i1 true, i1* %retval.i.i, align 1, !dbg !9793
  br label %check_copy_size.exit.i, !dbg !9793

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %102 = load i1, i1* %retval.i.i, align 1, !dbg !9794
  %lnot.i = xor i1 %102, true, !dbg !9767
  %lnot.ext.i = zext i1 %102 to i32, !dbg !9767
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !9767
  br i1 %102, label %if.then.i, label %copy_to_user.exit, !dbg !9795

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %103 = load i8*, i8** %to.addr.i, align 8, !dbg !9796
  %104 = load i8*, i8** %from.addr.i, align 8, !dbg !9797
  %105 = load i64, i64* %n.addr.i, align 8, !dbg !9798
  %call2.i = call i64 @_copy_to_user(i8* %103, i8* %104, i64 %105) #13, !dbg !9799
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !9800
  br label %copy_to_user.exit, !dbg !9801

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %106 = load i64, i64* %n.addr.i, align 8, !dbg !9802
  %tobool71 = icmp ne i64 %106, 0, !dbg !9803
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !9804

if.then72:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %ret, align 4, !dbg !9805
  br label %done, !dbg !9807

if.end73:                                         ; preds = %copy_to_user.exit
  br label %if.end74, !dbg !9808

if.end74:                                         ; preds = %if.end73, %land.lhs.true, %cond.end61
  br label %if.end116, !dbg !9809

if.else:                                          ; preds = %do.end
  %107 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9810
  %wLength75 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %107, i32 0, i32 4, !dbg !9811
  %108 = load i16, i16* %wLength75, align 2, !dbg !9811
  %tobool76 = icmp ne i16 %108, 0, !dbg !9810
  br i1 %tobool76, label %if.then77, label %if.end85, !dbg !9812

if.then77:                                        ; preds = %if.else
  %109 = load i8*, i8** %tbuf, align 8, !dbg !9813
  %110 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9814
  %data78 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %110, i32 0, i32 6, !dbg !9815
  %111 = load i8*, i8** %data78, align 8, !dbg !9815
  %112 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9816
  %wLength79 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %112, i32 0, i32 4, !dbg !9817
  %113 = load i16, i16* %wLength79, align 2, !dbg !9817
  %conv80 = zext i16 %113 to i64, !dbg !9816
  store i8* %109, i8** %to.addr.i139, align 8
  store i8* %111, i8** %from.addr.i140, align 8
  store i64 %conv80, i64* %n.addr.i141, align 8
  %114 = load i8*, i8** %to.addr.i139, align 8, !dbg !9818
  %115 = load i64, i64* %n.addr.i141, align 8, !dbg !9818
  store i8* %114, i8** %addr.addr.i.i133, align 8
  store i64 %115, i64* %bytes.addr.i.i134, align 8
  store i8 0, i8* %is_source.addr.i.i135, align 1
  store i32 -1, i32* %sz.i.i136, align 4, !dbg !9626
  %116 = load i32, i32* %sz.i.i136, align 4, !dbg !9819
  %cmp.i.i142 = icmp sge i32 %116, 0, !dbg !9819
  br i1 %cmp.i.i142, label %land.rhs.i.i145, label %land.end.i.i149, !dbg !9819

land.rhs.i.i145:                                  ; preds = %if.then77
  %117 = load i32, i32* %sz.i.i136, align 4, !dbg !9819
  %conv.i.i143 = sext i32 %117 to i64, !dbg !9819
  %118 = load i64, i64* %bytes.addr.i.i134, align 8, !dbg !9819
  %cmp1.i.i144 = icmp ult i64 %conv.i.i143, %118, !dbg !9819
  br label %land.end.i.i149

land.end.i.i149:                                  ; preds = %land.rhs.i.i145, %if.then77
  %119 = phi i1 [ false, %if.then77 ], [ %cmp1.i.i144, %land.rhs.i.i145 ], !dbg !9820
  %lnot.i.i146 = xor i1 %119, true, !dbg !9819
  %lnot.ext.i.i147 = zext i1 %119 to i32, !dbg !9819
  %conv4.i.i148 = sext i32 %lnot.ext.i.i147 to i64, !dbg !9819
  br i1 %119, label %if.then.i.i150, label %if.end10.i.i165, !dbg !9821

if.then.i.i150:                                   ; preds = %land.end.i.i149
  %120 = load i64, i64* %bytes.addr.i.i134, align 8, !dbg !9822
  %121 = call i1 @llvm.is.constant.i64(i64 %120) #7, !dbg !9823
  br i1 %121, label %if.else.i.i153, label %if.then5.i.i151, !dbg !9824

if.then5.i.i151:                                  ; preds = %if.then.i.i150
  %122 = load i32, i32* %sz.i.i136, align 4, !dbg !9825
  %123 = load i64, i64* %bytes.addr.i.i134, align 8, !dbg !9826
  call void @copy_overflow(i32 %122, i64 %123) #13, !dbg !9827
  br label %if.end9.i.i157, !dbg !9827

if.else.i.i153:                                   ; preds = %if.then.i.i150
  %124 = load i8, i8* %is_source.addr.i.i135, align 1, !dbg !9828
  %tobool6.i.i152 = trunc i8 %124 to i1, !dbg !9828
  br i1 %tobool6.i.i152, label %if.then7.i.i154, label %if.else8.i.i155, !dbg !9829

if.then7.i.i154:                                  ; preds = %if.else.i.i153
  call void @__bad_copy_from() #13, !dbg !9830
  br label %if.end.i.i156, !dbg !9830

if.else8.i.i155:                                  ; preds = %if.else.i.i153
  call void @__bad_copy_to() #13, !dbg !9831
  br label %if.end.i.i156

if.end.i.i156:                                    ; preds = %if.else8.i.i155, %if.then7.i.i154
  br label %if.end9.i.i157

if.end9.i.i157:                                   ; preds = %if.end.i.i156, %if.then5.i.i151
  store i1 false, i1* %retval.i.i132, align 1, !dbg !9832
  br label %check_copy_size.exit.i179, !dbg !9832

if.end10.i.i165:                                  ; preds = %land.end.i.i149
  %125 = load i64, i64* %bytes.addr.i.i134, align 8, !dbg !9627
  %cmp11.i.i158 = icmp ugt i64 %125, 2147483647, !dbg !9627
  %lnot13.i.i159 = xor i1 %cmp11.i.i158, true, !dbg !9627
  %lnot.ext16.i.i160 = zext i1 %cmp11.i.i158 to i32, !dbg !9627
  store i32 %lnot.ext16.i.i160, i32* %__ret_warn_on.i.i137, align 4, !dbg !9627
  %126 = load i32, i32* %__ret_warn_on.i.i137, align 4, !dbg !9833
  %tobool17.i.i161 = icmp ne i32 %126, 0, !dbg !9833
  %lnot18.i.i162 = xor i1 %tobool17.i.i161, true, !dbg !9833
  %lnot.ext21.i.i163 = zext i1 %tobool17.i.i161 to i32, !dbg !9833
  %conv22.i.i164 = sext i32 %lnot.ext21.i.i163 to i64, !dbg !9833
  br i1 %tobool17.i.i161, label %if.then24.i.i166, label %if.end31.i.i172, !dbg !9627

if.then24.i.i166:                                 ; preds = %if.end10.i.i165
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !9834, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !9835, !srcloc !5212
  br label %if.end31.i.i172, !dbg !9836

if.end31.i.i172:                                  ; preds = %if.then24.i.i166, %if.end10.i.i165
  %127 = load i32, i32* %__ret_warn_on.i.i137, align 4, !dbg !9627
  %tobool32.i.i167 = icmp ne i32 %127, 0, !dbg !9627
  %lnot33.i.i168 = xor i1 %tobool32.i.i167, true, !dbg !9627
  %lnot.ext36.i.i169 = zext i1 %tobool32.i.i167 to i32, !dbg !9627
  %conv37.i.i170 = sext i32 %lnot.ext36.i.i169 to i64, !dbg !9627
  store i64 %conv37.i.i170, i64* %tmp.i.i138, align 8, !dbg !9833
  %128 = load i64, i64* %tmp.i.i138, align 8, !dbg !9627
  %tobool38.i.i171 = icmp ne i64 %128, 0, !dbg !9837
  br i1 %tobool38.i.i171, label %if.then39.i.i173, label %if.end40.i.i175, !dbg !9838

if.then39.i.i173:                                 ; preds = %if.end31.i.i172
  store i1 false, i1* %retval.i.i132, align 1, !dbg !9839
  br label %check_copy_size.exit.i179, !dbg !9839

if.end40.i.i175:                                  ; preds = %if.end31.i.i172
  %129 = load i8*, i8** %addr.addr.i.i133, align 8, !dbg !9840
  %130 = load i64, i64* %bytes.addr.i.i134, align 8, !dbg !9841
  %131 = load i8, i8* %is_source.addr.i.i135, align 1, !dbg !9842
  %tobool41.i.i174 = trunc i8 %131 to i1, !dbg !9842
  call void @check_object_size(i8* %129, i64 %130, i1 zeroext %tobool41.i.i174) #13, !dbg !9843
  store i1 true, i1* %retval.i.i132, align 1, !dbg !9844
  br label %check_copy_size.exit.i179, !dbg !9844

check_copy_size.exit.i179:                        ; preds = %if.end40.i.i175, %if.then39.i.i173, %if.end9.i.i157
  %132 = load i1, i1* %retval.i.i132, align 1, !dbg !9845
  %lnot.i176 = xor i1 %132, true, !dbg !9818
  %lnot.ext.i177 = zext i1 %132 to i32, !dbg !9818
  %conv.i178 = sext i32 %lnot.ext.i177 to i64, !dbg !9818
  br i1 %132, label %if.then.i181, label %copy_from_user.exit, !dbg !9846

if.then.i181:                                     ; preds = %check_copy_size.exit.i179
  %133 = load i8*, i8** %to.addr.i139, align 8, !dbg !9847
  %134 = load i8*, i8** %from.addr.i140, align 8, !dbg !9848
  %135 = load i64, i64* %n.addr.i141, align 8, !dbg !9849
  %call2.i180 = call i64 @_copy_from_user(i8* %133, i8* %134, i64 %135) #13, !dbg !9850
  store i64 %call2.i180, i64* %n.addr.i141, align 8, !dbg !9851
  br label %copy_from_user.exit, !dbg !9852

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i179, %if.then.i181
  %136 = load i64, i64* %n.addr.i141, align 8, !dbg !9853
  %tobool82 = icmp ne i64 %136, 0, !dbg !9854
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !9855

if.then83:                                        ; preds = %copy_from_user.exit
  store i32 -14, i32* %ret, align 4, !dbg !9856
  br label %done, !dbg !9858

if.end84:                                         ; preds = %copy_from_user.exit
  br label %if.end85, !dbg !9859

if.end85:                                         ; preds = %if.end84, %if.else
  %137 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9860
  %call86 = call i32 @__create_pipe(%struct.usb_device* %137, i32 0) #11, !dbg !9860
  %or87 = or i32 -2147483648, %call86, !dbg !9860
  store i32 %or87, i32* %pipe, align 4, !dbg !9861
  %138 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9862
  %139 = load i32, i32* %pipe, align 4, !dbg !9863
  %140 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9864
  %wLength88 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %140, i32 0, i32 4, !dbg !9865
  %141 = load i16, i16* %wLength88, align 2, !dbg !9865
  %conv89 = zext i16 %141 to i32, !dbg !9864
  %142 = load i32, i32* %tmo, align 4, !dbg !9866
  %143 = load i8*, i8** %tbuf, align 8, !dbg !9867
  %144 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9868
  %wLength90 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %144, i32 0, i32 4, !dbg !9869
  %145 = load i16, i16* %wLength90, align 2, !dbg !9869
  %conv91 = zext i16 %145 to i32, !dbg !9868
  call void @snoop_urb(%struct.usb_device* %138, i8* null, i32 %139, i32 %conv89, i32 %142, i32 0, i8* %143, i32 %conv91) #11, !dbg !9870
  %146 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9871
  %dev92 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %146, i32 0, i32 14, !dbg !9871
  call void @device_unlock(%struct.device* %dev92) #11, !dbg !9871
  %147 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9872
  %148 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9873
  %call93 = call i32 @__create_pipe(%struct.usb_device* %148, i32 0) #11, !dbg !9873
  %or94 = or i32 -2147483648, %call93, !dbg !9873
  %149 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9874
  %bRequest95 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %149, i32 0, i32 1, !dbg !9875
  %150 = load i8, i8* %bRequest95, align 1, !dbg !9875
  %151 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9876
  %bRequestType96 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %151, i32 0, i32 0, !dbg !9877
  %152 = load i8, i8* %bRequestType96, align 8, !dbg !9877
  %153 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9878
  %wValue97 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %153, i32 0, i32 2, !dbg !9879
  %154 = load i16, i16* %wValue97, align 2, !dbg !9879
  %155 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9880
  %wIndex98 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %155, i32 0, i32 3, !dbg !9881
  %156 = load i16, i16* %wIndex98, align 4, !dbg !9881
  %157 = load i8*, i8** %tbuf, align 8, !dbg !9882
  %158 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9883
  %wLength99 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %158, i32 0, i32 4, !dbg !9884
  %159 = load i16, i16* %wLength99, align 2, !dbg !9884
  %160 = load i32, i32* %tmo, align 4, !dbg !9885
  %call100 = call i32 @usb_control_msg(%struct.usb_device* %147, i32 %or94, i8 zeroext %150, i8 zeroext %152, i16 zeroext %154, i16 zeroext %156, i8* %157, i16 zeroext %159, i32 %160) #11, !dbg !9886
  store i32 %call100, i32* %i, align 4, !dbg !9887
  %161 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9888
  %dev101 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %161, i32 0, i32 14, !dbg !9888
  call void @device_lock(%struct.device* %dev101) #11, !dbg !9888
  %162 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9889
  %163 = load i32, i32* %pipe, align 4, !dbg !9890
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x279, metadata !9891, metadata !DIExpression()), !dbg !9893
  %164 = load i32, i32* %i, align 4, !dbg !9893
  store i32 %164, i32* %__UNIQUE_ID___x279, align 4, !dbg !9893
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y280, metadata !9894, metadata !DIExpression()), !dbg !9893
  store i32 0, i32* %__UNIQUE_ID___y280, align 4, !dbg !9893
  %165 = load i32, i32* %__UNIQUE_ID___x279, align 4, !dbg !9893
  %166 = load i32, i32* %__UNIQUE_ID___y280, align 4, !dbg !9893
  %cmp103 = icmp sgt i32 %165, %166, !dbg !9893
  br i1 %cmp103, label %cond.true105, label %cond.false106, !dbg !9893

cond.true105:                                     ; preds = %if.end85
  %167 = load i32, i32* %__UNIQUE_ID___x279, align 4, !dbg !9893
  br label %cond.end107, !dbg !9893

cond.false106:                                    ; preds = %if.end85
  %168 = load i32, i32* %__UNIQUE_ID___y280, align 4, !dbg !9893
  br label %cond.end107, !dbg !9893

cond.end107:                                      ; preds = %cond.false106, %cond.true105
  %cond108 = phi i32 [ %167, %cond.true105 ], [ %168, %cond.false106 ], !dbg !9893
  store i32 %cond108, i32* %tmp102, align 4, !dbg !9893
  %169 = load i32, i32* %tmp102, align 4, !dbg !9893
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x281, metadata !9895, metadata !DIExpression()), !dbg !9897
  %170 = load i32, i32* %i, align 4, !dbg !9897
  store i32 %170, i32* %__UNIQUE_ID___x281, align 4, !dbg !9897
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y282, metadata !9898, metadata !DIExpression()), !dbg !9897
  store i32 0, i32* %__UNIQUE_ID___y282, align 4, !dbg !9897
  %171 = load i32, i32* %__UNIQUE_ID___x281, align 4, !dbg !9897
  %172 = load i32, i32* %__UNIQUE_ID___y282, align 4, !dbg !9897
  %cmp110 = icmp slt i32 %171, %172, !dbg !9897
  br i1 %cmp110, label %cond.true112, label %cond.false113, !dbg !9897

cond.true112:                                     ; preds = %cond.end107
  %173 = load i32, i32* %__UNIQUE_ID___x281, align 4, !dbg !9897
  br label %cond.end114, !dbg !9897

cond.false113:                                    ; preds = %cond.end107
  %174 = load i32, i32* %__UNIQUE_ID___y282, align 4, !dbg !9897
  br label %cond.end114, !dbg !9897

cond.end114:                                      ; preds = %cond.false113, %cond.true112
  %cond115 = phi i32 [ %173, %cond.true112 ], [ %174, %cond.false113 ], !dbg !9897
  store i32 %cond115, i32* %tmp109, align 4, !dbg !9897
  %175 = load i32, i32* %tmp109, align 4, !dbg !9897
  call void @snoop_urb(%struct.usb_device* %162, i8* null, i32 %163, i32 %169, i32 %175, i32 1, i8* null, i32 0) #11, !dbg !9899
  br label %if.end116

if.end116:                                        ; preds = %cond.end114, %if.end74
  %176 = load i32, i32* %i, align 4, !dbg !9900
  %cmp117 = icmp slt i32 %176, 0, !dbg !9901
  br i1 %cmp117, label %land.lhs.true119, label %if.end131, !dbg !9902

land.lhs.true119:                                 ; preds = %if.end116
  %177 = load i32, i32* %i, align 4, !dbg !9903
  %cmp120 = icmp ne i32 %177, -32, !dbg !9904
  br i1 %cmp120, label %if.then122, label %if.end131, !dbg !9905

if.then122:                                       ; preds = %land.lhs.true119
  %178 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9906
  %dev123 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %178, i32 0, i32 14, !dbg !9907
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !9614
  %179 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !9614
  %180 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !9615, !srcloc !5776
  store i64 %180, i64* %pfo_val__.i, align 8, !dbg !9615
  %181 = load i64, i64* %pfo_val__.i, align 8, !dbg !9615
  %182 = inttoptr i64 %181 to %struct.task_struct*, !dbg !9615
  store %struct.task_struct* %182, %struct.task_struct** %tmp.i, align 8, !dbg !9615
  %183 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !9615
  store %struct.task_struct* %183, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9610
  %184 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9610
  store %struct.task_struct* %184, %struct.task_struct** %tmp1.i, align 8, !dbg !9610
  %185 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !9610
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %185, i32 0, i32 68, !dbg !9908
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !9909
  %186 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9910
  %bRequestType125 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %186, i32 0, i32 0, !dbg !9911
  %187 = load i8, i8* %bRequestType125, align 8, !dbg !9911
  %conv126 = zext i8 %187 to i32, !dbg !9910
  %188 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9912
  %bRequest127 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %188, i32 0, i32 1, !dbg !9913
  %189 = load i8, i8* %bRequest127, align 1, !dbg !9913
  %conv128 = zext i8 %189 to i32, !dbg !9912
  %190 = load %struct.usbdevfs_ctrltransfer*, %struct.usbdevfs_ctrltransfer** %ctrl.addr, align 8, !dbg !9914
  %wLength129 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %190, i32 0, i32 4, !dbg !9915
  %191 = load i16, i16* %wLength129, align 2, !dbg !9915
  %conv130 = zext i16 %191 to i32, !dbg !9914
  %192 = load i32, i32* %i, align 4, !dbg !9916
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0), %struct.device* %dev123, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.29, i64 0, i64 0), i8* %arraydecay, i32 %conv126, i32 %conv128, i32 %conv130, i32 %192) #12, !dbg !9917
  br label %if.end131, !dbg !9918

if.end131:                                        ; preds = %if.then122, %land.lhs.true119, %if.end116
  %193 = load i32, i32* %i, align 4, !dbg !9919
  store i32 %193, i32* %ret, align 4, !dbg !9920
  br label %done, !dbg !9921

done:                                             ; preds = %if.end131, %if.then83, %if.then72, %if.then16
  call void @llvm.dbg.label(metadata !9922), !dbg !9923
  %194 = load i8*, i8** %tbuf, align 8, !dbg !9924
  %195 = ptrtoint i8* %194 to i64, !dbg !9924
  call void @free_pages(i64 %195, i32 0) #11, !dbg !9924
  call void @usbfs_decrease_memory_usage(i64 4288) #11, !dbg !9925
  %196 = load i32, i32* %ret, align 4, !dbg !9926
  store i32 %196, i32* %retval, align 4, !dbg !9927
  br label %return, !dbg !9927

return:                                           ; preds = %done, %if.then12, %if.then8, %if.then
  %197 = load i32, i32* %retval, align 4, !dbg !9928
  ret i32 %197, !dbg !9928
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @check_ctrlrecip(%struct.usb_dev_state* %ps, i32 %requesttype, i32 %request, i32 %index) #0 !dbg !9929 {
entry:
  %pscr_ret__.i55 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i55, metadata !5665, metadata !DIExpression()), !dbg !9932
  %__vpp_verify.i56 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i56, metadata !5675, metadata !DIExpression()), !dbg !9938
  %pfo_val__.i57 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i57, metadata !5678, metadata !DIExpression()), !dbg !9939
  %tmp.i58 = alloca %struct.task_struct*, align 8
  %tmp1.i59 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5665, metadata !DIExpression()), !dbg !9940
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !5675, metadata !DIExpression()), !dbg !9942
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !5678, metadata !DIExpression()), !dbg !9943
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %requesttype.addr = alloca i32, align 4
  %request.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %alt_setting = alloca %struct.usb_host_interface*, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !9944, metadata !DIExpression()), !dbg !9945
  store i32 %requesttype, i32* %requesttype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %requesttype.addr, metadata !9946, metadata !DIExpression()), !dbg !9947
  store i32 %request, i32* %request.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %request.addr, metadata !9948, metadata !DIExpression()), !dbg !9949
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !9950, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9952, metadata !DIExpression()), !dbg !9953
  store i32 0, i32* %ret, align 4, !dbg !9953
  call void @llvm.dbg.declare(metadata %struct.usb_host_interface** %alt_setting, metadata !9954, metadata !DIExpression()), !dbg !9955
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !9956
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1, !dbg !9958
  %1 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9958
  %state = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 3, !dbg !9959
  %2 = load i32, i32* %state, align 8, !dbg !9959
  %cmp = icmp ne i32 %2, 4, !dbg !9960
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9961

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !9962
  %dev1 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %3, i32 0, i32 1, !dbg !9963
  %4 = load %struct.usb_device*, %struct.usb_device** %dev1, align 8, !dbg !9963
  %state2 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 3, !dbg !9964
  %5 = load i32, i32* %state2, align 8, !dbg !9964
  %cmp3 = icmp ne i32 %5, 6, !dbg !9965
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !9966

land.lhs.true4:                                   ; preds = %land.lhs.true
  %6 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !9967
  %dev5 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 1, !dbg !9968
  %7 = load %struct.usb_device*, %struct.usb_device** %dev5, align 8, !dbg !9968
  %state6 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 3, !dbg !9969
  %8 = load i32, i32* %state6, align 8, !dbg !9969
  %cmp7 = icmp ne i32 %8, 7, !dbg !9970
  br i1 %cmp7, label %if.then, label %if.end, !dbg !9971

if.then:                                          ; preds = %land.lhs.true4
  store i32 -113, i32* %retval, align 4, !dbg !9972
  br label %return, !dbg !9972

if.end:                                           ; preds = %land.lhs.true4, %land.lhs.true, %entry
  %9 = load i32, i32* %requesttype.addr, align 4, !dbg !9973
  %and = and i32 96, %9, !dbg !9975
  %cmp8 = icmp eq i32 64, %and, !dbg !9976
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !9977

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9978
  br label %return, !dbg !9978

if.end10:                                         ; preds = %if.end
  %10 = load i32, i32* %requesttype.addr, align 4, !dbg !9979
  %cmp11 = icmp eq i32 %10, 161, !dbg !9981
  br i1 %cmp11, label %land.lhs.true12, label %if.end22, !dbg !9982

land.lhs.true12:                                  ; preds = %if.end10
  %11 = load i32, i32* %request.addr, align 4, !dbg !9983
  %cmp13 = icmp eq i32 %11, 0, !dbg !9984
  br i1 %cmp13, label %if.then14, label %if.end22, !dbg !9985

if.then14:                                        ; preds = %land.lhs.true12
  %12 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !9986
  %dev15 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %12, i32 0, i32 1, !dbg !9988
  %13 = load %struct.usb_device*, %struct.usb_device** %dev15, align 8, !dbg !9988
  %actconfig = getelementptr inbounds %struct.usb_device, %struct.usb_device* %13, i32 0, i32 19, !dbg !9989
  %14 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !9989
  %15 = load i32, i32* %index.addr, align 4, !dbg !9990
  %shr = lshr i32 %15, 8, !dbg !9991
  %16 = load i32, i32* %index.addr, align 4, !dbg !9992
  %and16 = and i32 %16, 255, !dbg !9993
  %call = call %struct.usb_host_interface* @usb_find_alt_setting(%struct.usb_host_config* %14, i32 %shr, i32 %and16) #11, !dbg !9994
  store %struct.usb_host_interface* %call, %struct.usb_host_interface** %alt_setting, align 8, !dbg !9995
  %17 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alt_setting, align 8, !dbg !9996
  %tobool = icmp ne %struct.usb_host_interface* %17, null, !dbg !9996
  br i1 %tobool, label %land.lhs.true17, label %if.end21, !dbg !9998

land.lhs.true17:                                  ; preds = %if.then14
  %18 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alt_setting, align 8, !dbg !9999
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %18, i32 0, i32 0, !dbg !10000
  %bInterfaceClass = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 5, !dbg !10001
  %19 = load i8, i8* %bInterfaceClass, align 1, !dbg !10001
  %conv = zext i8 %19 to i32, !dbg !9999
  %cmp18 = icmp eq i32 %conv, 7, !dbg !10002
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !10003

if.then20:                                        ; preds = %land.lhs.true17
  store i32 0, i32* %retval, align 4, !dbg !10004
  br label %return, !dbg !10004

if.end21:                                         ; preds = %land.lhs.true17, %if.then14
  br label %if.end22, !dbg !10005

if.end22:                                         ; preds = %if.end21, %land.lhs.true12, %if.end10
  %20 = load i32, i32* %index.addr, align 4, !dbg !10006
  %and23 = and i32 %20, 255, !dbg !10006
  store i32 %and23, i32* %index.addr, align 4, !dbg !10006
  %21 = load i32, i32* %requesttype.addr, align 4, !dbg !10007
  %and24 = and i32 %21, 31, !dbg !10008
  switch i32 %and24, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb53
  ], !dbg !10009

sw.bb:                                            ; preds = %if.end22
  %22 = load i32, i32* %index.addr, align 4, !dbg !10010
  %and25 = and i32 %22, -129, !dbg !10012
  %cmp26 = icmp eq i32 %and25, 0, !dbg !10013
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !10014

if.then28:                                        ; preds = %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !10015
  br label %return, !dbg !10015

if.end29:                                         ; preds = %sw.bb
  %23 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10016
  %dev30 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %23, i32 0, i32 1, !dbg !10017
  %24 = load %struct.usb_device*, %struct.usb_device** %dev30, align 8, !dbg !10017
  %25 = load i32, i32* %index.addr, align 4, !dbg !10018
  %call31 = call i32 @findintfep(%struct.usb_device* %24, i32 %25) #11, !dbg !10019
  store i32 %call31, i32* %ret, align 4, !dbg !10020
  %26 = load i32, i32* %ret, align 4, !dbg !10021
  %cmp32 = icmp slt i32 %26, 0, !dbg !10022
  br i1 %cmp32, label %if.then34, label %if.end47, !dbg !10023

if.then34:                                        ; preds = %if.end29
  %27 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10024
  %dev35 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %27, i32 0, i32 1, !dbg !10025
  %28 = load %struct.usb_device*, %struct.usb_device** %dev35, align 8, !dbg !10025
  %29 = load i32, i32* %index.addr, align 4, !dbg !10026
  %xor = xor i32 %29, 128, !dbg !10027
  %call36 = call i32 @findintfep(%struct.usb_device* %28, i32 %xor) #11, !dbg !10028
  store i32 %call36, i32* %ret, align 4, !dbg !10029
  %30 = load i32, i32* %ret, align 4, !dbg !10030
  %cmp37 = icmp sge i32 %30, 0, !dbg !10031
  br i1 %cmp37, label %if.then39, label %if.end46, !dbg !10032

if.then39:                                        ; preds = %if.then34
  %31 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10033
  %dev40 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %31, i32 0, i32 1, !dbg !10033
  %32 = load %struct.usb_device*, %struct.usb_device** %dev40, align 8, !dbg !10033
  %dev41 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %32, i32 0, i32 14, !dbg !10033
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !9942
  %33 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !9942
  %34 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !9943, !srcloc !5776
  store i64 %34, i64* %pfo_val__.i, align 8, !dbg !9943
  %35 = load i64, i64* %pfo_val__.i, align 8, !dbg !9943
  %36 = inttoptr i64 %35 to %struct.task_struct*, !dbg !9943
  store %struct.task_struct* %36, %struct.task_struct** %tmp.i, align 8, !dbg !9943
  %37 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !9943
  store %struct.task_struct* %37, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9940
  %38 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9940
  store %struct.task_struct* %38, %struct.task_struct** %tmp1.i, align 8, !dbg !9940
  %39 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !9940
  %call43 = call i32 @task_pid_nr(%struct.task_struct* %39) #11, !dbg !10033
  store i8* null, i8** %__vpp_verify.i56, align 8, !dbg !9938
  %40 = load i8*, i8** %__vpp_verify.i56, align 8, !dbg !9938
  %41 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !9939, !srcloc !5776
  store i64 %41, i64* %pfo_val__.i57, align 8, !dbg !9939
  %42 = load i64, i64* %pfo_val__.i57, align 8, !dbg !9939
  %43 = inttoptr i64 %42 to %struct.task_struct*, !dbg !9939
  store %struct.task_struct* %43, %struct.task_struct** %tmp.i58, align 8, !dbg !9939
  %44 = load %struct.task_struct*, %struct.task_struct** %tmp.i58, align 8, !dbg !9939
  store %struct.task_struct* %44, %struct.task_struct** %pscr_ret__.i55, align 8, !dbg !9932
  %45 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i55, align 8, !dbg !9932
  store %struct.task_struct* %45, %struct.task_struct** %tmp1.i59, align 8, !dbg !9932
  %46 = load %struct.task_struct*, %struct.task_struct** %tmp1.i59, align 8, !dbg !9932
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %46, i32 0, i32 68, !dbg !10033
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !10033
  %47 = load i32, i32* %index.addr, align 4, !dbg !10033
  %48 = load i32, i32* %index.addr, align 4, !dbg !10033
  %xor45 = xor i32 %48, 128, !dbg !10033
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev41, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.check_ctrlrecip, i64 0, i64 0), i32 %call43, i8* %arraydecay, i32 %47, i32 %xor45) #12, !dbg !10033
  br label %if.end46, !dbg !10033

if.end46:                                         ; preds = %if.then39, %if.then34
  br label %if.end47, !dbg !10034

if.end47:                                         ; preds = %if.end46, %if.end29
  %49 = load i32, i32* %ret, align 4, !dbg !10035
  %cmp48 = icmp sge i32 %49, 0, !dbg !10037
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !10038

if.then50:                                        ; preds = %if.end47
  %50 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10039
  %51 = load i32, i32* %ret, align 4, !dbg !10040
  %call51 = call i32 @checkintf(%struct.usb_dev_state* %50, i32 %51) #11, !dbg !10041
  store i32 %call51, i32* %ret, align 4, !dbg !10042
  br label %if.end52, !dbg !10043

if.end52:                                         ; preds = %if.then50, %if.end47
  br label %sw.epilog, !dbg !10044

sw.bb53:                                          ; preds = %if.end22
  %52 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10045
  %53 = load i32, i32* %index.addr, align 4, !dbg !10046
  %call54 = call i32 @checkintf(%struct.usb_dev_state* %52, i32 %53) #11, !dbg !10047
  store i32 %call54, i32* %ret, align 4, !dbg !10048
  br label %sw.epilog, !dbg !10049

sw.epilog:                                        ; preds = %if.end22, %sw.bb53, %if.end52
  %54 = load i32, i32* %ret, align 4, !dbg !10050
  store i32 %54, i32* %retval, align 4, !dbg !10051
  br label %return, !dbg !10051

return:                                           ; preds = %sw.epilog, %if.then28, %if.then20, %if.then9, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !10052
  ret i32 %55, !dbg !10052
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usbfs_increase_memory_usage(i64 %amount) #0 !dbg !10053 {
entry:
  %v.addr.i.i9 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i9, metadata !9331, metadata !DIExpression()), !dbg !10056
  %size.addr.i.i10 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i10, metadata !9335, metadata !DIExpression()), !dbg !10061
  %i.addr.i11 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr.i11, metadata !9469, metadata !DIExpression()), !dbg !10062
  %v.addr.i12 = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i12, metadata !9471, metadata !DIExpression()), !dbg !10063
  %v.addr.i.i4 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i4, metadata !9568, metadata !DIExpression()), !dbg !10064
  %size.addr.i.i5 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i5, metadata !9572, metadata !DIExpression()), !dbg !10072
  %v.addr.i6 = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i6, metadata !10073, metadata !DIExpression()), !dbg !10074
  %i.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr.i.i, metadata !10075, metadata !DIExpression()), !dbg !10077
  %v.addr.i1.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i1.i, metadata !10081, metadata !DIExpression()), !dbg !10082
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !9331, metadata !DIExpression()), !dbg !10083
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9335, metadata !DIExpression()), !dbg !10085
  %i.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i.addr.i, metadata !10086, metadata !DIExpression()), !dbg !10087
  %v.addr.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i, metadata !10088, metadata !DIExpression()), !dbg !10089
  %retval = alloca i32, align 4
  %amount.addr = alloca i64, align 8
  %lim = alloca i64, align 8
  %tmp = alloca i32, align 4
  store i64 %amount, i64* %amount.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %amount.addr, metadata !10090, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.declare(metadata i64* %lim, metadata !10092, metadata !DIExpression()), !dbg !10093
  br label %do.body, !dbg !10094

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10096

do.end:                                           ; preds = %do.body
  %0 = load volatile i32, i32* @usbfs_memory_mb, align 4, !dbg !10094
  store i32 %0, i32* %tmp, align 4, !dbg !10096
  %1 = load i32, i32* %tmp, align 4, !dbg !10094
  %conv = zext i32 %1 to i64, !dbg !10098
  store i64 %conv, i64* %lim, align 8, !dbg !10099
  %2 = load i64, i64* %lim, align 8, !dbg !10100
  %shl = shl i64 %2, 20, !dbg !10100
  store i64 %shl, i64* %lim, align 8, !dbg !10100
  %3 = load i64, i64* %amount.addr, align 8, !dbg !10101
  store i64 %3, i64* %i.addr.i, align 8
  store %struct.atomic64_t* @usbfs_memory_usage, %struct.atomic64_t** %v.addr.i, align 8
  %4 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !10102
  %5 = bitcast %struct.atomic64_t* %4 to i8*, !dbg !10102
  store i8* %5, i8** %v.addr.i.i, align 8
  store i64 8, i64* %size.addr.i.i, align 8
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10103
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !10104
  %conv.i.i = trunc i64 %7 to i32, !dbg !10104
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %6, i32 %conv.i.i) #13, !dbg !10105
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10106
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !10106
  call void @kcsan_check_access(i8* %8, i64 %9, i32 7) #13, !dbg !10106
  %10 = load i64, i64* %i.addr.i, align 8, !dbg !10107
  %11 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !10108
  store i64 %10, i64* %i.addr.i.i, align 8
  store %struct.atomic64_t* %11, %struct.atomic64_t** %v.addr.i1.i, align 8
  %12 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i1.i, align 8, !dbg !10109
  %counter.i.i = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %12, i32 0, i32 0, !dbg !10110
  %13 = load i64, i64* %i.addr.i.i, align 8, !dbg !10111
  %14 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i1.i, align 8, !dbg !10112
  %counter1.i.i = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %14, i32 0, i32 0, !dbg !10113
  call void asm sideeffect "addq $1,$0", "=*m,er,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %counter.i.i, i64 %13, i64* %counter1.i.i) #7, !dbg !10114, !srcloc !10115
  %15 = load i64, i64* %lim, align 8, !dbg !10116
  %cmp = icmp ugt i64 %15, 0, !dbg !10117
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10118

land.lhs.true:                                    ; preds = %do.end
  store %struct.atomic64_t* @usbfs_memory_usage, %struct.atomic64_t** %v.addr.i6, align 8
  %16 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i6, align 8, !dbg !10119
  %17 = bitcast %struct.atomic64_t* %16 to i8*, !dbg !10119
  store i8* %17, i8** %v.addr.i.i4, align 8
  store i64 8, i64* %size.addr.i.i5, align 8
  %18 = load i8*, i8** %v.addr.i.i4, align 8, !dbg !10120
  %19 = load i64, i64* %size.addr.i.i5, align 8, !dbg !10121
  %conv.i.i7 = trunc i64 %19 to i32, !dbg !10121
  %call.i.i8 = call zeroext i1 @kasan_check_read(i8* %18, i32 %conv.i.i7) #13, !dbg !10122
  %20 = load i8*, i8** %v.addr.i.i4, align 8, !dbg !10123
  %21 = load i64, i64* %size.addr.i.i5, align 8, !dbg !10123
  call void @kcsan_check_access(i8* %20, i64 %21, i32 4) #13, !dbg !10123
  %22 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i6, align 8, !dbg !10124
  %call.i = call i64 @arch_atomic64_read(%struct.atomic64_t* %22) #13, !dbg !10125
  %23 = load i64, i64* %lim, align 8, !dbg !10126
  %cmp2 = icmp ugt i64 %call.i, %23, !dbg !10127
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10128

if.then:                                          ; preds = %land.lhs.true
  %24 = load i64, i64* %amount.addr, align 8, !dbg !10129
  store i64 %24, i64* %i.addr.i11, align 8
  store %struct.atomic64_t* @usbfs_memory_usage, %struct.atomic64_t** %v.addr.i12, align 8
  %25 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i12, align 8, !dbg !10130
  %26 = bitcast %struct.atomic64_t* %25 to i8*, !dbg !10130
  store i8* %26, i8** %v.addr.i.i9, align 8
  store i64 8, i64* %size.addr.i.i10, align 8
  %27 = load i8*, i8** %v.addr.i.i9, align 8, !dbg !10131
  %28 = load i64, i64* %size.addr.i.i10, align 8, !dbg !10132
  %conv.i.i13 = trunc i64 %28 to i32, !dbg !10132
  %call.i.i14 = call zeroext i1 @kasan_check_write(i8* %27, i32 %conv.i.i13) #13, !dbg !10133
  %29 = load i8*, i8** %v.addr.i.i9, align 8, !dbg !10134
  %30 = load i64, i64* %size.addr.i.i10, align 8, !dbg !10134
  call void @kcsan_check_access(i8* %29, i64 %30, i32 7) #13, !dbg !10134
  %31 = load i64, i64* %i.addr.i11, align 8, !dbg !10135
  %32 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i12, align 8, !dbg !10136
  call void @arch_atomic64_sub(i64 %31, %struct.atomic64_t* %32) #13, !dbg !10137
  store i32 -12, i32* %retval, align 4, !dbg !10138
  br label %return, !dbg !10138

if.end:                                           ; preds = %land.lhs.true, %do.end
  store i32 0, i32* %retval, align 4, !dbg !10139
  br label %return, !dbg !10139

return:                                           ; preds = %if.end, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !10140
  ret i32 %33, !dbg !10140
}

; Function Attrs: noredzone
declare dso_local i64 @__get_free_pages(i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__create_pipe(%struct.usb_device* %dev, i32 %endpoint) #0 !dbg !10141 {
entry:
  %dev.addr = alloca %struct.usb_device*, align 8
  %endpoint.addr = alloca i32, align 4
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !10144, metadata !DIExpression()), !dbg !10145
  store i32 %endpoint, i32* %endpoint.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %endpoint.addr, metadata !10146, metadata !DIExpression()), !dbg !10147
  %0 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !10148
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0, !dbg !10149
  %1 = load i32, i32* %devnum, align 8, !dbg !10149
  %shl = shl i32 %1, 8, !dbg !10150
  %2 = load i32, i32* %endpoint.addr, align 4, !dbg !10151
  %shl1 = shl i32 %2, 15, !dbg !10152
  %or = or i32 %shl, %shl1, !dbg !10153
  ret i32 %or, !dbg !10154
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @snoop_urb(%struct.usb_device* %udev, i8* %userurb, i32 %pipe, i32 %length, i32 %timeout_or_status, i32 %when, i8* %data, i32 %data_len) #0 !dbg !4934 {
entry:
  %udev.addr = alloca %struct.usb_device*, align 8
  %userurb.addr = alloca i8*, align 8
  %pipe.addr = alloca i32, align 4
  %length.addr = alloca i32, align 4
  %timeout_or_status.addr = alloca i32, align 4
  %when.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %data_len.addr = alloca i32, align 4
  %ep = alloca i32, align 4
  %t = alloca i8*, align 8
  %d = alloca i8*, align 8
  %__UNIQUE_ID___x259 = alloca i32, align 4
  %__UNIQUE_ID___y260 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !10155, metadata !DIExpression()), !dbg !10156
  store i8* %userurb, i8** %userurb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userurb.addr, metadata !10157, metadata !DIExpression()), !dbg !10158
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !10159, metadata !DIExpression()), !dbg !10160
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !10161, metadata !DIExpression()), !dbg !10162
  store i32 %timeout_or_status, i32* %timeout_or_status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout_or_status.addr, metadata !10163, metadata !DIExpression()), !dbg !10164
  store i32 %when, i32* %when.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %when.addr, metadata !10165, metadata !DIExpression()), !dbg !10166
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10167, metadata !DIExpression()), !dbg !10168
  store i32 %data_len, i32* %data_len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data_len.addr, metadata !10169, metadata !DIExpression()), !dbg !10170
  call void @llvm.dbg.declare(metadata i32* %ep, metadata !10171, metadata !DIExpression()), !dbg !10172
  call void @llvm.dbg.declare(metadata i8** %t, metadata !10173, metadata !DIExpression()), !dbg !10174
  call void @llvm.dbg.declare(metadata i8** %d, metadata !10175, metadata !DIExpression()), !dbg !10176
  %0 = load i8, i8* @usbfs_snoop, align 1, !dbg !10177
  %tobool = trunc i8 %0 to i1, !dbg !10177
  br i1 %tobool, label %if.end, label %if.then, !dbg !10179

if.then:                                          ; preds = %entry
  br label %if.end25, !dbg !10180

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %pipe.addr, align 4, !dbg !10181
  %shr = ashr i32 %1, 15, !dbg !10181
  %and = and i32 %shr, 15, !dbg !10181
  store i32 %and, i32* %ep, align 4, !dbg !10182
  %2 = load i32, i32* %pipe.addr, align 4, !dbg !10183
  %shr1 = ashr i32 %2, 30, !dbg !10183
  %and2 = and i32 %shr1, 3, !dbg !10183
  %idxprom = sext i32 %and2 to i64, !dbg !10184
  %arrayidx = getelementptr [4 x i8*], [4 x i8*]* @snoop_urb.types, i64 0, i64 %idxprom, !dbg !10184
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !10184
  store i8* %3, i8** %t, align 8, !dbg !10185
  %4 = load i32, i32* %pipe.addr, align 4, !dbg !10186
  %and3 = and i32 %4, 128, !dbg !10186
  %tobool4 = icmp ne i32 %and3, 0, !dbg !10187
  %lnot = xor i1 %tobool4, true, !dbg !10187
  %lnot5 = xor i1 %lnot, true, !dbg !10188
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !10188
  %idxprom6 = sext i32 %lnot.ext to i64, !dbg !10189
  %arrayidx7 = getelementptr [2 x i8*], [2 x i8*]* @snoop_urb.dirs, i64 0, i64 %idxprom6, !dbg !10189
  %5 = load i8*, i8** %arrayidx7, align 8, !dbg !10189
  store i8* %5, i8** %d, align 8, !dbg !10190
  %6 = load i8*, i8** %userurb.addr, align 8, !dbg !10191
  %tobool8 = icmp ne i8* %6, null, !dbg !10191
  br i1 %tobool8, label %if.then9, label %if.else13, !dbg !10193

if.then9:                                         ; preds = %if.end
  %7 = load i32, i32* %when.addr, align 4, !dbg !10194
  %cmp = icmp eq i32 %7, 0, !dbg !10197
  br i1 %cmp, label %if.then10, label %if.else, !dbg !10198

if.then10:                                        ; preds = %if.then9
  %8 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !10199
  %dev = getelementptr inbounds %struct.usb_device, %struct.usb_device* %8, i32 0, i32 14, !dbg !10199
  %9 = load i8*, i8** %userurb.addr, align 8, !dbg !10199
  %10 = load i32, i32* %ep, align 4, !dbg !10199
  %11 = load i8*, i8** %t, align 8, !dbg !10199
  %12 = load i8*, i8** %d, align 8, !dbg !10199
  %13 = load i32, i32* %length.addr, align 4, !dbg !10199
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.38, i64 0, i64 0), i8* %9, i32 %10, i8* %11, i8* %12, i32 %13) #12, !dbg !10199
  br label %if.end12, !dbg !10199

if.else:                                          ; preds = %if.then9
  %14 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !10200
  %dev11 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %14, i32 0, i32 14, !dbg !10200
  %15 = load i8*, i8** %userurb.addr, align 8, !dbg !10200
  %16 = load i32, i32* %ep, align 4, !dbg !10200
  %17 = load i8*, i8** %t, align 8, !dbg !10200
  %18 = load i8*, i8** %d, align 8, !dbg !10200
  %19 = load i32, i32* %length.addr, align 4, !dbg !10200
  %20 = load i32, i32* %timeout_or_status.addr, align 4, !dbg !10200
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev11, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.39, i64 0, i64 0), i8* %15, i32 %16, i8* %17, i8* %18, i32 %19, i32 %20) #12, !dbg !10200
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then10
  br label %if.end20, !dbg !10201

if.else13:                                        ; preds = %if.end
  %21 = load i32, i32* %when.addr, align 4, !dbg !10202
  %cmp14 = icmp eq i32 %21, 0, !dbg !10205
  br i1 %cmp14, label %if.then15, label %if.else17, !dbg !10206

if.then15:                                        ; preds = %if.else13
  %22 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !10207
  %dev16 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %22, i32 0, i32 14, !dbg !10207
  %23 = load i32, i32* %ep, align 4, !dbg !10207
  %24 = load i8*, i8** %t, align 8, !dbg !10207
  %25 = load i8*, i8** %d, align 8, !dbg !10207
  %26 = load i32, i32* %length.addr, align 4, !dbg !10207
  %27 = load i32, i32* %timeout_or_status.addr, align 4, !dbg !10207
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev16, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.40, i64 0, i64 0), i32 %23, i8* %24, i8* %25, i32 %26, i32 %27) #12, !dbg !10207
  br label %if.end19, !dbg !10207

if.else17:                                        ; preds = %if.else13
  %28 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !10208
  %dev18 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %28, i32 0, i32 14, !dbg !10208
  %29 = load i32, i32* %ep, align 4, !dbg !10208
  %30 = load i8*, i8** %t, align 8, !dbg !10208
  %31 = load i8*, i8** %d, align 8, !dbg !10208
  %32 = load i32, i32* %length.addr, align 4, !dbg !10208
  %33 = load i32, i32* %timeout_or_status.addr, align 4, !dbg !10208
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev18, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.41, i64 0, i64 0), i32 %29, i8* %30, i8* %31, i32 %32, i32 %33) #12, !dbg !10208
  br label %if.end19

if.end19:                                         ; preds = %if.else17, %if.then15
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end12
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x259, metadata !10209, metadata !DIExpression()), !dbg !10211
  %34 = load i32, i32* %data_len.addr, align 4, !dbg !10211
  store i32 %34, i32* %__UNIQUE_ID___x259, align 4, !dbg !10211
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y260, metadata !10212, metadata !DIExpression()), !dbg !10211
  %35 = load i32, i32* @usbfs_snoop_max, align 4, !dbg !10211
  store i32 %35, i32* %__UNIQUE_ID___y260, align 4, !dbg !10211
  %36 = load i32, i32* %__UNIQUE_ID___x259, align 4, !dbg !10211
  %37 = load i32, i32* %__UNIQUE_ID___y260, align 4, !dbg !10211
  %cmp21 = icmp ult i32 %36, %37, !dbg !10211
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !10211

cond.true:                                        ; preds = %if.end20
  %38 = load i32, i32* %__UNIQUE_ID___x259, align 4, !dbg !10211
  br label %cond.end, !dbg !10211

cond.false:                                       ; preds = %if.end20
  %39 = load i32, i32* %__UNIQUE_ID___y260, align 4, !dbg !10211
  br label %cond.end, !dbg !10211

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %38, %cond.true ], [ %39, %cond.false ], !dbg !10211
  store i32 %cond, i32* %tmp, align 4, !dbg !10211
  %40 = load i32, i32* %tmp, align 4, !dbg !10211
  store i32 %40, i32* %data_len.addr, align 4, !dbg !10213
  %41 = load i8*, i8** %data.addr, align 8, !dbg !10214
  %tobool22 = icmp ne i8* %41, null, !dbg !10214
  br i1 %tobool22, label %land.lhs.true, label %if.end25, !dbg !10216

land.lhs.true:                                    ; preds = %cond.end
  %42 = load i32, i32* %data_len.addr, align 4, !dbg !10217
  %cmp23 = icmp ugt i32 %42, 0, !dbg !10218
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !10219

if.then24:                                        ; preds = %land.lhs.true
  %43 = load i8*, i8** %data.addr, align 8, !dbg !10220
  %44 = load i32, i32* %data_len.addr, align 4, !dbg !10222
  %conv = zext i32 %44 to i64, !dbg !10222
  call void @print_hex_dump(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0), i32 0, i32 32, i32 1, i8* %43, i64 %conv, i1 zeroext true) #11, !dbg !10223
  br label %if.end25, !dbg !10224

if.end25:                                         ; preds = %if.then, %if.then24, %land.lhs.true, %cond.end
  ret void, !dbg !10225
}

; Function Attrs: noredzone
declare dso_local i32 @usb_control_msg(%struct.usb_device*, i32, i8 zeroext, i8 zeroext, i16 zeroext, i16 zeroext, i8*, i16 zeroext, i32) #2

; Function Attrs: cold noredzone
declare dso_local void @dev_printk(i8*, %struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @free_pages(i64, i32) #2

; Function Attrs: noredzone
declare dso_local %struct.usb_host_interface* @usb_find_alt_setting(%struct.usb_host_config*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @findintfep(%struct.usb_device* %dev, i32 %ep) #0 !dbg !10226 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.usb_device*, align 8
  %ep.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %e = alloca i32, align 4
  %intf = alloca %struct.usb_interface*, align 8
  %alts = alloca %struct.usb_host_interface*, align 8
  %endpt = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !10229, metadata !DIExpression()), !dbg !10230
  store i32 %ep, i32* %ep.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep.addr, metadata !10231, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10233, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.declare(metadata i32* %j, metadata !10235, metadata !DIExpression()), !dbg !10236
  call void @llvm.dbg.declare(metadata i32* %e, metadata !10237, metadata !DIExpression()), !dbg !10238
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf, metadata !10239, metadata !DIExpression()), !dbg !10240
  call void @llvm.dbg.declare(metadata %struct.usb_host_interface** %alts, metadata !10241, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %endpt, metadata !10243, metadata !DIExpression()), !dbg !10245
  %0 = load i32, i32* %ep.addr, align 4, !dbg !10246
  %and = and i32 %0, -144, !dbg !10248
  %tobool = icmp ne i32 %and, 0, !dbg !10248
  br i1 %tobool, label %if.then, label %if.end, !dbg !10249

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10250
  br label %return, !dbg !10250

if.end:                                           ; preds = %entry
  %1 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !10251
  %actconfig = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 19, !dbg !10253
  %2 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !10253
  %tobool1 = icmp ne %struct.usb_host_config* %2, null, !dbg !10251
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !10254

if.then2:                                         ; preds = %if.end
  store i32 -3, i32* %retval, align 4, !dbg !10255
  br label %return, !dbg !10255

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !10256
  br label %for.cond, !dbg !10258

for.cond:                                         ; preds = %for.inc32, %if.end3
  %3 = load i32, i32* %i, align 4, !dbg !10259
  %4 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !10261
  %actconfig4 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 19, !dbg !10262
  %5 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig4, align 8, !dbg !10262
  %desc = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %5, i32 0, i32 0, !dbg !10263
  %bNumInterfaces = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %desc, i32 0, i32 3, !dbg !10264
  %6 = load i8, i8* %bNumInterfaces, align 4, !dbg !10264
  %conv = zext i8 %6 to i32, !dbg !10261
  %cmp = icmp ult i32 %3, %conv, !dbg !10265
  br i1 %cmp, label %for.body, label %for.end34, !dbg !10266

for.body:                                         ; preds = %for.cond
  %7 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !10267
  %actconfig6 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 19, !dbg !10269
  %8 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig6, align 8, !dbg !10269
  %interface = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %8, i32 0, i32 3, !dbg !10270
  %9 = load i32, i32* %i, align 4, !dbg !10271
  %idxprom = zext i32 %9 to i64, !dbg !10267
  %arrayidx = getelementptr [32 x %struct.usb_interface*], [32 x %struct.usb_interface*]* %interface, i64 0, i64 %idxprom, !dbg !10267
  %10 = load %struct.usb_interface*, %struct.usb_interface** %arrayidx, align 8, !dbg !10267
  store %struct.usb_interface* %10, %struct.usb_interface** %intf, align 8, !dbg !10272
  store i32 0, i32* %j, align 4, !dbg !10273
  br label %for.cond7, !dbg !10275

for.cond7:                                        ; preds = %for.inc29, %for.body
  %11 = load i32, i32* %j, align 4, !dbg !10276
  %12 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10278
  %num_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %12, i32 0, i32 2, !dbg !10279
  %13 = load i32, i32* %num_altsetting, align 8, !dbg !10279
  %cmp8 = icmp ult i32 %11, %13, !dbg !10280
  br i1 %cmp8, label %for.body10, label %for.end31, !dbg !10281

for.body10:                                       ; preds = %for.cond7
  %14 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10282
  %altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %14, i32 0, i32 0, !dbg !10284
  %15 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting, align 8, !dbg !10284
  %16 = load i32, i32* %j, align 4, !dbg !10285
  %idxprom11 = zext i32 %16 to i64, !dbg !10282
  %arrayidx12 = getelementptr %struct.usb_host_interface, %struct.usb_host_interface* %15, i64 %idxprom11, !dbg !10282
  store %struct.usb_host_interface* %arrayidx12, %struct.usb_host_interface** %alts, align 8, !dbg !10286
  store i32 0, i32* %e, align 4, !dbg !10287
  br label %for.cond13, !dbg !10289

for.cond13:                                       ; preds = %for.inc, %for.body10
  %17 = load i32, i32* %e, align 4, !dbg !10290
  %18 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alts, align 8, !dbg !10292
  %desc14 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %18, i32 0, i32 0, !dbg !10293
  %bNumEndpoints = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc14, i32 0, i32 4, !dbg !10294
  %19 = load i8, i8* %bNumEndpoints, align 4, !dbg !10294
  %conv15 = zext i8 %19 to i32, !dbg !10292
  %cmp16 = icmp ult i32 %17, %conv15, !dbg !10295
  br i1 %cmp16, label %for.body18, label %for.end, !dbg !10296

for.body18:                                       ; preds = %for.cond13
  %20 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alts, align 8, !dbg !10297
  %endpoint = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %20, i32 0, i32 3, !dbg !10299
  %21 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %endpoint, align 8, !dbg !10299
  %22 = load i32, i32* %e, align 4, !dbg !10300
  %idxprom19 = zext i32 %22 to i64, !dbg !10297
  %arrayidx20 = getelementptr %struct.usb_host_endpoint, %struct.usb_host_endpoint* %21, i64 %idxprom19, !dbg !10297
  %desc21 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx20, i32 0, i32 0, !dbg !10301
  store %struct.usb_endpoint_descriptor* %desc21, %struct.usb_endpoint_descriptor** %endpt, align 8, !dbg !10302
  %23 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %endpt, align 8, !dbg !10303
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %23, i32 0, i32 2, !dbg !10305
  %24 = load i8, i8* %bEndpointAddress, align 1, !dbg !10305
  %conv22 = zext i8 %24 to i32, !dbg !10303
  %25 = load i32, i32* %ep.addr, align 4, !dbg !10306
  %cmp23 = icmp eq i32 %conv22, %25, !dbg !10307
  br i1 %cmp23, label %if.then25, label %if.end28, !dbg !10308

if.then25:                                        ; preds = %for.body18
  %26 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alts, align 8, !dbg !10309
  %desc26 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %26, i32 0, i32 0, !dbg !10310
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc26, i32 0, i32 2, !dbg !10311
  %27 = load i8, i8* %bInterfaceNumber, align 2, !dbg !10311
  %conv27 = zext i8 %27 to i32, !dbg !10309
  store i32 %conv27, i32* %retval, align 4, !dbg !10312
  br label %return, !dbg !10312

if.end28:                                         ; preds = %for.body18
  br label %for.inc, !dbg !10313

for.inc:                                          ; preds = %if.end28
  %28 = load i32, i32* %e, align 4, !dbg !10314
  %inc = add i32 %28, 1, !dbg !10314
  store i32 %inc, i32* %e, align 4, !dbg !10314
  br label %for.cond13, !dbg !10315, !llvm.loop !10316

for.end:                                          ; preds = %for.cond13
  br label %for.inc29, !dbg !10318

for.inc29:                                        ; preds = %for.end
  %29 = load i32, i32* %j, align 4, !dbg !10319
  %inc30 = add i32 %29, 1, !dbg !10319
  store i32 %inc30, i32* %j, align 4, !dbg !10319
  br label %for.cond7, !dbg !10320, !llvm.loop !10321

for.end31:                                        ; preds = %for.cond7
  br label %for.inc32, !dbg !10323

for.inc32:                                        ; preds = %for.end31
  %30 = load i32, i32* %i, align 4, !dbg !10324
  %inc33 = add i32 %30, 1, !dbg !10324
  store i32 %inc33, i32* %i, align 4, !dbg !10324
  br label %for.cond, !dbg !10325, !llvm.loop !10326

for.end34:                                        ; preds = %for.cond
  store i32 -2, i32* %retval, align 4, !dbg !10328
  br label %return, !dbg !10328

return:                                           ; preds = %for.end34, %if.then25, %if.then2, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !10329
  ret i32 %31, !dbg !10329
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @task_pid_nr(%struct.task_struct* %tsk) #0 !dbg !10330 {
entry:
  %tsk.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %tsk, %struct.task_struct** %tsk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %tsk.addr, metadata !10333, metadata !DIExpression()), !dbg !10334
  %0 = load %struct.task_struct*, %struct.task_struct** %tsk.addr, align 8, !dbg !10335
  %pid = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 35, !dbg !10336
  %1 = load i32, i32* %pid, align 64, !dbg !10336
  ret i32 %1, !dbg !10337
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @checkintf(%struct.usb_dev_state* %ps, i32 %ifnum) #0 !dbg !10338 {
entry:
  %pscr_ret__.i14 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i14, metadata !5665, metadata !DIExpression()), !dbg !10341
  %__vpp_verify.i15 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i15, metadata !5675, metadata !DIExpression()), !dbg !10343
  %pfo_val__.i16 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i16, metadata !5678, metadata !DIExpression()), !dbg !10344
  %tmp.i17 = alloca %struct.task_struct*, align 8
  %tmp1.i18 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5665, metadata !DIExpression()), !dbg !10345
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !5675, metadata !DIExpression()), !dbg !10347
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !5678, metadata !DIExpression()), !dbg !10348
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %ifnum.addr = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !10349, metadata !DIExpression()), !dbg !10350
  store i32 %ifnum, i32* %ifnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ifnum.addr, metadata !10351, metadata !DIExpression()), !dbg !10352
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10353
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1, !dbg !10355
  %1 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !10355
  %state = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 3, !dbg !10356
  %2 = load i32, i32* %state, align 8, !dbg !10356
  %cmp = icmp ne i32 %2, 7, !dbg !10357
  br i1 %cmp, label %if.then, label %if.end, !dbg !10358

if.then:                                          ; preds = %entry
  store i32 -113, i32* %retval, align 4, !dbg !10359
  br label %return, !dbg !10359

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %ifnum.addr, align 4, !dbg !10360
  %conv = zext i32 %3 to i64, !dbg !10360
  %cmp1 = icmp uge i64 %conv, 64, !dbg !10362
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !10363

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !10364
  br label %return, !dbg !10364

if.end4:                                          ; preds = %if.end
  %4 = load i32, i32* %ifnum.addr, align 4, !dbg !10365
  %conv5 = zext i32 %4 to i64, !dbg !10365
  %5 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10367
  %ifclaimed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 13, !dbg !10368
  %call = call zeroext i1 @test_bit(i64 %conv5, i64* %ifclaimed) #11, !dbg !10369
  br i1 %call, label %if.then6, label %if.end7, !dbg !10370

if.then6:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !10371
  br label %return, !dbg !10371

if.end7:                                          ; preds = %if.end4
  %6 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10372
  %dev8 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 1, !dbg !10372
  %7 = load %struct.usb_device*, %struct.usb_device** %dev8, align 8, !dbg !10372
  %dev9 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 14, !dbg !10372
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !10347
  %8 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !10347
  %9 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !10348, !srcloc !5776
  store i64 %9, i64* %pfo_val__.i, align 8, !dbg !10348
  %10 = load i64, i64* %pfo_val__.i, align 8, !dbg !10348
  %11 = inttoptr i64 %10 to %struct.task_struct*, !dbg !10348
  store %struct.task_struct* %11, %struct.task_struct** %tmp.i, align 8, !dbg !10348
  %12 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !10348
  store %struct.task_struct* %12, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !10345
  %13 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !10345
  store %struct.task_struct* %13, %struct.task_struct** %tmp1.i, align 8, !dbg !10345
  %14 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !10345
  %call11 = call i32 @task_pid_nr(%struct.task_struct* %14) #11, !dbg !10372
  store i8* null, i8** %__vpp_verify.i15, align 8, !dbg !10343
  %15 = load i8*, i8** %__vpp_verify.i15, align 8, !dbg !10343
  %16 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !10344, !srcloc !5776
  store i64 %16, i64* %pfo_val__.i16, align 8, !dbg !10344
  %17 = load i64, i64* %pfo_val__.i16, align 8, !dbg !10344
  %18 = inttoptr i64 %17 to %struct.task_struct*, !dbg !10344
  store %struct.task_struct* %18, %struct.task_struct** %tmp.i17, align 8, !dbg !10344
  %19 = load %struct.task_struct*, %struct.task_struct** %tmp.i17, align 8, !dbg !10344
  store %struct.task_struct* %19, %struct.task_struct** %pscr_ret__.i14, align 8, !dbg !10341
  %20 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i14, align 8, !dbg !10341
  store %struct.task_struct* %20, %struct.task_struct** %tmp1.i18, align 8, !dbg !10341
  %21 = load %struct.task_struct*, %struct.task_struct** %tmp1.i18, align 8, !dbg !10341
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %21, i32 0, i32 68, !dbg !10372
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !10372
  %22 = load i32, i32* %ifnum.addr, align 4, !dbg !10372
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev9, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.31, i64 0, i64 0), i32 %call11, i8* %arraydecay, i32 %22) #12, !dbg !10372
  %23 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10373
  %24 = load i32, i32* %ifnum.addr, align 4, !dbg !10374
  %call13 = call i32 @claimintf(%struct.usb_dev_state* %23, i32 %24) #11, !dbg !10375
  store i32 %call13, i32* %retval, align 4, !dbg !10376
  br label %return, !dbg !10376

return:                                           ; preds = %if.end7, %if.then6, %if.then3, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !10377
  ret i32 %25, !dbg !10377
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @claimintf(%struct.usb_dev_state* %ps, i32 %ifnum) #0 !dbg !10378 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %ifnum.addr = alloca i32, align 4
  %dev = alloca %struct.usb_device*, align 8
  %intf = alloca %struct.usb_interface*, align 8
  %err = alloca i32, align 4
  %old_suppress = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !10379, metadata !DIExpression()), !dbg !10380
  store i32 %ifnum, i32* %ifnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ifnum.addr, metadata !10381, metadata !DIExpression()), !dbg !10382
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev, metadata !10383, metadata !DIExpression()), !dbg !10384
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10385
  %dev1 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1, !dbg !10386
  %1 = load %struct.usb_device*, %struct.usb_device** %dev1, align 8, !dbg !10386
  store %struct.usb_device* %1, %struct.usb_device** %dev, align 8, !dbg !10384
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf, metadata !10387, metadata !DIExpression()), !dbg !10388
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10389, metadata !DIExpression()), !dbg !10390
  %2 = load i32, i32* %ifnum.addr, align 4, !dbg !10391
  %conv = zext i32 %2 to i64, !dbg !10391
  %cmp = icmp uge i64 %conv, 64, !dbg !10393
  br i1 %cmp, label %if.then, label %if.end, !dbg !10394

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10395
  br label %return, !dbg !10395

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %ifnum.addr, align 4, !dbg !10396
  %conv3 = zext i32 %3 to i64, !dbg !10396
  %4 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10398
  %ifclaimed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %4, i32 0, i32 13, !dbg !10399
  %call = call zeroext i1 @test_bit(i64 %conv3, i64* %ifclaimed) #11, !dbg !10400
  br i1 %call, label %if.then4, label %if.end5, !dbg !10401

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10402
  br label %return, !dbg !10402

if.end5:                                          ; preds = %if.end
  %5 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10403
  %privileges_dropped = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 18, !dbg !10405
  %6 = load i8, i8* %privileges_dropped, align 1, !dbg !10405
  %tobool = trunc i8 %6 to i1, !dbg !10405
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !10406

land.lhs.true:                                    ; preds = %if.end5
  %7 = load i32, i32* %ifnum.addr, align 4, !dbg !10407
  %conv7 = zext i32 %7 to i64, !dbg !10407
  %8 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10408
  %interface_allowed_mask = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 15, !dbg !10409
  %call8 = call zeroext i1 @test_bit(i64 %conv7, i64* %interface_allowed_mask) #11, !dbg !10410
  br i1 %call8, label %if.end10, label %if.then9, !dbg !10411

if.then9:                                         ; preds = %land.lhs.true
  store i32 -13, i32* %retval, align 4, !dbg !10412
  br label %return, !dbg !10412

if.end10:                                         ; preds = %land.lhs.true, %if.end5
  %9 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !10413
  %10 = load i32, i32* %ifnum.addr, align 4, !dbg !10414
  %call11 = call %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device* %9, i32 %10) #11, !dbg !10415
  store %struct.usb_interface* %call11, %struct.usb_interface** %intf, align 8, !dbg !10416
  %11 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10417
  %tobool12 = icmp ne %struct.usb_interface* %11, null, !dbg !10417
  br i1 %tobool12, label %if.else, label %if.then13, !dbg !10419

if.then13:                                        ; preds = %if.end10
  store i32 -2, i32* %err, align 4, !dbg !10420
  br label %if.end19, !dbg !10421

if.else:                                          ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i32* %old_suppress, metadata !10422, metadata !DIExpression()), !dbg !10424
  %12 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10425
  %dev14 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %12, i32 0, i32 7, !dbg !10426
  %call15 = call i32 @dev_get_uevent_suppress(%struct.device* %dev14) #11, !dbg !10427
  store i32 %call15, i32* %old_suppress, align 4, !dbg !10428
  %13 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10429
  %dev16 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %13, i32 0, i32 7, !dbg !10430
  call void @dev_set_uevent_suppress(%struct.device* %dev16, i32 1) #11, !dbg !10431
  %14 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10432
  %15 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10433
  %16 = bitcast %struct.usb_dev_state* %15 to i8*, !dbg !10433
  %call17 = call i32 @usb_driver_claim_interface(%struct.usb_driver* @usbfs_driver, %struct.usb_interface* %14, i8* %16) #11, !dbg !10434
  store i32 %call17, i32* %err, align 4, !dbg !10435
  %17 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !10436
  %dev18 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %17, i32 0, i32 7, !dbg !10437
  %18 = load i32, i32* %old_suppress, align 4, !dbg !10438
  call void @dev_set_uevent_suppress(%struct.device* %dev18, i32 %18) #11, !dbg !10439
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then13
  %19 = load i32, i32* %err, align 4, !dbg !10440
  %cmp20 = icmp eq i32 %19, 0, !dbg !10442
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !10443

if.then22:                                        ; preds = %if.end19
  %20 = load i32, i32* %ifnum.addr, align 4, !dbg !10444
  %conv23 = zext i32 %20 to i64, !dbg !10444
  %21 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10445
  %ifclaimed24 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %21, i32 0, i32 13, !dbg !10446
  call void @set_bit(i64 %conv23, i64* %ifclaimed24) #11, !dbg !10447
  br label %if.end25, !dbg !10447

if.end25:                                         ; preds = %if.then22, %if.end19
  %22 = load i32, i32* %err, align 4, !dbg !10448
  store i32 %22, i32* %retval, align 4, !dbg !10449
  br label %return, !dbg !10449

return:                                           ; preds = %if.end25, %if.then9, %if.then4, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !10450
  ret i32 %23, !dbg !10450
}

; Function Attrs: noredzone
declare dso_local %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dev_get_uevent_suppress(%struct.device* %dev) #0 !dbg !10451 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10454, metadata !DIExpression()), !dbg !10455
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10456
  %kobj = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !10457
  %uevent_suppress = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 7, !dbg !10458
  %bf.load = load i8, i8* %uevent_suppress, align 4, !dbg !10458
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !10458
  %bf.clear = and i8 %bf.lshr, 1, !dbg !10458
  %bf.cast = zext i8 %bf.clear to i32, !dbg !10458
  ret i32 %bf.cast, !dbg !10459
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_uevent_suppress(%struct.device* %dev, i32 %val) #0 !dbg !10460 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %val.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10463, metadata !DIExpression()), !dbg !10464
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10465, metadata !DIExpression()), !dbg !10466
  %0 = load i32, i32* %val.addr, align 4, !dbg !10467
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10468
  %kobj = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 0, !dbg !10469
  %uevent_suppress = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 7, !dbg !10470
  %2 = trunc i32 %0 to i8, !dbg !10471
  %bf.load = load i8, i8* %uevent_suppress, align 4, !dbg !10471
  %bf.value = and i8 %2, 1, !dbg !10471
  %bf.shl = shl i8 %bf.value, 4, !dbg !10471
  %bf.clear = and i8 %bf.load, -17, !dbg !10471
  %bf.set = or i8 %bf.clear, %bf.shl, !dbg !10471
  store i8 %bf.set, i8* %uevent_suppress, align 4, !dbg !10471
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !10471
  ret void, !dbg !10472
}

; Function Attrs: noredzone
declare dso_local i32 @usb_driver_claim_interface(%struct.usb_driver*, %struct.usb_interface*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !10473 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !10474, metadata !DIExpression()), !dbg !10476
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !10478, metadata !DIExpression()), !dbg !10479
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !5961, metadata !DIExpression()), !dbg !10480
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5971, metadata !DIExpression()), !dbg !10482
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !10483, metadata !DIExpression()), !dbg !10484
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !10485, metadata !DIExpression()), !dbg !10486
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !10487
  %1 = load i64, i64* %nr.addr, align 8, !dbg !10488
  %div = sdiv i64 %1, 64, !dbg !10488
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !10489
  %2 = bitcast i64* %add.ptr to i8*, !dbg !10487
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !10490
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !10491
  %conv.i = trunc i64 %4 to i32, !dbg !10491
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !10492
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !10493
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !10493
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !10493
  %7 = load i64, i64* %nr.addr, align 8, !dbg !10494
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !10495
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !10496
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !10498
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !10499

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !10500
  %12 = bitcast i64* %11 to i8*, !dbg !10500
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !10500
  %shr.i = ashr i64 %13, 3, !dbg !10500
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !10500
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !10502
  %and.i = and i64 %14, 7, !dbg !10502
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !10502
  %shl.i = shl i32 1, %sh_prom.i, !dbg !10502
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #7, !dbg !10503, !srcloc !10504
  br label %arch_set_bit.exit, !dbg !10505

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !10506
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !10508
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !10509, !srcloc !10510
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !10511
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_atomic64_read(%struct.atomic64_t* %v) #0 !dbg !10512 {
entry:
  %v.addr = alloca %struct.atomic64_t*, align 8
  store %struct.atomic64_t* %v, %struct.atomic64_t** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr, metadata !10513, metadata !DIExpression()), !dbg !10514
  %0 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr, align 8, !dbg !10515
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %0, i32 0, i32 0, !dbg !10515
  %1 = load volatile i64, i64* %counter, align 8, !dbg !10515
  ret i64 %1, !dbg !10516
}

; Function Attrs: noredzone
declare dso_local void @print_hex_dump(i8*, i8*, i32, i32, i32, i8*, i64, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_proc_bulk(%struct.usb_dev_state* %ps, %struct.usbdevfs_bulktransfer* %bulk) #0 !dbg !10517 {
entry:
  %retval.i.i83 = alloca i1, align 1
  %addr.addr.i.i84 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i84, metadata !5056, metadata !DIExpression()), !dbg !10521
  %bytes.addr.i.i85 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i85, metadata !5077, metadata !DIExpression()), !dbg !10529
  %is_source.addr.i.i86 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i86, metadata !5079, metadata !DIExpression()), !dbg !10530
  %sz.i.i87 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i87, metadata !5081, metadata !DIExpression()), !dbg !10531
  %__ret_warn_on.i.i88 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i88, metadata !5083, metadata !DIExpression()), !dbg !10532
  %tmp.i.i89 = alloca i64, align 8
  %to.addr.i90 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i90, metadata !6977, metadata !DIExpression()), !dbg !10533
  %from.addr.i91 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i91, metadata !6979, metadata !DIExpression()), !dbg !10534
  %n.addr.i92 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i92, metadata !6981, metadata !DIExpression()), !dbg !10535
  %retval.i.i73 = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !10536
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !10543
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !10544
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !10545
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !10546
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !5087, metadata !DIExpression()), !dbg !10547
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !5089, metadata !DIExpression()), !dbg !10548
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !5091, metadata !DIExpression()), !dbg !10549
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !10550, metadata !DIExpression()), !dbg !10554
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !10562, metadata !DIExpression()), !dbg !10563
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !10564, metadata !DIExpression()), !dbg !10565
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !10566, metadata !DIExpression()), !dbg !10567
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !10568, metadata !DIExpression()), !dbg !10572
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !10574, metadata !DIExpression()), !dbg !10578
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !10580, metadata !DIExpression()), !dbg !10584
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !10589, metadata !DIExpression()), !dbg !10590
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !10591, metadata !DIExpression()), !dbg !10592
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10593, metadata !DIExpression()), !dbg !10594
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !10595, metadata !DIExpression()), !dbg !10596
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !10597, metadata !DIExpression()), !dbg !10598
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10599, metadata !DIExpression()), !dbg !10600
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !10601, metadata !DIExpression()), !dbg !10602
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !10603, metadata !DIExpression()), !dbg !10604
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %bulk.addr = alloca %struct.usbdevfs_bulktransfer*, align 8
  %dev = alloca %struct.usb_device*, align 8
  %tmo = alloca i32, align 4
  %len1 = alloca i32, align 4
  %pipe = alloca i32, align 4
  %len2 = alloca i32, align 4
  %tbuf = alloca i8*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !10605, metadata !DIExpression()), !dbg !10606
  store %struct.usbdevfs_bulktransfer* %bulk, %struct.usbdevfs_bulktransfer** %bulk.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_bulktransfer** %bulk.addr, metadata !10607, metadata !DIExpression()), !dbg !10608
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev, metadata !10609, metadata !DIExpression()), !dbg !10610
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10611
  %dev1 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1, !dbg !10612
  %1 = load %struct.usb_device*, %struct.usb_device** %dev1, align 8, !dbg !10612
  store %struct.usb_device* %1, %struct.usb_device** %dev, align 8, !dbg !10610
  call void @llvm.dbg.declare(metadata i32* %tmo, metadata !10613, metadata !DIExpression()), !dbg !10614
  call void @llvm.dbg.declare(metadata i32* %len1, metadata !10615, metadata !DIExpression()), !dbg !10616
  call void @llvm.dbg.declare(metadata i32* %pipe, metadata !10617, metadata !DIExpression()), !dbg !10618
  call void @llvm.dbg.declare(metadata i32* %len2, metadata !10619, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.declare(metadata i8** %tbuf, metadata !10621, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10623, metadata !DIExpression()), !dbg !10624
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10625, metadata !DIExpression()), !dbg !10626
  %2 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10627
  %dev2 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %2, i32 0, i32 1, !dbg !10628
  %3 = load %struct.usb_device*, %struct.usb_device** %dev2, align 8, !dbg !10628
  %4 = load %struct.usbdevfs_bulktransfer*, %struct.usbdevfs_bulktransfer** %bulk.addr, align 8, !dbg !10629
  %ep = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %4, i32 0, i32 0, !dbg !10630
  %5 = load i32, i32* %ep, align 8, !dbg !10630
  %call = call i32 @findintfep(%struct.usb_device* %3, i32 %5) #11, !dbg !10631
  store i32 %call, i32* %ret, align 4, !dbg !10632
  %6 = load i32, i32* %ret, align 4, !dbg !10633
  %cmp = icmp slt i32 %6, 0, !dbg !10635
  br i1 %cmp, label %if.then, label %if.end, !dbg !10636

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %ret, align 4, !dbg !10637
  store i32 %7, i32* %retval, align 4, !dbg !10638
  br label %return, !dbg !10638

if.end:                                           ; preds = %entry
  %8 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !10639
  %9 = load i32, i32* %ret, align 4, !dbg !10640
  %call3 = call i32 @checkintf(%struct.usb_dev_state* %8, i32 %9) #11, !dbg !10641
  store i32 %call3, i32* %ret, align 4, !dbg !10642
  %10 = load i32, i32* %ret, align 4, !dbg !10643
  %tobool = icmp ne i32 %10, 0, !dbg !10643
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !10645

if.then4:                                         ; preds = %if.end
  %11 = load i32, i32* %ret, align 4, !dbg !10646
  store i32 %11, i32* %retval, align 4, !dbg !10647
  br label %return, !dbg !10647

if.end5:                                          ; preds = %if.end
  %12 = load %struct.usbdevfs_bulktransfer*, %struct.usbdevfs_bulktransfer** %bulk.addr, align 8, !dbg !10648
  %ep6 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %12, i32 0, i32 0, !dbg !10650
  %13 = load i32, i32* %ep6, align 8, !dbg !10650
  %and = and i32 %13, 128, !dbg !10651
  %tobool7 = icmp ne i32 %and, 0, !dbg !10651
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !10652

if.then8:                                         ; preds = %if.end5
  %14 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !10653
  %15 = load %struct.usbdevfs_bulktransfer*, %struct.usbdevfs_bulktransfer** %bulk.addr, align 8, !dbg !10653
  %ep9 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %15, i32 0, i32 0, !dbg !10653
  %16 = load i32, i32* %ep9, align 8, !dbg !10653
  %and10 = and i32 %16, 127, !dbg !10653
  %call11 = call i32 @__create_pipe(%struct.usb_device* %14, i32 %and10) #11, !dbg !10653
  %or = or i32 -1073741824, %call11, !dbg !10653
  %or12 = or i32 %or, 128, !dbg !10653
  store i32 %or12, i32* %pipe, align 4, !dbg !10654
  br label %if.end17, !dbg !10655

if.else:                                          ; preds = %if.end5
  %17 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !10656
  %18 = load %struct.usbdevfs_bulktransfer*, %struct.usbdevfs_bulktransfer** %bulk.addr, align 8, !dbg !10656
  %ep13 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %18, i32 0, i32 0, !dbg !10656
  %19 = load i32, i32* %ep13, align 8, !dbg !10656
  %and14 = and i32 %19, 127, !dbg !10656
  %call15 = call i32 @__create_pipe(%struct.usb_device* %17, i32 %and14) #11, !dbg !10656
  %or16 = or i32 -1073741824, %call15, !dbg !10656
  store i32 %or16, i32* %pipe, align 4, !dbg !10657
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then8
  %20 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !10658
  %21 = load i32, i32* %pipe, align 4, !dbg !10660
  %22 = load %struct.usbdevfs_bulktransfer*, %struct.usbdevfs_bulktransfer** %bulk.addr, align 8, !dbg !10661
  %ep18 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %22, i32 0, i32 0, !dbg !10662
  %23 = load i32, i32* %ep18, align 8, !dbg !10662
  %and19 = and i32 %23, 128, !dbg !10663
  %tobool20 = icmp ne i32 %and19, 0, !dbg !10664
  %lnot = xor i1 %tobool20, true, !dbg !10664
  %lnot.ext = zext i1 %lnot to i32, !dbg !10664
  %call21 = call zeroext i16 @usb_maxpacket(%struct.usb_device* %20, i32 %21, i32 %lnot.ext) #11, !dbg !10665
  %tobool22 = icmp ne i16 %call21, 0, !dbg !10665
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !10666

if.then23:                                        ; preds = %if.end17
  store i32 -22, i32* %retval, align 4, !dbg !10667
  br label %return, !dbg !10667

if.end24:                                         ; preds = %if.end17
  %24 = load %struct.usbdevfs_bulktransfer*, %struct.usbdevfs_bulktransfer** %bulk.addr, align 8, !dbg !10668
  %len = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %24, i32 0, i32 1, !dbg !10669
  %25 = load i32, i32* %len, align 4, !dbg !10669
  store i32 %25, i32* %len1, align 4, !dbg !10670
  %26 = load i32, i32* %len1, align 4, !dbg !10671
  %conv = zext i32 %26 to i64, !dbg !10671
  %cmp25 = icmp uge i64 %conv, 2147483463, !dbg !10673
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !10674

if.then27:                                        ; preds = %if.end24
  store i32 -22, i32* %retval, align 4, !dbg !10675
  br label %return, !dbg !10675

if.end28:                                         ; preds = %if.end24
  %27 = load i32, i32* %len1, align 4, !dbg !10676
  %conv29 = zext i32 %27 to i64, !dbg !10676
  %add = add i64 %conv29, 184, !dbg !10677
  %call30 = call i32 @usbfs_increase_memory_usage(i64 %add) #11, !dbg !10678
  store i32 %call30, i32* %ret, align 4, !dbg !10679
  %28 = load i32, i32* %ret, align 4, !dbg !10680
  %tobool31 = icmp ne i32 %28, 0, !dbg !10680
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !10682

if.then32:                                        ; preds = %if.end28
  %29 = load i32, i32* %ret, align 4, !dbg !10683
  store i32 %29, i32* %retval, align 4, !dbg !10684
  br label %return, !dbg !10684

if.end33:                                         ; preds = %if.end28
  %30 = load i32, i32* %len1, align 4, !dbg !10685
  %conv34 = zext i32 %30 to i64, !dbg !10685
  store i64 %conv34, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %31 = load i64, i64* %size.addr.i, align 8, !dbg !10686
  %32 = call i1 @llvm.is.constant.i64(i64 %31) #7, !dbg !10687
  br i1 %32, label %if.then.i, label %if.end9.i, !dbg !10688

if.then.i:                                        ; preds = %if.end33
  %33 = load i64, i64* %size.addr.i, align 8, !dbg !10689
  %cmp.i = icmp ugt i64 %33, 8192, !dbg !10690
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10691

if.then1.i:                                       ; preds = %if.then.i
  %34 = load i64, i64* %size.addr.i, align 8, !dbg !10692
  %35 = load i32, i32* %flags.addr.i, align 4, !dbg !10693
  store i64 %34, i64* %size.addr.i.i, align 8
  store i32 %35, i32* %flags.addr.i.i, align 4
  %36 = load i64, i64* %size.addr.i.i, align 8, !dbg !10694
  %call.i.i = call i32 @get_order(i64 %36) #15, !dbg !10695
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !10598
  %37 = load i64, i64* %size.addr.i.i, align 8, !dbg !10696
  %38 = load i32, i32* %flags.addr.i.i, align 4, !dbg !10697
  %39 = load i32, i32* %order.i.i, align 4, !dbg !10698
  store i64 %37, i64* %size.addr.i.i.i, align 8
  store i32 %38, i32* %flags.addr.i.i.i, align 4
  store i32 %39, i32* %order.addr.i.i.i, align 4
  %40 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !10699
  %41 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !10700
  %42 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10701
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %40, i32 %41, i32 %42) #13, !dbg !10702
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10702
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10702
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10702
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !10702
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10703
  br label %kmalloc.exit, !dbg !10703

if.end.i:                                         ; preds = %if.then.i
  %43 = load i64, i64* %size.addr.i, align 8, !dbg !10704
  store i64 %43, i64* %size.addr.i11.i, align 8
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10705
  %tobool.i.i = icmp ne i64 %44, 0, !dbg !10705
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10707

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10708
  br label %kmalloc_index.exit.i, !dbg !10708

if.end.i.i:                                       ; preds = %if.end.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10709
  %cmp.i.i = icmp ule i64 %45, 8, !dbg !10711
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10712

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10713
  br label %kmalloc_index.exit.i, !dbg !10713

if.end2.i.i:                                      ; preds = %if.end.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10714
  %cmp3.i.i = icmp ugt i64 %46, 64, !dbg !10716
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10717

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10718
  %cmp4.i.i = icmp ule i64 %47, 96, !dbg !10719
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10720

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10721
  br label %kmalloc_index.exit.i, !dbg !10721

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10722
  %cmp7.i.i = icmp ugt i64 %48, 128, !dbg !10724
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10725

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10726
  %cmp9.i.i = icmp ule i64 %49, 192, !dbg !10727
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10728

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10729
  br label %kmalloc_index.exit.i, !dbg !10729

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10730
  %cmp12.i.i = icmp ule i64 %50, 8, !dbg !10732
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !10733

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10734
  br label %kmalloc_index.exit.i, !dbg !10734

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10735
  %cmp15.i.i = icmp ule i64 %51, 16, !dbg !10737
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !10738

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !10739
  br label %kmalloc_index.exit.i, !dbg !10739

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10740
  %cmp18.i.i = icmp ule i64 %52, 32, !dbg !10742
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !10743

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !10744
  br label %kmalloc_index.exit.i, !dbg !10744

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10745
  %cmp21.i.i = icmp ule i64 %53, 64, !dbg !10747
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !10748

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !10749
  br label %kmalloc_index.exit.i, !dbg !10749

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10750
  %cmp24.i.i = icmp ule i64 %54, 128, !dbg !10752
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !10753

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !10754
  br label %kmalloc_index.exit.i, !dbg !10754

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10755
  %cmp27.i.i = icmp ule i64 %55, 256, !dbg !10757
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !10758

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !10759
  br label %kmalloc_index.exit.i, !dbg !10759

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10760
  %cmp30.i.i = icmp ule i64 %56, 512, !dbg !10762
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !10763

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !10764
  br label %kmalloc_index.exit.i, !dbg !10764

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10765
  %cmp33.i.i = icmp ule i64 %57, 1024, !dbg !10767
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !10768

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !10769
  br label %kmalloc_index.exit.i, !dbg !10769

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10770
  %cmp36.i.i = icmp ule i64 %58, 2048, !dbg !10772
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !10773

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !10774
  br label %kmalloc_index.exit.i, !dbg !10774

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %59 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10775
  %cmp39.i.i = icmp ule i64 %59, 4096, !dbg !10777
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !10778

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !10779
  br label %kmalloc_index.exit.i, !dbg !10779

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %60 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10780
  %cmp42.i.i = icmp ule i64 %60, 8192, !dbg !10782
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !10783

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !10784
  br label %kmalloc_index.exit.i, !dbg !10784

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %61 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10785
  %cmp45.i.i = icmp ule i64 %61, 16384, !dbg !10787
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !10788

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !10789
  br label %kmalloc_index.exit.i, !dbg !10789

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %62 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10790
  %cmp48.i.i = icmp ule i64 %62, 32768, !dbg !10792
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !10793

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !10794
  br label %kmalloc_index.exit.i, !dbg !10794

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %63 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10795
  %cmp51.i.i = icmp ule i64 %63, 65536, !dbg !10797
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !10798

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !10799
  br label %kmalloc_index.exit.i, !dbg !10799

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %64 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10800
  %cmp54.i.i = icmp ule i64 %64, 131072, !dbg !10802
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !10803

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !10804
  br label %kmalloc_index.exit.i, !dbg !10804

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %65 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10805
  %cmp57.i.i = icmp ule i64 %65, 262144, !dbg !10807
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !10808

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !10809
  br label %kmalloc_index.exit.i, !dbg !10809

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %66 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10810
  %cmp60.i.i = icmp ule i64 %66, 524288, !dbg !10812
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !10813

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !10814
  br label %kmalloc_index.exit.i, !dbg !10814

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %67 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10815
  %cmp63.i.i = icmp ule i64 %67, 1048576, !dbg !10817
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !10818

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !10819
  br label %kmalloc_index.exit.i, !dbg !10819

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %68 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10820
  %cmp66.i.i = icmp ule i64 %68, 2097152, !dbg !10822
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !10823

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !10824
  br label %kmalloc_index.exit.i, !dbg !10824

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %69 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10825
  %cmp69.i.i = icmp ule i64 %69, 4194304, !dbg !10827
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !10828

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !10829
  br label %kmalloc_index.exit.i, !dbg !10829

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %70 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10830
  %cmp72.i.i = icmp ule i64 %70, 8388608, !dbg !10832
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !10833

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10834
  br label %kmalloc_index.exit.i, !dbg !10834

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %71 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10835
  %cmp75.i.i = icmp ule i64 %71, 16777216, !dbg !10837
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10838

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10839
  br label %kmalloc_index.exit.i, !dbg !10839

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %72 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10840
  %cmp78.i.i = icmp ule i64 %72, 33554432, !dbg !10842
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10843

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10844
  br label %kmalloc_index.exit.i, !dbg !10844

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %73 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10845
  %cmp81.i.i = icmp ule i64 %73, 67108864, !dbg !10847
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10848

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10849
  br label %kmalloc_index.exit.i, !dbg !10849

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !10850, !srcloc !10853
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 214) #7, !dbg !10854, !srcloc !10857
  unreachable, !dbg !10858

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %74 = load i32, i32* %retval.i.i, align 4, !dbg !10859
  store i32 %74, i32* %index.i, align 4, !dbg !10860
  %75 = load i32, i32* %index.i, align 4, !dbg !10861
  %tobool.i = icmp ne i32 %75, 0, !dbg !10861
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !10863

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !10864
  br label %kmalloc.exit, !dbg !10864

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %76 = load i32, i32* %flags.addr.i, align 4, !dbg !10865
  store i32 %76, i32* %flags.addr.i13.i, align 4
  %77 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10866
  %and.i.i = and i32 %77, 17, !dbg !10866
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !10866
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !10866
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !10866
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10866
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !10868

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !10869
  br label %kmalloc_type.exit.i, !dbg !10869

if.end.i16.i:                                     ; preds = %if.end4.i
  %78 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10870
  %and2.i.i = and i32 %78, 1, !dbg !10871
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !10870
  %79 = zext i1 %tobool3.i.i to i64, !dbg !10870
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !10870
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !10872
  br label %kmalloc_type.exit.i, !dbg !10872

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %80 = load i32, i32* %retval.i12.i, align 4, !dbg !10873
  %idxprom.i = zext i32 %80 to i64, !dbg !10874
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !10874
  %81 = load i32, i32* %index.i, align 4, !dbg !10875
  %idxprom6.i = zext i32 %81 to i64, !dbg !10874
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !10874
  %82 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !10874
  %83 = load i32, i32* %flags.addr.i, align 4, !dbg !10876
  %84 = load i64, i64* %size.addr.i, align 8, !dbg !10877
  store %struct.kmem_cache* %82, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %83, i32* %flags.addr.i17.i, align 4
  store i64 %84, i64* %size.addr.i18.i, align 8
  %85 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10878
  %86 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10879
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %85, i32 %86) #13, !dbg !10880
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !10880
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !10880
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !10880
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !10880
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !10567
  %87 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10881
  %88 = load i8*, i8** %ret.i.i, align 8, !dbg !10882
  %89 = load i64, i64* %size.addr.i18.i, align 8, !dbg !10883
  %90 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10884
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %87, i8* %88, i64 %89, i32 %90) #13, !dbg !10885
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !10886
  %91 = load i8*, i8** %ret.i.i, align 8, !dbg !10887
  store i8* %91, i8** %retval.i, align 8, !dbg !10888
  br label %kmalloc.exit, !dbg !10888

if.end9.i:                                        ; preds = %if.end33
  %92 = load i64, i64* %size.addr.i, align 8, !dbg !10889
  %93 = load i32, i32* %flags.addr.i, align 4, !dbg !10890
  %call10.i = call noalias i8* @__kmalloc(i64 %92, i32 %93) #13, !dbg !10891
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10891
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10891
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10891
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !10891
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10892
  br label %kmalloc.exit, !dbg !10892

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %94 = load i8*, i8** %retval.i, align 8, !dbg !10893
  store i8* %94, i8** %tbuf, align 8, !dbg !10894
  %95 = load i8*, i8** %tbuf, align 8, !dbg !10895
  %tobool36 = icmp ne i8* %95, null, !dbg !10895
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !10897

if.then37:                                        ; preds = %kmalloc.exit
  store i32 -12, i32* %ret, align 4, !dbg !10898
  br label %done, !dbg !10900

if.end38:                                         ; preds = %kmalloc.exit
  %96 = load %struct.usbdevfs_bulktransfer*, %struct.usbdevfs_bulktransfer** %bulk.addr, align 8, !dbg !10901
  %timeout = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %96, i32 0, i32 2, !dbg !10902
  %97 = load i32, i32* %timeout, align 8, !dbg !10902
  store i32 %97, i32* %tmo, align 4, !dbg !10903
  %98 = load %struct.usbdevfs_bulktransfer*, %struct.usbdevfs_bulktransfer** %bulk.addr, align 8, !dbg !10904
  %ep39 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %98, i32 0, i32 0, !dbg !10905
  %99 = load i32, i32* %ep39, align 8, !dbg !10905
  %and40 = and i32 %99, 128, !dbg !10906
  %tobool41 = icmp ne i32 %and40, 0, !dbg !10906
  br i1 %tobool41, label %if.then42, label %if.else55, !dbg !10907

if.then42:                                        ; preds = %if.end38
  %100 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !10908
  %101 = load i32, i32* %pipe, align 4, !dbg !10909
  %102 = load i32, i32* %len1, align 4, !dbg !10910
  %103 = load i32, i32* %tmo, align 4, !dbg !10911
  call void @snoop_urb(%struct.usb_device* %100, i8* null, i32 %101, i32 %102, i32 %103, i32 0, i8* null, i32 0) #11, !dbg !10912
  %104 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !10913
  %dev43 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %104, i32 0, i32 14, !dbg !10913
  call void @device_unlock(%struct.device* %dev43) #11, !dbg !10913
  %105 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !10914
  %106 = load i32, i32* %pipe, align 4, !dbg !10915
  %107 = load i8*, i8** %tbuf, align 8, !dbg !10916
  %108 = load i32, i32* %len1, align 4, !dbg !10917
  %109 = load i32, i32* %tmo, align 4, !dbg !10918
  %call44 = call i32 @usb_bulk_msg(%struct.usb_device* %105, i32 %106, i8* %107, i32 %108, i32* %len2, i32 %109) #11, !dbg !10919
  store i32 %call44, i32* %i, align 4, !dbg !10920
  %110 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !10921
  %dev45 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %110, i32 0, i32 14, !dbg !10921
  call void @device_lock(%struct.device* %dev45) #11, !dbg !10921
  %111 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !10922
  %112 = load i32, i32* %pipe, align 4, !dbg !10923
  %113 = load i32, i32* %len2, align 4, !dbg !10924
  %114 = load i32, i32* %i, align 4, !dbg !10925
  %115 = load i8*, i8** %tbuf, align 8, !dbg !10926
  %116 = load i32, i32* %len2, align 4, !dbg !10927
  call void @snoop_urb(%struct.usb_device* %111, i8* null, i32 %112, i32 %113, i32 %114, i32 1, i8* %115, i32 %116) #11, !dbg !10928
  %117 = load i32, i32* %i, align 4, !dbg !10929
  %tobool46 = icmp ne i32 %117, 0, !dbg !10929
  br i1 %tobool46, label %if.end54, label %land.lhs.true, !dbg !10930

land.lhs.true:                                    ; preds = %if.then42
  %118 = load i32, i32* %len2, align 4, !dbg !10931
  %tobool47 = icmp ne i32 %118, 0, !dbg !10931
  br i1 %tobool47, label %if.then48, label %if.end54, !dbg !10932

if.then48:                                        ; preds = %land.lhs.true
  %119 = load %struct.usbdevfs_bulktransfer*, %struct.usbdevfs_bulktransfer** %bulk.addr, align 8, !dbg !10933
  %data = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %119, i32 0, i32 3, !dbg !10934
  %120 = load i8*, i8** %data, align 8, !dbg !10934
  %121 = load i8*, i8** %tbuf, align 8, !dbg !10935
  %122 = load i32, i32* %len2, align 4, !dbg !10936
  %conv49 = sext i32 %122 to i64, !dbg !10936
  store i8* %120, i8** %to.addr.i, align 8
  store i8* %121, i8** %from.addr.i, align 8
  store i64 %conv49, i64* %n.addr.i, align 8
  %123 = load i8*, i8** %from.addr.i, align 8, !dbg !10937
  %124 = load i64, i64* %n.addr.i, align 8, !dbg !10937
  store i8* %123, i8** %addr.addr.i.i, align 8
  store i64 %124, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !10545
  %125 = load i32, i32* %sz.i.i, align 4, !dbg !10938
  %cmp.i.i74 = icmp sge i32 %125, 0, !dbg !10938
  br i1 %cmp.i.i74, label %land.rhs.i.i, label %land.end.i.i, !dbg !10938

land.rhs.i.i:                                     ; preds = %if.then48
  %126 = load i32, i32* %sz.i.i, align 4, !dbg !10938
  %conv.i.i75 = sext i32 %126 to i64, !dbg !10938
  %127 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10938
  %cmp1.i.i = icmp ult i64 %conv.i.i75, %127, !dbg !10938
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.then48
  %128 = phi i1 [ false, %if.then48 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !10939
  %lnot.i.i76 = xor i1 %128, true, !dbg !10938
  %lnot.ext.i.i77 = zext i1 %128 to i32, !dbg !10938
  %conv4.i.i = sext i32 %lnot.ext.i.i77 to i64, !dbg !10938
  br i1 %128, label %if.then.i.i78, label %if.end10.i.i, !dbg !10940

if.then.i.i78:                                    ; preds = %land.end.i.i
  %129 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10941
  %130 = call i1 @llvm.is.constant.i64(i64 %129) #7, !dbg !10942
  br i1 %130, label %if.else.i.i, label %if.then5.i.i79, !dbg !10943

if.then5.i.i79:                                   ; preds = %if.then.i.i78
  %131 = load i32, i32* %sz.i.i, align 4, !dbg !10944
  %132 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10945
  call void @copy_overflow(i32 %131, i64 %132) #13, !dbg !10946
  br label %if.end9.i.i, !dbg !10946

if.else.i.i:                                      ; preds = %if.then.i.i78
  %133 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10947
  %tobool6.i.i = trunc i8 %133 to i1, !dbg !10947
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !10948

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !10949
  br label %if.end.i.i80, !dbg !10949

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !10950
  br label %if.end.i.i80

if.end.i.i80:                                     ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i80, %if.then5.i.i79
  store i1 false, i1* %retval.i.i73, align 1, !dbg !10951
  br label %check_copy_size.exit.i, !dbg !10951

if.end10.i.i:                                     ; preds = %land.end.i.i
  %134 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10546
  %cmp11.i.i = icmp ugt i64 %134, 2147483647, !dbg !10546
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !10546
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !10546
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !10546
  %135 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10952
  %tobool17.i.i = icmp ne i32 %135, 0, !dbg !10952
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !10952
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !10952
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !10952
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !10546

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !10953, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !10954, !srcloc !5212
  br label %if.end31.i.i, !dbg !10955

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %136 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !10546
  %tobool32.i.i = icmp ne i32 %136, 0, !dbg !10546
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !10546
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !10546
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !10546
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !10952
  %137 = load i64, i64* %tmp.i.i, align 8, !dbg !10546
  %tobool38.i.i = icmp ne i64 %137, 0, !dbg !10956
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !10957

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i73, align 1, !dbg !10958
  br label %check_copy_size.exit.i, !dbg !10958

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %138 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !10959
  %139 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !10960
  %140 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !10961
  %tobool41.i.i = trunc i8 %140 to i1, !dbg !10961
  call void @check_object_size(i8* %138, i64 %139, i1 zeroext %tobool41.i.i) #13, !dbg !10962
  store i1 true, i1* %retval.i.i73, align 1, !dbg !10963
  br label %check_copy_size.exit.i, !dbg !10963

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %141 = load i1, i1* %retval.i.i73, align 1, !dbg !10964
  %lnot.i = xor i1 %141, true, !dbg !10937
  %lnot.ext.i = zext i1 %141 to i32, !dbg !10937
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !10937
  br i1 %141, label %if.then.i81, label %copy_to_user.exit, !dbg !10965

if.then.i81:                                      ; preds = %check_copy_size.exit.i
  %142 = load i8*, i8** %to.addr.i, align 8, !dbg !10966
  %143 = load i8*, i8** %from.addr.i, align 8, !dbg !10967
  %144 = load i64, i64* %n.addr.i, align 8, !dbg !10968
  %call2.i = call i64 @_copy_to_user(i8* %142, i8* %143, i64 %144) #13, !dbg !10969
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !10970
  br label %copy_to_user.exit, !dbg !10971

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i81
  %145 = load i64, i64* %n.addr.i, align 8, !dbg !10972
  %tobool51 = icmp ne i64 %145, 0, !dbg !10973
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !10974

if.then52:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %ret, align 4, !dbg !10975
  br label %done, !dbg !10977

if.end53:                                         ; preds = %copy_to_user.exit
  br label %if.end54, !dbg !10978

if.end54:                                         ; preds = %if.end53, %land.lhs.true, %if.then42
  br label %if.end68, !dbg !10979

if.else55:                                        ; preds = %if.end38
  %146 = load i32, i32* %len1, align 4, !dbg !10980
  %tobool56 = icmp ne i32 %146, 0, !dbg !10980
  br i1 %tobool56, label %if.then57, label %if.end64, !dbg !10981

if.then57:                                        ; preds = %if.else55
  %147 = load i8*, i8** %tbuf, align 8, !dbg !10982
  %148 = load %struct.usbdevfs_bulktransfer*, %struct.usbdevfs_bulktransfer** %bulk.addr, align 8, !dbg !10983
  %data58 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %148, i32 0, i32 3, !dbg !10984
  %149 = load i8*, i8** %data58, align 8, !dbg !10984
  %150 = load i32, i32* %len1, align 4, !dbg !10985
  %conv59 = zext i32 %150 to i64, !dbg !10985
  store i8* %147, i8** %to.addr.i90, align 8
  store i8* %149, i8** %from.addr.i91, align 8
  store i64 %conv59, i64* %n.addr.i92, align 8
  %151 = load i8*, i8** %to.addr.i90, align 8, !dbg !10986
  %152 = load i64, i64* %n.addr.i92, align 8, !dbg !10986
  store i8* %151, i8** %addr.addr.i.i84, align 8
  store i64 %152, i64* %bytes.addr.i.i85, align 8
  store i8 0, i8* %is_source.addr.i.i86, align 1
  store i32 -1, i32* %sz.i.i87, align 4, !dbg !10531
  %153 = load i32, i32* %sz.i.i87, align 4, !dbg !10987
  %cmp.i.i93 = icmp sge i32 %153, 0, !dbg !10987
  br i1 %cmp.i.i93, label %land.rhs.i.i96, label %land.end.i.i100, !dbg !10987

land.rhs.i.i96:                                   ; preds = %if.then57
  %154 = load i32, i32* %sz.i.i87, align 4, !dbg !10987
  %conv.i.i94 = sext i32 %154 to i64, !dbg !10987
  %155 = load i64, i64* %bytes.addr.i.i85, align 8, !dbg !10987
  %cmp1.i.i95 = icmp ult i64 %conv.i.i94, %155, !dbg !10987
  br label %land.end.i.i100

land.end.i.i100:                                  ; preds = %land.rhs.i.i96, %if.then57
  %156 = phi i1 [ false, %if.then57 ], [ %cmp1.i.i95, %land.rhs.i.i96 ], !dbg !10988
  %lnot.i.i97 = xor i1 %156, true, !dbg !10987
  %lnot.ext.i.i98 = zext i1 %156 to i32, !dbg !10987
  %conv4.i.i99 = sext i32 %lnot.ext.i.i98 to i64, !dbg !10987
  br i1 %156, label %if.then.i.i101, label %if.end10.i.i116, !dbg !10989

if.then.i.i101:                                   ; preds = %land.end.i.i100
  %157 = load i64, i64* %bytes.addr.i.i85, align 8, !dbg !10990
  %158 = call i1 @llvm.is.constant.i64(i64 %157) #7, !dbg !10991
  br i1 %158, label %if.else.i.i104, label %if.then5.i.i102, !dbg !10992

if.then5.i.i102:                                  ; preds = %if.then.i.i101
  %159 = load i32, i32* %sz.i.i87, align 4, !dbg !10993
  %160 = load i64, i64* %bytes.addr.i.i85, align 8, !dbg !10994
  call void @copy_overflow(i32 %159, i64 %160) #13, !dbg !10995
  br label %if.end9.i.i108, !dbg !10995

if.else.i.i104:                                   ; preds = %if.then.i.i101
  %161 = load i8, i8* %is_source.addr.i.i86, align 1, !dbg !10996
  %tobool6.i.i103 = trunc i8 %161 to i1, !dbg !10996
  br i1 %tobool6.i.i103, label %if.then7.i.i105, label %if.else8.i.i106, !dbg !10997

if.then7.i.i105:                                  ; preds = %if.else.i.i104
  call void @__bad_copy_from() #13, !dbg !10998
  br label %if.end.i.i107, !dbg !10998

if.else8.i.i106:                                  ; preds = %if.else.i.i104
  call void @__bad_copy_to() #13, !dbg !10999
  br label %if.end.i.i107

if.end.i.i107:                                    ; preds = %if.else8.i.i106, %if.then7.i.i105
  br label %if.end9.i.i108

if.end9.i.i108:                                   ; preds = %if.end.i.i107, %if.then5.i.i102
  store i1 false, i1* %retval.i.i83, align 1, !dbg !11000
  br label %check_copy_size.exit.i130, !dbg !11000

if.end10.i.i116:                                  ; preds = %land.end.i.i100
  %162 = load i64, i64* %bytes.addr.i.i85, align 8, !dbg !10532
  %cmp11.i.i109 = icmp ugt i64 %162, 2147483647, !dbg !10532
  %lnot13.i.i110 = xor i1 %cmp11.i.i109, true, !dbg !10532
  %lnot.ext16.i.i111 = zext i1 %cmp11.i.i109 to i32, !dbg !10532
  store i32 %lnot.ext16.i.i111, i32* %__ret_warn_on.i.i88, align 4, !dbg !10532
  %163 = load i32, i32* %__ret_warn_on.i.i88, align 4, !dbg !11001
  %tobool17.i.i112 = icmp ne i32 %163, 0, !dbg !11001
  %lnot18.i.i113 = xor i1 %tobool17.i.i112, true, !dbg !11001
  %lnot.ext21.i.i114 = zext i1 %tobool17.i.i112 to i32, !dbg !11001
  %conv22.i.i115 = sext i32 %lnot.ext21.i.i114 to i64, !dbg !11001
  br i1 %tobool17.i.i112, label %if.then24.i.i117, label %if.end31.i.i123, !dbg !10532

if.then24.i.i117:                                 ; preds = %if.end10.i.i116
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !11002, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !11003, !srcloc !5212
  br label %if.end31.i.i123, !dbg !11004

if.end31.i.i123:                                  ; preds = %if.then24.i.i117, %if.end10.i.i116
  %164 = load i32, i32* %__ret_warn_on.i.i88, align 4, !dbg !10532
  %tobool32.i.i118 = icmp ne i32 %164, 0, !dbg !10532
  %lnot33.i.i119 = xor i1 %tobool32.i.i118, true, !dbg !10532
  %lnot.ext36.i.i120 = zext i1 %tobool32.i.i118 to i32, !dbg !10532
  %conv37.i.i121 = sext i32 %lnot.ext36.i.i120 to i64, !dbg !10532
  store i64 %conv37.i.i121, i64* %tmp.i.i89, align 8, !dbg !11001
  %165 = load i64, i64* %tmp.i.i89, align 8, !dbg !10532
  %tobool38.i.i122 = icmp ne i64 %165, 0, !dbg !11005
  br i1 %tobool38.i.i122, label %if.then39.i.i124, label %if.end40.i.i126, !dbg !11006

if.then39.i.i124:                                 ; preds = %if.end31.i.i123
  store i1 false, i1* %retval.i.i83, align 1, !dbg !11007
  br label %check_copy_size.exit.i130, !dbg !11007

if.end40.i.i126:                                  ; preds = %if.end31.i.i123
  %166 = load i8*, i8** %addr.addr.i.i84, align 8, !dbg !11008
  %167 = load i64, i64* %bytes.addr.i.i85, align 8, !dbg !11009
  %168 = load i8, i8* %is_source.addr.i.i86, align 1, !dbg !11010
  %tobool41.i.i125 = trunc i8 %168 to i1, !dbg !11010
  call void @check_object_size(i8* %166, i64 %167, i1 zeroext %tobool41.i.i125) #13, !dbg !11011
  store i1 true, i1* %retval.i.i83, align 1, !dbg !11012
  br label %check_copy_size.exit.i130, !dbg !11012

check_copy_size.exit.i130:                        ; preds = %if.end40.i.i126, %if.then39.i.i124, %if.end9.i.i108
  %169 = load i1, i1* %retval.i.i83, align 1, !dbg !11013
  %lnot.i127 = xor i1 %169, true, !dbg !10986
  %lnot.ext.i128 = zext i1 %169 to i32, !dbg !10986
  %conv.i129 = sext i32 %lnot.ext.i128 to i64, !dbg !10986
  br i1 %169, label %if.then.i132, label %copy_from_user.exit, !dbg !11014

if.then.i132:                                     ; preds = %check_copy_size.exit.i130
  %170 = load i8*, i8** %to.addr.i90, align 8, !dbg !11015
  %171 = load i8*, i8** %from.addr.i91, align 8, !dbg !11016
  %172 = load i64, i64* %n.addr.i92, align 8, !dbg !11017
  %call2.i131 = call i64 @_copy_from_user(i8* %170, i8* %171, i64 %172) #13, !dbg !11018
  store i64 %call2.i131, i64* %n.addr.i92, align 8, !dbg !11019
  br label %copy_from_user.exit, !dbg !11020

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i130, %if.then.i132
  %173 = load i64, i64* %n.addr.i92, align 8, !dbg !11021
  %tobool61 = icmp ne i64 %173, 0, !dbg !11022
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !11023

if.then62:                                        ; preds = %copy_from_user.exit
  store i32 -14, i32* %ret, align 4, !dbg !11024
  br label %done, !dbg !11026

if.end63:                                         ; preds = %copy_from_user.exit
  br label %if.end64, !dbg !11027

if.end64:                                         ; preds = %if.end63, %if.else55
  %174 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !11028
  %175 = load i32, i32* %pipe, align 4, !dbg !11029
  %176 = load i32, i32* %len1, align 4, !dbg !11030
  %177 = load i32, i32* %tmo, align 4, !dbg !11031
  %178 = load i8*, i8** %tbuf, align 8, !dbg !11032
  %179 = load i32, i32* %len1, align 4, !dbg !11033
  call void @snoop_urb(%struct.usb_device* %174, i8* null, i32 %175, i32 %176, i32 %177, i32 0, i8* %178, i32 %179) #11, !dbg !11034
  %180 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !11035
  %dev65 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %180, i32 0, i32 14, !dbg !11035
  call void @device_unlock(%struct.device* %dev65) #11, !dbg !11035
  %181 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !11036
  %182 = load i32, i32* %pipe, align 4, !dbg !11037
  %183 = load i8*, i8** %tbuf, align 8, !dbg !11038
  %184 = load i32, i32* %len1, align 4, !dbg !11039
  %185 = load i32, i32* %tmo, align 4, !dbg !11040
  %call66 = call i32 @usb_bulk_msg(%struct.usb_device* %181, i32 %182, i8* %183, i32 %184, i32* %len2, i32 %185) #11, !dbg !11041
  store i32 %call66, i32* %i, align 4, !dbg !11042
  %186 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !11043
  %dev67 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %186, i32 0, i32 14, !dbg !11043
  call void @device_lock(%struct.device* %dev67) #11, !dbg !11043
  %187 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !11044
  %188 = load i32, i32* %pipe, align 4, !dbg !11045
  %189 = load i32, i32* %len2, align 4, !dbg !11046
  %190 = load i32, i32* %i, align 4, !dbg !11047
  call void @snoop_urb(%struct.usb_device* %187, i8* null, i32 %188, i32 %189, i32 %190, i32 1, i8* null, i32 0) #11, !dbg !11048
  br label %if.end68

if.end68:                                         ; preds = %if.end64, %if.end54
  %191 = load i32, i32* %i, align 4, !dbg !11049
  %cmp69 = icmp slt i32 %191, 0, !dbg !11050
  br i1 %cmp69, label %cond.true, label %cond.false, !dbg !11049

cond.true:                                        ; preds = %if.end68
  %192 = load i32, i32* %i, align 4, !dbg !11051
  br label %cond.end, !dbg !11049

cond.false:                                       ; preds = %if.end68
  %193 = load i32, i32* %len2, align 4, !dbg !11052
  br label %cond.end, !dbg !11049

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %192, %cond.true ], [ %193, %cond.false ], !dbg !11049
  store i32 %cond, i32* %ret, align 4, !dbg !11053
  br label %done, !dbg !11054

done:                                             ; preds = %cond.end, %if.then62, %if.then52, %if.then37
  call void @llvm.dbg.label(metadata !11055), !dbg !11056
  %194 = load i8*, i8** %tbuf, align 8, !dbg !11057
  call void @kfree(i8* %194) #11, !dbg !11058
  %195 = load i32, i32* %len1, align 4, !dbg !11059
  %conv71 = zext i32 %195 to i64, !dbg !11059
  %add72 = add i64 %conv71, 184, !dbg !11060
  call void @usbfs_decrease_memory_usage(i64 %add72) #11, !dbg !11061
  %196 = load i32, i32* %ret, align 4, !dbg !11062
  store i32 %196, i32* %retval, align 4, !dbg !11063
  br label %return, !dbg !11063

return:                                           ; preds = %done, %if.then32, %if.then27, %if.then23, %if.then4, %if.then
  %197 = load i32, i32* %retval, align 4, !dbg !11064
  ret i32 %197, !dbg !11064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @usb_maxpacket(%struct.usb_device* %udev, i32 %pipe, i32 %is_out) #0 !dbg !11065 {
entry:
  %retval = alloca i16, align 2
  %udev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %is_out.addr = alloca i32, align 4
  %ep = alloca %struct.usb_host_endpoint*, align 8
  %epnum = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on23 = alloca i32, align 4
  %tmp49 = alloca i64, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !11068, metadata !DIExpression()), !dbg !11069
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !11070, metadata !DIExpression()), !dbg !11071
  store i32 %is_out, i32* %is_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_out.addr, metadata !11072, metadata !DIExpression()), !dbg !11073
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep, metadata !11074, metadata !DIExpression()), !dbg !11075
  call void @llvm.dbg.declare(metadata i32* %epnum, metadata !11076, metadata !DIExpression()), !dbg !11077
  %0 = load i32, i32* %pipe.addr, align 4, !dbg !11078
  %shr = ashr i32 %0, 15, !dbg !11078
  %and = and i32 %shr, 15, !dbg !11078
  store i32 %and, i32* %epnum, align 4, !dbg !11077
  %1 = load i32, i32* %is_out.addr, align 4, !dbg !11079
  %tobool = icmp ne i32 %1, 0, !dbg !11079
  br i1 %tobool, label %if.then, label %if.else, !dbg !11081

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11082, metadata !DIExpression()), !dbg !11085
  %2 = load i32, i32* %pipe.addr, align 4, !dbg !11085
  %and1 = and i32 %2, 128, !dbg !11085
  %tobool2 = icmp ne i32 %and1, 0, !dbg !11085
  %lnot = xor i1 %tobool2, true, !dbg !11085
  %lnot3 = xor i1 %lnot, true, !dbg !11085
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11085
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11085
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !11086
  %tobool4 = icmp ne i32 %3, 0, !dbg !11086
  %lnot5 = xor i1 %tobool4, true, !dbg !11086
  %lnot7 = xor i1 %lnot5, true, !dbg !11086
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !11086
  %conv = sext i32 %lnot.ext8 to i64, !dbg !11086
  %tobool9 = icmp ne i64 %conv, 0, !dbg !11086
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !11085

if.then10:                                        ; preds = %if.then
  br label %do.body, !dbg !11086

do.body:                                          ; preds = %if.then10
  br label %do.body11, !dbg !11088

do.body11:                                        ; preds = %do.body
  br label %do.end, !dbg !11090

do.end:                                           ; preds = %do.body11
  br label %do.body12, !dbg !11088

do.body12:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43, i64 0, i64 0), i32 1986, i32 2305, i64 12) #7, !dbg !11092, !srcloc !11094
  br label %do.end13, !dbg !11092

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 233) #7, !dbg !11095, !srcloc !11097
  br label %do.body14, !dbg !11088

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !11098

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !11088

do.end16:                                         ; preds = %do.end15
  br label %if.end, !dbg !11088

if.end:                                           ; preds = %do.end16, %if.then
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !11085
  %tobool17 = icmp ne i32 %4, 0, !dbg !11085
  %lnot18 = xor i1 %tobool17, true, !dbg !11085
  %lnot20 = xor i1 %lnot18, true, !dbg !11085
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !11085
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !11085
  store i64 %conv22, i64* %tmp, align 8, !dbg !11086
  %5 = load i64, i64* %tmp, align 8, !dbg !11085
  %6 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11100
  %ep_out = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 21, !dbg !11101
  %7 = load i32, i32* %epnum, align 4, !dbg !11102
  %idxprom = zext i32 %7 to i64, !dbg !11100
  %arrayidx = getelementptr [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %ep_out, i64 0, i64 %idxprom, !dbg !11100
  %8 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx, align 8, !dbg !11100
  store %struct.usb_host_endpoint* %8, %struct.usb_host_endpoint** %ep, align 8, !dbg !11103
  br label %if.end58, !dbg !11104

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on23, metadata !11105, metadata !DIExpression()), !dbg !11108
  %9 = load i32, i32* %pipe.addr, align 4, !dbg !11108
  %and24 = and i32 %9, 128, !dbg !11108
  %tobool25 = icmp ne i32 %and24, 0, !dbg !11108
  %lnot26 = xor i1 %tobool25, true, !dbg !11108
  %lnot28 = xor i1 %lnot26, true, !dbg !11108
  %lnot30 = xor i1 %lnot28, true, !dbg !11108
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !11108
  store i32 %lnot.ext31, i32* %__ret_warn_on23, align 4, !dbg !11108
  %10 = load i32, i32* %__ret_warn_on23, align 4, !dbg !11109
  %tobool32 = icmp ne i32 %10, 0, !dbg !11109
  %lnot33 = xor i1 %tobool32, true, !dbg !11109
  %lnot35 = xor i1 %lnot33, true, !dbg !11109
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !11109
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !11109
  %tobool38 = icmp ne i64 %conv37, 0, !dbg !11109
  br i1 %tobool38, label %if.then39, label %if.end48, !dbg !11108

if.then39:                                        ; preds = %if.else
  br label %do.body40, !dbg !11109

do.body40:                                        ; preds = %if.then39
  br label %do.body41, !dbg !11111

do.body41:                                        ; preds = %do.body40
  br label %do.end42, !dbg !11113

do.end42:                                         ; preds = %do.body41
  br label %do.body43, !dbg !11111

do.body43:                                        ; preds = %do.end42
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.43, i64 0, i64 0), i32 1989, i32 2305, i64 12) #7, !dbg !11115, !srcloc !11117
  br label %do.end44, !dbg !11115

do.end44:                                         ; preds = %do.body43
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 234) #7, !dbg !11118, !srcloc !11120
  br label %do.body45, !dbg !11111

do.body45:                                        ; preds = %do.end44
  br label %do.end46, !dbg !11121

do.end46:                                         ; preds = %do.body45
  br label %do.end47, !dbg !11111

do.end47:                                         ; preds = %do.end46
  br label %if.end48, !dbg !11111

if.end48:                                         ; preds = %do.end47, %if.else
  %11 = load i32, i32* %__ret_warn_on23, align 4, !dbg !11108
  %tobool50 = icmp ne i32 %11, 0, !dbg !11108
  %lnot51 = xor i1 %tobool50, true, !dbg !11108
  %lnot53 = xor i1 %lnot51, true, !dbg !11108
  %lnot.ext54 = zext i1 %lnot53 to i32, !dbg !11108
  %conv55 = sext i32 %lnot.ext54 to i64, !dbg !11108
  store i64 %conv55, i64* %tmp49, align 8, !dbg !11109
  %12 = load i64, i64* %tmp49, align 8, !dbg !11108
  %13 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11123
  %ep_in = getelementptr inbounds %struct.usb_device, %struct.usb_device* %13, i32 0, i32 20, !dbg !11124
  %14 = load i32, i32* %epnum, align 4, !dbg !11125
  %idxprom56 = zext i32 %14 to i64, !dbg !11123
  %arrayidx57 = getelementptr [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %ep_in, i64 0, i64 %idxprom56, !dbg !11123
  %15 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx57, align 8, !dbg !11123
  store %struct.usb_host_endpoint* %15, %struct.usb_host_endpoint** %ep, align 8, !dbg !11126
  br label %if.end58

if.end58:                                         ; preds = %if.end48, %if.end
  %16 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !11127
  %tobool59 = icmp ne %struct.usb_host_endpoint* %16, null, !dbg !11127
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !11129

if.then60:                                        ; preds = %if.end58
  store i16 0, i16* %retval, align 2, !dbg !11130
  br label %return, !dbg !11130

if.end61:                                         ; preds = %if.end58
  %17 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !11131
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %17, i32 0, i32 0, !dbg !11132
  %call = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !11133
  %conv62 = trunc i32 %call to i16, !dbg !11133
  store i16 %conv62, i16* %retval, align 2, !dbg !11134
  br label %return, !dbg !11134

return:                                           ; preds = %if.end61, %if.then60
  %18 = load i16, i16* %retval, align 2, !dbg !11135
  ret i16 %18, !dbg !11135
}

; Function Attrs: noredzone
declare dso_local i32 @usb_bulk_msg(%struct.usb_device*, i32, i8*, i32, i32*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %epd) #0 !dbg !11136 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !11137, metadata !DIExpression()), !dbg !11138
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !11139
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 4, !dbg !11139
  %1 = load i16, i16* %wMaxPacketSize, align 1, !dbg !11139
  %conv = zext i16 %1 to i32, !dbg !11139
  %and = and i32 %conv, 2047, !dbg !11140
  ret i32 %and, !dbg !11141
}

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !11142 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11146, metadata !DIExpression()), !dbg !11150
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11152, metadata !DIExpression()), !dbg !11153
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11154, metadata !DIExpression()), !dbg !11155
  %0 = load i64, i64* %size.addr, align 8, !dbg !11156
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !11158
  br i1 %1, label %if.then, label %if.end447, !dbg !11159

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !11160
  %tobool = icmp ne i64 %2, 0, !dbg !11160
  br i1 %tobool, label %if.end, label %if.then1, !dbg !11163

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !11164
  br label %return, !dbg !11164

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !11165
  %cmp = icmp ult i64 %3, 4096, !dbg !11167
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !11168

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11169
  br label %return, !dbg !11169

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub = sub i64 %4, 1, !dbg !11170
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !11170
  br i1 %5, label %cond.true, label %cond.false442, !dbg !11170

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub4 = sub i64 %6, 1, !dbg !11170
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !11170
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !11170

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub6 = sub i64 %8, 1, !dbg !11170
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !11170
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !11170

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !11170

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub9 = sub i64 %9, 1, !dbg !11170
  %and = and i64 %sub9, -9223372036854775808, !dbg !11170
  %tobool10 = icmp ne i64 %and, 0, !dbg !11170
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !11170

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !11170

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub13 = sub i64 %10, 1, !dbg !11170
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !11170
  %tobool15 = icmp ne i64 %and14, 0, !dbg !11170
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !11170

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !11170

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub18 = sub i64 %11, 1, !dbg !11170
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !11170
  %tobool20 = icmp ne i64 %and19, 0, !dbg !11170
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !11170

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !11170

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub23 = sub i64 %12, 1, !dbg !11170
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !11170
  %tobool25 = icmp ne i64 %and24, 0, !dbg !11170
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !11170

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !11170

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub28 = sub i64 %13, 1, !dbg !11170
  %and29 = and i64 %sub28, 576460752303423488, !dbg !11170
  %tobool30 = icmp ne i64 %and29, 0, !dbg !11170
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !11170

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !11170

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub33 = sub i64 %14, 1, !dbg !11170
  %and34 = and i64 %sub33, 288230376151711744, !dbg !11170
  %tobool35 = icmp ne i64 %and34, 0, !dbg !11170
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !11170

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !11170

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub38 = sub i64 %15, 1, !dbg !11170
  %and39 = and i64 %sub38, 144115188075855872, !dbg !11170
  %tobool40 = icmp ne i64 %and39, 0, !dbg !11170
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !11170

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !11170

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub43 = sub i64 %16, 1, !dbg !11170
  %and44 = and i64 %sub43, 72057594037927936, !dbg !11170
  %tobool45 = icmp ne i64 %and44, 0, !dbg !11170
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !11170

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !11170

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub48 = sub i64 %17, 1, !dbg !11170
  %and49 = and i64 %sub48, 36028797018963968, !dbg !11170
  %tobool50 = icmp ne i64 %and49, 0, !dbg !11170
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !11170

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !11170

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub53 = sub i64 %18, 1, !dbg !11170
  %and54 = and i64 %sub53, 18014398509481984, !dbg !11170
  %tobool55 = icmp ne i64 %and54, 0, !dbg !11170
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !11170

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !11170

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub58 = sub i64 %19, 1, !dbg !11170
  %and59 = and i64 %sub58, 9007199254740992, !dbg !11170
  %tobool60 = icmp ne i64 %and59, 0, !dbg !11170
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !11170

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !11170

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub63 = sub i64 %20, 1, !dbg !11170
  %and64 = and i64 %sub63, 4503599627370496, !dbg !11170
  %tobool65 = icmp ne i64 %and64, 0, !dbg !11170
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !11170

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !11170

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub68 = sub i64 %21, 1, !dbg !11170
  %and69 = and i64 %sub68, 2251799813685248, !dbg !11170
  %tobool70 = icmp ne i64 %and69, 0, !dbg !11170
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !11170

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !11170

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub73 = sub i64 %22, 1, !dbg !11170
  %and74 = and i64 %sub73, 1125899906842624, !dbg !11170
  %tobool75 = icmp ne i64 %and74, 0, !dbg !11170
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !11170

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !11170

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub78 = sub i64 %23, 1, !dbg !11170
  %and79 = and i64 %sub78, 562949953421312, !dbg !11170
  %tobool80 = icmp ne i64 %and79, 0, !dbg !11170
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !11170

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !11170

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub83 = sub i64 %24, 1, !dbg !11170
  %and84 = and i64 %sub83, 281474976710656, !dbg !11170
  %tobool85 = icmp ne i64 %and84, 0, !dbg !11170
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !11170

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !11170

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub88 = sub i64 %25, 1, !dbg !11170
  %and89 = and i64 %sub88, 140737488355328, !dbg !11170
  %tobool90 = icmp ne i64 %and89, 0, !dbg !11170
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !11170

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !11170

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub93 = sub i64 %26, 1, !dbg !11170
  %and94 = and i64 %sub93, 70368744177664, !dbg !11170
  %tobool95 = icmp ne i64 %and94, 0, !dbg !11170
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !11170

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !11170

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub98 = sub i64 %27, 1, !dbg !11170
  %and99 = and i64 %sub98, 35184372088832, !dbg !11170
  %tobool100 = icmp ne i64 %and99, 0, !dbg !11170
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !11170

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !11170

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub103 = sub i64 %28, 1, !dbg !11170
  %and104 = and i64 %sub103, 17592186044416, !dbg !11170
  %tobool105 = icmp ne i64 %and104, 0, !dbg !11170
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !11170

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !11170

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub108 = sub i64 %29, 1, !dbg !11170
  %and109 = and i64 %sub108, 8796093022208, !dbg !11170
  %tobool110 = icmp ne i64 %and109, 0, !dbg !11170
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !11170

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !11170

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub113 = sub i64 %30, 1, !dbg !11170
  %and114 = and i64 %sub113, 4398046511104, !dbg !11170
  %tobool115 = icmp ne i64 %and114, 0, !dbg !11170
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !11170

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !11170

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub118 = sub i64 %31, 1, !dbg !11170
  %and119 = and i64 %sub118, 2199023255552, !dbg !11170
  %tobool120 = icmp ne i64 %and119, 0, !dbg !11170
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !11170

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !11170

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub123 = sub i64 %32, 1, !dbg !11170
  %and124 = and i64 %sub123, 1099511627776, !dbg !11170
  %tobool125 = icmp ne i64 %and124, 0, !dbg !11170
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !11170

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !11170

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub128 = sub i64 %33, 1, !dbg !11170
  %and129 = and i64 %sub128, 549755813888, !dbg !11170
  %tobool130 = icmp ne i64 %and129, 0, !dbg !11170
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !11170

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !11170

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub133 = sub i64 %34, 1, !dbg !11170
  %and134 = and i64 %sub133, 274877906944, !dbg !11170
  %tobool135 = icmp ne i64 %and134, 0, !dbg !11170
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !11170

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !11170

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub138 = sub i64 %35, 1, !dbg !11170
  %and139 = and i64 %sub138, 137438953472, !dbg !11170
  %tobool140 = icmp ne i64 %and139, 0, !dbg !11170
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !11170

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !11170

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub143 = sub i64 %36, 1, !dbg !11170
  %and144 = and i64 %sub143, 68719476736, !dbg !11170
  %tobool145 = icmp ne i64 %and144, 0, !dbg !11170
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !11170

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !11170

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub148 = sub i64 %37, 1, !dbg !11170
  %and149 = and i64 %sub148, 34359738368, !dbg !11170
  %tobool150 = icmp ne i64 %and149, 0, !dbg !11170
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !11170

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !11170

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub153 = sub i64 %38, 1, !dbg !11170
  %and154 = and i64 %sub153, 17179869184, !dbg !11170
  %tobool155 = icmp ne i64 %and154, 0, !dbg !11170
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !11170

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !11170

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub158 = sub i64 %39, 1, !dbg !11170
  %and159 = and i64 %sub158, 8589934592, !dbg !11170
  %tobool160 = icmp ne i64 %and159, 0, !dbg !11170
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !11170

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !11170

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub163 = sub i64 %40, 1, !dbg !11170
  %and164 = and i64 %sub163, 4294967296, !dbg !11170
  %tobool165 = icmp ne i64 %and164, 0, !dbg !11170
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !11170

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !11170

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub168 = sub i64 %41, 1, !dbg !11170
  %and169 = and i64 %sub168, 2147483648, !dbg !11170
  %tobool170 = icmp ne i64 %and169, 0, !dbg !11170
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !11170

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !11170

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub173 = sub i64 %42, 1, !dbg !11170
  %and174 = and i64 %sub173, 1073741824, !dbg !11170
  %tobool175 = icmp ne i64 %and174, 0, !dbg !11170
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !11170

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !11170

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub178 = sub i64 %43, 1, !dbg !11170
  %and179 = and i64 %sub178, 536870912, !dbg !11170
  %tobool180 = icmp ne i64 %and179, 0, !dbg !11170
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !11170

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !11170

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub183 = sub i64 %44, 1, !dbg !11170
  %and184 = and i64 %sub183, 268435456, !dbg !11170
  %tobool185 = icmp ne i64 %and184, 0, !dbg !11170
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !11170

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !11170

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub188 = sub i64 %45, 1, !dbg !11170
  %and189 = and i64 %sub188, 134217728, !dbg !11170
  %tobool190 = icmp ne i64 %and189, 0, !dbg !11170
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !11170

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !11170

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub193 = sub i64 %46, 1, !dbg !11170
  %and194 = and i64 %sub193, 67108864, !dbg !11170
  %tobool195 = icmp ne i64 %and194, 0, !dbg !11170
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !11170

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !11170

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub198 = sub i64 %47, 1, !dbg !11170
  %and199 = and i64 %sub198, 33554432, !dbg !11170
  %tobool200 = icmp ne i64 %and199, 0, !dbg !11170
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !11170

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !11170

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub203 = sub i64 %48, 1, !dbg !11170
  %and204 = and i64 %sub203, 16777216, !dbg !11170
  %tobool205 = icmp ne i64 %and204, 0, !dbg !11170
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !11170

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !11170

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub208 = sub i64 %49, 1, !dbg !11170
  %and209 = and i64 %sub208, 8388608, !dbg !11170
  %tobool210 = icmp ne i64 %and209, 0, !dbg !11170
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !11170

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !11170

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub213 = sub i64 %50, 1, !dbg !11170
  %and214 = and i64 %sub213, 4194304, !dbg !11170
  %tobool215 = icmp ne i64 %and214, 0, !dbg !11170
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !11170

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !11170

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub218 = sub i64 %51, 1, !dbg !11170
  %and219 = and i64 %sub218, 2097152, !dbg !11170
  %tobool220 = icmp ne i64 %and219, 0, !dbg !11170
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !11170

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !11170

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub223 = sub i64 %52, 1, !dbg !11170
  %and224 = and i64 %sub223, 1048576, !dbg !11170
  %tobool225 = icmp ne i64 %and224, 0, !dbg !11170
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !11170

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !11170

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub228 = sub i64 %53, 1, !dbg !11170
  %and229 = and i64 %sub228, 524288, !dbg !11170
  %tobool230 = icmp ne i64 %and229, 0, !dbg !11170
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !11170

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !11170

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub233 = sub i64 %54, 1, !dbg !11170
  %and234 = and i64 %sub233, 262144, !dbg !11170
  %tobool235 = icmp ne i64 %and234, 0, !dbg !11170
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !11170

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !11170

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub238 = sub i64 %55, 1, !dbg !11170
  %and239 = and i64 %sub238, 131072, !dbg !11170
  %tobool240 = icmp ne i64 %and239, 0, !dbg !11170
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !11170

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !11170

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub243 = sub i64 %56, 1, !dbg !11170
  %and244 = and i64 %sub243, 65536, !dbg !11170
  %tobool245 = icmp ne i64 %and244, 0, !dbg !11170
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !11170

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !11170

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub248 = sub i64 %57, 1, !dbg !11170
  %and249 = and i64 %sub248, 32768, !dbg !11170
  %tobool250 = icmp ne i64 %and249, 0, !dbg !11170
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !11170

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !11170

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub253 = sub i64 %58, 1, !dbg !11170
  %and254 = and i64 %sub253, 16384, !dbg !11170
  %tobool255 = icmp ne i64 %and254, 0, !dbg !11170
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !11170

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !11170

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub258 = sub i64 %59, 1, !dbg !11170
  %and259 = and i64 %sub258, 8192, !dbg !11170
  %tobool260 = icmp ne i64 %and259, 0, !dbg !11170
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !11170

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !11170

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub263 = sub i64 %60, 1, !dbg !11170
  %and264 = and i64 %sub263, 4096, !dbg !11170
  %tobool265 = icmp ne i64 %and264, 0, !dbg !11170
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !11170

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !11170

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub268 = sub i64 %61, 1, !dbg !11170
  %and269 = and i64 %sub268, 2048, !dbg !11170
  %tobool270 = icmp ne i64 %and269, 0, !dbg !11170
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !11170

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !11170

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub273 = sub i64 %62, 1, !dbg !11170
  %and274 = and i64 %sub273, 1024, !dbg !11170
  %tobool275 = icmp ne i64 %and274, 0, !dbg !11170
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !11170

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !11170

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub278 = sub i64 %63, 1, !dbg !11170
  %and279 = and i64 %sub278, 512, !dbg !11170
  %tobool280 = icmp ne i64 %and279, 0, !dbg !11170
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !11170

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !11170

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub283 = sub i64 %64, 1, !dbg !11170
  %and284 = and i64 %sub283, 256, !dbg !11170
  %tobool285 = icmp ne i64 %and284, 0, !dbg !11170
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !11170

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !11170

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub288 = sub i64 %65, 1, !dbg !11170
  %and289 = and i64 %sub288, 128, !dbg !11170
  %tobool290 = icmp ne i64 %and289, 0, !dbg !11170
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !11170

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !11170

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub293 = sub i64 %66, 1, !dbg !11170
  %and294 = and i64 %sub293, 64, !dbg !11170
  %tobool295 = icmp ne i64 %and294, 0, !dbg !11170
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !11170

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !11170

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub298 = sub i64 %67, 1, !dbg !11170
  %and299 = and i64 %sub298, 32, !dbg !11170
  %tobool300 = icmp ne i64 %and299, 0, !dbg !11170
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !11170

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !11170

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub303 = sub i64 %68, 1, !dbg !11170
  %and304 = and i64 %sub303, 16, !dbg !11170
  %tobool305 = icmp ne i64 %and304, 0, !dbg !11170
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !11170

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !11170

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub308 = sub i64 %69, 1, !dbg !11170
  %and309 = and i64 %sub308, 8, !dbg !11170
  %tobool310 = icmp ne i64 %and309, 0, !dbg !11170
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !11170

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !11170

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub313 = sub i64 %70, 1, !dbg !11170
  %and314 = and i64 %sub313, 4, !dbg !11170
  %tobool315 = icmp ne i64 %and314, 0, !dbg !11170
  %71 = zext i1 %tobool315 to i64, !dbg !11170
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !11170
  br label %cond.end, !dbg !11170

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !11170
  br label %cond.end317, !dbg !11170

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !11170
  br label %cond.end319, !dbg !11170

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !11170
  br label %cond.end321, !dbg !11170

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !11170
  br label %cond.end323, !dbg !11170

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !11170
  br label %cond.end325, !dbg !11170

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !11170
  br label %cond.end327, !dbg !11170

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !11170
  br label %cond.end329, !dbg !11170

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !11170
  br label %cond.end331, !dbg !11170

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !11170
  br label %cond.end333, !dbg !11170

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !11170
  br label %cond.end335, !dbg !11170

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !11170
  br label %cond.end337, !dbg !11170

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !11170
  br label %cond.end339, !dbg !11170

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !11170
  br label %cond.end341, !dbg !11170

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !11170
  br label %cond.end343, !dbg !11170

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !11170
  br label %cond.end345, !dbg !11170

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !11170
  br label %cond.end347, !dbg !11170

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !11170
  br label %cond.end349, !dbg !11170

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !11170
  br label %cond.end351, !dbg !11170

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !11170
  br label %cond.end353, !dbg !11170

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !11170
  br label %cond.end355, !dbg !11170

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !11170
  br label %cond.end357, !dbg !11170

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !11170
  br label %cond.end359, !dbg !11170

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !11170
  br label %cond.end361, !dbg !11170

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !11170
  br label %cond.end363, !dbg !11170

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !11170
  br label %cond.end365, !dbg !11170

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !11170
  br label %cond.end367, !dbg !11170

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !11170
  br label %cond.end369, !dbg !11170

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !11170
  br label %cond.end371, !dbg !11170

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !11170
  br label %cond.end373, !dbg !11170

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !11170
  br label %cond.end375, !dbg !11170

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !11170
  br label %cond.end377, !dbg !11170

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !11170
  br label %cond.end379, !dbg !11170

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !11170
  br label %cond.end381, !dbg !11170

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !11170
  br label %cond.end383, !dbg !11170

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !11170
  br label %cond.end385, !dbg !11170

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !11170
  br label %cond.end387, !dbg !11170

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !11170
  br label %cond.end389, !dbg !11170

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !11170
  br label %cond.end391, !dbg !11170

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !11170
  br label %cond.end393, !dbg !11170

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !11170
  br label %cond.end395, !dbg !11170

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !11170
  br label %cond.end397, !dbg !11170

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !11170
  br label %cond.end399, !dbg !11170

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !11170
  br label %cond.end401, !dbg !11170

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !11170
  br label %cond.end403, !dbg !11170

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !11170
  br label %cond.end405, !dbg !11170

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !11170
  br label %cond.end407, !dbg !11170

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !11170
  br label %cond.end409, !dbg !11170

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !11170
  br label %cond.end411, !dbg !11170

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !11170
  br label %cond.end413, !dbg !11170

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !11170
  br label %cond.end415, !dbg !11170

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !11170
  br label %cond.end417, !dbg !11170

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !11170
  br label %cond.end419, !dbg !11170

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !11170
  br label %cond.end421, !dbg !11170

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !11170
  br label %cond.end423, !dbg !11170

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !11170
  br label %cond.end425, !dbg !11170

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !11170
  br label %cond.end427, !dbg !11170

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !11170
  br label %cond.end429, !dbg !11170

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !11170
  br label %cond.end431, !dbg !11170

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !11170
  br label %cond.end433, !dbg !11170

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !11170
  br label %cond.end435, !dbg !11170

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !11170
  br label %cond.end437, !dbg !11170

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !11170
  br label %cond.end440, !dbg !11170

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !11170

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !11170
  br label %cond.end444, !dbg !11170

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !11170
  %sub443 = sub i64 %72, 1, !dbg !11170
  %call = call i32 @__ilog2_u64(i64 %sub443) #15, !dbg !11170
  br label %cond.end444, !dbg !11170

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !11170
  %sub446 = sub i32 %cond445, 12, !dbg !11171
  %add = add i32 %sub446, 1, !dbg !11172
  store i32 %add, i32* %retval, align 4, !dbg !11173
  br label %return, !dbg !11173

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !11174
  %dec = add i64 %73, -1, !dbg !11174
  store i64 %dec, i64* %size.addr, align 8, !dbg !11174
  %74 = load i64, i64* %size.addr, align 8, !dbg !11175
  %shr = lshr i64 %74, 12, !dbg !11175
  store i64 %shr, i64* %size.addr, align 8, !dbg !11175
  %75 = load i64, i64* %size.addr, align 8, !dbg !11176
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11153
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !11177
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !11178
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !11177, !srcloc !11179
  store i32 %78, i32* %bitpos.i, align 4, !dbg !11177
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !11180
  %add.i = add i32 %79, 1, !dbg !11181
  store i32 %add.i, i32* %retval, align 4, !dbg !11182
  br label %return, !dbg !11182

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !11183
  ret i32 %80, !dbg !11183
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !11184 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11146, metadata !DIExpression()), !dbg !11186
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11152, metadata !DIExpression()), !dbg !11188
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11189, metadata !DIExpression()), !dbg !11190
  %0 = load i64, i64* %n.addr, align 8, !dbg !11191
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11188
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !11192
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !11193
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !11192, !srcloc !11179
  store i32 %3, i32* %bitpos.i, align 4, !dbg !11192
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !11194
  %add.i = add i32 %4, 1, !dbg !11195
  %sub = sub i32 %add.i, 1, !dbg !11196
  ret i32 %sub, !dbg !11197
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !11198 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !11202, metadata !DIExpression()), !dbg !11203
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !11204, metadata !DIExpression()), !dbg !11205
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11206, metadata !DIExpression()), !dbg !11207
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11208, metadata !DIExpression()), !dbg !11209
  %0 = load i8*, i8** %object.addr, align 8, !dbg !11210
  ret i8* %0, !dbg !11211
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_reset_of_active_ep(%struct.usb_device* %udev, i32 %epnum, i8* %ioctl_name) #0 !dbg !11212 {
entry:
  %pscr_ret__.i9 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i9, metadata !5665, metadata !DIExpression()), !dbg !11215
  %__vpp_verify.i10 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i10, metadata !5675, metadata !DIExpression()), !dbg !11218
  %pfo_val__.i11 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i11, metadata !5678, metadata !DIExpression()), !dbg !11219
  %tmp.i12 = alloca %struct.task_struct*, align 8
  %tmp1.i13 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5665, metadata !DIExpression()), !dbg !11220
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !5675, metadata !DIExpression()), !dbg !11222
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !5678, metadata !DIExpression()), !dbg !11223
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %epnum.addr = alloca i32, align 4
  %ioctl_name.addr = alloca i8*, align 8
  %eps = alloca %struct.usb_host_endpoint**, align 8
  %ep = alloca %struct.usb_host_endpoint*, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !11224, metadata !DIExpression()), !dbg !11225
  store i32 %epnum, i32* %epnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %epnum.addr, metadata !11226, metadata !DIExpression()), !dbg !11227
  store i8* %ioctl_name, i8** %ioctl_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ioctl_name.addr, metadata !11228, metadata !DIExpression()), !dbg !11229
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint*** %eps, metadata !11230, metadata !DIExpression()), !dbg !11231
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep, metadata !11232, metadata !DIExpression()), !dbg !11233
  %0 = load i32, i32* %epnum.addr, align 4, !dbg !11234
  %and = and i32 %0, 128, !dbg !11235
  %tobool = icmp ne i32 %and, 0, !dbg !11235
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11236

cond.true:                                        ; preds = %entry
  %1 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11237
  %ep_in = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 20, !dbg !11238
  %arraydecay = getelementptr inbounds [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %ep_in, i64 0, i64 0, !dbg !11237
  br label %cond.end, !dbg !11236

cond.false:                                       ; preds = %entry
  %2 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11239
  %ep_out = getelementptr inbounds %struct.usb_device, %struct.usb_device* %2, i32 0, i32 21, !dbg !11240
  %arraydecay1 = getelementptr inbounds [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %ep_out, i64 0, i64 0, !dbg !11239
  br label %cond.end, !dbg !11236

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.usb_host_endpoint** [ %arraydecay, %cond.true ], [ %arraydecay1, %cond.false ], !dbg !11236
  store %struct.usb_host_endpoint** %cond, %struct.usb_host_endpoint*** %eps, align 8, !dbg !11241
  %3 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps, align 8, !dbg !11242
  %4 = load i32, i32* %epnum.addr, align 4, !dbg !11243
  %and2 = and i32 %4, 15, !dbg !11244
  %idxprom = zext i32 %and2 to i64, !dbg !11242
  %arrayidx = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %3, i64 %idxprom, !dbg !11242
  %5 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx, align 8, !dbg !11242
  store %struct.usb_host_endpoint* %5, %struct.usb_host_endpoint** %ep, align 8, !dbg !11245
  %6 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !11246
  %tobool3 = icmp ne %struct.usb_host_endpoint* %6, null, !dbg !11246
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !11247

land.lhs.true:                                    ; preds = %cond.end
  %7 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !11248
  %urb_list = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %7, i32 0, i32 4, !dbg !11249
  %call = call i32 @list_empty(%struct.list_head* %urb_list) #11, !dbg !11250
  %tobool4 = icmp ne i32 %call, 0, !dbg !11250
  br i1 %tobool4, label %if.end, label %if.then, !dbg !11251

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11252
  %dev = getelementptr inbounds %struct.usb_device, %struct.usb_device* %8, i32 0, i32 14, !dbg !11252
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !11222
  %9 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !11222
  %10 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !11223, !srcloc !5776
  store i64 %10, i64* %pfo_val__.i, align 8, !dbg !11223
  %11 = load i64, i64* %pfo_val__.i, align 8, !dbg !11223
  %12 = inttoptr i64 %11 to %struct.task_struct*, !dbg !11223
  store %struct.task_struct* %12, %struct.task_struct** %tmp.i, align 8, !dbg !11223
  %13 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !11223
  store %struct.task_struct* %13, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !11220
  %14 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !11220
  store %struct.task_struct* %14, %struct.task_struct** %tmp1.i, align 8, !dbg !11220
  %15 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !11220
  %call6 = call i32 @task_pid_nr(%struct.task_struct* %15) #11, !dbg !11252
  store i8* null, i8** %__vpp_verify.i10, align 8, !dbg !11218
  %16 = load i8*, i8** %__vpp_verify.i10, align 8, !dbg !11218
  %17 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !11219, !srcloc !5776
  store i64 %17, i64* %pfo_val__.i11, align 8, !dbg !11219
  %18 = load i64, i64* %pfo_val__.i11, align 8, !dbg !11219
  %19 = inttoptr i64 %18 to %struct.task_struct*, !dbg !11219
  store %struct.task_struct* %19, %struct.task_struct** %tmp.i12, align 8, !dbg !11219
  %20 = load %struct.task_struct*, %struct.task_struct** %tmp.i12, align 8, !dbg !11219
  store %struct.task_struct* %20, %struct.task_struct** %pscr_ret__.i9, align 8, !dbg !11215
  %21 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i9, align 8, !dbg !11215
  store %struct.task_struct* %21, %struct.task_struct** %tmp1.i13, align 8, !dbg !11215
  %22 = load %struct.task_struct*, %struct.task_struct** %tmp1.i13, align 8, !dbg !11215
  %comm = getelementptr inbounds %struct.task_struct, %struct.task_struct* %22, i32 0, i32 68, !dbg !11252
  %arraydecay8 = getelementptr inbounds [16 x i8], [16 x i8]* %comm, i64 0, i64 0, !dbg !11252
  %23 = load i8*, i8** %ioctl_name.addr, align 8, !dbg !11252
  %24 = load i32, i32* %epnum.addr, align 4, !dbg !11252
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.46, i64 0, i64 0), i32 %call6, i8* %arraydecay8, i8* %23, i32 %24) #12, !dbg !11252
  br label %if.end, !dbg !11252

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end
  ret void, !dbg !11253
}

; Function Attrs: noredzone
declare dso_local void @usb_reset_endpoint(%struct.usb_device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_interface_claimed(%struct.usb_interface* %iface) #0 !dbg !11254 {
entry:
  %iface.addr = alloca %struct.usb_interface*, align 8
  store %struct.usb_interface* %iface, %struct.usb_interface** %iface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %iface.addr, metadata !11255, metadata !DIExpression()), !dbg !11256
  %0 = load %struct.usb_interface*, %struct.usb_interface** %iface.addr, align 8, !dbg !11257
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7, !dbg !11258
  %driver = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 6, !dbg !11259
  %1 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !11259
  %cmp = icmp ne %struct.device_driver* %1, null, !dbg !11260
  %conv = zext i1 %cmp to i32, !dbg !11260
  ret i32 %conv, !dbg !11261
}

; Function Attrs: noredzone
declare dso_local i32 @usb_reset_device(%struct.usb_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @usb_clear_halt(%struct.usb_device*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

; Function Attrs: noredzone
declare dso_local i32 @usb_set_interface(%struct.usb_device*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @usb_reset_configuration(%struct.usb_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @usb_set_configuration(%struct.usb_device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_do_submiturb(%struct.usb_dev_state* %ps, %struct.usbdevfs_urb* %uurb, %struct.usbdevfs_iso_packet_desc* %iso_frame_desc, i8* %arg, i8* %userurb_sigval.coerce) #0 !dbg !11262 {
entry:
  %lock.addr.i1002 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i1002, metadata !11266, metadata !DIExpression()), !dbg !11270
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !11274, metadata !DIExpression()), !dbg !11276
  %pscr_ret__.i997 = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i997, metadata !5665, metadata !DIExpression()), !dbg !11278
  %__vpp_verify.i998 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i998, metadata !5675, metadata !DIExpression()), !dbg !11281
  %pfo_val__.i999 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i999, metadata !5678, metadata !DIExpression()), !dbg !11282
  %tmp.i1000 = alloca %struct.task_struct*, align 8
  %tmp1.i1001 = alloca %struct.task_struct*, align 8
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !5665, metadata !DIExpression()), !dbg !11283
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !5675, metadata !DIExpression()), !dbg !11285
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !5678, metadata !DIExpression()), !dbg !11286
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval.i.i945 = alloca i1, align 1
  %addr.addr.i.i946 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i946, metadata !5056, metadata !DIExpression()), !dbg !11287
  %bytes.addr.i.i947 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i947, metadata !5077, metadata !DIExpression()), !dbg !11298
  %is_source.addr.i.i948 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i948, metadata !5079, metadata !DIExpression()), !dbg !11299
  %sz.i.i949 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i949, metadata !5081, metadata !DIExpression()), !dbg !11300
  %__ret_warn_on.i.i950 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i950, metadata !5083, metadata !DIExpression()), !dbg !11301
  %tmp.i.i951 = alloca i64, align 8
  %to.addr.i952 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i952, metadata !6977, metadata !DIExpression()), !dbg !11302
  %from.addr.i953 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i953, metadata !6979, metadata !DIExpression()), !dbg !11303
  %n.addr.i954 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i954, metadata !6981, metadata !DIExpression()), !dbg !11304
  %s.addr.i.i800 = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i800, metadata !10550, metadata !DIExpression()), !dbg !11305
  %flags.addr.i17.i801 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i801, metadata !10562, metadata !DIExpression()), !dbg !11308
  %size.addr.i18.i802 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i802, metadata !10564, metadata !DIExpression()), !dbg !11309
  %ret.i.i803 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i803, metadata !10566, metadata !DIExpression()), !dbg !11310
  %retval.i12.i804 = alloca i32, align 4
  %flags.addr.i13.i805 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i805, metadata !10568, metadata !DIExpression()), !dbg !11311
  %retval.i.i806 = alloca i32, align 4
  %size.addr.i11.i807 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i807, metadata !10574, metadata !DIExpression()), !dbg !11313
  %size.addr.i.i.i808 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i808, metadata !10580, metadata !DIExpression()), !dbg !11315
  %flags.addr.i.i.i809 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i809, metadata !10589, metadata !DIExpression()), !dbg !11318
  %order.addr.i.i.i810 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i810, metadata !10591, metadata !DIExpression()), !dbg !11319
  %size.addr.i.i811 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i811, metadata !10593, metadata !DIExpression()), !dbg !11320
  %flags.addr.i.i812 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i812, metadata !10595, metadata !DIExpression()), !dbg !11321
  %order.i.i813 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i813, metadata !10597, metadata !DIExpression()), !dbg !11322
  %retval.i814 = alloca i8*, align 8
  %size.addr.i815 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i815, metadata !10599, metadata !DIExpression()), !dbg !11323
  %flags.addr.i816 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i816, metadata !10601, metadata !DIExpression()), !dbg !11324
  %index.i817 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i817, metadata !10603, metadata !DIExpression()), !dbg !11325
  %retval.i.i748 = alloca i1, align 1
  %addr.addr.i.i749 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i749, metadata !5056, metadata !DIExpression()), !dbg !11326
  %bytes.addr.i.i750 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i750, metadata !5077, metadata !DIExpression()), !dbg !11336
  %is_source.addr.i.i751 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i751, metadata !5079, metadata !DIExpression()), !dbg !11337
  %sz.i.i752 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i752, metadata !5081, metadata !DIExpression()), !dbg !11338
  %__ret_warn_on.i.i753 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i753, metadata !5083, metadata !DIExpression()), !dbg !11339
  %tmp.i.i754 = alloca i64, align 8
  %to.addr.i755 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i755, metadata !6977, metadata !DIExpression()), !dbg !11340
  %from.addr.i756 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i756, metadata !6979, metadata !DIExpression()), !dbg !11341
  %n.addr.i757 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i757, metadata !6981, metadata !DIExpression()), !dbg !11342
  %s.addr.i.i603 = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i603, metadata !10550, metadata !DIExpression()), !dbg !11343
  %flags.addr.i17.i604 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i604, metadata !10562, metadata !DIExpression()), !dbg !11346
  %size.addr.i18.i605 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i605, metadata !10564, metadata !DIExpression()), !dbg !11347
  %ret.i.i606 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i606, metadata !10566, metadata !DIExpression()), !dbg !11348
  %retval.i12.i607 = alloca i32, align 4
  %flags.addr.i13.i608 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i608, metadata !10568, metadata !DIExpression()), !dbg !11349
  %retval.i.i609 = alloca i32, align 4
  %size.addr.i11.i610 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i610, metadata !10574, metadata !DIExpression()), !dbg !11351
  %size.addr.i.i.i611 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i611, metadata !10580, metadata !DIExpression()), !dbg !11353
  %flags.addr.i.i.i612 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i612, metadata !10589, metadata !DIExpression()), !dbg !11356
  %order.addr.i.i.i613 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i613, metadata !10591, metadata !DIExpression()), !dbg !11357
  %size.addr.i.i614 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i614, metadata !10593, metadata !DIExpression()), !dbg !11358
  %flags.addr.i.i615 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i615, metadata !10595, metadata !DIExpression()), !dbg !11359
  %order.i.i616 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i616, metadata !10597, metadata !DIExpression()), !dbg !11360
  %retval.i617 = alloca i8*, align 8
  %size.addr.i618 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i618, metadata !10599, metadata !DIExpression()), !dbg !11361
  %flags.addr.i619 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i619, metadata !10601, metadata !DIExpression()), !dbg !11362
  %index.i620 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i620, metadata !10603, metadata !DIExpression()), !dbg !11363
  %retval.i599 = alloca i1, align 1
  %bit.addr.i = alloca i16, align 2
  call void @llvm.dbg.declare(metadata i16* %bit.addr.i, metadata !11364, metadata !DIExpression()), !dbg !11369
  %retval.i.i589 = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !11374
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !11379
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !11380
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !11381
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !11382
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6977, metadata !DIExpression()), !dbg !11383
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6979, metadata !DIExpression()), !dbg !11384
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6981, metadata !DIExpression()), !dbg !11385
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !10550, metadata !DIExpression()), !dbg !11386
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !10562, metadata !DIExpression()), !dbg !11389
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !10564, metadata !DIExpression()), !dbg !11390
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !10566, metadata !DIExpression()), !dbg !11391
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !10568, metadata !DIExpression()), !dbg !11392
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !10574, metadata !DIExpression()), !dbg !11394
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !10580, metadata !DIExpression()), !dbg !11396
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !10589, metadata !DIExpression()), !dbg !11399
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !10591, metadata !DIExpression()), !dbg !11400
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10593, metadata !DIExpression()), !dbg !11401
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !10595, metadata !DIExpression()), !dbg !11402
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !10597, metadata !DIExpression()), !dbg !11403
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10599, metadata !DIExpression()), !dbg !11404
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !10601, metadata !DIExpression()), !dbg !11405
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !10603, metadata !DIExpression()), !dbg !11406
  %retval = alloca i32, align 4
  %userurb_sigval = alloca %union.sigval, align 8
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %uurb.addr = alloca %struct.usbdevfs_urb*, align 8
  %iso_frame_desc.addr = alloca %struct.usbdevfs_iso_packet_desc*, align 8
  %arg.addr = alloca i8*, align 8
  %isopkt = alloca %struct.usbdevfs_iso_packet_desc*, align 8
  %ep = alloca %struct.usb_host_endpoint*, align 8
  %as = alloca %struct.async*, align 8
  %dr = alloca %struct.usb_ctrlrequest*, align 8
  %u = alloca i32, align 4
  %totlen = alloca i32, align 4
  %isofrmlen = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %num_sgs = alloca i32, align 4
  %ifnum = alloca i32, align 4
  %number_of_packets = alloca i32, align 4
  %stream_id = alloca i32, align 4
  %buf = alloca i8*, align 8
  %is_in = alloca i8, align 1
  %allow_short = alloca i8, align 1
  %allow_zero = alloca i8, align 1
  %mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp195 = alloca i8, align 1
  %uurb_start = alloca i64, align 8
  %__UNIQUE_ID___x287 = alloca i32, align 4
  %__UNIQUE_ID___y288 = alloca i32, align 4
  %tmp447 = alloca i32, align 4
  %uurb_start494 = alloca i64, align 8
  %tmp523 = alloca %struct.cred*, align 8
  %coerce.dive = getelementptr inbounds %union.sigval, %union.sigval* %userurb_sigval, i32 0, i32 0
  store i8* %userurb_sigval.coerce, i8** %coerce.dive, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !11407, metadata !DIExpression()), !dbg !11408
  store %struct.usbdevfs_urb* %uurb, %struct.usbdevfs_urb** %uurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_urb** %uurb.addr, metadata !11409, metadata !DIExpression()), !dbg !11410
  store %struct.usbdevfs_iso_packet_desc* %iso_frame_desc, %struct.usbdevfs_iso_packet_desc** %iso_frame_desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_iso_packet_desc** %iso_frame_desc.addr, metadata !11411, metadata !DIExpression()), !dbg !11412
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !11413, metadata !DIExpression()), !dbg !11414
  call void @llvm.dbg.declare(metadata %union.sigval* %userurb_sigval, metadata !11415, metadata !DIExpression()), !dbg !11416
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_iso_packet_desc** %isopkt, metadata !11417, metadata !DIExpression()), !dbg !11418
  store %struct.usbdevfs_iso_packet_desc* null, %struct.usbdevfs_iso_packet_desc** %isopkt, align 8, !dbg !11418
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep, metadata !11419, metadata !DIExpression()), !dbg !11420
  call void @llvm.dbg.declare(metadata %struct.async** %as, metadata !11421, metadata !DIExpression()), !dbg !11422
  store %struct.async* null, %struct.async** %as, align 8, !dbg !11422
  call void @llvm.dbg.declare(metadata %struct.usb_ctrlrequest** %dr, metadata !11423, metadata !DIExpression()), !dbg !11432
  store %struct.usb_ctrlrequest* null, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11432
  call void @llvm.dbg.declare(metadata i32* %u, metadata !11433, metadata !DIExpression()), !dbg !11434
  call void @llvm.dbg.declare(metadata i32* %totlen, metadata !11435, metadata !DIExpression()), !dbg !11436
  call void @llvm.dbg.declare(metadata i32* %isofrmlen, metadata !11437, metadata !DIExpression()), !dbg !11438
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11439, metadata !DIExpression()), !dbg !11440
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11441, metadata !DIExpression()), !dbg !11442
  call void @llvm.dbg.declare(metadata i32* %num_sgs, metadata !11443, metadata !DIExpression()), !dbg !11444
  store i32 0, i32* %num_sgs, align 4, !dbg !11444
  call void @llvm.dbg.declare(metadata i32* %ifnum, metadata !11445, metadata !DIExpression()), !dbg !11446
  store i32 -1, i32* %ifnum, align 4, !dbg !11446
  call void @llvm.dbg.declare(metadata i32* %number_of_packets, metadata !11447, metadata !DIExpression()), !dbg !11448
  store i32 0, i32* %number_of_packets, align 4, !dbg !11448
  call void @llvm.dbg.declare(metadata i32* %stream_id, metadata !11449, metadata !DIExpression()), !dbg !11450
  store i32 0, i32* %stream_id, align 4, !dbg !11450
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !11451, metadata !DIExpression()), !dbg !11452
  call void @llvm.dbg.declare(metadata i8* %is_in, metadata !11453, metadata !DIExpression()), !dbg !11454
  call void @llvm.dbg.declare(metadata i8* %allow_short, metadata !11455, metadata !DIExpression()), !dbg !11456
  store i8 0, i8* %allow_short, align 1, !dbg !11456
  call void @llvm.dbg.declare(metadata i8* %allow_zero, metadata !11457, metadata !DIExpression()), !dbg !11458
  store i8 0, i8* %allow_zero, align 1, !dbg !11458
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !11459, metadata !DIExpression()), !dbg !11460
  store i64 229, i64* %mask, align 8, !dbg !11460
  %0 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11461
  %type = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %0, i32 0, i32 0, !dbg !11463
  %1 = load i8, i8* %type, align 8, !dbg !11463
  %conv = zext i8 %1 to i32, !dbg !11461
  %cmp = icmp eq i32 %conv, 0, !dbg !11464
  br i1 %cmp, label %if.then, label %if.end, !dbg !11465

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %mask, align 8, !dbg !11466
  %or = or i64 %2, 2, !dbg !11466
  store i64 %or, i64* %mask, align 8, !dbg !11466
  br label %if.end, !dbg !11467

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11468
  %flags = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %3, i32 0, i32 3, !dbg !11470
  %4 = load i32, i32* %flags, align 8, !dbg !11470
  %conv2 = zext i32 %4 to i64, !dbg !11468
  %5 = load i64, i64* %mask, align 8, !dbg !11471
  %neg = xor i64 %5, -1, !dbg !11472
  %and = and i64 %conv2, %neg, !dbg !11473
  %tobool = icmp ne i64 %and, 0, !dbg !11473
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !11474

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !11475
  br label %return, !dbg !11475

if.end4:                                          ; preds = %if.end
  %6 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11476
  %buffer_length = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %6, i32 0, i32 5, !dbg !11478
  %7 = load i32, i32* %buffer_length, align 8, !dbg !11478
  %cmp5 = icmp uge i32 %7, 2146483647, !dbg !11479
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !11480

if.then7:                                         ; preds = %if.end4
  store i32 -22, i32* %retval, align 4, !dbg !11481
  br label %return, !dbg !11481

if.end8:                                          ; preds = %if.end4
  %8 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11482
  %buffer_length9 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %8, i32 0, i32 5, !dbg !11484
  %9 = load i32, i32* %buffer_length9, align 8, !dbg !11484
  %cmp10 = icmp sgt i32 %9, 0, !dbg !11485
  br i1 %cmp10, label %land.lhs.true, label %if.end14, !dbg !11486

land.lhs.true:                                    ; preds = %if.end8
  %10 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11487
  %buffer = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %10, i32 0, i32 4, !dbg !11488
  %11 = load i8*, i8** %buffer, align 8, !dbg !11488
  %tobool12 = icmp ne i8* %11, null, !dbg !11487
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !11489

if.then13:                                        ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !11490
  br label %return, !dbg !11490

if.end14:                                         ; preds = %land.lhs.true, %if.end8
  %12 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11491
  %type15 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %12, i32 0, i32 0, !dbg !11493
  %13 = load i8, i8* %type15, align 8, !dbg !11493
  %conv16 = zext i8 %13 to i32, !dbg !11491
  %cmp17 = icmp eq i32 %conv16, 2, !dbg !11494
  br i1 %cmp17, label %land.lhs.true19, label %if.then24, !dbg !11495

land.lhs.true19:                                  ; preds = %if.end14
  %14 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11496
  %endpoint = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %14, i32 0, i32 1, !dbg !11497
  %15 = load i8, i8* %endpoint, align 1, !dbg !11497
  %conv20 = zext i8 %15 to i32, !dbg !11496
  %and21 = and i32 %conv20, -129, !dbg !11498
  %cmp22 = icmp eq i32 %and21, 0, !dbg !11499
  br i1 %cmp22, label %if.end35, label %if.then24, !dbg !11500

if.then24:                                        ; preds = %land.lhs.true19, %if.end14
  %16 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !11501
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %16, i32 0, i32 1, !dbg !11503
  %17 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !11503
  %18 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11504
  %endpoint25 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %18, i32 0, i32 1, !dbg !11505
  %19 = load i8, i8* %endpoint25, align 1, !dbg !11505
  %conv26 = zext i8 %19 to i32, !dbg !11504
  %call = call i32 @findintfep(%struct.usb_device* %17, i32 %conv26) #11, !dbg !11506
  store i32 %call, i32* %ifnum, align 4, !dbg !11507
  %20 = load i32, i32* %ifnum, align 4, !dbg !11508
  %cmp27 = icmp slt i32 %20, 0, !dbg !11510
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !11511

if.then29:                                        ; preds = %if.then24
  %21 = load i32, i32* %ifnum, align 4, !dbg !11512
  store i32 %21, i32* %retval, align 4, !dbg !11513
  br label %return, !dbg !11513

if.end30:                                         ; preds = %if.then24
  %22 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !11514
  %23 = load i32, i32* %ifnum, align 4, !dbg !11515
  %call31 = call i32 @checkintf(%struct.usb_dev_state* %22, i32 %23) #11, !dbg !11516
  store i32 %call31, i32* %ret, align 4, !dbg !11517
  %24 = load i32, i32* %ret, align 4, !dbg !11518
  %tobool32 = icmp ne i32 %24, 0, !dbg !11518
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !11520

if.then33:                                        ; preds = %if.end30
  %25 = load i32, i32* %ret, align 4, !dbg !11521
  store i32 %25, i32* %retval, align 4, !dbg !11522
  br label %return, !dbg !11522

if.end34:                                         ; preds = %if.end30
  br label %if.end35, !dbg !11523

if.end35:                                         ; preds = %if.end34, %land.lhs.true19
  %26 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !11524
  %dev36 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %26, i32 0, i32 1, !dbg !11525
  %27 = load %struct.usb_device*, %struct.usb_device** %dev36, align 8, !dbg !11525
  %28 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11526
  %endpoint37 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %28, i32 0, i32 1, !dbg !11527
  %29 = load i8, i8* %endpoint37, align 1, !dbg !11527
  %call38 = call %struct.usb_host_endpoint* @ep_to_host_endpoint(%struct.usb_device* %27, i8 zeroext %29) #11, !dbg !11528
  store %struct.usb_host_endpoint* %call38, %struct.usb_host_endpoint** %ep, align 8, !dbg !11529
  %30 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !11530
  %tobool39 = icmp ne %struct.usb_host_endpoint* %30, null, !dbg !11530
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !11532

if.then40:                                        ; preds = %if.end35
  store i32 -2, i32* %retval, align 4, !dbg !11533
  br label %return, !dbg !11533

if.end41:                                         ; preds = %if.end35
  %31 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11534
  %endpoint42 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %31, i32 0, i32 1, !dbg !11535
  %32 = load i8, i8* %endpoint42, align 1, !dbg !11535
  %conv43 = zext i8 %32 to i32, !dbg !11534
  %and44 = and i32 %conv43, 128, !dbg !11536
  %cmp45 = icmp ne i32 %and44, 0, !dbg !11537
  %frombool = zext i1 %cmp45 to i8, !dbg !11538
  store i8 %frombool, i8* %is_in, align 1, !dbg !11538
  store i32 0, i32* %u, align 4, !dbg !11539
  %33 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11540
  %type47 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %33, i32 0, i32 0, !dbg !11541
  %34 = load i8, i8* %type47, align 8, !dbg !11541
  %conv48 = zext i8 %34 to i32, !dbg !11540
  switch i32 %conv48, label %sw.default [
    i32 2, label %sw.bb
    i32 3, label %sw.bb118
    i32 1, label %sw.bb141
    i32 0, label %sw.bb151
  ], !dbg !11542

sw.bb:                                            ; preds = %if.end41
  %35 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !11543
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %35, i32 0, i32 0, !dbg !11545
  %call49 = call i32 @usb_endpoint_xfer_control(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !11546
  %tobool50 = icmp ne i32 %call49, 0, !dbg !11546
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !11547

if.then51:                                        ; preds = %sw.bb
  store i32 -22, i32* %retval, align 4, !dbg !11548
  br label %return, !dbg !11548

if.end52:                                         ; preds = %sw.bb
  %36 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11549
  %buffer_length53 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %36, i32 0, i32 5, !dbg !11551
  %37 = load i32, i32* %buffer_length53, align 8, !dbg !11551
  %cmp54 = icmp slt i32 %37, 8, !dbg !11552
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !11553

if.then56:                                        ; preds = %if.end52
  store i32 -22, i32* %retval, align 4, !dbg !11554
  br label %return, !dbg !11554

if.end57:                                         ; preds = %if.end52
  store i64 8, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %38 = load i64, i64* %size.addr.i, align 8, !dbg !11555
  %39 = call i1 @llvm.is.constant.i64(i64 %38) #7, !dbg !11556
  br i1 %39, label %if.then.i, label %if.end9.i, !dbg !11557

if.then.i:                                        ; preds = %if.end57
  %40 = load i64, i64* %size.addr.i, align 8, !dbg !11558
  %cmp.i = icmp ugt i64 %40, 8192, !dbg !11559
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11560

if.then1.i:                                       ; preds = %if.then.i
  %41 = load i64, i64* %size.addr.i, align 8, !dbg !11561
  %42 = load i32, i32* %flags.addr.i, align 4, !dbg !11562
  store i64 %41, i64* %size.addr.i.i, align 8
  store i32 %42, i32* %flags.addr.i.i, align 4
  %43 = load i64, i64* %size.addr.i.i, align 8, !dbg !11563
  %call.i.i = call i32 @get_order(i64 %43) #15, !dbg !11564
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11403
  %44 = load i64, i64* %size.addr.i.i, align 8, !dbg !11565
  %45 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11566
  %46 = load i32, i32* %order.i.i, align 4, !dbg !11567
  store i64 %44, i64* %size.addr.i.i.i, align 8
  store i32 %45, i32* %flags.addr.i.i.i, align 4
  store i32 %46, i32* %order.addr.i.i.i, align 4
  %47 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11568
  %48 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11569
  %49 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11570
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %47, i32 %48, i32 %49) #13, !dbg !11571
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11571
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11571
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11571
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !11571
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11572
  br label %kmalloc.exit, !dbg !11572

if.end.i:                                         ; preds = %if.then.i
  %50 = load i64, i64* %size.addr.i, align 8, !dbg !11573
  store i64 %50, i64* %size.addr.i11.i, align 8
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11574
  %tobool.i.i = icmp ne i64 %51, 0, !dbg !11574
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11575

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11576
  br label %kmalloc_index.exit.i, !dbg !11576

if.end.i.i:                                       ; preds = %if.end.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11577
  %cmp.i.i = icmp ule i64 %52, 8, !dbg !11578
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11579

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11580
  br label %kmalloc_index.exit.i, !dbg !11580

if.end2.i.i:                                      ; preds = %if.end.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11581
  %cmp3.i.i = icmp ugt i64 %53, 64, !dbg !11582
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11583

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11584
  %cmp4.i.i = icmp ule i64 %54, 96, !dbg !11585
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11586

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11587
  br label %kmalloc_index.exit.i, !dbg !11587

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11588
  %cmp7.i.i = icmp ugt i64 %55, 128, !dbg !11589
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11590

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11591
  %cmp9.i.i = icmp ule i64 %56, 192, !dbg !11592
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11593

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11594
  br label %kmalloc_index.exit.i, !dbg !11594

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11595
  %cmp12.i.i = icmp ule i64 %57, 8, !dbg !11596
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11597

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11598
  br label %kmalloc_index.exit.i, !dbg !11598

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11599
  %cmp15.i.i = icmp ule i64 %58, 16, !dbg !11600
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11601

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11602
  br label %kmalloc_index.exit.i, !dbg !11602

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %59 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11603
  %cmp18.i.i = icmp ule i64 %59, 32, !dbg !11604
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11605

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11606
  br label %kmalloc_index.exit.i, !dbg !11606

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %60 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11607
  %cmp21.i.i = icmp ule i64 %60, 64, !dbg !11608
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11609

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11610
  br label %kmalloc_index.exit.i, !dbg !11610

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %61 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11611
  %cmp24.i.i = icmp ule i64 %61, 128, !dbg !11612
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11613

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11614
  br label %kmalloc_index.exit.i, !dbg !11614

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %62 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11615
  %cmp27.i.i = icmp ule i64 %62, 256, !dbg !11616
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11617

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11618
  br label %kmalloc_index.exit.i, !dbg !11618

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %63 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11619
  %cmp30.i.i = icmp ule i64 %63, 512, !dbg !11620
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11621

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11622
  br label %kmalloc_index.exit.i, !dbg !11622

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %64 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11623
  %cmp33.i.i = icmp ule i64 %64, 1024, !dbg !11624
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11625

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11626
  br label %kmalloc_index.exit.i, !dbg !11626

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %65 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11627
  %cmp36.i.i = icmp ule i64 %65, 2048, !dbg !11628
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11629

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11630
  br label %kmalloc_index.exit.i, !dbg !11630

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %66 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11631
  %cmp39.i.i = icmp ule i64 %66, 4096, !dbg !11632
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11633

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11634
  br label %kmalloc_index.exit.i, !dbg !11634

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %67 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11635
  %cmp42.i.i = icmp ule i64 %67, 8192, !dbg !11636
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11637

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11638
  br label %kmalloc_index.exit.i, !dbg !11638

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %68 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11639
  %cmp45.i.i = icmp ule i64 %68, 16384, !dbg !11640
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11641

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11642
  br label %kmalloc_index.exit.i, !dbg !11642

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %69 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11643
  %cmp48.i.i = icmp ule i64 %69, 32768, !dbg !11644
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11645

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11646
  br label %kmalloc_index.exit.i, !dbg !11646

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %70 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11647
  %cmp51.i.i = icmp ule i64 %70, 65536, !dbg !11648
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11649

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11650
  br label %kmalloc_index.exit.i, !dbg !11650

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %71 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11651
  %cmp54.i.i = icmp ule i64 %71, 131072, !dbg !11652
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11653

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11654
  br label %kmalloc_index.exit.i, !dbg !11654

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %72 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11655
  %cmp57.i.i = icmp ule i64 %72, 262144, !dbg !11656
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11657

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11658
  br label %kmalloc_index.exit.i, !dbg !11658

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %73 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11659
  %cmp60.i.i = icmp ule i64 %73, 524288, !dbg !11660
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !11661

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !11662
  br label %kmalloc_index.exit.i, !dbg !11662

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %74 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11663
  %cmp63.i.i = icmp ule i64 %74, 1048576, !dbg !11664
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !11665

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !11666
  br label %kmalloc_index.exit.i, !dbg !11666

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %75 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11667
  %cmp66.i.i = icmp ule i64 %75, 2097152, !dbg !11668
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !11669

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !11670
  br label %kmalloc_index.exit.i, !dbg !11670

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %76 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11671
  %cmp69.i.i = icmp ule i64 %76, 4194304, !dbg !11672
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !11673

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !11674
  br label %kmalloc_index.exit.i, !dbg !11674

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %77 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11675
  %cmp72.i.i = icmp ule i64 %77, 8388608, !dbg !11676
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !11677

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !11678
  br label %kmalloc_index.exit.i, !dbg !11678

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %78 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11679
  %cmp75.i.i = icmp ule i64 %78, 16777216, !dbg !11680
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !11681

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !11682
  br label %kmalloc_index.exit.i, !dbg !11682

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %79 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11683
  %cmp78.i.i = icmp ule i64 %79, 33554432, !dbg !11684
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !11685

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !11686
  br label %kmalloc_index.exit.i, !dbg !11686

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %80 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11687
  %cmp81.i.i = icmp ule i64 %80, 67108864, !dbg !11688
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !11689

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !11690
  br label %kmalloc_index.exit.i, !dbg !11690

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !11691, !srcloc !10853
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 214) #7, !dbg !11692, !srcloc !10857
  unreachable, !dbg !11693

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %81 = load i32, i32* %retval.i.i, align 4, !dbg !11694
  store i32 %81, i32* %index.i, align 4, !dbg !11695
  %82 = load i32, i32* %index.i, align 4, !dbg !11696
  %tobool.i = icmp ne i32 %82, 0, !dbg !11696
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11697

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11698
  br label %kmalloc.exit, !dbg !11698

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %83 = load i32, i32* %flags.addr.i, align 4, !dbg !11699
  store i32 %83, i32* %flags.addr.i13.i, align 4
  %84 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11700
  %and.i.i = and i32 %84, 17, !dbg !11700
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11700
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11700
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11700
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11700
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11701

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11702
  br label %kmalloc_type.exit.i, !dbg !11702

if.end.i16.i:                                     ; preds = %if.end4.i
  %85 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11703
  %and2.i.i = and i32 %85, 1, !dbg !11704
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11703
  %86 = zext i1 %tobool3.i.i to i64, !dbg !11703
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11703
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11705
  br label %kmalloc_type.exit.i, !dbg !11705

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %87 = load i32, i32* %retval.i12.i, align 4, !dbg !11706
  %idxprom.i = zext i32 %87 to i64, !dbg !11707
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11707
  %88 = load i32, i32* %index.i, align 4, !dbg !11708
  %idxprom6.i = zext i32 %88 to i64, !dbg !11707
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11707
  %89 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11707
  %90 = load i32, i32* %flags.addr.i, align 4, !dbg !11709
  %91 = load i64, i64* %size.addr.i, align 8, !dbg !11710
  store %struct.kmem_cache* %89, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %90, i32* %flags.addr.i17.i, align 4
  store i64 %91, i64* %size.addr.i18.i, align 8
  %92 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11711
  %93 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11712
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %92, i32 %93) #13, !dbg !11713
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11713
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11713
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11713
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !11713
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11391
  %94 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11714
  %95 = load i8*, i8** %ret.i.i, align 8, !dbg !11715
  %96 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11716
  %97 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11717
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %94, i8* %95, i64 %96, i32 %97) #13, !dbg !11718
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11719
  %98 = load i8*, i8** %ret.i.i, align 8, !dbg !11720
  store i8* %98, i8** %retval.i, align 8, !dbg !11721
  br label %kmalloc.exit, !dbg !11721

if.end9.i:                                        ; preds = %if.end57
  %99 = load i64, i64* %size.addr.i, align 8, !dbg !11722
  %100 = load i32, i32* %flags.addr.i, align 4, !dbg !11723
  %call10.i = call noalias i8* @__kmalloc(i64 %99, i32 %100) #13, !dbg !11724
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11724
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11724
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11724
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !11724
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11725
  br label %kmalloc.exit, !dbg !11725

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %101 = load i8*, i8** %retval.i, align 8, !dbg !11726
  %102 = bitcast i8* %101 to %struct.usb_ctrlrequest*, !dbg !11727
  store %struct.usb_ctrlrequest* %102, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11728
  %103 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11729
  %tobool59 = icmp ne %struct.usb_ctrlrequest* %103, null, !dbg !11729
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !11731

if.then60:                                        ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !11732
  br label %return, !dbg !11732

if.end61:                                         ; preds = %kmalloc.exit
  %104 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11733
  %105 = bitcast %struct.usb_ctrlrequest* %104 to i8*, !dbg !11733
  %106 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11734
  %buffer62 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %106, i32 0, i32 4, !dbg !11735
  %107 = load i8*, i8** %buffer62, align 8, !dbg !11735
  store i8* %105, i8** %to.addr.i, align 8
  store i8* %107, i8** %from.addr.i, align 8
  store i64 8, i64* %n.addr.i, align 8
  %108 = load i8*, i8** %to.addr.i, align 8, !dbg !11736
  %109 = load i64, i64* %n.addr.i, align 8, !dbg !11736
  store i8* %108, i8** %addr.addr.i.i, align 8
  store i64 %109, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !11381
  %110 = load i32, i32* %sz.i.i, align 4, !dbg !11737
  %cmp.i.i590 = icmp sge i32 %110, 0, !dbg !11737
  br i1 %cmp.i.i590, label %land.rhs.i.i, label %land.end.i.i, !dbg !11737

land.rhs.i.i:                                     ; preds = %if.end61
  %111 = load i32, i32* %sz.i.i, align 4, !dbg !11737
  %conv.i.i591 = sext i32 %111 to i64, !dbg !11737
  %112 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11737
  %cmp1.i.i = icmp ult i64 %conv.i.i591, %112, !dbg !11737
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end61
  %113 = phi i1 [ false, %if.end61 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !11738
  %lnot.i.i592 = xor i1 %113, true, !dbg !11737
  %lnot.ext.i.i593 = zext i1 %113 to i32, !dbg !11737
  %conv4.i.i = sext i32 %lnot.ext.i.i593 to i64, !dbg !11737
  br i1 %113, label %if.then.i.i594, label %if.end10.i.i, !dbg !11739

if.then.i.i594:                                   ; preds = %land.end.i.i
  %114 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11740
  %115 = call i1 @llvm.is.constant.i64(i64 %114) #7, !dbg !11741
  br i1 %115, label %if.else.i.i, label %if.then5.i.i595, !dbg !11742

if.then5.i.i595:                                  ; preds = %if.then.i.i594
  %116 = load i32, i32* %sz.i.i, align 4, !dbg !11743
  %117 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11744
  call void @copy_overflow(i32 %116, i64 %117) #13, !dbg !11745
  br label %if.end9.i.i, !dbg !11745

if.else.i.i:                                      ; preds = %if.then.i.i594
  %118 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11746
  %tobool6.i.i = trunc i8 %118 to i1, !dbg !11746
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !11747

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !11748
  br label %if.end.i.i596, !dbg !11748

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !11749
  br label %if.end.i.i596

if.end.i.i596:                                    ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i596, %if.then5.i.i595
  store i1 false, i1* %retval.i.i589, align 1, !dbg !11750
  br label %check_copy_size.exit.i, !dbg !11750

if.end10.i.i:                                     ; preds = %land.end.i.i
  %119 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11382
  %cmp11.i.i = icmp ugt i64 %119, 2147483647, !dbg !11382
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !11382
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !11382
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !11382
  %120 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11751
  %tobool17.i.i = icmp ne i32 %120, 0, !dbg !11751
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !11751
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !11751
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !11751
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !11382

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !11752, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !11753, !srcloc !5212
  br label %if.end31.i.i, !dbg !11754

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %121 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !11382
  %tobool32.i.i = icmp ne i32 %121, 0, !dbg !11382
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !11382
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !11382
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !11382
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !11751
  %122 = load i64, i64* %tmp.i.i, align 8, !dbg !11382
  %tobool38.i.i = icmp ne i64 %122, 0, !dbg !11755
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !11756

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i589, align 1, !dbg !11757
  br label %check_copy_size.exit.i, !dbg !11757

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %123 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !11758
  %124 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !11759
  %125 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !11760
  %tobool41.i.i = trunc i8 %125 to i1, !dbg !11760
  call void @check_object_size(i8* %123, i64 %124, i1 zeroext %tobool41.i.i) #13, !dbg !11761
  store i1 true, i1* %retval.i.i589, align 1, !dbg !11762
  br label %check_copy_size.exit.i, !dbg !11762

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %126 = load i1, i1* %retval.i.i589, align 1, !dbg !11763
  %lnot.i = xor i1 %126, true, !dbg !11736
  %lnot.ext.i = zext i1 %126 to i32, !dbg !11736
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !11736
  br i1 %126, label %if.then.i597, label %copy_from_user.exit, !dbg !11764

if.then.i597:                                     ; preds = %check_copy_size.exit.i
  %127 = load i8*, i8** %to.addr.i, align 8, !dbg !11765
  %128 = load i8*, i8** %from.addr.i, align 8, !dbg !11766
  %129 = load i64, i64* %n.addr.i, align 8, !dbg !11767
  %call2.i = call i64 @_copy_from_user(i8* %127, i8* %128, i64 %129) #13, !dbg !11768
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !11769
  br label %copy_from_user.exit, !dbg !11770

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i597
  %130 = load i64, i64* %n.addr.i, align 8, !dbg !11771
  %tobool64 = icmp ne i64 %130, 0, !dbg !11772
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !11773

if.then65:                                        ; preds = %copy_from_user.exit
  store i32 -14, i32* %ret, align 4, !dbg !11774
  br label %error, !dbg !11776

if.end66:                                         ; preds = %copy_from_user.exit
  %131 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11777
  %buffer_length67 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %131, i32 0, i32 5, !dbg !11779
  %132 = load i32, i32* %buffer_length67, align 8, !dbg !11779
  %133 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11780
  %wLength = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %133, i32 0, i32 4, !dbg !11780
  %134 = load i16, i16* %wLength, align 1, !dbg !11780
  %conv68 = zext i16 %134 to i32, !dbg !11780
  %add = add i32 %conv68, 8, !dbg !11781
  %cmp69 = icmp slt i32 %132, %add, !dbg !11782
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !11783

if.then71:                                        ; preds = %if.end66
  store i32 -22, i32* %ret, align 4, !dbg !11784
  br label %error, !dbg !11786

if.end72:                                         ; preds = %if.end66
  %135 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !11787
  %136 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11788
  %bRequestType = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %136, i32 0, i32 0, !dbg !11789
  %137 = load i8, i8* %bRequestType, align 1, !dbg !11789
  %conv73 = zext i8 %137 to i32, !dbg !11788
  %138 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11790
  %bRequest = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %138, i32 0, i32 1, !dbg !11791
  %139 = load i8, i8* %bRequest, align 1, !dbg !11791
  %conv74 = zext i8 %139 to i32, !dbg !11790
  %140 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11792
  %wIndex = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %140, i32 0, i32 3, !dbg !11792
  %141 = load i16, i16* %wIndex, align 1, !dbg !11792
  %conv75 = zext i16 %141 to i32, !dbg !11792
  %call76 = call i32 @check_ctrlrecip(%struct.usb_dev_state* %135, i32 %conv73, i32 %conv74, i32 %conv75) #11, !dbg !11793
  store i32 %call76, i32* %ret, align 4, !dbg !11794
  %142 = load i32, i32* %ret, align 4, !dbg !11795
  %tobool77 = icmp ne i32 %142, 0, !dbg !11795
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !11797

if.then78:                                        ; preds = %if.end72
  br label %error, !dbg !11798

if.end79:                                         ; preds = %if.end72
  %143 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11799
  %wLength80 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %143, i32 0, i32 4, !dbg !11799
  %144 = load i16, i16* %wLength80, align 1, !dbg !11799
  %conv81 = zext i16 %144 to i32, !dbg !11799
  %145 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11800
  %buffer_length82 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %145, i32 0, i32 5, !dbg !11801
  store i32 %conv81, i32* %buffer_length82, align 8, !dbg !11802
  %146 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11803
  %buffer83 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %146, i32 0, i32 4, !dbg !11804
  %147 = load i8*, i8** %buffer83, align 8, !dbg !11805
  %add.ptr = getelementptr i8, i8* %147, i64 8, !dbg !11805
  store i8* %add.ptr, i8** %buffer83, align 8, !dbg !11805
  %148 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11806
  %bRequestType84 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %148, i32 0, i32 0, !dbg !11808
  %149 = load i8, i8* %bRequestType84, align 1, !dbg !11808
  %conv85 = zext i8 %149 to i32, !dbg !11806
  %and86 = and i32 %conv85, 128, !dbg !11809
  %tobool87 = icmp ne i32 %and86, 0, !dbg !11809
  br i1 %tobool87, label %land.lhs.true88, label %if.else, !dbg !11810

land.lhs.true88:                                  ; preds = %if.end79
  %150 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11811
  %buffer_length89 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %150, i32 0, i32 5, !dbg !11812
  %151 = load i32, i32* %buffer_length89, align 8, !dbg !11812
  %tobool90 = icmp ne i32 %151, 0, !dbg !11811
  br i1 %tobool90, label %if.then91, label %if.else, !dbg !11813

if.then91:                                        ; preds = %land.lhs.true88
  store i8 1, i8* %is_in, align 1, !dbg !11814
  %152 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11816
  %endpoint92 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %152, i32 0, i32 1, !dbg !11817
  %153 = load i8, i8* %endpoint92, align 1, !dbg !11818
  %conv93 = zext i8 %153 to i32, !dbg !11818
  %or94 = or i32 %conv93, 128, !dbg !11818
  %conv95 = trunc i32 %or94 to i8, !dbg !11818
  store i8 %conv95, i8* %endpoint92, align 1, !dbg !11818
  br label %if.end100, !dbg !11819

if.else:                                          ; preds = %land.lhs.true88, %if.end79
  store i8 0, i8* %is_in, align 1, !dbg !11820
  %154 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11822
  %endpoint96 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %154, i32 0, i32 1, !dbg !11823
  %155 = load i8, i8* %endpoint96, align 1, !dbg !11824
  %conv97 = zext i8 %155 to i32, !dbg !11824
  %and98 = and i32 %conv97, -129, !dbg !11824
  %conv99 = trunc i32 %and98 to i8, !dbg !11824
  store i8 %conv99, i8* %endpoint96, align 1, !dbg !11824
  br label %if.end100

if.end100:                                        ; preds = %if.else, %if.then91
  %156 = load i8, i8* %is_in, align 1, !dbg !11825
  %tobool101 = trunc i8 %156 to i1, !dbg !11825
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !11827

if.then102:                                       ; preds = %if.end100
  store i8 1, i8* %allow_short, align 1, !dbg !11828
  br label %if.end103, !dbg !11829

if.end103:                                        ; preds = %if.then102, %if.end100
  br label %do.body, !dbg !11830

do.body:                                          ; preds = %if.end103
  %157 = load i8, i8* @usbfs_snoop, align 1, !dbg !11831
  %tobool104 = trunc i8 %157 to i1, !dbg !11831
  br i1 %tobool104, label %if.then105, label %if.end117, !dbg !11834

if.then105:                                       ; preds = %do.body
  %158 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !11831
  %dev106 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %158, i32 0, i32 1, !dbg !11831
  %159 = load %struct.usb_device*, %struct.usb_device** %dev106, align 8, !dbg !11831
  %dev107 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %159, i32 0, i32 14, !dbg !11831
  %160 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11831
  %bRequestType108 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %160, i32 0, i32 0, !dbg !11831
  %161 = load i8, i8* %bRequestType108, align 1, !dbg !11831
  %conv109 = zext i8 %161 to i32, !dbg !11831
  %162 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11831
  %bRequest110 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %162, i32 0, i32 1, !dbg !11831
  %163 = load i8, i8* %bRequest110, align 1, !dbg !11831
  %conv111 = zext i8 %163 to i32, !dbg !11831
  %164 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11831
  %wValue = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %164, i32 0, i32 2, !dbg !11831
  %165 = load i16, i16* %wValue, align 1, !dbg !11831
  %conv112 = zext i16 %165 to i32, !dbg !11831
  %166 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11831
  %wIndex113 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %166, i32 0, i32 3, !dbg !11831
  %167 = load i16, i16* %wIndex113, align 1, !dbg !11831
  %conv114 = zext i16 %167 to i32, !dbg !11831
  %168 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !11831
  %wLength115 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %168, i32 0, i32 4, !dbg !11831
  %169 = load i16, i16* %wLength115, align 1, !dbg !11831
  %conv116 = zext i16 %169 to i32, !dbg !11831
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev107, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.27, i64 0, i64 0), i32 %conv109, i32 %conv111, i32 %conv112, i32 %conv114, i32 %conv116) #12, !dbg !11831
  br label %if.end117, !dbg !11831

if.end117:                                        ; preds = %if.then105, %do.body
  br label %do.end, !dbg !11834

do.end:                                           ; preds = %if.end117
  store i32 8, i32* %u, align 4, !dbg !11835
  br label %sw.epilog190, !dbg !11836

sw.bb118:                                         ; preds = %if.end41
  %170 = load i8, i8* %is_in, align 1, !dbg !11837
  %tobool119 = trunc i8 %170 to i1, !dbg !11837
  br i1 %tobool119, label %if.else121, label %if.then120, !dbg !11839

if.then120:                                       ; preds = %sw.bb118
  store i8 1, i8* %allow_zero, align 1, !dbg !11840
  br label %if.end122, !dbg !11841

if.else121:                                       ; preds = %sw.bb118
  store i8 1, i8* %allow_short, align 1, !dbg !11842
  br label %if.end122

if.end122:                                        ; preds = %if.else121, %if.then120
  %171 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !11843
  %desc123 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %171, i32 0, i32 0, !dbg !11844
  %call124 = call i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %desc123) #11, !dbg !11845
  switch i32 %call124, label %sw.epilog [
    i32 0, label %sw.bb125
    i32 1, label %sw.bb125
    i32 3, label %sw.bb126
  ], !dbg !11846

sw.bb125:                                         ; preds = %if.end122, %if.end122
  store i32 -22, i32* %retval, align 4, !dbg !11847
  br label %return, !dbg !11847

sw.bb126:                                         ; preds = %if.end122
  %172 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11849
  %type127 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %172, i32 0, i32 0, !dbg !11850
  store i8 1, i8* %type127, align 8, !dbg !11851
  br label %interrupt_urb, !dbg !11852

sw.epilog:                                        ; preds = %if.end122
  %173 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11853
  %buffer_length128 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %173, i32 0, i32 5, !dbg !11853
  %174 = load i32, i32* %buffer_length128, align 8, !dbg !11853
  %add129 = add i32 %174, 16384, !dbg !11853
  %sub = sub i32 %add129, 1, !dbg !11853
  %div = sdiv i32 %sub, 16384, !dbg !11853
  store i32 %div, i32* %num_sgs, align 4, !dbg !11854
  %175 = load i32, i32* %num_sgs, align 4, !dbg !11855
  %cmp130 = icmp eq i32 %175, 1, !dbg !11857
  br i1 %cmp130, label %if.then135, label %lor.lhs.false, !dbg !11858

lor.lhs.false:                                    ; preds = %sw.epilog
  %176 = load i32, i32* %num_sgs, align 4, !dbg !11859
  %177 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !11860
  %dev132 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %177, i32 0, i32 1, !dbg !11861
  %178 = load %struct.usb_device*, %struct.usb_device** %dev132, align 8, !dbg !11861
  %bus = getelementptr inbounds %struct.usb_device, %struct.usb_device* %178, i32 0, i32 12, !dbg !11862
  %179 = load %struct.usb_bus*, %struct.usb_bus** %bus, align 8, !dbg !11862
  %sg_tablesize = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %179, i32 0, i32 7, !dbg !11863
  %180 = load i32, i32* %sg_tablesize, align 4, !dbg !11863
  %cmp133 = icmp ugt i32 %176, %180, !dbg !11864
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !11865

if.then135:                                       ; preds = %lor.lhs.false, %sw.epilog
  store i32 0, i32* %num_sgs, align 4, !dbg !11866
  br label %if.end136, !dbg !11867

if.end136:                                        ; preds = %if.then135, %lor.lhs.false
  %181 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !11868
  %streams = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %181, i32 0, i32 10, !dbg !11870
  %182 = load i32, i32* %streams, align 8, !dbg !11870
  %tobool137 = icmp ne i32 %182, 0, !dbg !11868
  br i1 %tobool137, label %if.then138, label %if.end140, !dbg !11871

if.then138:                                       ; preds = %if.end136
  %183 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11872
  %184 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %183, i32 0, i32 8, !dbg !11873
  %stream_id139 = bitcast %union.anon.70* %184 to i32*, !dbg !11873
  %185 = load i32, i32* %stream_id139, align 4, !dbg !11873
  store i32 %185, i32* %stream_id, align 4, !dbg !11874
  br label %if.end140, !dbg !11875

if.end140:                                        ; preds = %if.then138, %if.end136
  br label %sw.epilog190, !dbg !11876

sw.bb141:                                         ; preds = %if.end41
  %186 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !11877
  %desc142 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %186, i32 0, i32 0, !dbg !11879
  %call143 = call i32 @usb_endpoint_xfer_int(%struct.usb_endpoint_descriptor* %desc142) #11, !dbg !11880
  %tobool144 = icmp ne i32 %call143, 0, !dbg !11880
  br i1 %tobool144, label %if.end146, label %if.then145, !dbg !11881

if.then145:                                       ; preds = %sw.bb141
  store i32 -22, i32* %retval, align 4, !dbg !11882
  br label %return, !dbg !11882

if.end146:                                        ; preds = %sw.bb141
  br label %interrupt_urb, !dbg !11883

interrupt_urb:                                    ; preds = %if.end146, %sw.bb126
  call void @llvm.dbg.label(metadata !11884), !dbg !11885
  %187 = load i8, i8* %is_in, align 1, !dbg !11886
  %tobool147 = trunc i8 %187 to i1, !dbg !11886
  br i1 %tobool147, label %if.else149, label %if.then148, !dbg !11888

if.then148:                                       ; preds = %interrupt_urb
  store i8 1, i8* %allow_zero, align 1, !dbg !11889
  br label %if.end150, !dbg !11890

if.else149:                                       ; preds = %interrupt_urb
  store i8 1, i8* %allow_short, align 1, !dbg !11891
  br label %if.end150

if.end150:                                        ; preds = %if.else149, %if.then148
  br label %sw.epilog190, !dbg !11892

sw.bb151:                                         ; preds = %if.end41
  %188 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11893
  %189 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %188, i32 0, i32 8, !dbg !11895
  %number_of_packets152 = bitcast %union.anon.70* %189 to i32*, !dbg !11895
  %190 = load i32, i32* %number_of_packets152, align 4, !dbg !11895
  %cmp153 = icmp slt i32 %190, 1, !dbg !11896
  br i1 %cmp153, label %if.then159, label %lor.lhs.false155, !dbg !11897

lor.lhs.false155:                                 ; preds = %sw.bb151
  %191 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11898
  %192 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %191, i32 0, i32 8, !dbg !11899
  %number_of_packets156 = bitcast %union.anon.70* %192 to i32*, !dbg !11899
  %193 = load i32, i32* %number_of_packets156, align 4, !dbg !11899
  %cmp157 = icmp sgt i32 %193, 128, !dbg !11900
  br i1 %cmp157, label %if.then159, label %if.end160, !dbg !11901

if.then159:                                       ; preds = %lor.lhs.false155, %sw.bb151
  store i32 -22, i32* %retval, align 4, !dbg !11902
  br label %return, !dbg !11902

if.end160:                                        ; preds = %lor.lhs.false155
  %194 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !11903
  %desc161 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %194, i32 0, i32 0, !dbg !11905
  %call162 = call i32 @usb_endpoint_xfer_isoc(%struct.usb_endpoint_descriptor* %desc161) #11, !dbg !11906
  %tobool163 = icmp ne i32 %call162, 0, !dbg !11906
  br i1 %tobool163, label %if.end165, label %if.then164, !dbg !11907

if.then164:                                       ; preds = %if.end160
  store i32 -22, i32* %retval, align 4, !dbg !11908
  br label %return, !dbg !11908

if.end165:                                        ; preds = %if.end160
  %195 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11909
  %196 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %195, i32 0, i32 8, !dbg !11910
  %number_of_packets166 = bitcast %union.anon.70* %196 to i32*, !dbg !11910
  %197 = load i32, i32* %number_of_packets166, align 4, !dbg !11910
  store i32 %197, i32* %number_of_packets, align 4, !dbg !11911
  %198 = load i32, i32* %number_of_packets, align 4, !dbg !11912
  %conv167 = sext i32 %198 to i64, !dbg !11912
  %mul = mul i64 12, %conv167, !dbg !11913
  %conv168 = trunc i64 %mul to i32, !dbg !11914
  store i32 %conv168, i32* %isofrmlen, align 4, !dbg !11915
  %199 = load %struct.usbdevfs_iso_packet_desc*, %struct.usbdevfs_iso_packet_desc** %iso_frame_desc.addr, align 8, !dbg !11916
  %200 = bitcast %struct.usbdevfs_iso_packet_desc* %199 to i8*, !dbg !11916
  %201 = load i32, i32* %isofrmlen, align 4, !dbg !11917
  %conv169 = zext i32 %201 to i64, !dbg !11917
  %call170 = call i8* @memdup_user(i8* %200, i64 %conv169) #11, !dbg !11918
  %202 = bitcast i8* %call170 to %struct.usbdevfs_iso_packet_desc*, !dbg !11918
  store %struct.usbdevfs_iso_packet_desc* %202, %struct.usbdevfs_iso_packet_desc** %isopkt, align 8, !dbg !11919
  %203 = load %struct.usbdevfs_iso_packet_desc*, %struct.usbdevfs_iso_packet_desc** %isopkt, align 8, !dbg !11920
  %204 = bitcast %struct.usbdevfs_iso_packet_desc* %203 to i8*, !dbg !11920
  %call171 = call zeroext i1 @IS_ERR(i8* %204) #11, !dbg !11922
  br i1 %call171, label %if.then172, label %if.end175, !dbg !11923

if.then172:                                       ; preds = %if.end165
  %205 = load %struct.usbdevfs_iso_packet_desc*, %struct.usbdevfs_iso_packet_desc** %isopkt, align 8, !dbg !11924
  %206 = bitcast %struct.usbdevfs_iso_packet_desc* %205 to i8*, !dbg !11924
  %call173 = call i64 @PTR_ERR(i8* %206) #11, !dbg !11926
  %conv174 = trunc i64 %call173 to i32, !dbg !11926
  store i32 %conv174, i32* %ret, align 4, !dbg !11927
  store %struct.usbdevfs_iso_packet_desc* null, %struct.usbdevfs_iso_packet_desc** %isopkt, align 8, !dbg !11928
  br label %error, !dbg !11929

if.end175:                                        ; preds = %if.end165
  store i32 0, i32* %u, align 4, !dbg !11930
  store i32 0, i32* %totlen, align 4, !dbg !11932
  br label %for.cond, !dbg !11933

for.cond:                                         ; preds = %for.inc, %if.end175
  %207 = load i32, i32* %u, align 4, !dbg !11934
  %208 = load i32, i32* %number_of_packets, align 4, !dbg !11936
  %cmp176 = icmp ult i32 %207, %208, !dbg !11937
  br i1 %cmp176, label %for.body, label %for.end, !dbg !11938

for.body:                                         ; preds = %for.cond
  %209 = load %struct.usbdevfs_iso_packet_desc*, %struct.usbdevfs_iso_packet_desc** %isopkt, align 8, !dbg !11939
  %210 = load i32, i32* %u, align 4, !dbg !11942
  %idxprom = zext i32 %210 to i64, !dbg !11939
  %arrayidx = getelementptr %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %209, i64 %idxprom, !dbg !11939
  %length = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %arrayidx, i32 0, i32 0, !dbg !11943
  %211 = load i32, i32* %length, align 4, !dbg !11943
  %cmp178 = icmp ugt i32 %211, 98304, !dbg !11944
  br i1 %cmp178, label %if.then180, label %if.end181, !dbg !11945

if.then180:                                       ; preds = %for.body
  store i32 -22, i32* %ret, align 4, !dbg !11946
  br label %error, !dbg !11948

if.end181:                                        ; preds = %for.body
  %212 = load %struct.usbdevfs_iso_packet_desc*, %struct.usbdevfs_iso_packet_desc** %isopkt, align 8, !dbg !11949
  %213 = load i32, i32* %u, align 4, !dbg !11950
  %idxprom182 = zext i32 %213 to i64, !dbg !11949
  %arrayidx183 = getelementptr %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %212, i64 %idxprom182, !dbg !11949
  %length184 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %arrayidx183, i32 0, i32 0, !dbg !11951
  %214 = load i32, i32* %length184, align 4, !dbg !11951
  %215 = load i32, i32* %totlen, align 4, !dbg !11952
  %add185 = add i32 %215, %214, !dbg !11952
  store i32 %add185, i32* %totlen, align 4, !dbg !11952
  br label %for.inc, !dbg !11953

for.inc:                                          ; preds = %if.end181
  %216 = load i32, i32* %u, align 4, !dbg !11954
  %inc = add i32 %216, 1, !dbg !11954
  store i32 %inc, i32* %u, align 4, !dbg !11954
  br label %for.cond, !dbg !11955, !llvm.loop !11956

for.end:                                          ; preds = %for.cond
  %217 = load i32, i32* %u, align 4, !dbg !11958
  %conv186 = zext i32 %217 to i64, !dbg !11958
  %mul187 = mul i64 %conv186, 16, !dbg !11958
  %conv188 = trunc i64 %mul187 to i32, !dbg !11958
  store i32 %conv188, i32* %u, align 4, !dbg !11958
  %218 = load i32, i32* %totlen, align 4, !dbg !11959
  %219 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11960
  %buffer_length189 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %219, i32 0, i32 5, !dbg !11961
  store i32 %218, i32* %buffer_length189, align 8, !dbg !11962
  br label %sw.epilog190, !dbg !11963

sw.default:                                       ; preds = %if.end41
  store i32 -22, i32* %retval, align 4, !dbg !11964
  br label %return, !dbg !11964

sw.epilog190:                                     ; preds = %for.end, %if.end150, %if.end140, %do.end
  %220 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11965
  %buffer_length191 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %220, i32 0, i32 5, !dbg !11966
  %221 = load i32, i32* %buffer_length191, align 8, !dbg !11966
  %cmp192 = icmp sgt i32 %221, 0, !dbg !11967
  br i1 %cmp192, label %land.lhs.true194, label %if.end210, !dbg !11968

land.lhs.true194:                                 ; preds = %sw.epilog190
  %222 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11969
  %buffer196 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %222, i32 0, i32 4, !dbg !11969
  %223 = load i8*, i8** %buffer196, align 8, !dbg !11969
  %224 = ptrtoint i8* %223 to i64, !dbg !11969
  %225 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11969
  %buffer_length197 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %225, i32 0, i32 5, !dbg !11969
  %226 = load i32, i32* %buffer_length197, align 8, !dbg !11969
  %conv198 = sext i32 %226 to i64, !dbg !11969
  store i16 528, i16* %bit.addr.i, align 2
  %227 = load i16, i16* %bit.addr.i, align 2, !dbg !11970
  %228 = load i16, i16* %bit.addr.i, align 2, !dbg !11970
  %conv.i600 = zext i16 %228 to i32, !dbg !11970
  %and.i = and i32 %conv.i600, 7, !dbg !11970
  %shl.i = shl i32 1, %and.i, !dbg !11970
  %229 = load i16, i16* %bit.addr.i, align 2, !dbg !11970
  %conv1.i = zext i16 %229 to i32, !dbg !11970
  %shr.i = ashr i32 %conv1.i, 3, !dbg !11970
  %idxprom.i601 = sext i32 %shr.i to i64, !dbg !11970
  %arrayidx.i602 = getelementptr i8, i8* bitcast (%union.anon.71* getelementptr inbounds (%struct.cpuinfo_x86, %struct.cpuinfo_x86* @boot_cpu_data, i32 0, i32 12) to i8*), i64 %idxprom.i601, !dbg !11970
  callbr void asm sideeffect "1: jmp 6f\0A2:\0A.skip -(((5f-4f) - (2b-1b)) > 0) * ((5f-4f) - (2b-1b)),0x90\0A3:\0A.section .altinstructions,\22a\22\0A .long 1b - .\0A .long 4f - .\0A .word ${1:P}\0A .byte 3b - 1b\0A .byte 5f - 4f\0A .byte 3b - 2b\0A.previous\0A.section .altinstr_replacement,\22ax\22\0A4: jmp ${5:l}\0A5:\0A.previous\0A.section .altinstructions,\22a\22\0A .long 1b - .\0A .long 0\0A .word ${0:P}\0A .byte 3b - 1b\0A .byte 0\0A .byte 0\0A.previous\0A.section .altinstr_aux,\22ax\22\0A6:\0A testb $2,$3\0A jnz ${4:l}\0A jmp ${5:l}\0A.previous\0A", "i,i,i,*m,X,X,~{dirflag},~{fpsr},~{flags}"(i16 %227, i32 117, i32 %shl.i, i8* %arrayidx.i602, i8* blockaddress(@proc_do_submiturb, %t_yes.i), i8* blockaddress(@proc_do_submiturb, %t_no.i)) #7
          to label %asm.fallthrough.i [label %t_yes.i, label %t_no.i], !dbg !11970, !srcloc !11971

asm.fallthrough.i:                                ; preds = %land.lhs.true194
  br label %t_yes.i, !dbg !11970

t_yes.i:                                          ; preds = %asm.fallthrough.i, %land.lhs.true194
  call void @llvm.dbg.label(metadata !11972), !dbg !11973
  store i1 true, i1* %retval.i599, align 1, !dbg !11974
  br label %_static_cpu_has.exit, !dbg !11974

t_no.i:                                           ; preds = %land.lhs.true194
  call void @llvm.dbg.label(metadata !11975), !dbg !11976
  store i1 false, i1* %retval.i599, align 1, !dbg !11977
  br label %_static_cpu_has.exit, !dbg !11977

_static_cpu_has.exit:                             ; preds = %t_yes.i, %t_no.i
  %230 = load i1, i1* %retval.i599, align 1, !dbg !11978
  %231 = zext i1 %230 to i64, !dbg !11969
  %cond = select i1 %230, i32 56, i32 47, !dbg !11969
  %sh_prom = zext i32 %cond to i64, !dbg !11969
  %shl = shl i64 1, %sh_prom, !dbg !11969
  %sub201 = sub i64 %shl, 4096, !dbg !11969
  %call202 = call zeroext i1 @__chk_range_not_ok(i64 %224, i64 %conv198, i64 %sub201) #11, !dbg !11969
  %frombool203 = zext i1 %call202 to i8, !dbg !11969
  store i8 %frombool203, i8* %tmp195, align 1, !dbg !11969
  %232 = load i8, i8* %tmp195, align 1, !dbg !11969
  %tobool204 = trunc i8 %232 to i1, !dbg !11969
  %lnot = xor i1 %tobool204, true, !dbg !11979
  %lnot205 = xor i1 %lnot, true, !dbg !11979
  %lnot206 = xor i1 %lnot205, true, !dbg !11979
  %lnot.ext = zext i1 %lnot206 to i32, !dbg !11979
  %conv207 = sext i32 %lnot.ext to i64, !dbg !11979
  store i64 %conv207, i64* %tmp, align 8, !dbg !11980
  %233 = load i64, i64* %tmp, align 8, !dbg !11979
  %tobool208 = icmp ne i64 %233, 0, !dbg !11980
  br i1 %tobool208, label %if.end210, label %if.then209, !dbg !11981

if.then209:                                       ; preds = %_static_cpu_has.exit
  store i32 -14, i32* %ret, align 4, !dbg !11982
  br label %error, !dbg !11984

if.end210:                                        ; preds = %_static_cpu_has.exit, %sw.epilog190
  %234 = load i32, i32* %number_of_packets, align 4, !dbg !11985
  %call211 = call %struct.async* @alloc_async(i32 %234) #11, !dbg !11986
  store %struct.async* %call211, %struct.async** %as, align 8, !dbg !11987
  %235 = load %struct.async*, %struct.async** %as, align 8, !dbg !11988
  %tobool212 = icmp ne %struct.async* %235, null, !dbg !11988
  br i1 %tobool212, label %if.end214, label %if.then213, !dbg !11990

if.then213:                                       ; preds = %if.end210
  store i32 -12, i32* %ret, align 4, !dbg !11991
  br label %error, !dbg !11993

if.end214:                                        ; preds = %if.end210
  %236 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !11994
  %237 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !11995
  %call215 = call %struct.usb_memory* @find_memory_area(%struct.usb_dev_state* %236, %struct.usbdevfs_urb* %237) #11, !dbg !11996
  %238 = load %struct.async*, %struct.async** %as, align 8, !dbg !11997
  %usbm = getelementptr inbounds %struct.async, %struct.async* %238, i32 0, i32 10, !dbg !11998
  store %struct.usb_memory* %call215, %struct.usb_memory** %usbm, align 8, !dbg !11999
  %239 = load %struct.async*, %struct.async** %as, align 8, !dbg !12000
  %usbm216 = getelementptr inbounds %struct.async, %struct.async* %239, i32 0, i32 10, !dbg !12002
  %240 = load %struct.usb_memory*, %struct.usb_memory** %usbm216, align 8, !dbg !12002
  %241 = bitcast %struct.usb_memory* %240 to i8*, !dbg !12000
  %call217 = call zeroext i1 @IS_ERR(i8* %241) #11, !dbg !12003
  br i1 %call217, label %if.then218, label %if.end223, !dbg !12004

if.then218:                                       ; preds = %if.end214
  %242 = load %struct.async*, %struct.async** %as, align 8, !dbg !12005
  %usbm219 = getelementptr inbounds %struct.async, %struct.async* %242, i32 0, i32 10, !dbg !12007
  %243 = load %struct.usb_memory*, %struct.usb_memory** %usbm219, align 8, !dbg !12007
  %244 = bitcast %struct.usb_memory* %243 to i8*, !dbg !12005
  %call220 = call i64 @PTR_ERR(i8* %244) #11, !dbg !12008
  %conv221 = trunc i64 %call220 to i32, !dbg !12008
  store i32 %conv221, i32* %ret, align 4, !dbg !12009
  %245 = load %struct.async*, %struct.async** %as, align 8, !dbg !12010
  %usbm222 = getelementptr inbounds %struct.async, %struct.async* %245, i32 0, i32 10, !dbg !12011
  store %struct.usb_memory* null, %struct.usb_memory** %usbm222, align 8, !dbg !12012
  br label %error, !dbg !12013

if.end223:                                        ; preds = %if.end214
  %246 = load %struct.async*, %struct.async** %as, align 8, !dbg !12014
  %usbm224 = getelementptr inbounds %struct.async, %struct.async* %246, i32 0, i32 10, !dbg !12016
  %247 = load %struct.usb_memory*, %struct.usb_memory** %usbm224, align 8, !dbg !12016
  %tobool225 = icmp ne %struct.usb_memory* %247, null, !dbg !12014
  br i1 %tobool225, label %if.then226, label %if.end227, !dbg !12017

if.then226:                                       ; preds = %if.end223
  store i32 0, i32* %num_sgs, align 4, !dbg !12018
  br label %if.end227, !dbg !12019

if.end227:                                        ; preds = %if.then226, %if.end223
  %248 = load %struct.async*, %struct.async** %as, align 8, !dbg !12020
  %usbm228 = getelementptr inbounds %struct.async, %struct.async* %248, i32 0, i32 10, !dbg !12021
  %249 = load %struct.usb_memory*, %struct.usb_memory** %usbm228, align 8, !dbg !12021
  %tobool229 = icmp ne %struct.usb_memory* %249, null, !dbg !12020
  br i1 %tobool229, label %cond.true, label %cond.false, !dbg !12020

cond.true:                                        ; preds = %if.end227
  br label %cond.end, !dbg !12020

cond.false:                                       ; preds = %if.end227
  %250 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12022
  %buffer_length230 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %250, i32 0, i32 5, !dbg !12023
  %251 = load i32, i32* %buffer_length230, align 8, !dbg !12023
  br label %cond.end, !dbg !12020

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond231 = phi i32 [ 0, %cond.true ], [ %251, %cond.false ], !dbg !12020
  %conv232 = sext i32 %cond231 to i64, !dbg !12024
  %add233 = add i64 288, %conv232, !dbg !12025
  %252 = load i32, i32* %num_sgs, align 4, !dbg !12026
  %conv234 = sext i32 %252 to i64, !dbg !12026
  %mul235 = mul i64 %conv234, 32, !dbg !12027
  %add236 = add i64 %add233, %mul235, !dbg !12028
  %253 = load i32, i32* %u, align 4, !dbg !12029
  %conv237 = zext i32 %253 to i64, !dbg !12029
  %add238 = add i64 %conv237, %add236, !dbg !12029
  %conv239 = trunc i64 %add238 to i32, !dbg !12029
  store i32 %conv239, i32* %u, align 4, !dbg !12029
  %254 = load i32, i32* %u, align 4, !dbg !12030
  %conv240 = zext i32 %254 to i64, !dbg !12030
  %call241 = call i32 @usbfs_increase_memory_usage(i64 %conv240) #11, !dbg !12031
  store i32 %call241, i32* %ret, align 4, !dbg !12032
  %255 = load i32, i32* %ret, align 4, !dbg !12033
  %tobool242 = icmp ne i32 %255, 0, !dbg !12033
  br i1 %tobool242, label %if.then243, label %if.end244, !dbg !12035

if.then243:                                       ; preds = %cond.end
  br label %error, !dbg !12036

if.end244:                                        ; preds = %cond.end
  %256 = load i32, i32* %u, align 4, !dbg !12037
  %257 = load %struct.async*, %struct.async** %as, align 8, !dbg !12038
  %mem_usage = getelementptr inbounds %struct.async, %struct.async* %257, i32 0, i32 11, !dbg !12039
  store i32 %256, i32* %mem_usage, align 8, !dbg !12040
  %258 = load i32, i32* %num_sgs, align 4, !dbg !12041
  %tobool245 = icmp ne i32 %258, 0, !dbg !12041
  br i1 %tobool245, label %if.then246, label %if.else297, !dbg !12042

if.then246:                                       ; preds = %if.end244
  %259 = load i32, i32* %num_sgs, align 4, !dbg !12043
  %conv247 = sext i32 %259 to i64, !dbg !12043
  %call248 = call i8* @kmalloc_array(i64 %conv247, i64 32, i32 3264) #11, !dbg !12044
  %260 = bitcast i8* %call248 to %struct.scatterlist*, !dbg !12044
  %261 = load %struct.async*, %struct.async** %as, align 8, !dbg !12045
  %urb = getelementptr inbounds %struct.async, %struct.async* %261, i32 0, i32 9, !dbg !12046
  %262 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !12046
  %sg = getelementptr inbounds %struct.urb, %struct.urb* %262, i32 0, i32 16, !dbg !12047
  store %struct.scatterlist* %260, %struct.scatterlist** %sg, align 8, !dbg !12048
  %263 = load %struct.async*, %struct.async** %as, align 8, !dbg !12049
  %urb249 = getelementptr inbounds %struct.async, %struct.async* %263, i32 0, i32 9, !dbg !12051
  %264 = load %struct.urb*, %struct.urb** %urb249, align 8, !dbg !12051
  %sg250 = getelementptr inbounds %struct.urb, %struct.urb* %264, i32 0, i32 16, !dbg !12052
  %265 = load %struct.scatterlist*, %struct.scatterlist** %sg250, align 8, !dbg !12052
  %tobool251 = icmp ne %struct.scatterlist* %265, null, !dbg !12049
  br i1 %tobool251, label %if.end253, label %if.then252, !dbg !12053

if.then252:                                       ; preds = %if.then246
  store i32 -12, i32* %ret, align 4, !dbg !12054
  br label %error, !dbg !12056

if.end253:                                        ; preds = %if.then246
  %266 = load i32, i32* %num_sgs, align 4, !dbg !12057
  %267 = load %struct.async*, %struct.async** %as, align 8, !dbg !12058
  %urb254 = getelementptr inbounds %struct.async, %struct.async* %267, i32 0, i32 9, !dbg !12059
  %268 = load %struct.urb*, %struct.urb** %urb254, align 8, !dbg !12059
  %num_sgs255 = getelementptr inbounds %struct.urb, %struct.urb* %268, i32 0, i32 18, !dbg !12060
  store i32 %266, i32* %num_sgs255, align 4, !dbg !12061
  %269 = load %struct.async*, %struct.async** %as, align 8, !dbg !12062
  %urb256 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 9, !dbg !12063
  %270 = load %struct.urb*, %struct.urb** %urb256, align 8, !dbg !12063
  %sg257 = getelementptr inbounds %struct.urb, %struct.urb* %270, i32 0, i32 16, !dbg !12064
  %271 = load %struct.scatterlist*, %struct.scatterlist** %sg257, align 8, !dbg !12064
  %272 = load %struct.async*, %struct.async** %as, align 8, !dbg !12065
  %urb258 = getelementptr inbounds %struct.async, %struct.async* %272, i32 0, i32 9, !dbg !12066
  %273 = load %struct.urb*, %struct.urb** %urb258, align 8, !dbg !12066
  %num_sgs259 = getelementptr inbounds %struct.urb, %struct.urb* %273, i32 0, i32 18, !dbg !12067
  %274 = load i32, i32* %num_sgs259, align 4, !dbg !12067
  call void @sg_init_table(%struct.scatterlist* %271, i32 %274) #11, !dbg !12068
  %275 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12069
  %buffer_length260 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %275, i32 0, i32 5, !dbg !12070
  %276 = load i32, i32* %buffer_length260, align 8, !dbg !12070
  store i32 %276, i32* %totlen, align 4, !dbg !12071
  store i32 0, i32* %i, align 4, !dbg !12072
  br label %for.cond261, !dbg !12073

for.cond261:                                      ; preds = %for.inc294, %if.end253
  %277 = load i32, i32* %i, align 4, !dbg !12074
  %278 = load %struct.async*, %struct.async** %as, align 8, !dbg !12075
  %urb262 = getelementptr inbounds %struct.async, %struct.async* %278, i32 0, i32 9, !dbg !12076
  %279 = load %struct.urb*, %struct.urb** %urb262, align 8, !dbg !12076
  %num_sgs263 = getelementptr inbounds %struct.urb, %struct.urb* %279, i32 0, i32 18, !dbg !12077
  %280 = load i32, i32* %num_sgs263, align 4, !dbg !12077
  %cmp264 = icmp slt i32 %277, %280, !dbg !12078
  br i1 %cmp264, label %for.body266, label %for.end296, !dbg !12079

for.body266:                                      ; preds = %for.cond261
  %281 = load i32, i32* %totlen, align 4, !dbg !12080
  %cmp267 = icmp ugt i32 %281, 16384, !dbg !12081
  br i1 %cmp267, label %cond.true269, label %cond.false270, !dbg !12082

cond.true269:                                     ; preds = %for.body266
  br label %cond.end271, !dbg !12082

cond.false270:                                    ; preds = %for.body266
  %282 = load i32, i32* %totlen, align 4, !dbg !12083
  br label %cond.end271, !dbg !12082

cond.end271:                                      ; preds = %cond.false270, %cond.true269
  %cond272 = phi i32 [ 16384, %cond.true269 ], [ %282, %cond.false270 ], !dbg !12082
  store i32 %cond272, i32* %u, align 4, !dbg !12084
  %283 = load i32, i32* %u, align 4, !dbg !12085
  %conv273 = zext i32 %283 to i64, !dbg !12085
  store i64 %conv273, i64* %size.addr.i618, align 8
  store i32 3264, i32* %flags.addr.i619, align 4
  %284 = load i64, i64* %size.addr.i618, align 8, !dbg !12086
  %285 = call i1 @llvm.is.constant.i64(i64 %284) #7, !dbg !12087
  br i1 %285, label %if.then.i622, label %if.end9.i746, !dbg !12088

if.then.i622:                                     ; preds = %cond.end271
  %286 = load i64, i64* %size.addr.i618, align 8, !dbg !12089
  %cmp.i621 = icmp ugt i64 %286, 8192, !dbg !12090
  br i1 %cmp.i621, label %if.then1.i628, label %if.end.i630, !dbg !12091

if.then1.i628:                                    ; preds = %if.then.i622
  %287 = load i64, i64* %size.addr.i618, align 8, !dbg !12092
  %288 = load i32, i32* %flags.addr.i619, align 4, !dbg !12093
  store i64 %287, i64* %size.addr.i.i614, align 8
  store i32 %288, i32* %flags.addr.i.i615, align 4
  %289 = load i64, i64* %size.addr.i.i614, align 8, !dbg !12094
  %call.i.i623 = call i32 @get_order(i64 %289) #15, !dbg !12095
  store i32 %call.i.i623, i32* %order.i.i616, align 4, !dbg !11360
  %290 = load i64, i64* %size.addr.i.i614, align 8, !dbg !12096
  %291 = load i32, i32* %flags.addr.i.i615, align 4, !dbg !12097
  %292 = load i32, i32* %order.i.i616, align 4, !dbg !12098
  store i64 %290, i64* %size.addr.i.i.i611, align 8
  store i32 %291, i32* %flags.addr.i.i.i612, align 4
  store i32 %292, i32* %order.addr.i.i.i613, align 4
  %293 = load i64, i64* %size.addr.i.i.i611, align 8, !dbg !12099
  %294 = load i32, i32* %flags.addr.i.i.i612, align 4, !dbg !12100
  %295 = load i32, i32* %order.addr.i.i.i613, align 4, !dbg !12101
  %call.i.i.i624 = call noalias i8* @kmalloc_order(i64 %293, i32 %294, i32 %295) #13, !dbg !12102
  %ptrint.i.i.i625 = ptrtoint i8* %call.i.i.i624 to i64, !dbg !12102
  %maskedptr.i.i.i626 = and i64 %ptrint.i.i.i625, 4095, !dbg !12102
  %maskcond.i.i.i627 = icmp eq i64 %maskedptr.i.i.i626, 0, !dbg !12102
  call void @llvm.assume(i1 %maskcond.i.i.i627) #7, !dbg !12102
  store i8* %call.i.i.i624, i8** %retval.i617, align 8, !dbg !12103
  br label %kmalloc.exit747, !dbg !12103

if.end.i630:                                      ; preds = %if.then.i622
  %296 = load i64, i64* %size.addr.i618, align 8, !dbg !12104
  store i64 %296, i64* %size.addr.i11.i610, align 8
  %297 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12105
  %tobool.i.i629 = icmp ne i64 %297, 0, !dbg !12105
  br i1 %tobool.i.i629, label %if.end.i.i633, label %if.then.i.i631, !dbg !12106

if.then.i.i631:                                   ; preds = %if.end.i630
  store i32 0, i32* %retval.i.i609, align 4, !dbg !12107
  br label %kmalloc_index.exit.i719, !dbg !12107

if.end.i.i633:                                    ; preds = %if.end.i630
  %298 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12108
  %cmp.i.i632 = icmp ule i64 %298, 8, !dbg !12109
  br i1 %cmp.i.i632, label %if.then1.i.i634, label %if.end2.i.i636, !dbg !12110

if.then1.i.i634:                                  ; preds = %if.end.i.i633
  store i32 3, i32* %retval.i.i609, align 4, !dbg !12111
  br label %kmalloc_index.exit.i719, !dbg !12111

if.end2.i.i636:                                   ; preds = %if.end.i.i633
  %299 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12112
  %cmp3.i.i635 = icmp ugt i64 %299, 64, !dbg !12113
  br i1 %cmp3.i.i635, label %land.lhs.true.i.i638, label %if.end6.i.i641, !dbg !12114

land.lhs.true.i.i638:                             ; preds = %if.end2.i.i636
  %300 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12115
  %cmp4.i.i637 = icmp ule i64 %300, 96, !dbg !12116
  br i1 %cmp4.i.i637, label %if.then5.i.i639, label %if.end6.i.i641, !dbg !12117

if.then5.i.i639:                                  ; preds = %land.lhs.true.i.i638
  store i32 1, i32* %retval.i.i609, align 4, !dbg !12118
  br label %kmalloc_index.exit.i719, !dbg !12118

if.end6.i.i641:                                   ; preds = %land.lhs.true.i.i638, %if.end2.i.i636
  %301 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12119
  %cmp7.i.i640 = icmp ugt i64 %301, 128, !dbg !12120
  br i1 %cmp7.i.i640, label %land.lhs.true8.i.i643, label %if.end11.i.i646, !dbg !12121

land.lhs.true8.i.i643:                            ; preds = %if.end6.i.i641
  %302 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12122
  %cmp9.i.i642 = icmp ule i64 %302, 192, !dbg !12123
  br i1 %cmp9.i.i642, label %if.then10.i.i644, label %if.end11.i.i646, !dbg !12124

if.then10.i.i644:                                 ; preds = %land.lhs.true8.i.i643
  store i32 2, i32* %retval.i.i609, align 4, !dbg !12125
  br label %kmalloc_index.exit.i719, !dbg !12125

if.end11.i.i646:                                  ; preds = %land.lhs.true8.i.i643, %if.end6.i.i641
  %303 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12126
  %cmp12.i.i645 = icmp ule i64 %303, 8, !dbg !12127
  br i1 %cmp12.i.i645, label %if.then13.i.i647, label %if.end14.i.i649, !dbg !12128

if.then13.i.i647:                                 ; preds = %if.end11.i.i646
  store i32 3, i32* %retval.i.i609, align 4, !dbg !12129
  br label %kmalloc_index.exit.i719, !dbg !12129

if.end14.i.i649:                                  ; preds = %if.end11.i.i646
  %304 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12130
  %cmp15.i.i648 = icmp ule i64 %304, 16, !dbg !12131
  br i1 %cmp15.i.i648, label %if.then16.i.i650, label %if.end17.i.i652, !dbg !12132

if.then16.i.i650:                                 ; preds = %if.end14.i.i649
  store i32 4, i32* %retval.i.i609, align 4, !dbg !12133
  br label %kmalloc_index.exit.i719, !dbg !12133

if.end17.i.i652:                                  ; preds = %if.end14.i.i649
  %305 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12134
  %cmp18.i.i651 = icmp ule i64 %305, 32, !dbg !12135
  br i1 %cmp18.i.i651, label %if.then19.i.i653, label %if.end20.i.i655, !dbg !12136

if.then19.i.i653:                                 ; preds = %if.end17.i.i652
  store i32 5, i32* %retval.i.i609, align 4, !dbg !12137
  br label %kmalloc_index.exit.i719, !dbg !12137

if.end20.i.i655:                                  ; preds = %if.end17.i.i652
  %306 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12138
  %cmp21.i.i654 = icmp ule i64 %306, 64, !dbg !12139
  br i1 %cmp21.i.i654, label %if.then22.i.i656, label %if.end23.i.i658, !dbg !12140

if.then22.i.i656:                                 ; preds = %if.end20.i.i655
  store i32 6, i32* %retval.i.i609, align 4, !dbg !12141
  br label %kmalloc_index.exit.i719, !dbg !12141

if.end23.i.i658:                                  ; preds = %if.end20.i.i655
  %307 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12142
  %cmp24.i.i657 = icmp ule i64 %307, 128, !dbg !12143
  br i1 %cmp24.i.i657, label %if.then25.i.i659, label %if.end26.i.i661, !dbg !12144

if.then25.i.i659:                                 ; preds = %if.end23.i.i658
  store i32 7, i32* %retval.i.i609, align 4, !dbg !12145
  br label %kmalloc_index.exit.i719, !dbg !12145

if.end26.i.i661:                                  ; preds = %if.end23.i.i658
  %308 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12146
  %cmp27.i.i660 = icmp ule i64 %308, 256, !dbg !12147
  br i1 %cmp27.i.i660, label %if.then28.i.i662, label %if.end29.i.i664, !dbg !12148

if.then28.i.i662:                                 ; preds = %if.end26.i.i661
  store i32 8, i32* %retval.i.i609, align 4, !dbg !12149
  br label %kmalloc_index.exit.i719, !dbg !12149

if.end29.i.i664:                                  ; preds = %if.end26.i.i661
  %309 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12150
  %cmp30.i.i663 = icmp ule i64 %309, 512, !dbg !12151
  br i1 %cmp30.i.i663, label %if.then31.i.i665, label %if.end32.i.i667, !dbg !12152

if.then31.i.i665:                                 ; preds = %if.end29.i.i664
  store i32 9, i32* %retval.i.i609, align 4, !dbg !12153
  br label %kmalloc_index.exit.i719, !dbg !12153

if.end32.i.i667:                                  ; preds = %if.end29.i.i664
  %310 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12154
  %cmp33.i.i666 = icmp ule i64 %310, 1024, !dbg !12155
  br i1 %cmp33.i.i666, label %if.then34.i.i668, label %if.end35.i.i670, !dbg !12156

if.then34.i.i668:                                 ; preds = %if.end32.i.i667
  store i32 10, i32* %retval.i.i609, align 4, !dbg !12157
  br label %kmalloc_index.exit.i719, !dbg !12157

if.end35.i.i670:                                  ; preds = %if.end32.i.i667
  %311 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12158
  %cmp36.i.i669 = icmp ule i64 %311, 2048, !dbg !12159
  br i1 %cmp36.i.i669, label %if.then37.i.i671, label %if.end38.i.i673, !dbg !12160

if.then37.i.i671:                                 ; preds = %if.end35.i.i670
  store i32 11, i32* %retval.i.i609, align 4, !dbg !12161
  br label %kmalloc_index.exit.i719, !dbg !12161

if.end38.i.i673:                                  ; preds = %if.end35.i.i670
  %312 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12162
  %cmp39.i.i672 = icmp ule i64 %312, 4096, !dbg !12163
  br i1 %cmp39.i.i672, label %if.then40.i.i674, label %if.end41.i.i676, !dbg !12164

if.then40.i.i674:                                 ; preds = %if.end38.i.i673
  store i32 12, i32* %retval.i.i609, align 4, !dbg !12165
  br label %kmalloc_index.exit.i719, !dbg !12165

if.end41.i.i676:                                  ; preds = %if.end38.i.i673
  %313 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12166
  %cmp42.i.i675 = icmp ule i64 %313, 8192, !dbg !12167
  br i1 %cmp42.i.i675, label %if.then43.i.i677, label %if.end44.i.i679, !dbg !12168

if.then43.i.i677:                                 ; preds = %if.end41.i.i676
  store i32 13, i32* %retval.i.i609, align 4, !dbg !12169
  br label %kmalloc_index.exit.i719, !dbg !12169

if.end44.i.i679:                                  ; preds = %if.end41.i.i676
  %314 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12170
  %cmp45.i.i678 = icmp ule i64 %314, 16384, !dbg !12171
  br i1 %cmp45.i.i678, label %if.then46.i.i680, label %if.end47.i.i682, !dbg !12172

if.then46.i.i680:                                 ; preds = %if.end44.i.i679
  store i32 14, i32* %retval.i.i609, align 4, !dbg !12173
  br label %kmalloc_index.exit.i719, !dbg !12173

if.end47.i.i682:                                  ; preds = %if.end44.i.i679
  %315 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12174
  %cmp48.i.i681 = icmp ule i64 %315, 32768, !dbg !12175
  br i1 %cmp48.i.i681, label %if.then49.i.i683, label %if.end50.i.i685, !dbg !12176

if.then49.i.i683:                                 ; preds = %if.end47.i.i682
  store i32 15, i32* %retval.i.i609, align 4, !dbg !12177
  br label %kmalloc_index.exit.i719, !dbg !12177

if.end50.i.i685:                                  ; preds = %if.end47.i.i682
  %316 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12178
  %cmp51.i.i684 = icmp ule i64 %316, 65536, !dbg !12179
  br i1 %cmp51.i.i684, label %if.then52.i.i686, label %if.end53.i.i688, !dbg !12180

if.then52.i.i686:                                 ; preds = %if.end50.i.i685
  store i32 16, i32* %retval.i.i609, align 4, !dbg !12181
  br label %kmalloc_index.exit.i719, !dbg !12181

if.end53.i.i688:                                  ; preds = %if.end50.i.i685
  %317 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12182
  %cmp54.i.i687 = icmp ule i64 %317, 131072, !dbg !12183
  br i1 %cmp54.i.i687, label %if.then55.i.i689, label %if.end56.i.i691, !dbg !12184

if.then55.i.i689:                                 ; preds = %if.end53.i.i688
  store i32 17, i32* %retval.i.i609, align 4, !dbg !12185
  br label %kmalloc_index.exit.i719, !dbg !12185

if.end56.i.i691:                                  ; preds = %if.end53.i.i688
  %318 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12186
  %cmp57.i.i690 = icmp ule i64 %318, 262144, !dbg !12187
  br i1 %cmp57.i.i690, label %if.then58.i.i692, label %if.end59.i.i694, !dbg !12188

if.then58.i.i692:                                 ; preds = %if.end56.i.i691
  store i32 18, i32* %retval.i.i609, align 4, !dbg !12189
  br label %kmalloc_index.exit.i719, !dbg !12189

if.end59.i.i694:                                  ; preds = %if.end56.i.i691
  %319 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12190
  %cmp60.i.i693 = icmp ule i64 %319, 524288, !dbg !12191
  br i1 %cmp60.i.i693, label %if.then61.i.i695, label %if.end62.i.i697, !dbg !12192

if.then61.i.i695:                                 ; preds = %if.end59.i.i694
  store i32 19, i32* %retval.i.i609, align 4, !dbg !12193
  br label %kmalloc_index.exit.i719, !dbg !12193

if.end62.i.i697:                                  ; preds = %if.end59.i.i694
  %320 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12194
  %cmp63.i.i696 = icmp ule i64 %320, 1048576, !dbg !12195
  br i1 %cmp63.i.i696, label %if.then64.i.i698, label %if.end65.i.i700, !dbg !12196

if.then64.i.i698:                                 ; preds = %if.end62.i.i697
  store i32 20, i32* %retval.i.i609, align 4, !dbg !12197
  br label %kmalloc_index.exit.i719, !dbg !12197

if.end65.i.i700:                                  ; preds = %if.end62.i.i697
  %321 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12198
  %cmp66.i.i699 = icmp ule i64 %321, 2097152, !dbg !12199
  br i1 %cmp66.i.i699, label %if.then67.i.i701, label %if.end68.i.i703, !dbg !12200

if.then67.i.i701:                                 ; preds = %if.end65.i.i700
  store i32 21, i32* %retval.i.i609, align 4, !dbg !12201
  br label %kmalloc_index.exit.i719, !dbg !12201

if.end68.i.i703:                                  ; preds = %if.end65.i.i700
  %322 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12202
  %cmp69.i.i702 = icmp ule i64 %322, 4194304, !dbg !12203
  br i1 %cmp69.i.i702, label %if.then70.i.i704, label %if.end71.i.i706, !dbg !12204

if.then70.i.i704:                                 ; preds = %if.end68.i.i703
  store i32 22, i32* %retval.i.i609, align 4, !dbg !12205
  br label %kmalloc_index.exit.i719, !dbg !12205

if.end71.i.i706:                                  ; preds = %if.end68.i.i703
  %323 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12206
  %cmp72.i.i705 = icmp ule i64 %323, 8388608, !dbg !12207
  br i1 %cmp72.i.i705, label %if.then73.i.i707, label %if.end74.i.i709, !dbg !12208

if.then73.i.i707:                                 ; preds = %if.end71.i.i706
  store i32 23, i32* %retval.i.i609, align 4, !dbg !12209
  br label %kmalloc_index.exit.i719, !dbg !12209

if.end74.i.i709:                                  ; preds = %if.end71.i.i706
  %324 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12210
  %cmp75.i.i708 = icmp ule i64 %324, 16777216, !dbg !12211
  br i1 %cmp75.i.i708, label %if.then76.i.i710, label %if.end77.i.i712, !dbg !12212

if.then76.i.i710:                                 ; preds = %if.end74.i.i709
  store i32 24, i32* %retval.i.i609, align 4, !dbg !12213
  br label %kmalloc_index.exit.i719, !dbg !12213

if.end77.i.i712:                                  ; preds = %if.end74.i.i709
  %325 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12214
  %cmp78.i.i711 = icmp ule i64 %325, 33554432, !dbg !12215
  br i1 %cmp78.i.i711, label %if.then79.i.i713, label %if.end80.i.i715, !dbg !12216

if.then79.i.i713:                                 ; preds = %if.end77.i.i712
  store i32 25, i32* %retval.i.i609, align 4, !dbg !12217
  br label %kmalloc_index.exit.i719, !dbg !12217

if.end80.i.i715:                                  ; preds = %if.end77.i.i712
  %326 = load i64, i64* %size.addr.i11.i610, align 8, !dbg !12218
  %cmp81.i.i714 = icmp ule i64 %326, 67108864, !dbg !12219
  br i1 %cmp81.i.i714, label %if.then82.i.i716, label %if.end83.i.i717, !dbg !12220

if.then82.i.i716:                                 ; preds = %if.end80.i.i715
  store i32 26, i32* %retval.i.i609, align 4, !dbg !12221
  br label %kmalloc_index.exit.i719, !dbg !12221

if.end83.i.i717:                                  ; preds = %if.end80.i.i715
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !12222, !srcloc !10853
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 214) #7, !dbg !12223, !srcloc !10857
  unreachable, !dbg !12224

kmalloc_index.exit.i719:                          ; preds = %if.then82.i.i716, %if.then79.i.i713, %if.then76.i.i710, %if.then73.i.i707, %if.then70.i.i704, %if.then67.i.i701, %if.then64.i.i698, %if.then61.i.i695, %if.then58.i.i692, %if.then55.i.i689, %if.then52.i.i686, %if.then49.i.i683, %if.then46.i.i680, %if.then43.i.i677, %if.then40.i.i674, %if.then37.i.i671, %if.then34.i.i668, %if.then31.i.i665, %if.then28.i.i662, %if.then25.i.i659, %if.then22.i.i656, %if.then19.i.i653, %if.then16.i.i650, %if.then13.i.i647, %if.then10.i.i644, %if.then5.i.i639, %if.then1.i.i634, %if.then.i.i631
  %327 = load i32, i32* %retval.i.i609, align 4, !dbg !12225
  store i32 %327, i32* %index.i620, align 4, !dbg !12226
  %328 = load i32, i32* %index.i620, align 4, !dbg !12227
  %tobool.i718 = icmp ne i32 %328, 0, !dbg !12227
  br i1 %tobool.i718, label %if.end4.i726, label %if.then3.i720, !dbg !12228

if.then3.i720:                                    ; preds = %kmalloc_index.exit.i719
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i617, align 8, !dbg !12229
  br label %kmalloc.exit747, !dbg !12229

if.end4.i726:                                     ; preds = %kmalloc_index.exit.i719
  %329 = load i32, i32* %flags.addr.i619, align 4, !dbg !12230
  store i32 %329, i32* %flags.addr.i13.i608, align 4
  %330 = load i32, i32* %flags.addr.i13.i608, align 4, !dbg !12231
  %and.i.i721 = and i32 %330, 17, !dbg !12231
  %cmp.i14.i722 = icmp eq i32 %and.i.i721, 0, !dbg !12231
  %lnot.i.i723 = xor i1 %cmp.i14.i722, true, !dbg !12231
  %lnot.ext.i.i724 = zext i1 %cmp.i14.i722 to i32, !dbg !12231
  %conv.i.i725 = sext i32 %lnot.ext.i.i724 to i64, !dbg !12231
  br i1 %cmp.i14.i722, label %if.then.i15.i727, label %if.end.i16.i731, !dbg !12232

if.then.i15.i727:                                 ; preds = %if.end4.i726
  store i32 0, i32* %retval.i12.i607, align 4, !dbg !12233
  br label %kmalloc_type.exit.i741, !dbg !12233

if.end.i16.i731:                                  ; preds = %if.end4.i726
  %331 = load i32, i32* %flags.addr.i13.i608, align 4, !dbg !12234
  %and2.i.i728 = and i32 %331, 1, !dbg !12235
  %tobool3.i.i729 = icmp ne i32 %and2.i.i728, 0, !dbg !12234
  %332 = zext i1 %tobool3.i.i729 to i64, !dbg !12234
  %cond.i.i730 = select i1 %tobool3.i.i729, i32 2, i32 1, !dbg !12234
  store i32 %cond.i.i730, i32* %retval.i12.i607, align 4, !dbg !12236
  br label %kmalloc_type.exit.i741, !dbg !12236

kmalloc_type.exit.i741:                           ; preds = %if.end.i16.i731, %if.then.i15.i727
  %333 = load i32, i32* %retval.i12.i607, align 4, !dbg !12237
  %idxprom.i732 = zext i32 %333 to i64, !dbg !12238
  %arrayidx.i733 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i732, !dbg !12238
  %334 = load i32, i32* %index.i620, align 4, !dbg !12239
  %idxprom6.i734 = zext i32 %334 to i64, !dbg !12238
  %arrayidx7.i735 = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i733, i64 0, i64 %idxprom6.i734, !dbg !12238
  %335 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i735, align 8, !dbg !12238
  %336 = load i32, i32* %flags.addr.i619, align 4, !dbg !12240
  %337 = load i64, i64* %size.addr.i618, align 8, !dbg !12241
  store %struct.kmem_cache* %335, %struct.kmem_cache** %s.addr.i.i603, align 8
  store i32 %336, i32* %flags.addr.i17.i604, align 4
  store i64 %337, i64* %size.addr.i18.i605, align 8
  %338 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i603, align 8, !dbg !12242
  %339 = load i32, i32* %flags.addr.i17.i604, align 4, !dbg !12243
  %call.i19.i736 = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %338, i32 %339) #13, !dbg !12244
  %ptrint.i.i737 = ptrtoint i8* %call.i19.i736 to i64, !dbg !12244
  %maskedptr.i.i738 = and i64 %ptrint.i.i737, 7, !dbg !12244
  %maskcond.i.i739 = icmp eq i64 %maskedptr.i.i738, 0, !dbg !12244
  call void @llvm.assume(i1 %maskcond.i.i739) #7, !dbg !12244
  store i8* %call.i19.i736, i8** %ret.i.i606, align 8, !dbg !11348
  %340 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i603, align 8, !dbg !12245
  %341 = load i8*, i8** %ret.i.i606, align 8, !dbg !12246
  %342 = load i64, i64* %size.addr.i18.i605, align 8, !dbg !12247
  %343 = load i32, i32* %flags.addr.i17.i604, align 4, !dbg !12248
  %call1.i.i740 = call i8* @kasan_kmalloc(%struct.kmem_cache* %340, i8* %341, i64 %342, i32 %343) #13, !dbg !12249
  store i8* %call1.i.i740, i8** %ret.i.i606, align 8, !dbg !12250
  %344 = load i8*, i8** %ret.i.i606, align 8, !dbg !12251
  store i8* %344, i8** %retval.i617, align 8, !dbg !12252
  br label %kmalloc.exit747, !dbg !12252

if.end9.i746:                                     ; preds = %cond.end271
  %345 = load i64, i64* %size.addr.i618, align 8, !dbg !12253
  %346 = load i32, i32* %flags.addr.i619, align 4, !dbg !12254
  %call10.i742 = call noalias i8* @__kmalloc(i64 %345, i32 %346) #13, !dbg !12255
  %ptrint.i743 = ptrtoint i8* %call10.i742 to i64, !dbg !12255
  %maskedptr.i744 = and i64 %ptrint.i743, 7, !dbg !12255
  %maskcond.i745 = icmp eq i64 %maskedptr.i744, 0, !dbg !12255
  call void @llvm.assume(i1 %maskcond.i745) #7, !dbg !12255
  store i8* %call10.i742, i8** %retval.i617, align 8, !dbg !12256
  br label %kmalloc.exit747, !dbg !12256

kmalloc.exit747:                                  ; preds = %if.then1.i628, %if.then3.i720, %kmalloc_type.exit.i741, %if.end9.i746
  %347 = load i8*, i8** %retval.i617, align 8, !dbg !12257
  store i8* %347, i8** %buf, align 8, !dbg !12258
  %348 = load i8*, i8** %buf, align 8, !dbg !12259
  %tobool275 = icmp ne i8* %348, null, !dbg !12259
  br i1 %tobool275, label %if.end277, label %if.then276, !dbg !12261

if.then276:                                       ; preds = %kmalloc.exit747
  store i32 -12, i32* %ret, align 4, !dbg !12262
  br label %error, !dbg !12264

if.end277:                                        ; preds = %kmalloc.exit747
  %349 = load %struct.async*, %struct.async** %as, align 8, !dbg !12265
  %urb278 = getelementptr inbounds %struct.async, %struct.async* %349, i32 0, i32 9, !dbg !12266
  %350 = load %struct.urb*, %struct.urb** %urb278, align 8, !dbg !12266
  %sg279 = getelementptr inbounds %struct.urb, %struct.urb* %350, i32 0, i32 16, !dbg !12267
  %351 = load %struct.scatterlist*, %struct.scatterlist** %sg279, align 8, !dbg !12267
  %352 = load i32, i32* %i, align 4, !dbg !12268
  %idxprom280 = sext i32 %352 to i64, !dbg !12265
  %arrayidx281 = getelementptr %struct.scatterlist, %struct.scatterlist* %351, i64 %idxprom280, !dbg !12265
  %353 = load i8*, i8** %buf, align 8, !dbg !12269
  %354 = load i32, i32* %u, align 4, !dbg !12270
  call void @sg_set_buf(%struct.scatterlist* %arrayidx281, i8* %353, i32 %354) #11, !dbg !12271
  %355 = load i8, i8* %is_in, align 1, !dbg !12272
  %tobool282 = trunc i8 %355 to i1, !dbg !12272
  br i1 %tobool282, label %if.end292, label %if.then283, !dbg !12273

if.then283:                                       ; preds = %if.end277
  %356 = load i8*, i8** %buf, align 8, !dbg !12274
  %357 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12275
  %buffer284 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %357, i32 0, i32 4, !dbg !12276
  %358 = load i8*, i8** %buffer284, align 8, !dbg !12276
  %359 = load i32, i32* %u, align 4, !dbg !12277
  %conv285 = zext i32 %359 to i64, !dbg !12277
  store i8* %356, i8** %to.addr.i755, align 8
  store i8* %358, i8** %from.addr.i756, align 8
  store i64 %conv285, i64* %n.addr.i757, align 8
  %360 = load i8*, i8** %to.addr.i755, align 8, !dbg !12278
  %361 = load i64, i64* %n.addr.i757, align 8, !dbg !12278
  store i8* %360, i8** %addr.addr.i.i749, align 8
  store i64 %361, i64* %bytes.addr.i.i750, align 8
  store i8 0, i8* %is_source.addr.i.i751, align 1
  store i32 -1, i32* %sz.i.i752, align 4, !dbg !11338
  %362 = load i32, i32* %sz.i.i752, align 4, !dbg !12279
  %cmp.i.i758 = icmp sge i32 %362, 0, !dbg !12279
  br i1 %cmp.i.i758, label %land.rhs.i.i761, label %land.end.i.i765, !dbg !12279

land.rhs.i.i761:                                  ; preds = %if.then283
  %363 = load i32, i32* %sz.i.i752, align 4, !dbg !12279
  %conv.i.i759 = sext i32 %363 to i64, !dbg !12279
  %364 = load i64, i64* %bytes.addr.i.i750, align 8, !dbg !12279
  %cmp1.i.i760 = icmp ult i64 %conv.i.i759, %364, !dbg !12279
  br label %land.end.i.i765

land.end.i.i765:                                  ; preds = %land.rhs.i.i761, %if.then283
  %365 = phi i1 [ false, %if.then283 ], [ %cmp1.i.i760, %land.rhs.i.i761 ], !dbg !12280
  %lnot.i.i762 = xor i1 %365, true, !dbg !12279
  %lnot.ext.i.i763 = zext i1 %365 to i32, !dbg !12279
  %conv4.i.i764 = sext i32 %lnot.ext.i.i763 to i64, !dbg !12279
  br i1 %365, label %if.then.i.i766, label %if.end10.i.i781, !dbg !12281

if.then.i.i766:                                   ; preds = %land.end.i.i765
  %366 = load i64, i64* %bytes.addr.i.i750, align 8, !dbg !12282
  %367 = call i1 @llvm.is.constant.i64(i64 %366) #7, !dbg !12283
  br i1 %367, label %if.else.i.i769, label %if.then5.i.i767, !dbg !12284

if.then5.i.i767:                                  ; preds = %if.then.i.i766
  %368 = load i32, i32* %sz.i.i752, align 4, !dbg !12285
  %369 = load i64, i64* %bytes.addr.i.i750, align 8, !dbg !12286
  call void @copy_overflow(i32 %368, i64 %369) #13, !dbg !12287
  br label %if.end9.i.i773, !dbg !12287

if.else.i.i769:                                   ; preds = %if.then.i.i766
  %370 = load i8, i8* %is_source.addr.i.i751, align 1, !dbg !12288
  %tobool6.i.i768 = trunc i8 %370 to i1, !dbg !12288
  br i1 %tobool6.i.i768, label %if.then7.i.i770, label %if.else8.i.i771, !dbg !12289

if.then7.i.i770:                                  ; preds = %if.else.i.i769
  call void @__bad_copy_from() #13, !dbg !12290
  br label %if.end.i.i772, !dbg !12290

if.else8.i.i771:                                  ; preds = %if.else.i.i769
  call void @__bad_copy_to() #13, !dbg !12291
  br label %if.end.i.i772

if.end.i.i772:                                    ; preds = %if.else8.i.i771, %if.then7.i.i770
  br label %if.end9.i.i773

if.end9.i.i773:                                   ; preds = %if.end.i.i772, %if.then5.i.i767
  store i1 false, i1* %retval.i.i748, align 1, !dbg !12292
  br label %check_copy_size.exit.i795, !dbg !12292

if.end10.i.i781:                                  ; preds = %land.end.i.i765
  %371 = load i64, i64* %bytes.addr.i.i750, align 8, !dbg !11339
  %cmp11.i.i774 = icmp ugt i64 %371, 2147483647, !dbg !11339
  %lnot13.i.i775 = xor i1 %cmp11.i.i774, true, !dbg !11339
  %lnot.ext16.i.i776 = zext i1 %cmp11.i.i774 to i32, !dbg !11339
  store i32 %lnot.ext16.i.i776, i32* %__ret_warn_on.i.i753, align 4, !dbg !11339
  %372 = load i32, i32* %__ret_warn_on.i.i753, align 4, !dbg !12293
  %tobool17.i.i777 = icmp ne i32 %372, 0, !dbg !12293
  %lnot18.i.i778 = xor i1 %tobool17.i.i777, true, !dbg !12293
  %lnot.ext21.i.i779 = zext i1 %tobool17.i.i777 to i32, !dbg !12293
  %conv22.i.i780 = sext i32 %lnot.ext21.i.i779 to i64, !dbg !12293
  br i1 %tobool17.i.i777, label %if.then24.i.i782, label %if.end31.i.i788, !dbg !11339

if.then24.i.i782:                                 ; preds = %if.end10.i.i781
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !12294, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !12295, !srcloc !5212
  br label %if.end31.i.i788, !dbg !12296

if.end31.i.i788:                                  ; preds = %if.then24.i.i782, %if.end10.i.i781
  %373 = load i32, i32* %__ret_warn_on.i.i753, align 4, !dbg !11339
  %tobool32.i.i783 = icmp ne i32 %373, 0, !dbg !11339
  %lnot33.i.i784 = xor i1 %tobool32.i.i783, true, !dbg !11339
  %lnot.ext36.i.i785 = zext i1 %tobool32.i.i783 to i32, !dbg !11339
  %conv37.i.i786 = sext i32 %lnot.ext36.i.i785 to i64, !dbg !11339
  store i64 %conv37.i.i786, i64* %tmp.i.i754, align 8, !dbg !12293
  %374 = load i64, i64* %tmp.i.i754, align 8, !dbg !11339
  %tobool38.i.i787 = icmp ne i64 %374, 0, !dbg !12297
  br i1 %tobool38.i.i787, label %if.then39.i.i789, label %if.end40.i.i791, !dbg !12298

if.then39.i.i789:                                 ; preds = %if.end31.i.i788
  store i1 false, i1* %retval.i.i748, align 1, !dbg !12299
  br label %check_copy_size.exit.i795, !dbg !12299

if.end40.i.i791:                                  ; preds = %if.end31.i.i788
  %375 = load i8*, i8** %addr.addr.i.i749, align 8, !dbg !12300
  %376 = load i64, i64* %bytes.addr.i.i750, align 8, !dbg !12301
  %377 = load i8, i8* %is_source.addr.i.i751, align 1, !dbg !12302
  %tobool41.i.i790 = trunc i8 %377 to i1, !dbg !12302
  call void @check_object_size(i8* %375, i64 %376, i1 zeroext %tobool41.i.i790) #13, !dbg !12303
  store i1 true, i1* %retval.i.i748, align 1, !dbg !12304
  br label %check_copy_size.exit.i795, !dbg !12304

check_copy_size.exit.i795:                        ; preds = %if.end40.i.i791, %if.then39.i.i789, %if.end9.i.i773
  %378 = load i1, i1* %retval.i.i748, align 1, !dbg !12305
  %lnot.i792 = xor i1 %378, true, !dbg !12278
  %lnot.ext.i793 = zext i1 %378 to i32, !dbg !12278
  %conv.i794 = sext i32 %lnot.ext.i793 to i64, !dbg !12278
  br i1 %378, label %if.then.i797, label %copy_from_user.exit799, !dbg !12306

if.then.i797:                                     ; preds = %check_copy_size.exit.i795
  %379 = load i8*, i8** %to.addr.i755, align 8, !dbg !12307
  %380 = load i8*, i8** %from.addr.i756, align 8, !dbg !12308
  %381 = load i64, i64* %n.addr.i757, align 8, !dbg !12309
  %call2.i796 = call i64 @_copy_from_user(i8* %379, i8* %380, i64 %381) #13, !dbg !12310
  store i64 %call2.i796, i64* %n.addr.i757, align 8, !dbg !12311
  br label %copy_from_user.exit799, !dbg !12312

copy_from_user.exit799:                           ; preds = %check_copy_size.exit.i795, %if.then.i797
  %382 = load i64, i64* %n.addr.i757, align 8, !dbg !12313
  %tobool287 = icmp ne i64 %382, 0, !dbg !12314
  br i1 %tobool287, label %if.then288, label %if.end289, !dbg !12315

if.then288:                                       ; preds = %copy_from_user.exit799
  store i32 -14, i32* %ret, align 4, !dbg !12316
  br label %error, !dbg !12318

if.end289:                                        ; preds = %copy_from_user.exit799
  %383 = load i32, i32* %u, align 4, !dbg !12319
  %384 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12320
  %buffer290 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %384, i32 0, i32 4, !dbg !12321
  %385 = load i8*, i8** %buffer290, align 8, !dbg !12322
  %idx.ext = zext i32 %383 to i64, !dbg !12322
  %add.ptr291 = getelementptr i8, i8* %385, i64 %idx.ext, !dbg !12322
  store i8* %add.ptr291, i8** %buffer290, align 8, !dbg !12322
  br label %if.end292, !dbg !12323

if.end292:                                        ; preds = %if.end289, %if.end277
  %386 = load i32, i32* %u, align 4, !dbg !12324
  %387 = load i32, i32* %totlen, align 4, !dbg !12325
  %sub293 = sub i32 %387, %386, !dbg !12325
  store i32 %sub293, i32* %totlen, align 4, !dbg !12325
  br label %for.inc294, !dbg !12326

for.inc294:                                       ; preds = %if.end292
  %388 = load i32, i32* %i, align 4, !dbg !12327
  %inc295 = add i32 %388, 1, !dbg !12327
  store i32 %inc295, i32* %i, align 4, !dbg !12327
  br label %for.cond261, !dbg !12328, !llvm.loop !12329

for.end296:                                       ; preds = %for.cond261
  br label %if.end347, !dbg !12331

if.else297:                                       ; preds = %if.end244
  %389 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12332
  %buffer_length298 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %389, i32 0, i32 5, !dbg !12333
  %390 = load i32, i32* %buffer_length298, align 8, !dbg !12333
  %cmp299 = icmp sgt i32 %390, 0, !dbg !12334
  br i1 %cmp299, label %if.then301, label %if.end346, !dbg !12335

if.then301:                                       ; preds = %if.else297
  %391 = load %struct.async*, %struct.async** %as, align 8, !dbg !12336
  %usbm302 = getelementptr inbounds %struct.async, %struct.async* %391, i32 0, i32 10, !dbg !12337
  %392 = load %struct.usb_memory*, %struct.usb_memory** %usbm302, align 8, !dbg !12337
  %tobool303 = icmp ne %struct.usb_memory* %392, null, !dbg !12336
  br i1 %tobool303, label %if.then304, label %if.else311, !dbg !12338

if.then304:                                       ; preds = %if.then301
  call void @llvm.dbg.declare(metadata i64* %uurb_start, metadata !12339, metadata !DIExpression()), !dbg !12341
  %393 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12342
  %buffer305 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %393, i32 0, i32 4, !dbg !12343
  %394 = load i8*, i8** %buffer305, align 8, !dbg !12343
  %395 = ptrtoint i8* %394 to i64, !dbg !12344
  store i64 %395, i64* %uurb_start, align 8, !dbg !12341
  %396 = load %struct.async*, %struct.async** %as, align 8, !dbg !12345
  %usbm306 = getelementptr inbounds %struct.async, %struct.async* %396, i32 0, i32 10, !dbg !12346
  %397 = load %struct.usb_memory*, %struct.usb_memory** %usbm306, align 8, !dbg !12346
  %mem = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %397, i32 0, i32 4, !dbg !12347
  %398 = load i8*, i8** %mem, align 8, !dbg !12347
  %399 = load i64, i64* %uurb_start, align 8, !dbg !12348
  %400 = load %struct.async*, %struct.async** %as, align 8, !dbg !12349
  %usbm307 = getelementptr inbounds %struct.async, %struct.async* %400, i32 0, i32 10, !dbg !12350
  %401 = load %struct.usb_memory*, %struct.usb_memory** %usbm307, align 8, !dbg !12350
  %vm_start = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %401, i32 0, i32 6, !dbg !12351
  %402 = load i64, i64* %vm_start, align 8, !dbg !12351
  %sub308 = sub i64 %399, %402, !dbg !12352
  %add.ptr309 = getelementptr i8, i8* %398, i64 %sub308, !dbg !12353
  %403 = load %struct.async*, %struct.async** %as, align 8, !dbg !12354
  %urb310 = getelementptr inbounds %struct.async, %struct.async* %403, i32 0, i32 9, !dbg !12355
  %404 = load %struct.urb*, %struct.urb** %urb310, align 8, !dbg !12355
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %404, i32 0, i32 14, !dbg !12356
  store i8* %add.ptr309, i8** %transfer_buffer, align 8, !dbg !12357
  br label %if.end345, !dbg !12358

if.else311:                                       ; preds = %if.then301
  %405 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12359
  %buffer_length312 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %405, i32 0, i32 5, !dbg !12360
  %406 = load i32, i32* %buffer_length312, align 8, !dbg !12360
  %conv313 = sext i32 %406 to i64, !dbg !12359
  store i64 %conv313, i64* %size.addr.i815, align 8
  store i32 3264, i32* %flags.addr.i816, align 4
  %407 = load i64, i64* %size.addr.i815, align 8, !dbg !12361
  %408 = call i1 @llvm.is.constant.i64(i64 %407) #7, !dbg !12362
  br i1 %408, label %if.then.i819, label %if.end9.i943, !dbg !12363

if.then.i819:                                     ; preds = %if.else311
  %409 = load i64, i64* %size.addr.i815, align 8, !dbg !12364
  %cmp.i818 = icmp ugt i64 %409, 8192, !dbg !12365
  br i1 %cmp.i818, label %if.then1.i825, label %if.end.i827, !dbg !12366

if.then1.i825:                                    ; preds = %if.then.i819
  %410 = load i64, i64* %size.addr.i815, align 8, !dbg !12367
  %411 = load i32, i32* %flags.addr.i816, align 4, !dbg !12368
  store i64 %410, i64* %size.addr.i.i811, align 8
  store i32 %411, i32* %flags.addr.i.i812, align 4
  %412 = load i64, i64* %size.addr.i.i811, align 8, !dbg !12369
  %call.i.i820 = call i32 @get_order(i64 %412) #15, !dbg !12370
  store i32 %call.i.i820, i32* %order.i.i813, align 4, !dbg !11322
  %413 = load i64, i64* %size.addr.i.i811, align 8, !dbg !12371
  %414 = load i32, i32* %flags.addr.i.i812, align 4, !dbg !12372
  %415 = load i32, i32* %order.i.i813, align 4, !dbg !12373
  store i64 %413, i64* %size.addr.i.i.i808, align 8
  store i32 %414, i32* %flags.addr.i.i.i809, align 4
  store i32 %415, i32* %order.addr.i.i.i810, align 4
  %416 = load i64, i64* %size.addr.i.i.i808, align 8, !dbg !12374
  %417 = load i32, i32* %flags.addr.i.i.i809, align 4, !dbg !12375
  %418 = load i32, i32* %order.addr.i.i.i810, align 4, !dbg !12376
  %call.i.i.i821 = call noalias i8* @kmalloc_order(i64 %416, i32 %417, i32 %418) #13, !dbg !12377
  %ptrint.i.i.i822 = ptrtoint i8* %call.i.i.i821 to i64, !dbg !12377
  %maskedptr.i.i.i823 = and i64 %ptrint.i.i.i822, 4095, !dbg !12377
  %maskcond.i.i.i824 = icmp eq i64 %maskedptr.i.i.i823, 0, !dbg !12377
  call void @llvm.assume(i1 %maskcond.i.i.i824) #7, !dbg !12377
  store i8* %call.i.i.i821, i8** %retval.i814, align 8, !dbg !12378
  br label %kmalloc.exit944, !dbg !12378

if.end.i827:                                      ; preds = %if.then.i819
  %419 = load i64, i64* %size.addr.i815, align 8, !dbg !12379
  store i64 %419, i64* %size.addr.i11.i807, align 8
  %420 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12380
  %tobool.i.i826 = icmp ne i64 %420, 0, !dbg !12380
  br i1 %tobool.i.i826, label %if.end.i.i830, label %if.then.i.i828, !dbg !12381

if.then.i.i828:                                   ; preds = %if.end.i827
  store i32 0, i32* %retval.i.i806, align 4, !dbg !12382
  br label %kmalloc_index.exit.i916, !dbg !12382

if.end.i.i830:                                    ; preds = %if.end.i827
  %421 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12383
  %cmp.i.i829 = icmp ule i64 %421, 8, !dbg !12384
  br i1 %cmp.i.i829, label %if.then1.i.i831, label %if.end2.i.i833, !dbg !12385

if.then1.i.i831:                                  ; preds = %if.end.i.i830
  store i32 3, i32* %retval.i.i806, align 4, !dbg !12386
  br label %kmalloc_index.exit.i916, !dbg !12386

if.end2.i.i833:                                   ; preds = %if.end.i.i830
  %422 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12387
  %cmp3.i.i832 = icmp ugt i64 %422, 64, !dbg !12388
  br i1 %cmp3.i.i832, label %land.lhs.true.i.i835, label %if.end6.i.i838, !dbg !12389

land.lhs.true.i.i835:                             ; preds = %if.end2.i.i833
  %423 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12390
  %cmp4.i.i834 = icmp ule i64 %423, 96, !dbg !12391
  br i1 %cmp4.i.i834, label %if.then5.i.i836, label %if.end6.i.i838, !dbg !12392

if.then5.i.i836:                                  ; preds = %land.lhs.true.i.i835
  store i32 1, i32* %retval.i.i806, align 4, !dbg !12393
  br label %kmalloc_index.exit.i916, !dbg !12393

if.end6.i.i838:                                   ; preds = %land.lhs.true.i.i835, %if.end2.i.i833
  %424 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12394
  %cmp7.i.i837 = icmp ugt i64 %424, 128, !dbg !12395
  br i1 %cmp7.i.i837, label %land.lhs.true8.i.i840, label %if.end11.i.i843, !dbg !12396

land.lhs.true8.i.i840:                            ; preds = %if.end6.i.i838
  %425 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12397
  %cmp9.i.i839 = icmp ule i64 %425, 192, !dbg !12398
  br i1 %cmp9.i.i839, label %if.then10.i.i841, label %if.end11.i.i843, !dbg !12399

if.then10.i.i841:                                 ; preds = %land.lhs.true8.i.i840
  store i32 2, i32* %retval.i.i806, align 4, !dbg !12400
  br label %kmalloc_index.exit.i916, !dbg !12400

if.end11.i.i843:                                  ; preds = %land.lhs.true8.i.i840, %if.end6.i.i838
  %426 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12401
  %cmp12.i.i842 = icmp ule i64 %426, 8, !dbg !12402
  br i1 %cmp12.i.i842, label %if.then13.i.i844, label %if.end14.i.i846, !dbg !12403

if.then13.i.i844:                                 ; preds = %if.end11.i.i843
  store i32 3, i32* %retval.i.i806, align 4, !dbg !12404
  br label %kmalloc_index.exit.i916, !dbg !12404

if.end14.i.i846:                                  ; preds = %if.end11.i.i843
  %427 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12405
  %cmp15.i.i845 = icmp ule i64 %427, 16, !dbg !12406
  br i1 %cmp15.i.i845, label %if.then16.i.i847, label %if.end17.i.i849, !dbg !12407

if.then16.i.i847:                                 ; preds = %if.end14.i.i846
  store i32 4, i32* %retval.i.i806, align 4, !dbg !12408
  br label %kmalloc_index.exit.i916, !dbg !12408

if.end17.i.i849:                                  ; preds = %if.end14.i.i846
  %428 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12409
  %cmp18.i.i848 = icmp ule i64 %428, 32, !dbg !12410
  br i1 %cmp18.i.i848, label %if.then19.i.i850, label %if.end20.i.i852, !dbg !12411

if.then19.i.i850:                                 ; preds = %if.end17.i.i849
  store i32 5, i32* %retval.i.i806, align 4, !dbg !12412
  br label %kmalloc_index.exit.i916, !dbg !12412

if.end20.i.i852:                                  ; preds = %if.end17.i.i849
  %429 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12413
  %cmp21.i.i851 = icmp ule i64 %429, 64, !dbg !12414
  br i1 %cmp21.i.i851, label %if.then22.i.i853, label %if.end23.i.i855, !dbg !12415

if.then22.i.i853:                                 ; preds = %if.end20.i.i852
  store i32 6, i32* %retval.i.i806, align 4, !dbg !12416
  br label %kmalloc_index.exit.i916, !dbg !12416

if.end23.i.i855:                                  ; preds = %if.end20.i.i852
  %430 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12417
  %cmp24.i.i854 = icmp ule i64 %430, 128, !dbg !12418
  br i1 %cmp24.i.i854, label %if.then25.i.i856, label %if.end26.i.i858, !dbg !12419

if.then25.i.i856:                                 ; preds = %if.end23.i.i855
  store i32 7, i32* %retval.i.i806, align 4, !dbg !12420
  br label %kmalloc_index.exit.i916, !dbg !12420

if.end26.i.i858:                                  ; preds = %if.end23.i.i855
  %431 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12421
  %cmp27.i.i857 = icmp ule i64 %431, 256, !dbg !12422
  br i1 %cmp27.i.i857, label %if.then28.i.i859, label %if.end29.i.i861, !dbg !12423

if.then28.i.i859:                                 ; preds = %if.end26.i.i858
  store i32 8, i32* %retval.i.i806, align 4, !dbg !12424
  br label %kmalloc_index.exit.i916, !dbg !12424

if.end29.i.i861:                                  ; preds = %if.end26.i.i858
  %432 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12425
  %cmp30.i.i860 = icmp ule i64 %432, 512, !dbg !12426
  br i1 %cmp30.i.i860, label %if.then31.i.i862, label %if.end32.i.i864, !dbg !12427

if.then31.i.i862:                                 ; preds = %if.end29.i.i861
  store i32 9, i32* %retval.i.i806, align 4, !dbg !12428
  br label %kmalloc_index.exit.i916, !dbg !12428

if.end32.i.i864:                                  ; preds = %if.end29.i.i861
  %433 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12429
  %cmp33.i.i863 = icmp ule i64 %433, 1024, !dbg !12430
  br i1 %cmp33.i.i863, label %if.then34.i.i865, label %if.end35.i.i867, !dbg !12431

if.then34.i.i865:                                 ; preds = %if.end32.i.i864
  store i32 10, i32* %retval.i.i806, align 4, !dbg !12432
  br label %kmalloc_index.exit.i916, !dbg !12432

if.end35.i.i867:                                  ; preds = %if.end32.i.i864
  %434 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12433
  %cmp36.i.i866 = icmp ule i64 %434, 2048, !dbg !12434
  br i1 %cmp36.i.i866, label %if.then37.i.i868, label %if.end38.i.i870, !dbg !12435

if.then37.i.i868:                                 ; preds = %if.end35.i.i867
  store i32 11, i32* %retval.i.i806, align 4, !dbg !12436
  br label %kmalloc_index.exit.i916, !dbg !12436

if.end38.i.i870:                                  ; preds = %if.end35.i.i867
  %435 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12437
  %cmp39.i.i869 = icmp ule i64 %435, 4096, !dbg !12438
  br i1 %cmp39.i.i869, label %if.then40.i.i871, label %if.end41.i.i873, !dbg !12439

if.then40.i.i871:                                 ; preds = %if.end38.i.i870
  store i32 12, i32* %retval.i.i806, align 4, !dbg !12440
  br label %kmalloc_index.exit.i916, !dbg !12440

if.end41.i.i873:                                  ; preds = %if.end38.i.i870
  %436 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12441
  %cmp42.i.i872 = icmp ule i64 %436, 8192, !dbg !12442
  br i1 %cmp42.i.i872, label %if.then43.i.i874, label %if.end44.i.i876, !dbg !12443

if.then43.i.i874:                                 ; preds = %if.end41.i.i873
  store i32 13, i32* %retval.i.i806, align 4, !dbg !12444
  br label %kmalloc_index.exit.i916, !dbg !12444

if.end44.i.i876:                                  ; preds = %if.end41.i.i873
  %437 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12445
  %cmp45.i.i875 = icmp ule i64 %437, 16384, !dbg !12446
  br i1 %cmp45.i.i875, label %if.then46.i.i877, label %if.end47.i.i879, !dbg !12447

if.then46.i.i877:                                 ; preds = %if.end44.i.i876
  store i32 14, i32* %retval.i.i806, align 4, !dbg !12448
  br label %kmalloc_index.exit.i916, !dbg !12448

if.end47.i.i879:                                  ; preds = %if.end44.i.i876
  %438 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12449
  %cmp48.i.i878 = icmp ule i64 %438, 32768, !dbg !12450
  br i1 %cmp48.i.i878, label %if.then49.i.i880, label %if.end50.i.i882, !dbg !12451

if.then49.i.i880:                                 ; preds = %if.end47.i.i879
  store i32 15, i32* %retval.i.i806, align 4, !dbg !12452
  br label %kmalloc_index.exit.i916, !dbg !12452

if.end50.i.i882:                                  ; preds = %if.end47.i.i879
  %439 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12453
  %cmp51.i.i881 = icmp ule i64 %439, 65536, !dbg !12454
  br i1 %cmp51.i.i881, label %if.then52.i.i883, label %if.end53.i.i885, !dbg !12455

if.then52.i.i883:                                 ; preds = %if.end50.i.i882
  store i32 16, i32* %retval.i.i806, align 4, !dbg !12456
  br label %kmalloc_index.exit.i916, !dbg !12456

if.end53.i.i885:                                  ; preds = %if.end50.i.i882
  %440 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12457
  %cmp54.i.i884 = icmp ule i64 %440, 131072, !dbg !12458
  br i1 %cmp54.i.i884, label %if.then55.i.i886, label %if.end56.i.i888, !dbg !12459

if.then55.i.i886:                                 ; preds = %if.end53.i.i885
  store i32 17, i32* %retval.i.i806, align 4, !dbg !12460
  br label %kmalloc_index.exit.i916, !dbg !12460

if.end56.i.i888:                                  ; preds = %if.end53.i.i885
  %441 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12461
  %cmp57.i.i887 = icmp ule i64 %441, 262144, !dbg !12462
  br i1 %cmp57.i.i887, label %if.then58.i.i889, label %if.end59.i.i891, !dbg !12463

if.then58.i.i889:                                 ; preds = %if.end56.i.i888
  store i32 18, i32* %retval.i.i806, align 4, !dbg !12464
  br label %kmalloc_index.exit.i916, !dbg !12464

if.end59.i.i891:                                  ; preds = %if.end56.i.i888
  %442 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12465
  %cmp60.i.i890 = icmp ule i64 %442, 524288, !dbg !12466
  br i1 %cmp60.i.i890, label %if.then61.i.i892, label %if.end62.i.i894, !dbg !12467

if.then61.i.i892:                                 ; preds = %if.end59.i.i891
  store i32 19, i32* %retval.i.i806, align 4, !dbg !12468
  br label %kmalloc_index.exit.i916, !dbg !12468

if.end62.i.i894:                                  ; preds = %if.end59.i.i891
  %443 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12469
  %cmp63.i.i893 = icmp ule i64 %443, 1048576, !dbg !12470
  br i1 %cmp63.i.i893, label %if.then64.i.i895, label %if.end65.i.i897, !dbg !12471

if.then64.i.i895:                                 ; preds = %if.end62.i.i894
  store i32 20, i32* %retval.i.i806, align 4, !dbg !12472
  br label %kmalloc_index.exit.i916, !dbg !12472

if.end65.i.i897:                                  ; preds = %if.end62.i.i894
  %444 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12473
  %cmp66.i.i896 = icmp ule i64 %444, 2097152, !dbg !12474
  br i1 %cmp66.i.i896, label %if.then67.i.i898, label %if.end68.i.i900, !dbg !12475

if.then67.i.i898:                                 ; preds = %if.end65.i.i897
  store i32 21, i32* %retval.i.i806, align 4, !dbg !12476
  br label %kmalloc_index.exit.i916, !dbg !12476

if.end68.i.i900:                                  ; preds = %if.end65.i.i897
  %445 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12477
  %cmp69.i.i899 = icmp ule i64 %445, 4194304, !dbg !12478
  br i1 %cmp69.i.i899, label %if.then70.i.i901, label %if.end71.i.i903, !dbg !12479

if.then70.i.i901:                                 ; preds = %if.end68.i.i900
  store i32 22, i32* %retval.i.i806, align 4, !dbg !12480
  br label %kmalloc_index.exit.i916, !dbg !12480

if.end71.i.i903:                                  ; preds = %if.end68.i.i900
  %446 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12481
  %cmp72.i.i902 = icmp ule i64 %446, 8388608, !dbg !12482
  br i1 %cmp72.i.i902, label %if.then73.i.i904, label %if.end74.i.i906, !dbg !12483

if.then73.i.i904:                                 ; preds = %if.end71.i.i903
  store i32 23, i32* %retval.i.i806, align 4, !dbg !12484
  br label %kmalloc_index.exit.i916, !dbg !12484

if.end74.i.i906:                                  ; preds = %if.end71.i.i903
  %447 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12485
  %cmp75.i.i905 = icmp ule i64 %447, 16777216, !dbg !12486
  br i1 %cmp75.i.i905, label %if.then76.i.i907, label %if.end77.i.i909, !dbg !12487

if.then76.i.i907:                                 ; preds = %if.end74.i.i906
  store i32 24, i32* %retval.i.i806, align 4, !dbg !12488
  br label %kmalloc_index.exit.i916, !dbg !12488

if.end77.i.i909:                                  ; preds = %if.end74.i.i906
  %448 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12489
  %cmp78.i.i908 = icmp ule i64 %448, 33554432, !dbg !12490
  br i1 %cmp78.i.i908, label %if.then79.i.i910, label %if.end80.i.i912, !dbg !12491

if.then79.i.i910:                                 ; preds = %if.end77.i.i909
  store i32 25, i32* %retval.i.i806, align 4, !dbg !12492
  br label %kmalloc_index.exit.i916, !dbg !12492

if.end80.i.i912:                                  ; preds = %if.end77.i.i909
  %449 = load i64, i64* %size.addr.i11.i807, align 8, !dbg !12493
  %cmp81.i.i911 = icmp ule i64 %449, 67108864, !dbg !12494
  br i1 %cmp81.i.i911, label %if.then82.i.i913, label %if.end83.i.i914, !dbg !12495

if.then82.i.i913:                                 ; preds = %if.end80.i.i912
  store i32 26, i32* %retval.i.i806, align 4, !dbg !12496
  br label %kmalloc_index.exit.i916, !dbg !12496

if.end83.i.i914:                                  ; preds = %if.end80.i.i912
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !12497, !srcloc !10853
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 214) #7, !dbg !12498, !srcloc !10857
  unreachable, !dbg !12499

kmalloc_index.exit.i916:                          ; preds = %if.then82.i.i913, %if.then79.i.i910, %if.then76.i.i907, %if.then73.i.i904, %if.then70.i.i901, %if.then67.i.i898, %if.then64.i.i895, %if.then61.i.i892, %if.then58.i.i889, %if.then55.i.i886, %if.then52.i.i883, %if.then49.i.i880, %if.then46.i.i877, %if.then43.i.i874, %if.then40.i.i871, %if.then37.i.i868, %if.then34.i.i865, %if.then31.i.i862, %if.then28.i.i859, %if.then25.i.i856, %if.then22.i.i853, %if.then19.i.i850, %if.then16.i.i847, %if.then13.i.i844, %if.then10.i.i841, %if.then5.i.i836, %if.then1.i.i831, %if.then.i.i828
  %450 = load i32, i32* %retval.i.i806, align 4, !dbg !12500
  store i32 %450, i32* %index.i817, align 4, !dbg !12501
  %451 = load i32, i32* %index.i817, align 4, !dbg !12502
  %tobool.i915 = icmp ne i32 %451, 0, !dbg !12502
  br i1 %tobool.i915, label %if.end4.i923, label %if.then3.i917, !dbg !12503

if.then3.i917:                                    ; preds = %kmalloc_index.exit.i916
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i814, align 8, !dbg !12504
  br label %kmalloc.exit944, !dbg !12504

if.end4.i923:                                     ; preds = %kmalloc_index.exit.i916
  %452 = load i32, i32* %flags.addr.i816, align 4, !dbg !12505
  store i32 %452, i32* %flags.addr.i13.i805, align 4
  %453 = load i32, i32* %flags.addr.i13.i805, align 4, !dbg !12506
  %and.i.i918 = and i32 %453, 17, !dbg !12506
  %cmp.i14.i919 = icmp eq i32 %and.i.i918, 0, !dbg !12506
  %lnot.i.i920 = xor i1 %cmp.i14.i919, true, !dbg !12506
  %lnot.ext.i.i921 = zext i1 %cmp.i14.i919 to i32, !dbg !12506
  %conv.i.i922 = sext i32 %lnot.ext.i.i921 to i64, !dbg !12506
  br i1 %cmp.i14.i919, label %if.then.i15.i924, label %if.end.i16.i928, !dbg !12507

if.then.i15.i924:                                 ; preds = %if.end4.i923
  store i32 0, i32* %retval.i12.i804, align 4, !dbg !12508
  br label %kmalloc_type.exit.i938, !dbg !12508

if.end.i16.i928:                                  ; preds = %if.end4.i923
  %454 = load i32, i32* %flags.addr.i13.i805, align 4, !dbg !12509
  %and2.i.i925 = and i32 %454, 1, !dbg !12510
  %tobool3.i.i926 = icmp ne i32 %and2.i.i925, 0, !dbg !12509
  %455 = zext i1 %tobool3.i.i926 to i64, !dbg !12509
  %cond.i.i927 = select i1 %tobool3.i.i926, i32 2, i32 1, !dbg !12509
  store i32 %cond.i.i927, i32* %retval.i12.i804, align 4, !dbg !12511
  br label %kmalloc_type.exit.i938, !dbg !12511

kmalloc_type.exit.i938:                           ; preds = %if.end.i16.i928, %if.then.i15.i924
  %456 = load i32, i32* %retval.i12.i804, align 4, !dbg !12512
  %idxprom.i929 = zext i32 %456 to i64, !dbg !12513
  %arrayidx.i930 = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i929, !dbg !12513
  %457 = load i32, i32* %index.i817, align 4, !dbg !12514
  %idxprom6.i931 = zext i32 %457 to i64, !dbg !12513
  %arrayidx7.i932 = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i930, i64 0, i64 %idxprom6.i931, !dbg !12513
  %458 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i932, align 8, !dbg !12513
  %459 = load i32, i32* %flags.addr.i816, align 4, !dbg !12515
  %460 = load i64, i64* %size.addr.i815, align 8, !dbg !12516
  store %struct.kmem_cache* %458, %struct.kmem_cache** %s.addr.i.i800, align 8
  store i32 %459, i32* %flags.addr.i17.i801, align 4
  store i64 %460, i64* %size.addr.i18.i802, align 8
  %461 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i800, align 8, !dbg !12517
  %462 = load i32, i32* %flags.addr.i17.i801, align 4, !dbg !12518
  %call.i19.i933 = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %461, i32 %462) #13, !dbg !12519
  %ptrint.i.i934 = ptrtoint i8* %call.i19.i933 to i64, !dbg !12519
  %maskedptr.i.i935 = and i64 %ptrint.i.i934, 7, !dbg !12519
  %maskcond.i.i936 = icmp eq i64 %maskedptr.i.i935, 0, !dbg !12519
  call void @llvm.assume(i1 %maskcond.i.i936) #7, !dbg !12519
  store i8* %call.i19.i933, i8** %ret.i.i803, align 8, !dbg !11310
  %463 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i800, align 8, !dbg !12520
  %464 = load i8*, i8** %ret.i.i803, align 8, !dbg !12521
  %465 = load i64, i64* %size.addr.i18.i802, align 8, !dbg !12522
  %466 = load i32, i32* %flags.addr.i17.i801, align 4, !dbg !12523
  %call1.i.i937 = call i8* @kasan_kmalloc(%struct.kmem_cache* %463, i8* %464, i64 %465, i32 %466) #13, !dbg !12524
  store i8* %call1.i.i937, i8** %ret.i.i803, align 8, !dbg !12525
  %467 = load i8*, i8** %ret.i.i803, align 8, !dbg !12526
  store i8* %467, i8** %retval.i814, align 8, !dbg !12527
  br label %kmalloc.exit944, !dbg !12527

if.end9.i943:                                     ; preds = %if.else311
  %468 = load i64, i64* %size.addr.i815, align 8, !dbg !12528
  %469 = load i32, i32* %flags.addr.i816, align 4, !dbg !12529
  %call10.i939 = call noalias i8* @__kmalloc(i64 %468, i32 %469) #13, !dbg !12530
  %ptrint.i940 = ptrtoint i8* %call10.i939 to i64, !dbg !12530
  %maskedptr.i941 = and i64 %ptrint.i940, 7, !dbg !12530
  %maskcond.i942 = icmp eq i64 %maskedptr.i941, 0, !dbg !12530
  call void @llvm.assume(i1 %maskcond.i942) #7, !dbg !12530
  store i8* %call10.i939, i8** %retval.i814, align 8, !dbg !12531
  br label %kmalloc.exit944, !dbg !12531

kmalloc.exit944:                                  ; preds = %if.then1.i825, %if.then3.i917, %kmalloc_type.exit.i938, %if.end9.i943
  %470 = load i8*, i8** %retval.i814, align 8, !dbg !12532
  %471 = load %struct.async*, %struct.async** %as, align 8, !dbg !12533
  %urb315 = getelementptr inbounds %struct.async, %struct.async* %471, i32 0, i32 9, !dbg !12534
  %472 = load %struct.urb*, %struct.urb** %urb315, align 8, !dbg !12534
  %transfer_buffer316 = getelementptr inbounds %struct.urb, %struct.urb* %472, i32 0, i32 14, !dbg !12535
  store i8* %470, i8** %transfer_buffer316, align 8, !dbg !12536
  %473 = load %struct.async*, %struct.async** %as, align 8, !dbg !12537
  %urb317 = getelementptr inbounds %struct.async, %struct.async* %473, i32 0, i32 9, !dbg !12539
  %474 = load %struct.urb*, %struct.urb** %urb317, align 8, !dbg !12539
  %transfer_buffer318 = getelementptr inbounds %struct.urb, %struct.urb* %474, i32 0, i32 14, !dbg !12540
  %475 = load i8*, i8** %transfer_buffer318, align 8, !dbg !12540
  %tobool319 = icmp ne i8* %475, null, !dbg !12537
  br i1 %tobool319, label %if.end321, label %if.then320, !dbg !12541

if.then320:                                       ; preds = %kmalloc.exit944
  store i32 -12, i32* %ret, align 4, !dbg !12542
  br label %error, !dbg !12544

if.end321:                                        ; preds = %kmalloc.exit944
  %476 = load i8, i8* %is_in, align 1, !dbg !12545
  %tobool322 = trunc i8 %476 to i1, !dbg !12545
  br i1 %tobool322, label %if.else333, label %if.then323, !dbg !12546

if.then323:                                       ; preds = %if.end321
  %477 = load %struct.async*, %struct.async** %as, align 8, !dbg !12547
  %urb324 = getelementptr inbounds %struct.async, %struct.async* %477, i32 0, i32 9, !dbg !12548
  %478 = load %struct.urb*, %struct.urb** %urb324, align 8, !dbg !12548
  %transfer_buffer325 = getelementptr inbounds %struct.urb, %struct.urb* %478, i32 0, i32 14, !dbg !12549
  %479 = load i8*, i8** %transfer_buffer325, align 8, !dbg !12549
  %480 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12550
  %buffer326 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %480, i32 0, i32 4, !dbg !12551
  %481 = load i8*, i8** %buffer326, align 8, !dbg !12551
  %482 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12552
  %buffer_length327 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %482, i32 0, i32 5, !dbg !12553
  %483 = load i32, i32* %buffer_length327, align 8, !dbg !12553
  %conv328 = sext i32 %483 to i64, !dbg !12552
  store i8* %479, i8** %to.addr.i952, align 8
  store i8* %481, i8** %from.addr.i953, align 8
  store i64 %conv328, i64* %n.addr.i954, align 8
  %484 = load i8*, i8** %to.addr.i952, align 8, !dbg !12554
  %485 = load i64, i64* %n.addr.i954, align 8, !dbg !12554
  store i8* %484, i8** %addr.addr.i.i946, align 8
  store i64 %485, i64* %bytes.addr.i.i947, align 8
  store i8 0, i8* %is_source.addr.i.i948, align 1
  store i32 -1, i32* %sz.i.i949, align 4, !dbg !11300
  %486 = load i32, i32* %sz.i.i949, align 4, !dbg !12555
  %cmp.i.i955 = icmp sge i32 %486, 0, !dbg !12555
  br i1 %cmp.i.i955, label %land.rhs.i.i958, label %land.end.i.i962, !dbg !12555

land.rhs.i.i958:                                  ; preds = %if.then323
  %487 = load i32, i32* %sz.i.i949, align 4, !dbg !12555
  %conv.i.i956 = sext i32 %487 to i64, !dbg !12555
  %488 = load i64, i64* %bytes.addr.i.i947, align 8, !dbg !12555
  %cmp1.i.i957 = icmp ult i64 %conv.i.i956, %488, !dbg !12555
  br label %land.end.i.i962

land.end.i.i962:                                  ; preds = %land.rhs.i.i958, %if.then323
  %489 = phi i1 [ false, %if.then323 ], [ %cmp1.i.i957, %land.rhs.i.i958 ], !dbg !12556
  %lnot.i.i959 = xor i1 %489, true, !dbg !12555
  %lnot.ext.i.i960 = zext i1 %489 to i32, !dbg !12555
  %conv4.i.i961 = sext i32 %lnot.ext.i.i960 to i64, !dbg !12555
  br i1 %489, label %if.then.i.i963, label %if.end10.i.i978, !dbg !12557

if.then.i.i963:                                   ; preds = %land.end.i.i962
  %490 = load i64, i64* %bytes.addr.i.i947, align 8, !dbg !12558
  %491 = call i1 @llvm.is.constant.i64(i64 %490) #7, !dbg !12559
  br i1 %491, label %if.else.i.i966, label %if.then5.i.i964, !dbg !12560

if.then5.i.i964:                                  ; preds = %if.then.i.i963
  %492 = load i32, i32* %sz.i.i949, align 4, !dbg !12561
  %493 = load i64, i64* %bytes.addr.i.i947, align 8, !dbg !12562
  call void @copy_overflow(i32 %492, i64 %493) #13, !dbg !12563
  br label %if.end9.i.i970, !dbg !12563

if.else.i.i966:                                   ; preds = %if.then.i.i963
  %494 = load i8, i8* %is_source.addr.i.i948, align 1, !dbg !12564
  %tobool6.i.i965 = trunc i8 %494 to i1, !dbg !12564
  br i1 %tobool6.i.i965, label %if.then7.i.i967, label %if.else8.i.i968, !dbg !12565

if.then7.i.i967:                                  ; preds = %if.else.i.i966
  call void @__bad_copy_from() #13, !dbg !12566
  br label %if.end.i.i969, !dbg !12566

if.else8.i.i968:                                  ; preds = %if.else.i.i966
  call void @__bad_copy_to() #13, !dbg !12567
  br label %if.end.i.i969

if.end.i.i969:                                    ; preds = %if.else8.i.i968, %if.then7.i.i967
  br label %if.end9.i.i970

if.end9.i.i970:                                   ; preds = %if.end.i.i969, %if.then5.i.i964
  store i1 false, i1* %retval.i.i945, align 1, !dbg !12568
  br label %check_copy_size.exit.i992, !dbg !12568

if.end10.i.i978:                                  ; preds = %land.end.i.i962
  %495 = load i64, i64* %bytes.addr.i.i947, align 8, !dbg !11301
  %cmp11.i.i971 = icmp ugt i64 %495, 2147483647, !dbg !11301
  %lnot13.i.i972 = xor i1 %cmp11.i.i971, true, !dbg !11301
  %lnot.ext16.i.i973 = zext i1 %cmp11.i.i971 to i32, !dbg !11301
  store i32 %lnot.ext16.i.i973, i32* %__ret_warn_on.i.i950, align 4, !dbg !11301
  %496 = load i32, i32* %__ret_warn_on.i.i950, align 4, !dbg !12569
  %tobool17.i.i974 = icmp ne i32 %496, 0, !dbg !12569
  %lnot18.i.i975 = xor i1 %tobool17.i.i974, true, !dbg !12569
  %lnot.ext21.i.i976 = zext i1 %tobool17.i.i974 to i32, !dbg !12569
  %conv22.i.i977 = sext i32 %lnot.ext21.i.i976 to i64, !dbg !12569
  br i1 %tobool17.i.i974, label %if.then24.i.i979, label %if.end31.i.i985, !dbg !11301

if.then24.i.i979:                                 ; preds = %if.end10.i.i978
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !12570, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !12571, !srcloc !5212
  br label %if.end31.i.i985, !dbg !12572

if.end31.i.i985:                                  ; preds = %if.then24.i.i979, %if.end10.i.i978
  %497 = load i32, i32* %__ret_warn_on.i.i950, align 4, !dbg !11301
  %tobool32.i.i980 = icmp ne i32 %497, 0, !dbg !11301
  %lnot33.i.i981 = xor i1 %tobool32.i.i980, true, !dbg !11301
  %lnot.ext36.i.i982 = zext i1 %tobool32.i.i980 to i32, !dbg !11301
  %conv37.i.i983 = sext i32 %lnot.ext36.i.i982 to i64, !dbg !11301
  store i64 %conv37.i.i983, i64* %tmp.i.i951, align 8, !dbg !12569
  %498 = load i64, i64* %tmp.i.i951, align 8, !dbg !11301
  %tobool38.i.i984 = icmp ne i64 %498, 0, !dbg !12573
  br i1 %tobool38.i.i984, label %if.then39.i.i986, label %if.end40.i.i988, !dbg !12574

if.then39.i.i986:                                 ; preds = %if.end31.i.i985
  store i1 false, i1* %retval.i.i945, align 1, !dbg !12575
  br label %check_copy_size.exit.i992, !dbg !12575

if.end40.i.i988:                                  ; preds = %if.end31.i.i985
  %499 = load i8*, i8** %addr.addr.i.i946, align 8, !dbg !12576
  %500 = load i64, i64* %bytes.addr.i.i947, align 8, !dbg !12577
  %501 = load i8, i8* %is_source.addr.i.i948, align 1, !dbg !12578
  %tobool41.i.i987 = trunc i8 %501 to i1, !dbg !12578
  call void @check_object_size(i8* %499, i64 %500, i1 zeroext %tobool41.i.i987) #13, !dbg !12579
  store i1 true, i1* %retval.i.i945, align 1, !dbg !12580
  br label %check_copy_size.exit.i992, !dbg !12580

check_copy_size.exit.i992:                        ; preds = %if.end40.i.i988, %if.then39.i.i986, %if.end9.i.i970
  %502 = load i1, i1* %retval.i.i945, align 1, !dbg !12581
  %lnot.i989 = xor i1 %502, true, !dbg !12554
  %lnot.ext.i990 = zext i1 %502 to i32, !dbg !12554
  %conv.i991 = sext i32 %lnot.ext.i990 to i64, !dbg !12554
  br i1 %502, label %if.then.i994, label %copy_from_user.exit996, !dbg !12582

if.then.i994:                                     ; preds = %check_copy_size.exit.i992
  %503 = load i8*, i8** %to.addr.i952, align 8, !dbg !12583
  %504 = load i8*, i8** %from.addr.i953, align 8, !dbg !12584
  %505 = load i64, i64* %n.addr.i954, align 8, !dbg !12585
  %call2.i993 = call i64 @_copy_from_user(i8* %503, i8* %504, i64 %505) #13, !dbg !12586
  store i64 %call2.i993, i64* %n.addr.i954, align 8, !dbg !12587
  br label %copy_from_user.exit996, !dbg !12588

copy_from_user.exit996:                           ; preds = %check_copy_size.exit.i992, %if.then.i994
  %506 = load i64, i64* %n.addr.i954, align 8, !dbg !12589
  %tobool330 = icmp ne i64 %506, 0, !dbg !12590
  br i1 %tobool330, label %if.then331, label %if.end332, !dbg !12591

if.then331:                                       ; preds = %copy_from_user.exit996
  store i32 -14, i32* %ret, align 4, !dbg !12592
  br label %error, !dbg !12594

if.end332:                                        ; preds = %copy_from_user.exit996
  br label %if.end344, !dbg !12595

if.else333:                                       ; preds = %if.end321
  %507 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12596
  %type334 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %507, i32 0, i32 0, !dbg !12598
  %508 = load i8, i8* %type334, align 8, !dbg !12598
  %conv335 = zext i8 %508 to i32, !dbg !12596
  %cmp336 = icmp eq i32 %conv335, 0, !dbg !12599
  br i1 %cmp336, label %if.then338, label %if.end343, !dbg !12600

if.then338:                                       ; preds = %if.else333
  %509 = load %struct.async*, %struct.async** %as, align 8, !dbg !12601
  %urb339 = getelementptr inbounds %struct.async, %struct.async* %509, i32 0, i32 9, !dbg !12603
  %510 = load %struct.urb*, %struct.urb** %urb339, align 8, !dbg !12603
  %transfer_buffer340 = getelementptr inbounds %struct.urb, %struct.urb* %510, i32 0, i32 14, !dbg !12604
  %511 = load i8*, i8** %transfer_buffer340, align 8, !dbg !12604
  %512 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12605
  %buffer_length341 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %512, i32 0, i32 5, !dbg !12606
  %513 = load i32, i32* %buffer_length341, align 8, !dbg !12606
  %conv342 = sext i32 %513 to i64, !dbg !12605
  call void @llvm.memset.p0i8.i64(i8* align 1 %511, i8 0, i64 %conv342, i1 false), !dbg !12607
  br label %if.end343, !dbg !12608

if.end343:                                        ; preds = %if.then338, %if.else333
  br label %if.end344

if.end344:                                        ; preds = %if.end343, %if.end332
  br label %if.end345

if.end345:                                        ; preds = %if.end344, %if.then304
  br label %if.end346, !dbg !12609

if.end346:                                        ; preds = %if.end345, %if.else297
  br label %if.end347

if.end347:                                        ; preds = %if.end346, %for.end296
  %514 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !12610
  %dev348 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %514, i32 0, i32 1, !dbg !12611
  %515 = load %struct.usb_device*, %struct.usb_device** %dev348, align 8, !dbg !12611
  %516 = load %struct.async*, %struct.async** %as, align 8, !dbg !12612
  %urb349 = getelementptr inbounds %struct.async, %struct.async* %516, i32 0, i32 9, !dbg !12613
  %517 = load %struct.urb*, %struct.urb** %urb349, align 8, !dbg !12613
  %dev350 = getelementptr inbounds %struct.urb, %struct.urb* %517, i32 0, i32 8, !dbg !12614
  store %struct.usb_device* %515, %struct.usb_device** %dev350, align 8, !dbg !12615
  %518 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12616
  %type351 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %518, i32 0, i32 0, !dbg !12617
  %519 = load i8, i8* %type351, align 8, !dbg !12617
  %conv352 = zext i8 %519 to i32, !dbg !12616
  %shl353 = shl i32 %conv352, 30, !dbg !12618
  %520 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !12619
  %dev354 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %520, i32 0, i32 1, !dbg !12620
  %521 = load %struct.usb_device*, %struct.usb_device** %dev354, align 8, !dbg !12620
  %522 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12621
  %endpoint355 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %522, i32 0, i32 1, !dbg !12622
  %523 = load i8, i8* %endpoint355, align 1, !dbg !12622
  %conv356 = zext i8 %523 to i32, !dbg !12621
  %and357 = and i32 %conv356, 15, !dbg !12623
  %call358 = call i32 @__create_pipe(%struct.usb_device* %521, i32 %and357) #11, !dbg !12624
  %or359 = or i32 %shl353, %call358, !dbg !12625
  %524 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12626
  %endpoint360 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %524, i32 0, i32 1, !dbg !12627
  %525 = load i8, i8* %endpoint360, align 1, !dbg !12627
  %conv361 = zext i8 %525 to i32, !dbg !12626
  %and362 = and i32 %conv361, 128, !dbg !12628
  %or363 = or i32 %or359, %and362, !dbg !12629
  %526 = load %struct.async*, %struct.async** %as, align 8, !dbg !12630
  %urb364 = getelementptr inbounds %struct.async, %struct.async* %526, i32 0, i32 9, !dbg !12631
  %527 = load %struct.urb*, %struct.urb** %urb364, align 8, !dbg !12631
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %527, i32 0, i32 10, !dbg !12632
  store i32 %or363, i32* %pipe, align 8, !dbg !12633
  %528 = load i8, i8* %is_in, align 1, !dbg !12634
  %tobool365 = trunc i8 %528 to i1, !dbg !12634
  %529 = zext i1 %tobool365 to i64, !dbg !12634
  %cond367 = select i1 %tobool365, i32 512, i32 0, !dbg !12634
  store i32 %cond367, i32* %u, align 4, !dbg !12635
  %530 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12636
  %flags368 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %530, i32 0, i32 3, !dbg !12638
  %531 = load i32, i32* %flags368, align 8, !dbg !12638
  %and369 = and i32 %531, 2, !dbg !12639
  %tobool370 = icmp ne i32 %and369, 0, !dbg !12639
  br i1 %tobool370, label %if.then371, label %if.end373, !dbg !12640

if.then371:                                       ; preds = %if.end347
  %532 = load i32, i32* %u, align 4, !dbg !12641
  %or372 = or i32 %532, 2, !dbg !12641
  store i32 %or372, i32* %u, align 4, !dbg !12641
  br label %if.end373, !dbg !12642

if.end373:                                        ; preds = %if.then371, %if.end347
  %533 = load i8, i8* %allow_short, align 1, !dbg !12643
  %tobool374 = trunc i8 %533 to i1, !dbg !12643
  br i1 %tobool374, label %land.lhs.true376, label %if.end382, !dbg !12645

land.lhs.true376:                                 ; preds = %if.end373
  %534 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12646
  %flags377 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %534, i32 0, i32 3, !dbg !12647
  %535 = load i32, i32* %flags377, align 8, !dbg !12647
  %and378 = and i32 %535, 1, !dbg !12648
  %tobool379 = icmp ne i32 %and378, 0, !dbg !12648
  br i1 %tobool379, label %if.then380, label %if.end382, !dbg !12649

if.then380:                                       ; preds = %land.lhs.true376
  %536 = load i32, i32* %u, align 4, !dbg !12650
  %or381 = or i32 %536, 1, !dbg !12650
  store i32 %or381, i32* %u, align 4, !dbg !12650
  br label %if.end382, !dbg !12651

if.end382:                                        ; preds = %if.then380, %land.lhs.true376, %if.end373
  %537 = load i8, i8* %allow_zero, align 1, !dbg !12652
  %tobool383 = trunc i8 %537 to i1, !dbg !12652
  br i1 %tobool383, label %land.lhs.true385, label %if.end391, !dbg !12654

land.lhs.true385:                                 ; preds = %if.end382
  %538 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12655
  %flags386 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %538, i32 0, i32 3, !dbg !12656
  %539 = load i32, i32* %flags386, align 8, !dbg !12656
  %and387 = and i32 %539, 64, !dbg !12657
  %tobool388 = icmp ne i32 %and387, 0, !dbg !12657
  br i1 %tobool388, label %if.then389, label %if.end391, !dbg !12658

if.then389:                                       ; preds = %land.lhs.true385
  %540 = load i32, i32* %u, align 4, !dbg !12659
  %or390 = or i32 %540, 64, !dbg !12659
  store i32 %or390, i32* %u, align 4, !dbg !12659
  br label %if.end391, !dbg !12660

if.end391:                                        ; preds = %if.then389, %land.lhs.true385, %if.end382
  %541 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12661
  %flags392 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %541, i32 0, i32 3, !dbg !12663
  %542 = load i32, i32* %flags392, align 8, !dbg !12663
  %and393 = and i32 %542, 128, !dbg !12664
  %tobool394 = icmp ne i32 %and393, 0, !dbg !12664
  br i1 %tobool394, label %if.then395, label %if.end397, !dbg !12665

if.then395:                                       ; preds = %if.end391
  %543 = load i32, i32* %u, align 4, !dbg !12666
  %or396 = or i32 %543, 128, !dbg !12666
  store i32 %or396, i32* %u, align 4, !dbg !12666
  br label %if.end397, !dbg !12667

if.end397:                                        ; preds = %if.then395, %if.end391
  %544 = load i32, i32* %u, align 4, !dbg !12668
  %545 = load %struct.async*, %struct.async** %as, align 8, !dbg !12669
  %urb398 = getelementptr inbounds %struct.async, %struct.async* %545, i32 0, i32 9, !dbg !12670
  %546 = load %struct.urb*, %struct.urb** %urb398, align 8, !dbg !12670
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %546, i32 0, i32 13, !dbg !12671
  store i32 %544, i32* %transfer_flags, align 4, !dbg !12672
  %547 = load i8, i8* %allow_short, align 1, !dbg !12673
  %tobool399 = trunc i8 %547 to i1, !dbg !12673
  br i1 %tobool399, label %if.end407, label %land.lhs.true400, !dbg !12675

land.lhs.true400:                                 ; preds = %if.end397
  %548 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12676
  %flags401 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %548, i32 0, i32 3, !dbg !12677
  %549 = load i32, i32* %flags401, align 8, !dbg !12677
  %and402 = and i32 %549, 1, !dbg !12678
  %tobool403 = icmp ne i32 %and402, 0, !dbg !12678
  br i1 %tobool403, label %if.then404, label %if.end407, !dbg !12679

if.then404:                                       ; preds = %land.lhs.true400
  %550 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !12680
  %dev405 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %550, i32 0, i32 1, !dbg !12680
  %551 = load %struct.usb_device*, %struct.usb_device** %dev405, align 8, !dbg !12680
  %dev406 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %551, i32 0, i32 14, !dbg !12680
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev406, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.50, i64 0, i64 0)) #12, !dbg !12680
  br label %if.end407, !dbg !12680

if.end407:                                        ; preds = %if.then404, %land.lhs.true400, %if.end397
  %552 = load i8, i8* %allow_zero, align 1, !dbg !12681
  %tobool408 = trunc i8 %552 to i1, !dbg !12681
  br i1 %tobool408, label %if.end416, label %land.lhs.true409, !dbg !12683

land.lhs.true409:                                 ; preds = %if.end407
  %553 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12684
  %flags410 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %553, i32 0, i32 3, !dbg !12685
  %554 = load i32, i32* %flags410, align 8, !dbg !12685
  %and411 = and i32 %554, 64, !dbg !12686
  %tobool412 = icmp ne i32 %and411, 0, !dbg !12686
  br i1 %tobool412, label %if.then413, label %if.end416, !dbg !12687

if.then413:                                       ; preds = %land.lhs.true409
  %555 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !12688
  %dev414 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %555, i32 0, i32 1, !dbg !12688
  %556 = load %struct.usb_device*, %struct.usb_device** %dev414, align 8, !dbg !12688
  %dev415 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %556, i32 0, i32 14, !dbg !12688
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev415, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.51, i64 0, i64 0)) #12, !dbg !12688
  br label %if.end416, !dbg !12688

if.end416:                                        ; preds = %if.then413, %land.lhs.true409, %if.end407
  %557 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12689
  %buffer_length417 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %557, i32 0, i32 5, !dbg !12690
  %558 = load i32, i32* %buffer_length417, align 8, !dbg !12690
  %559 = load %struct.async*, %struct.async** %as, align 8, !dbg !12691
  %urb418 = getelementptr inbounds %struct.async, %struct.async* %559, i32 0, i32 9, !dbg !12692
  %560 = load %struct.urb*, %struct.urb** %urb418, align 8, !dbg !12692
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %560, i32 0, i32 19, !dbg !12693
  store i32 %558, i32* %transfer_buffer_length, align 8, !dbg !12694
  %561 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !12695
  %562 = bitcast %struct.usb_ctrlrequest* %561 to i8*, !dbg !12696
  %563 = load %struct.async*, %struct.async** %as, align 8, !dbg !12697
  %urb419 = getelementptr inbounds %struct.async, %struct.async* %563, i32 0, i32 9, !dbg !12698
  %564 = load %struct.urb*, %struct.urb** %urb419, align 8, !dbg !12698
  %setup_packet = getelementptr inbounds %struct.urb, %struct.urb* %564, i32 0, i32 21, !dbg !12699
  store i8* %562, i8** %setup_packet, align 8, !dbg !12700
  store %struct.usb_ctrlrequest* null, %struct.usb_ctrlrequest** %dr, align 8, !dbg !12701
  %565 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12702
  %start_frame = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %565, i32 0, i32 7, !dbg !12703
  %566 = load i32, i32* %start_frame, align 8, !dbg !12703
  %567 = load %struct.async*, %struct.async** %as, align 8, !dbg !12704
  %urb420 = getelementptr inbounds %struct.async, %struct.async* %567, i32 0, i32 9, !dbg !12705
  %568 = load %struct.urb*, %struct.urb** %urb420, align 8, !dbg !12705
  %start_frame421 = getelementptr inbounds %struct.urb, %struct.urb* %568, i32 0, i32 23, !dbg !12706
  store i32 %566, i32* %start_frame421, align 8, !dbg !12707
  %569 = load i32, i32* %number_of_packets, align 4, !dbg !12708
  %570 = load %struct.async*, %struct.async** %as, align 8, !dbg !12709
  %urb422 = getelementptr inbounds %struct.async, %struct.async* %570, i32 0, i32 9, !dbg !12710
  %571 = load %struct.urb*, %struct.urb** %urb422, align 8, !dbg !12710
  %number_of_packets423 = getelementptr inbounds %struct.urb, %struct.urb* %571, i32 0, i32 24, !dbg !12711
  store i32 %569, i32* %number_of_packets423, align 4, !dbg !12712
  %572 = load i32, i32* %stream_id, align 4, !dbg !12713
  %573 = load %struct.async*, %struct.async** %as, align 8, !dbg !12714
  %urb424 = getelementptr inbounds %struct.async, %struct.async* %573, i32 0, i32 9, !dbg !12715
  %574 = load %struct.urb*, %struct.urb** %urb424, align 8, !dbg !12715
  %stream_id425 = getelementptr inbounds %struct.urb, %struct.urb* %574, i32 0, i32 11, !dbg !12716
  store i32 %572, i32* %stream_id425, align 4, !dbg !12717
  %575 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !12718
  %desc426 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %575, i32 0, i32 0, !dbg !12720
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc426, i32 0, i32 5, !dbg !12721
  %576 = load i8, i8* %bInterval, align 2, !dbg !12721
  %tobool427 = icmp ne i8 %576, 0, !dbg !12718
  br i1 %tobool427, label %if.then428, label %if.end463, !dbg !12722

if.then428:                                       ; preds = %if.end416
  %577 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12723
  %type429 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %577, i32 0, i32 0, !dbg !12726
  %578 = load i8, i8* %type429, align 8, !dbg !12726
  %conv430 = zext i8 %578 to i32, !dbg !12723
  %cmp431 = icmp eq i32 %conv430, 0, !dbg !12727
  br i1 %cmp431, label %if.then442, label %lor.lhs.false433, !dbg !12728

lor.lhs.false433:                                 ; preds = %if.then428
  %579 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !12729
  %dev434 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %579, i32 0, i32 1, !dbg !12730
  %580 = load %struct.usb_device*, %struct.usb_device** %dev434, align 8, !dbg !12730
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %580, i32 0, i32 4, !dbg !12731
  %581 = load i32, i32* %speed, align 4, !dbg !12731
  %cmp435 = icmp eq i32 %581, 3, !dbg !12732
  br i1 %cmp435, label %if.then442, label %lor.lhs.false437, !dbg !12733

lor.lhs.false437:                                 ; preds = %lor.lhs.false433
  %582 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !12734
  %dev438 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %582, i32 0, i32 1, !dbg !12735
  %583 = load %struct.usb_device*, %struct.usb_device** %dev438, align 8, !dbg !12735
  %speed439 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %583, i32 0, i32 4, !dbg !12736
  %584 = load i32, i32* %speed439, align 4, !dbg !12736
  %cmp440 = icmp uge i32 %584, 5, !dbg !12737
  br i1 %cmp440, label %if.then442, label %if.else456, !dbg !12738

if.then442:                                       ; preds = %lor.lhs.false437, %lor.lhs.false433, %if.then428
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x287, metadata !12739, metadata !DIExpression()), !dbg !12741
  store i32 15, i32* %__UNIQUE_ID___x287, align 4, !dbg !12741
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y288, metadata !12742, metadata !DIExpression()), !dbg !12741
  %585 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !12741
  %desc443 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %585, i32 0, i32 0, !dbg !12741
  %bInterval444 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc443, i32 0, i32 5, !dbg !12741
  %586 = load i8, i8* %bInterval444, align 2, !dbg !12741
  %conv445 = zext i8 %586 to i32, !dbg !12741
  %sub446 = sub i32 %conv445, 1, !dbg !12741
  store i32 %sub446, i32* %__UNIQUE_ID___y288, align 4, !dbg !12741
  %587 = load i32, i32* %__UNIQUE_ID___x287, align 4, !dbg !12741
  %588 = load i32, i32* %__UNIQUE_ID___y288, align 4, !dbg !12741
  %cmp448 = icmp slt i32 %587, %588, !dbg !12741
  br i1 %cmp448, label %cond.true450, label %cond.false451, !dbg !12741

cond.true450:                                     ; preds = %if.then442
  %589 = load i32, i32* %__UNIQUE_ID___x287, align 4, !dbg !12741
  br label %cond.end452, !dbg !12741

cond.false451:                                    ; preds = %if.then442
  %590 = load i32, i32* %__UNIQUE_ID___y288, align 4, !dbg !12741
  br label %cond.end452, !dbg !12741

cond.end452:                                      ; preds = %cond.false451, %cond.true450
  %cond453 = phi i32 [ %589, %cond.true450 ], [ %590, %cond.false451 ], !dbg !12741
  store i32 %cond453, i32* %tmp447, align 4, !dbg !12741
  %591 = load i32, i32* %tmp447, align 4, !dbg !12741
  %shl454 = shl i32 1, %591, !dbg !12743
  %592 = load %struct.async*, %struct.async** %as, align 8, !dbg !12744
  %urb455 = getelementptr inbounds %struct.async, %struct.async* %592, i32 0, i32 9, !dbg !12745
  %593 = load %struct.urb*, %struct.urb** %urb455, align 8, !dbg !12745
  %interval = getelementptr inbounds %struct.urb, %struct.urb* %593, i32 0, i32 25, !dbg !12746
  store i32 %shl454, i32* %interval, align 8, !dbg !12747
  br label %if.end462, !dbg !12744

if.else456:                                       ; preds = %lor.lhs.false437
  %594 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !12748
  %desc457 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %594, i32 0, i32 0, !dbg !12749
  %bInterval458 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc457, i32 0, i32 5, !dbg !12750
  %595 = load i8, i8* %bInterval458, align 2, !dbg !12750
  %conv459 = zext i8 %595 to i32, !dbg !12748
  %596 = load %struct.async*, %struct.async** %as, align 8, !dbg !12751
  %urb460 = getelementptr inbounds %struct.async, %struct.async* %596, i32 0, i32 9, !dbg !12752
  %597 = load %struct.urb*, %struct.urb** %urb460, align 8, !dbg !12752
  %interval461 = getelementptr inbounds %struct.urb, %struct.urb* %597, i32 0, i32 25, !dbg !12753
  store i32 %conv459, i32* %interval461, align 8, !dbg !12754
  br label %if.end462

if.end462:                                        ; preds = %if.else456, %cond.end452
  br label %if.end463, !dbg !12755

if.end463:                                        ; preds = %if.end462, %if.end416
  %598 = load %struct.async*, %struct.async** %as, align 8, !dbg !12756
  %599 = bitcast %struct.async* %598 to i8*, !dbg !12756
  %600 = load %struct.async*, %struct.async** %as, align 8, !dbg !12757
  %urb464 = getelementptr inbounds %struct.async, %struct.async* %600, i32 0, i32 9, !dbg !12758
  %601 = load %struct.urb*, %struct.urb** %urb464, align 8, !dbg !12758
  %context = getelementptr inbounds %struct.urb, %struct.urb* %601, i32 0, i32 27, !dbg !12759
  store i8* %599, i8** %context, align 8, !dbg !12760
  %602 = load %struct.async*, %struct.async** %as, align 8, !dbg !12761
  %urb465 = getelementptr inbounds %struct.async, %struct.async* %602, i32 0, i32 9, !dbg !12762
  %603 = load %struct.urb*, %struct.urb** %urb465, align 8, !dbg !12762
  %complete = getelementptr inbounds %struct.urb, %struct.urb* %603, i32 0, i32 28, !dbg !12763
  store void (%struct.urb*)* @async_completed, void (%struct.urb*)** %complete, align 8, !dbg !12764
  store i32 0, i32* %u, align 4, !dbg !12765
  store i32 0, i32* %totlen, align 4, !dbg !12767
  br label %for.cond466, !dbg !12768

for.cond466:                                      ; preds = %for.inc486, %if.end463
  %604 = load i32, i32* %u, align 4, !dbg !12769
  %605 = load i32, i32* %number_of_packets, align 4, !dbg !12771
  %cmp467 = icmp ult i32 %604, %605, !dbg !12772
  br i1 %cmp467, label %for.body469, label %for.end488, !dbg !12773

for.body469:                                      ; preds = %for.cond466
  %606 = load i32, i32* %totlen, align 4, !dbg !12774
  %607 = load %struct.async*, %struct.async** %as, align 8, !dbg !12776
  %urb470 = getelementptr inbounds %struct.async, %struct.async* %607, i32 0, i32 9, !dbg !12777
  %608 = load %struct.urb*, %struct.urb** %urb470, align 8, !dbg !12777
  %iso_frame_desc471 = getelementptr inbounds %struct.urb, %struct.urb* %608, i32 0, i32 29, !dbg !12778
  %609 = load i32, i32* %u, align 4, !dbg !12779
  %idxprom472 = zext i32 %609 to i64, !dbg !12776
  %arrayidx473 = getelementptr [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %iso_frame_desc471, i64 0, i64 %idxprom472, !dbg !12776
  %offset = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %arrayidx473, i32 0, i32 0, !dbg !12780
  store i32 %606, i32* %offset, align 8, !dbg !12781
  %610 = load %struct.usbdevfs_iso_packet_desc*, %struct.usbdevfs_iso_packet_desc** %isopkt, align 8, !dbg !12782
  %611 = load i32, i32* %u, align 4, !dbg !12783
  %idxprom474 = zext i32 %611 to i64, !dbg !12782
  %arrayidx475 = getelementptr %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %610, i64 %idxprom474, !dbg !12782
  %length476 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %arrayidx475, i32 0, i32 0, !dbg !12784
  %612 = load i32, i32* %length476, align 4, !dbg !12784
  %613 = load %struct.async*, %struct.async** %as, align 8, !dbg !12785
  %urb477 = getelementptr inbounds %struct.async, %struct.async* %613, i32 0, i32 9, !dbg !12786
  %614 = load %struct.urb*, %struct.urb** %urb477, align 8, !dbg !12786
  %iso_frame_desc478 = getelementptr inbounds %struct.urb, %struct.urb* %614, i32 0, i32 29, !dbg !12787
  %615 = load i32, i32* %u, align 4, !dbg !12788
  %idxprom479 = zext i32 %615 to i64, !dbg !12785
  %arrayidx480 = getelementptr [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %iso_frame_desc478, i64 0, i64 %idxprom479, !dbg !12785
  %length481 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %arrayidx480, i32 0, i32 1, !dbg !12789
  store i32 %612, i32* %length481, align 4, !dbg !12790
  %616 = load %struct.usbdevfs_iso_packet_desc*, %struct.usbdevfs_iso_packet_desc** %isopkt, align 8, !dbg !12791
  %617 = load i32, i32* %u, align 4, !dbg !12792
  %idxprom482 = zext i32 %617 to i64, !dbg !12791
  %arrayidx483 = getelementptr %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %616, i64 %idxprom482, !dbg !12791
  %length484 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %arrayidx483, i32 0, i32 0, !dbg !12793
  %618 = load i32, i32* %length484, align 4, !dbg !12793
  %619 = load i32, i32* %totlen, align 4, !dbg !12794
  %add485 = add i32 %619, %618, !dbg !12794
  store i32 %add485, i32* %totlen, align 4, !dbg !12794
  br label %for.inc486, !dbg !12795

for.inc486:                                       ; preds = %for.body469
  %620 = load i32, i32* %u, align 4, !dbg !12796
  %inc487 = add i32 %620, 1, !dbg !12796
  store i32 %inc487, i32* %u, align 4, !dbg !12796
  br label %for.cond466, !dbg !12797, !llvm.loop !12798

for.end488:                                       ; preds = %for.cond466
  %621 = load %struct.usbdevfs_iso_packet_desc*, %struct.usbdevfs_iso_packet_desc** %isopkt, align 8, !dbg !12800
  %622 = bitcast %struct.usbdevfs_iso_packet_desc* %621 to i8*, !dbg !12800
  call void @kfree(i8* %622) #11, !dbg !12801
  store %struct.usbdevfs_iso_packet_desc* null, %struct.usbdevfs_iso_packet_desc** %isopkt, align 8, !dbg !12802
  %623 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !12803
  %624 = load %struct.async*, %struct.async** %as, align 8, !dbg !12804
  %ps489 = getelementptr inbounds %struct.async, %struct.async* %624, i32 0, i32 1, !dbg !12805
  store %struct.usb_dev_state* %623, %struct.usb_dev_state** %ps489, align 8, !dbg !12806
  %625 = load i8*, i8** %arg.addr, align 8, !dbg !12807
  %626 = load %struct.async*, %struct.async** %as, align 8, !dbg !12808
  %userurb = getelementptr inbounds %struct.async, %struct.async* %626, i32 0, i32 7, !dbg !12809
  store i8* %625, i8** %userurb, align 8, !dbg !12810
  %627 = load %struct.async*, %struct.async** %as, align 8, !dbg !12811
  %userurb_sigval490 = getelementptr inbounds %struct.async, %struct.async* %627, i32 0, i32 8, !dbg !12812
  %628 = bitcast %union.sigval* %userurb_sigval490 to i8*, !dbg !12813
  %629 = bitcast %union.sigval* %userurb_sigval to i8*, !dbg !12813
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %628, i8* align 8 %629, i64 8, i1 false), !dbg !12813
  %630 = load %struct.async*, %struct.async** %as, align 8, !dbg !12814
  %usbm491 = getelementptr inbounds %struct.async, %struct.async* %630, i32 0, i32 10, !dbg !12816
  %631 = load %struct.usb_memory*, %struct.usb_memory** %usbm491, align 8, !dbg !12816
  %tobool492 = icmp ne %struct.usb_memory* %631, null, !dbg !12814
  br i1 %tobool492, label %if.then493, label %if.else505, !dbg !12817

if.then493:                                       ; preds = %for.end488
  call void @llvm.dbg.declare(metadata i64* %uurb_start494, metadata !12818, metadata !DIExpression()), !dbg !12820
  %632 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12821
  %buffer495 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %632, i32 0, i32 4, !dbg !12822
  %633 = load i8*, i8** %buffer495, align 8, !dbg !12822
  %634 = ptrtoint i8* %633 to i64, !dbg !12823
  store i64 %634, i64* %uurb_start494, align 8, !dbg !12820
  %635 = load %struct.async*, %struct.async** %as, align 8, !dbg !12824
  %urb496 = getelementptr inbounds %struct.async, %struct.async* %635, i32 0, i32 9, !dbg !12825
  %636 = load %struct.urb*, %struct.urb** %urb496, align 8, !dbg !12825
  %transfer_flags497 = getelementptr inbounds %struct.urb, %struct.urb* %636, i32 0, i32 13, !dbg !12826
  %637 = load i32, i32* %transfer_flags497, align 4, !dbg !12827
  %or498 = or i32 %637, 4, !dbg !12827
  store i32 %or498, i32* %transfer_flags497, align 4, !dbg !12827
  %638 = load %struct.async*, %struct.async** %as, align 8, !dbg !12828
  %usbm499 = getelementptr inbounds %struct.async, %struct.async* %638, i32 0, i32 10, !dbg !12829
  %639 = load %struct.usb_memory*, %struct.usb_memory** %usbm499, align 8, !dbg !12829
  %dma_handle = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %639, i32 0, i32 5, !dbg !12830
  %640 = load i64, i64* %dma_handle, align 8, !dbg !12830
  %641 = load i64, i64* %uurb_start494, align 8, !dbg !12831
  %642 = load %struct.async*, %struct.async** %as, align 8, !dbg !12832
  %usbm500 = getelementptr inbounds %struct.async, %struct.async* %642, i32 0, i32 10, !dbg !12833
  %643 = load %struct.usb_memory*, %struct.usb_memory** %usbm500, align 8, !dbg !12833
  %vm_start501 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %643, i32 0, i32 6, !dbg !12834
  %644 = load i64, i64* %vm_start501, align 8, !dbg !12834
  %sub502 = sub i64 %641, %644, !dbg !12835
  %add503 = add i64 %640, %sub502, !dbg !12836
  %645 = load %struct.async*, %struct.async** %as, align 8, !dbg !12837
  %urb504 = getelementptr inbounds %struct.async, %struct.async* %645, i32 0, i32 9, !dbg !12838
  %646 = load %struct.urb*, %struct.urb** %urb504, align 8, !dbg !12838
  %transfer_dma = getelementptr inbounds %struct.urb, %struct.urb* %646, i32 0, i32 15, !dbg !12839
  store i64 %add503, i64* %transfer_dma, align 8, !dbg !12840
  br label %if.end515, !dbg !12841

if.else505:                                       ; preds = %for.end488
  %647 = load i8, i8* %is_in, align 1, !dbg !12842
  %tobool506 = trunc i8 %647 to i1, !dbg !12842
  br i1 %tobool506, label %land.lhs.true508, label %if.end514, !dbg !12844

land.lhs.true508:                                 ; preds = %if.else505
  %648 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12845
  %buffer_length509 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %648, i32 0, i32 5, !dbg !12846
  %649 = load i32, i32* %buffer_length509, align 8, !dbg !12846
  %cmp510 = icmp sgt i32 %649, 0, !dbg !12847
  br i1 %cmp510, label %if.then512, label %if.end514, !dbg !12848

if.then512:                                       ; preds = %land.lhs.true508
  %650 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12849
  %buffer513 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %650, i32 0, i32 4, !dbg !12850
  %651 = load i8*, i8** %buffer513, align 8, !dbg !12850
  %652 = load %struct.async*, %struct.async** %as, align 8, !dbg !12851
  %userbuffer = getelementptr inbounds %struct.async, %struct.async* %652, i32 0, i32 6, !dbg !12852
  store i8* %651, i8** %userbuffer, align 8, !dbg !12853
  br label %if.end514, !dbg !12851

if.end514:                                        ; preds = %if.then512, %land.lhs.true508, %if.else505
  br label %if.end515

if.end515:                                        ; preds = %if.end514, %if.then493
  %653 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12854
  %signr = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %653, i32 0, i32 10, !dbg !12855
  %654 = load i32, i32* %signr, align 4, !dbg !12855
  %655 = load %struct.async*, %struct.async** %as, align 8, !dbg !12856
  %signr516 = getelementptr inbounds %struct.async, %struct.async* %655, i32 0, i32 4, !dbg !12857
  store i32 %654, i32* %signr516, align 8, !dbg !12858
  %656 = load i32, i32* %ifnum, align 4, !dbg !12859
  %657 = load %struct.async*, %struct.async** %as, align 8, !dbg !12860
  %ifnum517 = getelementptr inbounds %struct.async, %struct.async* %657, i32 0, i32 5, !dbg !12861
  store i32 %656, i32* %ifnum517, align 4, !dbg !12862
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !11285
  %658 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !11285
  %659 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !11286, !srcloc !5776
  store i64 %659, i64* %pfo_val__.i, align 8, !dbg !11286
  %660 = load i64, i64* %pfo_val__.i, align 8, !dbg !11286
  %661 = inttoptr i64 %660 to %struct.task_struct*, !dbg !11286
  store %struct.task_struct* %661, %struct.task_struct** %tmp.i, align 8, !dbg !11286
  %662 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !11286
  store %struct.task_struct* %662, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !11283
  %663 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !11283
  store %struct.task_struct* %663, %struct.task_struct** %tmp1.i, align 8, !dbg !11283
  %664 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !11283
  %call519 = call %struct.pid* @task_pid(%struct.task_struct* %664) #11, !dbg !12863
  %call520 = call %struct.pid* @get_pid(%struct.pid* %call519) #11, !dbg !12864
  %665 = load %struct.async*, %struct.async** %as, align 8, !dbg !12865
  %pid = getelementptr inbounds %struct.async, %struct.async* %665, i32 0, i32 2, !dbg !12866
  store %struct.pid* %call520, %struct.pid** %pid, align 8, !dbg !12867
  br label %do.body521, !dbg !12868

do.body521:                                       ; preds = %if.end515
  br label %do.end522, !dbg !12869

do.end522:                                        ; preds = %do.body521
  store i8* null, i8** %__vpp_verify.i998, align 8, !dbg !11281
  %666 = load i8*, i8** %__vpp_verify.i998, align 8, !dbg !11281
  %667 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !11282, !srcloc !5776
  store i64 %667, i64* %pfo_val__.i999, align 8, !dbg !11282
  %668 = load i64, i64* %pfo_val__.i999, align 8, !dbg !11282
  %669 = inttoptr i64 %668 to %struct.task_struct*, !dbg !11282
  store %struct.task_struct* %669, %struct.task_struct** %tmp.i1000, align 8, !dbg !11282
  %670 = load %struct.task_struct*, %struct.task_struct** %tmp.i1000, align 8, !dbg !11282
  store %struct.task_struct* %670, %struct.task_struct** %pscr_ret__.i997, align 8, !dbg !11278
  %671 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i997, align 8, !dbg !11278
  store %struct.task_struct* %671, %struct.task_struct** %tmp1.i1001, align 8, !dbg !11278
  %672 = load %struct.task_struct*, %struct.task_struct** %tmp1.i1001, align 8, !dbg !11278
  %cred = getelementptr inbounds %struct.task_struct, %struct.task_struct* %672, i32 0, i32 66, !dbg !12868
  %673 = load %struct.cred*, %struct.cred** %cred, align 8, !dbg !12868
  store %struct.cred* %673, %struct.cred** %tmp523, align 8, !dbg !12869
  %674 = load %struct.cred*, %struct.cred** %tmp523, align 8, !dbg !12868
  %call525 = call %struct.cred* @get_cred(%struct.cred* %674) #11, !dbg !12871
  %675 = load %struct.async*, %struct.async** %as, align 8, !dbg !12872
  %cred526 = getelementptr inbounds %struct.async, %struct.async* %675, i32 0, i32 3, !dbg !12873
  store %struct.cred* %call525, %struct.cred** %cred526, align 8, !dbg !12874
  %676 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !12875
  %dev527 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %676, i32 0, i32 1, !dbg !12876
  %677 = load %struct.usb_device*, %struct.usb_device** %dev527, align 8, !dbg !12876
  %678 = load %struct.async*, %struct.async** %as, align 8, !dbg !12877
  %userurb528 = getelementptr inbounds %struct.async, %struct.async* %678, i32 0, i32 7, !dbg !12878
  %679 = load i8*, i8** %userurb528, align 8, !dbg !12878
  %680 = load %struct.async*, %struct.async** %as, align 8, !dbg !12879
  %urb529 = getelementptr inbounds %struct.async, %struct.async* %680, i32 0, i32 9, !dbg !12880
  %681 = load %struct.urb*, %struct.urb** %urb529, align 8, !dbg !12880
  %pipe530 = getelementptr inbounds %struct.urb, %struct.urb* %681, i32 0, i32 10, !dbg !12881
  %682 = load i32, i32* %pipe530, align 8, !dbg !12881
  %683 = load %struct.async*, %struct.async** %as, align 8, !dbg !12882
  %urb531 = getelementptr inbounds %struct.async, %struct.async* %683, i32 0, i32 9, !dbg !12883
  %684 = load %struct.urb*, %struct.urb** %urb531, align 8, !dbg !12883
  %transfer_buffer_length532 = getelementptr inbounds %struct.urb, %struct.urb* %684, i32 0, i32 19, !dbg !12884
  %685 = load i32, i32* %transfer_buffer_length532, align 8, !dbg !12884
  call void @snoop_urb(%struct.usb_device* %677, i8* %679, i32 %682, i32 %685, i32 0, i32 0, i8* null, i32 0) #11, !dbg !12885
  %686 = load i8, i8* %is_in, align 1, !dbg !12886
  %tobool533 = trunc i8 %686 to i1, !dbg !12886
  br i1 %tobool533, label %if.end538, label %if.then534, !dbg !12888

if.then534:                                       ; preds = %do.end522
  %687 = load %struct.async*, %struct.async** %as, align 8, !dbg !12889
  %urb535 = getelementptr inbounds %struct.async, %struct.async* %687, i32 0, i32 9, !dbg !12890
  %688 = load %struct.urb*, %struct.urb** %urb535, align 8, !dbg !12890
  %689 = load %struct.async*, %struct.async** %as, align 8, !dbg !12891
  %urb536 = getelementptr inbounds %struct.async, %struct.async* %689, i32 0, i32 9, !dbg !12892
  %690 = load %struct.urb*, %struct.urb** %urb536, align 8, !dbg !12892
  %transfer_buffer_length537 = getelementptr inbounds %struct.urb, %struct.urb* %690, i32 0, i32 19, !dbg !12893
  %691 = load i32, i32* %transfer_buffer_length537, align 8, !dbg !12893
  call void @snoop_urb_data(%struct.urb* %688, i32 %691) #11, !dbg !12894
  br label %if.end538, !dbg !12894

if.end538:                                        ; preds = %if.then534, %do.end522
  %692 = load %struct.async*, %struct.async** %as, align 8, !dbg !12895
  call void @async_newpending(%struct.async* %692) #11, !dbg !12896
  %693 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !12897
  %desc539 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %693, i32 0, i32 0, !dbg !12898
  %call540 = call i32 @usb_endpoint_xfer_bulk(%struct.usb_endpoint_descriptor* %desc539) #11, !dbg !12899
  %tobool541 = icmp ne i32 %call540, 0, !dbg !12899
  br i1 %tobool541, label %if.then542, label %if.else573, !dbg !12900

if.then542:                                       ; preds = %if.end538
  %694 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !12901
  %lock = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %694, i32 0, i32 3, !dbg !12902
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !12903
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12906, !srcloc !12908
  %695 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12909
  %696 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %695, i32 0, i32 0, !dbg !12909
  %rlock.i = bitcast %union.anon.0* %696 to %struct.raw_spinlock*, !dbg !12909
  %697 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !12911
  %desc543 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %697, i32 0, i32 0, !dbg !12912
  %call544 = call i32 @usb_endpoint_num(%struct.usb_endpoint_descriptor* %desc543) #11, !dbg !12913
  %698 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !12914
  %desc545 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %698, i32 0, i32 0, !dbg !12915
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc545, i32 0, i32 2, !dbg !12916
  %699 = load i8, i8* %bEndpointAddress, align 2, !dbg !12916
  %conv546 = zext i8 %699 to i32, !dbg !12914
  %and547 = and i32 %conv546, 128, !dbg !12917
  %shr = ashr i32 %and547, 3, !dbg !12918
  %or548 = or i32 %call544, %shr, !dbg !12919
  %conv549 = trunc i32 %or548 to i8, !dbg !12913
  %700 = load %struct.async*, %struct.async** %as, align 8, !dbg !12920
  %bulk_addr = getelementptr inbounds %struct.async, %struct.async* %700, i32 0, i32 13, !dbg !12921
  store i8 %conv549, i8* %bulk_addr, align 8, !dbg !12922
  %701 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !12923
  %flags550 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %701, i32 0, i32 3, !dbg !12925
  %702 = load i32, i32* %flags550, align 8, !dbg !12925
  %and551 = and i32 %702, 4, !dbg !12926
  %tobool552 = icmp ne i32 %and551, 0, !dbg !12926
  br i1 %tobool552, label %if.then553, label %if.else554, !dbg !12927

if.then553:                                       ; preds = %if.then542
  %703 = load %struct.async*, %struct.async** %as, align 8, !dbg !12928
  %bulk_status = getelementptr inbounds %struct.async, %struct.async* %703, i32 0, i32 14, !dbg !12929
  store i8 1, i8* %bulk_status, align 1, !dbg !12930
  br label %if.end560, !dbg !12928

if.else554:                                       ; preds = %if.then542
  %704 = load %struct.async*, %struct.async** %as, align 8, !dbg !12931
  %bulk_addr555 = getelementptr inbounds %struct.async, %struct.async* %704, i32 0, i32 13, !dbg !12932
  %705 = load i8, i8* %bulk_addr555, align 8, !dbg !12932
  %conv556 = zext i8 %705 to i32, !dbg !12931
  %shl557 = shl i32 1, %conv556, !dbg !12933
  %neg558 = xor i32 %shl557, -1, !dbg !12934
  %706 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !12935
  %disabled_bulk_eps = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %706, i32 0, i32 14, !dbg !12936
  %707 = load i32, i32* %disabled_bulk_eps, align 8, !dbg !12937
  %and559 = and i32 %707, %neg558, !dbg !12937
  store i32 %and559, i32* %disabled_bulk_eps, align 8, !dbg !12937
  br label %if.end560

if.end560:                                        ; preds = %if.else554, %if.then553
  %708 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !12938
  %disabled_bulk_eps561 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %708, i32 0, i32 14, !dbg !12940
  %709 = load i32, i32* %disabled_bulk_eps561, align 8, !dbg !12940
  %710 = load %struct.async*, %struct.async** %as, align 8, !dbg !12941
  %bulk_addr562 = getelementptr inbounds %struct.async, %struct.async* %710, i32 0, i32 13, !dbg !12942
  %711 = load i8, i8* %bulk_addr562, align 8, !dbg !12942
  %conv563 = zext i8 %711 to i32, !dbg !12941
  %shl564 = shl i32 1, %conv563, !dbg !12943
  %and565 = and i32 %709, %shl564, !dbg !12944
  %tobool566 = icmp ne i32 %and565, 0, !dbg !12944
  br i1 %tobool566, label %if.then567, label %if.else568, !dbg !12945

if.then567:                                       ; preds = %if.end560
  store i32 -121, i32* %ret, align 4, !dbg !12946
  br label %if.end571, !dbg !12947

if.else568:                                       ; preds = %if.end560
  %712 = load %struct.async*, %struct.async** %as, align 8, !dbg !12948
  %urb569 = getelementptr inbounds %struct.async, %struct.async* %712, i32 0, i32 9, !dbg !12949
  %713 = load %struct.urb*, %struct.urb** %urb569, align 8, !dbg !12949
  %call570 = call i32 @usb_submit_urb(%struct.urb* %713, i32 2592) #11, !dbg !12950
  store i32 %call570, i32* %ret, align 4, !dbg !12951
  br label %if.end571

if.end571:                                        ; preds = %if.else568, %if.then567
  %714 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !12952
  %lock572 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %714, i32 0, i32 3, !dbg !12953
  store %struct.spinlock* %lock572, %struct.spinlock** %lock.addr.i1002, align 8
  call void @arch_local_irq_enable() #13, !dbg !12954
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12957, !srcloc !12959
  %715 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i1002, align 8, !dbg !12960
  %716 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %715, i32 0, i32 0, !dbg !12960
  %rlock.i1003 = bitcast %union.anon.0* %716 to %struct.raw_spinlock*, !dbg !12960
  br label %if.end576, !dbg !12962

if.else573:                                       ; preds = %if.end538
  %717 = load %struct.async*, %struct.async** %as, align 8, !dbg !12963
  %urb574 = getelementptr inbounds %struct.async, %struct.async* %717, i32 0, i32 9, !dbg !12965
  %718 = load %struct.urb*, %struct.urb** %urb574, align 8, !dbg !12965
  %call575 = call i32 @usb_submit_urb(%struct.urb* %718, i32 3264) #11, !dbg !12966
  store i32 %call575, i32* %ret, align 4, !dbg !12967
  br label %if.end576

if.end576:                                        ; preds = %if.else573, %if.end571
  %719 = load i32, i32* %ret, align 4, !dbg !12968
  %tobool577 = icmp ne i32 %719, 0, !dbg !12968
  br i1 %tobool577, label %if.then578, label %if.end585, !dbg !12970

if.then578:                                       ; preds = %if.end576
  %720 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !12971
  %dev579 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %720, i32 0, i32 1, !dbg !12973
  %721 = load %struct.usb_device*, %struct.usb_device** %dev579, align 8, !dbg !12973
  %dev580 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %721, i32 0, i32 14, !dbg !12974
  %722 = load i32, i32* %ret, align 4, !dbg !12975
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0), %struct.device* %dev580, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.52, i64 0, i64 0), i32 %722) #12, !dbg !12976
  %723 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !12977
  %dev581 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %723, i32 0, i32 1, !dbg !12978
  %724 = load %struct.usb_device*, %struct.usb_device** %dev581, align 8, !dbg !12978
  %725 = load %struct.async*, %struct.async** %as, align 8, !dbg !12979
  %userurb582 = getelementptr inbounds %struct.async, %struct.async* %725, i32 0, i32 7, !dbg !12980
  %726 = load i8*, i8** %userurb582, align 8, !dbg !12980
  %727 = load %struct.async*, %struct.async** %as, align 8, !dbg !12981
  %urb583 = getelementptr inbounds %struct.async, %struct.async* %727, i32 0, i32 9, !dbg !12982
  %728 = load %struct.urb*, %struct.urb** %urb583, align 8, !dbg !12982
  %pipe584 = getelementptr inbounds %struct.urb, %struct.urb* %728, i32 0, i32 10, !dbg !12983
  %729 = load i32, i32* %pipe584, align 8, !dbg !12983
  %730 = load i32, i32* %ret, align 4, !dbg !12984
  call void @snoop_urb(%struct.usb_device* %724, i8* %726, i32 %729, i32 0, i32 %730, i32 1, i8* null, i32 0) #11, !dbg !12985
  %731 = load %struct.async*, %struct.async** %as, align 8, !dbg !12986
  call void @async_removepending(%struct.async* %731) #11, !dbg !12987
  br label %error, !dbg !12988

if.end585:                                        ; preds = %if.end576
  store i32 0, i32* %retval, align 4, !dbg !12989
  br label %return, !dbg !12989

error:                                            ; preds = %if.then578, %if.then331, %if.then320, %if.then288, %if.then276, %if.then252, %if.then243, %if.then218, %if.then213, %if.then209, %if.then180, %if.then172, %if.then78, %if.then71, %if.then65
  call void @llvm.dbg.label(metadata !12990), !dbg !12991
  %732 = load %struct.usbdevfs_iso_packet_desc*, %struct.usbdevfs_iso_packet_desc** %isopkt, align 8, !dbg !12992
  %733 = bitcast %struct.usbdevfs_iso_packet_desc* %732 to i8*, !dbg !12992
  call void @kfree(i8* %733) #11, !dbg !12993
  %734 = load %struct.usb_ctrlrequest*, %struct.usb_ctrlrequest** %dr, align 8, !dbg !12994
  %735 = bitcast %struct.usb_ctrlrequest* %734 to i8*, !dbg !12994
  call void @kfree(i8* %735) #11, !dbg !12995
  %736 = load %struct.async*, %struct.async** %as, align 8, !dbg !12996
  %tobool586 = icmp ne %struct.async* %736, null, !dbg !12996
  br i1 %tobool586, label %if.then587, label %if.end588, !dbg !12998

if.then587:                                       ; preds = %error
  %737 = load %struct.async*, %struct.async** %as, align 8, !dbg !12999
  call void @free_async(%struct.async* %737) #11, !dbg !13000
  br label %if.end588, !dbg !13000

if.end588:                                        ; preds = %if.then587, %error
  %738 = load i32, i32* %ret, align 4, !dbg !13001
  store i32 %738, i32* %retval, align 4, !dbg !13002
  br label %return, !dbg !13002

return:                                           ; preds = %if.end588, %if.end585, %sw.default, %if.then164, %if.then159, %if.then145, %sw.bb125, %if.then60, %if.then56, %if.then51, %if.then40, %if.then33, %if.then29, %if.then13, %if.then7, %if.then3
  %739 = load i32, i32* %retval, align 4, !dbg !13003
  ret i32 %739, !dbg !13003
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_host_endpoint* @ep_to_host_endpoint(%struct.usb_device* %dev, i8 zeroext %ep) #0 !dbg !13004 {
entry:
  %retval = alloca %struct.usb_host_endpoint*, align 8
  %dev.addr = alloca %struct.usb_device*, align 8
  %ep.addr = alloca i8, align 1
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !13007, metadata !DIExpression()), !dbg !13008
  store i8 %ep, i8* %ep.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ep.addr, metadata !13009, metadata !DIExpression()), !dbg !13010
  %0 = load i8, i8* %ep.addr, align 1, !dbg !13011
  %conv = zext i8 %0 to i32, !dbg !13011
  %and = and i32 %conv, 128, !dbg !13013
  %tobool = icmp ne i32 %and, 0, !dbg !13013
  br i1 %tobool, label %if.then, label %if.else, !dbg !13014

if.then:                                          ; preds = %entry
  %1 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !13015
  %ep_in = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 20, !dbg !13016
  %2 = load i8, i8* %ep.addr, align 1, !dbg !13017
  %conv1 = zext i8 %2 to i32, !dbg !13017
  %and2 = and i32 %conv1, 15, !dbg !13018
  %idxprom = sext i32 %and2 to i64, !dbg !13015
  %arrayidx = getelementptr [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %ep_in, i64 0, i64 %idxprom, !dbg !13015
  %3 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx, align 8, !dbg !13015
  store %struct.usb_host_endpoint* %3, %struct.usb_host_endpoint** %retval, align 8, !dbg !13019
  br label %return, !dbg !13019

if.else:                                          ; preds = %entry
  %4 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !13020
  %ep_out = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 21, !dbg !13021
  %5 = load i8, i8* %ep.addr, align 1, !dbg !13022
  %conv3 = zext i8 %5 to i32, !dbg !13022
  %and4 = and i32 %conv3, 15, !dbg !13023
  %idxprom5 = sext i32 %and4 to i64, !dbg !13020
  %arrayidx6 = getelementptr [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %ep_out, i64 0, i64 %idxprom5, !dbg !13020
  %6 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx6, align 8, !dbg !13020
  store %struct.usb_host_endpoint* %6, %struct.usb_host_endpoint** %retval, align 8, !dbg !13024
  br label %return, !dbg !13024

return:                                           ; preds = %if.else, %if.then
  %7 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %retval, align 8, !dbg !13025
  ret %struct.usb_host_endpoint* %7, !dbg !13025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_xfer_control(%struct.usb_endpoint_descriptor* %epd) #0 !dbg !13026 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !13027, metadata !DIExpression()), !dbg !13028
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !13029
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3, !dbg !13030
  %1 = load i8, i8* %bmAttributes, align 1, !dbg !13030
  %conv = zext i8 %1 to i32, !dbg !13029
  %and = and i32 %conv, 3, !dbg !13031
  %cmp = icmp eq i32 %and, 0, !dbg !13032
  %conv1 = zext i1 %cmp to i32, !dbg !13032
  ret i32 %conv1, !dbg !13033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %epd) #0 !dbg !13034 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !13035, metadata !DIExpression()), !dbg !13036
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !13037
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3, !dbg !13038
  %1 = load i8, i8* %bmAttributes, align 1, !dbg !13038
  %conv = zext i8 %1 to i32, !dbg !13037
  %and = and i32 %conv, 3, !dbg !13039
  ret i32 %and, !dbg !13040
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_xfer_int(%struct.usb_endpoint_descriptor* %epd) #0 !dbg !13041 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !13042, metadata !DIExpression()), !dbg !13043
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !13044
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3, !dbg !13045
  %1 = load i8, i8* %bmAttributes, align 1, !dbg !13045
  %conv = zext i8 %1 to i32, !dbg !13044
  %and = and i32 %conv, 3, !dbg !13046
  %cmp = icmp eq i32 %and, 3, !dbg !13047
  %conv1 = zext i1 %cmp to i32, !dbg !13047
  ret i32 %conv1, !dbg !13048
}

; Function Attrs: noredzone
declare dso_local i8* @memdup_user(i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !13049 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13053, metadata !DIExpression()), !dbg !13054
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !13055
  %1 = ptrtoint i8* %0 to i64, !dbg !13055
  %2 = inttoptr i64 %1 to i8*, !dbg !13055
  %3 = ptrtoint i8* %2 to i64, !dbg !13055
  %cmp = icmp uge i64 %3, -4095, !dbg !13055
  %lnot = xor i1 %cmp, true, !dbg !13055
  %lnot1 = xor i1 %lnot, true, !dbg !13055
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13055
  %conv = sext i32 %lnot.ext to i64, !dbg !13055
  %tobool = icmp ne i64 %conv, 0, !dbg !13055
  ret i1 %tobool, !dbg !13056
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !13057 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13060, metadata !DIExpression()), !dbg !13061
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !13062
  %1 = ptrtoint i8* %0 to i64, !dbg !13063
  ret i64 %1, !dbg !13064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__chk_range_not_ok(i64 %addr, i64 %size, i64 %limit) #0 !dbg !13065 {
entry:
  %retval = alloca i1, align 1
  %addr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %limit.addr = alloca i64, align 8
  store i64 %addr, i64* %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr.addr, metadata !13069, metadata !DIExpression()), !dbg !13070
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13071, metadata !DIExpression()), !dbg !13072
  store i64 %limit, i64* %limit.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %limit.addr, metadata !13073, metadata !DIExpression()), !dbg !13074
  %0 = load i64, i64* %size.addr, align 8, !dbg !13075
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !13077
  br i1 %1, label %if.then, label %if.end, !dbg !13078

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %addr.addr, align 8, !dbg !13079
  %3 = load i64, i64* %limit.addr, align 8, !dbg !13079
  %4 = load i64, i64* %size.addr, align 8, !dbg !13079
  %sub = sub i64 %3, %4, !dbg !13079
  %cmp = icmp ugt i64 %2, %sub, !dbg !13079
  %lnot = xor i1 %cmp, true, !dbg !13079
  %lnot1 = xor i1 %lnot, true, !dbg !13079
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13079
  %conv = sext i32 %lnot.ext to i64, !dbg !13079
  %tobool = icmp ne i64 %conv, 0, !dbg !13079
  store i1 %tobool, i1* %retval, align 1, !dbg !13080
  br label %return, !dbg !13080

if.end:                                           ; preds = %entry
  %5 = load i64, i64* %size.addr, align 8, !dbg !13081
  %6 = load i64, i64* %addr.addr, align 8, !dbg !13082
  %add = add i64 %6, %5, !dbg !13082
  store i64 %add, i64* %addr.addr, align 8, !dbg !13082
  %7 = load i64, i64* %addr.addr, align 8, !dbg !13083
  %8 = load i64, i64* %size.addr, align 8, !dbg !13083
  %cmp2 = icmp ult i64 %7, %8, !dbg !13083
  %lnot4 = xor i1 %cmp2, true, !dbg !13083
  %lnot6 = xor i1 %lnot4, true, !dbg !13083
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !13083
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !13083
  %tobool9 = icmp ne i64 %conv8, 0, !dbg !13083
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !13085

if.then10:                                        ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !13086
  br label %return, !dbg !13086

if.end11:                                         ; preds = %if.end
  %9 = load i64, i64* %addr.addr, align 8, !dbg !13087
  %10 = load i64, i64* %limit.addr, align 8, !dbg !13087
  %cmp12 = icmp ugt i64 %9, %10, !dbg !13087
  %lnot14 = xor i1 %cmp12, true, !dbg !13087
  %lnot16 = xor i1 %lnot14, true, !dbg !13087
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !13087
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !13087
  %tobool19 = icmp ne i64 %conv18, 0, !dbg !13087
  store i1 %tobool19, i1* %retval, align 1, !dbg !13088
  br label %return, !dbg !13088

return:                                           ; preds = %if.end11, %if.then10, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !13089
  ret i1 %11, !dbg !13089
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.async* @alloc_async(i32 %numisoframes) #0 !dbg !13090 {
entry:
  %retval = alloca %struct.async*, align 8
  %numisoframes.addr = alloca i32, align 4
  %as = alloca %struct.async*, align 8
  store i32 %numisoframes, i32* %numisoframes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numisoframes.addr, metadata !13093, metadata !DIExpression()), !dbg !13094
  call void @llvm.dbg.declare(metadata %struct.async** %as, metadata !13095, metadata !DIExpression()), !dbg !13096
  %call = call i8* @kzalloc(i64 104, i32 3264) #11, !dbg !13097
  %0 = bitcast i8* %call to %struct.async*, !dbg !13097
  store %struct.async* %0, %struct.async** %as, align 8, !dbg !13098
  %1 = load %struct.async*, %struct.async** %as, align 8, !dbg !13099
  %tobool = icmp ne %struct.async* %1, null, !dbg !13099
  br i1 %tobool, label %if.end, label %if.then, !dbg !13101

if.then:                                          ; preds = %entry
  store %struct.async* null, %struct.async** %retval, align 8, !dbg !13102
  br label %return, !dbg !13102

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %numisoframes.addr, align 4, !dbg !13103
  %call1 = call %struct.urb* @usb_alloc_urb(i32 %2, i32 3264) #11, !dbg !13104
  %3 = load %struct.async*, %struct.async** %as, align 8, !dbg !13105
  %urb = getelementptr inbounds %struct.async, %struct.async* %3, i32 0, i32 9, !dbg !13106
  store %struct.urb* %call1, %struct.urb** %urb, align 8, !dbg !13107
  %4 = load %struct.async*, %struct.async** %as, align 8, !dbg !13108
  %urb2 = getelementptr inbounds %struct.async, %struct.async* %4, i32 0, i32 9, !dbg !13110
  %5 = load %struct.urb*, %struct.urb** %urb2, align 8, !dbg !13110
  %tobool3 = icmp ne %struct.urb* %5, null, !dbg !13108
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !13111

if.then4:                                         ; preds = %if.end
  %6 = load %struct.async*, %struct.async** %as, align 8, !dbg !13112
  %7 = bitcast %struct.async* %6 to i8*, !dbg !13112
  call void @kfree(i8* %7) #11, !dbg !13114
  store %struct.async* null, %struct.async** %retval, align 8, !dbg !13115
  br label %return, !dbg !13115

if.end5:                                          ; preds = %if.end
  %8 = load %struct.async*, %struct.async** %as, align 8, !dbg !13116
  store %struct.async* %8, %struct.async** %retval, align 8, !dbg !13117
  br label %return, !dbg !13117

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %9 = load %struct.async*, %struct.async** %retval, align 8, !dbg !13118
  ret %struct.async* %9, !dbg !13118
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_memory* @find_memory_area(%struct.usb_dev_state* %ps, %struct.usbdevfs_urb* %uurb) #0 !dbg !13119 {
entry:
  %lock.addr.i49 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i49, metadata !5442, metadata !DIExpression()), !dbg !13124
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5449, metadata !DIExpression()), !dbg !13126
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5451, metadata !DIExpression()), !dbg !13127
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %uurb.addr = alloca %struct.usbdevfs_urb*, align 8
  %usbm = alloca %struct.usb_memory*, align 8
  %iter = alloca %struct.usb_memory*, align 8
  %flags = alloca i64, align 8
  %uurb_start = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp21 = alloca %struct.usb_memory*, align 8
  %__mptr41 = alloca i8*, align 8
  %tmp46 = alloca %struct.usb_memory*, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !13134, metadata !DIExpression()), !dbg !13135
  store %struct.usbdevfs_urb* %uurb, %struct.usbdevfs_urb** %uurb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_urb** %uurb.addr, metadata !13136, metadata !DIExpression()), !dbg !13137
  call void @llvm.dbg.declare(metadata %struct.usb_memory** %usbm, metadata !13138, metadata !DIExpression()), !dbg !13139
  store %struct.usb_memory* null, %struct.usb_memory** %usbm, align 8, !dbg !13139
  call void @llvm.dbg.declare(metadata %struct.usb_memory** %iter, metadata !13140, metadata !DIExpression()), !dbg !13141
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13142, metadata !DIExpression()), !dbg !13143
  call void @llvm.dbg.declare(metadata i64* %uurb_start, metadata !13144, metadata !DIExpression()), !dbg !13145
  %0 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !13146
  %buffer = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %0, i32 0, i32 4, !dbg !13147
  %1 = load i8*, i8** %buffer, align 8, !dbg !13147
  %2 = ptrtoint i8* %1 to i64, !dbg !13148
  store i64 %2, i64* %uurb_start, align 8, !dbg !13145
  br label %do.body, !dbg !13149

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13150

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13151, metadata !DIExpression()), !dbg !13153
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13154, metadata !DIExpression()), !dbg !13153
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13153
  %conv = zext i1 %cmp to i32, !dbg !13153
  store i32 1, i32* %tmp, align 4, !dbg !13153
  %3 = load i32, i32* %tmp, align 4, !dbg !13153
  br label %do.body2, !dbg !13155

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13156

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13157

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13159, metadata !DIExpression()), !dbg !13162
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13163, metadata !DIExpression()), !dbg !13162
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13162
  %conv8 = zext i1 %cmp7 to i32, !dbg !13162
  store i32 1, i32* %tmp9, align 4, !dbg !13162
  %4 = load i32, i32* %tmp9, align 4, !dbg !13162
  %call = call i64 @arch_local_irq_save() #11, !dbg !13164
  store i64 %call, i64* %flags, align 8, !dbg !13164
  br label %do.end, !dbg !13164

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13157

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13156

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13165, !srcloc !13166
  br label %do.body12, !dbg !13165

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !13167
  %lock = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 3, !dbg !13167
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13168
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !13169
  %rlock.i = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !13169
  br label %do.end14, !dbg !13167

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13165

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13156

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13155

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13150

do.end18:                                         ; preds = %do.end17
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13170, metadata !DIExpression()), !dbg !13173
  %8 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !13173
  %memory_list = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 6, !dbg !13173
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %memory_list, i32 0, i32 0, !dbg !13173
  %9 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13173
  %10 = bitcast %struct.list_head* %9 to i8*, !dbg !13173
  store i8* %10, i8** %__mptr, align 8, !dbg !13173
  br label %do.body19, !dbg !13173

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !13174

do.end20:                                         ; preds = %do.body19
  %11 = load i8*, i8** %__mptr, align 8, !dbg !13173
  %add.ptr = getelementptr i8, i8* %11, i64 0, !dbg !13173
  %12 = bitcast i8* %add.ptr to %struct.usb_memory*, !dbg !13173
  store %struct.usb_memory* %12, %struct.usb_memory** %tmp21, align 8, !dbg !13174
  %13 = load %struct.usb_memory*, %struct.usb_memory** %tmp21, align 8, !dbg !13173
  store %struct.usb_memory* %13, %struct.usb_memory** %iter, align 8, !dbg !13176
  br label %for.cond, !dbg !13176

for.cond:                                         ; preds = %do.end45, %do.end20
  %14 = load %struct.usb_memory*, %struct.usb_memory** %iter, align 8, !dbg !13177
  %memlist = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %14, i32 0, i32 0, !dbg !13177
  %15 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !13177
  %memory_list22 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %15, i32 0, i32 6, !dbg !13177
  %cmp23 = icmp eq %struct.list_head* %memlist, %memory_list22, !dbg !13177
  %lnot = xor i1 %cmp23, true, !dbg !13177
  br i1 %lnot, label %for.body, label %for.end, !dbg !13176

for.body:                                         ; preds = %for.cond
  %16 = load i64, i64* %uurb_start, align 8, !dbg !13179
  %17 = load %struct.usb_memory*, %struct.usb_memory** %iter, align 8, !dbg !13182
  %vm_start = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %17, i32 0, i32 6, !dbg !13183
  %18 = load i64, i64* %vm_start, align 8, !dbg !13183
  %cmp25 = icmp uge i64 %16, %18, !dbg !13184
  br i1 %cmp25, label %land.lhs.true, label %if.end40, !dbg !13185

land.lhs.true:                                    ; preds = %for.body
  %19 = load i64, i64* %uurb_start, align 8, !dbg !13186
  %20 = load %struct.usb_memory*, %struct.usb_memory** %iter, align 8, !dbg !13187
  %vm_start27 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %20, i32 0, i32 6, !dbg !13188
  %21 = load i64, i64* %vm_start27, align 8, !dbg !13188
  %22 = load %struct.usb_memory*, %struct.usb_memory** %iter, align 8, !dbg !13189
  %size = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %22, i32 0, i32 3, !dbg !13190
  %23 = load i32, i32* %size, align 8, !dbg !13190
  %conv28 = zext i32 %23 to i64, !dbg !13189
  %add = add i64 %21, %conv28, !dbg !13191
  %cmp29 = icmp ult i64 %19, %add, !dbg !13192
  br i1 %cmp29, label %if.then, label %if.end40, !dbg !13193

if.then:                                          ; preds = %land.lhs.true
  %24 = load %struct.usbdevfs_urb*, %struct.usbdevfs_urb** %uurb.addr, align 8, !dbg !13194
  %buffer_length = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %24, i32 0, i32 5, !dbg !13197
  %25 = load i32, i32* %buffer_length, align 8, !dbg !13197
  %conv31 = sext i32 %25 to i64, !dbg !13194
  %26 = load %struct.usb_memory*, %struct.usb_memory** %iter, align 8, !dbg !13198
  %vm_start32 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %26, i32 0, i32 6, !dbg !13199
  %27 = load i64, i64* %vm_start32, align 8, !dbg !13199
  %28 = load %struct.usb_memory*, %struct.usb_memory** %iter, align 8, !dbg !13200
  %size33 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %28, i32 0, i32 3, !dbg !13201
  %29 = load i32, i32* %size33, align 8, !dbg !13201
  %conv34 = zext i32 %29 to i64, !dbg !13200
  %add35 = add i64 %27, %conv34, !dbg !13202
  %30 = load i64, i64* %uurb_start, align 8, !dbg !13203
  %sub = sub i64 %add35, %30, !dbg !13204
  %cmp36 = icmp ugt i64 %conv31, %sub, !dbg !13205
  br i1 %cmp36, label %if.then38, label %if.else, !dbg !13206

if.then38:                                        ; preds = %if.then
  %call39 = call i8* @ERR_PTR(i64 -22) #11, !dbg !13207
  %31 = bitcast i8* %call39 to %struct.usb_memory*, !dbg !13207
  store %struct.usb_memory* %31, %struct.usb_memory** %usbm, align 8, !dbg !13209
  br label %if.end, !dbg !13210

if.else:                                          ; preds = %if.then
  %32 = load %struct.usb_memory*, %struct.usb_memory** %iter, align 8, !dbg !13211
  store %struct.usb_memory* %32, %struct.usb_memory** %usbm, align 8, !dbg !13213
  %33 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !13214
  %urb_use_count = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %33, i32 0, i32 2, !dbg !13215
  %34 = load i32, i32* %urb_use_count, align 4, !dbg !13216
  %inc = add i32 %34, 1, !dbg !13216
  store i32 %inc, i32* %urb_use_count, align 4, !dbg !13216
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then38
  br label %for.end, !dbg !13217

if.end40:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !13218

for.inc:                                          ; preds = %if.end40
  call void @llvm.dbg.declare(metadata i8** %__mptr41, metadata !13219, metadata !DIExpression()), !dbg !13221
  %35 = load %struct.usb_memory*, %struct.usb_memory** %iter, align 8, !dbg !13221
  %memlist42 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %35, i32 0, i32 0, !dbg !13221
  %next43 = getelementptr inbounds %struct.list_head, %struct.list_head* %memlist42, i32 0, i32 0, !dbg !13221
  %36 = load %struct.list_head*, %struct.list_head** %next43, align 8, !dbg !13221
  %37 = bitcast %struct.list_head* %36 to i8*, !dbg !13221
  store i8* %37, i8** %__mptr41, align 8, !dbg !13221
  br label %do.body44, !dbg !13221

do.body44:                                        ; preds = %for.inc
  br label %do.end45, !dbg !13222

do.end45:                                         ; preds = %do.body44
  %38 = load i8*, i8** %__mptr41, align 8, !dbg !13221
  %add.ptr47 = getelementptr i8, i8* %38, i64 0, !dbg !13221
  %39 = bitcast i8* %add.ptr47 to %struct.usb_memory*, !dbg !13221
  store %struct.usb_memory* %39, %struct.usb_memory** %tmp46, align 8, !dbg !13222
  %40 = load %struct.usb_memory*, %struct.usb_memory** %tmp46, align 8, !dbg !13221
  store %struct.usb_memory* %40, %struct.usb_memory** %iter, align 8, !dbg !13177
  br label %for.cond, !dbg !13177, !llvm.loop !13224

for.end:                                          ; preds = %if.end, %for.cond
  %41 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !13226
  %lock48 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %41, i32 0, i32 3, !dbg !13227
  %42 = load i64, i64* %flags, align 8, !dbg !13228
  store %struct.spinlock* %lock48, %struct.spinlock** %lock.addr.i49, align 8
  store i64 %42, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !243, metadata !5632, metadata !DIExpression()) #7, !dbg !13229
  call void @llvm.dbg.declare(metadata !243, metadata !5636, metadata !DIExpression()) #7, !dbg !13229
  store i32 1, i32* %tmp.i, align 4, !dbg !13229
  %43 = load i32, i32* %tmp.i, align 4, !dbg !13229
  call void @llvm.dbg.declare(metadata !243, metadata !5637, metadata !DIExpression()) #7, !dbg !13230
  call void @llvm.dbg.declare(metadata !243, metadata !5643, metadata !DIExpression()) #7, !dbg !13230
  store i32 1, i32* %tmp8.i, align 4, !dbg !13230
  %44 = load i32, i32* %tmp8.i, align 4, !dbg !13230
  %45 = load i64, i64* %flags.addr.i, align 8, !dbg !13231
  call void @arch_local_irq_restore(i64 %45) #13, !dbg !13231
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13232, !srcloc !5647
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i49, align 8, !dbg !13233
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !13233
  %rlock.i50 = bitcast %union.anon.0* %47 to %struct.raw_spinlock*, !dbg !13233
  %48 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !13234
  ret %struct.usb_memory* %48, !dbg !13235
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !13236 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !10550, metadata !DIExpression()), !dbg !13239
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !10562, metadata !DIExpression()), !dbg !13243
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !10564, metadata !DIExpression()), !dbg !13244
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !10566, metadata !DIExpression()), !dbg !13245
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !10568, metadata !DIExpression()), !dbg !13246
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !10574, metadata !DIExpression()), !dbg !13248
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !10580, metadata !DIExpression()), !dbg !13250
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !10589, metadata !DIExpression()), !dbg !13253
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !10591, metadata !DIExpression()), !dbg !13254
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10593, metadata !DIExpression()), !dbg !13255
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !10595, metadata !DIExpression()), !dbg !13256
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !10597, metadata !DIExpression()), !dbg !13257
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10599, metadata !DIExpression()), !dbg !13258
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !10601, metadata !DIExpression()), !dbg !13259
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !10603, metadata !DIExpression()), !dbg !13260
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13261, metadata !DIExpression()), !dbg !13262
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13263, metadata !DIExpression()), !dbg !13264
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13265, metadata !DIExpression()), !dbg !13266
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !13267, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !13269, metadata !DIExpression()), !dbg !13272
  %0 = load i64, i64* %n.addr, align 8, !dbg !13272
  store i64 %0, i64* %__a, align 8, !dbg !13272
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !13273, metadata !DIExpression()), !dbg !13272
  %1 = load i64, i64* %size.addr, align 8, !dbg !13272
  store i64 %1, i64* %__b, align 8, !dbg !13272
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !13274, metadata !DIExpression()), !dbg !13272
  store i64* %bytes, i64** %__d, align 8, !dbg !13272
  %cmp = icmp eq i64* %__a, %__b, !dbg !13272
  %conv = zext i1 %cmp to i32, !dbg !13272
  %2 = load i64*, i64** %__d, align 8, !dbg !13272
  %cmp1 = icmp eq i64* %__a, %2, !dbg !13272
  %conv2 = zext i1 %cmp1 to i32, !dbg !13272
  %3 = load i64, i64* %__a, align 8, !dbg !13272
  %4 = load i64, i64* %__b, align 8, !dbg !13272
  %5 = load i64*, i64** %__d, align 8, !dbg !13272
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !13272
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !13272
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !13272
  store i64 %8, i64* %5, align 8, !dbg !13272
  %frombool = zext i1 %7 to i8, !dbg !13272
  store i8 %frombool, i8* %tmp, align 1, !dbg !13272
  %9 = load i8, i8* %tmp, align 1, !dbg !13272
  %tobool = trunc i8 %9 to i1, !dbg !13272
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !13275
  %lnot = xor i1 %call, true, !dbg !13275
  %lnot3 = xor i1 %lnot, true, !dbg !13275
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !13275
  %conv4 = sext i32 %lnot.ext to i64, !dbg !13275
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !13275
  br i1 %tobool5, label %if.then, label %if.end, !dbg !13276

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13277
  br label %return, !dbg !13277

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !13278
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !13279
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !13280

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !13281
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !13282
  br i1 %13, label %if.then6, label %if.end8, !dbg !13283

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !13284
  %15 = load i32, i32* %flags.addr, align 4, !dbg !13285
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !13286
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #7, !dbg !13287
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !13288

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !13289
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !13290
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !13291

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !13292
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !13293
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !13294
  %call.i.i = call i32 @get_order(i64 %21) #15, !dbg !13295
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !13257
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !13296
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !13297
  %24 = load i32, i32* %order.i.i, align 4, !dbg !13298
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !13299
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !13300
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !13301
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #13, !dbg !13302
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !13302
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !13302
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !13302
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !13302
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !13303
  br label %kmalloc.exit, !dbg !13303

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !13304
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13305
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !13305
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !13306

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !13307
  br label %kmalloc_index.exit.i, !dbg !13307

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13308
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !13309
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !13310

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13311
  br label %kmalloc_index.exit.i, !dbg !13311

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13312
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !13313
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !13314

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13315
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !13316
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !13317

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !13318
  br label %kmalloc_index.exit.i, !dbg !13318

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13319
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !13320
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !13321

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13322
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !13323
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !13324

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !13325
  br label %kmalloc_index.exit.i, !dbg !13325

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13326
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !13327
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !13328

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13329
  br label %kmalloc_index.exit.i, !dbg !13329

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13330
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !13331
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !13332

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !13333
  br label %kmalloc_index.exit.i, !dbg !13333

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13334
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !13335
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !13336

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !13337
  br label %kmalloc_index.exit.i, !dbg !13337

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13338
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !13339
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !13340

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !13341
  br label %kmalloc_index.exit.i, !dbg !13341

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13342
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !13343
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !13344

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !13345
  br label %kmalloc_index.exit.i, !dbg !13345

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13346
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !13347
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !13348

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !13349
  br label %kmalloc_index.exit.i, !dbg !13349

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13350
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !13351
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !13352

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !13353
  br label %kmalloc_index.exit.i, !dbg !13353

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13354
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !13355
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !13356

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !13357
  br label %kmalloc_index.exit.i, !dbg !13357

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13358
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !13359
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !13360

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !13361
  br label %kmalloc_index.exit.i, !dbg !13361

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13362
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !13363
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !13364

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !13365
  br label %kmalloc_index.exit.i, !dbg !13365

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13366
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !13367
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !13368

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !13369
  br label %kmalloc_index.exit.i, !dbg !13369

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13370
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !13371
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !13372

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !13373
  br label %kmalloc_index.exit.i, !dbg !13373

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13374
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !13375
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !13376

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !13377
  br label %kmalloc_index.exit.i, !dbg !13377

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13378
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !13379
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !13380

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !13381
  br label %kmalloc_index.exit.i, !dbg !13381

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13382
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !13383
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !13384

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !13385
  br label %kmalloc_index.exit.i, !dbg !13385

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13386
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !13387
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !13388

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !13389
  br label %kmalloc_index.exit.i, !dbg !13389

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13390
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !13391
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !13392

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !13393
  br label %kmalloc_index.exit.i, !dbg !13393

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13394
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !13395
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !13396

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !13397
  br label %kmalloc_index.exit.i, !dbg !13397

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13398
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !13399
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !13400

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !13401
  br label %kmalloc_index.exit.i, !dbg !13401

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13402
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !13403
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !13404

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !13405
  br label %kmalloc_index.exit.i, !dbg !13405

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13406
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !13407
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !13408

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !13409
  br label %kmalloc_index.exit.i, !dbg !13409

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13410
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !13411
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !13412

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !13413
  br label %kmalloc_index.exit.i, !dbg !13413

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13414
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !13415
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !13416

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !13417
  br label %kmalloc_index.exit.i, !dbg !13417

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13418
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !13419
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !13420

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !13421
  br label %kmalloc_index.exit.i, !dbg !13421

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !13422, !srcloc !10853
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 214) #7, !dbg !13423, !srcloc !10857
  unreachable, !dbg !13424

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !13425
  store i32 %59, i32* %index.i, align 4, !dbg !13426
  %60 = load i32, i32* %index.i, align 4, !dbg !13427
  %tobool.i = icmp ne i32 %60, 0, !dbg !13427
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !13428

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !13429
  br label %kmalloc.exit, !dbg !13429

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !13430
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13431
  %and.i.i = and i32 %62, 17, !dbg !13431
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !13431
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !13431
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !13431
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !13431
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !13432

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !13433
  br label %kmalloc_type.exit.i, !dbg !13433

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13434
  %and2.i.i = and i32 %63, 1, !dbg !13435
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !13434
  %64 = zext i1 %tobool3.i.i to i64, !dbg !13434
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !13434
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !13436
  br label %kmalloc_type.exit.i, !dbg !13436

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !13437
  %idxprom.i = zext i32 %65 to i64, !dbg !13438
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !13438
  %66 = load i32, i32* %index.i, align 4, !dbg !13439
  %idxprom6.i = zext i32 %66 to i64, !dbg !13438
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !13438
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !13438
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !13440
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !13441
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13442
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13443
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #13, !dbg !13444
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !13444
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !13444
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !13444
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !13444
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !13245
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13445
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !13446
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !13447
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13448
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #13, !dbg !13449
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !13450
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !13451
  store i8* %76, i8** %retval.i, align 8, !dbg !13452
  br label %kmalloc.exit, !dbg !13452

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !13453
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !13454
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #13, !dbg !13455
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !13455
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !13455
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !13455
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !13455
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !13456
  br label %kmalloc.exit, !dbg !13456

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !13457
  store i8* %79, i8** %retval, align 8, !dbg !13458
  br label %return, !dbg !13458

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !13459
  %81 = load i32, i32* %flags.addr, align 4, !dbg !13460
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !13461
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !13461
  %maskedptr = and i64 %ptrint, 7, !dbg !13461
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !13461
  call void @llvm.assume(i1 %maskcond), !dbg !13461
  store i8* %call9, i8** %retval, align 8, !dbg !13462
  br label %return, !dbg !13462

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !13463
  ret i8* %82, !dbg !13463
}

; Function Attrs: noredzone
declare dso_local void @sg_init_table(%struct.scatterlist*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_set_buf(%struct.scatterlist* %sg, i8* %buf, i32 %buflen) #0 !dbg !13464 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i32, align 4
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !13467, metadata !DIExpression()), !dbg !13468
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13469, metadata !DIExpression()), !dbg !13470
  store i32 %buflen, i32* %buflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buflen.addr, metadata !13471, metadata !DIExpression()), !dbg !13472
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !13473
  %1 = load i64, i64* @vmemmap_base, align 8, !dbg !13474
  %2 = inttoptr i64 %1 to %struct.page*, !dbg !13474
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !13474
  %4 = ptrtoint i8* %3 to i64, !dbg !13474
  %call = call i64 @__phys_addr_nodebug(i64 %4) #11, !dbg !13474
  %shr = lshr i64 %call, 12, !dbg !13474
  %add.ptr = getelementptr %struct.page, %struct.page* %2, i64 %shr, !dbg !13474
  %5 = load i32, i32* %buflen.addr, align 4, !dbg !13475
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !13476
  %7 = ptrtoint i8* %6 to i64, !dbg !13476
  %and = and i64 %7, 4095, !dbg !13476
  %conv = trunc i64 %and to i32, !dbg !13476
  call void @sg_set_page(%struct.scatterlist* %0, %struct.page* %add.ptr, i32 %5, i32 %conv) #11, !dbg !13477
  ret void, !dbg !13478
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @async_completed(%struct.urb* %urb) #0 !dbg !13479 {
entry:
  %lock.addr.i62 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i62, metadata !5442, metadata !DIExpression()), !dbg !13480
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5449, metadata !DIExpression()), !dbg !13482
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5451, metadata !DIExpression()), !dbg !13483
  %urb.addr = alloca %struct.urb*, align 8
  %as = alloca %struct.async*, align 8
  %ps = alloca %struct.usb_dev_state*, align 8
  %pid = alloca %struct.pid*, align 8
  %cred = alloca %struct.cred*, align 8
  %flags = alloca i64, align 8
  %addr = alloca %union.sigval, align 8
  %signr = alloca i32, align 4
  %errno = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !13490, metadata !DIExpression()), !dbg !13491
  call void @llvm.dbg.declare(metadata %struct.async** %as, metadata !13492, metadata !DIExpression()), !dbg !13493
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13494
  %context = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 27, !dbg !13495
  %1 = load i8*, i8** %context, align 8, !dbg !13495
  %2 = bitcast i8* %1 to %struct.async*, !dbg !13494
  store %struct.async* %2, %struct.async** %as, align 8, !dbg !13493
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps, metadata !13496, metadata !DIExpression()), !dbg !13497
  %3 = load %struct.async*, %struct.async** %as, align 8, !dbg !13498
  %ps1 = getelementptr inbounds %struct.async, %struct.async* %3, i32 0, i32 1, !dbg !13499
  %4 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps1, align 8, !dbg !13499
  store %struct.usb_dev_state* %4, %struct.usb_dev_state** %ps, align 8, !dbg !13497
  call void @llvm.dbg.declare(metadata %struct.pid** %pid, metadata !13500, metadata !DIExpression()), !dbg !13501
  store %struct.pid* null, %struct.pid** %pid, align 8, !dbg !13501
  call void @llvm.dbg.declare(metadata %struct.cred** %cred, metadata !13502, metadata !DIExpression()), !dbg !13503
  store %struct.cred* null, %struct.cred** %cred, align 8, !dbg !13503
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13504, metadata !DIExpression()), !dbg !13505
  call void @llvm.dbg.declare(metadata %union.sigval* %addr, metadata !13506, metadata !DIExpression()), !dbg !13507
  call void @llvm.dbg.declare(metadata i32* %signr, metadata !13508, metadata !DIExpression()), !dbg !13509
  call void @llvm.dbg.declare(metadata i32* %errno, metadata !13510, metadata !DIExpression()), !dbg !13511
  br label %do.body, !dbg !13512

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !13513

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13514, metadata !DIExpression()), !dbg !13516
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13517, metadata !DIExpression()), !dbg !13516
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13516
  %conv = zext i1 %cmp to i32, !dbg !13516
  store i32 1, i32* %tmp, align 4, !dbg !13516
  %5 = load i32, i32* %tmp, align 4, !dbg !13516
  br label %do.body3, !dbg !13518

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13519

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !13520

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !13522, metadata !DIExpression()), !dbg !13525
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !13526, metadata !DIExpression()), !dbg !13525
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !13525
  %conv9 = zext i1 %cmp8 to i32, !dbg !13525
  store i32 1, i32* %tmp10, align 4, !dbg !13525
  %6 = load i32, i32* %tmp10, align 4, !dbg !13525
  %call = call i64 @arch_local_irq_save() #11, !dbg !13527
  store i64 %call, i64* %flags, align 8, !dbg !13527
  br label %do.end, !dbg !13527

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !13520

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !13519

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13528, !srcloc !13529
  br label %do.body13, !dbg !13528

do.body13:                                        ; preds = %do.body12
  %7 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !13530
  %lock = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %7, i32 0, i32 3, !dbg !13530
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13531
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !13532
  %rlock.i = bitcast %union.anon.0* %9 to %struct.raw_spinlock*, !dbg !13532
  br label %do.end15, !dbg !13530

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !13528

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13519

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13518

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !13513

do.end19:                                         ; preds = %do.end18
  %10 = load %struct.async*, %struct.async** %as, align 8, !dbg !13533
  %asynclist = getelementptr inbounds %struct.async, %struct.async* %10, i32 0, i32 0, !dbg !13534
  %11 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !13535
  %async_completed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %11, i32 0, i32 5, !dbg !13536
  call void @list_move_tail(%struct.list_head* %asynclist, %struct.list_head* %async_completed) #11, !dbg !13537
  %12 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13538
  %status = getelementptr inbounds %struct.urb, %struct.urb* %12, i32 0, i32 12, !dbg !13539
  %13 = load i32, i32* %status, align 8, !dbg !13539
  %14 = load %struct.async*, %struct.async** %as, align 8, !dbg !13540
  %status20 = getelementptr inbounds %struct.async, %struct.async* %14, i32 0, i32 12, !dbg !13541
  store i32 %13, i32* %status20, align 4, !dbg !13542
  %15 = load %struct.async*, %struct.async** %as, align 8, !dbg !13543
  %signr21 = getelementptr inbounds %struct.async, %struct.async* %15, i32 0, i32 4, !dbg !13544
  %16 = load i32, i32* %signr21, align 8, !dbg !13544
  store i32 %16, i32* %signr, align 4, !dbg !13545
  %17 = load i32, i32* %signr, align 4, !dbg !13546
  %tobool = icmp ne i32 %17, 0, !dbg !13546
  br i1 %tobool, label %if.then, label %if.end, !dbg !13548

if.then:                                          ; preds = %do.end19
  %18 = load %struct.async*, %struct.async** %as, align 8, !dbg !13549
  %status22 = getelementptr inbounds %struct.async, %struct.async* %18, i32 0, i32 12, !dbg !13551
  %19 = load i32, i32* %status22, align 4, !dbg !13551
  store i32 %19, i32* %errno, align 4, !dbg !13552
  %20 = load %struct.async*, %struct.async** %as, align 8, !dbg !13553
  %userurb_sigval = getelementptr inbounds %struct.async, %struct.async* %20, i32 0, i32 8, !dbg !13554
  %21 = bitcast %union.sigval* %addr to i8*, !dbg !13554
  %22 = bitcast %union.sigval* %userurb_sigval to i8*, !dbg !13554
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !13554
  %23 = load %struct.async*, %struct.async** %as, align 8, !dbg !13555
  %pid23 = getelementptr inbounds %struct.async, %struct.async* %23, i32 0, i32 2, !dbg !13556
  %24 = load %struct.pid*, %struct.pid** %pid23, align 8, !dbg !13556
  %call24 = call %struct.pid* @get_pid(%struct.pid* %24) #11, !dbg !13557
  store %struct.pid* %call24, %struct.pid** %pid, align 8, !dbg !13558
  %25 = load %struct.async*, %struct.async** %as, align 8, !dbg !13559
  %cred25 = getelementptr inbounds %struct.async, %struct.async* %25, i32 0, i32 3, !dbg !13560
  %26 = load %struct.cred*, %struct.cred** %cred25, align 8, !dbg !13560
  %call26 = call %struct.cred* @get_cred(%struct.cred* %26) #11, !dbg !13561
  store %struct.cred* %call26, %struct.cred** %cred, align 8, !dbg !13562
  br label %if.end, !dbg !13563

if.end:                                           ; preds = %if.then, %do.end19
  br label %do.body27, !dbg !13564

do.body27:                                        ; preds = %if.end
  %27 = load i8, i8* @usbfs_snoop, align 1, !dbg !13565
  %tobool28 = trunc i8 %27 to i1, !dbg !13565
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !13568

if.then29:                                        ; preds = %do.body27
  %28 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13565
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %28, i32 0, i32 8, !dbg !13565
  %29 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !13565
  %dev30 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %29, i32 0, i32 14, !dbg !13565
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.54, i64 0, i64 0)) #12, !dbg !13565
  br label %if.end31, !dbg !13565

if.end31:                                         ; preds = %if.then29, %do.body27
  br label %do.end32, !dbg !13568

do.end32:                                         ; preds = %if.end31
  %30 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13569
  %dev33 = getelementptr inbounds %struct.urb, %struct.urb* %30, i32 0, i32 8, !dbg !13570
  %31 = load %struct.usb_device*, %struct.usb_device** %dev33, align 8, !dbg !13570
  %32 = load %struct.async*, %struct.async** %as, align 8, !dbg !13571
  %userurb = getelementptr inbounds %struct.async, %struct.async* %32, i32 0, i32 7, !dbg !13572
  %33 = load i8*, i8** %userurb, align 8, !dbg !13572
  %34 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13573
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %34, i32 0, i32 10, !dbg !13574
  %35 = load i32, i32* %pipe, align 8, !dbg !13574
  %36 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13575
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %36, i32 0, i32 20, !dbg !13576
  %37 = load i32, i32* %actual_length, align 4, !dbg !13576
  %38 = load %struct.async*, %struct.async** %as, align 8, !dbg !13577
  %status34 = getelementptr inbounds %struct.async, %struct.async* %38, i32 0, i32 12, !dbg !13578
  %39 = load i32, i32* %status34, align 4, !dbg !13578
  call void @snoop_urb(%struct.usb_device* %31, i8* %33, i32 %35, i32 %37, i32 %39, i32 1, i8* null, i32 0) #11, !dbg !13579
  %40 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13580
  %call35 = call i32 @usb_urb_dir_in(%struct.urb* %40) #11, !dbg !13582
  %tobool36 = icmp ne i32 %call35, 0, !dbg !13582
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !13583

if.then37:                                        ; preds = %do.end32
  %41 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13584
  %42 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13585
  %actual_length38 = getelementptr inbounds %struct.urb, %struct.urb* %42, i32 0, i32 20, !dbg !13586
  %43 = load i32, i32* %actual_length38, align 4, !dbg !13586
  call void @snoop_urb_data(%struct.urb* %41, i32 %43) #11, !dbg !13587
  br label %if.end39, !dbg !13587

if.end39:                                         ; preds = %if.then37, %do.end32
  %44 = load %struct.async*, %struct.async** %as, align 8, !dbg !13588
  %status40 = getelementptr inbounds %struct.async, %struct.async* %44, i32 0, i32 12, !dbg !13590
  %45 = load i32, i32* %status40, align 4, !dbg !13590
  %cmp41 = icmp slt i32 %45, 0, !dbg !13591
  br i1 %cmp41, label %land.lhs.true, label %if.end56, !dbg !13592

land.lhs.true:                                    ; preds = %if.end39
  %46 = load %struct.async*, %struct.async** %as, align 8, !dbg !13593
  %bulk_addr = getelementptr inbounds %struct.async, %struct.async* %46, i32 0, i32 13, !dbg !13594
  %47 = load i8, i8* %bulk_addr, align 8, !dbg !13594
  %conv43 = zext i8 %47 to i32, !dbg !13593
  %tobool44 = icmp ne i32 %conv43, 0, !dbg !13593
  br i1 %tobool44, label %land.lhs.true45, label %if.end56, !dbg !13595

land.lhs.true45:                                  ; preds = %land.lhs.true
  %48 = load %struct.async*, %struct.async** %as, align 8, !dbg !13596
  %status46 = getelementptr inbounds %struct.async, %struct.async* %48, i32 0, i32 12, !dbg !13597
  %49 = load i32, i32* %status46, align 4, !dbg !13597
  %cmp47 = icmp ne i32 %49, -104, !dbg !13598
  br i1 %cmp47, label %land.lhs.true49, label %if.end56, !dbg !13599

land.lhs.true49:                                  ; preds = %land.lhs.true45
  %50 = load %struct.async*, %struct.async** %as, align 8, !dbg !13600
  %status50 = getelementptr inbounds %struct.async, %struct.async* %50, i32 0, i32 12, !dbg !13601
  %51 = load i32, i32* %status50, align 4, !dbg !13601
  %cmp51 = icmp ne i32 %51, -2, !dbg !13602
  br i1 %cmp51, label %if.then53, label %if.end56, !dbg !13603

if.then53:                                        ; preds = %land.lhs.true49
  %52 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !13604
  %53 = load %struct.async*, %struct.async** %as, align 8, !dbg !13605
  %bulk_addr54 = getelementptr inbounds %struct.async, %struct.async* %53, i32 0, i32 13, !dbg !13606
  %54 = load i8, i8* %bulk_addr54, align 8, !dbg !13606
  %conv55 = zext i8 %54 to i32, !dbg !13605
  call void @cancel_bulk_urbs(%struct.usb_dev_state* %52, i32 %conv55) #11, !dbg !13607
  br label %if.end56, !dbg !13607

if.end56:                                         ; preds = %if.then53, %land.lhs.true49, %land.lhs.true45, %land.lhs.true, %if.end39
  %55 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !13608
  %wait = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %55, i32 0, i32 7, !dbg !13608
  call void @__wake_up(%struct.wait_queue_head* %wait, i32 3, i32 1, i8* null) #11, !dbg !13608
  %56 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !13609
  %lock57 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %56, i32 0, i32 3, !dbg !13610
  %57 = load i64, i64* %flags, align 8, !dbg !13611
  store %struct.spinlock* %lock57, %struct.spinlock** %lock.addr.i62, align 8
  store i64 %57, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !243, metadata !5632, metadata !DIExpression()) #7, !dbg !13612
  call void @llvm.dbg.declare(metadata !243, metadata !5636, metadata !DIExpression()) #7, !dbg !13612
  store i32 1, i32* %tmp.i, align 4, !dbg !13612
  %58 = load i32, i32* %tmp.i, align 4, !dbg !13612
  call void @llvm.dbg.declare(metadata !243, metadata !5637, metadata !DIExpression()) #7, !dbg !13613
  call void @llvm.dbg.declare(metadata !243, metadata !5643, metadata !DIExpression()) #7, !dbg !13613
  store i32 1, i32* %tmp8.i, align 4, !dbg !13613
  %59 = load i32, i32* %tmp8.i, align 4, !dbg !13613
  %60 = load i64, i64* %flags.addr.i, align 8, !dbg !13614
  call void @arch_local_irq_restore(i64 %60) #13, !dbg !13614
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13615, !srcloc !5647
  %61 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i62, align 8, !dbg !13616
  %62 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %61, i32 0, i32 0, !dbg !13616
  %rlock.i63 = bitcast %union.anon.0* %62 to %struct.raw_spinlock*, !dbg !13616
  %63 = load i32, i32* %signr, align 4, !dbg !13617
  %tobool58 = icmp ne i32 %63, 0, !dbg !13617
  br i1 %tobool58, label %if.then59, label %if.end61, !dbg !13619

if.then59:                                        ; preds = %if.end56
  %64 = load i32, i32* %signr, align 4, !dbg !13620
  %65 = load i32, i32* %errno, align 4, !dbg !13622
  %66 = load %struct.pid*, %struct.pid** %pid, align 8, !dbg !13623
  %67 = load %struct.cred*, %struct.cred** %cred, align 8, !dbg !13624
  %coerce.dive = getelementptr inbounds %union.sigval, %union.sigval* %addr, i32 0, i32 0, !dbg !13625
  %68 = load i8*, i8** %coerce.dive, align 8, !dbg !13625
  %call60 = call i32 @kill_pid_usb_asyncio(i32 %64, i32 %65, i8* %68, %struct.pid* %66, %struct.cred* %67) #11, !dbg !13625
  %69 = load %struct.pid*, %struct.pid** %pid, align 8, !dbg !13626
  call void @put_pid(%struct.pid* %69) #11, !dbg !13627
  %70 = load %struct.cred*, %struct.cred** %cred, align 8, !dbg !13628
  call void @put_cred(%struct.cred* %70) #11, !dbg !13629
  br label %if.end61, !dbg !13630

if.end61:                                         ; preds = %if.then59, %if.end56
  ret void, !dbg !13631
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pid* @get_pid(%struct.pid* %pid) #0 !dbg !13632 {
entry:
  %pid.addr = alloca %struct.pid*, align 8
  store %struct.pid* %pid, %struct.pid** %pid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pid** %pid.addr, metadata !13635, metadata !DIExpression()), !dbg !13636
  %0 = load %struct.pid*, %struct.pid** %pid.addr, align 8, !dbg !13637
  %tobool = icmp ne %struct.pid* %0, null, !dbg !13637
  br i1 %tobool, label %if.then, label %if.end, !dbg !13639

if.then:                                          ; preds = %entry
  %1 = load %struct.pid*, %struct.pid** %pid.addr, align 8, !dbg !13640
  %count = getelementptr inbounds %struct.pid, %struct.pid* %1, i32 0, i32 0, !dbg !13641
  call void @refcount_inc(%struct.refcount_struct* %count) #11, !dbg !13642
  br label %if.end, !dbg !13642

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.pid*, %struct.pid** %pid.addr, align 8, !dbg !13643
  ret %struct.pid* %2, !dbg !13644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.pid* @task_pid(%struct.task_struct* %task) #0 !dbg !13645 {
entry:
  %task.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %task, %struct.task_struct** %task.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %task.addr, metadata !13648, metadata !DIExpression()), !dbg !13649
  %0 = load %struct.task_struct*, %struct.task_struct** %task.addr, align 8, !dbg !13650
  %thread_pid = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 45, !dbg !13651
  %1 = load %struct.pid*, %struct.pid** %thread_pid, align 8, !dbg !13651
  ret %struct.pid* %1, !dbg !13652
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.cred* @get_cred(%struct.cred* %cred) #0 !dbg !13653 {
entry:
  %retval = alloca %struct.cred*, align 8
  %cred.addr = alloca %struct.cred*, align 8
  %nonconst_cred = alloca %struct.cred*, align 8
  store %struct.cred* %cred, %struct.cred** %cred.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cred** %cred.addr, metadata !13656, metadata !DIExpression()), !dbg !13657
  call void @llvm.dbg.declare(metadata %struct.cred** %nonconst_cred, metadata !13658, metadata !DIExpression()), !dbg !13659
  %0 = load %struct.cred*, %struct.cred** %cred.addr, align 8, !dbg !13660
  store %struct.cred* %0, %struct.cred** %nonconst_cred, align 8, !dbg !13659
  %1 = load %struct.cred*, %struct.cred** %cred.addr, align 8, !dbg !13661
  %tobool = icmp ne %struct.cred* %1, null, !dbg !13661
  br i1 %tobool, label %if.end, label %if.then, !dbg !13663

if.then:                                          ; preds = %entry
  %2 = load %struct.cred*, %struct.cred** %cred.addr, align 8, !dbg !13664
  store %struct.cred* %2, %struct.cred** %retval, align 8, !dbg !13665
  br label %return, !dbg !13665

if.end:                                           ; preds = %entry
  %3 = load %struct.cred*, %struct.cred** %cred.addr, align 8, !dbg !13666
  call void @validate_creds(%struct.cred* %3) #11, !dbg !13667
  %4 = load %struct.cred*, %struct.cred** %nonconst_cred, align 8, !dbg !13668
  %5 = getelementptr inbounds %struct.cred, %struct.cred* %4, i32 0, i32 23, !dbg !13669
  %non_rcu = bitcast %union.anon.35* %5 to i32*, !dbg !13669
  store i32 0, i32* %non_rcu, align 8, !dbg !13670
  %6 = load %struct.cred*, %struct.cred** %nonconst_cred, align 8, !dbg !13671
  %call = call %struct.cred* @get_new_cred(%struct.cred* %6) #11, !dbg !13672
  store %struct.cred* %call, %struct.cred** %retval, align 8, !dbg !13673
  br label %return, !dbg !13673

return:                                           ; preds = %if.end, %if.then
  %7 = load %struct.cred*, %struct.cred** %retval, align 8, !dbg !13674
  ret %struct.cred* %7, !dbg !13674
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @snoop_urb_data(%struct.urb* %urb, i32 %len) #0 !dbg !13675 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  %len.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %size = alloca i32, align 4
  %__UNIQUE_ID___x261 = alloca i32, align 4
  %__UNIQUE_ID___y262 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !13678, metadata !DIExpression()), !dbg !13679
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !13680, metadata !DIExpression()), !dbg !13681
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13682, metadata !DIExpression()), !dbg !13683
  call void @llvm.dbg.declare(metadata i32* %size, metadata !13684, metadata !DIExpression()), !dbg !13685
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x261, metadata !13686, metadata !DIExpression()), !dbg !13688
  %0 = load i32, i32* %len.addr, align 4, !dbg !13688
  store i32 %0, i32* %__UNIQUE_ID___x261, align 4, !dbg !13688
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y262, metadata !13689, metadata !DIExpression()), !dbg !13688
  %1 = load i32, i32* @usbfs_snoop_max, align 4, !dbg !13688
  store i32 %1, i32* %__UNIQUE_ID___y262, align 4, !dbg !13688
  %2 = load i32, i32* %__UNIQUE_ID___x261, align 4, !dbg !13688
  %3 = load i32, i32* %__UNIQUE_ID___y262, align 4, !dbg !13688
  %cmp = icmp ult i32 %2, %3, !dbg !13688
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13688

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %__UNIQUE_ID___x261, align 4, !dbg !13688
  br label %cond.end, !dbg !13688

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___y262, align 4, !dbg !13688
  br label %cond.end, !dbg !13688

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %5, %cond.false ], !dbg !13688
  store i32 %cond, i32* %tmp, align 4, !dbg !13688
  %6 = load i32, i32* %tmp, align 4, !dbg !13688
  store i32 %6, i32* %len.addr, align 4, !dbg !13690
  %7 = load i8, i8* @usbfs_snoop, align 1, !dbg !13691
  %tobool = trunc i8 %7 to i1, !dbg !13691
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13693

lor.lhs.false:                                    ; preds = %cond.end
  %8 = load i32, i32* %len.addr, align 4, !dbg !13694
  %cmp1 = icmp eq i32 %8, 0, !dbg !13695
  br i1 %cmp1, label %if.then, label %if.end, !dbg !13696

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  br label %for.end, !dbg !13697

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13698
  %num_sgs = getelementptr inbounds %struct.urb, %struct.urb* %9, i32 0, i32 18, !dbg !13700
  %10 = load i32, i32* %num_sgs, align 4, !dbg !13700
  %cmp2 = icmp eq i32 %10, 0, !dbg !13701
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !13702

if.then3:                                         ; preds = %if.end
  %11 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13703
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %11, i32 0, i32 14, !dbg !13705
  %12 = load i8*, i8** %transfer_buffer, align 8, !dbg !13705
  %13 = load i32, i32* %len.addr, align 4, !dbg !13706
  %conv = zext i32 %13 to i64, !dbg !13706
  call void @print_hex_dump(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0), i32 0, i32 32, i32 1, i8* %12, i64 %conv, i1 zeroext true) #11, !dbg !13707
  br label %for.end, !dbg !13708

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !13709
  br label %for.cond, !dbg !13711

for.cond:                                         ; preds = %for.inc, %if.end4
  %14 = load i32, i32* %i, align 4, !dbg !13712
  %15 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13714
  %num_sgs5 = getelementptr inbounds %struct.urb, %struct.urb* %15, i32 0, i32 18, !dbg !13715
  %16 = load i32, i32* %num_sgs5, align 4, !dbg !13715
  %cmp6 = icmp slt i32 %14, %16, !dbg !13716
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !13717

land.rhs:                                         ; preds = %for.cond
  %17 = load i32, i32* %len.addr, align 4, !dbg !13718
  %tobool8 = icmp ne i32 %17, 0, !dbg !13717
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %18 = phi i1 [ false, %for.cond ], [ %tobool8, %land.rhs ], !dbg !13719
  br i1 %18, label %for.body, label %for.end, !dbg !13720

for.body:                                         ; preds = %land.end
  %19 = load i32, i32* %len.addr, align 4, !dbg !13721
  %cmp9 = icmp ugt i32 %19, 16384, !dbg !13723
  br i1 %cmp9, label %cond.true11, label %cond.false12, !dbg !13724

cond.true11:                                      ; preds = %for.body
  br label %cond.end13, !dbg !13724

cond.false12:                                     ; preds = %for.body
  %20 = load i32, i32* %len.addr, align 4, !dbg !13725
  br label %cond.end13, !dbg !13724

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i32 [ 16384, %cond.true11 ], [ %20, %cond.false12 ], !dbg !13724
  store i32 %cond14, i32* %size, align 4, !dbg !13726
  %21 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13727
  %sg = getelementptr inbounds %struct.urb, %struct.urb* %21, i32 0, i32 16, !dbg !13728
  %22 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !13728
  %23 = load i32, i32* %i, align 4, !dbg !13729
  %idxprom = sext i32 %23 to i64, !dbg !13727
  %arrayidx = getelementptr %struct.scatterlist, %struct.scatterlist* %22, i64 %idxprom, !dbg !13727
  %call = call i8* @sg_virt(%struct.scatterlist* %arrayidx) #11, !dbg !13730
  %24 = load i32, i32* %size, align 4, !dbg !13731
  %conv15 = sext i32 %24 to i64, !dbg !13731
  call void @print_hex_dump(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0), i32 0, i32 32, i32 1, i8* %call, i64 %conv15, i1 zeroext true) #11, !dbg !13732
  %25 = load i32, i32* %size, align 4, !dbg !13733
  %26 = load i32, i32* %len.addr, align 4, !dbg !13734
  %sub = sub i32 %26, %25, !dbg !13734
  store i32 %sub, i32* %len.addr, align 4, !dbg !13734
  br label %for.inc, !dbg !13735

for.inc:                                          ; preds = %cond.end13
  %27 = load i32, i32* %i, align 4, !dbg !13736
  %inc = add i32 %27, 1, !dbg !13736
  store i32 %inc, i32* %i, align 4, !dbg !13736
  br label %for.cond, !dbg !13737, !llvm.loop !13738

for.end:                                          ; preds = %if.then, %if.then3, %land.end
  ret void, !dbg !13740
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @async_newpending(%struct.async* %as) #0 !dbg !13741 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !5442, metadata !DIExpression()), !dbg !13742
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5449, metadata !DIExpression()), !dbg !13744
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5451, metadata !DIExpression()), !dbg !13745
  %as.addr = alloca %struct.async*, align 8
  %ps = alloca %struct.usb_dev_state*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.async* %as, %struct.async** %as.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.async** %as.addr, metadata !13752, metadata !DIExpression()), !dbg !13753
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps, metadata !13754, metadata !DIExpression()), !dbg !13755
  %0 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !13756
  %ps1 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 1, !dbg !13757
  %1 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps1, align 8, !dbg !13757
  store %struct.usb_dev_state* %1, %struct.usb_dev_state** %ps, align 8, !dbg !13755
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13758, metadata !DIExpression()), !dbg !13759
  br label %do.body, !dbg !13760

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !13761

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13762, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13765, metadata !DIExpression()), !dbg !13764
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13764
  %conv = zext i1 %cmp to i32, !dbg !13764
  store i32 1, i32* %tmp, align 4, !dbg !13764
  %2 = load i32, i32* %tmp, align 4, !dbg !13764
  br label %do.body3, !dbg !13766

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13767

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !13768

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !13770, metadata !DIExpression()), !dbg !13773
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !13774, metadata !DIExpression()), !dbg !13773
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !13773
  %conv9 = zext i1 %cmp8 to i32, !dbg !13773
  store i32 1, i32* %tmp10, align 4, !dbg !13773
  %3 = load i32, i32* %tmp10, align 4, !dbg !13773
  %call = call i64 @arch_local_irq_save() #11, !dbg !13775
  store i64 %call, i64* %flags, align 8, !dbg !13775
  br label %do.end, !dbg !13775

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !13768

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !13767

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13776, !srcloc !13777
  br label %do.body13, !dbg !13776

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !13778
  %lock = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %4, i32 0, i32 3, !dbg !13778
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13779
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !13780
  %rlock.i = bitcast %union.anon.0* %6 to %struct.raw_spinlock*, !dbg !13780
  br label %do.end15, !dbg !13778

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !13776

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13767

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13766

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !13761

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !13781
  %asynclist = getelementptr inbounds %struct.async, %struct.async* %7, i32 0, i32 0, !dbg !13782
  %8 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !13783
  %async_pending = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 4, !dbg !13784
  call void @list_add_tail(%struct.list_head* %asynclist, %struct.list_head* %async_pending) #11, !dbg !13785
  %9 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !13786
  %lock20 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %9, i32 0, i32 3, !dbg !13787
  %10 = load i64, i64* %flags, align 8, !dbg !13788
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %10, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !243, metadata !5632, metadata !DIExpression()) #7, !dbg !13789
  call void @llvm.dbg.declare(metadata !243, metadata !5636, metadata !DIExpression()) #7, !dbg !13789
  store i32 1, i32* %tmp.i, align 4, !dbg !13789
  %11 = load i32, i32* %tmp.i, align 4, !dbg !13789
  call void @llvm.dbg.declare(metadata !243, metadata !5637, metadata !DIExpression()) #7, !dbg !13790
  call void @llvm.dbg.declare(metadata !243, metadata !5643, metadata !DIExpression()) #7, !dbg !13790
  store i32 1, i32* %tmp8.i, align 4, !dbg !13790
  %12 = load i32, i32* %tmp8.i, align 4, !dbg !13790
  %13 = load i64, i64* %flags.addr.i, align 8, !dbg !13791
  call void @arch_local_irq_restore(i64 %13) #13, !dbg !13791
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13792, !srcloc !5647
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !13793
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !13793
  %rlock.i22 = bitcast %union.anon.0* %15 to %struct.raw_spinlock*, !dbg !13793
  ret void, !dbg !13794
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_xfer_bulk(%struct.usb_endpoint_descriptor* %epd) #0 !dbg !13795 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !13796, metadata !DIExpression()), !dbg !13797
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !13798
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3, !dbg !13799
  %1 = load i8, i8* %bmAttributes, align 1, !dbg !13799
  %conv = zext i8 %1 to i32, !dbg !13798
  %and = and i32 %conv, 3, !dbg !13800
  %cmp = icmp eq i32 %and, 2, !dbg !13801
  %conv1 = zext i1 %cmp to i32, !dbg !13801
  ret i32 %conv1, !dbg !13802
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_num(%struct.usb_endpoint_descriptor* %epd) #0 !dbg !13803 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !13804, metadata !DIExpression()), !dbg !13805
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !13806
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 2, !dbg !13807
  %1 = load i8, i8* %bEndpointAddress, align 1, !dbg !13807
  %conv = zext i8 %1 to i32, !dbg !13806
  %and = and i32 %conv, 15, !dbg !13808
  ret i32 %and, !dbg !13809
}

; Function Attrs: noredzone
declare dso_local i32 @usb_submit_urb(%struct.urb*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @async_removepending(%struct.async* %as) #0 !dbg !13810 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !5442, metadata !DIExpression()), !dbg !13811
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5449, metadata !DIExpression()), !dbg !13813
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5451, metadata !DIExpression()), !dbg !13814
  %as.addr = alloca %struct.async*, align 8
  %ps = alloca %struct.usb_dev_state*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.async* %as, %struct.async** %as.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.async** %as.addr, metadata !13821, metadata !DIExpression()), !dbg !13822
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps, metadata !13823, metadata !DIExpression()), !dbg !13824
  %0 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !13825
  %ps1 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 1, !dbg !13826
  %1 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps1, align 8, !dbg !13826
  store %struct.usb_dev_state* %1, %struct.usb_dev_state** %ps, align 8, !dbg !13824
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13827, metadata !DIExpression()), !dbg !13828
  br label %do.body, !dbg !13829

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !13830

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13831, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13834, metadata !DIExpression()), !dbg !13833
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13833
  %conv = zext i1 %cmp to i32, !dbg !13833
  store i32 1, i32* %tmp, align 4, !dbg !13833
  %2 = load i32, i32* %tmp, align 4, !dbg !13833
  br label %do.body3, !dbg !13835

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13836

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !13837

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !13839, metadata !DIExpression()), !dbg !13842
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !13843, metadata !DIExpression()), !dbg !13842
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !13842
  %conv9 = zext i1 %cmp8 to i32, !dbg !13842
  store i32 1, i32* %tmp10, align 4, !dbg !13842
  %3 = load i32, i32* %tmp10, align 4, !dbg !13842
  %call = call i64 @arch_local_irq_save() #11, !dbg !13844
  store i64 %call, i64* %flags, align 8, !dbg !13844
  br label %do.end, !dbg !13844

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !13837

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !13836

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13845, !srcloc !13846
  br label %do.body13, !dbg !13845

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !13847
  %lock = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %4, i32 0, i32 3, !dbg !13847
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13848
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !13849
  %rlock.i = bitcast %union.anon.0* %6 to %struct.raw_spinlock*, !dbg !13849
  br label %do.end15, !dbg !13847

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !13845

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13836

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13835

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !13830

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.async*, %struct.async** %as.addr, align 8, !dbg !13850
  %asynclist = getelementptr inbounds %struct.async, %struct.async* %7, i32 0, i32 0, !dbg !13851
  call void @list_del_init(%struct.list_head* %asynclist) #11, !dbg !13852
  %8 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !13853
  %lock20 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 3, !dbg !13854
  %9 = load i64, i64* %flags, align 8, !dbg !13855
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !243, metadata !5632, metadata !DIExpression()) #7, !dbg !13856
  call void @llvm.dbg.declare(metadata !243, metadata !5636, metadata !DIExpression()) #7, !dbg !13856
  store i32 1, i32* %tmp.i, align 4, !dbg !13856
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13856
  call void @llvm.dbg.declare(metadata !243, metadata !5637, metadata !DIExpression()) #7, !dbg !13857
  call void @llvm.dbg.declare(metadata !243, metadata !5643, metadata !DIExpression()) #7, !dbg !13857
  store i32 1, i32* %tmp8.i, align 4, !dbg !13857
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13857
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13858
  call void @arch_local_irq_restore(i64 %12) #13, !dbg !13858
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13859, !srcloc !5647
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !13860
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13860
  %rlock.i22 = bitcast %union.anon.0* %14 to %struct.raw_spinlock*, !dbg !13860
  ret void, !dbg !13861
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !13862 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !10550, metadata !DIExpression()), !dbg !13863
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !10562, metadata !DIExpression()), !dbg !13866
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !10564, metadata !DIExpression()), !dbg !13867
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !10566, metadata !DIExpression()), !dbg !13868
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !10568, metadata !DIExpression()), !dbg !13869
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !10574, metadata !DIExpression()), !dbg !13871
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !10580, metadata !DIExpression()), !dbg !13873
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !10589, metadata !DIExpression()), !dbg !13876
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !10591, metadata !DIExpression()), !dbg !13877
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10593, metadata !DIExpression()), !dbg !13878
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !10595, metadata !DIExpression()), !dbg !13879
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !10597, metadata !DIExpression()), !dbg !13880
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10599, metadata !DIExpression()), !dbg !13881
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !10601, metadata !DIExpression()), !dbg !13882
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !10603, metadata !DIExpression()), !dbg !13883
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13884, metadata !DIExpression()), !dbg !13885
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13886, metadata !DIExpression()), !dbg !13887
  %0 = load i64, i64* %size.addr, align 8, !dbg !13888
  %1 = load i32, i32* %flags.addr, align 4, !dbg !13889
  %or = or i32 %1, 256, !dbg !13890
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !13891
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !13892
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !13893

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13894
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !13895
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !13896

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !13897
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !13898
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !13899
  %call.i.i = call i32 @get_order(i64 %7) #15, !dbg !13900
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !13880
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !13901
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !13902
  %10 = load i32, i32* %order.i.i, align 4, !dbg !13903
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !13904
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !13905
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !13906
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !13907
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !13907
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !13907
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !13907
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !13907
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !13908
  br label %kmalloc.exit, !dbg !13908

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !13909
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13910
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !13910
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !13911

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !13912
  br label %kmalloc_index.exit.i, !dbg !13912

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13913
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !13914
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !13915

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13916
  br label %kmalloc_index.exit.i, !dbg !13916

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13917
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !13918
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !13919

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13920
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !13921
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !13922

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !13923
  br label %kmalloc_index.exit.i, !dbg !13923

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13924
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !13925
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !13926

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13927
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !13928
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !13929

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !13930
  br label %kmalloc_index.exit.i, !dbg !13930

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13931
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !13932
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !13933

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13934
  br label %kmalloc_index.exit.i, !dbg !13934

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13935
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !13936
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !13937

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !13938
  br label %kmalloc_index.exit.i, !dbg !13938

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13939
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !13940
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !13941

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !13942
  br label %kmalloc_index.exit.i, !dbg !13942

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13943
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !13944
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !13945

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !13946
  br label %kmalloc_index.exit.i, !dbg !13946

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13947
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !13948
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !13949

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !13950
  br label %kmalloc_index.exit.i, !dbg !13950

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13951
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !13952
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !13953

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !13954
  br label %kmalloc_index.exit.i, !dbg !13954

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13955
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !13956
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !13957

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !13958
  br label %kmalloc_index.exit.i, !dbg !13958

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13959
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !13960
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !13961

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !13962
  br label %kmalloc_index.exit.i, !dbg !13962

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13963
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !13964
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !13965

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !13966
  br label %kmalloc_index.exit.i, !dbg !13966

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13967
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !13968
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !13969

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !13970
  br label %kmalloc_index.exit.i, !dbg !13970

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13971
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !13972
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !13973

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !13974
  br label %kmalloc_index.exit.i, !dbg !13974

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13975
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !13976
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !13977

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !13978
  br label %kmalloc_index.exit.i, !dbg !13978

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13979
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !13980
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !13981

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !13982
  br label %kmalloc_index.exit.i, !dbg !13982

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13983
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !13984
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !13985

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !13986
  br label %kmalloc_index.exit.i, !dbg !13986

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13987
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !13988
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !13989

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !13990
  br label %kmalloc_index.exit.i, !dbg !13990

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13991
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !13992
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !13993

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !13994
  br label %kmalloc_index.exit.i, !dbg !13994

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13995
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !13996
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !13997

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !13998
  br label %kmalloc_index.exit.i, !dbg !13998

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13999
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !14000
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !14001

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !14002
  br label %kmalloc_index.exit.i, !dbg !14002

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14003
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !14004
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !14005

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !14006
  br label %kmalloc_index.exit.i, !dbg !14006

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14007
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !14008
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !14009

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !14010
  br label %kmalloc_index.exit.i, !dbg !14010

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14011
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !14012
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !14013

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !14014
  br label %kmalloc_index.exit.i, !dbg !14014

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14015
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !14016
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !14017

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !14018
  br label %kmalloc_index.exit.i, !dbg !14018

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14019
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !14020
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !14021

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !14022
  br label %kmalloc_index.exit.i, !dbg !14022

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14023
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !14024
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !14025

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !14026
  br label %kmalloc_index.exit.i, !dbg !14026

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !14027, !srcloc !10853
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 214) #7, !dbg !14028, !srcloc !10857
  unreachable, !dbg !14029

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !14030
  store i32 %45, i32* %index.i, align 4, !dbg !14031
  %46 = load i32, i32* %index.i, align 4, !dbg !14032
  %tobool.i = icmp ne i32 %46, 0, !dbg !14032
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !14033

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !14034
  br label %kmalloc.exit, !dbg !14034

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !14035
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14036
  %and.i.i = and i32 %48, 17, !dbg !14036
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !14036
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !14036
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !14036
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !14036
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !14037

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !14038
  br label %kmalloc_type.exit.i, !dbg !14038

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14039
  %and2.i.i = and i32 %49, 1, !dbg !14040
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !14039
  %50 = zext i1 %tobool3.i.i to i64, !dbg !14039
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !14039
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !14041
  br label %kmalloc_type.exit.i, !dbg !14041

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !14042
  %idxprom.i = zext i32 %51 to i64, !dbg !14043
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !14043
  %52 = load i32, i32* %index.i, align 4, !dbg !14044
  %idxprom6.i = zext i32 %52 to i64, !dbg !14043
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !14043
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !14043
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !14045
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !14046
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14047
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14048
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !14049
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !14049
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !14049
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !14049
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !14049
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !13868
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14050
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !14051
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !14052
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14053
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !14054
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !14055
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !14056
  store i8* %62, i8** %retval.i, align 8, !dbg !14057
  br label %kmalloc.exit, !dbg !14057

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !14058
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !14059
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !14060
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !14060
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !14060
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !14060
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !14060
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !14061
  br label %kmalloc.exit, !dbg !14061

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !14062
  ret i8* %65, !dbg !14063
}

; Function Attrs: noredzone
declare dso_local %struct.urb* @usb_alloc_urb(i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !14064 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !14067, metadata !DIExpression()), !dbg !14068
  %0 = load i64, i64* %error.addr, align 8, !dbg !14069
  %1 = inttoptr i64 %0 to i8*, !dbg !14070
  ret i8* %1, !dbg !14071
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !14072 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !14076, metadata !DIExpression()), !dbg !14077
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !14078
  %tobool = trunc i8 %0 to i1, !dbg !14078
  %lnot = xor i1 %tobool, true, !dbg !14078
  %lnot1 = xor i1 %lnot, true, !dbg !14078
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14078
  %conv = sext i32 %lnot.ext to i64, !dbg !14078
  %tobool2 = icmp ne i64 %conv, 0, !dbg !14078
  ret i1 %tobool2, !dbg !14079
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_set_page(%struct.scatterlist* %sg, %struct.page* %page, i32 %len, i32 %offset) #0 !dbg !14080 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  %page.addr = alloca %struct.page*, align 8
  %len.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !14083, metadata !DIExpression()), !dbg !14084
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !14085, metadata !DIExpression()), !dbg !14086
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !14087, metadata !DIExpression()), !dbg !14088
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !14089, metadata !DIExpression()), !dbg !14090
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !14091
  %1 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !14092
  call void @sg_assign_page(%struct.scatterlist* %0, %struct.page* %1) #11, !dbg !14093
  %2 = load i32, i32* %offset.addr, align 4, !dbg !14094
  %3 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !14095
  %offset1 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %3, i32 0, i32 1, !dbg !14096
  store i32 %2, i32* %offset1, align 8, !dbg !14097
  %4 = load i32, i32* %len.addr, align 4, !dbg !14098
  %5 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !14099
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %5, i32 0, i32 2, !dbg !14100
  store i32 %4, i32* %length, align 4, !dbg !14101
  ret void, !dbg !14102
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #0 !dbg !14103 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !14107, metadata !DIExpression()), !dbg !14108
  call void @llvm.dbg.declare(metadata i64* %y, metadata !14109, metadata !DIExpression()), !dbg !14110
  %0 = load i64, i64* %x.addr, align 8, !dbg !14111
  %sub = sub i64 %0, -2147483648, !dbg !14112
  store i64 %sub, i64* %y, align 8, !dbg !14110
  %1 = load i64, i64* %y, align 8, !dbg !14113
  %2 = load i64, i64* %x.addr, align 8, !dbg !14114
  %3 = load i64, i64* %y, align 8, !dbg !14115
  %cmp = icmp ugt i64 %2, %3, !dbg !14116
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14117

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !14118
  br label %cond.end, !dbg !14117

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !14119
  %sub1 = sub i64 -2147483648, %5, !dbg !14120
  br label %cond.end, !dbg !14117

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !14117
  %add = add i64 %1, %cond, !dbg !14121
  store i64 %add, i64* %x.addr, align 8, !dbg !14122
  %6 = load i64, i64* %x.addr, align 8, !dbg !14123
  ret i64 %6, !dbg !14124
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_assign_page(%struct.scatterlist* %sg, %struct.page* %page) #0 !dbg !14125 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  %page.addr = alloca %struct.page*, align 8
  %page_link = alloca i64, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !14128, metadata !DIExpression()), !dbg !14129
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !14130, metadata !DIExpression()), !dbg !14131
  call void @llvm.dbg.declare(metadata i64* %page_link, metadata !14132, metadata !DIExpression()), !dbg !14133
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !14134
  %page_link1 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0, !dbg !14135
  %1 = load i64, i64* %page_link1, align 8, !dbg !14135
  %and = and i64 %1, 3, !dbg !14136
  store i64 %and, i64* %page_link, align 8, !dbg !14133
  br label %do.body, !dbg !14137

do.body:                                          ; preds = %entry
  %2 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !14138
  %3 = ptrtoint %struct.page* %2 to i64, !dbg !14138
  %and2 = and i64 %3, 3, !dbg !14138
  %tobool = icmp ne i64 %and2, 0, !dbg !14138
  %lnot = xor i1 %tobool, true, !dbg !14138
  %lnot3 = xor i1 %lnot, true, !dbg !14138
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !14138
  %conv = sext i32 %lnot.ext to i64, !dbg !14138
  %tobool4 = icmp ne i64 %conv, 0, !dbg !14138
  br i1 %tobool4, label %if.then, label %if.end, !dbg !14141

if.then:                                          ; preds = %do.body
  br label %do.body5, !dbg !14138

do.body5:                                         ; preds = %if.then
  br label %do.body6, !dbg !14142

do.body6:                                         ; preds = %do.body5
  br label %do.end, !dbg !14144

do.end:                                           ; preds = %do.body6
  br label %do.body7, !dbg !14142

do.body7:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.53, i64 0, i64 0), i32 95, i32 0, i64 12) #7, !dbg !14146, !srcloc !14148
  br label %do.end8, !dbg !14146

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !14142

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 236) #7, !dbg !14149, !srcloc !14152
  unreachable, !dbg !14153

do.end10:                                         ; No predecessors!
  br label %do.end11, !dbg !14142

do.end11:                                         ; preds = %do.end10
  br label %if.end, !dbg !14142

if.end:                                           ; preds = %do.end11, %do.body
  br label %do.end12, !dbg !14141

do.end12:                                         ; preds = %if.end
  %4 = load i64, i64* %page_link, align 8, !dbg !14154
  %5 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !14155
  %6 = ptrtoint %struct.page* %5 to i64, !dbg !14156
  %or = or i64 %4, %6, !dbg !14157
  %7 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !14158
  %page_link13 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %7, i32 0, i32 0, !dbg !14159
  store i64 %or, i64* %page_link13, align 8, !dbg !14160
  ret void, !dbg !14161
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_urb_dir_in(%struct.urb* %urb) #0 !dbg !14162 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !14165, metadata !DIExpression()), !dbg !14166
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !14167
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 13, !dbg !14168
  %1 = load i32, i32* %transfer_flags, align 4, !dbg !14168
  %and = and i32 %1, 512, !dbg !14169
  %cmp = icmp eq i32 %and, 512, !dbg !14170
  %conv = zext i1 %cmp to i32, !dbg !14170
  ret i32 %conv, !dbg !14171
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cancel_bulk_urbs(%struct.usb_dev_state* %ps, i32 %bulk_addr) #0 !dbg !14172 {
entry:
  %lock.addr.i51 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i51, metadata !14173, metadata !DIExpression()), !dbg !14175
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !14182, metadata !DIExpression()), !dbg !14184
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %bulk_addr.addr = alloca i32, align 4
  %urb = alloca %struct.urb*, align 8
  %as = alloca %struct.async*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.async*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp17 = alloca %struct.async*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp23 = alloca %struct.async*, align 8
  %__mptr43 = alloca i8*, align 8
  %tmp48 = alloca %struct.async*, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !14186, metadata !DIExpression()), !dbg !14187
  store i32 %bulk_addr, i32* %bulk_addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bulk_addr.addr, metadata !14188, metadata !DIExpression()), !dbg !14189
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !14190, metadata !DIExpression()), !dbg !14191
  call void @llvm.dbg.declare(metadata %struct.async** %as, metadata !14192, metadata !DIExpression()), !dbg !14193
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14194, metadata !DIExpression()), !dbg !14197
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14197
  %async_pending = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 4, !dbg !14197
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %async_pending, i32 0, i32 0, !dbg !14197
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14197
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !14197
  store i8* %2, i8** %__mptr, align 8, !dbg !14197
  br label %do.body, !dbg !14197

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14198

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !14197
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !14197
  %4 = bitcast i8* %add.ptr to %struct.async*, !dbg !14197
  store %struct.async* %4, %struct.async** %tmp, align 8, !dbg !14198
  %5 = load %struct.async*, %struct.async** %tmp, align 8, !dbg !14197
  store %struct.async* %5, %struct.async** %as, align 8, !dbg !14200
  br label %for.cond, !dbg !14200

for.cond:                                         ; preds = %do.end16, %do.end
  %6 = load %struct.async*, %struct.async** %as, align 8, !dbg !14201
  %asynclist = getelementptr inbounds %struct.async, %struct.async* %6, i32 0, i32 0, !dbg !14201
  %7 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14201
  %async_pending1 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %7, i32 0, i32 4, !dbg !14201
  %cmp = icmp eq %struct.list_head* %asynclist, %async_pending1, !dbg !14201
  %lnot = xor i1 %cmp, true, !dbg !14201
  br i1 %lnot, label %for.body, label %for.end, !dbg !14200

for.body:                                         ; preds = %for.cond
  %8 = load %struct.async*, %struct.async** %as, align 8, !dbg !14203
  %bulk_addr2 = getelementptr inbounds %struct.async, %struct.async* %8, i32 0, i32 13, !dbg !14206
  %9 = load i8, i8* %bulk_addr2, align 8, !dbg !14206
  %conv = zext i8 %9 to i32, !dbg !14203
  %10 = load i32, i32* %bulk_addr.addr, align 4, !dbg !14207
  %cmp3 = icmp eq i32 %conv, %10, !dbg !14208
  br i1 %cmp3, label %if.then, label %if.end11, !dbg !14209

if.then:                                          ; preds = %for.body
  %11 = load %struct.async*, %struct.async** %as, align 8, !dbg !14210
  %bulk_status = getelementptr inbounds %struct.async, %struct.async* %11, i32 0, i32 14, !dbg !14213
  %12 = load i8, i8* %bulk_status, align 1, !dbg !14213
  %conv5 = zext i8 %12 to i32, !dbg !14210
  %cmp6 = icmp ne i32 %conv5, 1, !dbg !14214
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !14215

if.then8:                                         ; preds = %if.then
  br label %rescan, !dbg !14216

if.end:                                           ; preds = %if.then
  %13 = load %struct.async*, %struct.async** %as, align 8, !dbg !14217
  %bulk_status9 = getelementptr inbounds %struct.async, %struct.async* %13, i32 0, i32 14, !dbg !14218
  store i8 2, i8* %bulk_status9, align 1, !dbg !14219
  %14 = load %struct.async*, %struct.async** %as, align 8, !dbg !14220
  %bulk_addr10 = getelementptr inbounds %struct.async, %struct.async* %14, i32 0, i32 13, !dbg !14221
  store i8 0, i8* %bulk_addr10, align 8, !dbg !14222
  br label %if.end11, !dbg !14223

if.end11:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !14224

for.inc:                                          ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !14225, metadata !DIExpression()), !dbg !14227
  %15 = load %struct.async*, %struct.async** %as, align 8, !dbg !14227
  %asynclist13 = getelementptr inbounds %struct.async, %struct.async* %15, i32 0, i32 0, !dbg !14227
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %asynclist13, i32 0, i32 0, !dbg !14227
  %16 = load %struct.list_head*, %struct.list_head** %next14, align 8, !dbg !14227
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !14227
  store i8* %17, i8** %__mptr12, align 8, !dbg !14227
  br label %do.body15, !dbg !14227

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !14228

do.end16:                                         ; preds = %do.body15
  %18 = load i8*, i8** %__mptr12, align 8, !dbg !14227
  %add.ptr18 = getelementptr i8, i8* %18, i64 0, !dbg !14227
  %19 = bitcast i8* %add.ptr18 to %struct.async*, !dbg !14227
  store %struct.async* %19, %struct.async** %tmp17, align 8, !dbg !14228
  %20 = load %struct.async*, %struct.async** %tmp17, align 8, !dbg !14227
  store %struct.async* %20, %struct.async** %as, align 8, !dbg !14201
  br label %for.cond, !dbg !14201, !llvm.loop !14230

for.end:                                          ; preds = %for.cond
  %21 = load i32, i32* %bulk_addr.addr, align 4, !dbg !14232
  %shl = shl i32 1, %21, !dbg !14233
  %22 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14234
  %disabled_bulk_eps = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %22, i32 0, i32 14, !dbg !14235
  %23 = load i32, i32* %disabled_bulk_eps, align 8, !dbg !14236
  %or = or i32 %23, %shl, !dbg !14236
  store i32 %or, i32* %disabled_bulk_eps, align 8, !dbg !14236
  br label %rescan, !dbg !14234

rescan:                                           ; preds = %if.then36, %for.end, %if.then8
  call void @llvm.dbg.label(metadata !14237), !dbg !14238
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !14239, metadata !DIExpression()), !dbg !14241
  %24 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14241
  %async_pending20 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %24, i32 0, i32 4, !dbg !14241
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %async_pending20, i32 0, i32 1, !dbg !14241
  %25 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !14241
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !14241
  store i8* %26, i8** %__mptr19, align 8, !dbg !14241
  br label %do.body21, !dbg !14241

do.body21:                                        ; preds = %rescan
  br label %do.end22, !dbg !14242

do.end22:                                         ; preds = %do.body21
  %27 = load i8*, i8** %__mptr19, align 8, !dbg !14241
  %add.ptr24 = getelementptr i8, i8* %27, i64 0, !dbg !14241
  %28 = bitcast i8* %add.ptr24 to %struct.async*, !dbg !14241
  store %struct.async* %28, %struct.async** %tmp23, align 8, !dbg !14242
  %29 = load %struct.async*, %struct.async** %tmp23, align 8, !dbg !14241
  store %struct.async* %29, %struct.async** %as, align 8, !dbg !14244
  br label %for.cond25, !dbg !14244

for.cond25:                                       ; preds = %do.end47, %do.end22
  %30 = load %struct.async*, %struct.async** %as, align 8, !dbg !14245
  %asynclist26 = getelementptr inbounds %struct.async, %struct.async* %30, i32 0, i32 0, !dbg !14245
  %31 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14245
  %async_pending27 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %31, i32 0, i32 4, !dbg !14245
  %cmp28 = icmp eq %struct.list_head* %asynclist26, %async_pending27, !dbg !14245
  %lnot30 = xor i1 %cmp28, true, !dbg !14245
  br i1 %lnot30, label %for.body31, label %for.end50, !dbg !14244

for.body31:                                       ; preds = %for.cond25
  %32 = load %struct.async*, %struct.async** %as, align 8, !dbg !14246
  %bulk_status32 = getelementptr inbounds %struct.async, %struct.async* %32, i32 0, i32 14, !dbg !14247
  %33 = load i8, i8* %bulk_status32, align 1, !dbg !14247
  %conv33 = zext i8 %33 to i32, !dbg !14246
  %cmp34 = icmp eq i32 %conv33, 2, !dbg !14248
  br i1 %cmp34, label %if.then36, label %if.end41, !dbg !14249

if.then36:                                        ; preds = %for.body31
  %34 = load %struct.async*, %struct.async** %as, align 8, !dbg !14250
  %bulk_status37 = getelementptr inbounds %struct.async, %struct.async* %34, i32 0, i32 14, !dbg !14251
  store i8 0, i8* %bulk_status37, align 1, !dbg !14252
  %35 = load %struct.async*, %struct.async** %as, align 8, !dbg !14253
  %urb38 = getelementptr inbounds %struct.async, %struct.async* %35, i32 0, i32 9, !dbg !14254
  %36 = load %struct.urb*, %struct.urb** %urb38, align 8, !dbg !14254
  store %struct.urb* %36, %struct.urb** %urb, align 8, !dbg !14255
  %37 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14256
  %call = call %struct.urb* @usb_get_urb(%struct.urb* %37) #11, !dbg !14257
  %38 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14258
  %lock = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %38, i32 0, i32 3, !dbg !14259
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14260, !srcloc !14262
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14263
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !14263
  %rlock.i = bitcast %union.anon.0* %40 to %struct.raw_spinlock*, !dbg !14263
  %41 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14265
  %call39 = call i32 @usb_unlink_urb(%struct.urb* %41) #11, !dbg !14266
  %42 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14267
  call void @usb_free_urb(%struct.urb* %42) #11, !dbg !14268
  %43 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14269
  %lock40 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %43, i32 0, i32 3, !dbg !14270
  store %struct.spinlock* %lock40, %struct.spinlock** %lock.addr.i51, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14271, !srcloc !14273
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i51, align 8, !dbg !14274
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !14274
  %rlock.i52 = bitcast %union.anon.0* %45 to %struct.raw_spinlock*, !dbg !14274
  br label %rescan, !dbg !14276

if.end41:                                         ; preds = %for.body31
  br label %for.inc42, !dbg !14277

for.inc42:                                        ; preds = %if.end41
  call void @llvm.dbg.declare(metadata i8** %__mptr43, metadata !14278, metadata !DIExpression()), !dbg !14280
  %46 = load %struct.async*, %struct.async** %as, align 8, !dbg !14280
  %asynclist44 = getelementptr inbounds %struct.async, %struct.async* %46, i32 0, i32 0, !dbg !14280
  %prev45 = getelementptr inbounds %struct.list_head, %struct.list_head* %asynclist44, i32 0, i32 1, !dbg !14280
  %47 = load %struct.list_head*, %struct.list_head** %prev45, align 8, !dbg !14280
  %48 = bitcast %struct.list_head* %47 to i8*, !dbg !14280
  store i8* %48, i8** %__mptr43, align 8, !dbg !14280
  br label %do.body46, !dbg !14280

do.body46:                                        ; preds = %for.inc42
  br label %do.end47, !dbg !14281

do.end47:                                         ; preds = %do.body46
  %49 = load i8*, i8** %__mptr43, align 8, !dbg !14280
  %add.ptr49 = getelementptr i8, i8* %49, i64 0, !dbg !14280
  %50 = bitcast i8* %add.ptr49 to %struct.async*, !dbg !14280
  store %struct.async* %50, %struct.async** %tmp48, align 8, !dbg !14281
  %51 = load %struct.async*, %struct.async** %tmp48, align 8, !dbg !14280
  store %struct.async* %51, %struct.async** %as, align 8, !dbg !14245
  br label %for.cond25, !dbg !14245, !llvm.loop !14283

for.end50:                                        ; preds = %for.cond25
  ret void, !dbg !14285
}

; Function Attrs: noredzone
declare dso_local i32 @kill_pid_usb_asyncio(i32, i32, i8*, %struct.pid*, %struct.cred*) #2

; Function Attrs: noredzone
declare dso_local i32 @usb_unlink_urb(%struct.urb*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #0 !dbg !14286 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !14290, metadata !DIExpression()), !dbg !14291
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !14292
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #11, !dbg !14293
  ret void, !dbg !14294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !14295 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !14298, metadata !DIExpression()), !dbg !14299
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !14300, metadata !DIExpression()), !dbg !14301
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !14302
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !14303
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #11, !dbg !14304
  ret void, !dbg !14305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !14306 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !14309, metadata !DIExpression()), !dbg !14313
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !14317, metadata !DIExpression()), !dbg !14318
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !14319, metadata !DIExpression()), !dbg !14321
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !9331, metadata !DIExpression()), !dbg !14322
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9335, metadata !DIExpression()), !dbg !14324
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !14325, metadata !DIExpression()), !dbg !14326
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !14327, metadata !DIExpression()), !dbg !14328
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !14329, metadata !DIExpression()), !dbg !14330
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !14331, metadata !DIExpression()), !dbg !14332
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !14333, metadata !DIExpression()), !dbg !14334
  call void @llvm.dbg.declare(metadata i32* %old, metadata !14335, metadata !DIExpression()), !dbg !14336
  %0 = load i32, i32* %i.addr, align 4, !dbg !14337
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !14338
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !14339
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14340
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !14340
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14341
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !14342
  %conv.i.i = trunc i64 %5 to i32, !dbg !14342
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #13, !dbg !14343
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14344
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !14344
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #13, !dbg !14344
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !14345
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14346
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !14321
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !14321
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !14321
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !14321
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !14321
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #7, !dbg !14321, !srcloc !14347
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !14321
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !14321
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !14321
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !14321
  store i32 %15, i32* %old, align 4, !dbg !14336
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !14348
  %tobool = icmp ne i32* %16, null, !dbg !14348
  br i1 %tobool, label %if.then, label %if.end, !dbg !14350

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !14351
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !14352
  store i32 %17, i32* %18, align 4, !dbg !14353
  br label %if.end, !dbg !14354

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !14355
  %tobool1 = icmp ne i32 %19, 0, !dbg !14355
  %lnot = xor i1 %tobool1, true, !dbg !14355
  %lnot2 = xor i1 %lnot, true, !dbg !14355
  %lnot3 = xor i1 %lnot2, true, !dbg !14355
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !14355
  %conv = sext i32 %lnot.ext to i64, !dbg !14355
  %tobool4 = icmp ne i64 %conv, 0, !dbg !14355
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !14357

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !14358
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #11, !dbg !14359
  br label %if.end17, !dbg !14359

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !14360
  %cmp = icmp slt i32 %21, 0, !dbg !14360
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !14360

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !14360
  %23 = load i32, i32* %i.addr, align 4, !dbg !14360
  %add = add i32 %22, %23, !dbg !14360
  %cmp7 = icmp slt i32 %add, 0, !dbg !14360
  br label %lor.end, !dbg !14360

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !14360
  %lnot11 = xor i1 %lnot9, true, !dbg !14360
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !14360
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !14360
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !14360
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !14362

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !14363
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #11, !dbg !14364
  br label %if.end16, !dbg !14364

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !14365
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.cred* @get_new_cred(%struct.cred* %cred) #0 !dbg !14366 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !14369, metadata !DIExpression()), !dbg !14373
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !9331, metadata !DIExpression()), !dbg !14377
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9335, metadata !DIExpression()), !dbg !14379
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !14380, metadata !DIExpression()), !dbg !14381
  %cred.addr = alloca %struct.cred*, align 8
  store %struct.cred* %cred, %struct.cred** %cred.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cred** %cred.addr, metadata !14382, metadata !DIExpression()), !dbg !14383
  %0 = load %struct.cred*, %struct.cred** %cred.addr, align 8, !dbg !14384
  %usage = getelementptr inbounds %struct.cred, %struct.cred* %0, i32 0, i32 0, !dbg !14385
  store %struct.atomic_t* %usage, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14386
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !14386
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14387
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !14388
  %conv.i.i = trunc i64 %4 to i32, !dbg !14388
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #13, !dbg !14389
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14390
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !14390
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #13, !dbg !14390
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14391
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !14392
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !14393
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #7, !dbg !14394, !srcloc !14395
  %9 = load %struct.cred*, %struct.cred** %cred.addr, align 8, !dbg !14396
  ret %struct.cred* %9, !dbg !14397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !14398 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !14399, metadata !DIExpression()), !dbg !14401
  %0 = load i64, i64* %__edi, align 8, !dbg !14401
  store i64 %0, i64* %__edi, align 8, !dbg !14401
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !14402, metadata !DIExpression()), !dbg !14401
  %1 = load i64, i64* %__esi, align 8, !dbg !14401
  store i64 %1, i64* %__esi, align 8, !dbg !14401
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !14403, metadata !DIExpression()), !dbg !14401
  %2 = load i64, i64* %__edx, align 8, !dbg !14401
  store i64 %2, i64* %__edx, align 8, !dbg !14401
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !14404, metadata !DIExpression()), !dbg !14401
  %3 = load i64, i64* %__ecx, align 8, !dbg !14401
  store i64 %3, i64* %__ecx, align 8, !dbg !14401
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !14405, metadata !DIExpression()), !dbg !14401
  %4 = load i64, i64* %__eax, align 8, !dbg !14401
  store i64 %4, i64* %__eax, align 8, !dbg !14401
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !14401
  %6 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !14401
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #7, !dbg !14401, !srcloc !14406
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !14401
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !14401
  store i64 %asmresult, i64* %__eax, align 8, !dbg !14401
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult1), !dbg !14401
  ret void, !dbg !14407
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.async* @async_getpending(%struct.usb_dev_state* %ps, i8* %userurb) #0 !dbg !14408 {
entry:
  %retval = alloca %struct.async*, align 8
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %userurb.addr = alloca i8*, align 8
  %as = alloca %struct.async*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.async*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp10 = alloca %struct.async*, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !14411, metadata !DIExpression()), !dbg !14412
  store i8* %userurb, i8** %userurb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userurb.addr, metadata !14413, metadata !DIExpression()), !dbg !14414
  call void @llvm.dbg.declare(metadata %struct.async** %as, metadata !14415, metadata !DIExpression()), !dbg !14416
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14417, metadata !DIExpression()), !dbg !14420
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14420
  %async_pending = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 4, !dbg !14420
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %async_pending, i32 0, i32 0, !dbg !14420
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14420
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !14420
  store i8* %2, i8** %__mptr, align 8, !dbg !14420
  br label %do.body, !dbg !14420

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14421

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !14420
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !14420
  %4 = bitcast i8* %add.ptr to %struct.async*, !dbg !14420
  store %struct.async* %4, %struct.async** %tmp, align 8, !dbg !14421
  %5 = load %struct.async*, %struct.async** %tmp, align 8, !dbg !14420
  store %struct.async* %5, %struct.async** %as, align 8, !dbg !14423
  br label %for.cond, !dbg !14423

for.cond:                                         ; preds = %do.end9, %do.end
  %6 = load %struct.async*, %struct.async** %as, align 8, !dbg !14424
  %asynclist = getelementptr inbounds %struct.async, %struct.async* %6, i32 0, i32 0, !dbg !14424
  %7 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14424
  %async_pending1 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %7, i32 0, i32 4, !dbg !14424
  %cmp = icmp eq %struct.list_head* %asynclist, %async_pending1, !dbg !14424
  %lnot = xor i1 %cmp, true, !dbg !14424
  br i1 %lnot, label %for.body, label %for.end, !dbg !14423

for.body:                                         ; preds = %for.cond
  %8 = load %struct.async*, %struct.async** %as, align 8, !dbg !14426
  %userurb2 = getelementptr inbounds %struct.async, %struct.async* %8, i32 0, i32 7, !dbg !14428
  %9 = load i8*, i8** %userurb2, align 8, !dbg !14428
  %10 = load i8*, i8** %userurb.addr, align 8, !dbg !14429
  %cmp3 = icmp eq i8* %9, %10, !dbg !14430
  br i1 %cmp3, label %if.then, label %if.end, !dbg !14431

if.then:                                          ; preds = %for.body
  %11 = load %struct.async*, %struct.async** %as, align 8, !dbg !14432
  %asynclist4 = getelementptr inbounds %struct.async, %struct.async* %11, i32 0, i32 0, !dbg !14434
  call void @list_del_init(%struct.list_head* %asynclist4) #11, !dbg !14435
  %12 = load %struct.async*, %struct.async** %as, align 8, !dbg !14436
  store %struct.async* %12, %struct.async** %retval, align 8, !dbg !14437
  br label %return, !dbg !14437

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !14429

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !14438, metadata !DIExpression()), !dbg !14440
  %13 = load %struct.async*, %struct.async** %as, align 8, !dbg !14440
  %asynclist6 = getelementptr inbounds %struct.async, %struct.async* %13, i32 0, i32 0, !dbg !14440
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %asynclist6, i32 0, i32 0, !dbg !14440
  %14 = load %struct.list_head*, %struct.list_head** %next7, align 8, !dbg !14440
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !14440
  store i8* %15, i8** %__mptr5, align 8, !dbg !14440
  br label %do.body8, !dbg !14440

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !14441

do.end9:                                          ; preds = %do.body8
  %16 = load i8*, i8** %__mptr5, align 8, !dbg !14440
  %add.ptr11 = getelementptr i8, i8* %16, i64 0, !dbg !14440
  %17 = bitcast i8* %add.ptr11 to %struct.async*, !dbg !14440
  store %struct.async* %17, %struct.async** %tmp10, align 8, !dbg !14441
  %18 = load %struct.async*, %struct.async** %tmp10, align 8, !dbg !14440
  store %struct.async* %18, %struct.async** %as, align 8, !dbg !14424
  br label %for.cond, !dbg !14424, !llvm.loop !14443

for.end:                                          ; preds = %for.cond
  store %struct.async* null, %struct.async** %retval, align 8, !dbg !14445
  br label %return, !dbg !14445

return:                                           ; preds = %for.end, %if.then
  %19 = load %struct.async*, %struct.async** %retval, align 8, !dbg !14446
  ret %struct.async* %19, !dbg !14446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @releaseintf(%struct.usb_dev_state* %ps, i32 %ifnum) #0 !dbg !14447 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %ifnum.addr = alloca i32, align 4
  %dev = alloca %struct.usb_device*, align 8
  %intf = alloca %struct.usb_interface*, align 8
  %err = alloca i32, align 4
  %old_suppress = alloca i32, align 4
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !14448, metadata !DIExpression()), !dbg !14449
  store i32 %ifnum, i32* %ifnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ifnum.addr, metadata !14450, metadata !DIExpression()), !dbg !14451
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev, metadata !14452, metadata !DIExpression()), !dbg !14453
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf, metadata !14454, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.declare(metadata i32* %err, metadata !14456, metadata !DIExpression()), !dbg !14457
  store i32 -22, i32* %err, align 4, !dbg !14458
  %0 = load i32, i32* %ifnum.addr, align 4, !dbg !14459
  %conv = zext i32 %0 to i64, !dbg !14459
  %cmp = icmp uge i64 %conv, 64, !dbg !14461
  br i1 %cmp, label %if.then, label %if.end, !dbg !14462

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %err, align 4, !dbg !14463
  store i32 %1, i32* %retval, align 4, !dbg !14464
  br label %return, !dbg !14464

if.end:                                           ; preds = %entry
  %2 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14465
  %dev2 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %2, i32 0, i32 1, !dbg !14466
  %3 = load %struct.usb_device*, %struct.usb_device** %dev2, align 8, !dbg !14466
  store %struct.usb_device* %3, %struct.usb_device** %dev, align 8, !dbg !14467
  %4 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !14468
  %5 = load i32, i32* %ifnum.addr, align 4, !dbg !14469
  %call = call %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device* %4, i32 %5) #11, !dbg !14470
  store %struct.usb_interface* %call, %struct.usb_interface** %intf, align 8, !dbg !14471
  %6 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !14472
  %tobool = icmp ne %struct.usb_interface* %6, null, !dbg !14472
  br i1 %tobool, label %if.else, label %if.then3, !dbg !14474

if.then3:                                         ; preds = %if.end
  store i32 -2, i32* %err, align 4, !dbg !14475
  br label %if.end12, !dbg !14476

if.else:                                          ; preds = %if.end
  %7 = load i32, i32* %ifnum.addr, align 4, !dbg !14477
  %conv4 = zext i32 %7 to i64, !dbg !14477
  %8 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14479
  %ifclaimed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 13, !dbg !14480
  %call5 = call zeroext i1 @test_and_clear_bit(i64 %conv4, i64* %ifclaimed) #11, !dbg !14481
  br i1 %call5, label %if.then6, label %if.end11, !dbg !14482

if.then6:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %old_suppress, metadata !14483, metadata !DIExpression()), !dbg !14485
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !14486
  %dev7 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %9, i32 0, i32 7, !dbg !14487
  %call8 = call i32 @dev_get_uevent_suppress(%struct.device* %dev7) #11, !dbg !14488
  store i32 %call8, i32* %old_suppress, align 4, !dbg !14489
  %10 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !14490
  %dev9 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %10, i32 0, i32 7, !dbg !14491
  call void @dev_set_uevent_suppress(%struct.device* %dev9, i32 1) #11, !dbg !14492
  %11 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !14493
  call void @usb_driver_release_interface(%struct.usb_driver* @usbfs_driver, %struct.usb_interface* %11) #11, !dbg !14494
  %12 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !14495
  %dev10 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %12, i32 0, i32 7, !dbg !14496
  %13 = load i32, i32* %old_suppress, align 4, !dbg !14497
  call void @dev_set_uevent_suppress(%struct.device* %dev10, i32 %13) #11, !dbg !14498
  store i32 0, i32* %err, align 4, !dbg !14499
  br label %if.end11, !dbg !14500

if.end11:                                         ; preds = %if.then6, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then3
  %14 = load i32, i32* %err, align 4, !dbg !14501
  store i32 %14, i32* %retval, align 4, !dbg !14502
  br label %return, !dbg !14502

return:                                           ; preds = %if.end12, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !14503
  ret i32 %15, !dbg !14503
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_clear_bit(i64 %nr, i64* %addr) #0 !dbg !14504 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !14507, metadata !DIExpression()), !dbg !14509
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !14511, metadata !DIExpression()), !dbg !14512
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !14513, metadata !DIExpression()), !dbg !14515
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !9331, metadata !DIExpression()), !dbg !14516
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9335, metadata !DIExpression()), !dbg !14518
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !14519, metadata !DIExpression()), !dbg !14520
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !14521, metadata !DIExpression()), !dbg !14522
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !14523
  %1 = load i64, i64* %nr.addr, align 8, !dbg !14524
  %div = sdiv i64 %1, 64, !dbg !14524
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !14525
  %2 = bitcast i64* %add.ptr to i8*, !dbg !14523
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !14526
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !14527
  %conv.i = trunc i64 %4 to i32, !dbg !14527
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !14528
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !14529
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !14529
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #13, !dbg !14529
  %7 = load i64, i64* %nr.addr, align 8, !dbg !14530
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !14531
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !14515
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !14515
  %11 = call i8 asm sideeffect " btrq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #7, !dbg !14515, !srcloc !14532
  store i8 %11, i8* %c.i, align 1, !dbg !14515
  %12 = load i8, i8* %c.i, align 1, !dbg !14515
  %tobool.i = trunc i8 %12 to i1, !dbg !14515
  %frombool.i = zext i1 %tobool.i to i8, !dbg !14515
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !14515
  %13 = load i8, i8* %tmp.i, align 1, !dbg !14515
  %tobool1.i = trunc i8 %13 to i1, !dbg !14515
  ret i1 %tobool1.i, !dbg !14533
}

; Function Attrs: noredzone
declare dso_local void @usb_driver_release_interface(%struct.usb_driver*, %struct.usb_interface*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @proc_ioctl(%struct.usb_dev_state* %ps, %struct.usbdevfs_ioctl* %ctl) #0 !dbg !14534 {
entry:
  %retval.i.i109 = alloca i1, align 1
  %addr.addr.i.i110 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i110, metadata !5056, metadata !DIExpression()), !dbg !14538
  %bytes.addr.i.i111 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i111, metadata !5077, metadata !DIExpression()), !dbg !14542
  %is_source.addr.i.i112 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i112, metadata !5079, metadata !DIExpression()), !dbg !14543
  %sz.i.i113 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i113, metadata !5081, metadata !DIExpression()), !dbg !14544
  %__ret_warn_on.i.i114 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i114, metadata !5083, metadata !DIExpression()), !dbg !14545
  %tmp.i.i115 = alloca i64, align 8
  %to.addr.i116 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i116, metadata !5087, metadata !DIExpression()), !dbg !14546
  %from.addr.i117 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i117, metadata !5089, metadata !DIExpression()), !dbg !14547
  %n.addr.i118 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i118, metadata !5091, metadata !DIExpression()), !dbg !14548
  %retval.i.i99 = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !5056, metadata !DIExpression()), !dbg !14549
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !5077, metadata !DIExpression()), !dbg !14557
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !5079, metadata !DIExpression()), !dbg !14558
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !5081, metadata !DIExpression()), !dbg !14559
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !5083, metadata !DIExpression()), !dbg !14560
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !6977, metadata !DIExpression()), !dbg !14561
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !6979, metadata !DIExpression()), !dbg !14562
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !6981, metadata !DIExpression()), !dbg !14563
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !10550, metadata !DIExpression()), !dbg !14564
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !10562, metadata !DIExpression()), !dbg !14567
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !10564, metadata !DIExpression()), !dbg !14568
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !10566, metadata !DIExpression()), !dbg !14569
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !10568, metadata !DIExpression()), !dbg !14570
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !10574, metadata !DIExpression()), !dbg !14572
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !10580, metadata !DIExpression()), !dbg !14574
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !10589, metadata !DIExpression()), !dbg !14577
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !10591, metadata !DIExpression()), !dbg !14578
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10593, metadata !DIExpression()), !dbg !14579
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !10595, metadata !DIExpression()), !dbg !14580
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !10597, metadata !DIExpression()), !dbg !14581
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10599, metadata !DIExpression()), !dbg !14582
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !10601, metadata !DIExpression()), !dbg !14583
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !10603, metadata !DIExpression()), !dbg !14584
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %ctl.addr = alloca %struct.usbdevfs_ioctl*, align 8
  %size = alloca i32, align 4
  %buf = alloca i8*, align 8
  %retval1 = alloca i32, align 4
  %intf = alloca %struct.usb_interface*, align 8
  %driver = alloca %struct.usb_driver*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.usb_driver*, align 8
  %__mptr56 = alloca i8*, align 8
  %tmp61 = alloca %struct.usb_driver*, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !14585, metadata !DIExpression()), !dbg !14586
  store %struct.usbdevfs_ioctl* %ctl, %struct.usbdevfs_ioctl** %ctl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_ioctl** %ctl.addr, metadata !14587, metadata !DIExpression()), !dbg !14588
  call void @llvm.dbg.declare(metadata i32* %size, metadata !14589, metadata !DIExpression()), !dbg !14590
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14591, metadata !DIExpression()), !dbg !14592
  store i8* null, i8** %buf, align 8, !dbg !14592
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !14593, metadata !DIExpression()), !dbg !14594
  store i32 0, i32* %retval1, align 4, !dbg !14594
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf, metadata !14595, metadata !DIExpression()), !dbg !14596
  store %struct.usb_interface* null, %struct.usb_interface** %intf, align 8, !dbg !14596
  call void @llvm.dbg.declare(metadata %struct.usb_driver** %driver, metadata !14597, metadata !DIExpression()), !dbg !14598
  store %struct.usb_driver* null, %struct.usb_driver** %driver, align 8, !dbg !14598
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14599
  %privileges_dropped = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 18, !dbg !14601
  %1 = load i8, i8* %privileges_dropped, align 1, !dbg !14601
  %tobool = trunc i8 %1 to i1, !dbg !14601
  br i1 %tobool, label %if.then, label %if.end, !dbg !14602

if.then:                                          ; preds = %entry
  store i32 -13, i32* %retval, align 4, !dbg !14603
  br label %return, !dbg !14603

if.end:                                           ; preds = %entry
  %2 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14604
  %call = call i32 @connected(%struct.usb_dev_state* %2) #11, !dbg !14606
  %tobool2 = icmp ne i32 %call, 0, !dbg !14606
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !14607

if.then3:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !14608
  br label %return, !dbg !14608

if.end4:                                          ; preds = %if.end
  %3 = load %struct.usbdevfs_ioctl*, %struct.usbdevfs_ioctl** %ctl.addr, align 8, !dbg !14609
  %ioctl_code = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %3, i32 0, i32 1, !dbg !14609
  %4 = load i32, i32* %ioctl_code, align 4, !dbg !14609
  %shr = ashr i32 %4, 16, !dbg !14609
  %and = and i32 %shr, 16383, !dbg !14609
  store i32 %and, i32* %size, align 4, !dbg !14610
  %5 = load i32, i32* %size, align 4, !dbg !14611
  %cmp = icmp sgt i32 %5, 0, !dbg !14612
  br i1 %cmp, label %if.then5, label %if.end24, !dbg !14613

if.then5:                                         ; preds = %if.end4
  %6 = load i32, i32* %size, align 4, !dbg !14614
  %conv = sext i32 %6 to i64, !dbg !14614
  store i64 %conv, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %7 = load i64, i64* %size.addr.i, align 8, !dbg !14615
  %8 = call i1 @llvm.is.constant.i64(i64 %7) #7, !dbg !14616
  br i1 %8, label %if.then.i, label %if.end9.i, !dbg !14617

if.then.i:                                        ; preds = %if.then5
  %9 = load i64, i64* %size.addr.i, align 8, !dbg !14618
  %cmp.i = icmp ugt i64 %9, 8192, !dbg !14619
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14620

if.then1.i:                                       ; preds = %if.then.i
  %10 = load i64, i64* %size.addr.i, align 8, !dbg !14621
  %11 = load i32, i32* %flags.addr.i, align 4, !dbg !14622
  store i64 %10, i64* %size.addr.i.i, align 8
  store i32 %11, i32* %flags.addr.i.i, align 4
  %12 = load i64, i64* %size.addr.i.i, align 8, !dbg !14623
  %call.i.i = call i32 @get_order(i64 %12) #15, !dbg !14624
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !14581
  %13 = load i64, i64* %size.addr.i.i, align 8, !dbg !14625
  %14 = load i32, i32* %flags.addr.i.i, align 4, !dbg !14626
  %15 = load i32, i32* %order.i.i, align 4, !dbg !14627
  store i64 %13, i64* %size.addr.i.i.i, align 8
  store i32 %14, i32* %flags.addr.i.i.i, align 4
  store i32 %15, i32* %order.addr.i.i.i, align 4
  %16 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !14628
  %17 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !14629
  %18 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !14630
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %16, i32 %17, i32 %18) #13, !dbg !14631
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !14631
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !14631
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !14631
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !14631
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !14632
  br label %kmalloc.exit, !dbg !14632

if.end.i:                                         ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !14633
  store i64 %19, i64* %size.addr.i11.i, align 8
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14634
  %tobool.i.i = icmp ne i64 %20, 0, !dbg !14634
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !14635

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !14636
  br label %kmalloc_index.exit.i, !dbg !14636

if.end.i.i:                                       ; preds = %if.end.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14637
  %cmp.i.i = icmp ule i64 %21, 8, !dbg !14638
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !14639

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14640
  br label %kmalloc_index.exit.i, !dbg !14640

if.end2.i.i:                                      ; preds = %if.end.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14641
  %cmp3.i.i = icmp ugt i64 %22, 64, !dbg !14642
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !14643

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14644
  %cmp4.i.i = icmp ule i64 %23, 96, !dbg !14645
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !14646

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !14647
  br label %kmalloc_index.exit.i, !dbg !14647

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14648
  %cmp7.i.i = icmp ugt i64 %24, 128, !dbg !14649
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !14650

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14651
  %cmp9.i.i = icmp ule i64 %25, 192, !dbg !14652
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !14653

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !14654
  br label %kmalloc_index.exit.i, !dbg !14654

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14655
  %cmp12.i.i = icmp ule i64 %26, 8, !dbg !14656
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !14657

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14658
  br label %kmalloc_index.exit.i, !dbg !14658

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14659
  %cmp15.i.i = icmp ule i64 %27, 16, !dbg !14660
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !14661

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !14662
  br label %kmalloc_index.exit.i, !dbg !14662

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14663
  %cmp18.i.i = icmp ule i64 %28, 32, !dbg !14664
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !14665

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !14666
  br label %kmalloc_index.exit.i, !dbg !14666

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14667
  %cmp21.i.i = icmp ule i64 %29, 64, !dbg !14668
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !14669

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !14670
  br label %kmalloc_index.exit.i, !dbg !14670

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14671
  %cmp24.i.i = icmp ule i64 %30, 128, !dbg !14672
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !14673

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !14674
  br label %kmalloc_index.exit.i, !dbg !14674

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14675
  %cmp27.i.i = icmp ule i64 %31, 256, !dbg !14676
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !14677

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !14678
  br label %kmalloc_index.exit.i, !dbg !14678

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14679
  %cmp30.i.i = icmp ule i64 %32, 512, !dbg !14680
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !14681

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !14682
  br label %kmalloc_index.exit.i, !dbg !14682

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14683
  %cmp33.i.i = icmp ule i64 %33, 1024, !dbg !14684
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !14685

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !14686
  br label %kmalloc_index.exit.i, !dbg !14686

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14687
  %cmp36.i.i = icmp ule i64 %34, 2048, !dbg !14688
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !14689

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !14690
  br label %kmalloc_index.exit.i, !dbg !14690

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14691
  %cmp39.i.i = icmp ule i64 %35, 4096, !dbg !14692
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !14693

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !14694
  br label %kmalloc_index.exit.i, !dbg !14694

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14695
  %cmp42.i.i = icmp ule i64 %36, 8192, !dbg !14696
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !14697

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !14698
  br label %kmalloc_index.exit.i, !dbg !14698

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14699
  %cmp45.i.i = icmp ule i64 %37, 16384, !dbg !14700
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !14701

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !14702
  br label %kmalloc_index.exit.i, !dbg !14702

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14703
  %cmp48.i.i = icmp ule i64 %38, 32768, !dbg !14704
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !14705

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !14706
  br label %kmalloc_index.exit.i, !dbg !14706

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14707
  %cmp51.i.i = icmp ule i64 %39, 65536, !dbg !14708
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !14709

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !14710
  br label %kmalloc_index.exit.i, !dbg !14710

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14711
  %cmp54.i.i = icmp ule i64 %40, 131072, !dbg !14712
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !14713

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !14714
  br label %kmalloc_index.exit.i, !dbg !14714

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14715
  %cmp57.i.i = icmp ule i64 %41, 262144, !dbg !14716
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !14717

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !14718
  br label %kmalloc_index.exit.i, !dbg !14718

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14719
  %cmp60.i.i = icmp ule i64 %42, 524288, !dbg !14720
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !14721

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !14722
  br label %kmalloc_index.exit.i, !dbg !14722

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14723
  %cmp63.i.i = icmp ule i64 %43, 1048576, !dbg !14724
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !14725

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !14726
  br label %kmalloc_index.exit.i, !dbg !14726

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14727
  %cmp66.i.i = icmp ule i64 %44, 2097152, !dbg !14728
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !14729

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !14730
  br label %kmalloc_index.exit.i, !dbg !14730

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14731
  %cmp69.i.i = icmp ule i64 %45, 4194304, !dbg !14732
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !14733

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !14734
  br label %kmalloc_index.exit.i, !dbg !14734

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14735
  %cmp72.i.i = icmp ule i64 %46, 8388608, !dbg !14736
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !14737

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !14738
  br label %kmalloc_index.exit.i, !dbg !14738

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14739
  %cmp75.i.i = icmp ule i64 %47, 16777216, !dbg !14740
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !14741

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !14742
  br label %kmalloc_index.exit.i, !dbg !14742

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14743
  %cmp78.i.i = icmp ule i64 %48, 33554432, !dbg !14744
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !14745

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !14746
  br label %kmalloc_index.exit.i, !dbg !14746

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14747
  %cmp81.i.i = icmp ule i64 %49, 67108864, !dbg !14748
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !14749

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !14750
  br label %kmalloc_index.exit.i, !dbg !14750

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !14751, !srcloc !10853
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 214) #7, !dbg !14752, !srcloc !10857
  unreachable, !dbg !14753

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %50 = load i32, i32* %retval.i.i, align 4, !dbg !14754
  store i32 %50, i32* %index.i, align 4, !dbg !14755
  %51 = load i32, i32* %index.i, align 4, !dbg !14756
  %tobool.i = icmp ne i32 %51, 0, !dbg !14756
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !14757

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !14758
  br label %kmalloc.exit, !dbg !14758

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !14759
  store i32 %52, i32* %flags.addr.i13.i, align 4
  %53 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14760
  %and.i.i = and i32 %53, 17, !dbg !14760
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !14760
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !14760
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !14760
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !14760
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !14761

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !14762
  br label %kmalloc_type.exit.i, !dbg !14762

if.end.i16.i:                                     ; preds = %if.end4.i
  %54 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14763
  %and2.i.i = and i32 %54, 1, !dbg !14764
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !14763
  %55 = zext i1 %tobool3.i.i to i64, !dbg !14763
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !14763
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !14765
  br label %kmalloc_type.exit.i, !dbg !14765

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %56 = load i32, i32* %retval.i12.i, align 4, !dbg !14766
  %idxprom.i = zext i32 %56 to i64, !dbg !14767
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !14767
  %57 = load i32, i32* %index.i, align 4, !dbg !14768
  %idxprom6.i = zext i32 %57 to i64, !dbg !14767
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !14767
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !14767
  %59 = load i32, i32* %flags.addr.i, align 4, !dbg !14769
  %60 = load i64, i64* %size.addr.i, align 8, !dbg !14770
  store %struct.kmem_cache* %58, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %59, i32* %flags.addr.i17.i, align 4
  store i64 %60, i64* %size.addr.i18.i, align 8
  %61 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14771
  %62 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14772
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %61, i32 %62) #13, !dbg !14773
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !14773
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !14773
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !14773
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !14773
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !14569
  %63 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14774
  %64 = load i8*, i8** %ret.i.i, align 8, !dbg !14775
  %65 = load i64, i64* %size.addr.i18.i, align 8, !dbg !14776
  %66 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14777
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %63, i8* %64, i64 %65, i32 %66) #13, !dbg !14778
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !14779
  %67 = load i8*, i8** %ret.i.i, align 8, !dbg !14780
  store i8* %67, i8** %retval.i, align 8, !dbg !14781
  br label %kmalloc.exit, !dbg !14781

if.end9.i:                                        ; preds = %if.then5
  %68 = load i64, i64* %size.addr.i, align 8, !dbg !14782
  %69 = load i32, i32* %flags.addr.i, align 4, !dbg !14783
  %call10.i = call noalias i8* @__kmalloc(i64 %68, i32 %69) #13, !dbg !14784
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !14784
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !14784
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !14784
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !14784
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !14785
  br label %kmalloc.exit, !dbg !14785

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %70 = load i8*, i8** %retval.i, align 8, !dbg !14786
  store i8* %70, i8** %buf, align 8, !dbg !14787
  %71 = load i8*, i8** %buf, align 8, !dbg !14788
  %cmp7 = icmp eq i8* %71, null, !dbg !14790
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !14791

if.then9:                                         ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !14792
  br label %return, !dbg !14792

if.end10:                                         ; preds = %kmalloc.exit
  %72 = load %struct.usbdevfs_ioctl*, %struct.usbdevfs_ioctl** %ctl.addr, align 8, !dbg !14793
  %ioctl_code11 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %72, i32 0, i32 1, !dbg !14793
  %73 = load i32, i32* %ioctl_code11, align 4, !dbg !14793
  %shr12 = ashr i32 %73, 30, !dbg !14793
  %and13 = and i32 %shr12, 3, !dbg !14793
  %and14 = and i32 %and13, 1, !dbg !14794
  %tobool15 = icmp ne i32 %and14, 0, !dbg !14794
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !14795

if.then16:                                        ; preds = %if.end10
  %74 = load i8*, i8** %buf, align 8, !dbg !14796
  %75 = load %struct.usbdevfs_ioctl*, %struct.usbdevfs_ioctl** %ctl.addr, align 8, !dbg !14797
  %data = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %75, i32 0, i32 2, !dbg !14798
  %76 = load i8*, i8** %data, align 8, !dbg !14798
  %77 = load i32, i32* %size, align 4, !dbg !14799
  %conv17 = sext i32 %77 to i64, !dbg !14799
  store i8* %74, i8** %to.addr.i, align 8
  store i8* %76, i8** %from.addr.i, align 8
  store i64 %conv17, i64* %n.addr.i, align 8
  %78 = load i8*, i8** %to.addr.i, align 8, !dbg !14800
  %79 = load i64, i64* %n.addr.i, align 8, !dbg !14800
  store i8* %78, i8** %addr.addr.i.i, align 8
  store i64 %79, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !14559
  %80 = load i32, i32* %sz.i.i, align 4, !dbg !14801
  %cmp.i.i100 = icmp sge i32 %80, 0, !dbg !14801
  br i1 %cmp.i.i100, label %land.rhs.i.i, label %land.end.i.i, !dbg !14801

land.rhs.i.i:                                     ; preds = %if.then16
  %81 = load i32, i32* %sz.i.i, align 4, !dbg !14801
  %conv.i.i101 = sext i32 %81 to i64, !dbg !14801
  %82 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14801
  %cmp1.i.i = icmp ult i64 %conv.i.i101, %82, !dbg !14801
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.then16
  %83 = phi i1 [ false, %if.then16 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !14802
  %lnot.i.i102 = xor i1 %83, true, !dbg !14801
  %lnot.ext.i.i103 = zext i1 %83 to i32, !dbg !14801
  %conv4.i.i = sext i32 %lnot.ext.i.i103 to i64, !dbg !14801
  br i1 %83, label %if.then.i.i104, label %if.end10.i.i, !dbg !14803

if.then.i.i104:                                   ; preds = %land.end.i.i
  %84 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14804
  %85 = call i1 @llvm.is.constant.i64(i64 %84) #7, !dbg !14805
  br i1 %85, label %if.else.i.i, label %if.then5.i.i105, !dbg !14806

if.then5.i.i105:                                  ; preds = %if.then.i.i104
  %86 = load i32, i32* %sz.i.i, align 4, !dbg !14807
  %87 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14808
  call void @copy_overflow(i32 %86, i64 %87) #13, !dbg !14809
  br label %if.end9.i.i, !dbg !14809

if.else.i.i:                                      ; preds = %if.then.i.i104
  %88 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !14810
  %tobool6.i.i = trunc i8 %88 to i1, !dbg !14810
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !14811

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #13, !dbg !14812
  br label %if.end.i.i106, !dbg !14812

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #13, !dbg !14813
  br label %if.end.i.i106

if.end.i.i106:                                    ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i106, %if.then5.i.i105
  store i1 false, i1* %retval.i.i99, align 1, !dbg !14814
  br label %check_copy_size.exit.i, !dbg !14814

if.end10.i.i:                                     ; preds = %land.end.i.i
  %89 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14560
  %cmp11.i.i = icmp ugt i64 %89, 2147483647, !dbg !14560
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !14560
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !14560
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !14560
  %90 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !14815
  %tobool17.i.i = icmp ne i32 %90, 0, !dbg !14815
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !14815
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !14815
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !14815
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !14560

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !14816, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !14817, !srcloc !5212
  br label %if.end31.i.i, !dbg !14818

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %91 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !14560
  %tobool32.i.i = icmp ne i32 %91, 0, !dbg !14560
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !14560
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !14560
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !14560
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !14815
  %92 = load i64, i64* %tmp.i.i, align 8, !dbg !14560
  %tobool38.i.i = icmp ne i64 %92, 0, !dbg !14819
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !14820

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i99, align 1, !dbg !14821
  br label %check_copy_size.exit.i, !dbg !14821

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %93 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !14822
  %94 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !14823
  %95 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !14824
  %tobool41.i.i = trunc i8 %95 to i1, !dbg !14824
  call void @check_object_size(i8* %93, i64 %94, i1 zeroext %tobool41.i.i) #13, !dbg !14825
  store i1 true, i1* %retval.i.i99, align 1, !dbg !14826
  br label %check_copy_size.exit.i, !dbg !14826

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %96 = load i1, i1* %retval.i.i99, align 1, !dbg !14827
  %lnot.i = xor i1 %96, true, !dbg !14800
  %lnot.ext.i = zext i1 %96 to i32, !dbg !14800
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !14800
  br i1 %96, label %if.then.i107, label %copy_from_user.exit, !dbg !14828

if.then.i107:                                     ; preds = %check_copy_size.exit.i
  %97 = load i8*, i8** %to.addr.i, align 8, !dbg !14829
  %98 = load i8*, i8** %from.addr.i, align 8, !dbg !14830
  %99 = load i64, i64* %n.addr.i, align 8, !dbg !14831
  %call2.i = call i64 @_copy_from_user(i8* %97, i8* %98, i64 %99) #13, !dbg !14832
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !14833
  br label %copy_from_user.exit, !dbg !14834

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i107
  %100 = load i64, i64* %n.addr.i, align 8, !dbg !14835
  %tobool19 = icmp ne i64 %100, 0, !dbg !14836
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !14837

if.then20:                                        ; preds = %copy_from_user.exit
  %101 = load i8*, i8** %buf, align 8, !dbg !14838
  call void @kfree(i8* %101) #11, !dbg !14840
  store i32 -14, i32* %retval, align 4, !dbg !14841
  br label %return, !dbg !14841

if.end21:                                         ; preds = %copy_from_user.exit
  br label %if.end23, !dbg !14842

if.else:                                          ; preds = %if.end10
  %102 = load i8*, i8** %buf, align 8, !dbg !14843
  %103 = load i32, i32* %size, align 4, !dbg !14845
  %conv22 = sext i32 %103 to i64, !dbg !14845
  call void @llvm.memset.p0i8.i64(i8* align 1 %102, i8 0, i64 %conv22, i1 false), !dbg !14846
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.end21
  br label %if.end24, !dbg !14847

if.end24:                                         ; preds = %if.end23, %if.end4
  %104 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14848
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %104, i32 0, i32 1, !dbg !14850
  %105 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !14850
  %state = getelementptr inbounds %struct.usb_device, %struct.usb_device* %105, i32 0, i32 3, !dbg !14851
  %106 = load i32, i32* %state, align 8, !dbg !14851
  %cmp25 = icmp ne i32 %106, 7, !dbg !14852
  br i1 %cmp25, label %if.then27, label %if.else28, !dbg !14853

if.then27:                                        ; preds = %if.end24
  store i32 -113, i32* %retval1, align 4, !dbg !14854
  br label %if.end79, !dbg !14855

if.else28:                                        ; preds = %if.end24
  %107 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !14856
  %dev29 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %107, i32 0, i32 1, !dbg !14858
  %108 = load %struct.usb_device*, %struct.usb_device** %dev29, align 8, !dbg !14858
  %109 = load %struct.usbdevfs_ioctl*, %struct.usbdevfs_ioctl** %ctl.addr, align 8, !dbg !14859
  %ifno = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %109, i32 0, i32 0, !dbg !14860
  %110 = load i32, i32* %ifno, align 8, !dbg !14860
  %call30 = call %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device* %108, i32 %110) #11, !dbg !14861
  store %struct.usb_interface* %call30, %struct.usb_interface** %intf, align 8, !dbg !14862
  %tobool31 = icmp ne %struct.usb_interface* %call30, null, !dbg !14862
  br i1 %tobool31, label %if.else33, label %if.then32, !dbg !14863

if.then32:                                        ; preds = %if.else28
  store i32 -22, i32* %retval1, align 4, !dbg !14864
  br label %if.end78, !dbg !14865

if.else33:                                        ; preds = %if.else28
  %111 = load %struct.usbdevfs_ioctl*, %struct.usbdevfs_ioctl** %ctl.addr, align 8, !dbg !14866
  %ioctl_code34 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %111, i32 0, i32 1, !dbg !14867
  %112 = load i32, i32* %ioctl_code34, align 4, !dbg !14867
  switch i32 %112, label %sw.default [
    i32 21782, label %sw.bb
    i32 21783, label %sw.bb43
  ], !dbg !14868

sw.bb:                                            ; preds = %if.else33
  %113 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !14869
  %dev35 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %113, i32 0, i32 7, !dbg !14872
  %driver36 = getelementptr inbounds %struct.device, %struct.device* %dev35, i32 0, i32 6, !dbg !14873
  %114 = load %struct.device_driver*, %struct.device_driver** %driver36, align 8, !dbg !14873
  %tobool37 = icmp ne %struct.device_driver* %114, null, !dbg !14869
  br i1 %tobool37, label %if.then38, label %if.else41, !dbg !14874

if.then38:                                        ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14875, metadata !DIExpression()), !dbg !14878
  %115 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !14878
  %dev39 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %115, i32 0, i32 7, !dbg !14878
  %driver40 = getelementptr inbounds %struct.device, %struct.device* %dev39, i32 0, i32 6, !dbg !14878
  %116 = load %struct.device_driver*, %struct.device_driver** %driver40, align 8, !dbg !14878
  %117 = bitcast %struct.device_driver* %116 to i8*, !dbg !14878
  store i8* %117, i8** %__mptr, align 8, !dbg !14878
  br label %do.body, !dbg !14878

do.body:                                          ; preds = %if.then38
  br label %do.end, !dbg !14879

do.end:                                           ; preds = %do.body
  %118 = load i8*, i8** %__mptr, align 8, !dbg !14878
  %add.ptr = getelementptr i8, i8* %118, i64 -104, !dbg !14878
  %119 = bitcast i8* %add.ptr to %struct.usb_driver*, !dbg !14878
  store %struct.usb_driver* %119, %struct.usb_driver** %tmp, align 8, !dbg !14879
  %120 = load %struct.usb_driver*, %struct.usb_driver** %tmp, align 8, !dbg !14878
  store %struct.usb_driver* %120, %struct.usb_driver** %driver, align 8, !dbg !14881
  %121 = load %struct.usb_driver*, %struct.usb_driver** %driver, align 8, !dbg !14882
  %122 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !14883
  call void @usb_driver_release_interface(%struct.usb_driver* %121, %struct.usb_interface* %122) #11, !dbg !14884
  br label %if.end42, !dbg !14885

if.else41:                                        ; preds = %sw.bb
  store i32 -61, i32* %retval1, align 4, !dbg !14886
  br label %if.end42

if.end42:                                         ; preds = %if.else41, %do.end
  br label %sw.epilog, !dbg !14887

sw.bb43:                                          ; preds = %if.else33
  %123 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !14888
  %dev44 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %123, i32 0, i32 7, !dbg !14890
  %driver45 = getelementptr inbounds %struct.device, %struct.device* %dev44, i32 0, i32 6, !dbg !14891
  %124 = load %struct.device_driver*, %struct.device_driver** %driver45, align 8, !dbg !14891
  %tobool46 = icmp ne %struct.device_driver* %124, null, !dbg !14888
  br i1 %tobool46, label %if.else50, label %if.then47, !dbg !14892

if.then47:                                        ; preds = %sw.bb43
  %125 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !14893
  %dev48 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %125, i32 0, i32 7, !dbg !14894
  %call49 = call i32 @device_attach(%struct.device* %dev48) #11, !dbg !14895
  store i32 %call49, i32* %retval1, align 4, !dbg !14896
  br label %if.end51, !dbg !14897

if.else50:                                        ; preds = %sw.bb43
  store i32 -16, i32* %retval1, align 4, !dbg !14898
  br label %if.end51

if.end51:                                         ; preds = %if.else50, %if.then47
  br label %sw.epilog, !dbg !14899

sw.default:                                       ; preds = %if.else33
  %126 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !14900
  %dev52 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %126, i32 0, i32 7, !dbg !14902
  %driver53 = getelementptr inbounds %struct.device, %struct.device* %dev52, i32 0, i32 6, !dbg !14903
  %127 = load %struct.device_driver*, %struct.device_driver** %driver53, align 8, !dbg !14903
  %tobool54 = icmp ne %struct.device_driver* %127, null, !dbg !14900
  br i1 %tobool54, label %if.then55, label %if.end63, !dbg !14904

if.then55:                                        ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %__mptr56, metadata !14905, metadata !DIExpression()), !dbg !14907
  %128 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !14907
  %dev57 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %128, i32 0, i32 7, !dbg !14907
  %driver58 = getelementptr inbounds %struct.device, %struct.device* %dev57, i32 0, i32 6, !dbg !14907
  %129 = load %struct.device_driver*, %struct.device_driver** %driver58, align 8, !dbg !14907
  %130 = bitcast %struct.device_driver* %129 to i8*, !dbg !14907
  store i8* %130, i8** %__mptr56, align 8, !dbg !14907
  br label %do.body59, !dbg !14907

do.body59:                                        ; preds = %if.then55
  br label %do.end60, !dbg !14908

do.end60:                                         ; preds = %do.body59
  %131 = load i8*, i8** %__mptr56, align 8, !dbg !14907
  %add.ptr62 = getelementptr i8, i8* %131, i64 -104, !dbg !14907
  %132 = bitcast i8* %add.ptr62 to %struct.usb_driver*, !dbg !14907
  store %struct.usb_driver* %132, %struct.usb_driver** %tmp61, align 8, !dbg !14908
  %133 = load %struct.usb_driver*, %struct.usb_driver** %tmp61, align 8, !dbg !14907
  store %struct.usb_driver* %133, %struct.usb_driver** %driver, align 8, !dbg !14910
  br label %if.end63, !dbg !14911

if.end63:                                         ; preds = %do.end60, %sw.default
  %134 = load %struct.usb_driver*, %struct.usb_driver** %driver, align 8, !dbg !14912
  %cmp64 = icmp eq %struct.usb_driver* %134, null, !dbg !14914
  br i1 %cmp64, label %if.then68, label %lor.lhs.false, !dbg !14915

lor.lhs.false:                                    ; preds = %if.end63
  %135 = load %struct.usb_driver*, %struct.usb_driver** %driver, align 8, !dbg !14916
  %unlocked_ioctl = getelementptr inbounds %struct.usb_driver, %struct.usb_driver* %135, i32 0, i32 3, !dbg !14917
  %136 = load i32 (%struct.usb_interface*, i32, i8*)*, i32 (%struct.usb_interface*, i32, i8*)** %unlocked_ioctl, align 8, !dbg !14917
  %cmp66 = icmp eq i32 (%struct.usb_interface*, i32, i8*)* %136, null, !dbg !14918
  br i1 %cmp66, label %if.then68, label %if.else69, !dbg !14919

if.then68:                                        ; preds = %lor.lhs.false, %if.end63
  store i32 -25, i32* %retval1, align 4, !dbg !14920
  br label %if.end77, !dbg !14922

if.else69:                                        ; preds = %lor.lhs.false
  %137 = load %struct.usb_driver*, %struct.usb_driver** %driver, align 8, !dbg !14923
  %unlocked_ioctl70 = getelementptr inbounds %struct.usb_driver, %struct.usb_driver* %137, i32 0, i32 3, !dbg !14925
  %138 = load i32 (%struct.usb_interface*, i32, i8*)*, i32 (%struct.usb_interface*, i32, i8*)** %unlocked_ioctl70, align 8, !dbg !14925
  %139 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !14926
  %140 = load %struct.usbdevfs_ioctl*, %struct.usbdevfs_ioctl** %ctl.addr, align 8, !dbg !14927
  %ioctl_code71 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %140, i32 0, i32 1, !dbg !14928
  %141 = load i32, i32* %ioctl_code71, align 4, !dbg !14928
  %142 = load i8*, i8** %buf, align 8, !dbg !14929
  %call72 = call i32 %138(%struct.usb_interface* %139, i32 %141, i8* %142) #11, !dbg !14923
  store i32 %call72, i32* %retval1, align 4, !dbg !14930
  %143 = load i32, i32* %retval1, align 4, !dbg !14931
  %cmp73 = icmp eq i32 %143, -515, !dbg !14933
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !14934

if.then75:                                        ; preds = %if.else69
  store i32 -25, i32* %retval1, align 4, !dbg !14935
  br label %if.end76, !dbg !14936

if.end76:                                         ; preds = %if.then75, %if.else69
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then68
  br label %sw.epilog, !dbg !14937

sw.epilog:                                        ; preds = %if.end77, %if.end51, %if.end42
  br label %if.end78

if.end78:                                         ; preds = %sw.epilog, %if.then32
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.then27
  %144 = load i32, i32* %retval1, align 4, !dbg !14938
  %cmp80 = icmp sge i32 %144, 0, !dbg !14939
  br i1 %cmp80, label %land.lhs.true, label %if.end98, !dbg !14940

land.lhs.true:                                    ; preds = %if.end79
  %145 = load %struct.usbdevfs_ioctl*, %struct.usbdevfs_ioctl** %ctl.addr, align 8, !dbg !14941
  %ioctl_code82 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %145, i32 0, i32 1, !dbg !14941
  %146 = load i32, i32* %ioctl_code82, align 4, !dbg !14941
  %shr83 = ashr i32 %146, 30, !dbg !14941
  %and84 = and i32 %shr83, 3, !dbg !14941
  %and85 = and i32 %and84, 2, !dbg !14942
  %cmp86 = icmp ne i32 %and85, 0, !dbg !14943
  br i1 %cmp86, label %land.lhs.true88, label %if.end98, !dbg !14944

land.lhs.true88:                                  ; preds = %land.lhs.true
  %147 = load i32, i32* %size, align 4, !dbg !14945
  %cmp89 = icmp sgt i32 %147, 0, !dbg !14946
  br i1 %cmp89, label %land.lhs.true91, label %if.end98, !dbg !14947

land.lhs.true91:                                  ; preds = %land.lhs.true88
  %148 = load %struct.usbdevfs_ioctl*, %struct.usbdevfs_ioctl** %ctl.addr, align 8, !dbg !14948
  %data92 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %148, i32 0, i32 2, !dbg !14949
  %149 = load i8*, i8** %data92, align 8, !dbg !14949
  %150 = load i8*, i8** %buf, align 8, !dbg !14950
  %151 = load i32, i32* %size, align 4, !dbg !14951
  %conv93 = sext i32 %151 to i64, !dbg !14951
  store i8* %149, i8** %to.addr.i116, align 8
  store i8* %150, i8** %from.addr.i117, align 8
  store i64 %conv93, i64* %n.addr.i118, align 8
  %152 = load i8*, i8** %from.addr.i117, align 8, !dbg !14952
  %153 = load i64, i64* %n.addr.i118, align 8, !dbg !14952
  store i8* %152, i8** %addr.addr.i.i110, align 8
  store i64 %153, i64* %bytes.addr.i.i111, align 8
  store i8 1, i8* %is_source.addr.i.i112, align 1
  store i32 -1, i32* %sz.i.i113, align 4, !dbg !14544
  %154 = load i32, i32* %sz.i.i113, align 4, !dbg !14953
  %cmp.i.i119 = icmp sge i32 %154, 0, !dbg !14953
  br i1 %cmp.i.i119, label %land.rhs.i.i122, label %land.end.i.i126, !dbg !14953

land.rhs.i.i122:                                  ; preds = %land.lhs.true91
  %155 = load i32, i32* %sz.i.i113, align 4, !dbg !14953
  %conv.i.i120 = sext i32 %155 to i64, !dbg !14953
  %156 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !14953
  %cmp1.i.i121 = icmp ult i64 %conv.i.i120, %156, !dbg !14953
  br label %land.end.i.i126

land.end.i.i126:                                  ; preds = %land.rhs.i.i122, %land.lhs.true91
  %157 = phi i1 [ false, %land.lhs.true91 ], [ %cmp1.i.i121, %land.rhs.i.i122 ], !dbg !14954
  %lnot.i.i123 = xor i1 %157, true, !dbg !14953
  %lnot.ext.i.i124 = zext i1 %157 to i32, !dbg !14953
  %conv4.i.i125 = sext i32 %lnot.ext.i.i124 to i64, !dbg !14953
  br i1 %157, label %if.then.i.i127, label %if.end10.i.i142, !dbg !14955

if.then.i.i127:                                   ; preds = %land.end.i.i126
  %158 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !14956
  %159 = call i1 @llvm.is.constant.i64(i64 %158) #7, !dbg !14957
  br i1 %159, label %if.else.i.i130, label %if.then5.i.i128, !dbg !14958

if.then5.i.i128:                                  ; preds = %if.then.i.i127
  %160 = load i32, i32* %sz.i.i113, align 4, !dbg !14959
  %161 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !14960
  call void @copy_overflow(i32 %160, i64 %161) #13, !dbg !14961
  br label %if.end9.i.i134, !dbg !14961

if.else.i.i130:                                   ; preds = %if.then.i.i127
  %162 = load i8, i8* %is_source.addr.i.i112, align 1, !dbg !14962
  %tobool6.i.i129 = trunc i8 %162 to i1, !dbg !14962
  br i1 %tobool6.i.i129, label %if.then7.i.i131, label %if.else8.i.i132, !dbg !14963

if.then7.i.i131:                                  ; preds = %if.else.i.i130
  call void @__bad_copy_from() #13, !dbg !14964
  br label %if.end.i.i133, !dbg !14964

if.else8.i.i132:                                  ; preds = %if.else.i.i130
  call void @__bad_copy_to() #13, !dbg !14965
  br label %if.end.i.i133

if.end.i.i133:                                    ; preds = %if.else8.i.i132, %if.then7.i.i131
  br label %if.end9.i.i134

if.end9.i.i134:                                   ; preds = %if.end.i.i133, %if.then5.i.i128
  store i1 false, i1* %retval.i.i109, align 1, !dbg !14966
  br label %check_copy_size.exit.i156, !dbg !14966

if.end10.i.i142:                                  ; preds = %land.end.i.i126
  %163 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !14545
  %cmp11.i.i135 = icmp ugt i64 %163, 2147483647, !dbg !14545
  %lnot13.i.i136 = xor i1 %cmp11.i.i135, true, !dbg !14545
  %lnot.ext16.i.i137 = zext i1 %cmp11.i.i135 to i32, !dbg !14545
  store i32 %lnot.ext16.i.i137, i32* %__ret_warn_on.i.i114, align 4, !dbg !14545
  %164 = load i32, i32* %__ret_warn_on.i.i114, align 4, !dbg !14967
  %tobool17.i.i138 = icmp ne i32 %164, 0, !dbg !14967
  %lnot18.i.i139 = xor i1 %tobool17.i.i138, true, !dbg !14967
  %lnot.ext21.i.i140 = zext i1 %tobool17.i.i138 to i32, !dbg !14967
  %conv22.i.i141 = sext i32 %lnot.ext21.i.i140 to i64, !dbg !14967
  br i1 %tobool17.i.i138, label %if.then24.i.i143, label %if.end31.i.i149, !dbg !14545

if.then24.i.i143:                                 ; preds = %if.end10.i.i142
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 150, i32 2307, i64 12) #7, !dbg !14968, !srcloc !5209
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #7, !dbg !14969, !srcloc !5212
  br label %if.end31.i.i149, !dbg !14970

if.end31.i.i149:                                  ; preds = %if.then24.i.i143, %if.end10.i.i142
  %165 = load i32, i32* %__ret_warn_on.i.i114, align 4, !dbg !14545
  %tobool32.i.i144 = icmp ne i32 %165, 0, !dbg !14545
  %lnot33.i.i145 = xor i1 %tobool32.i.i144, true, !dbg !14545
  %lnot.ext36.i.i146 = zext i1 %tobool32.i.i144 to i32, !dbg !14545
  %conv37.i.i147 = sext i32 %lnot.ext36.i.i146 to i64, !dbg !14545
  store i64 %conv37.i.i147, i64* %tmp.i.i115, align 8, !dbg !14967
  %166 = load i64, i64* %tmp.i.i115, align 8, !dbg !14545
  %tobool38.i.i148 = icmp ne i64 %166, 0, !dbg !14971
  br i1 %tobool38.i.i148, label %if.then39.i.i150, label %if.end40.i.i152, !dbg !14972

if.then39.i.i150:                                 ; preds = %if.end31.i.i149
  store i1 false, i1* %retval.i.i109, align 1, !dbg !14973
  br label %check_copy_size.exit.i156, !dbg !14973

if.end40.i.i152:                                  ; preds = %if.end31.i.i149
  %167 = load i8*, i8** %addr.addr.i.i110, align 8, !dbg !14974
  %168 = load i64, i64* %bytes.addr.i.i111, align 8, !dbg !14975
  %169 = load i8, i8* %is_source.addr.i.i112, align 1, !dbg !14976
  %tobool41.i.i151 = trunc i8 %169 to i1, !dbg !14976
  call void @check_object_size(i8* %167, i64 %168, i1 zeroext %tobool41.i.i151) #13, !dbg !14977
  store i1 true, i1* %retval.i.i109, align 1, !dbg !14978
  br label %check_copy_size.exit.i156, !dbg !14978

check_copy_size.exit.i156:                        ; preds = %if.end40.i.i152, %if.then39.i.i150, %if.end9.i.i134
  %170 = load i1, i1* %retval.i.i109, align 1, !dbg !14979
  %lnot.i153 = xor i1 %170, true, !dbg !14952
  %lnot.ext.i154 = zext i1 %170 to i32, !dbg !14952
  %conv.i155 = sext i32 %lnot.ext.i154 to i64, !dbg !14952
  br i1 %170, label %if.then.i158, label %copy_to_user.exit, !dbg !14980

if.then.i158:                                     ; preds = %check_copy_size.exit.i156
  %171 = load i8*, i8** %to.addr.i116, align 8, !dbg !14981
  %172 = load i8*, i8** %from.addr.i117, align 8, !dbg !14982
  %173 = load i64, i64* %n.addr.i118, align 8, !dbg !14983
  %call2.i157 = call i64 @_copy_to_user(i8* %171, i8* %172, i64 %173) #13, !dbg !14984
  store i64 %call2.i157, i64* %n.addr.i118, align 8, !dbg !14985
  br label %copy_to_user.exit, !dbg !14986

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i156, %if.then.i158
  %174 = load i64, i64* %n.addr.i118, align 8, !dbg !14987
  %cmp95 = icmp ne i64 %174, 0, !dbg !14988
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !14989

if.then97:                                        ; preds = %copy_to_user.exit
  store i32 -14, i32* %retval1, align 4, !dbg !14990
  br label %if.end98, !dbg !14991

if.end98:                                         ; preds = %if.then97, %copy_to_user.exit, %land.lhs.true88, %land.lhs.true, %if.end79
  %175 = load i8*, i8** %buf, align 8, !dbg !14992
  call void @kfree(i8* %175) #11, !dbg !14993
  %176 = load i32, i32* %retval1, align 4, !dbg !14994
  store i32 %176, i32* %retval, align 4, !dbg !14995
  br label %return, !dbg !14995

return:                                           ; preds = %if.end98, %if.then20, %if.then9, %if.then3, %if.then
  %177 = load i32, i32* %retval, align 4, !dbg !14996
  ret i32 %177, !dbg !14996
}

; Function Attrs: noredzone
declare dso_local i32 @device_attach(%struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @usb_hub_claim_port(%struct.usb_device*, i32, %struct.usb_dev_state*) #2

; Function Attrs: noredzone
declare dso_local i32 @usb_hub_release_port(%struct.usb_device*, i32, %struct.usb_dev_state*) #2

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @parse_usbdevfs_streams(%struct.usb_dev_state* %ps, %struct.usbdevfs_streams* %streams, i32* %num_streams_ret, i32* %num_eps_ret, %struct.usb_host_endpoint*** %eps_ret, %struct.usb_interface** %intf_ret) #0 !dbg !14997 {
entry:
  %retval = alloca i32, align 4
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  %streams.addr = alloca %struct.usbdevfs_streams*, align 8
  %num_streams_ret.addr = alloca i32*, align 8
  %num_eps_ret.addr = alloca i32*, align 8
  %eps_ret.addr = alloca %struct.usb_host_endpoint***, align 8
  %intf_ret.addr = alloca %struct.usb_interface**, align 8
  %i = alloca i32, align 4
  %num_streams = alloca i32, align 4
  %num_eps = alloca i32, align 4
  %eps = alloca %struct.usb_host_endpoint**, align 8
  %intf = alloca %struct.usb_interface*, align 8
  %ep = alloca i8, align 1
  %ifnum = alloca i32, align 4
  %ret = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_gu = alloca i32, align 4
  %__val_gu = alloca i32, align 4
  %tmp4 = alloca i64, align 8
  %tmp5 = alloca i64, align 8
  %__ret_gu6 = alloca i32, align 4
  %__val_gu7 = alloca i32, align 4
  %tmp12 = alloca i64, align 8
  %tmp35 = alloca i64, align 8
  %__ret_gu36 = alloca i32, align 4
  %__val_gu37 = alloca i8, align 1
  %tmp42 = alloca i64, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !15009, metadata !DIExpression()), !dbg !15010
  store %struct.usbdevfs_streams* %streams, %struct.usbdevfs_streams** %streams.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usbdevfs_streams** %streams.addr, metadata !15011, metadata !DIExpression()), !dbg !15012
  store i32* %num_streams_ret, i32** %num_streams_ret.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num_streams_ret.addr, metadata !15013, metadata !DIExpression()), !dbg !15014
  store i32* %num_eps_ret, i32** %num_eps_ret.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num_eps_ret.addr, metadata !15015, metadata !DIExpression()), !dbg !15016
  store %struct.usb_host_endpoint*** %eps_ret, %struct.usb_host_endpoint**** %eps_ret.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint**** %eps_ret.addr, metadata !15017, metadata !DIExpression()), !dbg !15018
  store %struct.usb_interface** %intf_ret, %struct.usb_interface*** %intf_ret.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_interface*** %intf_ret.addr, metadata !15019, metadata !DIExpression()), !dbg !15020
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15021, metadata !DIExpression()), !dbg !15022
  call void @llvm.dbg.declare(metadata i32* %num_streams, metadata !15023, metadata !DIExpression()), !dbg !15024
  call void @llvm.dbg.declare(metadata i32* %num_eps, metadata !15025, metadata !DIExpression()), !dbg !15026
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint*** %eps, metadata !15027, metadata !DIExpression()), !dbg !15028
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf, metadata !15029, metadata !DIExpression()), !dbg !15030
  store %struct.usb_interface* null, %struct.usb_interface** %intf, align 8, !dbg !15030
  call void @llvm.dbg.declare(metadata i8* %ep, metadata !15031, metadata !DIExpression()), !dbg !15032
  call void @llvm.dbg.declare(metadata i32* %ifnum, metadata !15033, metadata !DIExpression()), !dbg !15034
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15035, metadata !DIExpression()), !dbg !15036
  call void @might_fault() #11, !dbg !15037
  call void @llvm.dbg.declare(metadata i32* %__ret_gu, metadata !15040, metadata !DIExpression()), !dbg !15042
  call void @llvm.dbg.declare(metadata i32* %__val_gu, metadata !15043, metadata !DIExpression()), !dbg !15042
  %0 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !15042
  %1 = load %struct.usbdevfs_streams*, %struct.usbdevfs_streams** %streams.addr, align 8, !dbg !15042
  %num_streams1 = getelementptr inbounds %struct.usbdevfs_streams, %struct.usbdevfs_streams* %1, i32 0, i32 0, !dbg !15042
  %2 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %num_streams1, i64 4, i64 %0) #7, !dbg !15042, !srcloc !15044
  %asmresult = extractvalue { i32*, i32, i64 } %2, 0, !dbg !15042
  %asmresult2 = extractvalue { i32*, i32, i64 } %2, 1, !dbg !15042
  %asmresult3 = extractvalue { i32*, i32, i64 } %2, 2, !dbg !15042
  %3 = ptrtoint i32* %asmresult to i64, !dbg !15042
  %4 = trunc i64 %3 to i32, !dbg !15042
  store i32 %4, i32* %__ret_gu, align 4, !dbg !15042
  store i32 %asmresult2, i32* %__val_gu, align 4, !dbg !15042
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult3), !dbg !15042
  %5 = load i32, i32* %__val_gu, align 4, !dbg !15042
  store i32 %5, i32* %num_streams, align 4, !dbg !15042
  %6 = load i32, i32* %__ret_gu, align 4, !dbg !15042
  %conv = sext i32 %6 to i64, !dbg !15042
  store i64 %conv, i64* %tmp4, align 8, !dbg !15042
  %7 = load i64, i64* %tmp4, align 8, !dbg !15042
  store i64 %7, i64* %tmp, align 8, !dbg !15037
  %8 = load i64, i64* %tmp, align 8, !dbg !15037
  %tobool = icmp ne i64 %8, 0, !dbg !15045
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !15046

lor.lhs.false:                                    ; preds = %entry
  call void @might_fault() #11, !dbg !15047
  call void @llvm.dbg.declare(metadata i32* %__ret_gu6, metadata !15049, metadata !DIExpression()), !dbg !15051
  call void @llvm.dbg.declare(metadata i32* %__val_gu7, metadata !15052, metadata !DIExpression()), !dbg !15051
  %9 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !15051
  %10 = load %struct.usbdevfs_streams*, %struct.usbdevfs_streams** %streams.addr, align 8, !dbg !15051
  %num_eps8 = getelementptr inbounds %struct.usbdevfs_streams, %struct.usbdevfs_streams* %10, i32 0, i32 1, !dbg !15051
  %11 = call { i32*, i32, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %num_eps8, i64 4, i64 %9) #7, !dbg !15051, !srcloc !15053
  %asmresult9 = extractvalue { i32*, i32, i64 } %11, 0, !dbg !15051
  %asmresult10 = extractvalue { i32*, i32, i64 } %11, 1, !dbg !15051
  %asmresult11 = extractvalue { i32*, i32, i64 } %11, 2, !dbg !15051
  %12 = ptrtoint i32* %asmresult9 to i64, !dbg !15051
  %13 = trunc i64 %12 to i32, !dbg !15051
  store i32 %13, i32* %__ret_gu6, align 4, !dbg !15051
  store i32 %asmresult10, i32* %__val_gu7, align 4, !dbg !15051
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult11), !dbg !15051
  %14 = load i32, i32* %__val_gu7, align 4, !dbg !15051
  store i32 %14, i32* %num_eps, align 4, !dbg !15051
  %15 = load i32, i32* %__ret_gu6, align 4, !dbg !15051
  %conv13 = sext i32 %15 to i64, !dbg !15051
  store i64 %conv13, i64* %tmp12, align 8, !dbg !15051
  %16 = load i64, i64* %tmp12, align 8, !dbg !15051
  store i64 %16, i64* %tmp5, align 8, !dbg !15047
  %17 = load i64, i64* %tmp5, align 8, !dbg !15047
  %tobool14 = icmp ne i64 %17, 0, !dbg !15054
  br i1 %tobool14, label %if.then, label %if.end, !dbg !15055

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -14, i32* %retval, align 4, !dbg !15056
  br label %return, !dbg !15056

if.end:                                           ; preds = %lor.lhs.false
  %18 = load i32, i32* %num_eps, align 4, !dbg !15057
  %cmp = icmp ult i32 %18, 1, !dbg !15059
  br i1 %cmp, label %if.then19, label %lor.lhs.false16, !dbg !15060

lor.lhs.false16:                                  ; preds = %if.end
  %19 = load i32, i32* %num_eps, align 4, !dbg !15061
  %cmp17 = icmp ugt i32 %19, 30, !dbg !15062
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !15063

if.then19:                                        ; preds = %lor.lhs.false16, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !15064
  br label %return, !dbg !15064

if.end20:                                         ; preds = %lor.lhs.false16
  %20 = load i32*, i32** %num_streams_ret.addr, align 8, !dbg !15065
  %tobool21 = icmp ne i32* %20, null, !dbg !15065
  br i1 %tobool21, label %land.lhs.true, label %if.end28, !dbg !15067

land.lhs.true:                                    ; preds = %if.end20
  %21 = load i32, i32* %num_streams, align 4, !dbg !15068
  %cmp22 = icmp ult i32 %21, 2, !dbg !15069
  br i1 %cmp22, label %if.then27, label %lor.lhs.false24, !dbg !15070

lor.lhs.false24:                                  ; preds = %land.lhs.true
  %22 = load i32, i32* %num_streams, align 4, !dbg !15071
  %cmp25 = icmp ugt i32 %22, 65536, !dbg !15072
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !15073

if.then27:                                        ; preds = %lor.lhs.false24, %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !15074
  br label %return, !dbg !15074

if.end28:                                         ; preds = %lor.lhs.false24, %if.end20
  %23 = load i32, i32* %num_eps, align 4, !dbg !15075
  %conv29 = zext i32 %23 to i64, !dbg !15075
  %call = call i8* @kmalloc_array(i64 %conv29, i64 8, i32 3264) #11, !dbg !15076
  %24 = bitcast i8* %call to %struct.usb_host_endpoint**, !dbg !15076
  store %struct.usb_host_endpoint** %24, %struct.usb_host_endpoint*** %eps, align 8, !dbg !15077
  %25 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps, align 8, !dbg !15078
  %tobool30 = icmp ne %struct.usb_host_endpoint** %25, null, !dbg !15078
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !15080

if.then31:                                        ; preds = %if.end28
  store i32 -12, i32* %retval, align 4, !dbg !15081
  br label %return, !dbg !15081

if.end32:                                         ; preds = %if.end28
  store i32 0, i32* %i, align 4, !dbg !15082
  br label %for.cond, !dbg !15084

for.cond:                                         ; preds = %for.inc, %if.end32
  %26 = load i32, i32* %i, align 4, !dbg !15085
  %27 = load i32, i32* %num_eps, align 4, !dbg !15087
  %cmp33 = icmp ult i32 %26, %27, !dbg !15088
  br i1 %cmp33, label %for.body, label %for.end, !dbg !15089

for.body:                                         ; preds = %for.cond
  call void @might_fault() #11, !dbg !15090
  call void @llvm.dbg.declare(metadata i32* %__ret_gu36, metadata !15094, metadata !DIExpression()), !dbg !15096
  call void @llvm.dbg.declare(metadata i8* %__val_gu37, metadata !15097, metadata !DIExpression()), !dbg !15096
  %28 = call i64 @llvm.read_register.i64(metadata !4962), !dbg !15096
  %29 = load %struct.usbdevfs_streams*, %struct.usbdevfs_streams** %streams.addr, align 8, !dbg !15096
  %eps38 = getelementptr inbounds %struct.usbdevfs_streams, %struct.usbdevfs_streams* %29, i32 0, i32 2, !dbg !15096
  %30 = load i32, i32* %i, align 4, !dbg !15096
  %idxprom = zext i32 %30 to i64, !dbg !15096
  %arrayidx = getelementptr [0 x i8], [0 x i8]* %eps38, i64 0, i64 %idxprom, !dbg !15096
  %31 = call { i8*, i8, i64 } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i8* %arrayidx, i64 1, i64 %28) #7, !dbg !15096, !srcloc !15098
  %asmresult39 = extractvalue { i8*, i8, i64 } %31, 0, !dbg !15096
  %asmresult40 = extractvalue { i8*, i8, i64 } %31, 1, !dbg !15096
  %asmresult41 = extractvalue { i8*, i8, i64 } %31, 2, !dbg !15096
  %32 = ptrtoint i8* %asmresult39 to i64, !dbg !15096
  %33 = trunc i64 %32 to i32, !dbg !15096
  store i32 %33, i32* %__ret_gu36, align 4, !dbg !15096
  store i8 %asmresult40, i8* %__val_gu37, align 1, !dbg !15096
  call void @llvm.write_register.i64(metadata !4962, i64 %asmresult41), !dbg !15096
  %34 = load i8, i8* %__val_gu37, align 1, !dbg !15096
  store i8 %34, i8* %ep, align 1, !dbg !15096
  %35 = load i32, i32* %__ret_gu36, align 4, !dbg !15096
  %conv43 = sext i32 %35 to i64, !dbg !15096
  store i64 %conv43, i64* %tmp42, align 8, !dbg !15096
  %36 = load i64, i64* %tmp42, align 8, !dbg !15096
  store i64 %36, i64* %tmp35, align 8, !dbg !15090
  %37 = load i64, i64* %tmp35, align 8, !dbg !15090
  %tobool44 = icmp ne i64 %37, 0, !dbg !15099
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !15100

if.then45:                                        ; preds = %for.body
  store i32 -14, i32* %ret, align 4, !dbg !15101
  br label %error, !dbg !15103

if.end46:                                         ; preds = %for.body
  %38 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !15104
  %dev = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %38, i32 0, i32 1, !dbg !15105
  %39 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !15105
  %40 = load i8, i8* %ep, align 1, !dbg !15106
  %call47 = call %struct.usb_host_endpoint* @ep_to_host_endpoint(%struct.usb_device* %39, i8 zeroext %40) #11, !dbg !15107
  %41 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps, align 8, !dbg !15108
  %42 = load i32, i32* %i, align 4, !dbg !15109
  %idxprom48 = zext i32 %42 to i64, !dbg !15108
  %arrayidx49 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %41, i64 %idxprom48, !dbg !15108
  store %struct.usb_host_endpoint* %call47, %struct.usb_host_endpoint** %arrayidx49, align 8, !dbg !15110
  %43 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps, align 8, !dbg !15111
  %44 = load i32, i32* %i, align 4, !dbg !15113
  %idxprom50 = zext i32 %44 to i64, !dbg !15111
  %arrayidx51 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %43, i64 %idxprom50, !dbg !15111
  %45 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx51, align 8, !dbg !15111
  %tobool52 = icmp ne %struct.usb_host_endpoint* %45, null, !dbg !15111
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !15114

if.then53:                                        ; preds = %if.end46
  store i32 -22, i32* %ret, align 4, !dbg !15115
  br label %error, !dbg !15117

if.end54:                                         ; preds = %if.end46
  %46 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !15118
  %dev55 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %46, i32 0, i32 1, !dbg !15119
  %47 = load %struct.usb_device*, %struct.usb_device** %dev55, align 8, !dbg !15119
  %48 = load i8, i8* %ep, align 1, !dbg !15120
  %conv56 = zext i8 %48 to i32, !dbg !15120
  %call57 = call i32 @findintfep(%struct.usb_device* %47, i32 %conv56) #11, !dbg !15121
  store i32 %call57, i32* %ifnum, align 4, !dbg !15122
  %49 = load i32, i32* %ifnum, align 4, !dbg !15123
  %cmp58 = icmp slt i32 %49, 0, !dbg !15125
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !15126

if.then60:                                        ; preds = %if.end54
  %50 = load i32, i32* %ifnum, align 4, !dbg !15127
  store i32 %50, i32* %ret, align 4, !dbg !15129
  br label %error, !dbg !15130

if.end61:                                         ; preds = %if.end54
  %51 = load i32, i32* %i, align 4, !dbg !15131
  %cmp62 = icmp eq i32 %51, 0, !dbg !15133
  br i1 %cmp62, label %if.then64, label %if.else, !dbg !15134

if.then64:                                        ; preds = %if.end61
  %52 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !15135
  %53 = load i32, i32* %ifnum, align 4, !dbg !15137
  %call65 = call i32 @checkintf(%struct.usb_dev_state* %52, i32 %53) #11, !dbg !15138
  store i32 %call65, i32* %ret, align 4, !dbg !15139
  %54 = load i32, i32* %ret, align 4, !dbg !15140
  %cmp66 = icmp slt i32 %54, 0, !dbg !15142
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !15143

if.then68:                                        ; preds = %if.then64
  br label %error, !dbg !15144

if.end69:                                         ; preds = %if.then64
  %55 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !15145
  %dev70 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %55, i32 0, i32 1, !dbg !15146
  %56 = load %struct.usb_device*, %struct.usb_device** %dev70, align 8, !dbg !15146
  %57 = load i32, i32* %ifnum, align 4, !dbg !15147
  %call71 = call %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device* %56, i32 %57) #11, !dbg !15148
  store %struct.usb_interface* %call71, %struct.usb_interface** %intf, align 8, !dbg !15149
  br label %if.end77, !dbg !15150

if.else:                                          ; preds = %if.end61
  %58 = load i32, i32* %ifnum, align 4, !dbg !15151
  %59 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !15154
  %altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %59, i32 0, i32 0, !dbg !15155
  %60 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting, align 8, !dbg !15155
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %60, i32 0, i32 0, !dbg !15156
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2, !dbg !15157
  %61 = load i8, i8* %bInterfaceNumber, align 2, !dbg !15157
  %conv72 = zext i8 %61 to i32, !dbg !15154
  %cmp73 = icmp ne i32 %58, %conv72, !dbg !15158
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !15159

if.then75:                                        ; preds = %if.else
  store i32 -22, i32* %ret, align 4, !dbg !15160
  br label %error, !dbg !15162

if.end76:                                         ; preds = %if.else
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.end69
  br label %for.inc, !dbg !15163

for.inc:                                          ; preds = %if.end77
  %62 = load i32, i32* %i, align 4, !dbg !15164
  %inc = add i32 %62, 1, !dbg !15164
  store i32 %inc, i32* %i, align 4, !dbg !15164
  br label %for.cond, !dbg !15165, !llvm.loop !15166

for.end:                                          ; preds = %for.cond
  %63 = load i32*, i32** %num_streams_ret.addr, align 8, !dbg !15168
  %tobool78 = icmp ne i32* %63, null, !dbg !15168
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !15170

if.then79:                                        ; preds = %for.end
  %64 = load i32, i32* %num_streams, align 4, !dbg !15171
  %65 = load i32*, i32** %num_streams_ret.addr, align 8, !dbg !15172
  store i32 %64, i32* %65, align 4, !dbg !15173
  br label %if.end80, !dbg !15174

if.end80:                                         ; preds = %if.then79, %for.end
  %66 = load i32, i32* %num_eps, align 4, !dbg !15175
  %67 = load i32*, i32** %num_eps_ret.addr, align 8, !dbg !15176
  store i32 %66, i32* %67, align 4, !dbg !15177
  %68 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps, align 8, !dbg !15178
  %69 = load %struct.usb_host_endpoint***, %struct.usb_host_endpoint**** %eps_ret.addr, align 8, !dbg !15179
  store %struct.usb_host_endpoint** %68, %struct.usb_host_endpoint*** %69, align 8, !dbg !15180
  %70 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !15181
  %71 = load %struct.usb_interface**, %struct.usb_interface*** %intf_ret.addr, align 8, !dbg !15182
  store %struct.usb_interface* %70, %struct.usb_interface** %71, align 8, !dbg !15183
  store i32 0, i32* %retval, align 4, !dbg !15184
  br label %return, !dbg !15184

error:                                            ; preds = %if.then75, %if.then68, %if.then60, %if.then53, %if.then45
  call void @llvm.dbg.label(metadata !15185), !dbg !15186
  %72 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps, align 8, !dbg !15187
  %73 = bitcast %struct.usb_host_endpoint** %72 to i8*, !dbg !15187
  call void @kfree(i8* %73) #11, !dbg !15188
  %74 = load i32, i32* %ret, align 4, !dbg !15189
  store i32 %74, i32* %retval, align 4, !dbg !15190
  br label %return, !dbg !15190

return:                                           ; preds = %error, %if.end80, %if.then31, %if.then27, %if.then19, %if.then
  %75 = load i32, i32* %retval, align 4, !dbg !15191
  ret i32 %75, !dbg !15191
}

; Function Attrs: noredzone
declare dso_local i32 @usb_alloc_streams(%struct.usb_interface*, %struct.usb_host_endpoint**, i32, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @usb_free_streams(%struct.usb_interface*, %struct.usb_host_endpoint**, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @usb_autoresume_device(%struct.usb_device*) #2

; Function Attrs: noredzone
declare dso_local void @usb_autosuspend_device(%struct.usb_device*) #2

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_hcd* @bus_to_hcd(%struct.usb_bus* %bus) #0 !dbg !15192 {
entry:
  %bus.addr = alloca %struct.usb_bus*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.usb_hcd*, align 8
  store %struct.usb_bus* %bus, %struct.usb_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_bus** %bus.addr, metadata !15195, metadata !DIExpression()), !dbg !15196
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15197, metadata !DIExpression()), !dbg !15199
  %0 = load %struct.usb_bus*, %struct.usb_bus** %bus.addr, align 8, !dbg !15199
  %1 = bitcast %struct.usb_bus* %0 to i8*, !dbg !15199
  store i8* %1, i8** %__mptr, align 8, !dbg !15199
  br label %do.body, !dbg !15199

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15200

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15199
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15199
  %3 = bitcast i8* %add.ptr to %struct.usb_hcd*, !dbg !15199
  store %struct.usb_hcd* %3, %struct.usb_hcd** %tmp, align 8, !dbg !15200
  %4 = load %struct.usb_hcd*, %struct.usb_hcd** %tmp, align 8, !dbg !15199
  ret %struct.usb_hcd* %4, !dbg !15202
}

; Function Attrs: noredzone
declare dso_local i8* @usb_alloc_coherent(%struct.usb_device*, i64, i32, i64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @hcd_uses_dma(%struct.usb_hcd* %hcd) #0 !dbg !15203 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !15206, metadata !DIExpression()), !dbg !15207
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !15208
  %driver = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %0, i32 0, i32 9, !dbg !15209
  %1 = load %struct.hc_driver*, %struct.hc_driver** %driver, align 8, !dbg !15209
  %flags = getelementptr inbounds %struct.hc_driver, %struct.hc_driver* %1, i32 0, i32 4, !dbg !15210
  %2 = load i32, i32* %flags, align 8, !dbg !15210
  %and = and i32 %2, 2, !dbg !15211
  %tobool = icmp ne i32 %and, 0, !dbg !15212
  ret i1 %tobool, !dbg !15213
}

; Function Attrs: noredzone
declare dso_local i32 @remap_pfn_range(%struct.vm_area_struct*, i64, i64, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @virt_to_phys(i8* %address) #0 !dbg !15214 {
entry:
  %address.addr = alloca i8*, align 8
  store i8* %address, i8** %address.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %address.addr, metadata !15219, metadata !DIExpression()), !dbg !15220
  %0 = load i8*, i8** %address.addr, align 8, !dbg !15221
  %1 = ptrtoint i8* %0 to i64, !dbg !15221
  %call = call i64 @__phys_addr_nodebug(i64 %1) #11, !dbg !15221
  ret i64 %call, !dbg !15222
}

; Function Attrs: noredzone
declare dso_local i32 @dma_mmap_attrs(%struct.device*, %struct.vm_area_struct*, i8*, i64, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usbdev_vm_open(%struct.vm_area_struct* %vma) #0 !dbg !15223 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !5442, metadata !DIExpression()), !dbg !15224
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5449, metadata !DIExpression()), !dbg !15226
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5451, metadata !DIExpression()), !dbg !15227
  %vma.addr = alloca %struct.vm_area_struct*, align 8
  %usbm = alloca %struct.usb_memory*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.vm_area_struct* %vma, %struct.vm_area_struct** %vma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vm_area_struct** %vma.addr, metadata !15234, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.declare(metadata %struct.usb_memory** %usbm, metadata !15236, metadata !DIExpression()), !dbg !15237
  %0 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !15238
  %vm_private_data = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %0, i32 0, i32 15, !dbg !15239
  %1 = load i8*, i8** %vm_private_data, align 8, !dbg !15239
  %2 = bitcast i8* %1 to %struct.usb_memory*, !dbg !15238
  store %struct.usb_memory* %2, %struct.usb_memory** %usbm, align 8, !dbg !15237
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15240, metadata !DIExpression()), !dbg !15241
  br label %do.body, !dbg !15242

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !15243

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15244, metadata !DIExpression()), !dbg !15246
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15247, metadata !DIExpression()), !dbg !15246
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !15246
  %conv = zext i1 %cmp to i32, !dbg !15246
  store i32 1, i32* %tmp, align 4, !dbg !15246
  %3 = load i32, i32* %tmp, align 4, !dbg !15246
  br label %do.body2, !dbg !15248

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !15249

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !15250

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !15252, metadata !DIExpression()), !dbg !15255
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !15256, metadata !DIExpression()), !dbg !15255
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !15255
  %conv8 = zext i1 %cmp7 to i32, !dbg !15255
  store i32 1, i32* %tmp9, align 4, !dbg !15255
  %4 = load i32, i32* %tmp9, align 4, !dbg !15255
  %call = call i64 @arch_local_irq_save() #11, !dbg !15257
  store i64 %call, i64* %flags, align 8, !dbg !15257
  br label %do.end, !dbg !15257

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !15250

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !15249

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15258, !srcloc !15259
  br label %do.body12, !dbg !15258

do.body12:                                        ; preds = %do.body11
  %5 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !15260
  %ps = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %5, i32 0, i32 7, !dbg !15260
  %6 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !15260
  %lock = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 3, !dbg !15260
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15261
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !15262
  %rlock.i = bitcast %union.anon.0* %8 to %struct.raw_spinlock*, !dbg !15262
  br label %do.end14, !dbg !15260

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !15258

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !15249

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !15248

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !15243

do.end18:                                         ; preds = %do.end17
  %9 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !15263
  %vma_use_count = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %9, i32 0, i32 1, !dbg !15264
  %10 = load i32, i32* %vma_use_count, align 8, !dbg !15265
  %inc = add i32 %10, 1, !dbg !15265
  store i32 %inc, i32* %vma_use_count, align 8, !dbg !15265
  %11 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !15266
  %ps19 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %11, i32 0, i32 7, !dbg !15267
  %12 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps19, align 8, !dbg !15267
  %lock20 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %12, i32 0, i32 3, !dbg !15268
  %13 = load i64, i64* %flags, align 8, !dbg !15269
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !243, metadata !5632, metadata !DIExpression()) #7, !dbg !15270
  call void @llvm.dbg.declare(metadata !243, metadata !5636, metadata !DIExpression()) #7, !dbg !15270
  store i32 1, i32* %tmp.i, align 4, !dbg !15270
  %14 = load i32, i32* %tmp.i, align 4, !dbg !15270
  call void @llvm.dbg.declare(metadata !243, metadata !5637, metadata !DIExpression()) #7, !dbg !15271
  call void @llvm.dbg.declare(metadata !243, metadata !5643, metadata !DIExpression()) #7, !dbg !15271
  store i32 1, i32* %tmp8.i, align 4, !dbg !15271
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !15271
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !15272
  call void @arch_local_irq_restore(i64 %16) #13, !dbg !15272
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15273, !srcloc !5647
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !15274
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !15274
  %rlock.i22 = bitcast %union.anon.0* %18 to %struct.raw_spinlock*, !dbg !15274
  ret void, !dbg !15275
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usbdev_vm_close(%struct.vm_area_struct* %vma) #0 !dbg !15276 {
entry:
  %vma.addr = alloca %struct.vm_area_struct*, align 8
  %usbm = alloca %struct.usb_memory*, align 8
  store %struct.vm_area_struct* %vma, %struct.vm_area_struct** %vma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vm_area_struct** %vma.addr, metadata !15277, metadata !DIExpression()), !dbg !15278
  call void @llvm.dbg.declare(metadata %struct.usb_memory** %usbm, metadata !15279, metadata !DIExpression()), !dbg !15280
  %0 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !15281
  %vm_private_data = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %0, i32 0, i32 15, !dbg !15282
  %1 = load i8*, i8** %vm_private_data, align 8, !dbg !15282
  %2 = bitcast i8* %1 to %struct.usb_memory*, !dbg !15281
  store %struct.usb_memory* %2, %struct.usb_memory** %usbm, align 8, !dbg !15280
  %3 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !15283
  %4 = load %struct.usb_memory*, %struct.usb_memory** %usbm, align 8, !dbg !15284
  %vma_use_count = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %4, i32 0, i32 1, !dbg !15285
  call void @dec_usb_memory_use_count(%struct.usb_memory* %3, i32* %vma_use_count) #11, !dbg !15286
  ret void, !dbg !15287
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @imajor(%struct.inode* %inode) #0 !dbg !15288 {
entry:
  %inode.addr = alloca %struct.inode*, align 8
  store %struct.inode* %inode, %struct.inode** %inode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.inode** %inode.addr, metadata !15291, metadata !DIExpression()), !dbg !15292
  %0 = load %struct.inode*, %struct.inode** %inode.addr, align 8, !dbg !15293
  %i_rdev = getelementptr inbounds %struct.inode, %struct.inode* %0, i32 0, i32 10, !dbg !15293
  %1 = load i32, i32* %i_rdev, align 4, !dbg !15293
  %shr = lshr i32 %1, 20, !dbg !15293
  ret i32 %shr, !dbg !15294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_device* @usbdev_lookup_by_devt(i32 %devt) #0 !dbg !15295 {
entry:
  %retval = alloca %struct.usb_device*, align 8
  %devt.addr = alloca i32, align 4
  %dev = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.usb_device*, align 8
  store i32 %devt, i32* %devt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devt.addr, metadata !15298, metadata !DIExpression()), !dbg !15299
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !15300, metadata !DIExpression()), !dbg !15301
  %0 = load i32, i32* %devt.addr, align 4, !dbg !15302
  %call = call %struct.device* @bus_find_device_by_devt(%struct.bus_type* @usb_bus_type, i32 %0) #11, !dbg !15303
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !15304
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15305
  %tobool = icmp ne %struct.device* %1, null, !dbg !15305
  br i1 %tobool, label %if.end, label %if.then, !dbg !15307

if.then:                                          ; preds = %entry
  store %struct.usb_device* null, %struct.usb_device** %retval, align 8, !dbg !15308
  br label %return, !dbg !15308

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15309, metadata !DIExpression()), !dbg !15311
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !15311
  %3 = bitcast %struct.device* %2 to i8*, !dbg !15311
  store i8* %3, i8** %__mptr, align 8, !dbg !15311
  br label %do.body, !dbg !15311

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !15312

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !15311
  %add.ptr = getelementptr i8, i8* %4, i64 -160, !dbg !15311
  %5 = bitcast i8* %add.ptr to %struct.usb_device*, !dbg !15311
  store %struct.usb_device* %5, %struct.usb_device** %tmp, align 8, !dbg !15312
  %6 = load %struct.usb_device*, %struct.usb_device** %tmp, align 8, !dbg !15311
  store %struct.usb_device* %6, %struct.usb_device** %retval, align 8, !dbg !15314
  br label %return, !dbg !15314

return:                                           ; preds = %do.end, %if.then
  %7 = load %struct.usb_device*, %struct.usb_device** %retval, align 8, !dbg !15315
  ret %struct.usb_device* %7, !dbg !15315
}

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local void @usb_put_dev(%struct.usb_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device* @bus_find_device_by_devt(%struct.bus_type* %bus, i32 %devt) #0 !dbg !15316 {
entry:
  %bus.addr = alloca %struct.bus_type*, align 8
  %devt.addr = alloca i32, align 4
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !15319, metadata !DIExpression()), !dbg !15320
  store i32 %devt, i32* %devt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %devt.addr, metadata !15321, metadata !DIExpression()), !dbg !15322
  %0 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !15323
  %1 = bitcast i32* %devt.addr to i8*, !dbg !15324
  %call = call %struct.device* @bus_find_device(%struct.bus_type* %0, %struct.device* null, i8* %1, i32 (%struct.device*, i8*)* @device_match_devt) #11, !dbg !15325
  ret %struct.device* %call, !dbg !15326
}

; Function Attrs: noredzone
declare dso_local %struct.device* @bus_find_device(%struct.bus_type*, %struct.device*, i8*, i32 (%struct.device*, i8*)*) #2

; Function Attrs: noredzone
declare dso_local i32 @device_match_devt(%struct.device*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @usb_hub_release_all_ports(%struct.usb_device*, %struct.usb_dev_state*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @destroy_all_async(%struct.usb_dev_state* %ps) #0 !dbg !15327 {
entry:
  %ps.addr = alloca %struct.usb_dev_state*, align 8
  store %struct.usb_dev_state* %ps, %struct.usb_dev_state** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps.addr, metadata !15330, metadata !DIExpression()), !dbg !15331
  %0 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !15332
  %1 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps.addr, align 8, !dbg !15333
  %async_pending = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %1, i32 0, i32 4, !dbg !15334
  call void @destroy_async(%struct.usb_dev_state* %0, %struct.list_head* %async_pending) #11, !dbg !15335
  ret void, !dbg !15336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usbdev_notify(%struct.notifier_block* %self, i64 %action, i8* %dev) #0 !dbg !15337 {
entry:
  %self.addr = alloca %struct.notifier_block*, align 8
  %action.addr = alloca i64, align 8
  %dev.addr = alloca i8*, align 8
  store %struct.notifier_block* %self, %struct.notifier_block** %self.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %self.addr, metadata !15338, metadata !DIExpression()), !dbg !15339
  store i64 %action, i64* %action.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %action.addr, metadata !15340, metadata !DIExpression()), !dbg !15341
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !15342, metadata !DIExpression()), !dbg !15343
  %0 = load i64, i64* %action.addr, align 8, !dbg !15344
  switch i64 %0, label %sw.epilog [
    i64 1, label %sw.bb
    i64 2, label %sw.bb1
  ], !dbg !15345

sw.bb:                                            ; preds = %entry
  br label %sw.epilog, !dbg !15346

sw.bb1:                                           ; preds = %entry
  %1 = load i8*, i8** %dev.addr, align 8, !dbg !15348
  %2 = bitcast i8* %1 to %struct.usb_device*, !dbg !15348
  call void @usbdev_remove(%struct.usb_device* %2) #11, !dbg !15349
  br label %sw.epilog, !dbg !15350

sw.epilog:                                        ; preds = %entry, %sw.bb1, %sw.bb
  ret i32 1, !dbg !15351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @usbdev_remove(%struct.usb_device* %udev) #0 !dbg !15352 {
entry:
  %udev.addr = alloca %struct.usb_device*, align 8
  %ps = alloca %struct.usb_dev_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.usb_dev_state*, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !15353, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.declare(metadata %struct.usb_dev_state** %ps, metadata !15355, metadata !DIExpression()), !dbg !15356
  call void @mutex_lock(%struct.mutex* @usbfs_mutex) #11, !dbg !15357
  br label %while.cond, !dbg !15358

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !15359
  %filelist = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 34, !dbg !15360
  %call = call i32 @list_empty(%struct.list_head* %filelist) #11, !dbg !15361
  %tobool = icmp ne i32 %call, 0, !dbg !15362
  %lnot = xor i1 %tobool, true, !dbg !15362
  br i1 %lnot, label %while.body, label %while.end, !dbg !15358

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15363, metadata !DIExpression()), !dbg !15366
  %1 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !15366
  %filelist1 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 34, !dbg !15366
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %filelist1, i32 0, i32 0, !dbg !15366
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15366
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !15366
  store i8* %3, i8** %__mptr, align 8, !dbg !15366
  br label %do.body, !dbg !15366

do.body:                                          ; preds = %while.body
  br label %do.end, !dbg !15367

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !15366
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !15366
  %5 = bitcast i8* %add.ptr to %struct.usb_dev_state*, !dbg !15366
  store %struct.usb_dev_state* %5, %struct.usb_dev_state** %tmp, align 8, !dbg !15367
  %6 = load %struct.usb_dev_state*, %struct.usb_dev_state** %tmp, align 8, !dbg !15366
  store %struct.usb_dev_state* %6, %struct.usb_dev_state** %ps, align 8, !dbg !15369
  %7 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !15370
  call void @destroy_all_async(%struct.usb_dev_state* %7) #11, !dbg !15371
  %8 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !15372
  %wait = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 7, !dbg !15372
  call void @__wake_up(%struct.wait_queue_head* %wait, i32 3, i32 0, i8* null) #11, !dbg !15372
  br label %do.body2, !dbg !15373

do.body2:                                         ; preds = %do.end
  br label %do.body3, !dbg !15374

do.body3:                                         ; preds = %do.body2
  br label %do.end4, !dbg !15376

do.end4:                                          ; preds = %do.body3
  br label %do.body5, !dbg !15374

do.body5:                                         ; preds = %do.end4
  %9 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !15378
  %not_yet_resumed = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %9, i32 0, i32 16, !dbg !15378
  store volatile i32 0, i32* %not_yet_resumed, align 8, !dbg !15378
  br label %do.end6, !dbg !15378

do.end6:                                          ; preds = %do.body5
  br label %do.end7, !dbg !15374

do.end7:                                          ; preds = %do.end6
  %10 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !15380
  %wait_for_resume = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %10, i32 0, i32 8, !dbg !15380
  call void @__wake_up(%struct.wait_queue_head* %wait_for_resume, i32 3, i32 0, i8* null) #11, !dbg !15380
  %11 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !15381
  %list = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %11, i32 0, i32 0, !dbg !15382
  call void @list_del_init(%struct.list_head* %list) #11, !dbg !15383
  %12 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !15384
  %discsignr = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %12, i32 0, i32 9, !dbg !15386
  %13 = load i32, i32* %discsignr, align 8, !dbg !15386
  %tobool8 = icmp ne i32 %13, 0, !dbg !15384
  br i1 %tobool8, label %if.then, label %if.end, !dbg !15387

if.then:                                          ; preds = %do.end7
  %14 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !15388
  %discsignr9 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %14, i32 0, i32 9, !dbg !15389
  %15 = load i32, i32* %discsignr9, align 8, !dbg !15389
  %16 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !15390
  %disccontext = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %16, i32 0, i32 12, !dbg !15391
  %17 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !15392
  %disc_pid = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %17, i32 0, i32 10, !dbg !15393
  %18 = load %struct.pid*, %struct.pid** %disc_pid, align 8, !dbg !15393
  %19 = load %struct.usb_dev_state*, %struct.usb_dev_state** %ps, align 8, !dbg !15394
  %cred = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %19, i32 0, i32 11, !dbg !15395
  %20 = load %struct.cred*, %struct.cred** %cred, align 8, !dbg !15395
  %coerce.dive = getelementptr inbounds %union.sigval, %union.sigval* %disccontext, i32 0, i32 0, !dbg !15396
  %21 = load i8*, i8** %coerce.dive, align 8, !dbg !15396
  %call10 = call i32 @kill_pid_usb_asyncio(i32 %15, i32 32, i8* %21, %struct.pid* %18, %struct.cred* %20) #11, !dbg !15396
  br label %if.end, !dbg !15396

if.end:                                           ; preds = %if.then, %do.end7
  br label %while.cond, !dbg !15358, !llvm.loop !15397

while.end:                                        ; preds = %while.cond
  call void @mutex_unlock(%struct.mutex* @usbfs_mutex) #11, !dbg !15399
  ret void, !dbg !15400
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { argmemonly nounwind willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { nounwind readnone }
attributes #15 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4962}
!llvm.module.flags = !{!4963, !4964, !4965, !4966}
!llvm.ident = !{!4967}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_usbfs_snoop", scope: !2, file: !3, line: 112, type: !4961, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !188, globals: !4827, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/usb/core/devio.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !18, !27, !34, !40, !45, !51, !58, !64, !73, !81, !87, !93, !100, !108, !114, !128, !135, !140, !145, !149, !155, !162, !170, !176, !182}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_state", file: !6, line: 1156, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/uapi/linux/usb/ch9.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17}
!9 = !DIEnumerator(name: "USB_STATE_NOTATTACHED", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "USB_STATE_ATTACHED", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "USB_STATE_POWERED", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "USB_STATE_RECONNECTING", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "USB_STATE_UNAUTHENTICATED", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "USB_STATE_DEFAULT", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "USB_STATE_ADDRESS", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "USB_STATE_CONFIGURED", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "USB_STATE_SUSPENDED", value: 8, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_speed", file: !6, line: 1146, baseType: !7, size: 32, elements: !19)
!19 = !{!20, !21, !22, !23, !24, !25, !26}
!20 = !DIEnumerator(name: "USB_SPEED_UNKNOWN", value: 0, isUnsigned: true)
!21 = !DIEnumerator(name: "USB_SPEED_LOW", value: 1, isUnsigned: true)
!22 = !DIEnumerator(name: "USB_SPEED_FULL", value: 2, isUnsigned: true)
!23 = !DIEnumerator(name: "USB_SPEED_HIGH", value: 3, isUnsigned: true)
!24 = !DIEnumerator(name: "USB_SPEED_WIRELESS", value: 4, isUnsigned: true)
!25 = !DIEnumerator(name: "USB_SPEED_SUPER", value: 5, isUnsigned: true)
!26 = !DIEnumerator(name: "USB_SPEED_SUPER_PLUS", value: 6, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !28, line: 15, baseType: !7, size: 32, elements: !29)
!28 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!29 = !{!30, !31, !32, !33}
!30 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!31 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!32 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!33 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !35, line: 546, baseType: !7, size: 32, elements: !36)
!35 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!36 = !{!37, !38, !39}
!37 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!38 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !41, line: 65, baseType: !7, size: 32, elements: !42)
!41 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!42 = !{!43, !44}
!43 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!44 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !46, line: 16, baseType: !7, size: 32, elements: !47)
!46 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!47 = !{!48, !49, !50}
!48 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!49 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!50 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !52, line: 59, baseType: !7, size: 32, elements: !53)
!52 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!53 = !{!54, !55, !56, !57}
!54 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!55 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!56 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!57 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!58 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !59, line: 54, baseType: !7, size: 32, elements: !60)
!59 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!60 = !{!61, !62, !63}
!61 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!62 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!63 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!64 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !65, line: 296, baseType: !7, size: 32, elements: !66)
!65 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!66 = !{!67, !68, !69, !70, !71, !72}
!67 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!71 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!72 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !74, line: 9, baseType: !7, size: 32, elements: !75)
!74 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!75 = !{!76, !77, !78, !79, !80}
!76 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!80 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!81 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !82, line: 26, baseType: !7, size: 32, elements: !83)
!82 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!83 = !{!84, !85, !86}
!84 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!85 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !88, line: 44, baseType: !7, size: 32, elements: !89)
!88 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!89 = !{!90, !91, !92}
!90 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!91 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!92 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !94, line: 343, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99}
!96 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !101, line: 524, baseType: !7, size: 32, elements: !102)
!101 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!102 = !{!103, !104, !105, !106, !107}
!103 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!105 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!106 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!107 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !101, line: 502, baseType: !7, size: 32, elements: !109)
!109 = !{!110, !111, !112, !113}
!110 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!113 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !115, line: 76, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127}
!117 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!119 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!120 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!121 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!122 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!123 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!124 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!125 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!126 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!127 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_interface_condition", file: !129, line: 96, baseType: !7, size: 32, elements: !130)
!129 = !DIFile(filename: "./include/linux/usb.h", directory: "/home/lizy2001/genbc/linux")
!130 = !{!131, !132, !133, !134}
!131 = !DIEnumerator(name: "USB_INTERFACE_UNBOUND", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "USB_INTERFACE_BINDING", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "USB_INTERFACE_BOUND", value: 2, isUnsigned: true)
!134 = !DIEnumerator(name: "USB_INTERFACE_UNBINDING", value: 3, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_removable", file: !129, line: 476, baseType: !7, size: 32, elements: !136)
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "USB_DEVICE_REMOVABLE_UNKNOWN", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "USB_DEVICE_REMOVABLE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "USB_DEVICE_FIXED", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !141, line: 10, baseType: !7, size: 32, elements: !142)
!141 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!142 = !{!143, !144}
!143 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!144 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "snoop_when", file: !3, line: 126, baseType: !7, size: 32, elements: !146)
!146 = !{!147, !148}
!147 = !DIEnumerator(name: "SUBMIT", value: 0, isUnsigned: true)
!148 = !DIEnumerator(name: "COMPLETE", value: 1, isUnsigned: true)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !150, line: 567, baseType: !7, size: 32, elements: !151)
!150 = !DIFile(filename: "./include/linux/printk.h", directory: "/home/lizy2001/genbc/linux")
!151 = !{!152, !153, !154}
!152 = !DIEnumerator(name: "DUMP_PREFIX_NONE", value: 0, isUnsigned: true)
!153 = !DIEnumerator(name: "DUMP_PREFIX_ADDRESS", value: 1, isUnsigned: true)
!154 = !DIEnumerator(name: "DUMP_PREFIX_OFFSET", value: 2, isUnsigned: true)
!155 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !156, line: 305, baseType: !7, size: 32, elements: !157)
!156 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!157 = !{!158, !159, !160, !161}
!158 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!159 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!160 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!161 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !163, line: 119, baseType: !7, size: 32, elements: !164)
!163 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!164 = !{!165, !166, !167, !168, !169}
!165 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!166 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!167 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!168 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!169 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !171, line: 11, baseType: !7, size: 32, elements: !172)
!171 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!172 = !{!173, !174, !175}
!173 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!175 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb3_link_state", file: !6, line: 1181, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181}
!178 = !DIEnumerator(name: "USB3_LPM_U0", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "USB3_LPM_U1", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "USB3_LPM_U2", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "USB3_LPM_U3", value: 3, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_dev_authorize_policy", file: !183, line: 75, baseType: !7, size: 32, elements: !184)
!183 = !DIFile(filename: "./include/linux/usb/hcd.h", directory: "/home/lizy2001/genbc/linux")
!184 = !{!185, !186, !187}
!185 = !DIEnumerator(name: "USB_DEVICE_AUTHORIZE_NONE", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "USB_DEVICE_AUTHORIZE_ALL", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "USB_DEVICE_AUTHORIZE_INTERNAL", value: 2, isUnsigned: true)
!188 = !{!189, !190, !4424, !4426, !4428, !4429, !4519, !372, !4521, !322, !4523, !898, !4159, !205, !2903, !3097, !859, !2318, !765, !4524, !4012, !4525, !1254, !4185, !788, !4526, !4529, !2876, !7, !749, !4532, !1589, !357, !285, !4504, !4559, !4619, !471, !4620, !4622, !201}
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_dev_state", file: !3, line: 60, size: 1408, elements: !192)
!192 = !{!193, !200, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423}
!193 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !191, file: !3, line: 61, baseType: !194, size: 128)
!194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !195, line: 178, size: 128, elements: !196)
!195 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!196 = !{!197, !199}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !194, file: !195, line: 179, baseType: !198, size: 64)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !194, file: !195, line: 179, baseType: !198, size: 64, offset: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !191, file: !3, line: 62, baseType: !201, size: 64, offset: 128)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device", file: !129, line: 631, size: 10624, elements: !203)
!203 = !{!204, !206, !211, !216, !217, !218, !219, !220, !266, !267, !271, !272, !4148, !4189, !4190, !4207, !4268, !4350, !4351, !4353, !4354, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4384, !4385, !4386, !4389, !4390, !4391, !4396, !4403, !4404, !4405, !4406}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "devnum", scope: !202, file: !129, line: 632, baseType: !205, size: 32)
!205 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "devpath", scope: !202, file: !129, line: 633, baseType: !207, size: 128, offset: 32)
!207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 128, elements: !209)
!208 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!209 = !{!210}
!210 = !DISubrange(count: 16)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "route", scope: !202, file: !129, line: 634, baseType: !212, size: 32, offset: 160)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !213, line: 21, baseType: !214)
!213 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !215, line: 27, baseType: !7)
!215 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !202, file: !129, line: 635, baseType: !5, size: 32, offset: 192)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !202, file: !129, line: 636, baseType: !18, size: 32, offset: 224)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "rx_lanes", scope: !202, file: !129, line: 637, baseType: !7, size: 32, offset: 256)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lanes", scope: !202, file: !129, line: 638, baseType: !7, size: 32, offset: 288)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "tt", scope: !202, file: !129, line: 640, baseType: !221, size: 64, offset: 320)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_tt", file: !183, line: 554, size: 576, elements: !223)
!223 = !{!224, !225, !226, !227, !228, !244, !245}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "hub", scope: !222, file: !183, line: 555, baseType: !201, size: 64)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "multi", scope: !222, file: !183, line: 556, baseType: !205, size: 32, offset: 64)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "think_time", scope: !222, file: !183, line: 557, baseType: !7, size: 32, offset: 96)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !222, file: !183, line: 558, baseType: !189, size: 64, offset: 128)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !222, file: !183, line: 561, baseType: !229, offset: 192)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !230, line: 83, baseType: !231)
!230 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !230, line: 71, elements: !232)
!232 = !{!233}
!233 = !DIDerivedType(tag: DW_TAG_member, scope: !231, file: !230, line: 72, baseType: !234)
!234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !231, file: !230, line: 72, elements: !235)
!235 = !{!236}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !234, file: !230, line: 73, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !230, line: 20, elements: !238)
!238 = !{!239}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !237, file: !230, line: 21, baseType: !240)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !241, line: 25, baseType: !242)
!241 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !241, line: 25, elements: !243)
!243 = !{}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "clear_list", scope: !222, file: !183, line: 562, baseType: !194, size: 128, offset: 192)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "clear_work", scope: !222, file: !183, line: 563, baseType: !246, size: 256, offset: 320)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !247, line: 102, size: 256, elements: !248)
!247 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!248 = !{!249, !259, !260}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !246, file: !247, line: 103, baseType: !250, size: 64)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !251, line: 13, baseType: !252)
!251 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !195, line: 175, baseType: !253)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !195, line: 173, size: 64, elements: !254)
!254 = !{!255}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !253, file: !195, line: 174, baseType: !256, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !213, line: 22, baseType: !257)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !215, line: 30, baseType: !258)
!258 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !246, file: !247, line: 104, baseType: !194, size: 128, offset: 64)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !246, file: !247, line: 105, baseType: !261, size: 64, offset: 192)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !247, line: 21, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = !DISubroutineType(types: !264)
!264 = !{null, !265}
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "ttport", scope: !202, file: !129, line: 641, baseType: !205, size: 32, offset: 384)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "toggle", scope: !202, file: !129, line: 643, baseType: !268, size: 64, offset: 416)
!268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !269)
!269 = !{!270}
!270 = !DISubrange(count: 2)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !202, file: !129, line: 645, baseType: !201, size: 64, offset: 512)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !202, file: !129, line: 646, baseType: !273, size: 64, offset: 576)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_bus", file: !129, line: 424, size: 960, elements: !275)
!275 = !{!276, !4125, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4142, !4143, !4144, !4145, !4146, !4147}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !274, file: !129, line: 425, baseType: !277, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !94, line: 461, size: 5568, elements: !279)
!279 = !{!280, !3579, !3580, !3583, !3584, !3635, !3726, !3727, !3728, !3729, !3730, !3739, !3844, !3857, !4052, !4053, !4057, !4059, !4060, !4061, !4065, !4071, !4072, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4113, !4114, !4115, !4118, !4121, !4122, !4123, !4124}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !278, file: !94, line: 462, baseType: !281, size: 512)
!281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !282, line: 64, size: 512, elements: !283)
!282 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!283 = !{!284, !287, !288, !290, !335, !3429, !3569, !3574, !3575, !3576, !3577, !3578}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !281, file: !282, line: 65, baseType: !285, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !281, file: !282, line: 66, baseType: !194, size: 128, offset: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !281, file: !282, line: 67, baseType: !289, size: 64, offset: 192)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !281, file: !282, line: 68, baseType: !291, size: 64, offset: 256)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !282, line: 192, size: 704, elements: !293)
!293 = !{!294, !295, !296, !297}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !292, file: !282, line: 193, baseType: !194, size: 128)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !292, file: !282, line: 194, baseType: !229, offset: 128)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !292, file: !282, line: 195, baseType: !281, size: 512, offset: 128)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !292, file: !282, line: 196, baseType: !298, size: 64, offset: 640)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !300)
!300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !282, line: 156, size: 192, elements: !301)
!301 = !{!302, !307, !312}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !300, file: !282, line: 157, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !304)
!304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!305 = !DISubroutineType(types: !306)
!306 = !{!205, !291, !289}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !300, file: !282, line: 158, baseType: !308, size: 64, offset: 64)
!308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !309)
!309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!310 = !DISubroutineType(types: !311)
!311 = !{!285, !291, !289}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !300, file: !282, line: 159, baseType: !313, size: 64, offset: 128)
!313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = !DISubroutineType(types: !316)
!316 = !{!205, !291, !289, !317}
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !282, line: 148, size: 20736, elements: !319)
!319 = !{!320, !325, !329, !330, !334}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !318, file: !282, line: 149, baseType: !321, size: 192)
!321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 192, elements: !323)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64)
!323 = !{!324}
!324 = !DISubrange(count: 3)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !318, file: !282, line: 150, baseType: !326, size: 4096, offset: 192)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 4096, elements: !327)
!327 = !{!328}
!328 = !DISubrange(count: 64)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !318, file: !282, line: 151, baseType: !205, size: 32, offset: 4288)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !318, file: !282, line: 152, baseType: !331, size: 16384, offset: 4320)
!331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 16384, elements: !332)
!332 = !{!333}
!333 = !DISubrange(count: 2048)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !318, file: !282, line: 153, baseType: !205, size: 32, offset: 20704)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !281, file: !282, line: 69, baseType: !336, size: 64, offset: 320)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !282, line: 138, size: 448, elements: !338)
!338 = !{!339, !343, !373, !375, !3393, !3421, !3425}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !337, file: !282, line: 139, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DISubroutineType(types: !342)
!342 = !{null, !289}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !337, file: !282, line: 140, baseType: !344, size: 64, offset: 64)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !346)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !347, line: 230, size: 128, elements: !348)
!347 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!348 = !{!349, !365}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !346, file: !347, line: 231, baseType: !350, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = !DISubroutineType(types: !352)
!352 = !{!353, !289, !358, !322}
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !195, line: 60, baseType: !354)
!354 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !355, line: 73, baseType: !356)
!355 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !355, line: 15, baseType: !357)
!357 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !347, line: 30, size: 128, elements: !360)
!360 = !{!361, !362}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !359, file: !347, line: 31, baseType: !285, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !359, file: !347, line: 32, baseType: !363, size: 16, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !195, line: 19, baseType: !364)
!364 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !346, file: !347, line: 232, baseType: !366, size: 64, offset: 64)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DISubroutineType(types: !368)
!368 = !{!353, !289, !358, !285, !369}
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !195, line: 55, baseType: !370)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !355, line: 72, baseType: !371)
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !355, line: 16, baseType: !372)
!372 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !337, file: !282, line: 141, baseType: !374, size: 64, offset: 128)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !337, file: !282, line: 142, baseType: !376, size: 64, offset: 192)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !379)
!379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !347, line: 84, size: 320, elements: !380)
!380 = !{!381, !382, !386, !3390, !3391}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !379, file: !347, line: 85, baseType: !285, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !379, file: !347, line: 86, baseType: !383, size: 64, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!384 = !DISubroutineType(types: !385)
!385 = !{!363, !289, !358, !205}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !379, file: !347, line: 88, baseType: !387, size: 64, offset: 128)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!388 = !DISubroutineType(types: !389)
!389 = !{!363, !289, !390, !205}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !347, line: 168, size: 448, elements: !392)
!392 = !{!393, !394, !395, !396, !3385, !3386}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !391, file: !347, line: 169, baseType: !359, size: 128)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !391, file: !347, line: 170, baseType: !369, size: 64, offset: 128)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !391, file: !347, line: 171, baseType: !189, size: 64, offset: 192)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !391, file: !347, line: 172, baseType: !397, size: 64, offset: 256)
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!398 = !DISubroutineType(types: !399)
!399 = !{!353, !400, !289, !390, !322, !575, !369}
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !65, line: 916, size: 1856, align: 32, elements: !402)
!402 = !{!403, !421, !3350, !3351, !3352, !3353, !3354, !3355, !3356, !3357, !3358, !3359, !3368, !3369, !3378, !3379, !3380, !3381, !3382, !3383, !3384}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !401, file: !65, line: 920, baseType: !404, size: 128)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !65, line: 917, size: 128, elements: !405)
!405 = !{!406, !412}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !404, file: !65, line: 918, baseType: !407, size: 64)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !408, line: 58, size: 64, elements: !409)
!408 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!409 = !{!410}
!410 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !407, file: !408, line: 59, baseType: !411, size: 64)
!411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !404, file: !65, line: 919, baseType: !413, size: 128, align: 64)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !195, line: 216, size: 128, align: 64, elements: !414)
!414 = !{!415, !417}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !413, file: !195, line: 217, baseType: !416, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !413, file: !195, line: 218, baseType: !418, size: 64, offset: 64)
!418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!419 = !DISubroutineType(types: !420)
!420 = !{null, !416}
!421 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !401, file: !65, line: 921, baseType: !422, size: 128, offset: 128)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !423, line: 8, size: 128, elements: !424)
!423 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!424 = !{!425, !429}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !422, file: !423, line: 9, baseType: !426, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !428, line: 18, flags: DIFlagFwdDecl)
!428 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!429 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !422, file: !423, line: 10, baseType: !430, size: 64, offset: 64)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !428, line: 89, size: 1536, elements: !432)
!432 = !{!433, !434, !444, !452, !453, !472, !3319, !3321, !3333, !3334, !3335, !3336, !3337, !3342, !3343, !3344}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !431, file: !428, line: 91, baseType: !7, size: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !431, file: !428, line: 92, baseType: !435, size: 32, offset: 32)
!435 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !436, line: 277, baseType: !437)
!436 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !436, line: 277, size: 32, elements: !438)
!438 = !{!439}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !437, file: !436, line: 277, baseType: !440, size: 32)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !436, line: 70, baseType: !441)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !436, line: 65, size: 32, elements: !442)
!442 = !{!443}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !441, file: !436, line: 66, baseType: !7, size: 32)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !431, file: !428, line: 93, baseType: !445, size: 128, offset: 64)
!445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !446, line: 38, size: 128, elements: !447)
!446 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!447 = !{!448, !450}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !445, file: !446, line: 39, baseType: !449, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !445, file: !446, line: 39, baseType: !451, size: 64, offset: 64)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !431, file: !428, line: 94, baseType: !430, size: 64, offset: 192)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !431, file: !428, line: 95, baseType: !454, size: 128, offset: 256)
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !428, line: 47, size: 128, elements: !455)
!455 = !{!456, !468}
!456 = !DIDerivedType(tag: DW_TAG_member, scope: !454, file: !428, line: 48, baseType: !457, size: 64)
!457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !454, file: !428, line: 48, size: 64, elements: !458)
!458 = !{!459, !464}
!459 = !DIDerivedType(tag: DW_TAG_member, scope: !457, file: !428, line: 49, baseType: !460, size: 64)
!460 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !457, file: !428, line: 49, size: 64, elements: !461)
!461 = !{!462, !463}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !460, file: !428, line: 50, baseType: !212, size: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !460, file: !428, line: 50, baseType: !212, size: 32, offset: 32)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !457, file: !428, line: 52, baseType: !465, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !213, line: 23, baseType: !466)
!466 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !215, line: 31, baseType: !467)
!467 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !454, file: !428, line: 54, baseType: !469, size: 64, offset: 64)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !431, file: !428, line: 96, baseType: !473, size: 64, offset: 384)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !65, line: 610, size: 4224, elements: !475)
!475 = !{!476, !477, !478, !486, !493, !494, !640, !3014, !3015, !3016, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3287, !3295, !3296, !3297, !3315, !3316, !3317, !3318}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !474, file: !65, line: 611, baseType: !363, size: 16)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !474, file: !65, line: 612, baseType: !364, size: 16, offset: 16)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !474, file: !65, line: 613, baseType: !479, size: 32, offset: 32)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !480, line: 23, baseType: !481)
!480 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !480, line: 21, size: 32, elements: !482)
!482 = !{!483}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !481, file: !480, line: 22, baseType: !484, size: 32)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !195, line: 32, baseType: !485)
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !355, line: 49, baseType: !7)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !474, file: !65, line: 614, baseType: !487, size: 32, offset: 64)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !480, line: 28, baseType: !488)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !480, line: 26, size: 32, elements: !489)
!489 = !{!490}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !488, file: !480, line: 27, baseType: !491, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !195, line: 33, baseType: !492)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !355, line: 50, baseType: !7)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !474, file: !65, line: 615, baseType: !7, size: 32, offset: 96)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !474, file: !65, line: 622, baseType: !495, size: 64, offset: 128)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !497)
!497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !65, line: 1864, size: 1536, align: 512, elements: !498)
!498 = !{!499, !503, !516, !520, !526, !530, !536, !540, !544, !548, !552, !553, !559, !563, !587, !616, !620, !626, !631, !635, !636}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !497, file: !65, line: 1865, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DISubroutineType(types: !502)
!502 = !{!430, !473, !430, !7}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !497, file: !65, line: 1866, baseType: !504, size: 64, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DISubroutineType(types: !506)
!506 = !{!285, !430, !473, !507}
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !509, line: 10, size: 128, elements: !510)
!509 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!510 = !{!511, !515}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !508, file: !509, line: 11, baseType: !512, size: 64)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = !DISubroutineType(types: !514)
!514 = !{null, !189}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !508, file: !509, line: 12, baseType: !189, size: 64, offset: 64)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !497, file: !65, line: 1867, baseType: !517, size: 64, offset: 128)
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = !DISubroutineType(types: !519)
!519 = !{!205, !473, !205}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !497, file: !65, line: 1868, baseType: !521, size: 64, offset: 192)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = !DISubroutineType(types: !523)
!523 = !{!524, !473, !205}
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !65, line: 581, flags: DIFlagFwdDecl)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !497, file: !65, line: 1870, baseType: !527, size: 64, offset: 256)
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = !DISubroutineType(types: !529)
!529 = !{!205, !430, !322, !205}
!530 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !497, file: !65, line: 1872, baseType: !531, size: 64, offset: 320)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DISubroutineType(types: !533)
!533 = !{!205, !473, !430, !363, !534}
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !195, line: 30, baseType: !535)
!535 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !497, file: !65, line: 1873, baseType: !537, size: 64, offset: 384)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!538 = !DISubroutineType(types: !539)
!539 = !{!205, !430, !473, !430}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !497, file: !65, line: 1874, baseType: !541, size: 64, offset: 448)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DISubroutineType(types: !543)
!543 = !{!205, !473, !430}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !497, file: !65, line: 1875, baseType: !545, size: 64, offset: 512)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!546 = !DISubroutineType(types: !547)
!547 = !{!205, !473, !430, !285}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !497, file: !65, line: 1876, baseType: !549, size: 64, offset: 576)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = !DISubroutineType(types: !551)
!551 = !{!205, !473, !430, !363}
!552 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !497, file: !65, line: 1877, baseType: !541, size: 64, offset: 640)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !497, file: !65, line: 1878, baseType: !554, size: 64, offset: 704)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = !DISubroutineType(types: !556)
!556 = !{!205, !473, !430, !363, !557}
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !195, line: 16, baseType: !558)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !195, line: 13, baseType: !212)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !497, file: !65, line: 1879, baseType: !560, size: 64, offset: 768)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!561 = !DISubroutineType(types: !562)
!562 = !{!205, !473, !430, !473, !430, !7}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !497, file: !65, line: 1881, baseType: !564, size: 64, offset: 832)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DISubroutineType(types: !566)
!566 = !{!205, !430, !567}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !65, line: 219, size: 640, elements: !569)
!569 = !{!570, !571, !572, !573, !574, !577, !584, !585, !586}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !568, file: !65, line: 220, baseType: !7, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !568, file: !65, line: 221, baseType: !363, size: 16, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !568, file: !65, line: 222, baseType: !479, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !568, file: !65, line: 223, baseType: !487, size: 32, offset: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !568, file: !65, line: 224, baseType: !575, size: 64, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !195, line: 46, baseType: !576)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !355, line: 88, baseType: !258)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !568, file: !65, line: 225, baseType: !578, size: 128, offset: 192)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !579, line: 13, size: 128, elements: !580)
!579 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!580 = !{!581, !583}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !578, file: !579, line: 14, baseType: !582, size: 64)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !579, line: 8, baseType: !257)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !578, file: !579, line: 15, baseType: !357, size: 64, offset: 64)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !568, file: !65, line: 226, baseType: !578, size: 128, offset: 320)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !568, file: !65, line: 227, baseType: !578, size: 128, offset: 448)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !568, file: !65, line: 234, baseType: !400, size: 64, offset: 576)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !497, file: !65, line: 1882, baseType: !588, size: 64, offset: 896)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!205, !591, !593, !212, !7}
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !422)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !595, line: 22, size: 1152, elements: !596)
!595 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!596 = !{!597, !598, !599, !600, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !594, file: !595, line: 23, baseType: !212, size: 32)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !594, file: !595, line: 24, baseType: !363, size: 16, offset: 32)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !594, file: !595, line: 25, baseType: !7, size: 32, offset: 64)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !594, file: !595, line: 26, baseType: !601, size: 32, offset: 96)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !195, line: 104, baseType: !212)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !594, file: !595, line: 27, baseType: !465, size: 64, offset: 128)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !594, file: !595, line: 28, baseType: !465, size: 64, offset: 192)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !594, file: !595, line: 37, baseType: !465, size: 64, offset: 256)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !594, file: !595, line: 38, baseType: !557, size: 32, offset: 320)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !594, file: !595, line: 39, baseType: !557, size: 32, offset: 352)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !594, file: !595, line: 40, baseType: !479, size: 32, offset: 384)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !594, file: !595, line: 41, baseType: !487, size: 32, offset: 416)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !594, file: !595, line: 42, baseType: !575, size: 64, offset: 448)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !594, file: !595, line: 43, baseType: !578, size: 128, offset: 512)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !594, file: !595, line: 44, baseType: !578, size: 128, offset: 640)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !594, file: !595, line: 45, baseType: !578, size: 128, offset: 768)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !594, file: !595, line: 46, baseType: !578, size: 128, offset: 896)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !594, file: !595, line: 47, baseType: !465, size: 64, offset: 1024)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !594, file: !595, line: 48, baseType: !465, size: 64, offset: 1088)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !497, file: !65, line: 1883, baseType: !617, size: 64, offset: 960)
!617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !618, size: 64)
!618 = !DISubroutineType(types: !619)
!619 = !{!353, !430, !322, !369}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !497, file: !65, line: 1884, baseType: !621, size: 64, offset: 1024)
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = !DISubroutineType(types: !623)
!623 = !{!205, !473, !624, !465, !465}
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !65, line: 50, flags: DIFlagFwdDecl)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !497, file: !65, line: 1886, baseType: !627, size: 64, offset: 1088)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DISubroutineType(types: !629)
!629 = !{!205, !473, !630, !205}
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !497, file: !65, line: 1887, baseType: !632, size: 64, offset: 1152)
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!633 = !DISubroutineType(types: !634)
!634 = !{!205, !473, !430, !400, !7, !363}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !497, file: !65, line: 1890, baseType: !549, size: 64, offset: 1216)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !497, file: !65, line: 1891, baseType: !637, size: 64, offset: 1280)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = !DISubroutineType(types: !639)
!639 = !{!205, !473, !524, !205}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !474, file: !65, line: 623, baseType: !641, size: 64, offset: 192)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !65, line: 1416, size: 9472, elements: !643)
!643 = !{!644, !645, !646, !647, !648, !649, !698, !2621, !2703, !2786, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2802, !2806, !2807, !2810, !2811, !2814, !2815, !2816, !2857, !2884, !2885, !2886, !2887, !2888, !2889, !2892, !2894, !2901, !2902, !2904, !2905, !2906, !2965, !2966, !2981, !2982, !2983, !2984, !2985, !2988, !2989, !2990, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !642, file: !65, line: 1417, baseType: !194, size: 128)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !642, file: !65, line: 1418, baseType: !557, size: 32, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !642, file: !65, line: 1419, baseType: !471, size: 8, offset: 160)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !642, file: !65, line: 1420, baseType: !372, size: 64, offset: 192)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !642, file: !65, line: 1421, baseType: !575, size: 64, offset: 256)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !642, file: !65, line: 1422, baseType: !650, size: 64, offset: 320)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !65, line: 2228, size: 576, elements: !652)
!652 = !{!653, !654, !655, !661, !665, !669, !673, !677, !678, !688, !691, !692, !693, !695, !696, !697}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !651, file: !65, line: 2229, baseType: !285, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !651, file: !65, line: 2230, baseType: !205, size: 32, offset: 64)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !651, file: !65, line: 2238, baseType: !656, size: 64, offset: 128)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DISubroutineType(types: !658)
!658 = !{!205, !659}
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !65, line: 69, flags: DIFlagFwdDecl)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !651, file: !65, line: 2239, baseType: !662, size: 64, offset: 192)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !664)
!664 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !65, line: 70, flags: DIFlagFwdDecl)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !651, file: !65, line: 2240, baseType: !666, size: 64, offset: 256)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{!430, !650, !205, !285, !189}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !651, file: !65, line: 2242, baseType: !670, size: 64, offset: 320)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DISubroutineType(types: !672)
!672 = !{null, !641}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !651, file: !65, line: 2243, baseType: !674, size: 64, offset: 384)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !676, line: 76, flags: DIFlagFwdDecl)
!676 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!677 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !651, file: !65, line: 2244, baseType: !650, size: 64, offset: 448)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !651, file: !65, line: 2245, baseType: !679, size: 64, offset: 512)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !195, line: 182, size: 64, elements: !680)
!680 = !{!681}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !679, file: !195, line: 183, baseType: !682, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !195, line: 186, size: 128, elements: !684)
!684 = !{!685, !686}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !683, file: !195, line: 187, baseType: !682, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !683, file: !195, line: 187, baseType: !687, size: 64, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !651, file: !65, line: 2247, baseType: !689, offset: 576)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !690, line: 187, elements: !243)
!690 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!691 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !651, file: !65, line: 2248, baseType: !689, offset: 576)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !651, file: !65, line: 2249, baseType: !689, offset: 576)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !651, file: !65, line: 2250, baseType: !694, offset: 576)
!694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !689, elements: !323)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !651, file: !65, line: 2252, baseType: !689, offset: 576)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !651, file: !65, line: 2253, baseType: !689, offset: 576)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !651, file: !65, line: 2254, baseType: !689, offset: 576)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !642, file: !65, line: 1423, baseType: !699, size: 64, offset: 384)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !65, line: 1935, size: 1472, elements: !702)
!702 = !{!703, !707, !711, !712, !716, !722, !726, !727, !728, !732, !736, !737, !738, !739, !745, !750, !751, !758, !759, !760, !761, !2605, !2620}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !701, file: !65, line: 1936, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DISubroutineType(types: !706)
!706 = !{!473, !641}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !701, file: !65, line: 1937, baseType: !708, size: 64, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DISubroutineType(types: !710)
!710 = !{null, !473}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !701, file: !65, line: 1938, baseType: !708, size: 64, offset: 128)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !701, file: !65, line: 1940, baseType: !713, size: 64, offset: 192)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DISubroutineType(types: !715)
!715 = !{null, !473, !205}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !701, file: !65, line: 1941, baseType: !717, size: 64, offset: 256)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{!205, !473, !720}
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !65, line: 289, flags: DIFlagFwdDecl)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !701, file: !65, line: 1942, baseType: !723, size: 64, offset: 320)
!723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!724 = !DISubroutineType(types: !725)
!725 = !{!205, !473}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !701, file: !65, line: 1943, baseType: !708, size: 64, offset: 384)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !701, file: !65, line: 1944, baseType: !670, size: 64, offset: 448)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !701, file: !65, line: 1945, baseType: !729, size: 64, offset: 512)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DISubroutineType(types: !731)
!731 = !{!205, !641, !205}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !701, file: !65, line: 1946, baseType: !733, size: 64, offset: 576)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DISubroutineType(types: !735)
!735 = !{!205, !641}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !701, file: !65, line: 1947, baseType: !733, size: 64, offset: 640)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !701, file: !65, line: 1948, baseType: !733, size: 64, offset: 704)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !701, file: !65, line: 1949, baseType: !733, size: 64, offset: 768)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !701, file: !65, line: 1950, baseType: !740, size: 64, offset: 832)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DISubroutineType(types: !742)
!742 = !{!205, !430, !743}
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !65, line: 57, flags: DIFlagFwdDecl)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !701, file: !65, line: 1951, baseType: !746, size: 64, offset: 896)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DISubroutineType(types: !748)
!748 = !{!205, !641, !749, !322}
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !701, file: !65, line: 1952, baseType: !670, size: 64, offset: 960)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !701, file: !65, line: 1954, baseType: !752, size: 64, offset: 1024)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DISubroutineType(types: !754)
!754 = !{!205, !755, !430}
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !757, line: 539, flags: DIFlagFwdDecl)
!757 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!758 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !701, file: !65, line: 1955, baseType: !752, size: 64, offset: 1088)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !701, file: !65, line: 1956, baseType: !752, size: 64, offset: 1152)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !701, file: !65, line: 1957, baseType: !752, size: 64, offset: 1216)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !701, file: !65, line: 1963, baseType: !762, size: 64, offset: 1280)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!763 = !DISubroutineType(types: !764)
!764 = !{!205, !641, !765, !788}
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !767, line: 68, size: 512, align: 128, elements: !768)
!767 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!768 = !{!769, !770, !2597, !2604}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !766, file: !767, line: 69, baseType: !372, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !767, line: 77, baseType: !771, size: 320, offset: 64)
!771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !766, file: !767, line: 77, size: 320, elements: !772)
!772 = !{!773, !954, !959, !987, !995, !1001, !2528, !2596}
!773 = !DIDerivedType(tag: DW_TAG_member, scope: !771, file: !767, line: 78, baseType: !774, size: 320)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !771, file: !767, line: 78, size: 320, elements: !775)
!775 = !{!776, !777, !952, !953}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !774, file: !767, line: 84, baseType: !194, size: 128)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !774, file: !767, line: 86, baseType: !778, size: 64, offset: 128)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !65, line: 451, size: 1216, align: 64, elements: !780)
!780 = !{!781, !782, !790, !791, !796, !811, !820, !821, !822, !823, !945, !946, !949, !950, !951}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !779, file: !65, line: 452, baseType: !473, size: 64)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !779, file: !65, line: 453, baseType: !783, size: 128, offset: 64)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !784, line: 292, size: 128, elements: !785)
!784 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!785 = !{!786, !787, !789}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !783, file: !784, line: 293, baseType: !229)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !783, file: !784, line: 295, baseType: !788, size: 32)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !195, line: 148, baseType: !7)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !783, file: !784, line: 296, baseType: !189, size: 64, offset: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !779, file: !65, line: 454, baseType: !788, size: 32, offset: 192)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !779, file: !65, line: 455, baseType: !792, size: 32, offset: 224)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !195, line: 168, baseType: !793)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !195, line: 166, size: 32, elements: !794)
!794 = !{!795}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !793, file: !195, line: 167, baseType: !205, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !779, file: !65, line: 460, baseType: !797, size: 128, offset: 256)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !798, line: 125, size: 128, elements: !799)
!798 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!799 = !{!800, !810}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !797, file: !798, line: 126, baseType: !801, size: 64)
!801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !798, line: 31, size: 64, elements: !802)
!802 = !{!803}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !801, file: !798, line: 32, baseType: !804, size: 64)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !798, line: 24, size: 192, align: 64, elements: !806)
!806 = !{!807, !808, !809}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !805, file: !798, line: 25, baseType: !372, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !805, file: !798, line: 26, baseType: !804, size: 64, offset: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !805, file: !798, line: 27, baseType: !804, size: 64, offset: 128)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !797, file: !798, line: 127, baseType: !804, size: 64, offset: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !779, file: !65, line: 461, baseType: !812, size: 256, offset: 384)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !813, line: 35, size: 256, elements: !814)
!813 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!814 = !{!815, !816, !817, !819}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !812, file: !813, line: 36, baseType: !250, size: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !812, file: !813, line: 42, baseType: !250, size: 64, offset: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !812, file: !813, line: 46, baseType: !818, offset: 128)
!818 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !230, line: 29, baseType: !237)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !812, file: !813, line: 47, baseType: !194, size: 128, offset: 128)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !779, file: !65, line: 462, baseType: !372, size: 64, offset: 640)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !779, file: !65, line: 463, baseType: !372, size: 64, offset: 704)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !779, file: !65, line: 464, baseType: !372, size: 64, offset: 768)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !779, file: !65, line: 465, baseType: !824, size: 64, offset: 832)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !826)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !65, line: 367, size: 1408, elements: !827)
!827 = !{!828, !832, !836, !840, !844, !848, !854, !860, !864, !869, !873, !877, !881, !909, !913, !919, !920, !921, !925, !930, !934, !941}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !826, file: !65, line: 368, baseType: !829, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DISubroutineType(types: !831)
!831 = !{!205, !765, !720}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !826, file: !65, line: 369, baseType: !833, size: 64, offset: 64)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{!205, !400, !765}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !826, file: !65, line: 372, baseType: !837, size: 64, offset: 128)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{!205, !778, !720}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !826, file: !65, line: 375, baseType: !841, size: 64, offset: 192)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DISubroutineType(types: !843)
!843 = !{!205, !765}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !826, file: !65, line: 381, baseType: !845, size: 64, offset: 256)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DISubroutineType(types: !847)
!847 = !{!205, !400, !778, !198, !7}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !826, file: !65, line: 383, baseType: !849, size: 64, offset: 320)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DISubroutineType(types: !851)
!851 = !{null, !852}
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !65, line: 290, flags: DIFlagFwdDecl)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !826, file: !65, line: 385, baseType: !855, size: 64, offset: 384)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{!205, !400, !778, !575, !7, !7, !858, !859}
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !826, file: !65, line: 388, baseType: !861, size: 64, offset: 448)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{!205, !400, !778, !575, !7, !7, !765, !189}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !826, file: !65, line: 393, baseType: !865, size: 64, offset: 512)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!868, !778, !868}
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !195, line: 125, baseType: !465)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !826, file: !65, line: 394, baseType: !870, size: 64, offset: 576)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!871 = !DISubroutineType(types: !872)
!872 = !{null, !765, !7, !7}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !826, file: !65, line: 395, baseType: !874, size: 64, offset: 640)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{!205, !765, !788}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !826, file: !65, line: 396, baseType: !878, size: 64, offset: 704)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DISubroutineType(types: !880)
!880 = !{null, !765}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !826, file: !65, line: 397, baseType: !882, size: 64, offset: 768)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DISubroutineType(types: !884)
!884 = !{!353, !885, !907}
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !65, line: 320, size: 384, elements: !887)
!887 = !{!888, !889, !890, !894, !895, !896, !899, !900}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !886, file: !65, line: 321, baseType: !400, size: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !886, file: !65, line: 326, baseType: !575, size: 64, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !886, file: !65, line: 327, baseType: !891, size: 64, offset: 128)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{null, !885, !357, !357}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !886, file: !65, line: 328, baseType: !189, size: 64, offset: 192)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !886, file: !65, line: 329, baseType: !205, size: 32, offset: 256)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !886, file: !65, line: 330, baseType: !897, size: 16, offset: 288)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !213, line: 19, baseType: !898)
!898 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !215, line: 24, baseType: !364)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !886, file: !65, line: 331, baseType: !897, size: 16, offset: 304)
!900 = !DIDerivedType(tag: DW_TAG_member, scope: !886, file: !65, line: 332, baseType: !901, size: 64, offset: 320)
!901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !886, file: !65, line: 332, size: 64, elements: !902)
!902 = !{!903, !904}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !901, file: !65, line: 333, baseType: !7, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !901, file: !65, line: 334, baseType: !905, size: 64)
!905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!906 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !65, line: 334, flags: DIFlagFwdDecl)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !65, line: 64, flags: DIFlagFwdDecl)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !826, file: !65, line: 402, baseType: !910, size: 64, offset: 832)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{!205, !778, !765, !765, !27}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !826, file: !65, line: 404, baseType: !914, size: 64, offset: 896)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DISubroutineType(types: !916)
!916 = !{!534, !765, !917}
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !918, line: 305, baseType: !7)
!918 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!919 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !826, file: !65, line: 405, baseType: !878, size: 64, offset: 960)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !826, file: !65, line: 406, baseType: !841, size: 64, offset: 1024)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !826, file: !65, line: 407, baseType: !922, size: 64, offset: 1088)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DISubroutineType(types: !924)
!924 = !{!205, !765, !372, !372}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !826, file: !65, line: 409, baseType: !926, size: 64, offset: 1152)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DISubroutineType(types: !928)
!928 = !{null, !765, !929, !929}
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !826, file: !65, line: 410, baseType: !931, size: 64, offset: 1216)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{!205, !778, !765}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !826, file: !65, line: 413, baseType: !935, size: 64, offset: 1280)
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 64)
!936 = !DISubroutineType(types: !937)
!937 = !{!205, !938, !400, !940}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !65, line: 61, flags: DIFlagFwdDecl)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !826, file: !65, line: 415, baseType: !942, size: 64, offset: 1344)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DISubroutineType(types: !944)
!944 = !{null, !400}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !779, file: !65, line: 466, baseType: !372, size: 64, offset: 896)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !779, file: !65, line: 467, baseType: !947, size: 32, offset: 960)
!947 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !948, line: 8, baseType: !212)
!948 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!949 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !779, file: !65, line: 468, baseType: !229, offset: 992)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !779, file: !65, line: 469, baseType: !194, size: 128, offset: 1024)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !779, file: !65, line: 470, baseType: !189, size: 64, offset: 1152)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !774, file: !767, line: 87, baseType: !372, size: 64, offset: 192)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !774, file: !767, line: 94, baseType: !372, size: 64, offset: 256)
!954 = !DIDerivedType(tag: DW_TAG_member, scope: !771, file: !767, line: 96, baseType: !955, size: 64)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !771, file: !767, line: 96, size: 64, elements: !956)
!956 = !{!957}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !955, file: !767, line: 101, baseType: !958, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !195, line: 143, baseType: !465)
!959 = !DIDerivedType(tag: DW_TAG_member, scope: !771, file: !767, line: 103, baseType: !960, size: 320)
!960 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !771, file: !767, line: 103, size: 320, elements: !961)
!961 = !{!962, !972, !975, !976}
!962 = !DIDerivedType(tag: DW_TAG_member, scope: !960, file: !767, line: 104, baseType: !963, size: 128)
!963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !960, file: !767, line: 104, size: 128, elements: !964)
!964 = !{!965, !966}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !963, file: !767, line: 105, baseType: !194, size: 128)
!966 = !DIDerivedType(tag: DW_TAG_member, scope: !963, file: !767, line: 106, baseType: !967, size: 128)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !963, file: !767, line: 106, size: 128, elements: !968)
!968 = !{!969, !970, !971}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !967, file: !767, line: 107, baseType: !765, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !967, file: !767, line: 109, baseType: !205, size: 32, offset: 64)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !967, file: !767, line: 110, baseType: !205, size: 32, offset: 96)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !960, file: !767, line: 117, baseType: !973, size: 64, offset: 128)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !767, line: 117, flags: DIFlagFwdDecl)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !960, file: !767, line: 119, baseType: !189, size: 64, offset: 192)
!976 = !DIDerivedType(tag: DW_TAG_member, scope: !960, file: !767, line: 120, baseType: !977, size: 64, offset: 256)
!977 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !960, file: !767, line: 120, size: 64, elements: !978)
!978 = !{!979, !980, !981}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !977, file: !767, line: 121, baseType: !189, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !977, file: !767, line: 122, baseType: !372, size: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, scope: !977, file: !767, line: 123, baseType: !982, size: 32)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !977, file: !767, line: 123, size: 32, elements: !983)
!983 = !{!984, !985, !986}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !982, file: !767, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !982, file: !767, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !982, file: !767, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!987 = !DIDerivedType(tag: DW_TAG_member, scope: !771, file: !767, line: 130, baseType: !988, size: 192)
!988 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !771, file: !767, line: 130, size: 192, elements: !989)
!989 = !{!990, !991, !992, !993, !994}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !988, file: !767, line: 131, baseType: !372, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !988, file: !767, line: 134, baseType: !471, size: 8, offset: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !988, file: !767, line: 135, baseType: !471, size: 8, offset: 72)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !988, file: !767, line: 136, baseType: !792, size: 32, offset: 96)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !988, file: !767, line: 137, baseType: !7, size: 32, offset: 128)
!995 = !DIDerivedType(tag: DW_TAG_member, scope: !771, file: !767, line: 139, baseType: !996, size: 256)
!996 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !771, file: !767, line: 139, size: 256, elements: !997)
!997 = !{!998, !999, !1000}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !996, file: !767, line: 140, baseType: !372, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !996, file: !767, line: 141, baseType: !792, size: 32, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !996, file: !767, line: 143, baseType: !194, size: 128, offset: 128)
!1001 = !DIDerivedType(tag: DW_TAG_member, scope: !771, file: !767, line: 145, baseType: !1002, size: 256)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !771, file: !767, line: 145, size: 256, elements: !1003)
!1003 = !{!1004, !1005, !1007, !1008, !2527}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1002, file: !767, line: 146, baseType: !372, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1002, file: !767, line: 147, baseType: !1006, size: 64, offset: 64)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !757, line: 509, baseType: !765)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1002, file: !767, line: 148, baseType: !372, size: 64, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_member, scope: !1002, file: !767, line: 149, baseType: !1009, size: 64, offset: 192)
!1009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1002, file: !767, line: 149, size: 64, elements: !1010)
!1010 = !{!1011, !2526}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1009, file: !767, line: 150, baseType: !1012, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !767, line: 388, size: 7296, elements: !1014)
!1014 = !{!1015, !2522}
!1015 = !DIDerivedType(tag: DW_TAG_member, scope: !1013, file: !767, line: 389, baseType: !1016, size: 7296)
!1016 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1013, file: !767, line: 389, size: 7296, elements: !1017)
!1017 = !{!1018, !1136, !1137, !1138, !1142, !1143, !1144, !1145, !1146, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1187, !1195, !1198, !1244, !1245, !2506, !2507, !2510, !2511, !2512, !2515, !2516, !2517, !2520, !2521}
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1016, file: !767, line: 390, baseType: !1019, size: 64)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !767, line: 305, size: 1472, elements: !1021)
!1021 = !{!1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1036, !1037, !1042, !1043, !1046, !1130, !1131, !1132, !1133, !1134}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1020, file: !767, line: 308, baseType: !372, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1020, file: !767, line: 309, baseType: !372, size: 64, offset: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1020, file: !767, line: 313, baseType: !1019, size: 64, offset: 128)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1020, file: !767, line: 313, baseType: !1019, size: 64, offset: 192)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1020, file: !767, line: 315, baseType: !805, size: 192, align: 64, offset: 256)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1020, file: !767, line: 323, baseType: !372, size: 64, offset: 448)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1020, file: !767, line: 327, baseType: !1012, size: 64, offset: 512)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1020, file: !767, line: 333, baseType: !1030, size: 64, offset: 576)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !757, line: 284, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !757, line: 284, size: 64, elements: !1032)
!1032 = !{!1033}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1031, file: !757, line: 284, baseType: !1034, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1035, line: 19, baseType: !372)
!1035 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1020, file: !767, line: 334, baseType: !372, size: 64, offset: 640)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1020, file: !767, line: 343, baseType: !1038, size: 256, offset: 704)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1020, file: !767, line: 340, size: 256, elements: !1039)
!1039 = !{!1040, !1041}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1038, file: !767, line: 341, baseType: !805, size: 192, align: 64)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1038, file: !767, line: 342, baseType: !372, size: 64, offset: 192)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1020, file: !767, line: 351, baseType: !194, size: 128, offset: 960)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1020, file: !767, line: 353, baseType: !1044, size: 64, offset: 1088)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !767, line: 353, flags: DIFlagFwdDecl)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1020, file: !767, line: 356, baseType: !1047, size: 64, offset: 1152)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1049)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !35, line: 557, size: 832, elements: !1050)
!1050 = !{!1051, !1055, !1056, !1060, !1064, !1104, !1108, !1112, !1116, !1117, !1118, !1122, !1126}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1049, file: !35, line: 558, baseType: !1052, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = !DISubroutineType(types: !1054)
!1054 = !{null, !1019}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1049, file: !35, line: 559, baseType: !1052, size: 64, offset: 64)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1049, file: !35, line: 560, baseType: !1057, size: 64, offset: 128)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!205, !1019, !372}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1049, file: !35, line: 561, baseType: !1061, size: 64, offset: 192)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!205, !1019}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1049, file: !35, line: 562, baseType: !1065, size: 64, offset: 256)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!1068, !1069}
!1068 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !767, line: 682, baseType: !7)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !35, line: 508, size: 768, elements: !1071)
!1071 = !{!1072, !1073, !1074, !1075, !1076, !1077, !1084, !1091, !1097, !1098, !1099, !1101, !1103}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1070, file: !35, line: 509, baseType: !1019, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1070, file: !35, line: 510, baseType: !7, size: 32, offset: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1070, file: !35, line: 511, baseType: !788, size: 32, offset: 96)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1070, file: !35, line: 512, baseType: !372, size: 64, offset: 128)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1070, file: !35, line: 513, baseType: !372, size: 64, offset: 192)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1070, file: !35, line: 514, baseType: !1078, size: 64, offset: 256)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !757, line: 385, baseType: !1080)
!1080 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !757, line: 385, size: 64, elements: !1081)
!1081 = !{!1082}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1080, file: !757, line: 385, baseType: !1083, size: 64)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1035, line: 15, baseType: !372)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1070, file: !35, line: 516, baseType: !1085, size: 64, offset: 320)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !757, line: 359, baseType: !1087)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !757, line: 359, size: 64, elements: !1088)
!1088 = !{!1089}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1087, file: !757, line: 359, baseType: !1090, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1035, line: 16, baseType: !372)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1070, file: !35, line: 519, baseType: !1092, size: 64, offset: 384)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1035, line: 21, baseType: !1093)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1035, line: 21, size: 64, elements: !1094)
!1094 = !{!1095}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1093, file: !1035, line: 21, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1035, line: 14, baseType: !372)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1070, file: !35, line: 521, baseType: !765, size: 64, offset: 448)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1070, file: !35, line: 522, baseType: !765, size: 64, offset: 512)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1070, file: !35, line: 528, baseType: !1100, size: 64, offset: 576)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1070, file: !35, line: 532, baseType: !1102, size: 64, offset: 640)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1070, file: !35, line: 536, baseType: !1006, size: 64, offset: 704)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1049, file: !35, line: 563, baseType: !1105, size: 64, offset: 320)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!1068, !1069, !34}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1049, file: !35, line: 565, baseType: !1109, size: 64, offset: 384)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{null, !1069, !372, !372}
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1049, file: !35, line: 567, baseType: !1113, size: 64, offset: 448)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!372, !1019}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1049, file: !35, line: 571, baseType: !1065, size: 64, offset: 512)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1049, file: !35, line: 574, baseType: !1065, size: 64, offset: 576)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1049, file: !35, line: 579, baseType: !1119, size: 64, offset: 640)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!205, !1019, !372, !189, !205, !205}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1049, file: !35, line: 585, baseType: !1123, size: 64, offset: 704)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{!285, !1019}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1049, file: !35, line: 615, baseType: !1127, size: 64, offset: 768)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!765, !1019, !372}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1020, file: !767, line: 359, baseType: !372, size: 64, offset: 1216)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1020, file: !767, line: 361, baseType: !400, size: 64, offset: 1280)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1020, file: !767, line: 362, baseType: !189, size: 64, offset: 1344)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1020, file: !767, line: 365, baseType: !250, size: 64, offset: 1408)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1020, file: !767, line: 373, baseType: !1135, offset: 1472)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !767, line: 296, elements: !243)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1016, file: !767, line: 391, baseType: !801, size: 64, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1016, file: !767, line: 392, baseType: !465, size: 64, offset: 128)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1016, file: !767, line: 394, baseType: !1139, size: 64, offset: 192)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!372, !400, !372, !372, !372, !372}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1016, file: !767, line: 398, baseType: !372, size: 64, offset: 256)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1016, file: !767, line: 399, baseType: !372, size: 64, offset: 320)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1016, file: !767, line: 405, baseType: !372, size: 64, offset: 384)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1016, file: !767, line: 406, baseType: !372, size: 64, offset: 448)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1016, file: !767, line: 407, baseType: !1147, size: 64, offset: 512)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !757, line: 286, baseType: !1149)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !757, line: 286, size: 64, elements: !1150)
!1150 = !{!1151}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1149, file: !757, line: 286, baseType: !1152, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1035, line: 18, baseType: !372)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1016, file: !767, line: 416, baseType: !792, size: 32, offset: 576)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1016, file: !767, line: 428, baseType: !792, size: 32, offset: 608)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1016, file: !767, line: 437, baseType: !792, size: 32, offset: 640)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1016, file: !767, line: 447, baseType: !792, size: 32, offset: 672)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1016, file: !767, line: 450, baseType: !250, size: 64, offset: 704)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1016, file: !767, line: 452, baseType: !205, size: 32, offset: 768)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1016, file: !767, line: 454, baseType: !229, offset: 800)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1016, file: !767, line: 457, baseType: !812, size: 256, offset: 832)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1016, file: !767, line: 459, baseType: !194, size: 128, offset: 1088)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1016, file: !767, line: 466, baseType: !372, size: 64, offset: 1216)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1016, file: !767, line: 467, baseType: !372, size: 64, offset: 1280)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1016, file: !767, line: 469, baseType: !372, size: 64, offset: 1344)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1016, file: !767, line: 470, baseType: !372, size: 64, offset: 1408)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1016, file: !767, line: 471, baseType: !252, size: 64, offset: 1472)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1016, file: !767, line: 472, baseType: !372, size: 64, offset: 1536)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1016, file: !767, line: 473, baseType: !372, size: 64, offset: 1600)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1016, file: !767, line: 474, baseType: !372, size: 64, offset: 1664)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1016, file: !767, line: 475, baseType: !372, size: 64, offset: 1728)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1016, file: !767, line: 477, baseType: !229, offset: 1792)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1016, file: !767, line: 478, baseType: !372, size: 64, offset: 1792)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1016, file: !767, line: 478, baseType: !372, size: 64, offset: 1856)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1016, file: !767, line: 478, baseType: !372, size: 64, offset: 1920)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1016, file: !767, line: 478, baseType: !372, size: 64, offset: 1984)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1016, file: !767, line: 479, baseType: !372, size: 64, offset: 2048)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1016, file: !767, line: 479, baseType: !372, size: 64, offset: 2112)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1016, file: !767, line: 479, baseType: !372, size: 64, offset: 2176)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1016, file: !767, line: 480, baseType: !372, size: 64, offset: 2240)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1016, file: !767, line: 480, baseType: !372, size: 64, offset: 2304)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1016, file: !767, line: 480, baseType: !372, size: 64, offset: 2368)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1016, file: !767, line: 480, baseType: !372, size: 64, offset: 2432)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1016, file: !767, line: 482, baseType: !1184, size: 2816, offset: 2496)
!1184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 2816, elements: !1185)
!1185 = !{!1186}
!1186 = !DISubrange(count: 44)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1016, file: !767, line: 488, baseType: !1188, size: 256, offset: 5312)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1189, line: 60, size: 256, elements: !1190)
!1189 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1190 = !{!1191}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1188, file: !1189, line: 61, baseType: !1192, size: 256)
!1192 = !DICompositeType(tag: DW_TAG_array_type, baseType: !250, size: 256, elements: !1193)
!1193 = !{!1194}
!1194 = !DISubrange(count: 4)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1016, file: !767, line: 490, baseType: !1196, size: 64, offset: 5568)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !767, line: 490, flags: DIFlagFwdDecl)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1016, file: !767, line: 493, baseType: !1199, size: 896, offset: 5632)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1200, line: 53, baseType: !1201)
!1200 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1200, line: 13, size: 896, elements: !1202)
!1202 = !{!1203, !1204, !1205, !1206, !1209, !1210, !1217, !1218, !1238, !1239, !1240}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1201, file: !1200, line: 18, baseType: !465, size: 64)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1201, file: !1200, line: 28, baseType: !252, size: 64, offset: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1201, file: !1200, line: 31, baseType: !812, size: 256, offset: 128)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1201, file: !1200, line: 32, baseType: !1207, size: 64, offset: 384)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1200, line: 32, flags: DIFlagFwdDecl)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1201, file: !1200, line: 37, baseType: !364, size: 16, offset: 448)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1201, file: !1200, line: 40, baseType: !1211, size: 192, offset: 512)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1212, line: 53, size: 192, elements: !1213)
!1212 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1213 = !{!1214, !1215, !1216}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1211, file: !1212, line: 54, baseType: !250, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1211, file: !1212, line: 55, baseType: !229, offset: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1211, file: !1212, line: 59, baseType: !194, size: 128, offset: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1201, file: !1200, line: 41, baseType: !189, size: 64, offset: 704)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1201, file: !1200, line: 42, baseType: !1219, size: 64, offset: 768)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1221)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1222, line: 13, size: 896, elements: !1223)
!1222 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1223 = !{!1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1221, file: !1222, line: 14, baseType: !189, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1221, file: !1222, line: 15, baseType: !372, size: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1221, file: !1222, line: 17, baseType: !372, size: 64, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1221, file: !1222, line: 17, baseType: !372, size: 64, offset: 192)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1221, file: !1222, line: 19, baseType: !357, size: 64, offset: 256)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1221, file: !1222, line: 21, baseType: !357, size: 64, offset: 320)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1221, file: !1222, line: 22, baseType: !357, size: 64, offset: 384)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1221, file: !1222, line: 23, baseType: !357, size: 64, offset: 448)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1221, file: !1222, line: 24, baseType: !357, size: 64, offset: 512)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1221, file: !1222, line: 25, baseType: !357, size: 64, offset: 576)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1221, file: !1222, line: 26, baseType: !357, size: 64, offset: 640)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1221, file: !1222, line: 27, baseType: !357, size: 64, offset: 704)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1221, file: !1222, line: 28, baseType: !357, size: 64, offset: 768)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1221, file: !1222, line: 29, baseType: !357, size: 64, offset: 832)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1201, file: !1200, line: 44, baseType: !792, size: 32, offset: 832)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1201, file: !1200, line: 50, baseType: !897, size: 16, offset: 864)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1201, file: !1200, line: 51, baseType: !1241, size: 16, offset: 880)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !213, line: 18, baseType: !1242)
!1242 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !215, line: 23, baseType: !1243)
!1243 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1016, file: !767, line: 495, baseType: !372, size: 64, offset: 6528)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1016, file: !767, line: 497, baseType: !1246, size: 64, offset: 6592)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !767, line: 381, size: 384, elements: !1248)
!1248 = !{!1249, !1250, !2505}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1247, file: !767, line: 382, baseType: !792, size: 32)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1247, file: !767, line: 383, baseType: !1251, size: 128, offset: 64)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !767, line: 376, size: 128, elements: !1252)
!1252 = !{!1253, !2503}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1251, file: !767, line: 377, baseType: !1254, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1256, line: 640, size: 48640, elements: !1257)
!1256 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1257 = !{!1258, !1264, !1266, !1267, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1283, !1301, !1312, !1397, !1398, !1399, !1410, !1411, !1413, !1414, !1415, !1416, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1500, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1538, !1540, !1541, !1542, !1554, !1555, !1556, !1557, !1558, !1559, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1583, !1588, !1913, !1914, !1915, !1916, !1917, !1920, !1923, !1926, !1929, !1955, !2056, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2102, !2103, !2104, !2105, !2106, !2111, !2112, !2113, !2116, !2117, !2120, !2123, !2126, !2129, !2161, !2164, !2165, !2244, !2245, !2248, !2249, !2252, !2253, !2254, !2258, !2259, !2260, !2273, !2274, !2275, !2285, !2290, !2293, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1255, file: !1256, line: 646, baseType: !1259, size: 128)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1260, line: 56, size: 128, elements: !1261)
!1260 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1261 = !{!1262, !1263}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1259, file: !1260, line: 57, baseType: !372, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1259, file: !1260, line: 58, baseType: !212, size: 32, offset: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1255, file: !1256, line: 649, baseType: !1265, size: 64, offset: 128)
!1265 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !357)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1255, file: !1256, line: 657, baseType: !189, size: 64, offset: 192)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1255, file: !1256, line: 658, baseType: !1268, size: 32, offset: 256)
!1268 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !163, line: 113, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !163, line: 111, size: 32, elements: !1270)
!1270 = !{!1271}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1269, file: !163, line: 112, baseType: !792, size: 32)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1255, file: !1256, line: 660, baseType: !7, size: 32, offset: 288)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1255, file: !1256, line: 661, baseType: !7, size: 32, offset: 320)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1255, file: !1256, line: 684, baseType: !205, size: 32, offset: 352)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1255, file: !1256, line: 686, baseType: !205, size: 32, offset: 384)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1255, file: !1256, line: 687, baseType: !205, size: 32, offset: 416)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1255, file: !1256, line: 688, baseType: !205, size: 32, offset: 448)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1255, file: !1256, line: 689, baseType: !7, size: 32, offset: 480)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1255, file: !1256, line: 691, baseType: !1280, size: 64, offset: 512)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1282)
!1282 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1256, line: 691, flags: DIFlagFwdDecl)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1255, file: !1256, line: 692, baseType: !1284, size: 832, offset: 576)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1256, line: 451, size: 832, elements: !1285)
!1285 = !{!1286, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1284, file: !1256, line: 453, baseType: !1287, size: 128)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1256, line: 325, size: 128, elements: !1288)
!1288 = !{!1289, !1290}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1287, file: !1256, line: 326, baseType: !372, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1287, file: !1256, line: 327, baseType: !212, size: 32, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1284, file: !1256, line: 454, baseType: !805, size: 192, align: 64, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1284, file: !1256, line: 455, baseType: !194, size: 128, offset: 320)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1284, file: !1256, line: 456, baseType: !7, size: 32, offset: 448)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1284, file: !1256, line: 458, baseType: !465, size: 64, offset: 512)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1284, file: !1256, line: 459, baseType: !465, size: 64, offset: 576)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1284, file: !1256, line: 460, baseType: !465, size: 64, offset: 640)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1284, file: !1256, line: 461, baseType: !465, size: 64, offset: 704)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1284, file: !1256, line: 463, baseType: !465, size: 64, offset: 768)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1284, file: !1256, line: 465, baseType: !1300, offset: 832)
!1300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1256, line: 415, elements: !243)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1255, file: !1256, line: 693, baseType: !1302, size: 384, offset: 1408)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1256, line: 489, size: 384, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307, !1308, !1309, !1310}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1302, file: !1256, line: 490, baseType: !194, size: 128)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1302, file: !1256, line: 491, baseType: !372, size: 64, offset: 128)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1302, file: !1256, line: 492, baseType: !372, size: 64, offset: 192)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1302, file: !1256, line: 493, baseType: !7, size: 32, offset: 256)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1302, file: !1256, line: 494, baseType: !364, size: 16, offset: 288)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1302, file: !1256, line: 495, baseType: !364, size: 16, offset: 304)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1302, file: !1256, line: 497, baseType: !1311, size: 64, offset: 320)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1255, file: !1256, line: 697, baseType: !1313, size: 1792, offset: 1792)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1256, line: 507, size: 1792, elements: !1314)
!1314 = !{!1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1394, !1395}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1313, file: !1256, line: 508, baseType: !805, size: 192, align: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1313, file: !1256, line: 515, baseType: !465, size: 64, offset: 192)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1313, file: !1256, line: 516, baseType: !465, size: 64, offset: 256)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1313, file: !1256, line: 517, baseType: !465, size: 64, offset: 320)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1313, file: !1256, line: 518, baseType: !465, size: 64, offset: 384)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1313, file: !1256, line: 519, baseType: !465, size: 64, offset: 448)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1313, file: !1256, line: 526, baseType: !256, size: 64, offset: 512)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1313, file: !1256, line: 527, baseType: !465, size: 64, offset: 576)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1313, file: !1256, line: 528, baseType: !7, size: 32, offset: 640)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1313, file: !1256, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1313, file: !1256, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1313, file: !1256, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1313, file: !1256, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1313, file: !1256, line: 563, baseType: !1329, size: 512, offset: 704)
!1329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !41, line: 118, size: 512, elements: !1330)
!1330 = !{!1331, !1339, !1340, !1345, !1388, !1391, !1392, !1393}
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1329, file: !41, line: 119, baseType: !1332, size: 256)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1333, line: 9, size: 256, elements: !1334)
!1333 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1334 = !{!1335, !1336}
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1332, file: !1333, line: 10, baseType: !805, size: 192, align: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1332, file: !1333, line: 11, baseType: !1337, size: 64, offset: 192)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1338, line: 29, baseType: !256)
!1338 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1329, file: !41, line: 120, baseType: !1337, size: 64, offset: 256)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1329, file: !41, line: 121, baseType: !1341, size: 64, offset: 320)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!40, !1344}
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1329, file: !41, line: 122, baseType: !1346, size: 64, offset: 384)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !41, line: 159, size: 512, align: 512, elements: !1348)
!1348 = !{!1349, !1369, !1370, !1373, !1378, !1379, !1383, !1387}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1347, file: !41, line: 160, baseType: !1350, size: 64)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !41, line: 214, size: 4608, align: 512, elements: !1352)
!1352 = !{!1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1351, file: !41, line: 215, baseType: !818)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1351, file: !41, line: 216, baseType: !7, size: 32)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1351, file: !41, line: 217, baseType: !7, size: 32, offset: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1351, file: !41, line: 218, baseType: !7, size: 32, offset: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1351, file: !41, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1351, file: !41, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1351, file: !41, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1351, file: !41, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1351, file: !41, line: 233, baseType: !1337, size: 64, offset: 128)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1351, file: !41, line: 234, baseType: !1344, size: 64, offset: 192)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1351, file: !41, line: 235, baseType: !1337, size: 64, offset: 256)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1351, file: !41, line: 236, baseType: !1344, size: 64, offset: 320)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1351, file: !41, line: 237, baseType: !1366, size: 4096, offset: 512)
!1366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1347, size: 4096, elements: !1367)
!1367 = !{!1368}
!1368 = !DISubrange(count: 8)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1347, file: !41, line: 161, baseType: !7, size: 32, offset: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1347, file: !41, line: 162, baseType: !1371, size: 32, offset: 96)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !195, line: 27, baseType: !1372)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !355, line: 96, baseType: !205)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1347, file: !41, line: 163, baseType: !1374, size: 32, offset: 128)
!1374 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !436, line: 276, baseType: !1375)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !436, line: 276, size: 32, elements: !1376)
!1376 = !{!1377}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1375, file: !436, line: 276, baseType: !440, size: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1347, file: !41, line: 164, baseType: !1344, size: 64, offset: 192)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1347, file: !41, line: 165, baseType: !1380, size: 128, offset: 256)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1333, line: 14, size: 128, elements: !1381)
!1381 = !{!1382}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1380, file: !1333, line: 15, baseType: !797, size: 128)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1347, file: !41, line: 166, baseType: !1384, size: 64, offset: 384)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!1337}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1347, file: !41, line: 167, baseType: !1337, size: 64, offset: 448)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1329, file: !41, line: 123, baseType: !1389, size: 8, offset: 448)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !213, line: 17, baseType: !1390)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !215, line: 21, baseType: !471)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1329, file: !41, line: 124, baseType: !1389, size: 8, offset: 456)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1329, file: !41, line: 125, baseType: !1389, size: 8, offset: 464)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1329, file: !41, line: 126, baseType: !1389, size: 8, offset: 472)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1313, file: !1256, line: 572, baseType: !1329, size: 512, offset: 1216)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1313, file: !1256, line: 580, baseType: !1396, size: 64, offset: 1728)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1255, file: !1256, line: 721, baseType: !7, size: 32, offset: 3584)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1255, file: !1256, line: 722, baseType: !205, size: 32, offset: 3616)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1255, file: !1256, line: 723, baseType: !1400, size: 64, offset: 3648)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1402)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1403, line: 17, baseType: !1404)
!1403 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1403, line: 17, size: 64, elements: !1405)
!1405 = !{!1406}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1404, file: !1403, line: 17, baseType: !1407, size: 64)
!1407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 64, elements: !1408)
!1408 = !{!1409}
!1409 = !DISubrange(count: 1)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1255, file: !1256, line: 724, baseType: !1402, size: 64, offset: 3712)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1255, file: !1256, line: 749, baseType: !1412, offset: 3776)
!1412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1256, line: 290, elements: !243)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1255, file: !1256, line: 751, baseType: !194, size: 128, offset: 3776)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1255, file: !1256, line: 757, baseType: !1012, size: 64, offset: 3904)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1255, file: !1256, line: 758, baseType: !1012, size: 64, offset: 3968)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1255, file: !1256, line: 761, baseType: !1417, size: 320, offset: 4032)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1189, line: 34, size: 320, elements: !1418)
!1418 = !{!1419, !1420}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1417, file: !1189, line: 35, baseType: !465, size: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1417, file: !1189, line: 36, baseType: !1421, size: 256, offset: 64)
!1421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1019, size: 256, elements: !1193)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1255, file: !1256, line: 766, baseType: !205, size: 32, offset: 4352)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1255, file: !1256, line: 767, baseType: !205, size: 32, offset: 4384)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1255, file: !1256, line: 768, baseType: !205, size: 32, offset: 4416)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1255, file: !1256, line: 770, baseType: !205, size: 32, offset: 4448)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1255, file: !1256, line: 772, baseType: !372, size: 64, offset: 4480)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1255, file: !1256, line: 775, baseType: !7, size: 32, offset: 4544)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1255, file: !1256, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1255, file: !1256, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1255, file: !1256, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1255, file: !1256, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1255, file: !1256, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1255, file: !1256, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1255, file: !1256, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1255, file: !1256, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1255, file: !1256, line: 831, baseType: !372, size: 64, offset: 4672)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1255, file: !1256, line: 833, baseType: !1438, size: 384, offset: 4736)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !46, line: 25, size: 384, elements: !1439)
!1439 = !{!1440, !1445}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1438, file: !46, line: 26, baseType: !1441, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!357, !1444}
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, scope: !1438, file: !46, line: 27, baseType: !1446, size: 320, offset: 64)
!1446 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1438, file: !46, line: 27, size: 320, elements: !1447)
!1447 = !{!1448, !1458, !1485}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1446, file: !46, line: 36, baseType: !1449, size: 320)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1446, file: !46, line: 29, size: 320, elements: !1450)
!1450 = !{!1451, !1453, !1454, !1455, !1456, !1457}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1449, file: !46, line: 30, baseType: !1452, size: 64)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1449, file: !46, line: 31, baseType: !212, size: 32, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1449, file: !46, line: 32, baseType: !212, size: 32, offset: 96)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1449, file: !46, line: 33, baseType: !212, size: 32, offset: 128)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1449, file: !46, line: 34, baseType: !465, size: 64, offset: 192)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1449, file: !46, line: 35, baseType: !1452, size: 64, offset: 256)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1446, file: !46, line: 46, baseType: !1459, size: 192)
!1459 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1446, file: !46, line: 38, size: 192, elements: !1460)
!1460 = !{!1461, !1462, !1463, !1484}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1459, file: !46, line: 39, baseType: !1371, size: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1459, file: !46, line: 40, baseType: !45, size: 32, offset: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, scope: !1459, file: !46, line: 41, baseType: !1464, size: 64, offset: 64)
!1464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1459, file: !46, line: 41, size: 64, elements: !1465)
!1465 = !{!1466, !1474}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1464, file: !46, line: 42, baseType: !1467, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1469, line: 7, size: 128, elements: !1470)
!1469 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1470 = !{!1471, !1473}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1468, file: !1469, line: 8, baseType: !1472, size: 64)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !355, line: 93, baseType: !258)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1468, file: !1469, line: 9, baseType: !258, size: 64, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1464, file: !46, line: 43, baseType: !1475, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1477, line: 7, size: 64, elements: !1478)
!1477 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1478 = !{!1479, !1483}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1476, file: !1477, line: 8, baseType: !1480, size: 32)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1477, line: 5, baseType: !1481)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !213, line: 20, baseType: !1482)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !215, line: 26, baseType: !205)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1476, file: !1477, line: 9, baseType: !1481, size: 32, offset: 32)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1459, file: !46, line: 45, baseType: !465, size: 64, offset: 128)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1446, file: !46, line: 54, baseType: !1486, size: 256)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1446, file: !46, line: 48, size: 256, elements: !1487)
!1487 = !{!1488, !1496, !1497, !1498, !1499}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1486, file: !46, line: 49, baseType: !1489, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1491, line: 36, size: 64, elements: !1492)
!1491 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1492 = !{!1493, !1494, !1495}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1490, file: !1491, line: 37, baseType: !205, size: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1490, file: !1491, line: 38, baseType: !1243, size: 16, offset: 32)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1490, file: !1491, line: 39, baseType: !1243, size: 16, offset: 48)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1486, file: !46, line: 50, baseType: !205, size: 32, offset: 64)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1486, file: !46, line: 51, baseType: !205, size: 32, offset: 96)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1486, file: !46, line: 52, baseType: !372, size: 64, offset: 128)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1486, file: !46, line: 53, baseType: !372, size: 64, offset: 192)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1255, file: !1256, line: 835, baseType: !1501, size: 32, offset: 5120)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !195, line: 22, baseType: !1502)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !355, line: 28, baseType: !205)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1255, file: !1256, line: 836, baseType: !1501, size: 32, offset: 5152)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1255, file: !1256, line: 840, baseType: !372, size: 64, offset: 5184)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1255, file: !1256, line: 849, baseType: !1254, size: 64, offset: 5248)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1255, file: !1256, line: 852, baseType: !1254, size: 64, offset: 5312)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1255, file: !1256, line: 857, baseType: !194, size: 128, offset: 5376)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1255, file: !1256, line: 858, baseType: !194, size: 128, offset: 5504)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1255, file: !1256, line: 859, baseType: !1254, size: 64, offset: 5632)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1255, file: !1256, line: 867, baseType: !194, size: 128, offset: 5696)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1255, file: !1256, line: 868, baseType: !194, size: 128, offset: 5824)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1255, file: !1256, line: 871, baseType: !1513, size: 64, offset: 5952)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !74, line: 59, size: 768, elements: !1515)
!1515 = !{!1516, !1517, !1518, !1519, !1521, !1522, !1529, !1530}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1514, file: !74, line: 61, baseType: !1268, size: 32)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1514, file: !74, line: 62, baseType: !7, size: 32, offset: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1514, file: !74, line: 63, baseType: !229, offset: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1514, file: !74, line: 65, baseType: !1520, size: 256, offset: 64)
!1520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !679, size: 256, elements: !1193)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1514, file: !74, line: 66, baseType: !679, size: 64, offset: 320)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1514, file: !74, line: 68, baseType: !1523, size: 128, offset: 384)
!1523 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1524, line: 40, baseType: !1525)
!1524 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1524, line: 36, size: 128, elements: !1526)
!1526 = !{!1527, !1528}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1525, file: !1524, line: 37, baseType: !229)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1525, file: !1524, line: 38, baseType: !194, size: 128)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1514, file: !74, line: 69, baseType: !413, size: 128, align: 64, offset: 512)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1514, file: !74, line: 70, baseType: !1531, size: 128, offset: 640)
!1531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1532, size: 128, elements: !1408)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !74, line: 54, size: 128, elements: !1533)
!1533 = !{!1534, !1535}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1532, file: !74, line: 55, baseType: !205, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1532, file: !74, line: 56, baseType: !1536, size: 64, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!1537 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !74, line: 56, flags: DIFlagFwdDecl)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1255, file: !1256, line: 872, baseType: !1539, size: 512, offset: 6016)
!1539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !683, size: 512, elements: !1193)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1255, file: !1256, line: 873, baseType: !194, size: 128, offset: 6528)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1255, file: !1256, line: 874, baseType: !194, size: 128, offset: 6656)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1255, file: !1256, line: 876, baseType: !1543, size: 64, offset: 6784)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1545, line: 26, size: 192, elements: !1546)
!1545 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1546 = !{!1547, !1548}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1544, file: !1545, line: 27, baseType: !7, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1544, file: !1545, line: 28, baseType: !1549, size: 128, offset: 64)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1550, line: 43, size: 128, elements: !1551)
!1550 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1551 = !{!1552, !1553}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1549, file: !1550, line: 44, baseType: !818)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1549, file: !1550, line: 45, baseType: !194, size: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1255, file: !1256, line: 879, baseType: !749, size: 64, offset: 6848)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1255, file: !1256, line: 882, baseType: !749, size: 64, offset: 6912)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1255, file: !1256, line: 884, baseType: !465, size: 64, offset: 6976)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1255, file: !1256, line: 885, baseType: !465, size: 64, offset: 7040)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1255, file: !1256, line: 890, baseType: !465, size: 64, offset: 7104)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1255, file: !1256, line: 891, baseType: !1560, size: 128, offset: 7168)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1256, line: 242, size: 128, elements: !1561)
!1561 = !{!1562, !1563, !1564}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1560, file: !1256, line: 244, baseType: !465, size: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1560, file: !1256, line: 245, baseType: !465, size: 64, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1560, file: !1256, line: 246, baseType: !818, offset: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1255, file: !1256, line: 900, baseType: !372, size: 64, offset: 7296)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1255, file: !1256, line: 901, baseType: !372, size: 64, offset: 7360)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1255, file: !1256, line: 904, baseType: !465, size: 64, offset: 7424)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1255, file: !1256, line: 907, baseType: !465, size: 64, offset: 7488)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1255, file: !1256, line: 910, baseType: !372, size: 64, offset: 7552)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1255, file: !1256, line: 911, baseType: !372, size: 64, offset: 7616)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1255, file: !1256, line: 914, baseType: !1572, size: 640, offset: 7680)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1573, line: 123, size: 640, elements: !1574)
!1573 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1574 = !{!1575, !1581, !1582}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1572, file: !1573, line: 124, baseType: !1576, size: 576)
!1576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1577, size: 576, elements: !323)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1573, line: 108, size: 192, elements: !1578)
!1578 = !{!1579, !1580}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1577, file: !1573, line: 109, baseType: !465, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1577, file: !1573, line: 110, baseType: !1380, size: 128, offset: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1572, file: !1573, line: 125, baseType: !7, size: 32, offset: 576)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1572, file: !1573, line: 126, baseType: !7, size: 32, offset: 608)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1255, file: !1256, line: 917, baseType: !1584, size: 192, offset: 8320)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1573, line: 134, size: 192, elements: !1585)
!1585 = !{!1586, !1587}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1584, file: !1573, line: 135, baseType: !413, size: 128, align: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1584, file: !1573, line: 136, baseType: !7, size: 32, offset: 128)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1255, file: !1256, line: 923, baseType: !1589, size: 64, offset: 8512)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1591)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1592, line: 111, size: 1280, elements: !1593)
!1592 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1593 = !{!1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1611, !1612, !1613, !1614, !1615, !1616, !1723, !1724, !1725, !1726, !1752, !1898, !1908}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1591, file: !1592, line: 112, baseType: !792, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1591, file: !1592, line: 120, baseType: !479, size: 32, offset: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1591, file: !1592, line: 121, baseType: !487, size: 32, offset: 64)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1591, file: !1592, line: 122, baseType: !479, size: 32, offset: 96)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1591, file: !1592, line: 123, baseType: !487, size: 32, offset: 128)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1591, file: !1592, line: 124, baseType: !479, size: 32, offset: 160)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1591, file: !1592, line: 125, baseType: !487, size: 32, offset: 192)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1591, file: !1592, line: 126, baseType: !479, size: 32, offset: 224)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1591, file: !1592, line: 127, baseType: !487, size: 32, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1591, file: !1592, line: 128, baseType: !7, size: 32, offset: 288)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1591, file: !1592, line: 129, baseType: !1605, size: 64, offset: 320)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1606, line: 26, baseType: !1607)
!1606 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1606, line: 24, size: 64, elements: !1608)
!1608 = !{!1609}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1607, file: !1606, line: 25, baseType: !1610, size: 64)
!1610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 64, elements: !269)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1591, file: !1592, line: 130, baseType: !1605, size: 64, offset: 384)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1591, file: !1592, line: 131, baseType: !1605, size: 64, offset: 448)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1591, file: !1592, line: 132, baseType: !1605, size: 64, offset: 512)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1591, file: !1592, line: 133, baseType: !1605, size: 64, offset: 576)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1591, file: !1592, line: 135, baseType: !471, size: 8, offset: 640)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1591, file: !1592, line: 137, baseType: !1617, size: 64, offset: 704)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1619, line: 189, size: 1664, elements: !1620)
!1619 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1620 = !{!1621, !1622, !1625, !1630, !1631, !1634, !1635, !1640, !1641, !1642, !1643, !1645, !1646, !1647, !1648, !1649, !1687, !1708}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1618, file: !1619, line: 190, baseType: !1268, size: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1618, file: !1619, line: 191, baseType: !1623, size: 32, offset: 32)
!1623 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1619, line: 28, baseType: !1624)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !195, line: 98, baseType: !1481)
!1625 = !DIDerivedType(tag: DW_TAG_member, scope: !1618, file: !1619, line: 192, baseType: !1626, size: 192, offset: 64)
!1626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1618, file: !1619, line: 192, size: 192, elements: !1627)
!1627 = !{!1628, !1629}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1626, file: !1619, line: 193, baseType: !194, size: 128)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1626, file: !1619, line: 194, baseType: !805, size: 192, align: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1618, file: !1619, line: 199, baseType: !812, size: 256, offset: 256)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1618, file: !1619, line: 200, baseType: !1632, size: 64, offset: 512)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1619, line: 200, flags: DIFlagFwdDecl)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1618, file: !1619, line: 201, baseType: !189, size: 64, offset: 576)
!1635 = !DIDerivedType(tag: DW_TAG_member, scope: !1618, file: !1619, line: 202, baseType: !1636, size: 64, offset: 640)
!1636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1618, file: !1619, line: 202, size: 64, elements: !1637)
!1637 = !{!1638, !1639}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1636, file: !1619, line: 203, baseType: !582, size: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1636, file: !1619, line: 204, baseType: !582, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1618, file: !1619, line: 206, baseType: !582, size: 64, offset: 704)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1618, file: !1619, line: 207, baseType: !479, size: 32, offset: 768)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1618, file: !1619, line: 208, baseType: !487, size: 32, offset: 800)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1618, file: !1619, line: 209, baseType: !1644, size: 32, offset: 832)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1619, line: 31, baseType: !601)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1618, file: !1619, line: 210, baseType: !364, size: 16, offset: 864)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1618, file: !1619, line: 211, baseType: !364, size: 16, offset: 880)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1618, file: !1619, line: 215, baseType: !1243, size: 16, offset: 896)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1618, file: !1619, line: 222, baseType: !372, size: 64, offset: 960)
!1649 = !DIDerivedType(tag: DW_TAG_member, scope: !1618, file: !1619, line: 239, baseType: !1650, size: 320, offset: 1024)
!1650 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1618, file: !1619, line: 239, size: 320, elements: !1651)
!1651 = !{!1652, !1679}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1650, file: !1619, line: 240, baseType: !1653, size: 320)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1619, line: 108, size: 320, elements: !1654)
!1654 = !{!1655, !1656, !1668, !1671, !1678}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1653, file: !1619, line: 110, baseType: !372, size: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, scope: !1653, file: !1619, line: 111, baseType: !1657, size: 64, offset: 64)
!1657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1653, file: !1619, line: 111, size: 64, elements: !1658)
!1658 = !{!1659, !1667}
!1659 = !DIDerivedType(tag: DW_TAG_member, scope: !1657, file: !1619, line: 112, baseType: !1660, size: 64)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1657, file: !1619, line: 112, size: 64, elements: !1661)
!1661 = !{!1662, !1663}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1660, file: !1619, line: 114, baseType: !897, size: 16)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1660, file: !1619, line: 115, baseType: !1664, size: 48, offset: 16)
!1664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 48, elements: !1665)
!1665 = !{!1666}
!1666 = !DISubrange(count: 6)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1657, file: !1619, line: 121, baseType: !372, size: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1653, file: !1619, line: 123, baseType: !1669, size: 64, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1670, size: 64)
!1670 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1619, line: 96, flags: DIFlagFwdDecl)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1653, file: !1619, line: 124, baseType: !1672, size: 64, offset: 192)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1619, line: 102, size: 192, elements: !1674)
!1674 = !{!1675, !1676, !1677}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1673, file: !1619, line: 103, baseType: !413, size: 128, align: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1673, file: !1619, line: 104, baseType: !1268, size: 32, offset: 128)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1673, file: !1619, line: 105, baseType: !534, size: 8, offset: 160)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1653, file: !1619, line: 125, baseType: !285, size: 64, offset: 256)
!1679 = !DIDerivedType(tag: DW_TAG_member, scope: !1650, file: !1619, line: 241, baseType: !1680, size: 320)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1650, file: !1619, line: 241, size: 320, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685, !1686}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1680, file: !1619, line: 242, baseType: !372, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1680, file: !1619, line: 243, baseType: !372, size: 64, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1680, file: !1619, line: 244, baseType: !1669, size: 64, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1680, file: !1619, line: 245, baseType: !1672, size: 64, offset: 192)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1680, file: !1619, line: 246, baseType: !322, size: 64, offset: 256)
!1687 = !DIDerivedType(tag: DW_TAG_member, scope: !1618, file: !1619, line: 254, baseType: !1688, size: 256, offset: 1344)
!1688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1618, file: !1619, line: 254, size: 256, elements: !1689)
!1689 = !{!1690, !1696}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1688, file: !1619, line: 255, baseType: !1691, size: 256)
!1691 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1619, line: 128, size: 256, elements: !1692)
!1692 = !{!1693, !1694}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1691, file: !1619, line: 129, baseType: !189, size: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1691, file: !1619, line: 130, baseType: !1695, size: 256)
!1695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !189, size: 256, elements: !1193)
!1696 = !DIDerivedType(tag: DW_TAG_member, scope: !1688, file: !1619, line: 256, baseType: !1697, size: 256)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1688, file: !1619, line: 256, size: 256, elements: !1698)
!1698 = !{!1699, !1700}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1697, file: !1619, line: 258, baseType: !194, size: 128)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1697, file: !1619, line: 259, baseType: !1701, size: 128, offset: 128)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1702, line: 22, size: 128, elements: !1703)
!1702 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1703 = !{!1704, !1707}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1701, file: !1702, line: 23, baseType: !1705, size: 64)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1702, line: 23, flags: DIFlagFwdDecl)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1701, file: !1702, line: 24, baseType: !372, size: 64, offset: 64)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1618, file: !1619, line: 274, baseType: !1709, size: 64, offset: 1600)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1619, line: 170, size: 192, elements: !1711)
!1711 = !{!1712, !1721, !1722}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1710, file: !1619, line: 171, baseType: !1713, size: 64)
!1713 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1619, line: 165, baseType: !1714)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = !DISubroutineType(types: !1716)
!1716 = !{!205, !1617, !1717, !1719, !1617}
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1670)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1720 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1691)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1710, file: !1619, line: 172, baseType: !1617, size: 64, offset: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1710, file: !1619, line: 173, baseType: !1669, size: 64, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1591, file: !1592, line: 138, baseType: !1617, size: 64, offset: 768)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1591, file: !1592, line: 139, baseType: !1617, size: 64, offset: 832)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1591, file: !1592, line: 140, baseType: !1617, size: 64, offset: 896)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1591, file: !1592, line: 145, baseType: !1727, size: 64, offset: 960)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1729, line: 13, size: 896, elements: !1730)
!1729 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1730 = !{!1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1728, file: !1729, line: 14, baseType: !1268, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1728, file: !1729, line: 15, baseType: !792, size: 32, offset: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1728, file: !1729, line: 16, baseType: !792, size: 32, offset: 64)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1728, file: !1729, line: 21, baseType: !250, size: 64, offset: 128)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1728, file: !1729, line: 27, baseType: !372, size: 64, offset: 192)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1728, file: !1729, line: 28, baseType: !372, size: 64, offset: 256)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1728, file: !1729, line: 29, baseType: !250, size: 64, offset: 320)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1728, file: !1729, line: 32, baseType: !683, size: 128, offset: 384)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1728, file: !1729, line: 33, baseType: !479, size: 32, offset: 512)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1728, file: !1729, line: 37, baseType: !250, size: 64, offset: 576)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1728, file: !1729, line: 44, baseType: !1742, size: 256, offset: 640)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1743, line: 15, size: 256, elements: !1744)
!1743 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1744 = !{!1745, !1746, !1747, !1748, !1749, !1750, !1751}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1742, file: !1743, line: 16, baseType: !818)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1742, file: !1743, line: 18, baseType: !205, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1742, file: !1743, line: 19, baseType: !205, size: 32, offset: 32)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1742, file: !1743, line: 20, baseType: !205, size: 32, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1742, file: !1743, line: 21, baseType: !205, size: 32, offset: 96)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1742, file: !1743, line: 22, baseType: !372, size: 64, offset: 128)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1742, file: !1743, line: 23, baseType: !372, size: 64, offset: 192)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1591, file: !1592, line: 146, baseType: !1753, size: 64, offset: 1024)
!1753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1754, size: 64)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1755, line: 56, size: 4160, elements: !1756)
!1755 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1756 = !{!1757, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1796, !1797, !1798, !1799, !1800, !1801, !1883, !1884, !1896}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1754, file: !1755, line: 57, baseType: !1758, size: 576)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1755, line: 23, size: 576, elements: !1759)
!1759 = !{!1760, !1761}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1758, file: !1755, line: 24, baseType: !212, size: 32)
!1761 = !DIDerivedType(tag: DW_TAG_member, scope: !1758, file: !1755, line: 25, baseType: !1762, size: 512, offset: 64)
!1762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1758, file: !1755, line: 25, size: 512, elements: !1763)
!1763 = !{!1764, !1773}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1762, file: !1755, line: 26, baseType: !1765, size: 480)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1766, size: 480, elements: !1771)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1755, line: 17, size: 96, elements: !1767)
!1767 = !{!1768, !1769, !1770}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1766, file: !1755, line: 18, baseType: !212, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1766, file: !1755, line: 19, baseType: !212, size: 32, offset: 32)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1766, file: !1755, line: 20, baseType: !212, size: 32, offset: 64)
!1771 = !{!1772}
!1772 = !DISubrange(count: 5)
!1773 = !DIDerivedType(tag: DW_TAG_member, scope: !1762, file: !1755, line: 27, baseType: !1774, size: 128)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1762, file: !1755, line: 27, size: 128, elements: !1775)
!1775 = !{!1776, !1778}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1774, file: !1755, line: 28, baseType: !1777, size: 64)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1774, file: !1755, line: 29, baseType: !1777, size: 64, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1754, file: !1755, line: 58, baseType: !1758, size: 576, offset: 576)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1754, file: !1755, line: 59, baseType: !1758, size: 576, offset: 1152)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1754, file: !1755, line: 60, baseType: !792, size: 32, offset: 1728)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1754, file: !1755, line: 61, baseType: !1753, size: 64, offset: 1792)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1754, file: !1755, line: 62, baseType: !205, size: 32, offset: 1856)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1754, file: !1755, line: 63, baseType: !479, size: 32, offset: 1888)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1754, file: !1755, line: 64, baseType: !487, size: 32, offset: 1920)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1754, file: !1755, line: 65, baseType: !1787, size: 192, offset: 1984)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1788, line: 7, size: 192, elements: !1789)
!1788 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1789 = !{!1790, !1791, !1795}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1787, file: !1788, line: 8, baseType: !250, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1787, file: !1788, line: 9, baseType: !1792, size: 64, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1794)
!1794 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1788, line: 5, flags: DIFlagFwdDecl)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1787, file: !1788, line: 10, baseType: !7, size: 32, offset: 128)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1754, file: !1755, line: 66, baseType: !372, size: 64, offset: 2176)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1754, file: !1755, line: 74, baseType: !194, size: 128, offset: 2240)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1754, file: !1755, line: 75, baseType: !1617, size: 64, offset: 2368)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1754, file: !1755, line: 76, baseType: !812, size: 256, offset: 2432)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1754, file: !1755, line: 83, baseType: !246, size: 256, offset: 2688)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1754, file: !1755, line: 85, baseType: !1802, size: 768, offset: 2944)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1803, line: 156, size: 768, elements: !1804)
!1803 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1804 = !{!1805, !1810}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1802, file: !1803, line: 157, baseType: !1806, size: 64)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DISubroutineType(types: !1808)
!1808 = !{!205, !1809}
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1802, file: !1803, line: 158, baseType: !1811, size: 704, offset: 64)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1803, line: 150, size: 704, elements: !1812)
!1812 = !{!1813, !1882}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1811, file: !1803, line: 152, baseType: !1814, size: 640)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1803, line: 131, size: 640, elements: !1815)
!1815 = !{!1816, !1850, !1851, !1852, !1872, !1873, !1875, !1881}
!1816 = !DIDerivedType(tag: DW_TAG_member, scope: !1814, file: !1803, line: 132, baseType: !1817, size: 192)
!1817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1814, file: !1803, line: 132, size: 192, elements: !1818)
!1818 = !{!1819, !1849}
!1819 = !DIDerivedType(tag: DW_TAG_member, scope: !1817, file: !1803, line: 133, baseType: !1820, size: 192)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1817, file: !1803, line: 133, size: 192, elements: !1821)
!1821 = !{!1822, !1846, !1847, !1848}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1820, file: !1803, line: 134, baseType: !1823, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1803, line: 112, size: 512, elements: !1825)
!1825 = !{!1826, !1827, !1828, !1829, !1830, !1831, !1838, !1844, !1845}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1824, file: !1803, line: 113, baseType: !285, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1824, file: !1803, line: 114, baseType: !189, size: 64, offset: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1824, file: !1803, line: 115, baseType: !205, size: 32, offset: 128)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1824, file: !1803, line: 116, baseType: !363, size: 16, offset: 160)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1824, file: !1803, line: 117, baseType: !1823, size: 64, offset: 192)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1824, file: !1803, line: 118, baseType: !1832, size: 64, offset: 256)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1803, line: 47, baseType: !1834)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{!205, !1823, !205, !189, !1836, !1837}
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1824, file: !1803, line: 119, baseType: !1839, size: 64, offset: 320)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1803, line: 94, size: 192, elements: !1841)
!1841 = !{!1842, !1843}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1840, file: !1803, line: 95, baseType: !792, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1840, file: !1803, line: 96, baseType: !1523, size: 128, offset: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1824, file: !1803, line: 120, baseType: !189, size: 64, offset: 384)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1824, file: !1803, line: 121, baseType: !189, size: 64, offset: 448)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1820, file: !1803, line: 135, baseType: !205, size: 32, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1820, file: !1803, line: 136, baseType: !205, size: 32, offset: 96)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1820, file: !1803, line: 137, baseType: !205, size: 32, offset: 128)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1817, file: !1803, line: 139, baseType: !413, size: 128, align: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1814, file: !1803, line: 141, baseType: !1543, size: 64, offset: 192)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1814, file: !1803, line: 142, baseType: !1823, size: 64, offset: 256)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1814, file: !1803, line: 143, baseType: !1853, size: 64, offset: 320)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1803, line: 161, size: 960, elements: !1855)
!1855 = !{!1856, !1857, !1861, !1868}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !1854, file: !1803, line: 162, baseType: !1802, size: 768)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1854, file: !1803, line: 163, baseType: !1858, size: 64, offset: 768)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!1809, !1853}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !1854, file: !1803, line: 164, baseType: !1862, size: 64, offset: 832)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{null, !1865, !1823, !1866, !1867}
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !1854, file: !1803, line: 167, baseType: !1869, size: 64, offset: 896)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = !DISubroutineType(types: !1871)
!1871 = !{!205, !1865, !1823}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1814, file: !1803, line: 144, baseType: !1809, size: 64, offset: 384)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1814, file: !1803, line: 145, baseType: !1874, size: 64, offset: 448)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1814, file: !1803, line: 146, baseType: !1876, size: 64, offset: 512)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1803, line: 124, size: 256, elements: !1878)
!1878 = !{!1879, !1880}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1877, file: !1803, line: 125, baseType: !805, size: 192, align: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1877, file: !1803, line: 126, baseType: !1865, size: 64, offset: 192)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1814, file: !1803, line: 147, baseType: !679, size: 64, offset: 576)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1811, file: !1803, line: 153, baseType: !801, size: 64, offset: 640)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1754, file: !1755, line: 86, baseType: !1865, size: 64, offset: 3712)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1754, file: !1755, line: 88, baseType: !1885, size: 64, offset: 3776)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1755, line: 92, size: 576, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891, !1892}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1886, file: !1755, line: 93, baseType: !683, size: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1886, file: !1755, line: 94, baseType: !1753, size: 64, offset: 128)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1886, file: !1755, line: 95, baseType: !479, size: 32, offset: 192)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1886, file: !1755, line: 96, baseType: !205, size: 32, offset: 224)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !1886, file: !1755, line: 97, baseType: !1893, size: 320, offset: 256)
!1893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !792, size: 320, elements: !1894)
!1894 = !{!1895}
!1895 = !DISubrange(count: 10)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1754, file: !1755, line: 89, baseType: !1897, size: 320, offset: 3840)
!1897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 320, elements: !1894)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1591, file: !1592, line: 147, baseType: !1899, size: 64, offset: 1088)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1592, line: 25, size: 64, elements: !1901)
!1901 = !{!1902, !1903, !1904}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1900, file: !1592, line: 26, baseType: !792, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1900, file: !1592, line: 27, baseType: !205, size: 32, offset: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1900, file: !1592, line: 28, baseType: !1905, offset: 64)
!1905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, elements: !1906)
!1906 = !{!1907}
!1907 = !DISubrange(count: 0)
!1908 = !DIDerivedType(tag: DW_TAG_member, scope: !1591, file: !1592, line: 149, baseType: !1909, size: 128, offset: 1152)
!1909 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1591, file: !1592, line: 149, size: 128, elements: !1910)
!1910 = !{!1911, !1912}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1909, file: !1592, line: 150, baseType: !205, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1909, file: !1592, line: 151, baseType: !413, size: 128, align: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1255, file: !1256, line: 926, baseType: !1589, size: 64, offset: 8576)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1255, file: !1256, line: 929, baseType: !1589, size: 64, offset: 8640)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1255, file: !1256, line: 933, baseType: !1617, size: 64, offset: 8704)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1255, file: !1256, line: 943, baseType: !207, size: 128, offset: 8768)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1255, file: !1256, line: 945, baseType: !1918, size: 64, offset: 8896)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1256, line: 49, flags: DIFlagFwdDecl)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1255, file: !1256, line: 956, baseType: !1921, size: 64, offset: 8960)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!1922 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1256, line: 45, flags: DIFlagFwdDecl)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1255, file: !1256, line: 959, baseType: !1924, size: 64, offset: 9024)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1256, line: 959, flags: DIFlagFwdDecl)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1255, file: !1256, line: 962, baseType: !1927, size: 64, offset: 9088)
!1927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 64)
!1928 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1256, line: 66, flags: DIFlagFwdDecl)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1255, file: !1256, line: 966, baseType: !1930, size: 64, offset: 9152)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1932, line: 31, size: 576, elements: !1933)
!1932 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!1933 = !{!1934, !1935, !1938, !1941, !1944, !1945, !1948, !1951, !1952}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1931, file: !1932, line: 32, baseType: !792, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !1931, file: !1932, line: 33, baseType: !1936, size: 64, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !1932, line: 9, flags: DIFlagFwdDecl)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !1931, file: !1932, line: 34, baseType: !1939, size: 64, offset: 128)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !1932, line: 10, flags: DIFlagFwdDecl)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !1931, file: !1932, line: 35, baseType: !1942, size: 64, offset: 192)
!1942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1943, size: 64)
!1943 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !1932, line: 8, flags: DIFlagFwdDecl)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !1931, file: !1932, line: 36, baseType: !1536, size: 64, offset: 256)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !1931, file: !1932, line: 37, baseType: !1946, size: 64, offset: 320)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1619, line: 34, flags: DIFlagFwdDecl)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !1931, file: !1932, line: 38, baseType: !1949, size: 64, offset: 384)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !1932, line: 38, flags: DIFlagFwdDecl)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !1931, file: !1932, line: 39, baseType: !1949, size: 64, offset: 448)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !1931, file: !1932, line: 40, baseType: !1953, size: 64, offset: 512)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !1932, line: 12, flags: DIFlagFwdDecl)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1255, file: !1256, line: 969, baseType: !1956, size: 64, offset: 9216)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1958, line: 82, size: 7296, elements: !1959)
!1958 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1959 = !{!1960, !1961, !1962, !1963, !1964, !1965, !1966, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1995, !2004, !2005, !2007, !2008, !2009, !2012, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2042, !2043, !2050, !2051, !2052, !2053, !2054, !2055}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1957, file: !1958, line: 83, baseType: !1268, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1957, file: !1958, line: 84, baseType: !792, size: 32, offset: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1957, file: !1958, line: 85, baseType: !205, size: 32, offset: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1957, file: !1958, line: 86, baseType: !194, size: 128, offset: 128)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1957, file: !1958, line: 88, baseType: !1523, size: 128, offset: 256)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1957, file: !1958, line: 91, baseType: !1254, size: 64, offset: 384)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1957, file: !1958, line: 94, baseType: !1967, size: 192, offset: 448)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1968, line: 30, size: 192, elements: !1969)
!1968 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1969 = !{!1970, !1971}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1967, file: !1968, line: 31, baseType: !194, size: 128)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1967, file: !1968, line: 32, baseType: !1972, size: 64, offset: 128)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1973, line: 25, baseType: !1974)
!1973 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1973, line: 23, size: 64, elements: !1975)
!1975 = !{!1976}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1974, file: !1973, line: 24, baseType: !1407, size: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1957, file: !1958, line: 97, baseType: !679, size: 64, offset: 640)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1957, file: !1958, line: 100, baseType: !205, size: 32, offset: 704)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1957, file: !1958, line: 106, baseType: !205, size: 32, offset: 736)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1957, file: !1958, line: 107, baseType: !1254, size: 64, offset: 768)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1957, file: !1958, line: 110, baseType: !205, size: 32, offset: 832)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1957, file: !1958, line: 111, baseType: !7, size: 32, offset: 864)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1957, file: !1958, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1957, file: !1958, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1957, file: !1958, line: 128, baseType: !205, size: 32, offset: 928)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1957, file: !1958, line: 129, baseType: !194, size: 128, offset: 960)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1957, file: !1958, line: 132, baseType: !1329, size: 512, offset: 1088)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1957, file: !1958, line: 133, baseType: !1337, size: 64, offset: 1600)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1957, file: !1958, line: 140, baseType: !1990, size: 256, offset: 1664)
!1990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1991, size: 256, elements: !269)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1958, line: 38, size: 128, elements: !1992)
!1992 = !{!1993, !1994}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1991, file: !1958, line: 39, baseType: !465, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1991, file: !1958, line: 40, baseType: !465, size: 64, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1957, file: !1958, line: 146, baseType: !1996, size: 192, offset: 1920)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1958, line: 66, size: 192, elements: !1997)
!1997 = !{!1998}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1996, file: !1958, line: 67, baseType: !1999, size: 192)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1958, line: 47, size: 192, elements: !2000)
!2000 = !{!2001, !2002, !2003}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1999, file: !1958, line: 48, baseType: !252, size: 64)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1999, file: !1958, line: 49, baseType: !252, size: 64, offset: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1999, file: !1958, line: 50, baseType: !252, size: 64, offset: 128)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1957, file: !1958, line: 150, baseType: !1572, size: 640, offset: 2112)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1957, file: !1958, line: 153, baseType: !2006, size: 256, offset: 2752)
!2006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1513, size: 256, elements: !1193)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1957, file: !1958, line: 159, baseType: !1513, size: 64, offset: 3008)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1957, file: !1958, line: 162, baseType: !205, size: 32, offset: 3072)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1957, file: !1958, line: 164, baseType: !2010, size: 64, offset: 3136)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1958, line: 164, flags: DIFlagFwdDecl)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1957, file: !1958, line: 175, baseType: !2013, size: 32, offset: 3200)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !436, line: 805, baseType: !2014)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !436, line: 798, size: 32, elements: !2015)
!2015 = !{!2016, !2017}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2014, file: !436, line: 803, baseType: !435, size: 32)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2014, file: !436, line: 804, baseType: !229, offset: 32)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1957, file: !1958, line: 176, baseType: !465, size: 64, offset: 3264)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1957, file: !1958, line: 176, baseType: !465, size: 64, offset: 3328)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1957, file: !1958, line: 176, baseType: !465, size: 64, offset: 3392)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1957, file: !1958, line: 176, baseType: !465, size: 64, offset: 3456)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1957, file: !1958, line: 177, baseType: !465, size: 64, offset: 3520)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1957, file: !1958, line: 178, baseType: !465, size: 64, offset: 3584)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1957, file: !1958, line: 179, baseType: !1560, size: 128, offset: 3648)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1957, file: !1958, line: 180, baseType: !372, size: 64, offset: 3776)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1957, file: !1958, line: 180, baseType: !372, size: 64, offset: 3840)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1957, file: !1958, line: 180, baseType: !372, size: 64, offset: 3904)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1957, file: !1958, line: 180, baseType: !372, size: 64, offset: 3968)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1957, file: !1958, line: 181, baseType: !372, size: 64, offset: 4032)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1957, file: !1958, line: 181, baseType: !372, size: 64, offset: 4096)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1957, file: !1958, line: 181, baseType: !372, size: 64, offset: 4160)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1957, file: !1958, line: 181, baseType: !372, size: 64, offset: 4224)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1957, file: !1958, line: 182, baseType: !372, size: 64, offset: 4288)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1957, file: !1958, line: 182, baseType: !372, size: 64, offset: 4352)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1957, file: !1958, line: 182, baseType: !372, size: 64, offset: 4416)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1957, file: !1958, line: 182, baseType: !372, size: 64, offset: 4480)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1957, file: !1958, line: 183, baseType: !372, size: 64, offset: 4544)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1957, file: !1958, line: 183, baseType: !372, size: 64, offset: 4608)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1957, file: !1958, line: 184, baseType: !2040, offset: 4672)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2041, line: 12, elements: !243)
!2041 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1957, file: !1958, line: 192, baseType: !467, size: 64, offset: 4672)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1957, file: !1958, line: 203, baseType: !2044, size: 2048, offset: 4736)
!2044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2045, size: 2048, elements: !209)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2046, line: 43, size: 128, elements: !2047)
!2046 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2047 = !{!2048, !2049}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2045, file: !2046, line: 44, baseType: !371, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2045, file: !2046, line: 45, baseType: !371, size: 64, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1957, file: !1958, line: 220, baseType: !534, size: 8, offset: 6784)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1957, file: !1958, line: 221, baseType: !1243, size: 16, offset: 6800)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1957, file: !1958, line: 222, baseType: !1243, size: 16, offset: 6816)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1957, file: !1958, line: 224, baseType: !1012, size: 64, offset: 6848)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1957, file: !1958, line: 227, baseType: !1211, size: 192, offset: 6912)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1957, file: !1958, line: 233, baseType: !1211, size: 192, offset: 7104)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1255, file: !1256, line: 970, baseType: !2057, size: 64, offset: 9280)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1958, line: 20, size: 16576, elements: !2059)
!2059 = !{!2060, !2061, !2062, !2063}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2058, file: !1958, line: 21, baseType: !229)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2058, file: !1958, line: 22, baseType: !1268, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2058, file: !1958, line: 23, baseType: !1523, size: 128, offset: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2058, file: !1958, line: 24, baseType: !2064, size: 16384, offset: 192)
!2064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2065, size: 16384, elements: !327)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1968, line: 49, size: 256, elements: !2066)
!2066 = !{!2067}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2065, file: !1968, line: 50, baseType: !2068, size: 256)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1968, line: 35, size: 256, elements: !2069)
!2069 = !{!2070, !2077, !2078, !2084}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2068, file: !1968, line: 37, baseType: !2071, size: 64)
!2071 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2072, line: 19, baseType: !2073)
!2072 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2072, line: 18, baseType: !2075)
!2075 = !DISubroutineType(types: !2076)
!2076 = !{null, !205}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2068, file: !1968, line: 38, baseType: !372, size: 64, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2068, file: !1968, line: 44, baseType: !2079, size: 64, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2072, line: 22, baseType: !2080)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2072, line: 21, baseType: !2082)
!2082 = !DISubroutineType(types: !2083)
!2083 = !{null}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2068, file: !1968, line: 46, baseType: !1972, size: 64, offset: 192)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1255, file: !1256, line: 971, baseType: !1972, size: 64, offset: 9344)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1255, file: !1256, line: 972, baseType: !1972, size: 64, offset: 9408)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1255, file: !1256, line: 974, baseType: !1972, size: 64, offset: 9472)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1255, file: !1256, line: 975, baseType: !1967, size: 192, offset: 9536)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1255, file: !1256, line: 976, baseType: !372, size: 64, offset: 9728)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1255, file: !1256, line: 977, baseType: !369, size: 64, offset: 9792)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1255, file: !1256, line: 978, baseType: !7, size: 32, offset: 9856)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1255, file: !1256, line: 980, baseType: !416, size: 64, offset: 9920)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1255, file: !1256, line: 989, baseType: !2094, size: 128, offset: 9984)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2095, line: 35, size: 128, elements: !2096)
!2095 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2096 = !{!2097, !2098, !2099}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2094, file: !2095, line: 36, baseType: !205, size: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2094, file: !2095, line: 37, baseType: !792, size: 32, offset: 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2094, file: !2095, line: 38, baseType: !2100, size: 64, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2095, line: 23, flags: DIFlagFwdDecl)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1255, file: !1256, line: 992, baseType: !465, size: 64, offset: 10112)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1255, file: !1256, line: 993, baseType: !465, size: 64, offset: 10176)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1255, file: !1256, line: 996, baseType: !229, offset: 10240)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1255, file: !1256, line: 999, baseType: !818, offset: 10240)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1255, file: !1256, line: 1001, baseType: !2107, size: 64, offset: 10240)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1256, line: 636, size: 64, elements: !2108)
!2108 = !{!2109}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2107, file: !1256, line: 637, baseType: !2110, size: 64)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1255, file: !1256, line: 1005, baseType: !797, size: 128, offset: 10304)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1255, file: !1256, line: 1007, baseType: !1254, size: 64, offset: 10432)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1255, file: !1256, line: 1009, baseType: !2114, size: 64, offset: 10496)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 64)
!2115 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1256, line: 1009, flags: DIFlagFwdDecl)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1255, file: !1256, line: 1043, baseType: !189, size: 64, offset: 10560)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1255, file: !1256, line: 1046, baseType: !2118, size: 64, offset: 10624)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64)
!2119 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1256, line: 41, flags: DIFlagFwdDecl)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1255, file: !1256, line: 1050, baseType: !2121, size: 64, offset: 10688)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1256, line: 42, flags: DIFlagFwdDecl)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1255, file: !1256, line: 1054, baseType: !2124, size: 64, offset: 10752)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1256, line: 55, flags: DIFlagFwdDecl)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1255, file: !1256, line: 1056, baseType: !2127, size: 64, offset: 10816)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1256, line: 40, flags: DIFlagFwdDecl)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1255, file: !1256, line: 1058, baseType: !2130, size: 64, offset: 10880)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2132, line: 99, size: 704, elements: !2133)
!2132 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2133 = !{!2134, !2135, !2136, !2137, !2138, !2139, !2140, !2159, !2160}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2131, file: !2132, line: 100, baseType: !250, size: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2131, file: !2132, line: 101, baseType: !792, size: 32, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2131, file: !2132, line: 102, baseType: !792, size: 32, offset: 96)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2131, file: !2132, line: 105, baseType: !229, offset: 128)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2131, file: !2132, line: 107, baseType: !364, size: 16, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2131, file: !2132, line: 109, baseType: !783, size: 128, offset: 192)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2131, file: !2132, line: 110, baseType: !2141, size: 64, offset: 320)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2132, line: 73, size: 448, elements: !2143)
!2143 = !{!2144, !2147, !2148, !2153, !2158}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2142, file: !2132, line: 74, baseType: !2145, size: 64)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!2146 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2132, line: 74, flags: DIFlagFwdDecl)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2142, file: !2132, line: 75, baseType: !2130, size: 64, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, scope: !2142, file: !2132, line: 83, baseType: !2149, size: 128, offset: 128)
!2149 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2142, file: !2132, line: 83, size: 128, elements: !2150)
!2150 = !{!2151, !2152}
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2149, file: !2132, line: 84, baseType: !194, size: 128)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2149, file: !2132, line: 85, baseType: !973, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, scope: !2142, file: !2132, line: 87, baseType: !2154, size: 128, offset: 256)
!2154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2142, file: !2132, line: 87, size: 128, elements: !2155)
!2155 = !{!2156, !2157}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2154, file: !2132, line: 88, baseType: !683, size: 128)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2154, file: !2132, line: 89, baseType: !413, size: 128, align: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2142, file: !2132, line: 92, baseType: !7, size: 32, offset: 384)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2131, file: !2132, line: 111, baseType: !679, size: 64, offset: 384)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2131, file: !2132, line: 113, baseType: !246, size: 256, offset: 448)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1255, file: !1256, line: 1061, baseType: !2162, size: 64, offset: 10944)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1256, line: 43, flags: DIFlagFwdDecl)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1255, file: !1256, line: 1064, baseType: !372, size: 64, offset: 11008)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1255, file: !1256, line: 1065, baseType: !2166, size: 64, offset: 11072)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1968, line: 14, baseType: !2168)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1968, line: 12, size: 384, elements: !2169)
!2169 = !{!2170}
!2170 = !DIDerivedType(tag: DW_TAG_member, scope: !2168, file: !1968, line: 13, baseType: !2171, size: 384)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2168, file: !1968, line: 13, size: 384, elements: !2172)
!2172 = !{!2173, !2174, !2175, !2176}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2171, file: !1968, line: 13, baseType: !205, size: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2171, file: !1968, line: 13, baseType: !205, size: 32, offset: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2171, file: !1968, line: 13, baseType: !205, size: 32, offset: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2171, file: !1968, line: 13, baseType: !2177, size: 256, offset: 128)
!2177 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2178, line: 32, size: 256, elements: !2179)
!2178 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2179 = !{!2180, !2185, !2198, !2204, !2213, !2233, !2238}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2177, file: !2178, line: 37, baseType: !2181, size: 64)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2177, file: !2178, line: 34, size: 64, elements: !2182)
!2182 = !{!2183, !2184}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2181, file: !2178, line: 35, baseType: !1502, size: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2181, file: !2178, line: 36, baseType: !485, size: 32, offset: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2177, file: !2178, line: 45, baseType: !2186, size: 192)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2177, file: !2178, line: 40, size: 192, elements: !2187)
!2187 = !{!2188, !2190, !2191, !2197}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2186, file: !2178, line: 41, baseType: !2189, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !355, line: 95, baseType: !205)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2186, file: !2178, line: 42, baseType: !205, size: 32, offset: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2186, file: !2178, line: 43, baseType: !2192, size: 64, offset: 64)
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2178, line: 11, baseType: !2193)
!2193 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2178, line: 8, size: 64, elements: !2194)
!2194 = !{!2195, !2196}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2193, file: !2178, line: 9, baseType: !205, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2193, file: !2178, line: 10, baseType: !189, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2186, file: !2178, line: 44, baseType: !205, size: 32, offset: 128)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2177, file: !2178, line: 52, baseType: !2199, size: 128)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2177, file: !2178, line: 48, size: 128, elements: !2200)
!2200 = !{!2201, !2202, !2203}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2199, file: !2178, line: 49, baseType: !1502, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2199, file: !2178, line: 50, baseType: !485, size: 32, offset: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2199, file: !2178, line: 51, baseType: !2192, size: 64, offset: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2177, file: !2178, line: 61, baseType: !2205, size: 256)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2177, file: !2178, line: 55, size: 256, elements: !2206)
!2206 = !{!2207, !2208, !2209, !2210, !2212}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2205, file: !2178, line: 56, baseType: !1502, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2205, file: !2178, line: 57, baseType: !485, size: 32, offset: 32)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2205, file: !2178, line: 58, baseType: !205, size: 32, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2205, file: !2178, line: 59, baseType: !2211, size: 64, offset: 128)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !355, line: 94, baseType: !356)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2205, file: !2178, line: 60, baseType: !2211, size: 64, offset: 192)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2177, file: !2178, line: 95, baseType: !2214, size: 256)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2177, file: !2178, line: 64, size: 256, elements: !2215)
!2215 = !{!2216, !2217}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2214, file: !2178, line: 65, baseType: !189, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, scope: !2214, file: !2178, line: 77, baseType: !2218, size: 192, offset: 64)
!2218 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2214, file: !2178, line: 77, size: 192, elements: !2219)
!2219 = !{!2220, !2221, !2228}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2218, file: !2178, line: 82, baseType: !1243, size: 16)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2218, file: !2178, line: 88, baseType: !2222, size: 192)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2218, file: !2178, line: 84, size: 192, elements: !2223)
!2223 = !{!2224, !2226, !2227}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2222, file: !2178, line: 85, baseType: !2225, size: 64)
!2225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 64, elements: !1367)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2222, file: !2178, line: 86, baseType: !189, size: 64, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2222, file: !2178, line: 87, baseType: !189, size: 64, offset: 128)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2218, file: !2178, line: 93, baseType: !2229, size: 96)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2218, file: !2178, line: 90, size: 96, elements: !2230)
!2230 = !{!2231, !2232}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2229, file: !2178, line: 91, baseType: !2225, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2229, file: !2178, line: 92, baseType: !214, size: 32, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2177, file: !2178, line: 101, baseType: !2234, size: 128)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2177, file: !2178, line: 98, size: 128, elements: !2235)
!2235 = !{!2236, !2237}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2234, file: !2178, line: 99, baseType: !357, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2234, file: !2178, line: 100, baseType: !205, size: 32, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2177, file: !2178, line: 108, baseType: !2239, size: 128)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2177, file: !2178, line: 104, size: 128, elements: !2240)
!2240 = !{!2241, !2242, !2243}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2239, file: !2178, line: 105, baseType: !189, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2239, file: !2178, line: 106, baseType: !205, size: 32, offset: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2239, file: !2178, line: 107, baseType: !7, size: 32, offset: 96)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1255, file: !1256, line: 1067, baseType: !2040, offset: 11136)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1255, file: !1256, line: 1099, baseType: !2246, size: 64, offset: 11136)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 64)
!2247 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1256, line: 56, flags: DIFlagFwdDecl)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1255, file: !1256, line: 1103, baseType: !194, size: 128, offset: 11200)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1255, file: !1256, line: 1104, baseType: !2250, size: 64, offset: 11328)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1256, line: 46, flags: DIFlagFwdDecl)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1255, file: !1256, line: 1105, baseType: !1211, size: 192, offset: 11392)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1255, file: !1256, line: 1106, baseType: !7, size: 32, offset: 11584)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1255, file: !1256, line: 1109, baseType: !2255, size: 128, offset: 11648)
!2255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2256, size: 128, elements: !269)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1256, line: 51, flags: DIFlagFwdDecl)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1255, file: !1256, line: 1110, baseType: !1211, size: 192, offset: 11776)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1255, file: !1256, line: 1111, baseType: !194, size: 128, offset: 11968)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1255, file: !1256, line: 1173, baseType: !2261, size: 64, offset: 12096)
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2263, line: 62, size: 256, align: 256, elements: !2264)
!2263 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2264 = !{!2265, !2266, !2267, !2272}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2262, file: !2263, line: 75, baseType: !214, size: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2262, file: !2263, line: 90, baseType: !214, size: 32, offset: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2262, file: !2263, line: 124, baseType: !2268, size: 64, offset: 64)
!2268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2262, file: !2263, line: 109, size: 64, elements: !2269)
!2269 = !{!2270, !2271}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2268, file: !2263, line: 110, baseType: !466, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2268, file: !2263, line: 112, baseType: !466, size: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2262, file: !2263, line: 144, baseType: !214, size: 32, offset: 128)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1255, file: !1256, line: 1174, baseType: !212, size: 32, offset: 12160)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1255, file: !1256, line: 1179, baseType: !372, size: 64, offset: 12224)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1255, file: !1256, line: 1182, baseType: !2276, size: 128, offset: 12288)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1189, line: 76, size: 128, elements: !2277)
!2277 = !{!2278, !2283, !2284}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2276, file: !1189, line: 85, baseType: !2279, size: 64)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2280, line: 7, size: 64, elements: !2281)
!2280 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2281 = !{!2282}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2279, file: !2280, line: 12, baseType: !1404, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2276, file: !1189, line: 88, baseType: !534, size: 8, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2276, file: !1189, line: 95, baseType: !534, size: 8, offset: 72)
!2285 = !DIDerivedType(tag: DW_TAG_member, scope: !1255, file: !1256, line: 1184, baseType: !2286, size: 128, offset: 12416)
!2286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1255, file: !1256, line: 1184, size: 128, elements: !2287)
!2287 = !{!2288, !2289}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2286, file: !1256, line: 1185, baseType: !1268, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2286, file: !1256, line: 1186, baseType: !413, size: 128, align: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1255, file: !1256, line: 1190, baseType: !2291, size: 64, offset: 12544)
!2291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2292, size: 64)
!2292 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1256, line: 53, flags: DIFlagFwdDecl)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1255, file: !1256, line: 1192, baseType: !2294, size: 128, offset: 12608)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1189, line: 64, size: 128, elements: !2295)
!2295 = !{!2296, !2297, !2298}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2294, file: !1189, line: 65, baseType: !765, size: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2294, file: !1189, line: 67, baseType: !214, size: 32, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2294, file: !1189, line: 68, baseType: !214, size: 32, offset: 96)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1255, file: !1256, line: 1206, baseType: !205, size: 32, offset: 12736)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1255, file: !1256, line: 1207, baseType: !205, size: 32, offset: 12768)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1255, file: !1256, line: 1209, baseType: !372, size: 64, offset: 12800)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1255, file: !1256, line: 1219, baseType: !465, size: 64, offset: 12864)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1255, file: !1256, line: 1220, baseType: !465, size: 64, offset: 12928)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1255, file: !1256, line: 1317, baseType: !205, size: 32, offset: 12992)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1255, file: !1256, line: 1319, baseType: !1254, size: 64, offset: 13056)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1255, file: !1256, line: 1322, baseType: !2307, size: 64, offset: 13120)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2309, line: 56, size: 512, elements: !2310)
!2309 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2310 = !{!2311, !2312, !2313, !2314, !2315, !2316, !2317, !2319}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2308, file: !2309, line: 57, baseType: !2307, size: 64)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2308, file: !2309, line: 58, baseType: !189, size: 64, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2308, file: !2309, line: 59, baseType: !372, size: 64, offset: 128)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2308, file: !2309, line: 60, baseType: !372, size: 64, offset: 192)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2308, file: !2309, line: 61, baseType: !858, size: 64, offset: 256)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2308, file: !2309, line: 62, baseType: !7, size: 32, offset: 320)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2308, file: !2309, line: 63, baseType: !2318, size: 64, offset: 384)
!2318 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !195, line: 153, baseType: !465)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2308, file: !2309, line: 64, baseType: !2320, size: 64, offset: 448)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1255, file: !1256, line: 1326, baseType: !1268, size: 32, offset: 13184)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1255, file: !1256, line: 1342, baseType: !189, size: 64, offset: 13248)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1255, file: !1256, line: 1343, baseType: !466, size: 64, offset: 13312)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1255, file: !1256, line: 1344, baseType: !465, size: 64, offset: 13376)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1255, file: !1256, line: 1345, baseType: !466, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1255, file: !1256, line: 1346, baseType: !466, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1255, file: !1256, line: 1347, baseType: !466, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1255, file: !1256, line: 1348, baseType: !413, size: 128, align: 64, offset: 13504)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1255, file: !1256, line: 1358, baseType: !2331, size: 34816, offset: 13824)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2332, line: 485, size: 34816, elements: !2333)
!2332 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2333 = !{!2334, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2363, !2364, !2365, !2366, !2367, !2368, !2371, !2372, !2373}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2331, file: !2332, line: 487, baseType: !2335, size: 192)
!2335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2336, size: 192, elements: !323)
!2336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2337, line: 16, size: 64, elements: !2338)
!2337 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2338 = !{!2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351}
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2336, file: !2337, line: 17, baseType: !897, size: 16)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2336, file: !2337, line: 18, baseType: !897, size: 16, offset: 16)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2336, file: !2337, line: 19, baseType: !897, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2336, file: !2337, line: 19, baseType: !897, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2336, file: !2337, line: 19, baseType: !897, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2336, file: !2337, line: 19, baseType: !897, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2336, file: !2337, line: 19, baseType: !897, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2336, file: !2337, line: 20, baseType: !897, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2336, file: !2337, line: 20, baseType: !897, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2336, file: !2337, line: 20, baseType: !897, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2336, file: !2337, line: 20, baseType: !897, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2336, file: !2337, line: 20, baseType: !897, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2336, file: !2337, line: 20, baseType: !897, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2331, file: !2332, line: 491, baseType: !372, size: 64, offset: 192)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2331, file: !2332, line: 495, baseType: !364, size: 16, offset: 256)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2331, file: !2332, line: 496, baseType: !364, size: 16, offset: 272)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2331, file: !2332, line: 497, baseType: !364, size: 16, offset: 288)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2331, file: !2332, line: 498, baseType: !364, size: 16, offset: 304)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2331, file: !2332, line: 502, baseType: !372, size: 64, offset: 320)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2331, file: !2332, line: 503, baseType: !372, size: 64, offset: 384)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2331, file: !2332, line: 514, baseType: !2360, size: 256, offset: 448)
!2360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2361, size: 256, elements: !1193)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 64)
!2362 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2332, line: 483, flags: DIFlagFwdDecl)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2331, file: !2332, line: 516, baseType: !372, size: 64, offset: 704)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2331, file: !2332, line: 518, baseType: !372, size: 64, offset: 768)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2331, file: !2332, line: 520, baseType: !372, size: 64, offset: 832)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2331, file: !2332, line: 521, baseType: !372, size: 64, offset: 896)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2331, file: !2332, line: 522, baseType: !372, size: 64, offset: 960)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2331, file: !2332, line: 528, baseType: !2369, size: 64, offset: 1024)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2370 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2332, line: 10, flags: DIFlagFwdDecl)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2331, file: !2332, line: 535, baseType: !372, size: 64, offset: 1088)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2331, file: !2332, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2331, file: !2332, line: 540, baseType: !2374, size: 33280, offset: 1536)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2375, line: 317, size: 33280, elements: !2376)
!2375 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2376 = !{!2377, !2378, !2379}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2374, file: !2375, line: 330, baseType: !7, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2374, file: !2375, line: 337, baseType: !372, size: 64, offset: 64)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2374, file: !2375, line: 348, baseType: !2380, size: 32768, offset: 512)
!2380 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2375, line: 304, size: 32768, elements: !2381)
!2381 = !{!2382, !2397, !2436, !2486, !2499}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2380, file: !2375, line: 305, baseType: !2383, size: 896)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2375, line: 12, size: 896, elements: !2384)
!2384 = !{!2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2396}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2383, file: !2375, line: 13, baseType: !212, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2383, file: !2375, line: 14, baseType: !212, size: 32, offset: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2383, file: !2375, line: 15, baseType: !212, size: 32, offset: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2383, file: !2375, line: 16, baseType: !212, size: 32, offset: 96)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2383, file: !2375, line: 17, baseType: !212, size: 32, offset: 128)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2383, file: !2375, line: 18, baseType: !212, size: 32, offset: 160)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2383, file: !2375, line: 19, baseType: !212, size: 32, offset: 192)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2383, file: !2375, line: 22, baseType: !2393, size: 640, offset: 224)
!2393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 640, elements: !2394)
!2394 = !{!2395}
!2395 = !DISubrange(count: 20)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2383, file: !2375, line: 25, baseType: !212, size: 32, offset: 864)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2380, file: !2375, line: 306, baseType: !2398, size: 4096, align: 128)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2375, line: 34, size: 4096, align: 128, elements: !2399)
!2399 = !{!2400, !2401, !2402, !2403, !2404, !2419, !2420, !2421, !2425, !2427, !2431}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2398, file: !2375, line: 35, baseType: !897, size: 16)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2398, file: !2375, line: 36, baseType: !897, size: 16, offset: 16)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2398, file: !2375, line: 37, baseType: !897, size: 16, offset: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2398, file: !2375, line: 38, baseType: !897, size: 16, offset: 48)
!2404 = !DIDerivedType(tag: DW_TAG_member, scope: !2398, file: !2375, line: 39, baseType: !2405, size: 128, offset: 64)
!2405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2398, file: !2375, line: 39, size: 128, elements: !2406)
!2406 = !{!2407, !2412}
!2407 = !DIDerivedType(tag: DW_TAG_member, scope: !2405, file: !2375, line: 40, baseType: !2408, size: 128)
!2408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2405, file: !2375, line: 40, size: 128, elements: !2409)
!2409 = !{!2410, !2411}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2408, file: !2375, line: 41, baseType: !465, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2408, file: !2375, line: 42, baseType: !465, size: 64, offset: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, scope: !2405, file: !2375, line: 44, baseType: !2413, size: 128)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2405, file: !2375, line: 44, size: 128, elements: !2414)
!2414 = !{!2415, !2416, !2417, !2418}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2413, file: !2375, line: 45, baseType: !212, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2413, file: !2375, line: 46, baseType: !212, size: 32, offset: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2413, file: !2375, line: 47, baseType: !212, size: 32, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2413, file: !2375, line: 48, baseType: !212, size: 32, offset: 96)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2398, file: !2375, line: 51, baseType: !212, size: 32, offset: 192)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2398, file: !2375, line: 52, baseType: !212, size: 32, offset: 224)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2398, file: !2375, line: 55, baseType: !2422, size: 1024, offset: 256)
!2422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 1024, elements: !2423)
!2423 = !{!2424}
!2424 = !DISubrange(count: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2398, file: !2375, line: 58, baseType: !2426, size: 2048, offset: 1280)
!2426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 2048, elements: !327)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2398, file: !2375, line: 60, baseType: !2428, size: 384, offset: 3328)
!2428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 384, elements: !2429)
!2429 = !{!2430}
!2430 = !DISubrange(count: 12)
!2431 = !DIDerivedType(tag: DW_TAG_member, scope: !2398, file: !2375, line: 62, baseType: !2432, size: 384, offset: 3712)
!2432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2398, file: !2375, line: 62, size: 384, elements: !2433)
!2433 = !{!2434, !2435}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2432, file: !2375, line: 63, baseType: !2428, size: 384)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2432, file: !2375, line: 64, baseType: !2428, size: 384)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2380, file: !2375, line: 307, baseType: !2437, size: 1088)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2375, line: 79, size: 1088, elements: !2438)
!2438 = !{!2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2485}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2437, file: !2375, line: 80, baseType: !212, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2437, file: !2375, line: 81, baseType: !212, size: 32, offset: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2437, file: !2375, line: 82, baseType: !212, size: 32, offset: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2437, file: !2375, line: 83, baseType: !212, size: 32, offset: 96)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2437, file: !2375, line: 84, baseType: !212, size: 32, offset: 128)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2437, file: !2375, line: 85, baseType: !212, size: 32, offset: 160)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2437, file: !2375, line: 86, baseType: !212, size: 32, offset: 192)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2437, file: !2375, line: 88, baseType: !2393, size: 640, offset: 224)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2437, file: !2375, line: 89, baseType: !1389, size: 8, offset: 864)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2437, file: !2375, line: 90, baseType: !1389, size: 8, offset: 872)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2437, file: !2375, line: 91, baseType: !1389, size: 8, offset: 880)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2437, file: !2375, line: 92, baseType: !1389, size: 8, offset: 888)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2437, file: !2375, line: 93, baseType: !1389, size: 8, offset: 896)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2437, file: !2375, line: 94, baseType: !1389, size: 8, offset: 904)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2437, file: !2375, line: 95, baseType: !2454, size: 64, offset: 960)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2456, line: 11, size: 128, elements: !2457)
!2456 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2457 = !{!2458, !2459}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2455, file: !2456, line: 12, baseType: !357, size: 64)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2455, file: !2456, line: 13, baseType: !2460, size: 64, offset: 64)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 64)
!2461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2462, line: 56, size: 1344, elements: !2463)
!2462 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2463 = !{!2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2461, file: !2462, line: 61, baseType: !372, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2461, file: !2462, line: 62, baseType: !372, size: 64, offset: 64)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2461, file: !2462, line: 63, baseType: !372, size: 64, offset: 128)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2461, file: !2462, line: 64, baseType: !372, size: 64, offset: 192)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2461, file: !2462, line: 65, baseType: !372, size: 64, offset: 256)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2461, file: !2462, line: 66, baseType: !372, size: 64, offset: 320)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2461, file: !2462, line: 68, baseType: !372, size: 64, offset: 384)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2461, file: !2462, line: 69, baseType: !372, size: 64, offset: 448)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2461, file: !2462, line: 70, baseType: !372, size: 64, offset: 512)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2461, file: !2462, line: 71, baseType: !372, size: 64, offset: 576)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2461, file: !2462, line: 72, baseType: !372, size: 64, offset: 640)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2461, file: !2462, line: 73, baseType: !372, size: 64, offset: 704)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2461, file: !2462, line: 74, baseType: !372, size: 64, offset: 768)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2461, file: !2462, line: 75, baseType: !372, size: 64, offset: 832)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2461, file: !2462, line: 76, baseType: !372, size: 64, offset: 896)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2461, file: !2462, line: 81, baseType: !372, size: 64, offset: 960)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2461, file: !2462, line: 83, baseType: !372, size: 64, offset: 1024)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2461, file: !2462, line: 84, baseType: !372, size: 64, offset: 1088)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2461, file: !2462, line: 85, baseType: !372, size: 64, offset: 1152)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2461, file: !2462, line: 86, baseType: !372, size: 64, offset: 1216)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2461, file: !2462, line: 87, baseType: !372, size: 64, offset: 1280)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2437, file: !2375, line: 96, baseType: !212, size: 32, offset: 1024)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2380, file: !2375, line: 308, baseType: !2487, size: 4608, align: 512)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2375, line: 289, size: 4608, align: 512, elements: !2488)
!2488 = !{!2489, !2490, !2497}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2487, file: !2375, line: 290, baseType: !2398, size: 4096, align: 128)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2487, file: !2375, line: 291, baseType: !2491, size: 512, offset: 4096)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2375, line: 268, size: 512, elements: !2492)
!2492 = !{!2493, !2494, !2495}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2491, file: !2375, line: 269, baseType: !465, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2491, file: !2375, line: 270, baseType: !465, size: 64, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2491, file: !2375, line: 271, baseType: !2496, size: 384, offset: 128)
!2496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 384, elements: !1665)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2487, file: !2375, line: 292, baseType: !2498, offset: 4608)
!2498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1389, elements: !1906)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2380, file: !2375, line: 309, baseType: !2500, size: 32768)
!2500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1389, size: 32768, elements: !2501)
!2501 = !{!2502}
!2502 = !DISubrange(count: 4096)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1251, file: !767, line: 378, baseType: !2504, size: 64, offset: 64)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1247, file: !767, line: 384, baseType: !1544, size: 192, offset: 192)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1016, file: !767, line: 500, baseType: !229, offset: 6656)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1016, file: !767, line: 501, baseType: !2508, size: 64, offset: 6656)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!2509 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !767, line: 387, flags: DIFlagFwdDecl)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1016, file: !767, line: 516, baseType: !1753, size: 64, offset: 6720)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1016, file: !767, line: 519, baseType: !400, size: 64, offset: 6784)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1016, file: !767, line: 521, baseType: !2513, size: 64, offset: 6848)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64)
!2514 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !767, line: 521, flags: DIFlagFwdDecl)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1016, file: !767, line: 545, baseType: !792, size: 32, offset: 6912)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1016, file: !767, line: 548, baseType: !534, size: 8, offset: 6944)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1016, file: !767, line: 550, baseType: !2518, offset: 6952)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2519, line: 142, elements: !243)
!2519 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1016, file: !767, line: 554, baseType: !246, size: 256, offset: 6976)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1016, file: !767, line: 557, baseType: !212, size: 32, offset: 7232)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1013, file: !767, line: 565, baseType: !2523, offset: 7296)
!2523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, elements: !2524)
!2524 = !{!2525}
!2525 = !DISubrange(count: -1)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1009, file: !767, line: 151, baseType: !792, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1002, file: !767, line: 156, baseType: !229, offset: 256)
!2528 = !DIDerivedType(tag: DW_TAG_member, scope: !771, file: !767, line: 159, baseType: !2529, size: 128)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !771, file: !767, line: 159, size: 128, elements: !2530)
!2530 = !{!2531, !2595}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2529, file: !767, line: 161, baseType: !2532, size: 64)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !52, line: 110, size: 1152, elements: !2534)
!2534 = !{!2535, !2545, !2566, !2567, !2568, !2569, !2570, !2582, !2583, !2584}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2533, file: !52, line: 111, baseType: !2536, size: 384)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !52, line: 19, size: 384, elements: !2537)
!2537 = !{!2538, !2540, !2541, !2542, !2543, !2544}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2536, file: !52, line: 20, baseType: !2539, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2536, file: !52, line: 21, baseType: !2539, size: 64, offset: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2536, file: !52, line: 22, baseType: !2539, size: 64, offset: 128)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2536, file: !52, line: 23, baseType: !372, size: 64, offset: 192)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2536, file: !52, line: 24, baseType: !372, size: 64, offset: 256)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2536, file: !52, line: 25, baseType: !372, size: 64, offset: 320)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2533, file: !52, line: 112, baseType: !2546, size: 64, offset: 384)
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2547, size: 64)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2548, line: 105, size: 128, elements: !2549)
!2548 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2549 = !{!2550, !2551}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2547, file: !2548, line: 110, baseType: !372, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2547, file: !2548, line: 118, baseType: !2552, size: 64, offset: 64)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2548, line: 95, size: 448, elements: !2554)
!2554 = !{!2555, !2556, !2561, !2562, !2563, !2564, !2565}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2553, file: !2548, line: 96, baseType: !250, size: 64)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2553, file: !2548, line: 97, baseType: !2557, size: 64, offset: 64)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2548, line: 60, baseType: !2559)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{null, !2546}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2553, file: !2548, line: 98, baseType: !2557, size: 64, offset: 128)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2553, file: !2548, line: 99, baseType: !534, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2553, file: !2548, line: 100, baseType: !534, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2553, file: !2548, line: 101, baseType: !413, size: 128, align: 64, offset: 256)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2553, file: !2548, line: 102, baseType: !2546, size: 64, offset: 384)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2533, file: !52, line: 113, baseType: !2547, size: 128, offset: 448)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2533, file: !52, line: 114, baseType: !1544, size: 192, offset: 576)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2533, file: !52, line: 115, baseType: !51, size: 32, offset: 768)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2533, file: !52, line: 116, baseType: !7, size: 32, offset: 800)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2533, file: !52, line: 117, baseType: !2571, size: 64, offset: 832)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2573)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !52, line: 67, size: 256, elements: !2574)
!2574 = !{!2575, !2576, !2580, !2581}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2573, file: !52, line: 73, baseType: !878, size: 64)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2573, file: !52, line: 78, baseType: !2577, size: 64, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = !DISubroutineType(types: !2579)
!2579 = !{null, !2532}
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2573, file: !52, line: 83, baseType: !2577, size: 64, offset: 128)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2573, file: !52, line: 89, baseType: !1065, size: 64, offset: 192)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2533, file: !52, line: 118, baseType: !189, size: 64, offset: 896)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2533, file: !52, line: 119, baseType: !205, size: 32, offset: 960)
!2584 = !DIDerivedType(tag: DW_TAG_member, scope: !2533, file: !52, line: 120, baseType: !2585, size: 128, offset: 1024)
!2585 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2533, file: !52, line: 120, size: 128, elements: !2586)
!2586 = !{!2587, !2593}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2585, file: !52, line: 121, baseType: !2588, size: 128)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2589, line: 6, size: 128, elements: !2590)
!2589 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2590 = !{!2591, !2592}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2588, file: !2589, line: 7, baseType: !465, size: 64)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2588, file: !2589, line: 8, baseType: !465, size: 64, offset: 64)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2585, file: !52, line: 122, baseType: !2594)
!2594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2588, elements: !1906)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2529, file: !767, line: 162, baseType: !189, size: 64, offset: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !771, file: !767, line: 176, baseType: !413, size: 128, align: 64)
!2597 = !DIDerivedType(tag: DW_TAG_member, scope: !766, file: !767, line: 179, baseType: !2598, size: 32, offset: 384)
!2598 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !766, file: !767, line: 179, size: 32, elements: !2599)
!2599 = !{!2600, !2601, !2602, !2603}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2598, file: !767, line: 184, baseType: !792, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2598, file: !767, line: 192, baseType: !7, size: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2598, file: !767, line: 194, baseType: !7, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2598, file: !767, line: 195, baseType: !205, size: 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !766, file: !767, line: 199, baseType: !792, size: 32, offset: 416)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !701, file: !65, line: 1964, baseType: !2606, size: 64, offset: 1344)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 64)
!2607 = !DISubroutineType(types: !2608)
!2608 = !{!357, !641, !2609}
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2611, line: 12, size: 256, elements: !2612)
!2611 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2612 = !{!2613, !2614, !2615, !2616, !2617}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2610, file: !2611, line: 13, baseType: !788, size: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2610, file: !2611, line: 16, baseType: !205, size: 32, offset: 32)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2610, file: !2611, line: 23, baseType: !372, size: 64, offset: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2610, file: !2611, line: 30, baseType: !372, size: 64, offset: 128)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2610, file: !2611, line: 33, baseType: !2618, size: 64, offset: 192)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !2611, line: 33, flags: DIFlagFwdDecl)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !701, file: !65, line: 1966, baseType: !2606, size: 64, offset: 1408)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !642, file: !65, line: 1424, baseType: !2622, size: 64, offset: 448)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2624)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !59, line: 322, size: 704, elements: !2625)
!2625 = !{!2626, !2672, !2676, !2680, !2681, !2682, !2683, !2684, !2689, !2694, !2698}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2624, file: !59, line: 323, baseType: !2627, size: 64)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{!205, !2630}
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !59, line: 294, size: 1600, elements: !2632)
!2632 = !{!2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2657, !2658, !2659}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2631, file: !59, line: 295, baseType: !683, size: 128)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2631, file: !59, line: 296, baseType: !194, size: 128, offset: 128)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2631, file: !59, line: 297, baseType: !194, size: 128, offset: 256)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2631, file: !59, line: 298, baseType: !194, size: 128, offset: 384)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2631, file: !59, line: 299, baseType: !1211, size: 192, offset: 512)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2631, file: !59, line: 300, baseType: !229, offset: 704)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2631, file: !59, line: 301, baseType: !792, size: 32, offset: 704)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2631, file: !59, line: 302, baseType: !641, size: 64, offset: 768)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2631, file: !59, line: 303, baseType: !2642, size: 64, offset: 832)
!2642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !59, line: 68, size: 64, elements: !2643)
!2643 = !{!2644, !2656}
!2644 = !DIDerivedType(tag: DW_TAG_member, scope: !2642, file: !59, line: 69, baseType: !2645, size: 32)
!2645 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2642, file: !59, line: 69, size: 32, elements: !2646)
!2646 = !{!2647, !2648, !2649}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2645, file: !59, line: 70, baseType: !479, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2645, file: !59, line: 71, baseType: !487, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2645, file: !59, line: 72, baseType: !2650, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2651, line: 24, baseType: !2652)
!2651 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2651, line: 22, size: 32, elements: !2653)
!2653 = !{!2654}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2652, file: !2651, line: 23, baseType: !2655, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2651, line: 20, baseType: !485)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2642, file: !59, line: 74, baseType: !58, size: 32, offset: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2631, file: !59, line: 304, baseType: !575, size: 64, offset: 896)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2631, file: !59, line: 305, baseType: !372, size: 64, offset: 960)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2631, file: !59, line: 306, baseType: !2660, size: 576, offset: 1024)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !59, line: 205, size: 576, elements: !2661)
!2661 = !{!2662, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2660, file: !59, line: 206, baseType: !2663, size: 64)
!2663 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !59, line: 66, baseType: !258)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2660, file: !59, line: 207, baseType: !2663, size: 64, offset: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2660, file: !59, line: 208, baseType: !2663, size: 64, offset: 128)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2660, file: !59, line: 209, baseType: !2663, size: 64, offset: 192)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2660, file: !59, line: 210, baseType: !2663, size: 64, offset: 256)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2660, file: !59, line: 211, baseType: !2663, size: 64, offset: 320)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2660, file: !59, line: 212, baseType: !2663, size: 64, offset: 384)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2660, file: !59, line: 213, baseType: !582, size: 64, offset: 448)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2660, file: !59, line: 214, baseType: !582, size: 64, offset: 512)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2624, file: !59, line: 324, baseType: !2673, size: 64, offset: 64)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = !DISubroutineType(types: !2675)
!2675 = !{!2630, !641, !205}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2624, file: !59, line: 325, baseType: !2677, size: 64, offset: 128)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = !DISubroutineType(types: !2679)
!2679 = !{null, !2630}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2624, file: !59, line: 326, baseType: !2627, size: 64, offset: 192)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2624, file: !59, line: 327, baseType: !2627, size: 64, offset: 256)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2624, file: !59, line: 328, baseType: !2627, size: 64, offset: 320)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2624, file: !59, line: 329, baseType: !729, size: 64, offset: 384)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2624, file: !59, line: 332, baseType: !2685, size: 64, offset: 448)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = !DISubroutineType(types: !2687)
!2687 = !{!2688, !473}
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2663, size: 64)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2624, file: !59, line: 333, baseType: !2690, size: 64, offset: 512)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{!205, !473, !2693}
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2624, file: !59, line: 335, baseType: !2695, size: 64, offset: 576)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = !DISubroutineType(types: !2697)
!2697 = !{!205, !473, !2688}
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2624, file: !59, line: 337, baseType: !2699, size: 64, offset: 640)
!2699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2700, size: 64)
!2700 = !DISubroutineType(types: !2701)
!2701 = !{!205, !641, !2702}
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !642, file: !65, line: 1425, baseType: !2704, size: 64, offset: 512)
!2704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2705, size: 64)
!2705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2706)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !59, line: 428, size: 704, elements: !2707)
!2707 = !{!2708, !2712, !2713, !2717, !2718, !2719, !2734, !2757, !2761, !2762, !2785}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2706, file: !59, line: 429, baseType: !2709, size: 64)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!2710 = !DISubroutineType(types: !2711)
!2711 = !{!205, !641, !205, !205, !591}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2706, file: !59, line: 430, baseType: !729, size: 64, offset: 64)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2706, file: !59, line: 431, baseType: !2714, size: 64, offset: 128)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{!205, !641, !7}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2706, file: !59, line: 432, baseType: !2714, size: 64, offset: 192)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2706, file: !59, line: 433, baseType: !729, size: 64, offset: 256)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2706, file: !59, line: 434, baseType: !2720, size: 64, offset: 320)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!2721 = !DISubroutineType(types: !2722)
!2722 = !{!205, !641, !205, !2723}
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !59, line: 415, size: 256, elements: !2725)
!2725 = !{!2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2724, file: !59, line: 416, baseType: !205, size: 32)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2724, file: !59, line: 417, baseType: !7, size: 32, offset: 32)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2724, file: !59, line: 418, baseType: !7, size: 32, offset: 64)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2724, file: !59, line: 420, baseType: !7, size: 32, offset: 96)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2724, file: !59, line: 421, baseType: !7, size: 32, offset: 128)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2724, file: !59, line: 422, baseType: !7, size: 32, offset: 160)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2724, file: !59, line: 423, baseType: !7, size: 32, offset: 192)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2724, file: !59, line: 424, baseType: !7, size: 32, offset: 224)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2706, file: !59, line: 435, baseType: !2735, size: 64, offset: 384)
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2736, size: 64)
!2736 = !DISubroutineType(types: !2737)
!2737 = !{!205, !641, !2642, !2738}
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 64)
!2739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !59, line: 343, size: 960, elements: !2740)
!2740 = !{!2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756}
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2739, file: !59, line: 344, baseType: !205, size: 32)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2739, file: !59, line: 345, baseType: !465, size: 64, offset: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2739, file: !59, line: 346, baseType: !465, size: 64, offset: 128)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2739, file: !59, line: 347, baseType: !465, size: 64, offset: 192)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2739, file: !59, line: 348, baseType: !465, size: 64, offset: 256)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2739, file: !59, line: 349, baseType: !465, size: 64, offset: 320)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2739, file: !59, line: 350, baseType: !465, size: 64, offset: 384)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2739, file: !59, line: 351, baseType: !256, size: 64, offset: 448)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2739, file: !59, line: 353, baseType: !256, size: 64, offset: 512)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2739, file: !59, line: 354, baseType: !205, size: 32, offset: 576)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2739, file: !59, line: 355, baseType: !205, size: 32, offset: 608)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2739, file: !59, line: 356, baseType: !465, size: 64, offset: 640)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2739, file: !59, line: 357, baseType: !465, size: 64, offset: 704)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2739, file: !59, line: 358, baseType: !465, size: 64, offset: 768)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2739, file: !59, line: 359, baseType: !256, size: 64, offset: 832)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2739, file: !59, line: 360, baseType: !205, size: 32, offset: 896)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2706, file: !59, line: 436, baseType: !2758, size: 64, offset: 448)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DISubroutineType(types: !2760)
!2760 = !{!205, !641, !2702, !2738}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2706, file: !59, line: 438, baseType: !2735, size: 64, offset: 512)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2706, file: !59, line: 439, baseType: !2763, size: 64, offset: 576)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2764 = !DISubroutineType(types: !2765)
!2765 = !{!205, !641, !2766}
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !59, line: 409, size: 1408, elements: !2768)
!2768 = !{!2769, !2770}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2767, file: !59, line: 410, baseType: !7, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2767, file: !59, line: 411, baseType: !2771, size: 1344, offset: 64)
!2771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2772, size: 1344, elements: !323)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !59, line: 395, size: 448, elements: !2773)
!2773 = !{!2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2784}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2772, file: !59, line: 396, baseType: !7, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2772, file: !59, line: 397, baseType: !7, size: 32, offset: 32)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2772, file: !59, line: 399, baseType: !7, size: 32, offset: 64)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2772, file: !59, line: 400, baseType: !7, size: 32, offset: 96)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2772, file: !59, line: 401, baseType: !7, size: 32, offset: 128)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2772, file: !59, line: 402, baseType: !7, size: 32, offset: 160)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2772, file: !59, line: 403, baseType: !7, size: 32, offset: 192)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2772, file: !59, line: 404, baseType: !467, size: 64, offset: 256)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2772, file: !59, line: 405, baseType: !2783, size: 64, offset: 320)
!2783 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !195, line: 126, baseType: !465)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2772, file: !59, line: 406, baseType: !2783, size: 64, offset: 384)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2706, file: !59, line: 440, baseType: !2714, size: 64, offset: 640)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !642, file: !65, line: 1426, baseType: !2787, size: 64, offset: 576)
!2787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 64)
!2788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2789)
!2789 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !65, line: 49, flags: DIFlagFwdDecl)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !642, file: !65, line: 1427, baseType: !372, size: 64, offset: 640)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !642, file: !65, line: 1428, baseType: !372, size: 64, offset: 704)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !642, file: !65, line: 1429, baseType: !372, size: 64, offset: 768)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !642, file: !65, line: 1430, baseType: !430, size: 64, offset: 832)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !642, file: !65, line: 1431, baseType: !812, size: 256, offset: 896)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !642, file: !65, line: 1432, baseType: !205, size: 32, offset: 1152)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !642, file: !65, line: 1433, baseType: !792, size: 32, offset: 1184)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !642, file: !65, line: 1437, baseType: !2798, size: 64, offset: 1216)
!2798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2799, size: 64)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2801)
!2801 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !65, line: 1437, flags: DIFlagFwdDecl)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !642, file: !65, line: 1449, baseType: !2803, size: 64, offset: 1280)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !446, line: 34, size: 64, elements: !2804)
!2804 = !{!2805}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2803, file: !446, line: 35, baseType: !449, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !642, file: !65, line: 1450, baseType: !194, size: 128, offset: 1344)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !642, file: !65, line: 1451, baseType: !2808, size: 64, offset: 1472)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !65, line: 699, flags: DIFlagFwdDecl)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !642, file: !65, line: 1452, baseType: !2127, size: 64, offset: 1536)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !642, file: !65, line: 1453, baseType: !2812, size: 64, offset: 1600)
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !65, line: 1453, flags: DIFlagFwdDecl)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !642, file: !65, line: 1454, baseType: !683, size: 128, offset: 1664)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !642, file: !65, line: 1455, baseType: !7, size: 32, offset: 1792)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !642, file: !65, line: 1456, baseType: !2817, size: 2432, offset: 1856)
!2817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !59, line: 518, size: 2432, elements: !2818)
!2818 = !{!2819, !2820, !2821, !2823, !2855}
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2817, file: !59, line: 519, baseType: !7, size: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2817, file: !59, line: 520, baseType: !812, size: 256, offset: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2817, file: !59, line: 521, baseType: !2822, size: 192, offset: 320)
!2822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 192, elements: !323)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2817, file: !59, line: 522, baseType: !2824, size: 1728, offset: 512)
!2824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2825, size: 1728, elements: !323)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !59, line: 222, size: 576, elements: !2826)
!2826 = !{!2827, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2825, file: !59, line: 223, baseType: !2828, size: 64)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !59, line: 443, size: 256, elements: !2830)
!2830 = !{!2831, !2832, !2845, !2846}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2829, file: !59, line: 444, baseType: !205, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2829, file: !59, line: 445, baseType: !2833, size: 64, offset: 64)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2835)
!2835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !59, line: 310, size: 512, elements: !2836)
!2836 = !{!2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2835, file: !59, line: 311, baseType: !729, size: 64)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2835, file: !59, line: 312, baseType: !729, size: 64, offset: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2835, file: !59, line: 313, baseType: !729, size: 64, offset: 128)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2835, file: !59, line: 314, baseType: !729, size: 64, offset: 192)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2835, file: !59, line: 315, baseType: !2627, size: 64, offset: 256)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2835, file: !59, line: 316, baseType: !2627, size: 64, offset: 320)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2835, file: !59, line: 317, baseType: !2627, size: 64, offset: 384)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2835, file: !59, line: 318, baseType: !2699, size: 64, offset: 448)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2829, file: !59, line: 446, baseType: !674, size: 64, offset: 128)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2829, file: !59, line: 447, baseType: !2828, size: 64, offset: 192)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2825, file: !59, line: 224, baseType: !205, size: 32, offset: 64)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2825, file: !59, line: 226, baseType: !194, size: 128, offset: 128)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2825, file: !59, line: 227, baseType: !372, size: 64, offset: 256)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2825, file: !59, line: 228, baseType: !7, size: 32, offset: 320)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2825, file: !59, line: 229, baseType: !7, size: 32, offset: 352)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2825, file: !59, line: 230, baseType: !2663, size: 64, offset: 384)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2825, file: !59, line: 231, baseType: !2663, size: 64, offset: 448)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2825, file: !59, line: 232, baseType: !189, size: 64, offset: 512)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2817, file: !59, line: 523, baseType: !2856, size: 192, offset: 2240)
!2856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2833, size: 192, elements: !323)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !642, file: !65, line: 1458, baseType: !2858, size: 2112, offset: 4288)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !65, line: 1410, size: 2112, elements: !2859)
!2859 = !{!2860, !2861, !2862}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2858, file: !65, line: 1411, baseType: !205, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2858, file: !65, line: 1412, baseType: !1523, size: 128, offset: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2858, file: !65, line: 1413, baseType: !2863, size: 1920, offset: 192)
!2863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2864, size: 1920, elements: !323)
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2865, line: 12, size: 640, elements: !2866)
!2865 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2866 = !{!2867, !2875, !2877, !2882, !2883}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2864, file: !2865, line: 13, baseType: !2868, size: 320)
!2868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2869, line: 17, size: 320, elements: !2870)
!2869 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2870 = !{!2871, !2872, !2873, !2874}
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2868, file: !2869, line: 18, baseType: !205, size: 32)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2868, file: !2869, line: 19, baseType: !205, size: 32, offset: 32)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2868, file: !2869, line: 20, baseType: !1523, size: 128, offset: 64)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2868, file: !2869, line: 22, baseType: !413, size: 128, align: 64, offset: 192)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2864, file: !2865, line: 14, baseType: !2876, size: 64, offset: 320)
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2864, file: !2865, line: 15, baseType: !2878, size: 64, offset: 384)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2879, line: 16, size: 64, elements: !2880)
!2879 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2880 = !{!2881}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2878, file: !2879, line: 17, baseType: !1254, size: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2864, file: !2865, line: 16, baseType: !1523, size: 128, offset: 448)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2864, file: !2865, line: 17, baseType: !792, size: 32, offset: 576)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !642, file: !65, line: 1465, baseType: !189, size: 64, offset: 6400)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !642, file: !65, line: 1468, baseType: !212, size: 32, offset: 6464)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !642, file: !65, line: 1470, baseType: !582, size: 64, offset: 6528)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !642, file: !65, line: 1471, baseType: !582, size: 64, offset: 6592)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !642, file: !65, line: 1473, baseType: !214, size: 32, offset: 6656)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !642, file: !65, line: 1474, baseType: !2890, size: 64, offset: 6720)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !65, line: 603, flags: DIFlagFwdDecl)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !642, file: !65, line: 1477, baseType: !2893, size: 256, offset: 6784)
!2893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 256, elements: !2423)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !642, file: !65, line: 1478, baseType: !2895, size: 128, offset: 7040)
!2895 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2896, line: 18, baseType: !2897)
!2896 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2897 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2896, line: 16, size: 128, elements: !2898)
!2898 = !{!2899}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2897, file: !2896, line: 17, baseType: !2900, size: 128)
!2900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, size: 128, elements: !209)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !642, file: !65, line: 1480, baseType: !7, size: 32, offset: 7168)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !642, file: !65, line: 1481, baseType: !2903, size: 32, offset: 7200)
!2903 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !195, line: 150, baseType: !7)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !642, file: !65, line: 1487, baseType: !1211, size: 192, offset: 7232)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !642, file: !65, line: 1493, baseType: !285, size: 64, offset: 7424)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !642, file: !65, line: 1495, baseType: !2907, size: 64, offset: 7488)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2909)
!2909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !428, line: 135, size: 1024, align: 512, elements: !2910)
!2910 = !{!2911, !2915, !2916, !2923, !2929, !2933, !2937, !2941, !2942, !2946, !2950, !2955, !2959}
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2909, file: !428, line: 136, baseType: !2912, size: 64)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 64)
!2913 = !DISubroutineType(types: !2914)
!2914 = !{!205, !430, !7}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2909, file: !428, line: 137, baseType: !2912, size: 64, offset: 64)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2909, file: !428, line: 138, baseType: !2917, size: 64, offset: 128)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 64)
!2918 = !DISubroutineType(types: !2919)
!2919 = !{!205, !2920, !2922}
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 64)
!2921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !431)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2909, file: !428, line: 139, baseType: !2924, size: 64, offset: 192)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{!205, !2920, !7, !285, !2927}
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !454)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2909, file: !428, line: 141, baseType: !2930, size: 64, offset: 256)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 64)
!2931 = !DISubroutineType(types: !2932)
!2932 = !{!205, !2920}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2909, file: !428, line: 142, baseType: !2934, size: 64, offset: 320)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = !DISubroutineType(types: !2936)
!2936 = !{!205, !430}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2909, file: !428, line: 143, baseType: !2938, size: 64, offset: 384)
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!2939 = !DISubroutineType(types: !2940)
!2940 = !{null, !430}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2909, file: !428, line: 144, baseType: !2938, size: 64, offset: 448)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2909, file: !428, line: 145, baseType: !2943, size: 64, offset: 512)
!2943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2944, size: 64)
!2944 = !DISubroutineType(types: !2945)
!2945 = !{null, !430, !473}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2909, file: !428, line: 146, baseType: !2947, size: 64, offset: 576)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 64)
!2948 = !DISubroutineType(types: !2949)
!2949 = !{!322, !430, !322, !205}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2909, file: !428, line: 147, baseType: !2951, size: 64, offset: 640)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 64)
!2952 = !DISubroutineType(types: !2953)
!2953 = !{!426, !2954}
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2909, file: !428, line: 148, baseType: !2956, size: 64, offset: 704)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2957, size: 64)
!2957 = !DISubroutineType(types: !2958)
!2958 = !{!205, !591, !534}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2909, file: !428, line: 149, baseType: !2960, size: 64, offset: 768)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DISubroutineType(types: !2962)
!2962 = !{!430, !430, !2963}
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !474)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !642, file: !65, line: 1500, baseType: !205, size: 32, offset: 7552)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !642, file: !65, line: 1502, baseType: !2967, size: 448, offset: 7616)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2611, line: 60, size: 448, elements: !2968)
!2968 = !{!2969, !2974, !2975, !2976, !2977, !2978, !2979}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2967, file: !2611, line: 61, baseType: !2970, size: 64)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 64)
!2971 = !DISubroutineType(types: !2972)
!2972 = !{!372, !2973, !2609}
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2967, file: !2611, line: 63, baseType: !2970, size: 64, offset: 64)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2967, file: !2611, line: 66, baseType: !357, size: 64, offset: 128)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2967, file: !2611, line: 67, baseType: !205, size: 32, offset: 192)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2967, file: !2611, line: 68, baseType: !7, size: 32, offset: 224)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2967, file: !2611, line: 71, baseType: !194, size: 128, offset: 256)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2967, file: !2611, line: 77, baseType: !2980, size: 64, offset: 384)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !642, file: !65, line: 1505, baseType: !250, size: 64, offset: 8064)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !642, file: !65, line: 1508, baseType: !250, size: 64, offset: 8128)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !642, file: !65, line: 1511, baseType: !205, size: 32, offset: 8192)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !642, file: !65, line: 1514, baseType: !947, size: 32, offset: 8224)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !642, file: !65, line: 1517, baseType: !2986, size: 64, offset: 8256)
!2986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2987, size: 64)
!2987 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !247, line: 18, flags: DIFlagFwdDecl)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !642, file: !65, line: 1518, baseType: !679, size: 64, offset: 8320)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !642, file: !65, line: 1525, baseType: !1753, size: 64, offset: 8384)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !642, file: !65, line: 1532, baseType: !2991, size: 64, offset: 8448)
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2992, line: 52, size: 64, elements: !2993)
!2992 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2993 = !{!2994}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2991, file: !2992, line: 53, baseType: !2995, size: 64)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2992, line: 40, size: 256, elements: !2997)
!2997 = !{!2998, !2999, !3004}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2996, file: !2992, line: 42, baseType: !229)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2996, file: !2992, line: 44, baseType: !3000, size: 192)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2992, line: 28, size: 192, elements: !3001)
!3001 = !{!3002, !3003}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3000, file: !2992, line: 29, baseType: !194, size: 128)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3000, file: !2992, line: 31, baseType: !357, size: 64, offset: 128)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2996, file: !2992, line: 49, baseType: !357, size: 64, offset: 192)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !642, file: !65, line: 1533, baseType: !2991, size: 64, offset: 8512)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !642, file: !65, line: 1534, baseType: !413, size: 128, align: 64, offset: 8576)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !642, file: !65, line: 1535, baseType: !246, size: 256, offset: 8704)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !642, file: !65, line: 1537, baseType: !1211, size: 192, offset: 8960)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !642, file: !65, line: 1542, baseType: !205, size: 32, offset: 9152)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !642, file: !65, line: 1545, baseType: !229, offset: 9184)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !642, file: !65, line: 1546, baseType: !194, size: 128, offset: 9216)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !642, file: !65, line: 1548, baseType: !229, offset: 9344)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !642, file: !65, line: 1549, baseType: !194, size: 128, offset: 9344)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !474, file: !65, line: 624, baseType: !778, size: 64, offset: 256)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !474, file: !65, line: 631, baseType: !372, size: 64, offset: 320)
!3016 = !DIDerivedType(tag: DW_TAG_member, scope: !474, file: !65, line: 639, baseType: !3017, size: 32, offset: 384)
!3017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !474, file: !65, line: 639, size: 32, elements: !3018)
!3018 = !{!3019, !3021}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3017, file: !65, line: 640, baseType: !3020, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3017, file: !65, line: 641, baseType: !7, size: 32)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !474, file: !65, line: 643, baseType: !557, size: 32, offset: 416)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !474, file: !65, line: 644, baseType: !575, size: 64, offset: 448)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !474, file: !65, line: 645, baseType: !578, size: 128, offset: 512)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !474, file: !65, line: 646, baseType: !578, size: 128, offset: 640)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !474, file: !65, line: 647, baseType: !578, size: 128, offset: 768)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !474, file: !65, line: 648, baseType: !229, offset: 896)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !474, file: !65, line: 649, baseType: !364, size: 16, offset: 896)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !474, file: !65, line: 650, baseType: !1389, size: 8, offset: 912)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !474, file: !65, line: 651, baseType: !1389, size: 8, offset: 920)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !474, file: !65, line: 652, baseType: !2783, size: 64, offset: 960)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !474, file: !65, line: 659, baseType: !372, size: 64, offset: 1024)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !474, file: !65, line: 660, baseType: !812, size: 256, offset: 1088)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !474, file: !65, line: 662, baseType: !372, size: 64, offset: 1344)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !474, file: !65, line: 663, baseType: !372, size: 64, offset: 1408)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !474, file: !65, line: 665, baseType: !683, size: 128, offset: 1472)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !474, file: !65, line: 666, baseType: !194, size: 128, offset: 1600)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !474, file: !65, line: 675, baseType: !194, size: 128, offset: 1728)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !474, file: !65, line: 676, baseType: !194, size: 128, offset: 1856)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !474, file: !65, line: 677, baseType: !194, size: 128, offset: 1984)
!3041 = !DIDerivedType(tag: DW_TAG_member, scope: !474, file: !65, line: 678, baseType: !3042, size: 128, offset: 2112)
!3042 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !474, file: !65, line: 678, size: 128, elements: !3043)
!3043 = !{!3044, !3045}
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3042, file: !65, line: 679, baseType: !679, size: 64)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3042, file: !65, line: 680, baseType: !413, size: 128, align: 64)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !474, file: !65, line: 682, baseType: !252, size: 64, offset: 2240)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !474, file: !65, line: 683, baseType: !252, size: 64, offset: 2304)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !474, file: !65, line: 684, baseType: !792, size: 32, offset: 2368)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !474, file: !65, line: 685, baseType: !792, size: 32, offset: 2400)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !474, file: !65, line: 686, baseType: !792, size: 32, offset: 2432)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !474, file: !65, line: 688, baseType: !792, size: 32, offset: 2464)
!3052 = !DIDerivedType(tag: DW_TAG_member, scope: !474, file: !65, line: 690, baseType: !3053, size: 64, offset: 2496)
!3053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !474, file: !65, line: 690, size: 64, elements: !3054)
!3054 = !{!3055, !3286}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3053, file: !65, line: 691, baseType: !3056, size: 64)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3058)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !65, line: 1822, size: 2048, elements: !3059)
!3059 = !{!3060, !3061, !3065, !3069, !3073, !3074, !3075, !3079, !3092, !3093, !3110, !3114, !3115, !3119, !3120, !3124, !3129, !3130, !3134, !3138, !3246, !3250, !3251, !3255, !3256, !3260, !3264, !3269, !3273, !3277, !3281, !3285}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3058, file: !65, line: 1823, baseType: !674, size: 64)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3058, file: !65, line: 1824, baseType: !3062, size: 64, offset: 64)
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 64)
!3063 = !DISubroutineType(types: !3064)
!3064 = !{!575, !400, !575, !205}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3058, file: !65, line: 1825, baseType: !3066, size: 64, offset: 128)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{!353, !400, !322, !369, !1837}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3058, file: !65, line: 1826, baseType: !3070, size: 64, offset: 192)
!3070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3071, size: 64)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{!353, !400, !285, !369, !1837}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3058, file: !65, line: 1827, baseType: !882, size: 64, offset: 256)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3058, file: !65, line: 1828, baseType: !882, size: 64, offset: 320)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3058, file: !65, line: 1829, baseType: !3076, size: 64, offset: 384)
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 64)
!3077 = !DISubroutineType(types: !3078)
!3078 = !{!205, !885, !534}
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3058, file: !65, line: 1830, baseType: !3080, size: 64, offset: 448)
!3080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3081, size: 64)
!3081 = !DISubroutineType(types: !3082)
!3082 = !{!205, !400, !3083}
!3083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3084, size: 64)
!3084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !65, line: 1776, size: 128, elements: !3085)
!3085 = !{!3086, !3091}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3084, file: !65, line: 1777, baseType: !3087, size: 64)
!3087 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !65, line: 1773, baseType: !3088)
!3088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 64)
!3089 = !DISubroutineType(types: !3090)
!3090 = !{!205, !3083, !285, !205, !575, !465, !7}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3084, file: !65, line: 1778, baseType: !575, size: 64, offset: 64)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3058, file: !65, line: 1831, baseType: !3080, size: 64, offset: 512)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3058, file: !65, line: 1832, baseType: !3094, size: 64, offset: 576)
!3094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3095, size: 64)
!3095 = !DISubroutineType(types: !3096)
!3096 = !{!3097, !400, !3099}
!3097 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3098, line: 52, baseType: !7)
!3098 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !3101, line: 43, size: 128, elements: !3102)
!3101 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!3102 = !{!3103, !3109}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !3100, file: !3101, line: 44, baseType: !3104, size: 64)
!3104 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !3101, line: 37, baseType: !3105)
!3105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 64)
!3106 = !DISubroutineType(types: !3107)
!3107 = !{null, !400, !3108, !3099}
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !3100, file: !3101, line: 45, baseType: !3097, size: 32, offset: 64)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3058, file: !65, line: 1833, baseType: !3111, size: 64, offset: 640)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = !DISubroutineType(types: !3113)
!3113 = !{!357, !400, !7, !372}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3058, file: !65, line: 1834, baseType: !3111, size: 64, offset: 704)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3058, file: !65, line: 1835, baseType: !3116, size: 64, offset: 768)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 64)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!205, !400, !1019}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3058, file: !65, line: 1836, baseType: !372, size: 64, offset: 832)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3058, file: !65, line: 1837, baseType: !3121, size: 64, offset: 896)
!3121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3122, size: 64)
!3122 = !DISubroutineType(types: !3123)
!3123 = !{!205, !473, !400}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3058, file: !65, line: 1838, baseType: !3125, size: 64, offset: 960)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 64)
!3126 = !DISubroutineType(types: !3127)
!3127 = !{!205, !400, !3128}
!3128 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !65, line: 1007, baseType: !189)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3058, file: !65, line: 1839, baseType: !3121, size: 64, offset: 1024)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3058, file: !65, line: 1840, baseType: !3131, size: 64, offset: 1088)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = !DISubroutineType(types: !3133)
!3133 = !{!205, !400, !575, !575, !205}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3058, file: !65, line: 1841, baseType: !3135, size: 64, offset: 1152)
!3135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3136, size: 64)
!3136 = !DISubroutineType(types: !3137)
!3137 = !{!205, !205, !400, !205}
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3058, file: !65, line: 1842, baseType: !3139, size: 64, offset: 1216)
!3139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3140, size: 64)
!3140 = !DISubroutineType(types: !3141)
!3141 = !{!205, !400, !205, !3142}
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3143, size: 64)
!3143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !65, line: 1062, size: 1664, elements: !3144)
!3144 = !{!3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3176, !3177, !3178, !3191, !3222}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3143, file: !65, line: 1063, baseType: !3142, size: 64)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3143, file: !65, line: 1064, baseType: !194, size: 128, offset: 64)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3143, file: !65, line: 1065, baseType: !683, size: 128, offset: 192)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3143, file: !65, line: 1066, baseType: !194, size: 128, offset: 320)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3143, file: !65, line: 1069, baseType: !194, size: 128, offset: 448)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3143, file: !65, line: 1072, baseType: !3128, size: 64, offset: 576)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3143, file: !65, line: 1073, baseType: !7, size: 32, offset: 640)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3143, file: !65, line: 1074, baseType: !471, size: 8, offset: 672)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3143, file: !65, line: 1075, baseType: !7, size: 32, offset: 704)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3143, file: !65, line: 1076, baseType: !205, size: 32, offset: 736)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3143, file: !65, line: 1077, baseType: !1523, size: 128, offset: 768)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3143, file: !65, line: 1078, baseType: !400, size: 64, offset: 896)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3143, file: !65, line: 1079, baseType: !575, size: 64, offset: 960)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3143, file: !65, line: 1080, baseType: !575, size: 64, offset: 1024)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3143, file: !65, line: 1082, baseType: !3160, size: 64, offset: 1088)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !65, line: 1314, size: 320, elements: !3162)
!3162 = !{!3163, !3171, !3172, !3173, !3174, !3175}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3161, file: !65, line: 1315, baseType: !3164)
!3164 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3165, line: 20, baseType: !3166)
!3165 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3166 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3165, line: 11, elements: !3167)
!3167 = !{!3168}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3166, file: !3165, line: 12, baseType: !3169)
!3169 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !241, line: 33, baseType: !3170)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !241, line: 31, elements: !243)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3161, file: !65, line: 1316, baseType: !205, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3161, file: !65, line: 1317, baseType: !205, size: 32, offset: 32)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3161, file: !65, line: 1318, baseType: !3160, size: 64, offset: 64)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3161, file: !65, line: 1319, baseType: !400, size: 64, offset: 128)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3161, file: !65, line: 1320, baseType: !413, size: 128, align: 64, offset: 192)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3143, file: !65, line: 1084, baseType: !372, size: 64, offset: 1152)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3143, file: !65, line: 1085, baseType: !372, size: 64, offset: 1216)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3143, file: !65, line: 1087, baseType: !3179, size: 64, offset: 1280)
!3179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3180, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3181)
!3181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !65, line: 1011, size: 128, elements: !3182)
!3182 = !{!3183, !3187}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3181, file: !65, line: 1012, baseType: !3184, size: 64)
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{null, !3142, !3142}
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3181, file: !65, line: 1013, baseType: !3188, size: 64, offset: 64)
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 64)
!3189 = !DISubroutineType(types: !3190)
!3190 = !{null, !3142}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3143, file: !65, line: 1088, baseType: !3192, size: 64, offset: 1344)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3194)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !65, line: 1016, size: 512, elements: !3195)
!3195 = !{!3196, !3200, !3204, !3205, !3209, !3213, !3217, !3221}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3194, file: !65, line: 1017, baseType: !3197, size: 64)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 64)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{!3128, !3128}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3194, file: !65, line: 1018, baseType: !3201, size: 64, offset: 64)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = !DISubroutineType(types: !3203)
!3203 = !{null, !3128}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3194, file: !65, line: 1019, baseType: !3188, size: 64, offset: 128)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3194, file: !65, line: 1020, baseType: !3206, size: 64, offset: 192)
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 64)
!3207 = !DISubroutineType(types: !3208)
!3208 = !{!205, !3142, !205}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3194, file: !65, line: 1021, baseType: !3210, size: 64, offset: 256)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{!534, !3142}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3194, file: !65, line: 1022, baseType: !3214, size: 64, offset: 320)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3215, size: 64)
!3215 = !DISubroutineType(types: !3216)
!3216 = !{!205, !3142, !205, !198}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3194, file: !65, line: 1023, baseType: !3218, size: 64, offset: 384)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 64)
!3219 = !DISubroutineType(types: !3220)
!3220 = !{null, !3142, !859}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3194, file: !65, line: 1024, baseType: !3210, size: 64, offset: 448)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3143, file: !65, line: 1097, baseType: !3223, size: 256, offset: 1408)
!3223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3143, file: !65, line: 1089, size: 256, elements: !3224)
!3224 = !{!3225, !3234, !3240}
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3223, file: !65, line: 1090, baseType: !3226, size: 256)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3227, line: 10, size: 256, elements: !3228)
!3227 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3228 = !{!3229, !3230, !3233}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3226, file: !3227, line: 11, baseType: !212, size: 32)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3226, file: !3227, line: 12, baseType: !3231, size: 64, offset: 64)
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!3232 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3227, line: 5, flags: DIFlagFwdDecl)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3226, file: !3227, line: 13, baseType: !194, size: 128, offset: 128)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3223, file: !65, line: 1091, baseType: !3235, size: 64)
!3235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3227, line: 17, size: 64, elements: !3236)
!3236 = !{!3237}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3235, file: !3227, line: 18, baseType: !3238, size: 64)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3239 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3227, line: 16, flags: DIFlagFwdDecl)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3223, file: !65, line: 1096, baseType: !3241, size: 192)
!3241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3223, file: !65, line: 1092, size: 192, elements: !3242)
!3242 = !{!3243, !3244, !3245}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3241, file: !65, line: 1093, baseType: !194, size: 128)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3241, file: !65, line: 1094, baseType: !205, size: 32, offset: 128)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3241, file: !65, line: 1095, baseType: !7, size: 32, offset: 160)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3058, file: !65, line: 1843, baseType: !3247, size: 64, offset: 1280)
!3247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 64)
!3248 = !DISubroutineType(types: !3249)
!3249 = !{!353, !400, !765, !205, !369, !1837, !205}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3058, file: !65, line: 1844, baseType: !1139, size: 64, offset: 1344)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3058, file: !65, line: 1845, baseType: !3252, size: 64, offset: 1408)
!3252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!3253 = !DISubroutineType(types: !3254)
!3254 = !{!205, !205}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3058, file: !65, line: 1846, baseType: !3139, size: 64, offset: 1472)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3058, file: !65, line: 1847, baseType: !3257, size: 64, offset: 1536)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = !DISubroutineType(types: !3259)
!3259 = !{!353, !2291, !400, !1837, !369, !7}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3058, file: !65, line: 1848, baseType: !3261, size: 64, offset: 1600)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{!353, !400, !1837, !2291, !369, !7}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3058, file: !65, line: 1849, baseType: !3265, size: 64, offset: 1664)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{!205, !400, !357, !3268, !859}
!3268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3058, file: !65, line: 1850, baseType: !3270, size: 64, offset: 1728)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{!357, !400, !205, !575, !575}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3058, file: !65, line: 1852, baseType: !3274, size: 64, offset: 1792)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = !DISubroutineType(types: !3276)
!3276 = !{null, !755, !400}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3058, file: !65, line: 1856, baseType: !3278, size: 64, offset: 1856)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3279, size: 64)
!3279 = !DISubroutineType(types: !3280)
!3280 = !{!353, !400, !575, !400, !575, !369, !7}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3058, file: !65, line: 1858, baseType: !3282, size: 64, offset: 1920)
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 64)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{!575, !400, !575, !400, !575, !575, !7}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3058, file: !65, line: 1861, baseType: !3131, size: 64, offset: 1984)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3053, file: !65, line: 692, baseType: !708, size: 64)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !474, file: !65, line: 694, baseType: !3288, size: 64, offset: 2560)
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !65, line: 1100, size: 384, elements: !3290)
!3290 = !{!3291, !3292, !3293, !3294}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3289, file: !65, line: 1101, baseType: !229)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3289, file: !65, line: 1102, baseType: !194, size: 128)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3289, file: !65, line: 1103, baseType: !194, size: 128, offset: 128)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3289, file: !65, line: 1104, baseType: !194, size: 128, offset: 256)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !474, file: !65, line: 695, baseType: !779, size: 1216, align: 64, offset: 2624)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !474, file: !65, line: 696, baseType: !194, size: 128, offset: 3840)
!3297 = !DIDerivedType(tag: DW_TAG_member, scope: !474, file: !65, line: 697, baseType: !3298, size: 64, offset: 3968)
!3298 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !474, file: !65, line: 697, size: 64, elements: !3299)
!3299 = !{!3300, !3301, !3302, !3313, !3314}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3298, file: !65, line: 698, baseType: !2291, size: 64)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3298, file: !65, line: 699, baseType: !2808, size: 64)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3298, file: !65, line: 700, baseType: !3303, size: 64)
!3303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3304, size: 64)
!3304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3305, line: 14, size: 832, elements: !3306)
!3305 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3306 = !{!3307, !3308, !3309, !3310, !3311, !3312}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3304, file: !3305, line: 15, baseType: !281, size: 512)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3304, file: !3305, line: 16, baseType: !674, size: 64, offset: 512)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3304, file: !3305, line: 17, baseType: !3056, size: 64, offset: 576)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3304, file: !3305, line: 18, baseType: !194, size: 128, offset: 640)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3304, file: !3305, line: 19, baseType: !557, size: 32, offset: 768)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3304, file: !3305, line: 20, baseType: !7, size: 32, offset: 800)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3298, file: !65, line: 701, baseType: !322, size: 64)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3298, file: !65, line: 702, baseType: !7, size: 32)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !474, file: !65, line: 705, baseType: !214, size: 32, offset: 4032)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !474, file: !65, line: 708, baseType: !214, size: 32, offset: 4064)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !474, file: !65, line: 709, baseType: !2890, size: 64, offset: 4096)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !474, file: !65, line: 720, baseType: !189, size: 64, offset: 4160)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !431, file: !428, line: 98, baseType: !3320, size: 256, offset: 448)
!3320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 256, elements: !2423)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !431, file: !428, line: 101, baseType: !3322, size: 32, offset: 704)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3323, line: 25, size: 32, elements: !3324)
!3323 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3324 = !{!3325}
!3325 = !DIDerivedType(tag: DW_TAG_member, scope: !3322, file: !3323, line: 26, baseType: !3326, size: 32)
!3326 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3322, file: !3323, line: 26, size: 32, elements: !3327)
!3327 = !{!3328}
!3328 = !DIDerivedType(tag: DW_TAG_member, scope: !3326, file: !3323, line: 30, baseType: !3329, size: 32)
!3329 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3326, file: !3323, line: 30, size: 32, elements: !3330)
!3330 = !{!3331, !3332}
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3329, file: !3323, line: 31, baseType: !229)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3329, file: !3323, line: 32, baseType: !205, size: 32)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !431, file: !428, line: 102, baseType: !2907, size: 64, offset: 768)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !431, file: !428, line: 103, baseType: !641, size: 64, offset: 832)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !431, file: !428, line: 104, baseType: !372, size: 64, offset: 896)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !431, file: !428, line: 105, baseType: !189, size: 64, offset: 960)
!3337 = !DIDerivedType(tag: DW_TAG_member, scope: !431, file: !428, line: 107, baseType: !3338, size: 128, offset: 1024)
!3338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !431, file: !428, line: 107, size: 128, elements: !3339)
!3339 = !{!3340, !3341}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3338, file: !428, line: 108, baseType: !194, size: 128)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3338, file: !428, line: 109, baseType: !3108, size: 64)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !431, file: !428, line: 111, baseType: !194, size: 128, offset: 1152)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !431, file: !428, line: 112, baseType: !194, size: 128, offset: 1280)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !431, file: !428, line: 120, baseType: !3345, size: 128, offset: 1408)
!3345 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !431, file: !428, line: 116, size: 128, elements: !3346)
!3346 = !{!3347, !3348, !3349}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3345, file: !428, line: 117, baseType: !683, size: 128)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3345, file: !428, line: 118, baseType: !445, size: 128)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3345, file: !428, line: 119, baseType: !413, size: 128, align: 64)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !401, file: !65, line: 922, baseType: !473, size: 64, offset: 256)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !401, file: !65, line: 923, baseType: !3056, size: 64, offset: 320)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !401, file: !65, line: 929, baseType: !229, offset: 384)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !401, file: !65, line: 930, baseType: !64, size: 32, offset: 384)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !401, file: !65, line: 931, baseType: !250, size: 64, offset: 448)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !401, file: !65, line: 932, baseType: !7, size: 32, offset: 512)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !401, file: !65, line: 933, baseType: !2903, size: 32, offset: 544)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !401, file: !65, line: 934, baseType: !1211, size: 192, offset: 576)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !401, file: !65, line: 935, baseType: !575, size: 64, offset: 768)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !401, file: !65, line: 936, baseType: !3360, size: 192, offset: 832)
!3360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !65, line: 885, size: 192, elements: !3361)
!3361 = !{!3362, !3363, !3364, !3365, !3366, !3367}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3360, file: !65, line: 886, baseType: !3164)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3360, file: !65, line: 887, baseType: !1513, size: 64)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3360, file: !65, line: 888, baseType: !73, size: 32, offset: 64)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3360, file: !65, line: 889, baseType: !479, size: 32, offset: 96)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3360, file: !65, line: 889, baseType: !479, size: 32, offset: 128)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3360, file: !65, line: 890, baseType: !205, size: 32, offset: 160)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !401, file: !65, line: 937, baseType: !1589, size: 64, offset: 1024)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !401, file: !65, line: 938, baseType: !3370, size: 256, offset: 1088)
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !65, line: 896, size: 256, elements: !3371)
!3371 = !{!3372, !3373, !3374, !3375, !3376, !3377}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3370, file: !65, line: 897, baseType: !372, size: 64)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3370, file: !65, line: 898, baseType: !7, size: 32, offset: 64)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3370, file: !65, line: 899, baseType: !7, size: 32, offset: 96)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3370, file: !65, line: 902, baseType: !7, size: 32, offset: 128)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3370, file: !65, line: 903, baseType: !7, size: 32, offset: 160)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3370, file: !65, line: 904, baseType: !575, size: 64, offset: 192)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !401, file: !65, line: 940, baseType: !465, size: 64, offset: 1344)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !401, file: !65, line: 945, baseType: !189, size: 64, offset: 1408)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !401, file: !65, line: 949, baseType: !194, size: 128, offset: 1472)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !401, file: !65, line: 950, baseType: !194, size: 128, offset: 1600)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !401, file: !65, line: 952, baseType: !778, size: 64, offset: 1728)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !401, file: !65, line: 953, baseType: !947, size: 32, offset: 1792)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !401, file: !65, line: 954, baseType: !947, size: 32, offset: 1824)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !391, file: !347, line: 174, baseType: !397, size: 64, offset: 320)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !391, file: !347, line: 176, baseType: !3387, size: 64, offset: 384)
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 64)
!3388 = !DISubroutineType(types: !3389)
!3389 = !{!205, !400, !289, !390, !1019}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !379, file: !347, line: 90, baseType: !374, size: 64, offset: 192)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !379, file: !347, line: 91, baseType: !3392, size: 64, offset: 256)
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !337, file: !282, line: 143, baseType: !3394, size: 64, offset: 256)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{!3397, !289}
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3399)
!3399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !82, line: 39, size: 384, elements: !3400)
!3400 = !{!3401, !3402, !3406, !3410, !3416, !3420}
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3399, file: !82, line: 40, baseType: !81, size: 32)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3399, file: !82, line: 41, baseType: !3403, size: 64, offset: 64)
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3404, size: 64)
!3404 = !DISubroutineType(types: !3405)
!3405 = !{!534}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3399, file: !82, line: 42, baseType: !3407, size: 64, offset: 128)
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!189}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3399, file: !82, line: 43, baseType: !3411, size: 64, offset: 192)
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 64)
!3412 = !DISubroutineType(types: !3413)
!3413 = !{!2320, !3414}
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !82, line: 19, flags: DIFlagFwdDecl)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3399, file: !82, line: 44, baseType: !3417, size: 64, offset: 256)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!2320}
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3399, file: !82, line: 45, baseType: !512, size: 64, offset: 320)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !337, file: !282, line: 144, baseType: !3422, size: 64, offset: 320)
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3423, size: 64)
!3423 = !DISubroutineType(types: !3424)
!3424 = !{!2320, !289}
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !337, file: !282, line: 145, baseType: !3426, size: 64, offset: 384)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{null, !289, !1866, !1867}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !281, file: !282, line: 70, baseType: !3430, size: 64, offset: 384)
!3430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 64)
!3431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !3432, line: 123, size: 1024, elements: !3433)
!3432 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!3433 = !{!3434, !3435, !3436, !3437, !3438, !3439, !3440, !3441, !3562, !3563, !3564, !3565, !3566}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3431, file: !3432, line: 124, baseType: !792, size: 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3431, file: !3432, line: 125, baseType: !792, size: 32, offset: 32)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3431, file: !3432, line: 135, baseType: !3430, size: 64, offset: 64)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3431, file: !3432, line: 136, baseType: !285, size: 64, offset: 128)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3431, file: !3432, line: 138, baseType: !805, size: 192, align: 64, offset: 192)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3431, file: !3432, line: 140, baseType: !2320, size: 64, offset: 384)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3431, file: !3432, line: 141, baseType: !7, size: 32, offset: 448)
!3441 = !DIDerivedType(tag: DW_TAG_member, scope: !3431, file: !3432, line: 142, baseType: !3442, size: 256, offset: 512)
!3442 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3431, file: !3432, line: 142, size: 256, elements: !3443)
!3443 = !{!3444, !3490, !3494}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3442, file: !3432, line: 143, baseType: !3445, size: 192)
!3445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !3432, line: 91, size: 192, elements: !3446)
!3446 = !{!3447, !3448, !3449}
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3445, file: !3432, line: 92, baseType: !372, size: 64)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3445, file: !3432, line: 94, baseType: !801, size: 64, offset: 64)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3445, file: !3432, line: 100, baseType: !3450, size: 64, offset: 128)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !3432, line: 180, size: 704, elements: !3452)
!3452 = !{!3453, !3454, !3455, !3462, !3463, !3464, !3488, !3489}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3451, file: !3432, line: 182, baseType: !3430, size: 64)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3451, file: !3432, line: 183, baseType: !7, size: 32, offset: 64)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3451, file: !3432, line: 186, baseType: !3456, size: 192, offset: 128)
!3456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3457, line: 19, size: 192, elements: !3458)
!3457 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3458 = !{!3459, !3460, !3461}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3456, file: !3457, line: 20, baseType: !783, size: 128)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3456, file: !3457, line: 21, baseType: !7, size: 32, offset: 128)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3456, file: !3457, line: 22, baseType: !7, size: 32, offset: 160)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3451, file: !3432, line: 187, baseType: !212, size: 32, offset: 320)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3451, file: !3432, line: 188, baseType: !212, size: 32, offset: 352)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3451, file: !3432, line: 189, baseType: !3465, size: 64, offset: 384)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 64)
!3466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !3432, line: 168, size: 320, elements: !3467)
!3467 = !{!3468, !3472, !3476, !3480, !3484}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3466, file: !3432, line: 169, baseType: !3469, size: 64)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = !DISubroutineType(types: !3471)
!3471 = !{!205, !755, !3450}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3466, file: !3432, line: 171, baseType: !3473, size: 64, offset: 64)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 64)
!3474 = !DISubroutineType(types: !3475)
!3475 = !{!205, !3430, !285, !363}
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3466, file: !3432, line: 173, baseType: !3477, size: 64, offset: 128)
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{!205, !3430}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3466, file: !3432, line: 174, baseType: !3481, size: 64, offset: 192)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = !DISubroutineType(types: !3483)
!3483 = !{!205, !3430, !3430, !285}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3466, file: !3432, line: 176, baseType: !3485, size: 64, offset: 256)
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3486, size: 64)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!205, !755, !3430, !3450}
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3451, file: !3432, line: 192, baseType: !194, size: 128, offset: 448)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3451, file: !3432, line: 194, baseType: !1523, size: 128, offset: 576)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3442, file: !3432, line: 144, baseType: !3491, size: 64)
!3491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !3432, line: 103, size: 64, elements: !3492)
!3492 = !{!3493}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3491, file: !3432, line: 104, baseType: !3430, size: 64)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3442, file: !3432, line: 145, baseType: !3495, size: 256)
!3495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !3432, line: 107, size: 256, elements: !3496)
!3496 = !{!3497, !3557, !3560, !3561}
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3495, file: !3432, line: 108, baseType: !3498, size: 64)
!3498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3499, size: 64)
!3499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3500)
!3500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !3432, line: 217, size: 768, elements: !3501)
!3501 = !{!3502, !3522, !3526, !3530, !3534, !3538, !3542, !3546, !3547, !3548, !3549, !3553}
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3500, file: !3432, line: 222, baseType: !3503, size: 64)
!3503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!205, !3506}
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !3432, line: 197, size: 1088, elements: !3508)
!3508 = !{!3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3507, file: !3432, line: 199, baseType: !3430, size: 64)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3507, file: !3432, line: 200, baseType: !400, size: 64, offset: 64)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3507, file: !3432, line: 201, baseType: !755, size: 64, offset: 128)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3507, file: !3432, line: 202, baseType: !189, size: 64, offset: 192)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3507, file: !3432, line: 205, baseType: !1211, size: 192, offset: 256)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3507, file: !3432, line: 206, baseType: !1211, size: 192, offset: 448)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3507, file: !3432, line: 207, baseType: !205, size: 32, offset: 640)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3507, file: !3432, line: 208, baseType: !194, size: 128, offset: 704)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3507, file: !3432, line: 209, baseType: !322, size: 64, offset: 832)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3507, file: !3432, line: 211, baseType: !369, size: 64, offset: 896)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3507, file: !3432, line: 212, baseType: !534, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3507, file: !3432, line: 213, baseType: !534, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3507, file: !3432, line: 214, baseType: !1047, size: 64, offset: 1024)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3500, file: !3432, line: 223, baseType: !3523, size: 64, offset: 64)
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 64)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{null, !3506}
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3500, file: !3432, line: 236, baseType: !3527, size: 64, offset: 128)
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = !DISubroutineType(types: !3529)
!3529 = !{!205, !755, !189}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3500, file: !3432, line: 238, baseType: !3531, size: 64, offset: 192)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = !DISubroutineType(types: !3533)
!3533 = !{!189, !755, !1837}
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3500, file: !3432, line: 239, baseType: !3535, size: 64, offset: 256)
!3535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3536, size: 64)
!3536 = !DISubroutineType(types: !3537)
!3537 = !{!189, !755, !189, !1837}
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3500, file: !3432, line: 240, baseType: !3539, size: 64, offset: 320)
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 64)
!3540 = !DISubroutineType(types: !3541)
!3541 = !{null, !755, !189}
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3500, file: !3432, line: 242, baseType: !3543, size: 64, offset: 384)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 64)
!3544 = !DISubroutineType(types: !3545)
!3545 = !{!353, !3506, !322, !369, !575}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3500, file: !3432, line: 252, baseType: !369, size: 64, offset: 448)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3500, file: !3432, line: 259, baseType: !534, size: 8, offset: 512)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3500, file: !3432, line: 260, baseType: !3543, size: 64, offset: 576)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3500, file: !3432, line: 263, baseType: !3550, size: 64, offset: 640)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{!3097, !3506, !3099}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3500, file: !3432, line: 266, baseType: !3554, size: 64, offset: 704)
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3555, size: 64)
!3555 = !DISubroutineType(types: !3556)
!3556 = !{!205, !3506, !1019}
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3495, file: !3432, line: 109, baseType: !3558, size: 64, offset: 64)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !3432, line: 31, flags: DIFlagFwdDecl)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3495, file: !3432, line: 110, baseType: !575, size: 64, offset: 128)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3495, file: !3432, line: 111, baseType: !3430, size: 64, offset: 192)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3431, file: !3432, line: 148, baseType: !189, size: 64, offset: 768)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3431, file: !3432, line: 154, baseType: !465, size: 64, offset: 832)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3431, file: !3432, line: 156, baseType: !364, size: 16, offset: 896)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3431, file: !3432, line: 157, baseType: !363, size: 16, offset: 912)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3431, file: !3432, line: 158, baseType: !3567, size: 64, offset: 960)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !3432, line: 32, flags: DIFlagFwdDecl)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !281, file: !282, line: 71, baseType: !3570, size: 32, offset: 448)
!3570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3571, line: 19, size: 32, elements: !3572)
!3571 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3572 = !{!3573}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3570, file: !3571, line: 20, baseType: !1268, size: 32)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !281, file: !282, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !281, file: !282, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !281, file: !282, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !281, file: !282, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !281, file: !282, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !278, file: !94, line: 463, baseType: !277, size: 64, offset: 512)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !278, file: !94, line: 465, baseType: !3581, size: 64, offset: 576)
!3581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3582, size: 64)
!3582 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !94, line: 36, flags: DIFlagFwdDecl)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !278, file: !94, line: 467, baseType: !285, size: 64, offset: 640)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !278, file: !94, line: 468, baseType: !3585, size: 64, offset: 704)
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 64)
!3586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3587)
!3587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !94, line: 87, size: 384, elements: !3588)
!3588 = !{!3589, !3590, !3591, !3595, !3600, !3604}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3587, file: !94, line: 88, baseType: !285, size: 64)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3587, file: !94, line: 89, baseType: !376, size: 64, offset: 64)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3587, file: !94, line: 90, baseType: !3592, size: 64, offset: 128)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = !DISubroutineType(types: !3594)
!3594 = !{!205, !277, !317}
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3587, file: !94, line: 91, baseType: !3596, size: 64, offset: 192)
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3597, size: 64)
!3597 = !DISubroutineType(types: !3598)
!3598 = !{!322, !277, !3599, !1866, !1867}
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3587, file: !94, line: 93, baseType: !3601, size: 64, offset: 256)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = !DISubroutineType(types: !3603)
!3603 = !{null, !277}
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3587, file: !94, line: 95, baseType: !3605, size: 64, offset: 320)
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3607)
!3607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !101, line: 278, size: 1472, elements: !3608)
!3608 = !{!3609, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3632, !3633, !3634}
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3607, file: !101, line: 279, baseType: !3610, size: 64)
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = !DISubroutineType(types: !3612)
!3612 = !{!205, !277}
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3607, file: !101, line: 280, baseType: !3601, size: 64, offset: 64)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3607, file: !101, line: 281, baseType: !3610, size: 64, offset: 128)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3607, file: !101, line: 282, baseType: !3610, size: 64, offset: 192)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3607, file: !101, line: 283, baseType: !3610, size: 64, offset: 256)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3607, file: !101, line: 284, baseType: !3610, size: 64, offset: 320)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3607, file: !101, line: 285, baseType: !3610, size: 64, offset: 384)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3607, file: !101, line: 286, baseType: !3610, size: 64, offset: 448)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3607, file: !101, line: 287, baseType: !3610, size: 64, offset: 512)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3607, file: !101, line: 288, baseType: !3610, size: 64, offset: 576)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3607, file: !101, line: 289, baseType: !3610, size: 64, offset: 640)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3607, file: !101, line: 290, baseType: !3610, size: 64, offset: 704)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3607, file: !101, line: 291, baseType: !3610, size: 64, offset: 768)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3607, file: !101, line: 292, baseType: !3610, size: 64, offset: 832)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3607, file: !101, line: 293, baseType: !3610, size: 64, offset: 896)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3607, file: !101, line: 294, baseType: !3610, size: 64, offset: 960)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3607, file: !101, line: 295, baseType: !3610, size: 64, offset: 1024)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3607, file: !101, line: 296, baseType: !3610, size: 64, offset: 1088)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3607, file: !101, line: 297, baseType: !3610, size: 64, offset: 1152)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3607, file: !101, line: 298, baseType: !3610, size: 64, offset: 1216)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3607, file: !101, line: 299, baseType: !3610, size: 64, offset: 1280)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3607, file: !101, line: 300, baseType: !3610, size: 64, offset: 1344)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3607, file: !101, line: 301, baseType: !3610, size: 64, offset: 1408)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !278, file: !94, line: 470, baseType: !3636, size: 64, offset: 768)
!3636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3637, size: 64)
!3637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3638, line: 82, size: 1408, elements: !3639)
!3638 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3639 = !{!3640, !3641, !3642, !3643, !3644, !3645, !3646, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3721, !3724, !3725}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3637, file: !3638, line: 83, baseType: !285, size: 64)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3637, file: !3638, line: 84, baseType: !285, size: 64, offset: 64)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3637, file: !3638, line: 85, baseType: !277, size: 64, offset: 128)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3637, file: !3638, line: 86, baseType: !376, size: 64, offset: 192)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3637, file: !3638, line: 87, baseType: !376, size: 64, offset: 256)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3637, file: !3638, line: 88, baseType: !376, size: 64, offset: 320)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3637, file: !3638, line: 90, baseType: !3647, size: 64, offset: 384)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{!205, !277, !3650}
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !88, line: 95, size: 1152, elements: !3652)
!3652 = !{!3653, !3654, !3655, !3656, !3657, !3658, !3659, !3672, !3685, !3686, !3687, !3688, !3689, !3697, !3698, !3699, !3700, !3701, !3702}
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3651, file: !88, line: 96, baseType: !285, size: 64)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3651, file: !88, line: 97, baseType: !3636, size: 64, offset: 64)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3651, file: !88, line: 99, baseType: !674, size: 64, offset: 128)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3651, file: !88, line: 100, baseType: !285, size: 64, offset: 192)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3651, file: !88, line: 102, baseType: !534, size: 8, offset: 256)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3651, file: !88, line: 103, baseType: !87, size: 32, offset: 288)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3651, file: !88, line: 105, baseType: !3660, size: 64, offset: 320)
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3661, size: 64)
!3661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3662)
!3662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3663, line: 262, size: 1600, elements: !3664)
!3663 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3664 = !{!3665, !3666, !3667, !3671}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3662, file: !3663, line: 263, baseType: !2893, size: 256)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3662, file: !3663, line: 264, baseType: !2893, size: 256, offset: 256)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3662, file: !3663, line: 265, baseType: !3668, size: 1024, offset: 512)
!3668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 1024, elements: !3669)
!3669 = !{!3670}
!3670 = !DISubrange(count: 128)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3662, file: !3663, line: 266, baseType: !2320, size: 64, offset: 1536)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3651, file: !88, line: 106, baseType: !3673, size: 64, offset: 384)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3674, size: 64)
!3674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3675)
!3675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3663, line: 210, size: 256, elements: !3676)
!3676 = !{!3677, !3681, !3683, !3684}
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3675, file: !3663, line: 211, baseType: !3678, size: 72)
!3678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, size: 72, elements: !3679)
!3679 = !{!3680}
!3680 = !DISubrange(count: 9)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3675, file: !3663, line: 212, baseType: !3682, size: 64, offset: 128)
!3682 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3663, line: 14, baseType: !372)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3675, file: !3663, line: 213, baseType: !214, size: 32, offset: 192)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3675, file: !3663, line: 214, baseType: !214, size: 32, offset: 224)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3651, file: !88, line: 108, baseType: !3610, size: 64, offset: 448)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3651, file: !88, line: 109, baseType: !3601, size: 64, offset: 512)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3651, file: !88, line: 110, baseType: !3610, size: 64, offset: 576)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3651, file: !88, line: 111, baseType: !3601, size: 64, offset: 640)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3651, file: !88, line: 112, baseType: !3690, size: 64, offset: 704)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DISubroutineType(types: !3692)
!3692 = !{!205, !277, !3693}
!3693 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !101, line: 52, baseType: !3694)
!3694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !101, line: 50, size: 32, elements: !3695)
!3695 = !{!3696}
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3694, file: !101, line: 51, baseType: !205, size: 32)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3651, file: !88, line: 113, baseType: !3610, size: 64, offset: 768)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3651, file: !88, line: 114, baseType: !376, size: 64, offset: 832)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3651, file: !88, line: 115, baseType: !376, size: 64, offset: 896)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3651, file: !88, line: 117, baseType: !3605, size: 64, offset: 960)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3651, file: !88, line: 118, baseType: !3601, size: 64, offset: 1024)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3651, file: !88, line: 120, baseType: !3703, size: 64, offset: 1088)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !88, line: 120, flags: DIFlagFwdDecl)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3637, file: !3638, line: 91, baseType: !3592, size: 64, offset: 448)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3637, file: !3638, line: 92, baseType: !3610, size: 64, offset: 512)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3637, file: !3638, line: 93, baseType: !3601, size: 64, offset: 576)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3637, file: !3638, line: 94, baseType: !3610, size: 64, offset: 640)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3637, file: !3638, line: 95, baseType: !3601, size: 64, offset: 704)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3637, file: !3638, line: 97, baseType: !3610, size: 64, offset: 768)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3637, file: !3638, line: 98, baseType: !3610, size: 64, offset: 832)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3637, file: !3638, line: 100, baseType: !3690, size: 64, offset: 896)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3637, file: !3638, line: 101, baseType: !3610, size: 64, offset: 960)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3637, file: !3638, line: 103, baseType: !3610, size: 64, offset: 1024)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3637, file: !3638, line: 105, baseType: !3610, size: 64, offset: 1088)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3637, file: !3638, line: 107, baseType: !3605, size: 64, offset: 1152)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3637, file: !3638, line: 109, baseType: !3718, size: 64, offset: 1216)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3719, size: 64)
!3719 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3720)
!3720 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3638, line: 109, flags: DIFlagFwdDecl)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3637, file: !3638, line: 111, baseType: !3722, size: 64, offset: 1280)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3638, line: 111, flags: DIFlagFwdDecl)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3637, file: !3638, line: 112, baseType: !689, offset: 1344)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3637, file: !3638, line: 114, baseType: !534, size: 8, offset: 1344)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !278, file: !94, line: 471, baseType: !3650, size: 64, offset: 832)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !278, file: !94, line: 473, baseType: !189, size: 64, offset: 896)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !278, file: !94, line: 475, baseType: !189, size: 64, offset: 960)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !278, file: !94, line: 480, baseType: !1211, size: 192, offset: 1024)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !278, file: !94, line: 484, baseType: !3731, size: 576, offset: 1216)
!3731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !94, line: 361, size: 576, elements: !3732)
!3732 = !{!3733, !3734, !3735, !3736, !3737, !3738}
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3731, file: !94, line: 362, baseType: !194, size: 128)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3731, file: !94, line: 363, baseType: !194, size: 128, offset: 128)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3731, file: !94, line: 364, baseType: !194, size: 128, offset: 256)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3731, file: !94, line: 365, baseType: !194, size: 128, offset: 384)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3731, file: !94, line: 366, baseType: !534, size: 8, offset: 512)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3731, file: !94, line: 367, baseType: !93, size: 32, offset: 544)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !278, file: !94, line: 485, baseType: !3740, size: 2304, offset: 1792)
!3740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !101, line: 565, size: 2304, elements: !3741)
!3741 = !{!3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3826, !3827, !3837, !3841}
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3740, file: !101, line: 566, baseType: !3693, size: 32)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3740, file: !101, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3740, file: !101, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3740, file: !101, line: 569, baseType: !534, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3740, file: !101, line: 570, baseType: !534, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3740, file: !101, line: 571, baseType: !534, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3740, file: !101, line: 572, baseType: !534, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3740, file: !101, line: 573, baseType: !534, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3740, file: !101, line: 574, baseType: !534, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3740, file: !101, line: 575, baseType: !534, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3740, file: !101, line: 576, baseType: !534, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3740, file: !101, line: 577, baseType: !212, size: 32, offset: 64)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3740, file: !101, line: 578, baseType: !229, offset: 96)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3740, file: !101, line: 580, baseType: !194, size: 128, offset: 128)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3740, file: !101, line: 581, baseType: !1544, size: 192, offset: 256)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3740, file: !101, line: 582, baseType: !3758, size: 64, offset: 448)
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3759, size: 64)
!3759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3760, line: 43, size: 1472, elements: !3761)
!3760 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3761 = !{!3762, !3763, !3764, !3765, !3766, !3769, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794}
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3759, file: !3760, line: 44, baseType: !285, size: 64)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3759, file: !3760, line: 45, baseType: !205, size: 32, offset: 64)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3759, file: !3760, line: 46, baseType: !194, size: 128, offset: 128)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3759, file: !3760, line: 47, baseType: !229, offset: 256)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3759, file: !3760, line: 48, baseType: !3767, size: 64, offset: 256)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !101, line: 533, flags: DIFlagFwdDecl)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3759, file: !3760, line: 49, baseType: !3770, size: 320, offset: 320)
!3770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3771, line: 11, size: 320, elements: !3772)
!3771 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3772 = !{!3773, !3774, !3775, !3780}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3770, file: !3771, line: 16, baseType: !683, size: 128)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3770, file: !3771, line: 17, baseType: !372, size: 64, offset: 128)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3770, file: !3771, line: 18, baseType: !3776, size: 64, offset: 192)
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3777, size: 64)
!3777 = !DISubroutineType(types: !3778)
!3778 = !{null, !3779}
!3779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3770, file: !3771, line: 19, baseType: !212, size: 32, offset: 256)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3759, file: !3760, line: 50, baseType: !372, size: 64, offset: 640)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3759, file: !3760, line: 51, baseType: !1337, size: 64, offset: 704)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3759, file: !3760, line: 52, baseType: !1337, size: 64, offset: 768)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3759, file: !3760, line: 53, baseType: !1337, size: 64, offset: 832)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3759, file: !3760, line: 54, baseType: !1337, size: 64, offset: 896)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3759, file: !3760, line: 55, baseType: !1337, size: 64, offset: 960)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3759, file: !3760, line: 56, baseType: !372, size: 64, offset: 1024)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3759, file: !3760, line: 57, baseType: !372, size: 64, offset: 1088)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3759, file: !3760, line: 58, baseType: !372, size: 64, offset: 1152)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3759, file: !3760, line: 59, baseType: !372, size: 64, offset: 1216)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3759, file: !3760, line: 60, baseType: !372, size: 64, offset: 1280)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3759, file: !3760, line: 61, baseType: !277, size: 64, offset: 1344)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3759, file: !3760, line: 62, baseType: !534, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3759, file: !3760, line: 63, baseType: !534, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3740, file: !101, line: 583, baseType: !534, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3740, file: !101, line: 584, baseType: !534, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3740, file: !101, line: 585, baseType: !534, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3740, file: !101, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3740, file: !101, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3740, file: !101, line: 592, baseType: !1329, size: 512, offset: 576)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3740, file: !101, line: 593, baseType: !465, size: 64, offset: 1088)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3740, file: !101, line: 594, baseType: !246, size: 256, offset: 1152)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3740, file: !101, line: 595, baseType: !1523, size: 128, offset: 1408)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3740, file: !101, line: 596, baseType: !3767, size: 64, offset: 1536)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3740, file: !101, line: 597, baseType: !792, size: 32, offset: 1600)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3740, file: !101, line: 598, baseType: !792, size: 32, offset: 1632)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3740, file: !101, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3740, file: !101, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3740, file: !101, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3740, file: !101, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3740, file: !101, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3740, file: !101, line: 604, baseType: !534, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3740, file: !101, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3740, file: !101, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3740, file: !101, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3740, file: !101, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3740, file: !101, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3740, file: !101, line: 610, baseType: !7, size: 32, offset: 1696)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3740, file: !101, line: 611, baseType: !100, size: 32, offset: 1728)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3740, file: !101, line: 612, baseType: !108, size: 32, offset: 1760)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3740, file: !101, line: 613, baseType: !205, size: 32, offset: 1792)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3740, file: !101, line: 614, baseType: !205, size: 32, offset: 1824)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3740, file: !101, line: 615, baseType: !465, size: 64, offset: 1856)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3740, file: !101, line: 616, baseType: !465, size: 64, offset: 1920)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3740, file: !101, line: 617, baseType: !465, size: 64, offset: 1984)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3740, file: !101, line: 618, baseType: !465, size: 64, offset: 2048)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3740, file: !101, line: 620, baseType: !3828, size: 64, offset: 2112)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !101, line: 536, size: 256, elements: !3830)
!3830 = !{!3831, !3832, !3833, !3834}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3829, file: !101, line: 537, baseType: !229)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3829, file: !101, line: 538, baseType: !7, size: 32)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3829, file: !101, line: 540, baseType: !194, size: 128, offset: 64)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3829, file: !101, line: 543, baseType: !3835, size: 64, offset: 192)
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 64)
!3836 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !101, line: 534, flags: DIFlagFwdDecl)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3740, file: !101, line: 621, baseType: !3838, size: 64, offset: 2176)
!3838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3839, size: 64)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{null, !277, !1481}
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3740, file: !101, line: 622, baseType: !3842, size: 64, offset: 2240)
!3842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 64)
!3843 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !101, line: 622, flags: DIFlagFwdDecl)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !278, file: !94, line: 486, baseType: !3845, size: 64, offset: 4096)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !101, line: 642, size: 1792, elements: !3847)
!3847 = !{!3848, !3849, !3850, !3854, !3855, !3856}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3846, file: !101, line: 643, baseType: !3607, size: 1472)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3846, file: !101, line: 644, baseType: !3610, size: 64, offset: 1472)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3846, file: !101, line: 645, baseType: !3851, size: 64, offset: 1536)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DISubroutineType(types: !3853)
!3853 = !{null, !277, !534}
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3846, file: !101, line: 646, baseType: !3610, size: 64, offset: 1600)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3846, file: !101, line: 647, baseType: !3601, size: 64, offset: 1664)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3846, file: !101, line: 648, baseType: !3601, size: 64, offset: 1728)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !278, file: !94, line: 493, baseType: !3858, size: 64, offset: 4160)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !115, line: 162, size: 1088, elements: !3860)
!3860 = !{!3861, !3862, !3863, !4036, !4037, !4038, !4039, !4040, !4041, !4044, !4045, !4046, !4047, !4048, !4049, !4050}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3859, file: !115, line: 163, baseType: !194, size: 128)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3859, file: !115, line: 164, baseType: !285, size: 64, offset: 128)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3859, file: !115, line: 165, baseType: !3864, size: 64, offset: 192)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3866)
!3866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !115, line: 105, size: 640, elements: !3867)
!3867 = !{!3868, !3986, !3997, !4002, !4006, !4013, !4017, !4021, !4028, !4032}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3866, file: !115, line: 106, baseType: !3869, size: 64)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{!205, !3858, !3872, !114}
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3874, line: 51, size: 1344, elements: !3875)
!3874 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3875 = !{!3876, !3877, !3879, !3880, !3970, !3979, !3980, !3981, !3982, !3983, !3984, !3985}
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3873, file: !3874, line: 52, baseType: !285, size: 64)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3873, file: !3874, line: 53, baseType: !3878, size: 32, offset: 64)
!3878 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3874, line: 28, baseType: !212)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3873, file: !3874, line: 54, baseType: !285, size: 64, offset: 128)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3873, file: !3874, line: 55, baseType: !3881, size: 192, offset: 192)
!3881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3882, line: 17, size: 192, elements: !3883)
!3882 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3883 = !{!3884, !3886, !3969}
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3881, file: !3882, line: 18, baseType: !3885, size: 64)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3881, file: !3882, line: 19, baseType: !3887, size: 64, offset: 64)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3889)
!3889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3882, line: 110, size: 1152, elements: !3890)
!3890 = !{!3891, !3895, !3899, !3905, !3911, !3915, !3919, !3924, !3928, !3929, !3933, !3937, !3941, !3952, !3953, !3954, !3955, !3965}
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3889, file: !3882, line: 111, baseType: !3892, size: 64)
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!3893 = !DISubroutineType(types: !3894)
!3894 = !{!3885, !3885}
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3889, file: !3882, line: 112, baseType: !3896, size: 64, offset: 64)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = !DISubroutineType(types: !3898)
!3898 = !{null, !3885}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3889, file: !3882, line: 113, baseType: !3900, size: 64, offset: 128)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{!534, !3903}
!3903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3904, size: 64)
!3904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3881)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3889, file: !3882, line: 114, baseType: !3906, size: 64, offset: 192)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = !DISubroutineType(types: !3908)
!3908 = !{!2320, !3903, !3909}
!3909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3910, size: 64)
!3910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3889, file: !3882, line: 116, baseType: !3912, size: 64, offset: 256)
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 64)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{!534, !3903, !285}
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3889, file: !3882, line: 118, baseType: !3916, size: 64, offset: 320)
!3916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3917, size: 64)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{!205, !3903, !285, !7, !189, !369}
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3889, file: !3882, line: 123, baseType: !3920, size: 64, offset: 384)
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = !DISubroutineType(types: !3922)
!3922 = !{!205, !3903, !285, !3923, !369}
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3889, file: !3882, line: 126, baseType: !3925, size: 64, offset: 448)
!3925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3926, size: 64)
!3926 = !DISubroutineType(types: !3927)
!3927 = !{!285, !3903}
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3889, file: !3882, line: 127, baseType: !3925, size: 64, offset: 512)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3889, file: !3882, line: 128, baseType: !3930, size: 64, offset: 576)
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{!3885, !3903}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3889, file: !3882, line: 130, baseType: !3934, size: 64, offset: 640)
!3934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3935, size: 64)
!3935 = !DISubroutineType(types: !3936)
!3936 = !{!3885, !3903, !3885}
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3889, file: !3882, line: 133, baseType: !3938, size: 64, offset: 704)
!3938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3939, size: 64)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{!3885, !3903, !285}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3889, file: !3882, line: 135, baseType: !3942, size: 64, offset: 768)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{!205, !3903, !285, !285, !7, !7, !3945}
!3945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3946, size: 64)
!3946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3882, line: 43, size: 640, elements: !3947)
!3947 = !{!3948, !3949, !3950}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3946, file: !3882, line: 44, baseType: !3885, size: 64)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3946, file: !3882, line: 45, baseType: !7, size: 32, offset: 64)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3946, file: !3882, line: 46, baseType: !3951, size: 512, offset: 128)
!3951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 512, elements: !1367)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3889, file: !3882, line: 140, baseType: !3934, size: 64, offset: 832)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3889, file: !3882, line: 143, baseType: !3930, size: 64, offset: 896)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3889, file: !3882, line: 145, baseType: !3892, size: 64, offset: 960)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3889, file: !3882, line: 146, baseType: !3956, size: 64, offset: 1024)
!3956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3957, size: 64)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{!205, !3903, !3959}
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3882, line: 29, size: 128, elements: !3961)
!3961 = !{!3962, !3963, !3964}
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3960, file: !3882, line: 30, baseType: !7, size: 32)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3960, file: !3882, line: 31, baseType: !7, size: 32, offset: 32)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3960, file: !3882, line: 32, baseType: !3903, size: 64, offset: 64)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3889, file: !3882, line: 148, baseType: !3966, size: 64, offset: 1088)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!205, !3903, !277}
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3881, file: !3882, line: 20, baseType: !277, size: 64, offset: 128)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3873, file: !3874, line: 57, baseType: !3971, size: 64, offset: 384)
!3971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3972, size: 64)
!3972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3874, line: 31, size: 704, elements: !3973)
!3973 = !{!3974, !3975, !3976, !3977, !3978}
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3972, file: !3874, line: 32, baseType: !322, size: 64)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3972, file: !3874, line: 33, baseType: !205, size: 32, offset: 64)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3972, file: !3874, line: 34, baseType: !189, size: 64, offset: 128)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3972, file: !3874, line: 35, baseType: !3971, size: 64, offset: 192)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3972, file: !3874, line: 43, baseType: !391, size: 448, offset: 256)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3873, file: !3874, line: 58, baseType: !3971, size: 64, offset: 448)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3873, file: !3874, line: 59, baseType: !3872, size: 64, offset: 512)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3873, file: !3874, line: 60, baseType: !3872, size: 64, offset: 576)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3873, file: !3874, line: 61, baseType: !3872, size: 64, offset: 640)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3873, file: !3874, line: 63, baseType: !281, size: 512, offset: 704)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3873, file: !3874, line: 65, baseType: !372, size: 64, offset: 1216)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3873, file: !3874, line: 66, baseType: !189, size: 64, offset: 1280)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3866, file: !115, line: 108, baseType: !3987, size: 64, offset: 64)
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{!205, !3858, !3990, !114}
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !115, line: 63, size: 640, elements: !3992)
!3992 = !{!3993, !3994, !3995}
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3991, file: !115, line: 64, baseType: !3885, size: 64)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3991, file: !115, line: 65, baseType: !205, size: 32, offset: 64)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3991, file: !115, line: 66, baseType: !3996, size: 512, offset: 96)
!3996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !212, size: 512, elements: !209)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3866, file: !115, line: 110, baseType: !3998, size: 64, offset: 128)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!3999 = !DISubroutineType(types: !4000)
!4000 = !{!205, !3858, !7, !4001}
!4001 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !195, line: 164, baseType: !372)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3866, file: !115, line: 111, baseType: !4003, size: 64, offset: 192)
!4003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4004, size: 64)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{null, !3858, !7}
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3866, file: !115, line: 112, baseType: !4007, size: 64, offset: 256)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{!205, !3858, !3872, !4010, !7, !4012, !2876}
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !212)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3866, file: !115, line: 117, baseType: !4014, size: 64, offset: 320)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{!205, !3858, !7, !7, !189}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3866, file: !115, line: 119, baseType: !4018, size: 64, offset: 384)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DISubroutineType(types: !4020)
!4020 = !{null, !3858, !7, !7}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3866, file: !115, line: 121, baseType: !4022, size: 64, offset: 448)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DISubroutineType(types: !4024)
!4024 = !{!205, !3858, !4025, !534}
!4025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4026, size: 64)
!4026 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !4027, line: 11, flags: DIFlagFwdDecl)
!4027 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3866, file: !115, line: 122, baseType: !4029, size: 64, offset: 512)
!4029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4030, size: 64)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{null, !3858, !4025}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3866, file: !115, line: 123, baseType: !4033, size: 64, offset: 576)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DISubroutineType(types: !4035)
!4035 = !{!205, !3858, !3990, !4012, !2876}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3859, file: !115, line: 166, baseType: !189, size: 64, offset: 256)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3859, file: !115, line: 167, baseType: !7, size: 32, offset: 320)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3859, file: !115, line: 168, baseType: !7, size: 32, offset: 352)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3859, file: !115, line: 171, baseType: !3885, size: 64, offset: 384)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3859, file: !115, line: 172, baseType: !114, size: 32, offset: 448)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3859, file: !115, line: 173, baseType: !4042, size: 64, offset: 512)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64)
!4043 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !115, line: 134, flags: DIFlagFwdDecl)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3859, file: !115, line: 175, baseType: !3858, size: 64, offset: 576)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3859, file: !115, line: 182, baseType: !4001, size: 64, offset: 640)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3859, file: !115, line: 183, baseType: !7, size: 32, offset: 704)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3859, file: !115, line: 184, baseType: !7, size: 32, offset: 736)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3859, file: !115, line: 185, baseType: !783, size: 128, offset: 768)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3859, file: !115, line: 186, baseType: !1211, size: 192, offset: 896)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3859, file: !115, line: 187, baseType: !4051, offset: 1088)
!4051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2524)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !278, file: !94, line: 499, baseType: !194, size: 128, offset: 4224)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !278, file: !94, line: 502, baseType: !4054, size: 64, offset: 4352)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 64)
!4055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4056)
!4056 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !94, line: 502, flags: DIFlagFwdDecl)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !278, file: !94, line: 504, baseType: !4058, size: 64, offset: 4416)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !278, file: !94, line: 505, baseType: !465, size: 64, offset: 4480)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !278, file: !94, line: 510, baseType: !465, size: 64, offset: 4544)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !278, file: !94, line: 511, baseType: !4062, size: 64, offset: 4608)
!4062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4063, size: 64)
!4063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4064)
!4064 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !94, line: 511, flags: DIFlagFwdDecl)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !278, file: !94, line: 513, baseType: !4066, size: 64, offset: 4672)
!4066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4067, size: 64)
!4067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !94, line: 288, size: 128, elements: !4068)
!4068 = !{!4069, !4070}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4067, file: !94, line: 293, baseType: !7, size: 32)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4067, file: !94, line: 294, baseType: !372, size: 64, offset: 64)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !278, file: !94, line: 515, baseType: !194, size: 128, offset: 4736)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !278, file: !94, line: 526, baseType: !4073, offset: 4864)
!4073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4074, line: 5, elements: !243)
!4074 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !278, file: !94, line: 528, baseType: !3872, size: 64, offset: 4864)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !278, file: !94, line: 529, baseType: !3885, size: 64, offset: 4928)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !278, file: !94, line: 534, baseType: !557, size: 32, offset: 4992)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !278, file: !94, line: 535, baseType: !212, size: 32, offset: 5024)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !278, file: !94, line: 537, baseType: !229, offset: 5056)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !278, file: !94, line: 538, baseType: !194, size: 128, offset: 5056)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !278, file: !94, line: 540, baseType: !4082, size: 64, offset: 5184)
!4082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4083, size: 64)
!4083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4084, line: 54, size: 960, elements: !4085)
!4084 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4085 = !{!4086, !4087, !4088, !4089, !4090, !4091, !4092, !4096, !4100, !4101, !4102, !4103, !4107, !4111, !4112}
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4083, file: !4084, line: 55, baseType: !285, size: 64)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4083, file: !4084, line: 56, baseType: !674, size: 64, offset: 64)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4083, file: !4084, line: 58, baseType: !376, size: 64, offset: 128)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4083, file: !4084, line: 59, baseType: !376, size: 64, offset: 192)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4083, file: !4084, line: 60, baseType: !289, size: 64, offset: 256)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4083, file: !4084, line: 62, baseType: !3592, size: 64, offset: 320)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4083, file: !4084, line: 63, baseType: !4093, size: 64, offset: 384)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{!322, !277, !3599}
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4083, file: !4084, line: 65, baseType: !4097, size: 64, offset: 448)
!4097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4098, size: 64)
!4098 = !DISubroutineType(types: !4099)
!4099 = !{null, !4082}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4083, file: !4084, line: 66, baseType: !3601, size: 64, offset: 512)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4083, file: !4084, line: 68, baseType: !3610, size: 64, offset: 576)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4083, file: !4084, line: 70, baseType: !3397, size: 64, offset: 640)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4083, file: !4084, line: 71, baseType: !4104, size: 64, offset: 704)
!4104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4105, size: 64)
!4105 = !DISubroutineType(types: !4106)
!4106 = !{!2320, !277}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4083, file: !4084, line: 73, baseType: !4108, size: 64, offset: 768)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 64)
!4109 = !DISubroutineType(types: !4110)
!4110 = !{null, !277, !1866, !1867}
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4083, file: !4084, line: 75, baseType: !3605, size: 64, offset: 832)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4083, file: !4084, line: 77, baseType: !3722, size: 64, offset: 896)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !278, file: !94, line: 541, baseType: !376, size: 64, offset: 5248)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !278, file: !94, line: 543, baseType: !3601, size: 64, offset: 5312)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !278, file: !94, line: 544, baseType: !4116, size: 64, offset: 5376)
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 64)
!4117 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !94, line: 45, flags: DIFlagFwdDecl)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !278, file: !94, line: 545, baseType: !4119, size: 64, offset: 5440)
!4119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4120, size: 64)
!4120 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !94, line: 47, flags: DIFlagFwdDecl)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !278, file: !94, line: 547, baseType: !534, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !278, file: !94, line: 548, baseType: !534, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !278, file: !94, line: 549, baseType: !534, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !278, file: !94, line: 550, baseType: !534, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "sysdev", scope: !274, file: !129, line: 426, baseType: !277, size: 64, offset: 64)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "busnum", scope: !274, file: !129, line: 427, baseType: !205, size: 32, offset: 128)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "bus_name", scope: !274, file: !129, line: 428, baseType: !285, size: 64, offset: 192)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "uses_pio_for_control", scope: !274, file: !129, line: 429, baseType: !1389, size: 8, offset: 256)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "otg_port", scope: !274, file: !129, line: 433, baseType: !1389, size: 8, offset: 264)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "is_b_host", scope: !274, file: !129, line: 434, baseType: !7, size: 1, offset: 272, flags: DIFlagBitField, extraData: i64 272)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "b_hnp_enable", scope: !274, file: !129, line: 435, baseType: !7, size: 1, offset: 273, flags: DIFlagBitField, extraData: i64 272)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "no_stop_on_short", scope: !274, file: !129, line: 436, baseType: !7, size: 1, offset: 274, flags: DIFlagBitField, extraData: i64 272)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "no_sg_constraint", scope: !274, file: !129, line: 441, baseType: !7, size: 1, offset: 275, flags: DIFlagBitField, extraData: i64 272)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !274, file: !129, line: 442, baseType: !7, size: 32, offset: 288)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "devnum_next", scope: !274, file: !129, line: 444, baseType: !205, size: 32, offset: 320)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "devnum_next_mutex", scope: !274, file: !129, line: 446, baseType: !1211, size: 192, offset: 384)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "devmap", scope: !274, file: !129, line: 448, baseType: !4138, size: 128, offset: 576)
!4138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_devmap", file: !129, line: 417, size: 128, elements: !4139)
!4139 = !{!4140}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "devicemap", scope: !4138, file: !129, line: 418, baseType: !4141, size: 128)
!4141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 128, elements: !269)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "root_hub", scope: !274, file: !129, line: 449, baseType: !201, size: 64, offset: 704)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "hs_companion", scope: !274, file: !129, line: 450, baseType: !273, size: 64, offset: 768)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_allocated", scope: !274, file: !129, line: 452, baseType: !205, size: 32, offset: 832)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_int_reqs", scope: !274, file: !129, line: 459, baseType: !205, size: 32, offset: 864)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_isoc_reqs", scope: !274, file: !129, line: 460, baseType: !205, size: 32, offset: 896)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "resuming_ports", scope: !274, file: !129, line: 462, baseType: !7, size: 32, offset: 928)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "ep0", scope: !202, file: !129, line: 647, baseType: !4149, size: 640, offset: 640)
!4149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_endpoint", file: !129, line: 67, size: 640, elements: !4150)
!4150 = !{!4151, !4163, !4171, !4179, !4180, !4181, !4184, !4186, !4187, !4188}
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4149, file: !129, line: 68, baseType: !4152, size: 72)
!4152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_endpoint_descriptor", file: !6, line: 407, size: 72, elements: !4153)
!4153 = !{!4154, !4155, !4156, !4157, !4158, !4160, !4161, !4162}
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4152, file: !6, line: 408, baseType: !1390, size: 8)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4152, file: !6, line: 409, baseType: !1390, size: 8, offset: 8)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "bEndpointAddress", scope: !4152, file: !6, line: 411, baseType: !1390, size: 8, offset: 16)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4152, file: !6, line: 412, baseType: !1390, size: 8, offset: 24)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "wMaxPacketSize", scope: !4152, file: !6, line: 413, baseType: !4159, size: 16, offset: 32)
!4159 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !3098, line: 29, baseType: !898)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "bInterval", scope: !4152, file: !6, line: 414, baseType: !1390, size: 8, offset: 48)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "bRefresh", scope: !4152, file: !6, line: 418, baseType: !1390, size: 8, offset: 56)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "bSynchAddress", scope: !4152, file: !6, line: 419, baseType: !1390, size: 8, offset: 64)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "ss_ep_comp", scope: !4149, file: !129, line: 69, baseType: !4164, size: 48, offset: 72)
!4164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_ep_comp_descriptor", file: !6, line: 689, size: 48, elements: !4165)
!4165 = !{!4166, !4167, !4168, !4169, !4170}
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4164, file: !6, line: 690, baseType: !1390, size: 8)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4164, file: !6, line: 691, baseType: !1390, size: 8, offset: 8)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxBurst", scope: !4164, file: !6, line: 693, baseType: !1390, size: 8, offset: 16)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4164, file: !6, line: 694, baseType: !1390, size: 8, offset: 24)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "wBytesPerInterval", scope: !4164, file: !6, line: 695, baseType: !4159, size: 16, offset: 32)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "ssp_isoc_ep_comp", scope: !4149, file: !129, line: 70, baseType: !4172, size: 64, offset: 120)
!4172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ssp_isoc_ep_comp_descriptor", file: !6, line: 677, size: 64, elements: !4173)
!4173 = !{!4174, !4175, !4176, !4177}
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4172, file: !6, line: 678, baseType: !1390, size: 8)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4172, file: !6, line: 679, baseType: !1390, size: 8, offset: 8)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "wReseved", scope: !4172, file: !6, line: 680, baseType: !4159, size: 16, offset: 16)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerInterval", scope: !4172, file: !6, line: 681, baseType: !4178, size: 32, offset: 32)
!4178 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !3098, line: 31, baseType: !214)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !4149, file: !129, line: 71, baseType: !194, size: 128, offset: 192)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !4149, file: !129, line: 72, baseType: !189, size: 64, offset: 320)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "ep_dev", scope: !4149, file: !129, line: 73, baseType: !4182, size: 64, offset: 384)
!4182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4183, size: 64)
!4183 = !DICompositeType(tag: DW_TAG_structure_type, name: "ep_device", file: !129, line: 48, flags: DIFlagFwdDecl)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !4149, file: !129, line: 75, baseType: !4185, size: 64, offset: 448)
!4185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !4149, file: !129, line: 76, baseType: !205, size: 32, offset: 512)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4149, file: !129, line: 77, baseType: !205, size: 32, offset: 544)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !4149, file: !129, line: 78, baseType: !205, size: 32, offset: 576)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !202, file: !129, line: 649, baseType: !278, size: 5568, offset: 1280)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor", scope: !202, file: !129, line: 651, baseType: !4191, size: 144, offset: 6848)
!4191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device_descriptor", file: !6, line: 289, size: 144, elements: !4192)
!4192 = !{!4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206}
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4191, file: !6, line: 290, baseType: !1390, size: 8)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4191, file: !6, line: 291, baseType: !1390, size: 8, offset: 8)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "bcdUSB", scope: !4191, file: !6, line: 293, baseType: !4159, size: 16, offset: 16)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceClass", scope: !4191, file: !6, line: 294, baseType: !1390, size: 8, offset: 32)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceSubClass", scope: !4191, file: !6, line: 295, baseType: !1390, size: 8, offset: 40)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceProtocol", scope: !4191, file: !6, line: 296, baseType: !1390, size: 8, offset: 48)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxPacketSize0", scope: !4191, file: !6, line: 297, baseType: !1390, size: 8, offset: 56)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "idVendor", scope: !4191, file: !6, line: 298, baseType: !4159, size: 16, offset: 64)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "idProduct", scope: !4191, file: !6, line: 299, baseType: !4159, size: 16, offset: 80)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice", scope: !4191, file: !6, line: 300, baseType: !4159, size: 16, offset: 96)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "iManufacturer", scope: !4191, file: !6, line: 301, baseType: !1390, size: 8, offset: 112)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "iProduct", scope: !4191, file: !6, line: 302, baseType: !1390, size: 8, offset: 120)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "iSerialNumber", scope: !4191, file: !6, line: 303, baseType: !1390, size: 8, offset: 128)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "bNumConfigurations", scope: !4191, file: !6, line: 304, baseType: !1390, size: 8, offset: 136)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "bos", scope: !202, file: !129, line: 652, baseType: !4208, size: 64, offset: 7040)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 64)
!4209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_bos", file: !129, line: 396, size: 384, elements: !4210)
!4210 = !{!4211, !4219, !4227, !4239, !4252, !4261}
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4209, file: !129, line: 397, baseType: !4212, size: 64)
!4212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4213, size: 64)
!4213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_bos_descriptor", file: !6, line: 844, size: 40, elements: !4214)
!4214 = !{!4215, !4216, !4217, !4218}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4213, file: !6, line: 845, baseType: !1390, size: 8)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4213, file: !6, line: 846, baseType: !1390, size: 8, offset: 8)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "wTotalLength", scope: !4213, file: !6, line: 848, baseType: !4159, size: 16, offset: 16)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "bNumDeviceCaps", scope: !4213, file: !6, line: 849, baseType: !1390, size: 8, offset: 32)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "ext_cap", scope: !4209, file: !129, line: 400, baseType: !4220, size: 64, offset: 64)
!4220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4221, size: 64)
!4221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ext_cap_descriptor", file: !6, line: 895, size: 56, elements: !4222)
!4222 = !{!4223, !4224, !4225, !4226}
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4221, file: !6, line: 896, baseType: !1390, size: 8)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4221, file: !6, line: 897, baseType: !1390, size: 8, offset: 8)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4221, file: !6, line: 898, baseType: !1390, size: 8, offset: 16)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4221, file: !6, line: 899, baseType: !4178, size: 32, offset: 24)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "ss_cap", scope: !4209, file: !129, line: 401, baseType: !4228, size: 64, offset: 128)
!4228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4229, size: 64)
!4229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_cap_descriptor", file: !6, line: 917, size: 80, elements: !4230)
!4230 = !{!4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238}
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4229, file: !6, line: 918, baseType: !1390, size: 8)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4229, file: !6, line: 919, baseType: !1390, size: 8, offset: 8)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4229, file: !6, line: 920, baseType: !1390, size: 8, offset: 16)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4229, file: !6, line: 921, baseType: !1390, size: 8, offset: 24)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "wSpeedSupported", scope: !4229, file: !6, line: 923, baseType: !4159, size: 16, offset: 32)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionalitySupport", scope: !4229, file: !6, line: 928, baseType: !1390, size: 8, offset: 48)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "bU1devExitLat", scope: !4229, file: !6, line: 929, baseType: !1390, size: 8, offset: 56)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "bU2DevExitLat", scope: !4229, file: !6, line: 930, baseType: !4159, size: 16, offset: 64)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "ssp_cap", scope: !4209, file: !129, line: 402, baseType: !4240, size: 64, offset: 192)
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4241, size: 64)
!4241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ssp_cap_descriptor", file: !6, line: 955, size: 128, elements: !4242)
!4242 = !{!4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250}
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4241, file: !6, line: 956, baseType: !1390, size: 8)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4241, file: !6, line: 957, baseType: !1390, size: 8, offset: 8)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4241, file: !6, line: 958, baseType: !1390, size: 8, offset: 16)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "bReserved", scope: !4241, file: !6, line: 959, baseType: !1390, size: 8, offset: 24)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4241, file: !6, line: 960, baseType: !4178, size: 32, offset: 32)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "wFunctionalitySupport", scope: !4241, file: !6, line: 963, baseType: !4159, size: 16, offset: 64)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "wReserved", scope: !4241, file: !6, line: 967, baseType: !4159, size: 16, offset: 80)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "bmSublinkSpeedAttr", scope: !4241, file: !6, line: 968, baseType: !4251, size: 32, offset: 96)
!4251 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4178, size: 32, elements: !1408)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "ss_id", scope: !4209, file: !129, line: 403, baseType: !4253, size: 64, offset: 256)
!4253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4254, size: 64)
!4254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_container_id_descriptor", file: !6, line: 940, size: 160, elements: !4255)
!4255 = !{!4256, !4257, !4258, !4259, !4260}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4254, file: !6, line: 941, baseType: !1390, size: 8)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4254, file: !6, line: 942, baseType: !1390, size: 8, offset: 8)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4254, file: !6, line: 943, baseType: !1390, size: 8, offset: 16)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "bReserved", scope: !4254, file: !6, line: 944, baseType: !1390, size: 8, offset: 24)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "ContainerID", scope: !4254, file: !6, line: 945, baseType: !2900, size: 128, offset: 32)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "ptm_cap", scope: !4209, file: !129, line: 404, baseType: !4262, size: 64, offset: 320)
!4262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4263, size: 64)
!4263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ptm_cap_descriptor", file: !6, line: 1080, size: 24, elements: !4264)
!4264 = !{!4265, !4266, !4267}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4263, file: !6, line: 1081, baseType: !1390, size: 8)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4263, file: !6, line: 1082, baseType: !1390, size: 8, offset: 8)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4263, file: !6, line: 1083, baseType: !1390, size: 8, offset: 16)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !202, file: !129, line: 653, baseType: !4269, size: 64, offset: 7104)
!4269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4270, size: 64)
!4270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_config", file: !129, line: 374, size: 5440, elements: !4271)
!4271 = !{!4272, !4283, !4284, !4297, !4339, !4348, !4349}
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4270, file: !129, line: 375, baseType: !4273, size: 72)
!4273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_config_descriptor", file: !6, line: 349, size: 72, elements: !4274)
!4274 = !{!4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282}
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4273, file: !6, line: 350, baseType: !1390, size: 8)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4273, file: !6, line: 351, baseType: !1390, size: 8, offset: 8)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "wTotalLength", scope: !4273, file: !6, line: 353, baseType: !4159, size: 16, offset: 16)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "bNumInterfaces", scope: !4273, file: !6, line: 354, baseType: !1390, size: 8, offset: 32)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "bConfigurationValue", scope: !4273, file: !6, line: 355, baseType: !1390, size: 8, offset: 40)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "iConfiguration", scope: !4273, file: !6, line: 356, baseType: !1390, size: 8, offset: 48)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4273, file: !6, line: 357, baseType: !1390, size: 8, offset: 56)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxPower", scope: !4273, file: !6, line: 358, baseType: !1390, size: 8, offset: 64)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4270, file: !129, line: 377, baseType: !322, size: 64, offset: 128)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "intf_assoc", scope: !4270, file: !129, line: 381, baseType: !4285, size: 1024, offset: 192)
!4285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4286, size: 1024, elements: !209)
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4287, size: 64)
!4287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_assoc_descriptor", file: !6, line: 783, size: 64, elements: !4288)
!4288 = !{!4289, !4290, !4291, !4292, !4293, !4294, !4295, !4296}
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4287, file: !6, line: 784, baseType: !1390, size: 8)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4287, file: !6, line: 785, baseType: !1390, size: 8, offset: 8)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "bFirstInterface", scope: !4287, file: !6, line: 787, baseType: !1390, size: 8, offset: 16)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceCount", scope: !4287, file: !6, line: 788, baseType: !1390, size: 8, offset: 24)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionClass", scope: !4287, file: !6, line: 789, baseType: !1390, size: 8, offset: 32)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionSubClass", scope: !4287, file: !6, line: 790, baseType: !1390, size: 8, offset: 40)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionProtocol", scope: !4287, file: !6, line: 791, baseType: !1390, size: 8, offset: 48)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "iFunction", scope: !4287, file: !6, line: 792, baseType: !1390, size: 8, offset: 56)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !4270, file: !129, line: 385, baseType: !4298, size: 2048, offset: 1216)
!4298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4299, size: 2048, elements: !2423)
!4299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4300, size: 64)
!4300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface", file: !129, line: 232, size: 6272, elements: !4301)
!4301 = !{!4302, !4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337, !4338}
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "altsetting", scope: !4300, file: !129, line: 235, baseType: !4303, size: 64)
!4303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4304, size: 64)
!4304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_interface", file: !129, line: 82, size: 320, elements: !4305)
!4305 = !{!4306, !4318, !4319, !4320, !4322}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4304, file: !129, line: 83, baseType: !4307, size: 72)
!4307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_descriptor", file: !6, line: 389, size: 72, elements: !4308)
!4308 = !{!4309, !4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317}
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4307, file: !6, line: 390, baseType: !1390, size: 8)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4307, file: !6, line: 391, baseType: !1390, size: 8, offset: 8)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceNumber", scope: !4307, file: !6, line: 393, baseType: !1390, size: 8, offset: 16)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "bAlternateSetting", scope: !4307, file: !6, line: 394, baseType: !1390, size: 8, offset: 24)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "bNumEndpoints", scope: !4307, file: !6, line: 395, baseType: !1390, size: 8, offset: 32)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceClass", scope: !4307, file: !6, line: 396, baseType: !1390, size: 8, offset: 40)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceSubClass", scope: !4307, file: !6, line: 397, baseType: !1390, size: 8, offset: 48)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceProtocol", scope: !4307, file: !6, line: 398, baseType: !1390, size: 8, offset: 56)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "iInterface", scope: !4307, file: !6, line: 399, baseType: !1390, size: 8, offset: 64)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !4304, file: !129, line: 85, baseType: !205, size: 32, offset: 96)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !4304, file: !129, line: 86, baseType: !4185, size: 64, offset: 128)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "endpoint", scope: !4304, file: !129, line: 91, baseType: !4321, size: 64, offset: 192)
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4149, size: 64)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4304, file: !129, line: 93, baseType: !322, size: 64, offset: 256)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "cur_altsetting", scope: !4300, file: !129, line: 237, baseType: !4303, size: 64, offset: 64)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "num_altsetting", scope: !4300, file: !129, line: 239, baseType: !7, size: 32, offset: 128)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "intf_assoc", scope: !4300, file: !129, line: 243, baseType: !4286, size: 64, offset: 192)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4300, file: !129, line: 245, baseType: !205, size: 32, offset: 256)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "condition", scope: !4300, file: !129, line: 247, baseType: !128, size: 32, offset: 288)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_files_created", scope: !4300, file: !129, line: 248, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "ep_devs_created", scope: !4300, file: !129, line: 249, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !4300, file: !129, line: 250, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "needs_remote_wakeup", scope: !4300, file: !129, line: 251, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "needs_altsetting0", scope: !4300, file: !129, line: 252, baseType: !7, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "needs_binding", scope: !4300, file: !129, line: 253, baseType: !7, size: 1, offset: 325, flags: DIFlagBitField, extraData: i64 320)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "resetting_device", scope: !4300, file: !129, line: 254, baseType: !7, size: 1, offset: 326, flags: DIFlagBitField, extraData: i64 320)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "authorized", scope: !4300, file: !129, line: 255, baseType: !7, size: 1, offset: 327, flags: DIFlagBitField, extraData: i64 320)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4300, file: !129, line: 257, baseType: !278, size: 5568, offset: 384)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "usb_dev", scope: !4300, file: !129, line: 258, baseType: !277, size: 64, offset: 5952)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "reset_ws", scope: !4300, file: !129, line: 259, baseType: !246, size: 256, offset: 6016)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "intf_cache", scope: !4270, file: !129, line: 389, baseType: !4340, size: 2048, offset: 3264)
!4340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4341, size: 2048, elements: !2423)
!4341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4342, size: 64)
!4342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_cache", file: !129, line: 322, size: 64, elements: !4343)
!4343 = !{!4344, !4345, !4346}
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "num_altsetting", scope: !4342, file: !129, line: 323, baseType: !7, size: 32)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4342, file: !129, line: 324, baseType: !3570, size: 32, offset: 32)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "altsetting", scope: !4342, file: !129, line: 328, baseType: !4347, offset: 64)
!4347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4304, elements: !2524)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !4270, file: !129, line: 391, baseType: !4185, size: 64, offset: 5312)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !4270, file: !129, line: 392, baseType: !205, size: 32, offset: 5376)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "actconfig", scope: !202, file: !129, line: 655, baseType: !4269, size: 64, offset: 7168)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "ep_in", scope: !202, file: !129, line: 656, baseType: !4352, size: 1024, offset: 7232)
!4352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4321, size: 1024, elements: !209)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "ep_out", scope: !202, file: !129, line: 657, baseType: !4352, size: 1024, offset: 8256)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "rawdescriptors", scope: !202, file: !129, line: 659, baseType: !4355, size: 64, offset: 9280)
!4355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "bus_mA", scope: !202, file: !129, line: 661, baseType: !364, size: 16, offset: 9344)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "portnum", scope: !202, file: !129, line: 662, baseType: !1389, size: 8, offset: 9360)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !202, file: !129, line: 663, baseType: !1389, size: 8, offset: 9368)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "devaddr", scope: !202, file: !129, line: 664, baseType: !1389, size: 8, offset: 9376)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "can_submit", scope: !202, file: !129, line: 666, baseType: !7, size: 1, offset: 9384, flags: DIFlagBitField, extraData: i64 9384)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "persist_enabled", scope: !202, file: !129, line: 667, baseType: !7, size: 1, offset: 9385, flags: DIFlagBitField, extraData: i64 9384)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "have_langid", scope: !202, file: !129, line: 668, baseType: !7, size: 1, offset: 9386, flags: DIFlagBitField, extraData: i64 9384)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "authorized", scope: !202, file: !129, line: 669, baseType: !7, size: 1, offset: 9387, flags: DIFlagBitField, extraData: i64 9384)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !202, file: !129, line: 670, baseType: !7, size: 1, offset: 9388, flags: DIFlagBitField, extraData: i64 9384)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "wusb", scope: !202, file: !129, line: 671, baseType: !7, size: 1, offset: 9389, flags: DIFlagBitField, extraData: i64 9384)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_capable", scope: !202, file: !129, line: 672, baseType: !7, size: 1, offset: 9390, flags: DIFlagBitField, extraData: i64 9384)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_capable", scope: !202, file: !129, line: 673, baseType: !7, size: 1, offset: 9391, flags: DIFlagBitField, extraData: i64 9384)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_besl_capable", scope: !202, file: !129, line: 674, baseType: !7, size: 1, offset: 9392, flags: DIFlagBitField, extraData: i64 9384)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_enabled", scope: !202, file: !129, line: 675, baseType: !7, size: 1, offset: 9393, flags: DIFlagBitField, extraData: i64 9384)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_allowed", scope: !202, file: !129, line: 676, baseType: !7, size: 1, offset: 9394, flags: DIFlagBitField, extraData: i64 9384)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "usb3_lpm_u1_enabled", scope: !202, file: !129, line: 677, baseType: !7, size: 1, offset: 9395, flags: DIFlagBitField, extraData: i64 9384)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "usb3_lpm_u2_enabled", scope: !202, file: !129, line: 678, baseType: !7, size: 1, offset: 9396, flags: DIFlagBitField, extraData: i64 9384)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "string_langid", scope: !202, file: !129, line: 679, baseType: !205, size: 32, offset: 9408)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !202, file: !129, line: 682, baseType: !322, size: 64, offset: 9472)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !202, file: !129, line: 683, baseType: !322, size: 64, offset: 9536)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !202, file: !129, line: 684, baseType: !322, size: 64, offset: 9600)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "filelist", scope: !202, file: !129, line: 686, baseType: !194, size: 128, offset: 9664)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "maxchild", scope: !202, file: !129, line: 688, baseType: !205, size: 32, offset: 9792)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !202, file: !129, line: 690, baseType: !212, size: 32, offset: 9824)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "urbnum", scope: !202, file: !129, line: 691, baseType: !792, size: 32, offset: 9856)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "active_duration", scope: !202, file: !129, line: 693, baseType: !372, size: 64, offset: 9920)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "connect_time", scope: !202, file: !129, line: 696, baseType: !372, size: 64, offset: 9984)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "do_remote_wakeup", scope: !202, file: !129, line: 698, baseType: !7, size: 1, offset: 10048, flags: DIFlagBitField, extraData: i64 10048)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "reset_resume", scope: !202, file: !129, line: 699, baseType: !7, size: 1, offset: 10049, flags: DIFlagBitField, extraData: i64 10048)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "port_is_suspended", scope: !202, file: !129, line: 700, baseType: !7, size: 1, offset: 10050, flags: DIFlagBitField, extraData: i64 10048)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "wusb_dev", scope: !202, file: !129, line: 702, baseType: !4387, size: 64, offset: 10112)
!4387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4388, size: 64)
!4388 = !DICompositeType(tag: DW_TAG_structure_type, name: "wusb_dev", file: !129, line: 28, flags: DIFlagFwdDecl)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "slot_id", scope: !202, file: !129, line: 703, baseType: !205, size: 32, offset: 10176)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !202, file: !129, line: 704, baseType: !135, size: 32, offset: 10208)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "l1_params", scope: !202, file: !129, line: 705, baseType: !4392, size: 64, offset: 10240)
!4392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb2_lpm_parameters", file: !129, line: 502, size: 64, elements: !4393)
!4393 = !{!4394, !4395}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "besl", scope: !4392, file: !129, line: 506, baseType: !7, size: 32)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4392, file: !129, line: 512, baseType: !205, size: 32, offset: 32)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "u1_params", scope: !202, file: !129, line: 706, baseType: !4397, size: 128, offset: 10304)
!4397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb3_lpm_parameters", file: !129, line: 522, size: 128, elements: !4398)
!4398 = !{!4399, !4400, !4401, !4402}
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "mel", scope: !4397, file: !129, line: 529, baseType: !7, size: 32)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "pel", scope: !4397, file: !129, line: 535, baseType: !7, size: 32, offset: 32)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "sel", scope: !4397, file: !129, line: 545, baseType: !7, size: 32, offset: 64)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4397, file: !129, line: 551, baseType: !205, size: 32, offset: 96)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "u2_params", scope: !202, file: !129, line: 707, baseType: !4397, size: 128, offset: 10432)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_disable_count", scope: !202, file: !129, line: 708, baseType: !7, size: 32, offset: 10560)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "hub_delay", scope: !202, file: !129, line: 710, baseType: !897, size: 16, offset: 10592)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "use_generic_driver", scope: !202, file: !129, line: 711, baseType: !7, size: 1, offset: 10608, flags: DIFlagBitField, extraData: i64 10608)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !191, file: !3, line: 63, baseType: !400, size: 64, offset: 192)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !191, file: !3, line: 64, baseType: !229, offset: 256)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "async_pending", scope: !191, file: !3, line: 65, baseType: !194, size: 128, offset: 256)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "async_completed", scope: !191, file: !3, line: 66, baseType: !194, size: 128, offset: 384)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "memory_list", scope: !191, file: !3, line: 67, baseType: !194, size: 128, offset: 512)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !191, file: !3, line: 68, baseType: !1523, size: 128, offset: 640)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "wait_for_resume", scope: !191, file: !3, line: 69, baseType: !1523, size: 128, offset: 768)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "discsignr", scope: !191, file: !3, line: 70, baseType: !7, size: 32, offset: 896)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "disc_pid", scope: !191, file: !3, line: 71, baseType: !1513, size: 64, offset: 960)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !191, file: !3, line: 72, baseType: !1589, size: 64, offset: 1024)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "disccontext", scope: !191, file: !3, line: 73, baseType: !2192, size: 64, offset: 1088)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "ifclaimed", scope: !191, file: !3, line: 74, baseType: !372, size: 64, offset: 1152)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "disabled_bulk_eps", scope: !191, file: !3, line: 75, baseType: !212, size: 32, offset: 1216)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "interface_allowed_mask", scope: !191, file: !3, line: 76, baseType: !372, size: 64, offset: 1280)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "not_yet_resumed", scope: !191, file: !3, line: 77, baseType: !205, size: 32, offset: 1344)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_allowed", scope: !191, file: !3, line: 78, baseType: !534, size: 8, offset: 1376)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "privileges_dropped", scope: !191, file: !3, line: 79, baseType: !534, size: 8, offset: 1384)
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4425, size: 64)
!4425 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !205)
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4427, size: 64)
!4427 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4430, size: 64)
!4430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "async", file: !3, line: 93, size: 832, elements: !4431)
!4431 = !{!4432, !4433, !4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4503, !4515, !4516, !4517, !4518}
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "asynclist", scope: !4430, file: !3, line: 94, baseType: !194, size: 128)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !4430, file: !3, line: 95, baseType: !190, size: 64, offset: 128)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4430, file: !3, line: 96, baseType: !1513, size: 64, offset: 192)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !4430, file: !3, line: 97, baseType: !1589, size: 64, offset: 256)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "signr", scope: !4430, file: !3, line: 98, baseType: !7, size: 32, offset: 320)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "ifnum", scope: !4430, file: !3, line: 99, baseType: !7, size: 32, offset: 352)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "userbuffer", scope: !4430, file: !3, line: 100, baseType: !189, size: 64, offset: 384)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "userurb", scope: !4430, file: !3, line: 101, baseType: !189, size: 64, offset: 448)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "userurb_sigval", scope: !4430, file: !3, line: 102, baseType: !2192, size: 64, offset: 512)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "urb", scope: !4430, file: !3, line: 103, baseType: !4442, size: 64, offset: 576)
!4442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4443, size: 64)
!4443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "urb", file: !129, line: 1561, size: 1472, elements: !4444)
!4444 = !{!4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4495}
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4443, file: !129, line: 1563, baseType: !3570, size: 32)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "unlinked", scope: !4443, file: !129, line: 1564, baseType: !205, size: 32, offset: 32)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !4443, file: !129, line: 1565, baseType: !189, size: 64, offset: 64)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "use_count", scope: !4443, file: !129, line: 1566, baseType: !792, size: 32, offset: 128)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "reject", scope: !4443, file: !129, line: 1567, baseType: !792, size: 32, offset: 160)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !4443, file: !129, line: 1570, baseType: !194, size: 128, offset: 192)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "anchor_list", scope: !4443, file: !129, line: 1572, baseType: !194, size: 128, offset: 320)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "anchor", scope: !4443, file: !129, line: 1573, baseType: !4453, size: 64, offset: 448)
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 64)
!4454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_anchor", file: !129, line: 1360, size: 320, elements: !4455)
!4455 = !{!4456, !4457, !4458, !4459, !4460}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !4454, file: !129, line: 1361, baseType: !194, size: 128)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4454, file: !129, line: 1362, baseType: !1523, size: 128, offset: 128)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4454, file: !129, line: 1363, baseType: !229, offset: 256)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_wakeups", scope: !4454, file: !129, line: 1364, baseType: !792, size: 32, offset: 256)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "poisoned", scope: !4454, file: !129, line: 1365, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4443, file: !129, line: 1574, baseType: !201, size: 64, offset: 512)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "ep", scope: !4443, file: !129, line: 1575, baseType: !4321, size: 64, offset: 576)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !4443, file: !129, line: 1576, baseType: !7, size: 32, offset: 640)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !4443, file: !129, line: 1577, baseType: !7, size: 32, offset: 672)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4443, file: !129, line: 1578, baseType: !205, size: 32, offset: 704)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_flags", scope: !4443, file: !129, line: 1579, baseType: !7, size: 32, offset: 736)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_buffer", scope: !4443, file: !129, line: 1580, baseType: !189, size: 64, offset: 768)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_dma", scope: !4443, file: !129, line: 1581, baseType: !958, size: 64, offset: 832)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !4443, file: !129, line: 1582, baseType: !4470, size: 64, offset: 896)
!4470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4471, size: 64)
!4471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4472, line: 11, size: 256, elements: !4473)
!4472 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4473 = !{!4474, !4475, !4476, !4477, !4478}
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4471, file: !4472, line: 12, baseType: !372, size: 64)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4471, file: !4472, line: 13, baseType: !7, size: 32, offset: 64)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4471, file: !4472, line: 14, baseType: !7, size: 32, offset: 96)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4471, file: !4472, line: 15, baseType: !958, size: 64, offset: 128)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4471, file: !4472, line: 17, baseType: !7, size: 32, offset: 192)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "num_mapped_sgs", scope: !4443, file: !129, line: 1583, baseType: !205, size: 32, offset: 960)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "num_sgs", scope: !4443, file: !129, line: 1584, baseType: !205, size: 32, offset: 992)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_buffer_length", scope: !4443, file: !129, line: 1585, baseType: !212, size: 32, offset: 1024)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !4443, file: !129, line: 1586, baseType: !212, size: 32, offset: 1056)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "setup_packet", scope: !4443, file: !129, line: 1587, baseType: !4185, size: 64, offset: 1088)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "setup_dma", scope: !4443, file: !129, line: 1588, baseType: !958, size: 64, offset: 1152)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !4443, file: !129, line: 1589, baseType: !205, size: 32, offset: 1216)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "number_of_packets", scope: !4443, file: !129, line: 1590, baseType: !205, size: 32, offset: 1248)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !4443, file: !129, line: 1591, baseType: !205, size: 32, offset: 1280)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !4443, file: !129, line: 1593, baseType: !205, size: 32, offset: 1312)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4443, file: !129, line: 1594, baseType: !189, size: 64, offset: 1344)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4443, file: !129, line: 1595, baseType: !4491, size: 64, offset: 1408)
!4491 = !DIDerivedType(tag: DW_TAG_typedef, name: "usb_complete_t", file: !129, line: 1376, baseType: !4492)
!4492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4493, size: 64)
!4493 = !DISubroutineType(types: !4494)
!4494 = !{null, !4442}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "iso_frame_desc", scope: !4443, file: !129, line: 1596, baseType: !4496, offset: 1472)
!4496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4497, elements: !2524)
!4497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_iso_packet_descriptor", file: !129, line: 1351, size: 128, elements: !4498)
!4498 = !{!4499, !4500, !4501, !4502}
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4497, file: !129, line: 1352, baseType: !7, size: 32)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4497, file: !129, line: 1353, baseType: !7, size: 32, offset: 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !4497, file: !129, line: 1354, baseType: !7, size: 32, offset: 64)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4497, file: !129, line: 1355, baseType: !205, size: 32, offset: 96)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "usbm", scope: !4430, file: !3, line: 104, baseType: !4504, size: 64, offset: 640)
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_memory", file: !3, line: 82, size: 512, elements: !4506)
!4506 = !{!4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "memlist", scope: !4505, file: !3, line: 83, baseType: !194, size: 128)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "vma_use_count", scope: !4505, file: !3, line: 84, baseType: !205, size: 32, offset: 128)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "urb_use_count", scope: !4505, file: !3, line: 85, baseType: !205, size: 32, offset: 160)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4505, file: !3, line: 86, baseType: !212, size: 32, offset: 192)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !4505, file: !3, line: 87, baseType: !189, size: 64, offset: 256)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "dma_handle", scope: !4505, file: !3, line: 88, baseType: !958, size: 64, offset: 320)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !4505, file: !3, line: 89, baseType: !372, size: 64, offset: 384)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !4505, file: !3, line: 90, baseType: !190, size: 64, offset: 448)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "mem_usage", scope: !4430, file: !3, line: 105, baseType: !7, size: 32, offset: 704)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4430, file: !3, line: 106, baseType: !205, size: 32, offset: 736)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "bulk_addr", scope: !4430, file: !3, line: 107, baseType: !1389, size: 8, offset: 768)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "bulk_status", scope: !4430, file: !3, line: 108, baseType: !1389, size: 8, offset: 776)
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4520, size: 64)
!4520 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !198)
!4521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4522, size: 64)
!4522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4520)
!4523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!4525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!4526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4527, size: 64)
!4527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4528)
!4528 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4530, size: 64)
!4530 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4531)
!4531 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !258)
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4533, size: 64)
!4533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdevfs_urb", file: !4534, line: 117, size: 448, elements: !4535)
!4534 = !DIFile(filename: "./include/uapi/linux/usbdevice_fs.h", directory: "/home/lizy2001/genbc/linux")
!4535 = !{!4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544, !4549, !4550, !4551, !4552}
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4533, file: !4534, line: 118, baseType: !471, size: 8)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "endpoint", scope: !4533, file: !4534, line: 119, baseType: !471, size: 8, offset: 8)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4533, file: !4534, line: 120, baseType: !205, size: 32, offset: 32)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4533, file: !4534, line: 121, baseType: !7, size: 32, offset: 64)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4533, file: !4534, line: 122, baseType: !189, size: 64, offset: 128)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_length", scope: !4533, file: !4534, line: 123, baseType: !205, size: 32, offset: 192)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !4533, file: !4534, line: 124, baseType: !205, size: 32, offset: 224)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !4533, file: !4534, line: 125, baseType: !205, size: 32, offset: 256)
!4544 = !DIDerivedType(tag: DW_TAG_member, scope: !4533, file: !4534, line: 126, baseType: !4545, size: 32, offset: 288)
!4545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4533, file: !4534, line: 126, size: 32, elements: !4546)
!4546 = !{!4547, !4548}
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "number_of_packets", scope: !4545, file: !4534, line: 127, baseType: !205, size: 32)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !4545, file: !4534, line: 128, baseType: !7, size: 32)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !4533, file: !4534, line: 130, baseType: !205, size: 32, offset: 320)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "signr", scope: !4533, file: !4534, line: 131, baseType: !7, size: 32, offset: 352)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "usercontext", scope: !4533, file: !4534, line: 133, baseType: !189, size: 64, offset: 384)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "iso_frame_desc", scope: !4533, file: !4534, line: 134, baseType: !4553, offset: 448)
!4553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4554, elements: !1906)
!4554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdevfs_iso_packet_desc", file: !4534, line: 111, size: 96, elements: !4555)
!4555 = !{!4556, !4557, !4558}
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4554, file: !4534, line: 112, baseType: !7, size: 32)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !4554, file: !4534, line: 113, baseType: !7, size: 32, offset: 32)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4554, file: !4534, line: 114, baseType: !7, size: 32, offset: 64)
!4559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4560, size: 64)
!4560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_driver", file: !129, line: 1184, size: 2112, elements: !4561)
!4561 = !{!4562, !4563, !4584, !4588, !4592, !4596, !4600, !4601, !4602, !4603, !4604, !4605, !4610, !4615, !4616, !4617, !4618}
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4560, file: !129, line: 1185, baseType: !285, size: 64)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4560, file: !129, line: 1187, baseType: !4564, size: 64, offset: 64)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = !DISubroutineType(types: !4566)
!4566 = !{!205, !4299, !4567}
!4567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4568, size: 64)
!4568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4569)
!4569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device_id", file: !3663, line: 121, size: 256, elements: !4570)
!4570 = !{!4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583}
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "match_flags", scope: !4569, file: !3663, line: 123, baseType: !898, size: 16)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "idVendor", scope: !4569, file: !3663, line: 126, baseType: !898, size: 16, offset: 16)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "idProduct", scope: !4569, file: !3663, line: 127, baseType: !898, size: 16, offset: 32)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice_lo", scope: !4569, file: !3663, line: 128, baseType: !898, size: 16, offset: 48)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice_hi", scope: !4569, file: !3663, line: 129, baseType: !898, size: 16, offset: 64)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceClass", scope: !4569, file: !3663, line: 132, baseType: !1390, size: 8, offset: 80)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceSubClass", scope: !4569, file: !3663, line: 133, baseType: !1390, size: 8, offset: 88)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceProtocol", scope: !4569, file: !3663, line: 134, baseType: !1390, size: 8, offset: 96)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceClass", scope: !4569, file: !3663, line: 137, baseType: !1390, size: 8, offset: 104)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceSubClass", scope: !4569, file: !3663, line: 138, baseType: !1390, size: 8, offset: 112)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceProtocol", scope: !4569, file: !3663, line: 139, baseType: !1390, size: 8, offset: 120)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceNumber", scope: !4569, file: !3663, line: 142, baseType: !1390, size: 8, offset: 128)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "driver_info", scope: !4569, file: !3663, line: 145, baseType: !3682, size: 64, align: 64, offset: 192)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !4560, file: !129, line: 1190, baseType: !4585, size: 64, offset: 128)
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4586, size: 64)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{null, !4299}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4560, file: !129, line: 1192, baseType: !4589, size: 64, offset: 192)
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 64)
!4590 = !DISubroutineType(types: !4591)
!4591 = !{!205, !4299, !7, !189}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4560, file: !129, line: 1195, baseType: !4593, size: 64, offset: 256)
!4593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4594, size: 64)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{!205, !4299, !3693}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4560, file: !129, line: 1196, baseType: !4597, size: 64, offset: 320)
!4597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4598, size: 64)
!4598 = !DISubroutineType(types: !4599)
!4599 = !{!205, !4299}
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "reset_resume", scope: !4560, file: !129, line: 1197, baseType: !4597, size: 64, offset: 384)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "pre_reset", scope: !4560, file: !129, line: 1199, baseType: !4597, size: 64, offset: 448)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "post_reset", scope: !4560, file: !129, line: 1200, baseType: !4597, size: 64, offset: 512)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4560, file: !129, line: 1202, baseType: !4567, size: 64, offset: 576)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4560, file: !129, line: 1203, baseType: !376, size: 64, offset: 640)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4560, file: !129, line: 1205, baseType: !4606, size: 128, offset: 704)
!4606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_dynids", file: !129, line: 1091, size: 128, elements: !4607)
!4607 = !{!4608, !4609}
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4606, file: !129, line: 1092, baseType: !229)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4606, file: !129, line: 1093, baseType: !194, size: 128)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "drvwrap", scope: !4560, file: !129, line: 1206, baseType: !4611, size: 1216, offset: 832)
!4611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdrv_wrap", file: !129, line: 1113, size: 1216, elements: !4612)
!4612 = !{!4613, !4614}
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4611, file: !129, line: 1114, baseType: !3651, size: 1152)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "for_devices", scope: !4611, file: !129, line: 1115, baseType: !205, size: 32, offset: 1152)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "no_dynamic_id", scope: !4560, file: !129, line: 1207, baseType: !7, size: 1, offset: 2048, flags: DIFlagBitField, extraData: i64 2048)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "supports_autosuspend", scope: !4560, file: !129, line: 1208, baseType: !7, size: 1, offset: 2049, flags: DIFlagBitField, extraData: i64 2048)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "disable_hub_initiated_lpm", scope: !4560, file: !129, line: 1209, baseType: !7, size: 1, offset: 2050, flags: DIFlagBitField, extraData: i64 2048)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "soft_unbind", scope: !4560, file: !129, line: 1210, baseType: !7, size: 1, offset: 2051, flags: DIFlagBitField, extraData: i64 2048)
!4619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!4620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4621, size: 64)
!4621 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4425)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_hcd", file: !183, line: 81, size: 4672, elements: !4624)
!4624 = !{!4625, !4626, !4627, !4628, !4629, !4633, !4634, !4635, !4636, !4637, !4758, !4761, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4782, !4783, !4784, !4812, !4813, !4815, !4816, !4817, !4818, !4822, !4823, !4826}
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4623, file: !183, line: 86, baseType: !274, size: 960)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4623, file: !183, line: 87, baseType: !3570, size: 32, offset: 960)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "product_desc", scope: !4623, file: !183, line: 89, baseType: !285, size: 64, offset: 1024)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !4623, file: !183, line: 90, baseType: !205, size: 32, offset: 1088)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "irq_descr", scope: !4623, file: !183, line: 94, baseType: !4630, size: 192, offset: 1120)
!4630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 192, elements: !4631)
!4631 = !{!4632}
!4632 = !DISubrange(count: 24)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "rh_timer", scope: !4623, file: !183, line: 96, baseType: !3770, size: 320, offset: 1344)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "status_urb", scope: !4623, file: !183, line: 97, baseType: !4442, size: 64, offset: 1664)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_work", scope: !4623, file: !183, line: 99, baseType: !246, size: 256, offset: 1728)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "died_work", scope: !4623, file: !183, line: 101, baseType: !246, size: 256, offset: 1984)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4623, file: !183, line: 106, baseType: !4638, size: 64, offset: 2240)
!4638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 64)
!4639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4640)
!4640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hc_driver", file: !183, line: 249, size: 2880, elements: !4641)
!4641 = !{!4642, !4643, !4644, !4645, !4650, !4651, !4655, !4656, !4660, !4661, !4665, !4666, !4667, !4671, !4675, !4676, !4680, !4684, !4685, !4689, !4693, !4694, !4695, !4699, !4703, !4707, !4711, !4712, !4716, !4720, !4725, !4729, !4733, !4734, !4735, !4736, !4737, !4738, !4742, !4743, !4744, !4748, !4752, !4753, !4754}
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !4640, file: !183, line: 250, baseType: !285, size: 64)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "product_desc", scope: !4640, file: !183, line: 251, baseType: !285, size: 64, offset: 64)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "hcd_priv_size", scope: !4640, file: !183, line: 252, baseType: !369, size: 64, offset: 128)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4640, file: !183, line: 255, baseType: !4646, size: 64, offset: 192)
!4646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4647, size: 64)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{!4649, !4622}
!4649 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !171, line: 17, baseType: !170)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4640, file: !183, line: 257, baseType: !205, size: 32, offset: 256)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4640, file: !183, line: 271, baseType: !4652, size: 64, offset: 320)
!4652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4653, size: 64)
!4653 = !DISubroutineType(types: !4654)
!4654 = !{!205, !4622}
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4640, file: !183, line: 272, baseType: !4652, size: 64, offset: 384)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "pci_suspend", scope: !4640, file: !183, line: 278, baseType: !4657, size: 64, offset: 448)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{!205, !4622, !534}
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "pci_resume", scope: !4640, file: !183, line: 281, baseType: !4657, size: 64, offset: 512)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !4640, file: !183, line: 284, baseType: !4662, size: 64, offset: 576)
!4662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4663, size: 64)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{null, !4622}
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4640, file: !183, line: 287, baseType: !4662, size: 64, offset: 640)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "get_frame_number", scope: !4640, file: !183, line: 290, baseType: !4652, size: 64, offset: 704)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "urb_enqueue", scope: !4640, file: !183, line: 293, baseType: !4668, size: 64, offset: 768)
!4668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4669, size: 64)
!4669 = !DISubroutineType(types: !4670)
!4670 = !{!205, !4622, !4442, !788}
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "urb_dequeue", scope: !4640, file: !183, line: 295, baseType: !4672, size: 64, offset: 832)
!4672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4673, size: 64)
!4673 = !DISubroutineType(types: !4674)
!4674 = !{!205, !4622, !4442, !205}
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "map_urb_for_dma", scope: !4640, file: !183, line: 307, baseType: !4668, size: 64, offset: 896)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_urb_for_dma", scope: !4640, file: !183, line: 309, baseType: !4677, size: 64, offset: 960)
!4677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4678, size: 64)
!4678 = !DISubroutineType(types: !4679)
!4679 = !{null, !4622, !4442}
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "endpoint_disable", scope: !4640, file: !183, line: 312, baseType: !4681, size: 64, offset: 1024)
!4681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4682, size: 64)
!4682 = !DISubroutineType(types: !4683)
!4683 = !{null, !4622, !4321}
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "endpoint_reset", scope: !4640, file: !183, line: 317, baseType: !4681, size: 64, offset: 1088)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "hub_status_data", scope: !4640, file: !183, line: 321, baseType: !4686, size: 64, offset: 1152)
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4687 = !DISubroutineType(types: !4688)
!4688 = !{!205, !4622, !322}
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "hub_control", scope: !4640, file: !183, line: 322, baseType: !4690, size: 64, offset: 1216)
!4690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4691, size: 64)
!4691 = !DISubroutineType(types: !4692)
!4692 = !{!205, !4622, !897, !897, !897, !322, !897}
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "bus_suspend", scope: !4640, file: !183, line: 325, baseType: !4652, size: 64, offset: 1280)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "bus_resume", scope: !4640, file: !183, line: 326, baseType: !4652, size: 64, offset: 1344)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "start_port_reset", scope: !4640, file: !183, line: 327, baseType: !4696, size: 64, offset: 1408)
!4696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4697, size: 64)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{!205, !4622, !7}
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "get_resuming_ports", scope: !4640, file: !183, line: 328, baseType: !4700, size: 64, offset: 1472)
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 64)
!4701 = !DISubroutineType(types: !4702)
!4702 = !{!372, !4622}
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish_port", scope: !4640, file: !183, line: 331, baseType: !4704, size: 64, offset: 1536)
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4705, size: 64)
!4705 = !DISubroutineType(types: !4706)
!4706 = !{null, !4622, !205}
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "port_handed_over", scope: !4640, file: !183, line: 333, baseType: !4708, size: 64, offset: 1600)
!4708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4709, size: 64)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{!205, !4622, !205}
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "clear_tt_buffer_complete", scope: !4640, file: !183, line: 336, baseType: !4681, size: 64, offset: 1664)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dev", scope: !4640, file: !183, line: 341, baseType: !4713, size: 64, offset: 1728)
!4713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4714, size: 64)
!4714 = !DISubroutineType(types: !4715)
!4715 = !{!205, !4622, !201}
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "free_dev", scope: !4640, file: !183, line: 343, baseType: !4717, size: 64, offset: 1792)
!4717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4718, size: 64)
!4718 = !DISubroutineType(types: !4719)
!4719 = !{null, !4622, !201}
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_streams", scope: !4640, file: !183, line: 345, baseType: !4721, size: 64, offset: 1856)
!4721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4722, size: 64)
!4722 = !DISubroutineType(types: !4723)
!4723 = !{!205, !4622, !201, !4724, !7, !7, !788}
!4724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4321, size: 64)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "free_streams", scope: !4640, file: !183, line: 351, baseType: !4726, size: 64, offset: 1920)
!4726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4727, size: 64)
!4727 = !DISubroutineType(types: !4728)
!4728 = !{!205, !4622, !201, !4724, !7, !788}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "add_endpoint", scope: !4640, file: !183, line: 366, baseType: !4730, size: 64, offset: 1984)
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4731, size: 64)
!4731 = !DISubroutineType(types: !4732)
!4732 = !{!205, !4622, !201, !4321}
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "drop_endpoint", scope: !4640, file: !183, line: 369, baseType: !4730, size: 64, offset: 2048)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "check_bandwidth", scope: !4640, file: !183, line: 376, baseType: !4713, size: 64, offset: 2112)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "reset_bandwidth", scope: !4640, file: !183, line: 384, baseType: !4717, size: 64, offset: 2176)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "address_device", scope: !4640, file: !183, line: 386, baseType: !4713, size: 64, offset: 2240)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "enable_device", scope: !4640, file: !183, line: 388, baseType: !4713, size: 64, offset: 2304)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "update_hub_device", scope: !4640, file: !183, line: 392, baseType: !4739, size: 64, offset: 2368)
!4739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4740, size: 64)
!4740 = !DISubroutineType(types: !4741)
!4741 = !{!205, !4622, !201, !221, !788}
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "reset_device", scope: !4640, file: !183, line: 394, baseType: !4713, size: 64, offset: 2432)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "update_device", scope: !4640, file: !183, line: 398, baseType: !4713, size: 64, offset: 2496)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "set_usb2_hw_lpm", scope: !4640, file: !183, line: 399, baseType: !4745, size: 64, offset: 2560)
!4745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4746, size: 64)
!4746 = !DISubroutineType(types: !4747)
!4747 = !{!205, !4622, !201, !205}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "enable_usb3_lpm_timeout", scope: !4640, file: !183, line: 402, baseType: !4749, size: 64, offset: 2624)
!4749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4750, size: 64)
!4750 = !DISubroutineType(types: !4751)
!4751 = !{!205, !4622, !201, !176}
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "disable_usb3_lpm_timeout", scope: !4640, file: !183, line: 407, baseType: !4749, size: 64, offset: 2688)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "find_raw_port_number", scope: !4640, file: !183, line: 409, baseType: !4708, size: 64, offset: 2752)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "port_power", scope: !4640, file: !183, line: 411, baseType: !4755, size: 64, offset: 2816)
!4755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4756, size: 64)
!4756 = !DISubroutineType(types: !4757)
!4757 = !{!205, !4622, !205, !534}
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "usb_phy", scope: !4623, file: !183, line: 112, baseType: !4759, size: 64, offset: 2304)
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4760, size: 64)
!4760 = !DICompositeType(tag: DW_TAG_structure_type, name: "usb_phy", file: !183, line: 112, flags: DIFlagFwdDecl)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "phy_roothub", scope: !4623, file: !183, line: 113, baseType: !4762, size: 64, offset: 2368)
!4762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4763, size: 64)
!4763 = !DICompositeType(tag: DW_TAG_structure_type, name: "usb_phy_roothub", file: !183, line: 113, flags: DIFlagFwdDecl)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4623, file: !183, line: 119, baseType: !372, size: 64, offset: 2432)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "dev_policy", scope: !4623, file: !183, line: 151, baseType: !182, size: 32, offset: 2496)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "rh_registered", scope: !4623, file: !183, line: 154, baseType: !7, size: 1, offset: 2528, flags: DIFlagBitField, extraData: i64 2528)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "rh_pollable", scope: !4623, file: !183, line: 155, baseType: !7, size: 1, offset: 2529, flags: DIFlagBitField, extraData: i64 2528)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !4623, file: !183, line: 156, baseType: !7, size: 1, offset: 2530, flags: DIFlagBitField, extraData: i64 2528)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !4623, file: !183, line: 157, baseType: !7, size: 1, offset: 2531, flags: DIFlagBitField, extraData: i64 2528)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "skip_phy_initialization", scope: !4623, file: !183, line: 163, baseType: !7, size: 1, offset: 2532, flags: DIFlagBitField, extraData: i64 2528)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "uses_new_polling", scope: !4623, file: !183, line: 167, baseType: !7, size: 1, offset: 2533, flags: DIFlagBitField, extraData: i64 2528)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "wireless", scope: !4623, file: !183, line: 168, baseType: !7, size: 1, offset: 2534, flags: DIFlagBitField, extraData: i64 2528)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "has_tt", scope: !4623, file: !183, line: 169, baseType: !7, size: 1, offset: 2535, flags: DIFlagBitField, extraData: i64 2528)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "amd_resume_bug", scope: !4623, file: !183, line: 170, baseType: !7, size: 1, offset: 2536, flags: DIFlagBitField, extraData: i64 2528)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "can_do_streams", scope: !4623, file: !183, line: 171, baseType: !7, size: 1, offset: 2537, flags: DIFlagBitField, extraData: i64 2528)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "tpl_support", scope: !4623, file: !183, line: 172, baseType: !7, size: 1, offset: 2538, flags: DIFlagBitField, extraData: i64 2528)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "cant_recv_wakeups", scope: !4623, file: !183, line: 173, baseType: !7, size: 1, offset: 2539, flags: DIFlagBitField, extraData: i64 2528)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4623, file: !183, line: 176, baseType: !7, size: 32, offset: 2560)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4623, file: !183, line: 177, baseType: !189, size: 64, offset: 2624)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "rsrc_start", scope: !4623, file: !183, line: 178, baseType: !4781, size: 64, offset: 2688)
!4781 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !195, line: 158, baseType: !2318)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "rsrc_len", scope: !4623, file: !183, line: 179, baseType: !4781, size: 64, offset: 2752)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "power_budget", scope: !4623, file: !183, line: 180, baseType: !7, size: 32, offset: 2816)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "high_prio_bh", scope: !4623, file: !183, line: 182, baseType: !4785, size: 576, offset: 2880)
!4785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "giveback_urb_bh", file: !183, line: 67, size: 576, elements: !4786)
!4786 = !{!4787, !4788, !4789, !4790, !4811}
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !4785, file: !183, line: 68, baseType: !534, size: 8)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4785, file: !183, line: 69, baseType: !229, offset: 8)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4785, file: !183, line: 70, baseType: !194, size: 128, offset: 64)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "bh", scope: !4785, file: !183, line: 71, baseType: !4791, size: 320, offset: 192)
!4791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !4792, line: 609, size: 320, elements: !4793)
!4792 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!4793 = !{!4794, !4796, !4797, !4798, !4799, !4810}
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4791, file: !4792, line: 611, baseType: !4795, size: 64)
!4795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4791, size: 64)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4791, file: !4792, line: 612, baseType: !372, size: 64, offset: 64)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4791, file: !4792, line: 613, baseType: !792, size: 32, offset: 128)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !4791, file: !4792, line: 614, baseType: !534, size: 8, offset: 160)
!4799 = !DIDerivedType(tag: DW_TAG_member, scope: !4791, file: !4792, line: 615, baseType: !4800, size: 64, offset: 192)
!4800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4791, file: !4792, line: 615, size: 64, elements: !4801)
!4801 = !{!4802, !4806}
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4800, file: !4792, line: 616, baseType: !4803, size: 64)
!4803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4804, size: 64)
!4804 = !DISubroutineType(types: !4805)
!4805 = !{null, !372}
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4800, file: !4792, line: 617, baseType: !4807, size: 64)
!4807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4808, size: 64)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{null, !4795}
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4791, file: !4792, line: 619, baseType: !372, size: 64, offset: 256)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "completing_ep", scope: !4785, file: !183, line: 72, baseType: !4321, size: 64, offset: 512)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "low_prio_bh", scope: !4623, file: !183, line: 183, baseType: !4785, size: 576, offset: 3456)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "address0_mutex", scope: !4623, file: !183, line: 196, baseType: !4814, size: 64, offset: 4032)
!4814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_mutex", scope: !4623, file: !183, line: 197, baseType: !4814, size: 64, offset: 4096)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "shared_hcd", scope: !4623, file: !183, line: 198, baseType: !4622, size: 64, offset: 4160)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "primary_hcd", scope: !4623, file: !183, line: 199, baseType: !4622, size: 64, offset: 4224)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !4623, file: !183, line: 203, baseType: !4819, size: 256, offset: 4288)
!4819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4820, size: 256, elements: !1193)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 64)
!4821 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_pool", file: !183, line: 203, flags: DIFlagFwdDecl)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4623, file: !183, line: 205, baseType: !205, size: 32, offset: 4544)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "localmem_pool", scope: !4623, file: !183, line: 220, baseType: !4824, size: 64, offset: 4608)
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4825, size: 64)
!4825 = !DICompositeType(tag: DW_TAG_structure_type, name: "gen_pool", file: !183, line: 220, flags: DIFlagFwdDecl)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "hcd_priv", scope: !4623, file: !183, line: 231, baseType: !2523, align: 64, offset: 4672)
!4827 = !{!4828, !4880, !4885, !4890, !4892, !4897, !4902, !4904, !4906, !4911, !4913, !4915, !4917, !0, !4919, !4922, !4924, !4926, !4928, !4930, !4932, !4938, !4941, !4943, !4946, !4948}
!4828 = !DIGlobalVariableExpression(var: !4829, expr: !DIExpression())
!4829 = distinct !DIGlobalVariable(name: "__param_usbfs_snoop", scope: !2, file: !3, line: 112, type: !4830, isLocal: true, isDefinition: true, align: 64)
!4830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4831)
!4831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4832, line: 69, size: 320, elements: !4833)
!4832 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4833 = !{!4834, !4835, !4836, !4852, !4854, !4858, !4859}
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4831, file: !4832, line: 70, baseType: !285, size: 64)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4831, file: !4832, line: 71, baseType: !674, size: 64, offset: 64)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4831, file: !4832, line: 72, baseType: !4837, size: 64, offset: 128)
!4837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4838, size: 64)
!4838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4839)
!4839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4832, line: 47, size: 256, elements: !4840)
!4840 = !{!4841, !4842, !4847, !4851}
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4839, file: !4832, line: 49, baseType: !7, size: 32)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4839, file: !4832, line: 51, baseType: !4843, size: 64, offset: 64)
!4843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4844, size: 64)
!4844 = !DISubroutineType(types: !4845)
!4845 = !{!205, !285, !4846}
!4846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4830, size: 64)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4839, file: !4832, line: 53, baseType: !4848, size: 64, offset: 128)
!4848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4849, size: 64)
!4849 = !DISubroutineType(types: !4850)
!4850 = !{!205, !322, !4846}
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4839, file: !4832, line: 55, baseType: !512, size: 64, offset: 192)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4831, file: !4832, line: 73, baseType: !4853, size: 16, offset: 192)
!4853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !897)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4831, file: !4832, line: 74, baseType: !4855, size: 8, offset: 208)
!4855 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !213, line: 16, baseType: !4856)
!4856 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !215, line: 20, baseType: !4857)
!4857 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4831, file: !4832, line: 75, baseType: !1389, size: 8, offset: 216)
!4859 = !DIDerivedType(tag: DW_TAG_member, scope: !4831, file: !4832, line: 76, baseType: !4860, size: 64, offset: 256)
!4860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4831, file: !4832, line: 76, size: 64, elements: !4861)
!4861 = !{!4862, !4863, !4870}
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4860, file: !4832, line: 77, baseType: !189, size: 64)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4860, file: !4832, line: 78, baseType: !4864, size: 64)
!4864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4865, size: 64)
!4865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4866)
!4866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4832, line: 86, size: 128, elements: !4867)
!4867 = !{!4868, !4869}
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4866, file: !4832, line: 87, baseType: !7, size: 32)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4866, file: !4832, line: 88, baseType: !322, size: 64, offset: 64)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4860, file: !4832, line: 79, baseType: !4871, size: 64)
!4871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4872, size: 64)
!4872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4873)
!4873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4832, line: 92, size: 256, elements: !4874)
!4874 = !{!4875, !4876, !4877, !4878, !4879}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4873, file: !4832, line: 94, baseType: !7, size: 32)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4873, file: !4832, line: 95, baseType: !7, size: 32, offset: 32)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4873, file: !4832, line: 96, baseType: !2876, size: 64, offset: 64)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4873, file: !4832, line: 97, baseType: !4837, size: 64, offset: 128)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4873, file: !4832, line: 98, baseType: !189, size: 64, offset: 192)
!4880 = !DIGlobalVariableExpression(var: !4881, expr: !DIExpression())
!4881 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_usbfs_snooptype247", scope: !2, file: !3, line: 112, type: !4882, isLocal: true, isDefinition: true, align: 8)
!4882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 272, elements: !4883)
!4883 = !{!4884}
!4884 = !DISubrange(count: 34)
!4885 = !DIGlobalVariableExpression(var: !4886, expr: !DIExpression())
!4886 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_usbfs_snoop248", scope: !2, file: !3, line: 113, type: !4887, isLocal: true, isDefinition: true, align: 8)
!4887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 440, elements: !4888)
!4888 = !{!4889}
!4889 = !DISubrange(count: 55)
!4890 = !DIGlobalVariableExpression(var: !4891, expr: !DIExpression())
!4891 = distinct !DIGlobalVariable(name: "__param_usbfs_snoop_max", scope: !2, file: !3, line: 116, type: !4830, isLocal: true, isDefinition: true, align: 64)
!4892 = !DIGlobalVariableExpression(var: !4893, expr: !DIExpression())
!4893 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_usbfs_snoop_maxtype249", scope: !2, file: !3, line: 116, type: !4894, isLocal: true, isDefinition: true, align: 8)
!4894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 304, elements: !4895)
!4895 = !{!4896}
!4896 = !DISubrange(count: 38)
!4897 = !DIGlobalVariableExpression(var: !4898, expr: !DIExpression())
!4898 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_usbfs_snoop_max250", scope: !2, file: !3, line: 117, type: !4899, isLocal: true, isDefinition: true, align: 8)
!4899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 616, elements: !4900)
!4900 = !{!4901}
!4901 = !DISubrange(count: 77)
!4902 = !DIGlobalVariableExpression(var: !4903, expr: !DIExpression())
!4903 = distinct !DIGlobalVariable(name: "__param_usbfs_memory_mb", scope: !2, file: !3, line: 134, type: !4830, isLocal: true, isDefinition: true, align: 64)
!4904 = !DIGlobalVariableExpression(var: !4905, expr: !DIExpression())
!4905 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_usbfs_memory_mbtype251", scope: !2, file: !3, line: 134, type: !4894, isLocal: true, isDefinition: true, align: 8)
!4906 = !DIGlobalVariableExpression(var: !4907, expr: !DIExpression())
!4907 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_usbfs_memory_mb252", scope: !2, file: !3, line: 135, type: !4908, isLocal: true, isDefinition: true, align: 8)
!4908 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 648, elements: !4909)
!4909 = !{!4910}
!4910 = !DISubrange(count: 81)
!4911 = !DIGlobalVariableExpression(var: !4912, expr: !DIExpression())
!4912 = distinct !DIGlobalVariable(name: "usbfs_driver", scope: !2, file: !3, line: 748, type: !4560, isLocal: false, isDefinition: true)
!4913 = !DIGlobalVariableExpression(var: !4914, expr: !DIExpression())
!4914 = distinct !DIGlobalVariable(name: "usbdev_file_operations", scope: !2, file: !3, line: 2730, type: !3057, isLocal: false, isDefinition: true)
!4915 = !DIGlobalVariableExpression(var: !4916, expr: !DIExpression())
!4916 = distinct !DIGlobalVariable(name: "usbfs_snoop", scope: !2, file: !3, line: 111, type: !534, isLocal: true, isDefinition: true)
!4917 = !DIGlobalVariableExpression(var: !4918, expr: !DIExpression())
!4918 = distinct !DIGlobalVariable(name: "usb_device_cdev", scope: !2, file: !3, line: 2779, type: !3304, isLocal: true, isDefinition: true)
!4919 = !DIGlobalVariableExpression(var: !4920, expr: !DIExpression())
!4920 = distinct !DIGlobalVariable(name: "__param_str_usbfs_snoop_max", scope: !2, file: !3, line: 116, type: !4921, isLocal: true, isDefinition: true)
!4921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 192, elements: !4631)
!4922 = !DIGlobalVariableExpression(var: !4923, expr: !DIExpression())
!4923 = distinct !DIGlobalVariable(name: "usbfs_snoop_max", scope: !2, file: !3, line: 115, type: !7, isLocal: true, isDefinition: true)
!4924 = !DIGlobalVariableExpression(var: !4925, expr: !DIExpression())
!4925 = distinct !DIGlobalVariable(name: "__param_str_usbfs_memory_mb", scope: !2, file: !3, line: 134, type: !4921, isLocal: true, isDefinition: true)
!4926 = !DIGlobalVariableExpression(var: !4927, expr: !DIExpression())
!4927 = distinct !DIGlobalVariable(name: "usbfs_memory_mb", scope: !2, file: !3, line: 133, type: !212, isLocal: true, isDefinition: true)
!4928 = !DIGlobalVariableExpression(var: !4929, expr: !DIExpression())
!4929 = distinct !DIGlobalVariable(name: "usbfs_mutex", scope: !2, file: !3, line: 58, type: !1211, isLocal: true, isDefinition: true)
!4930 = !DIGlobalVariableExpression(var: !4931, expr: !DIExpression())
!4931 = distinct !DIGlobalVariable(name: "usbfs_memory_usage", scope: !2, file: !3, line: 141, type: !252, isLocal: true, isDefinition: true)
!4932 = !DIGlobalVariableExpression(var: !4933, expr: !DIExpression())
!4933 = distinct !DIGlobalVariable(name: "types", scope: !4934, file: !3, line: 471, type: !4937, isLocal: true, isDefinition: true)
!4934 = distinct !DISubprogram(name: "snoop_urb", scope: !3, file: !3, line: 466, type: !4935, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!4935 = !DISubroutineType(types: !4936)
!4936 = !{null, !201, !189, !205, !7, !205, !145, !4185, !7}
!4937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 256, elements: !1193)
!4938 = !DIGlobalVariableExpression(var: !4939, expr: !DIExpression())
!4939 = distinct !DIGlobalVariable(name: "dirs", scope: !4934, file: !3, line: 472, type: !4940, isLocal: true, isDefinition: true)
!4940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 128, elements: !269)
!4941 = !DIGlobalVariableExpression(var: !4942, expr: !DIExpression())
!4942 = distinct !DIGlobalVariable(name: "usbdev_vm_ops", scope: !2, file: !3, line: 211, type: !1048, isLocal: true, isDefinition: true)
!4943 = !DIGlobalVariableExpression(var: !4944, expr: !DIExpression())
!4944 = distinct !DIGlobalVariable(name: "__key", scope: !4945, file: !3, line: 1045, type: !689, isLocal: true, isDefinition: true)
!4945 = distinct !DISubprogram(name: "usbdev_open", scope: !3, file: !3, line: 1010, type: !3122, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!4946 = !DIGlobalVariableExpression(var: !4947, expr: !DIExpression())
!4947 = distinct !DIGlobalVariable(name: "__key", scope: !4945, file: !3, line: 1046, type: !689, isLocal: true, isDefinition: true)
!4948 = !DIGlobalVariableExpression(var: !4949, expr: !DIExpression())
!4949 = distinct !DIGlobalVariable(name: "usbdev_nb", scope: !2, file: !3, line: 2775, type: !4950, isLocal: true, isDefinition: true)
!4950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !4951, line: 54, size: 192, elements: !4952)
!4951 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!4952 = !{!4953, !4959, !4960}
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !4950, file: !4951, line: 55, baseType: !4954, size: 64)
!4954 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !4951, line: 51, baseType: !4955)
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 64)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{!205, !4958, !372, !189}
!4958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4950, size: 64)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4950, file: !4951, line: 56, baseType: !4958, size: 64, offset: 64)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !4950, file: !4951, line: 57, baseType: !205, size: 32, offset: 128)
!4961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !286, size: 160, elements: !2394)
!4962 = !{!"rsp"}
!4963 = !{i32 7, !"Dwarf Version", i32 4}
!4964 = !{i32 2, !"Debug Info Version", i32 3}
!4965 = !{i32 1, !"wchar_size", i32 2}
!4966 = !{i32 1, !"Code Model", i32 2}
!4967 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4968 = distinct !DISubprogram(name: "usbfs_notify_suspend", scope: !3, file: !3, line: 730, type: !4969, scopeLine: 731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !243)
!4969 = !DISubroutineType(types: !4970)
!4970 = !{null, !201}
!4971 = !DILocalVariable(name: "udev", arg: 1, scope: !4968, file: !3, line: 730, type: !201)
!4972 = !DILocation(line: 730, column: 46, scope: !4968)
!4973 = !DILocation(line: 733, column: 1, scope: !4968)
!4974 = distinct !DISubprogram(name: "usbfs_notify_resume", scope: !3, file: !3, line: 735, type: !4969, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !243)
!4975 = !DILocalVariable(name: "udev", arg: 1, scope: !4974, file: !3, line: 735, type: !201)
!4976 = !DILocation(line: 735, column: 45, scope: !4974)
!4977 = !DILocalVariable(name: "ps", scope: !4974, file: !3, line: 737, type: !190)
!4978 = !DILocation(line: 737, column: 24, scope: !4974)
!4979 = !DILocation(line: 740, column: 2, scope: !4974)
!4980 = !DILocalVariable(name: "__mptr", scope: !4981, file: !3, line: 741, type: !189)
!4981 = distinct !DILexicalBlock(scope: !4982, file: !3, line: 741, column: 2)
!4982 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 741, column: 2)
!4983 = !DILocation(line: 741, column: 2, scope: !4981)
!4984 = !DILocation(line: 741, column: 2, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 741, column: 2)
!4986 = !DILocation(line: 741, column: 2, scope: !4982)
!4987 = !DILocation(line: 741, column: 2, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4982, file: !3, line: 741, column: 2)
!4989 = !DILocation(line: 742, column: 3, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 741, column: 49)
!4991 = !DILocation(line: 742, column: 3, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4990, file: !3, line: 742, column: 3)
!4993 = !DILocation(line: 742, column: 3, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4992, file: !3, line: 742, column: 3)
!4995 = !DILocation(line: 742, column: 3, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4992, file: !3, line: 742, column: 3)
!4997 = !DILocation(line: 743, column: 3, scope: !4990)
!4998 = !DILocation(line: 744, column: 2, scope: !4990)
!4999 = !DILocalVariable(name: "__mptr", scope: !5000, file: !3, line: 741, type: !189)
!5000 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 741, column: 2)
!5001 = !DILocation(line: 741, column: 2, scope: !5000)
!5002 = !DILocation(line: 741, column: 2, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 741, column: 2)
!5004 = distinct !{!5004, !4986, !5005}
!5005 = !DILocation(line: 744, column: 2, scope: !4982)
!5006 = !DILocation(line: 745, column: 2, scope: !4974)
!5007 = !DILocation(line: 746, column: 1, scope: !4974)
!5008 = distinct !DISubprogram(name: "driver_probe", scope: !3, file: !3, line: 688, type: !4565, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5009 = !DILocalVariable(name: "intf", arg: 1, scope: !5008, file: !3, line: 688, type: !4299)
!5010 = !DILocation(line: 688, column: 47, scope: !5008)
!5011 = !DILocalVariable(name: "id", arg: 2, scope: !5008, file: !3, line: 689, type: !4567)
!5012 = !DILocation(line: 689, column: 32, scope: !5008)
!5013 = !DILocation(line: 691, column: 2, scope: !5008)
!5014 = distinct !DISubprogram(name: "driver_disconnect", scope: !3, file: !3, line: 694, type: !4586, scopeLine: 695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5015 = !DILocalVariable(name: "intf", arg: 1, scope: !5014, file: !3, line: 694, type: !4299)
!5016 = !DILocation(line: 694, column: 53, scope: !5014)
!5017 = !DILocalVariable(name: "ps", scope: !5014, file: !3, line: 696, type: !190)
!5018 = !DILocation(line: 696, column: 24, scope: !5014)
!5019 = !DILocation(line: 696, column: 46, scope: !5014)
!5020 = !DILocation(line: 696, column: 29, scope: !5014)
!5021 = !DILocalVariable(name: "ifnum", scope: !5014, file: !3, line: 697, type: !7)
!5022 = !DILocation(line: 697, column: 15, scope: !5014)
!5023 = !DILocation(line: 697, column: 23, scope: !5014)
!5024 = !DILocation(line: 697, column: 29, scope: !5014)
!5025 = !DILocation(line: 697, column: 41, scope: !5014)
!5026 = !DILocation(line: 697, column: 46, scope: !5014)
!5027 = !DILocation(line: 699, column: 7, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 699, column: 6)
!5029 = !DILocation(line: 699, column: 6, scope: !5014)
!5030 = !DILocation(line: 700, column: 3, scope: !5028)
!5031 = !DILocation(line: 706, column: 6, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 706, column: 6)
!5033 = !DILocation(line: 706, column: 6, scope: !5014)
!5034 = !DILocation(line: 707, column: 13, scope: !5032)
!5035 = !DILocation(line: 707, column: 21, scope: !5032)
!5036 = !DILocation(line: 707, column: 25, scope: !5032)
!5037 = !DILocation(line: 707, column: 3, scope: !5032)
!5038 = !DILocation(line: 709, column: 3, scope: !5032)
!5039 = !DILocation(line: 712, column: 19, scope: !5014)
!5040 = !DILocation(line: 712, column: 2, scope: !5014)
!5041 = !DILocation(line: 715, column: 29, scope: !5014)
!5042 = !DILocation(line: 715, column: 33, scope: !5014)
!5043 = !DILocation(line: 715, column: 2, scope: !5014)
!5044 = !DILocation(line: 716, column: 1, scope: !5014)
!5045 = distinct !DISubprogram(name: "driver_suspend", scope: !3, file: !3, line: 719, type: !4594, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5046 = !DILocalVariable(name: "intf", arg: 1, scope: !5045, file: !3, line: 719, type: !4299)
!5047 = !DILocation(line: 719, column: 49, scope: !5045)
!5048 = !DILocalVariable(name: "msg", arg: 2, scope: !5045, file: !3, line: 719, type: !3693)
!5049 = !DILocation(line: 719, column: 68, scope: !5045)
!5050 = !DILocation(line: 721, column: 2, scope: !5045)
!5051 = distinct !DISubprogram(name: "driver_resume", scope: !3, file: !3, line: 724, type: !4598, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5052 = !DILocalVariable(name: "intf", arg: 1, scope: !5051, file: !3, line: 724, type: !4299)
!5053 = !DILocation(line: 724, column: 48, scope: !5051)
!5054 = !DILocation(line: 726, column: 2, scope: !5051)
!5055 = distinct !DISubprogram(name: "usbdev_read", scope: !3, file: !3, line: 288, type: !3067, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5056 = !DILocalVariable(name: "addr", arg: 1, scope: !5057, file: !5058, line: 138, type: !2320)
!5057 = distinct !DISubprogram(name: "check_copy_size", scope: !5058, file: !5058, line: 138, type: !5059, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5058 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!5059 = !DISubroutineType(types: !5060)
!5060 = !{!534, !2320, !369, !534}
!5061 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !5062)
!5062 = distinct !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !5068)
!5063 = distinct !DILexicalBlock(scope: !5065, file: !5064, line: 199, column: 6)
!5064 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!5065 = distinct !DISubprogram(name: "copy_to_user", scope: !5064, file: !5064, line: 197, type: !5066, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5066 = !DISubroutineType(types: !5067)
!5067 = !{!372, !189, !2320, !372}
!5068 = distinct !DILocation(line: 352, column: 9, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 352, column: 9)
!5070 = distinct !DILexicalBlock(scope: !5071, file: !3, line: 350, column: 34)
!5071 = distinct !DILexicalBlock(scope: !5072, file: !3, line: 350, column: 8)
!5072 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 338, column: 29)
!5073 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 338, column: 7)
!5074 = distinct !DILexicalBlock(scope: !5075, file: !3, line: 333, column: 69)
!5075 = distinct !DILexicalBlock(scope: !5076, file: !3, line: 333, column: 2)
!5076 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 333, column: 2)
!5077 = !DILocalVariable(name: "bytes", arg: 2, scope: !5057, file: !5058, line: 138, type: !369)
!5078 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !5062)
!5079 = !DILocalVariable(name: "is_source", arg: 3, scope: !5057, file: !5058, line: 138, type: !534)
!5080 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !5062)
!5081 = !DILocalVariable(name: "sz", scope: !5057, file: !5058, line: 140, type: !205)
!5082 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !5062)
!5083 = !DILocalVariable(name: "__ret_warn_on", scope: !5084, file: !5058, line: 150, type: !205)
!5084 = distinct !DILexicalBlock(scope: !5085, file: !5058, line: 150, column: 6)
!5085 = distinct !DILexicalBlock(scope: !5057, file: !5058, line: 150, column: 6)
!5086 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !5062)
!5087 = !DILocalVariable(name: "to", arg: 1, scope: !5065, file: !5064, line: 197, type: !189)
!5088 = !DILocation(line: 197, column: 27, scope: !5065, inlinedAt: !5068)
!5089 = !DILocalVariable(name: "from", arg: 2, scope: !5065, file: !5064, line: 197, type: !2320)
!5090 = !DILocation(line: 197, column: 43, scope: !5065, inlinedAt: !5068)
!5091 = !DILocalVariable(name: "n", arg: 3, scope: !5065, file: !5064, line: 197, type: !372)
!5092 = !DILocation(line: 197, column: 63, scope: !5065, inlinedAt: !5068)
!5093 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !5094)
!5094 = distinct !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !5095)
!5095 = distinct !DILocation(line: 321, column: 7, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 321, column: 7)
!5097 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 308, column: 50)
!5098 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 308, column: 6)
!5099 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !5094)
!5100 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !5094)
!5101 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !5094)
!5102 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !5094)
!5103 = !DILocation(line: 197, column: 27, scope: !5065, inlinedAt: !5095)
!5104 = !DILocation(line: 197, column: 43, scope: !5065, inlinedAt: !5095)
!5105 = !DILocation(line: 197, column: 63, scope: !5065, inlinedAt: !5095)
!5106 = !DILocalVariable(name: "file", arg: 1, scope: !5055, file: !3, line: 288, type: !400)
!5107 = !DILocation(line: 288, column: 41, scope: !5055)
!5108 = !DILocalVariable(name: "buf", arg: 2, scope: !5055, file: !3, line: 288, type: !322)
!5109 = !DILocation(line: 288, column: 60, scope: !5055)
!5110 = !DILocalVariable(name: "nbytes", arg: 3, scope: !5055, file: !3, line: 288, type: !369)
!5111 = !DILocation(line: 288, column: 72, scope: !5055)
!5112 = !DILocalVariable(name: "ppos", arg: 4, scope: !5055, file: !3, line: 289, type: !1837)
!5113 = !DILocation(line: 289, column: 15, scope: !5055)
!5114 = !DILocalVariable(name: "ps", scope: !5055, file: !3, line: 291, type: !190)
!5115 = !DILocation(line: 291, column: 24, scope: !5055)
!5116 = !DILocation(line: 291, column: 29, scope: !5055)
!5117 = !DILocation(line: 291, column: 35, scope: !5055)
!5118 = !DILocalVariable(name: "dev", scope: !5055, file: !3, line: 292, type: !201)
!5119 = !DILocation(line: 292, column: 21, scope: !5055)
!5120 = !DILocation(line: 292, column: 27, scope: !5055)
!5121 = !DILocation(line: 292, column: 31, scope: !5055)
!5122 = !DILocalVariable(name: "ret", scope: !5055, file: !3, line: 293, type: !353)
!5123 = !DILocation(line: 293, column: 10, scope: !5055)
!5124 = !DILocalVariable(name: "len", scope: !5055, file: !3, line: 294, type: !7)
!5125 = !DILocation(line: 294, column: 11, scope: !5055)
!5126 = !DILocalVariable(name: "pos", scope: !5055, file: !3, line: 295, type: !575)
!5127 = !DILocation(line: 295, column: 9, scope: !5055)
!5128 = !DILocalVariable(name: "i", scope: !5055, file: !3, line: 296, type: !205)
!5129 = !DILocation(line: 296, column: 6, scope: !5055)
!5130 = !DILocation(line: 298, column: 9, scope: !5055)
!5131 = !DILocation(line: 298, column: 8, scope: !5055)
!5132 = !DILocation(line: 298, column: 6, scope: !5055)
!5133 = !DILocation(line: 299, column: 2, scope: !5055)
!5134 = !DILocation(line: 300, column: 17, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 300, column: 6)
!5136 = !DILocation(line: 300, column: 7, scope: !5135)
!5137 = !DILocation(line: 300, column: 6, scope: !5055)
!5138 = !DILocation(line: 301, column: 7, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 300, column: 22)
!5140 = !DILocation(line: 302, column: 3, scope: !5139)
!5141 = !DILocation(line: 303, column: 13, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 303, column: 13)
!5143 = !DILocation(line: 303, column: 17, scope: !5142)
!5144 = !DILocation(line: 303, column: 13, scope: !5135)
!5145 = !DILocation(line: 304, column: 7, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 303, column: 22)
!5147 = !DILocation(line: 305, column: 3, scope: !5146)
!5148 = !DILocation(line: 308, column: 6, scope: !5098)
!5149 = !DILocation(line: 308, column: 10, scope: !5098)
!5150 = !DILocation(line: 308, column: 6, scope: !5055)
!5151 = !DILocalVariable(name: "temp_desc", scope: !5097, file: !3, line: 310, type: !4191)
!5152 = !DILocation(line: 310, column: 32, scope: !5097)
!5153 = !DILocation(line: 312, column: 3, scope: !5097)
!5154 = !DILocation(line: 312, column: 23, scope: !5097)
!5155 = !DILocation(line: 312, column: 28, scope: !5097)
!5156 = !DILocation(line: 313, column: 3, scope: !5097)
!5157 = !DILocation(line: 313, column: 3, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 313, column: 3)
!5159 = !DILocation(line: 314, column: 3, scope: !5097)
!5160 = !DILocation(line: 314, column: 3, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 314, column: 3)
!5162 = !DILocation(line: 315, column: 3, scope: !5097)
!5163 = !DILocation(line: 315, column: 3, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 315, column: 3)
!5165 = !DILocation(line: 316, column: 3, scope: !5097)
!5166 = !DILocation(line: 316, column: 3, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 316, column: 3)
!5168 = !DILocation(line: 318, column: 48, scope: !5097)
!5169 = !DILocation(line: 318, column: 46, scope: !5097)
!5170 = !DILocation(line: 318, column: 9, scope: !5097)
!5171 = !DILocation(line: 318, column: 7, scope: !5097)
!5172 = !DILocation(line: 319, column: 7, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 319, column: 7)
!5174 = !DILocation(line: 319, column: 13, scope: !5173)
!5175 = !DILocation(line: 319, column: 11, scope: !5173)
!5176 = !DILocation(line: 319, column: 7, scope: !5097)
!5177 = !DILocation(line: 320, column: 10, scope: !5173)
!5178 = !DILocation(line: 320, column: 8, scope: !5173)
!5179 = !DILocation(line: 320, column: 4, scope: !5173)
!5180 = !DILocation(line: 321, column: 20, scope: !5096)
!5181 = !DILocation(line: 321, column: 26, scope: !5096)
!5182 = !DILocation(line: 321, column: 48, scope: !5096)
!5183 = !DILocation(line: 321, column: 46, scope: !5096)
!5184 = !DILocation(line: 321, column: 53, scope: !5096)
!5185 = !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !5095)
!5186 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !5094)
!5187 = distinct !DILexicalBlock(scope: !5057, file: !5058, line: 141, column: 6)
!5188 = !DILocation(line: 0, scope: !5187, inlinedAt: !5094)
!5189 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !5094)
!5190 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !5094)
!5191 = distinct !DILexicalBlock(scope: !5192, file: !5058, line: 142, column: 7)
!5192 = distinct !DILexicalBlock(scope: !5187, file: !5058, line: 141, column: 39)
!5193 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !5094)
!5194 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !5094)
!5195 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !5094)
!5196 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !5094)
!5197 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !5094)
!5198 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !5094)
!5199 = distinct !DILexicalBlock(scope: !5191, file: !5058, line: 144, column: 12)
!5200 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !5094)
!5201 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !5094)
!5202 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !5094)
!5203 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !5094)
!5204 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !5094)
!5205 = distinct !DILexicalBlock(scope: !5084, file: !5058, line: 150, column: 6)
!5206 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !5094)
!5207 = distinct !DILexicalBlock(scope: !5208, file: !5058, line: 150, column: 6)
!5208 = distinct !DILexicalBlock(scope: !5205, file: !5058, line: 150, column: 6)
!5209 = !{i32 -2145472822, i32 -2145472793, i32 -2145472747, i32 -2145472689, i32 -2145472635, i32 -2145472581, i32 -2145472526, i32 -2145472495}
!5210 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !5094)
!5211 = distinct !DILexicalBlock(scope: !5208, file: !5058, line: 150, column: 6)
!5212 = !{i32 -2145472075, i32 -2145472068, i32 -2145472016, i32 -2145471985, i32 -2145471955}
!5213 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !5094)
!5214 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !5094)
!5215 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !5094)
!5216 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !5094)
!5217 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !5094)
!5218 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !5094)
!5219 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !5094)
!5220 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !5094)
!5221 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !5094)
!5222 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !5094)
!5223 = !DILocation(line: 199, column: 6, scope: !5065, inlinedAt: !5095)
!5224 = !DILocation(line: 200, column: 21, scope: !5063, inlinedAt: !5095)
!5225 = !DILocation(line: 200, column: 25, scope: !5063, inlinedAt: !5095)
!5226 = !DILocation(line: 200, column: 31, scope: !5063, inlinedAt: !5095)
!5227 = !DILocation(line: 200, column: 7, scope: !5063, inlinedAt: !5095)
!5228 = !DILocation(line: 200, column: 5, scope: !5063, inlinedAt: !5095)
!5229 = !DILocation(line: 200, column: 3, scope: !5063, inlinedAt: !5095)
!5230 = !DILocation(line: 201, column: 9, scope: !5065, inlinedAt: !5095)
!5231 = !DILocation(line: 321, column: 7, scope: !5096)
!5232 = !DILocation(line: 321, column: 7, scope: !5097)
!5233 = !DILocation(line: 322, column: 8, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5096, file: !3, line: 321, column: 59)
!5235 = !DILocation(line: 323, column: 4, scope: !5234)
!5236 = !DILocation(line: 326, column: 12, scope: !5097)
!5237 = !DILocation(line: 326, column: 4, scope: !5097)
!5238 = !DILocation(line: 326, column: 9, scope: !5097)
!5239 = !DILocation(line: 327, column: 10, scope: !5097)
!5240 = !DILocation(line: 327, column: 7, scope: !5097)
!5241 = !DILocation(line: 328, column: 13, scope: !5097)
!5242 = !DILocation(line: 328, column: 10, scope: !5097)
!5243 = !DILocation(line: 329, column: 10, scope: !5097)
!5244 = !DILocation(line: 329, column: 7, scope: !5097)
!5245 = !DILocation(line: 330, column: 2, scope: !5097)
!5246 = !DILocation(line: 332, column: 6, scope: !5055)
!5247 = !DILocation(line: 333, column: 9, scope: !5076)
!5248 = !DILocation(line: 333, column: 7, scope: !5076)
!5249 = !DILocation(line: 333, column: 14, scope: !5075)
!5250 = !DILocation(line: 333, column: 21, scope: !5075)
!5251 = !DILocation(line: 333, column: 24, scope: !5075)
!5252 = !DILocation(line: 333, column: 28, scope: !5075)
!5253 = !DILocation(line: 333, column: 33, scope: !5075)
!5254 = !DILocation(line: 333, column: 44, scope: !5075)
!5255 = !DILocation(line: 333, column: 26, scope: !5075)
!5256 = !DILocation(line: 0, scope: !5075)
!5257 = !DILocation(line: 333, column: 2, scope: !5076)
!5258 = !DILocalVariable(name: "config", scope: !5074, file: !3, line: 334, type: !4523)
!5259 = !DILocation(line: 334, column: 33, scope: !5074)
!5260 = !DILocation(line: 335, column: 36, scope: !5074)
!5261 = !DILocation(line: 335, column: 41, scope: !5074)
!5262 = !DILocation(line: 335, column: 56, scope: !5074)
!5263 = !DILocation(line: 335, column: 4, scope: !5074)
!5264 = !DILocalVariable(name: "length", scope: !5074, file: !3, line: 336, type: !7)
!5265 = !DILocation(line: 336, column: 16, scope: !5074)
!5266 = !DILocation(line: 336, column: 25, scope: !5074)
!5267 = !DILocation(line: 338, column: 8, scope: !5073)
!5268 = !DILocation(line: 338, column: 7, scope: !5073)
!5269 = !DILocation(line: 338, column: 15, scope: !5073)
!5270 = !DILocation(line: 338, column: 21, scope: !5073)
!5271 = !DILocation(line: 338, column: 19, scope: !5073)
!5272 = !DILocation(line: 338, column: 13, scope: !5073)
!5273 = !DILocation(line: 338, column: 7, scope: !5074)
!5274 = !DILocalVariable(name: "alloclen", scope: !5072, file: !3, line: 342, type: !7)
!5275 = !DILocation(line: 342, column: 13, scope: !5072)
!5276 = !DILocation(line: 343, column: 5, scope: !5072)
!5277 = !DILocation(line: 345, column: 10, scope: !5072)
!5278 = !DILocation(line: 345, column: 21, scope: !5072)
!5279 = !DILocation(line: 345, column: 20, scope: !5072)
!5280 = !DILocation(line: 345, column: 28, scope: !5072)
!5281 = !DILocation(line: 345, column: 26, scope: !5072)
!5282 = !DILocation(line: 345, column: 17, scope: !5072)
!5283 = !DILocation(line: 345, column: 8, scope: !5072)
!5284 = !DILocation(line: 346, column: 8, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5072, file: !3, line: 346, column: 8)
!5286 = !DILocation(line: 346, column: 14, scope: !5285)
!5287 = !DILocation(line: 346, column: 12, scope: !5285)
!5288 = !DILocation(line: 346, column: 8, scope: !5072)
!5289 = !DILocation(line: 347, column: 11, scope: !5285)
!5290 = !DILocation(line: 347, column: 9, scope: !5285)
!5291 = !DILocation(line: 347, column: 5, scope: !5285)
!5292 = !DILocation(line: 350, column: 8, scope: !5071)
!5293 = !DILocation(line: 350, column: 21, scope: !5071)
!5294 = !DILocation(line: 350, column: 20, scope: !5071)
!5295 = !DILocation(line: 350, column: 28, scope: !5071)
!5296 = !DILocation(line: 350, column: 26, scope: !5071)
!5297 = !DILocation(line: 350, column: 17, scope: !5071)
!5298 = !DILocation(line: 350, column: 8, scope: !5072)
!5299 = !DILocation(line: 351, column: 19, scope: !5070)
!5300 = !DILocation(line: 351, column: 18, scope: !5070)
!5301 = !DILocation(line: 351, column: 26, scope: !5070)
!5302 = !DILocation(line: 351, column: 24, scope: !5070)
!5303 = !DILocation(line: 351, column: 14, scope: !5070)
!5304 = !DILocation(line: 352, column: 22, scope: !5069)
!5305 = !DILocation(line: 353, column: 9, scope: !5069)
!5306 = !DILocation(line: 353, column: 14, scope: !5069)
!5307 = !DILocation(line: 353, column: 29, scope: !5069)
!5308 = !DILocation(line: 353, column: 36, scope: !5069)
!5309 = !DILocation(line: 353, column: 35, scope: !5069)
!5310 = !DILocation(line: 353, column: 43, scope: !5069)
!5311 = !DILocation(line: 353, column: 41, scope: !5069)
!5312 = !DILocation(line: 353, column: 32, scope: !5069)
!5313 = !DILocalVariable(name: "__UNIQUE_ID___x254", scope: !5314, file: !3, line: 354, type: !7)
!5314 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 354, column: 9)
!5315 = !DILocation(line: 354, column: 9, scope: !5314)
!5316 = !DILocalVariable(name: "__UNIQUE_ID___y255", scope: !5314, file: !3, line: 354, type: !7)
!5317 = !DILocation(line: 354, column: 9, scope: !5069)
!5318 = !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !5068)
!5319 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !5062)
!5320 = !DILocation(line: 0, scope: !5187, inlinedAt: !5062)
!5321 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !5062)
!5322 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !5062)
!5323 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !5062)
!5324 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !5062)
!5325 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !5062)
!5326 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !5062)
!5327 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !5062)
!5328 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !5062)
!5329 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !5062)
!5330 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !5062)
!5331 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !5062)
!5332 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !5062)
!5333 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !5062)
!5334 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !5062)
!5335 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !5062)
!5336 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !5062)
!5337 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !5062)
!5338 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !5062)
!5339 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !5062)
!5340 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !5062)
!5341 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !5062)
!5342 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !5062)
!5343 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !5062)
!5344 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !5062)
!5345 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !5062)
!5346 = !DILocation(line: 199, column: 6, scope: !5065, inlinedAt: !5068)
!5347 = !DILocation(line: 200, column: 21, scope: !5063, inlinedAt: !5068)
!5348 = !DILocation(line: 200, column: 25, scope: !5063, inlinedAt: !5068)
!5349 = !DILocation(line: 200, column: 31, scope: !5063, inlinedAt: !5068)
!5350 = !DILocation(line: 200, column: 7, scope: !5063, inlinedAt: !5068)
!5351 = !DILocation(line: 200, column: 5, scope: !5063, inlinedAt: !5068)
!5352 = !DILocation(line: 200, column: 3, scope: !5063, inlinedAt: !5068)
!5353 = !DILocation(line: 201, column: 9, scope: !5065, inlinedAt: !5068)
!5354 = !DILocation(line: 352, column: 9, scope: !5069)
!5355 = !DILocation(line: 352, column: 9, scope: !5070)
!5356 = !DILocation(line: 355, column: 10, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5069, file: !3, line: 354, column: 30)
!5358 = !DILocation(line: 356, column: 6, scope: !5357)
!5359 = !DILocation(line: 358, column: 4, scope: !5070)
!5360 = !DILocation(line: 360, column: 13, scope: !5072)
!5361 = !DILocation(line: 360, column: 5, scope: !5072)
!5362 = !DILocation(line: 360, column: 10, scope: !5072)
!5363 = !DILocation(line: 361, column: 11, scope: !5072)
!5364 = !DILocation(line: 361, column: 8, scope: !5072)
!5365 = !DILocation(line: 362, column: 14, scope: !5072)
!5366 = !DILocation(line: 362, column: 11, scope: !5072)
!5367 = !DILocation(line: 363, column: 11, scope: !5072)
!5368 = !DILocation(line: 363, column: 8, scope: !5072)
!5369 = !DILocation(line: 364, column: 3, scope: !5072)
!5370 = !DILocation(line: 366, column: 10, scope: !5074)
!5371 = !DILocation(line: 366, column: 7, scope: !5074)
!5372 = !DILocation(line: 367, column: 2, scope: !5074)
!5373 = !DILocation(line: 333, column: 65, scope: !5075)
!5374 = !DILocation(line: 333, column: 2, scope: !5075)
!5375 = distinct !{!5375, !5257, !5376}
!5376 = !DILocation(line: 367, column: 2, scope: !5076)
!5377 = !DILabel(scope: !5055, name: "err", file: !3, line: 369)
!5378 = !DILocation(line: 369, column: 1, scope: !5055)
!5379 = !DILocation(line: 370, column: 2, scope: !5055)
!5380 = !DILocation(line: 371, column: 9, scope: !5055)
!5381 = !DILocation(line: 371, column: 2, scope: !5055)
!5382 = distinct !DISubprogram(name: "usbdev_poll", scope: !3, file: !3, line: 2714, type: !3095, scopeLine: 2716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5383 = !DILocalVariable(name: "file", arg: 1, scope: !5382, file: !3, line: 2714, type: !400)
!5384 = !DILocation(line: 2714, column: 42, scope: !5382)
!5385 = !DILocalVariable(name: "wait", arg: 2, scope: !5382, file: !3, line: 2715, type: !3099)
!5386 = !DILocation(line: 2715, column: 31, scope: !5382)
!5387 = !DILocalVariable(name: "ps", scope: !5382, file: !3, line: 2717, type: !190)
!5388 = !DILocation(line: 2717, column: 24, scope: !5382)
!5389 = !DILocation(line: 2717, column: 29, scope: !5382)
!5390 = !DILocation(line: 2717, column: 35, scope: !5382)
!5391 = !DILocalVariable(name: "mask", scope: !5382, file: !3, line: 2718, type: !3097)
!5392 = !DILocation(line: 2718, column: 11, scope: !5382)
!5393 = !DILocation(line: 2720, column: 12, scope: !5382)
!5394 = !DILocation(line: 2720, column: 19, scope: !5382)
!5395 = !DILocation(line: 2720, column: 23, scope: !5382)
!5396 = !DILocation(line: 2720, column: 29, scope: !5382)
!5397 = !DILocation(line: 2720, column: 2, scope: !5382)
!5398 = !DILocation(line: 2721, column: 6, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 2721, column: 6)
!5400 = !DILocation(line: 2721, column: 12, scope: !5399)
!5401 = !DILocation(line: 2721, column: 19, scope: !5399)
!5402 = !DILocation(line: 2721, column: 33, scope: !5399)
!5403 = !DILocation(line: 2721, column: 49, scope: !5399)
!5404 = !DILocation(line: 2721, column: 53, scope: !5399)
!5405 = !DILocation(line: 2721, column: 37, scope: !5399)
!5406 = !DILocation(line: 2721, column: 6, scope: !5382)
!5407 = !DILocation(line: 2722, column: 8, scope: !5399)
!5408 = !DILocation(line: 2722, column: 3, scope: !5399)
!5409 = !DILocation(line: 2723, column: 17, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 2723, column: 6)
!5411 = !DILocation(line: 2723, column: 7, scope: !5410)
!5412 = !DILocation(line: 2723, column: 6, scope: !5382)
!5413 = !DILocation(line: 2724, column: 8, scope: !5410)
!5414 = !DILocation(line: 2724, column: 3, scope: !5410)
!5415 = !DILocation(line: 2725, column: 18, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 2725, column: 6)
!5417 = !DILocation(line: 2725, column: 22, scope: !5416)
!5418 = !DILocation(line: 2725, column: 6, scope: !5416)
!5419 = !DILocation(line: 2725, column: 6, scope: !5382)
!5420 = !DILocation(line: 2726, column: 8, scope: !5416)
!5421 = !DILocation(line: 2726, column: 3, scope: !5416)
!5422 = !DILocation(line: 2727, column: 9, scope: !5382)
!5423 = !DILocation(line: 2727, column: 2, scope: !5382)
!5424 = distinct !DISubprogram(name: "usbdev_ioctl", scope: !3, file: !3, line: 2703, type: !3112, scopeLine: 2705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5425 = !DILocalVariable(name: "file", arg: 1, scope: !5424, file: !3, line: 2703, type: !400)
!5426 = !DILocation(line: 2703, column: 39, scope: !5424)
!5427 = !DILocalVariable(name: "cmd", arg: 2, scope: !5424, file: !3, line: 2703, type: !7)
!5428 = !DILocation(line: 2703, column: 58, scope: !5424)
!5429 = !DILocalVariable(name: "arg", arg: 3, scope: !5424, file: !3, line: 2704, type: !372)
!5430 = !DILocation(line: 2704, column: 18, scope: !5424)
!5431 = !DILocalVariable(name: "ret", scope: !5424, file: !3, line: 2706, type: !205)
!5432 = !DILocation(line: 2706, column: 6, scope: !5424)
!5433 = !DILocation(line: 2708, column: 24, scope: !5424)
!5434 = !DILocation(line: 2708, column: 30, scope: !5424)
!5435 = !DILocation(line: 2708, column: 50, scope: !5424)
!5436 = !DILocation(line: 2708, column: 35, scope: !5424)
!5437 = !DILocation(line: 2708, column: 8, scope: !5424)
!5438 = !DILocation(line: 2708, column: 6, scope: !5424)
!5439 = !DILocation(line: 2710, column: 9, scope: !5424)
!5440 = !DILocation(line: 2710, column: 2, scope: !5424)
!5441 = distinct !DISubprogram(name: "usbdev_mmap", scope: !3, file: !3, line: 216, type: !3117, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5442 = !DILocalVariable(name: "lock", arg: 1, scope: !5443, file: !5444, line: 407, type: !1102)
!5443 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5444, file: !5444, line: 407, type: !5445, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5444 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5445 = !DISubroutineType(types: !5446)
!5446 = !{null, !1102, !372}
!5447 = !DILocation(line: 407, column: 64, scope: !5443, inlinedAt: !5448)
!5448 = distinct !DILocation(line: 276, column: 2, scope: !5441)
!5449 = !DILocalVariable(name: "flags", arg: 2, scope: !5443, file: !5444, line: 407, type: !372)
!5450 = !DILocation(line: 407, column: 84, scope: !5443, inlinedAt: !5448)
!5451 = !DILocalVariable(name: "lock", arg: 1, scope: !5452, file: !5444, line: 327, type: !1102)
!5452 = distinct !DISubprogram(name: "spinlock_check", scope: !5444, file: !5444, line: 327, type: !5453, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5453 = !DISubroutineType(types: !5454)
!5454 = !{!5455, !1102}
!5455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!5456 = !DILocation(line: 327, column: 67, scope: !5452, inlinedAt: !5457)
!5457 = distinct !DILocation(line: 274, column: 2, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5459, file: !3, line: 274, column: 2)
!5459 = distinct !DILexicalBlock(scope: !5460, file: !3, line: 274, column: 2)
!5460 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 274, column: 2)
!5461 = distinct !DILexicalBlock(scope: !5462, file: !3, line: 274, column: 2)
!5462 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 274, column: 2)
!5463 = !DILocalVariable(name: "file", arg: 1, scope: !5441, file: !3, line: 216, type: !400)
!5464 = !DILocation(line: 216, column: 37, scope: !5441)
!5465 = !DILocalVariable(name: "vma", arg: 2, scope: !5441, file: !3, line: 216, type: !1019)
!5466 = !DILocation(line: 216, column: 66, scope: !5441)
!5467 = !DILocalVariable(name: "usbm", scope: !5441, file: !3, line: 218, type: !4504)
!5468 = !DILocation(line: 218, column: 21, scope: !5441)
!5469 = !DILocalVariable(name: "ps", scope: !5441, file: !3, line: 219, type: !190)
!5470 = !DILocation(line: 219, column: 24, scope: !5441)
!5471 = !DILocation(line: 219, column: 29, scope: !5441)
!5472 = !DILocation(line: 219, column: 35, scope: !5441)
!5473 = !DILocalVariable(name: "hcd", scope: !5441, file: !3, line: 220, type: !4622)
!5474 = !DILocation(line: 220, column: 18, scope: !5441)
!5475 = !DILocation(line: 220, column: 35, scope: !5441)
!5476 = !DILocation(line: 220, column: 39, scope: !5441)
!5477 = !DILocation(line: 220, column: 44, scope: !5441)
!5478 = !DILocation(line: 220, column: 24, scope: !5441)
!5479 = !DILocalVariable(name: "size", scope: !5441, file: !3, line: 221, type: !369)
!5480 = !DILocation(line: 221, column: 9, scope: !5441)
!5481 = !DILocation(line: 221, column: 16, scope: !5441)
!5482 = !DILocation(line: 221, column: 21, scope: !5441)
!5483 = !DILocation(line: 221, column: 30, scope: !5441)
!5484 = !DILocation(line: 221, column: 35, scope: !5441)
!5485 = !DILocation(line: 221, column: 28, scope: !5441)
!5486 = !DILocalVariable(name: "mem", scope: !5441, file: !3, line: 222, type: !189)
!5487 = !DILocation(line: 222, column: 8, scope: !5441)
!5488 = !DILocalVariable(name: "flags", scope: !5441, file: !3, line: 223, type: !372)
!5489 = !DILocation(line: 223, column: 16, scope: !5441)
!5490 = !DILocalVariable(name: "dma_handle", scope: !5441, file: !3, line: 224, type: !958)
!5491 = !DILocation(line: 224, column: 13, scope: !5441)
!5492 = !DILocalVariable(name: "ret", scope: !5441, file: !3, line: 225, type: !205)
!5493 = !DILocation(line: 225, column: 6, scope: !5441)
!5494 = !DILocation(line: 227, column: 36, scope: !5441)
!5495 = !DILocation(line: 227, column: 41, scope: !5441)
!5496 = !DILocation(line: 227, column: 8, scope: !5441)
!5497 = !DILocation(line: 227, column: 6, scope: !5441)
!5498 = !DILocation(line: 228, column: 6, scope: !5499)
!5499 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 228, column: 6)
!5500 = !DILocation(line: 228, column: 6, scope: !5441)
!5501 = !DILocation(line: 229, column: 3, scope: !5499)
!5502 = !DILocation(line: 231, column: 9, scope: !5441)
!5503 = !DILocation(line: 231, column: 7, scope: !5441)
!5504 = !DILocation(line: 232, column: 7, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 232, column: 6)
!5506 = !DILocation(line: 232, column: 6, scope: !5441)
!5507 = !DILocation(line: 233, column: 7, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 232, column: 13)
!5509 = !DILocation(line: 234, column: 3, scope: !5508)
!5510 = !DILocation(line: 237, column: 27, scope: !5441)
!5511 = !DILocation(line: 237, column: 31, scope: !5441)
!5512 = !DILocation(line: 237, column: 36, scope: !5441)
!5513 = !DILocation(line: 237, column: 8, scope: !5441)
!5514 = !DILocation(line: 237, column: 6, scope: !5441)
!5515 = !DILocation(line: 239, column: 7, scope: !5516)
!5516 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 239, column: 6)
!5517 = !DILocation(line: 239, column: 6, scope: !5441)
!5518 = !DILocation(line: 240, column: 7, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5516, file: !3, line: 239, column: 12)
!5520 = !DILocation(line: 241, column: 3, scope: !5519)
!5521 = !DILocation(line: 244, column: 9, scope: !5441)
!5522 = !DILocation(line: 244, column: 17, scope: !5441)
!5523 = !DILocation(line: 244, column: 2, scope: !5441)
!5524 = !DILocation(line: 246, column: 14, scope: !5441)
!5525 = !DILocation(line: 246, column: 2, scope: !5441)
!5526 = !DILocation(line: 246, column: 8, scope: !5441)
!5527 = !DILocation(line: 246, column: 12, scope: !5441)
!5528 = !DILocation(line: 247, column: 21, scope: !5441)
!5529 = !DILocation(line: 247, column: 2, scope: !5441)
!5530 = !DILocation(line: 247, column: 8, scope: !5441)
!5531 = !DILocation(line: 247, column: 19, scope: !5441)
!5532 = !DILocation(line: 248, column: 15, scope: !5441)
!5533 = !DILocation(line: 248, column: 2, scope: !5441)
!5534 = !DILocation(line: 248, column: 8, scope: !5441)
!5535 = !DILocation(line: 248, column: 13, scope: !5441)
!5536 = !DILocation(line: 249, column: 13, scope: !5441)
!5537 = !DILocation(line: 249, column: 2, scope: !5441)
!5538 = !DILocation(line: 249, column: 8, scope: !5441)
!5539 = !DILocation(line: 249, column: 11, scope: !5441)
!5540 = !DILocation(line: 250, column: 19, scope: !5441)
!5541 = !DILocation(line: 250, column: 24, scope: !5441)
!5542 = !DILocation(line: 250, column: 2, scope: !5441)
!5543 = !DILocation(line: 250, column: 8, scope: !5441)
!5544 = !DILocation(line: 250, column: 17, scope: !5441)
!5545 = !DILocation(line: 251, column: 2, scope: !5441)
!5546 = !DILocation(line: 251, column: 8, scope: !5441)
!5547 = !DILocation(line: 251, column: 22, scope: !5441)
!5548 = !DILocation(line: 252, column: 18, scope: !5441)
!5549 = !DILocation(line: 252, column: 24, scope: !5441)
!5550 = !DILocation(line: 252, column: 2, scope: !5441)
!5551 = !DILocation(line: 254, column: 6, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 254, column: 6)
!5553 = !DILocation(line: 254, column: 11, scope: !5552)
!5554 = !DILocation(line: 254, column: 25, scope: !5552)
!5555 = !DILocation(line: 254, column: 42, scope: !5552)
!5556 = !DILocation(line: 254, column: 29, scope: !5552)
!5557 = !DILocation(line: 254, column: 6, scope: !5441)
!5558 = !DILocation(line: 255, column: 23, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 255, column: 7)
!5560 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 254, column: 48)
!5561 = !DILocation(line: 255, column: 28, scope: !5559)
!5562 = !DILocation(line: 255, column: 33, scope: !5559)
!5563 = !DILocation(line: 256, column: 22, scope: !5559)
!5564 = !DILocation(line: 256, column: 28, scope: !5559)
!5565 = !DILocation(line: 256, column: 9, scope: !5559)
!5566 = !DILocation(line: 256, column: 33, scope: !5559)
!5567 = !DILocation(line: 257, column: 9, scope: !5559)
!5568 = !DILocation(line: 257, column: 15, scope: !5559)
!5569 = !DILocation(line: 257, column: 20, scope: !5559)
!5570 = !DILocation(line: 255, column: 7, scope: !5559)
!5571 = !DILocation(line: 257, column: 34, scope: !5559)
!5572 = !DILocation(line: 255, column: 7, scope: !5560)
!5573 = !DILocation(line: 258, column: 29, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5559, file: !3, line: 257, column: 39)
!5575 = !DILocation(line: 258, column: 36, scope: !5574)
!5576 = !DILocation(line: 258, column: 42, scope: !5574)
!5577 = !DILocation(line: 258, column: 4, scope: !5574)
!5578 = !DILocation(line: 259, column: 4, scope: !5574)
!5579 = !DILocation(line: 261, column: 2, scope: !5560)
!5580 = !DILocation(line: 262, column: 7, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 262, column: 7)
!5582 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 261, column: 9)
!5583 = !DILocation(line: 262, column: 7, scope: !5582)
!5584 = !DILocation(line: 264, column: 29, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 263, column: 18)
!5586 = !DILocation(line: 264, column: 36, scope: !5585)
!5587 = !DILocation(line: 264, column: 42, scope: !5585)
!5588 = !DILocation(line: 264, column: 4, scope: !5585)
!5589 = !DILocation(line: 265, column: 4, scope: !5585)
!5590 = !DILocation(line: 269, column: 2, scope: !5441)
!5591 = !DILocation(line: 269, column: 7, scope: !5441)
!5592 = !DILocation(line: 269, column: 16, scope: !5441)
!5593 = !DILocation(line: 270, column: 2, scope: !5441)
!5594 = !DILocation(line: 270, column: 7, scope: !5441)
!5595 = !DILocation(line: 270, column: 16, scope: !5441)
!5596 = !DILocation(line: 271, column: 2, scope: !5441)
!5597 = !DILocation(line: 271, column: 7, scope: !5441)
!5598 = !DILocation(line: 271, column: 14, scope: !5441)
!5599 = !DILocation(line: 272, column: 25, scope: !5441)
!5600 = !DILocation(line: 272, column: 2, scope: !5441)
!5601 = !DILocation(line: 272, column: 7, scope: !5441)
!5602 = !DILocation(line: 272, column: 23, scope: !5441)
!5603 = !DILocation(line: 274, column: 2, scope: !5441)
!5604 = !DILocation(line: 274, column: 2, scope: !5462)
!5605 = !DILocalVariable(name: "__dummy", scope: !5606, file: !3, line: 274, type: !372)
!5606 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 274, column: 2)
!5607 = !DILocation(line: 274, column: 2, scope: !5606)
!5608 = !DILocalVariable(name: "__dummy2", scope: !5606, file: !3, line: 274, type: !372)
!5609 = !DILocation(line: 274, column: 2, scope: !5461)
!5610 = !DILocation(line: 274, column: 2, scope: !5460)
!5611 = !DILocation(line: 274, column: 2, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5460, file: !3, line: 274, column: 2)
!5613 = !DILocalVariable(name: "__dummy", scope: !5614, file: !3, line: 274, type: !372)
!5614 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 274, column: 2)
!5615 = distinct !DILexicalBlock(scope: !5612, file: !3, line: 274, column: 2)
!5616 = !DILocation(line: 274, column: 2, scope: !5614)
!5617 = !DILocalVariable(name: "__dummy2", scope: !5614, file: !3, line: 274, type: !372)
!5618 = !DILocation(line: 274, column: 2, scope: !5615)
!5619 = !DILocation(line: 274, column: 2, scope: !5459)
!5620 = !{i32 -2141010533}
!5621 = !DILocation(line: 274, column: 2, scope: !5458)
!5622 = !DILocation(line: 329, column: 10, scope: !5452, inlinedAt: !5457)
!5623 = !DILocation(line: 329, column: 16, scope: !5452, inlinedAt: !5457)
!5624 = !DILocation(line: 275, column: 17, scope: !5441)
!5625 = !DILocation(line: 275, column: 23, scope: !5441)
!5626 = !DILocation(line: 275, column: 33, scope: !5441)
!5627 = !DILocation(line: 275, column: 37, scope: !5441)
!5628 = !DILocation(line: 275, column: 2, scope: !5441)
!5629 = !DILocation(line: 276, column: 26, scope: !5441)
!5630 = !DILocation(line: 276, column: 30, scope: !5441)
!5631 = !DILocation(line: 276, column: 36, scope: !5441)
!5632 = !DILocalVariable(name: "__dummy", scope: !5633, file: !5444, line: 409, type: !372)
!5633 = distinct !DILexicalBlock(scope: !5634, file: !5444, line: 409, column: 2)
!5634 = distinct !DILexicalBlock(scope: !5443, file: !5444, line: 409, column: 2)
!5635 = !DILocation(line: 409, column: 2, scope: !5633, inlinedAt: !5448)
!5636 = !DILocalVariable(name: "__dummy2", scope: !5633, file: !5444, line: 409, type: !372)
!5637 = !DILocalVariable(name: "__dummy", scope: !5638, file: !5444, line: 409, type: !372)
!5638 = distinct !DILexicalBlock(scope: !5639, file: !5444, line: 409, column: 2)
!5639 = distinct !DILexicalBlock(scope: !5640, file: !5444, line: 409, column: 2)
!5640 = distinct !DILexicalBlock(scope: !5641, file: !5444, line: 409, column: 2)
!5641 = distinct !DILexicalBlock(scope: !5634, file: !5444, line: 409, column: 2)
!5642 = !DILocation(line: 409, column: 2, scope: !5638, inlinedAt: !5448)
!5643 = !DILocalVariable(name: "__dummy2", scope: !5638, file: !5444, line: 409, type: !372)
!5644 = !DILocation(line: 409, column: 2, scope: !5639, inlinedAt: !5448)
!5645 = !DILocation(line: 409, column: 2, scope: !5646, inlinedAt: !5448)
!5646 = distinct !DILexicalBlock(scope: !5641, file: !5444, line: 409, column: 2)
!5647 = !{i32 -2145390380}
!5648 = !DILocation(line: 409, column: 2, scope: !5649, inlinedAt: !5448)
!5649 = distinct !DILexicalBlock(scope: !5646, file: !5444, line: 409, column: 2)
!5650 = !DILocation(line: 278, column: 2, scope: !5441)
!5651 = !DILabel(scope: !5441, name: "error_free_usbm", file: !3, line: 280)
!5652 = !DILocation(line: 280, column: 1, scope: !5441)
!5653 = !DILocation(line: 281, column: 8, scope: !5441)
!5654 = !DILocation(line: 281, column: 2, scope: !5441)
!5655 = !DILabel(scope: !5441, name: "error_decrease_mem", file: !3, line: 282)
!5656 = !DILocation(line: 282, column: 1, scope: !5441)
!5657 = !DILocation(line: 283, column: 30, scope: !5441)
!5658 = !DILocation(line: 283, column: 35, scope: !5441)
!5659 = !DILocation(line: 283, column: 2, scope: !5441)
!5660 = !DILabel(scope: !5441, name: "error", file: !3, line: 284)
!5661 = !DILocation(line: 284, column: 1, scope: !5441)
!5662 = !DILocation(line: 285, column: 9, scope: !5441)
!5663 = !DILocation(line: 285, column: 2, scope: !5441)
!5664 = !DILocation(line: 286, column: 1, scope: !5441)
!5665 = !DILocalVariable(name: "pscr_ret__", scope: !5666, file: !5667, line: 15, type: !1254)
!5666 = distinct !DILexicalBlock(scope: !5668, file: !5667, line: 15, column: 9)
!5667 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!5668 = distinct !DISubprogram(name: "get_current", scope: !5667, file: !5667, line: 13, type: !5669, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5669 = !DISubroutineType(types: !5670)
!5670 = !{!1254}
!5671 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !5672)
!5672 = distinct !DILocation(line: 1055, column: 2, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 1055, column: 2)
!5674 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 1055, column: 2)
!5675 = !DILocalVariable(name: "__vpp_verify", scope: !5676, file: !5667, line: 15, type: !2320)
!5676 = distinct !DILexicalBlock(scope: !5666, file: !5667, line: 15, column: 9)
!5677 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !5672)
!5678 = !DILocalVariable(name: "pfo_val__", scope: !5679, file: !5667, line: 15, type: !465)
!5679 = distinct !DILexicalBlock(scope: !5666, file: !5667, line: 15, column: 9)
!5680 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !5672)
!5681 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !5682)
!5682 = distinct !DILocation(line: 1055, column: 2, scope: !5673)
!5683 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !5682)
!5684 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !5682)
!5685 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !5686)
!5686 = distinct !DILocation(line: 1048, column: 13, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 1048, column: 13)
!5688 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !5686)
!5689 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !5686)
!5690 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !5691)
!5691 = distinct !DILocation(line: 1047, column: 34, scope: !4945)
!5692 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !5691)
!5693 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !5691)
!5694 = !DILocation(line: 327, column: 67, scope: !5452, inlinedAt: !5695)
!5695 = distinct !DILocation(line: 1040, column: 2, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 1040, column: 2)
!5697 = !DILocalVariable(name: "inode", arg: 1, scope: !4945, file: !3, line: 1010, type: !473)
!5698 = !DILocation(line: 1010, column: 38, scope: !4945)
!5699 = !DILocalVariable(name: "file", arg: 2, scope: !4945, file: !3, line: 1010, type: !400)
!5700 = !DILocation(line: 1010, column: 58, scope: !4945)
!5701 = !DILocalVariable(name: "dev", scope: !4945, file: !3, line: 1012, type: !201)
!5702 = !DILocation(line: 1012, column: 21, scope: !4945)
!5703 = !DILocalVariable(name: "ps", scope: !4945, file: !3, line: 1013, type: !190)
!5704 = !DILocation(line: 1013, column: 24, scope: !4945)
!5705 = !DILocalVariable(name: "ret", scope: !4945, file: !3, line: 1014, type: !205)
!5706 = !DILocation(line: 1014, column: 6, scope: !4945)
!5707 = !DILocation(line: 1016, column: 6, scope: !4945)
!5708 = !DILocation(line: 1017, column: 7, scope: !4945)
!5709 = !DILocation(line: 1017, column: 5, scope: !4945)
!5710 = !DILocation(line: 1018, column: 7, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 1018, column: 6)
!5712 = !DILocation(line: 1018, column: 6, scope: !4945)
!5713 = !DILocation(line: 1019, column: 3, scope: !5711)
!5714 = !DILocation(line: 1021, column: 6, scope: !4945)
!5715 = !DILocation(line: 1024, column: 13, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 1024, column: 6)
!5717 = !DILocation(line: 1024, column: 6, scope: !5716)
!5718 = !DILocation(line: 1024, column: 20, scope: !5716)
!5719 = !DILocation(line: 1024, column: 6, scope: !4945)
!5720 = !DILocation(line: 1025, column: 31, scope: !5716)
!5721 = !DILocation(line: 1025, column: 38, scope: !5716)
!5722 = !DILocation(line: 1025, column: 9, scope: !5716)
!5723 = !DILocation(line: 1025, column: 7, scope: !5716)
!5724 = !DILocation(line: 1025, column: 3, scope: !5716)
!5725 = !DILocation(line: 1026, column: 7, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 1026, column: 6)
!5727 = !DILocation(line: 1026, column: 6, scope: !4945)
!5728 = !DILocation(line: 1027, column: 3, scope: !5726)
!5729 = !DILocation(line: 1029, column: 2, scope: !4945)
!5730 = !DILocation(line: 1030, column: 6, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 1030, column: 6)
!5732 = !DILocation(line: 1030, column: 11, scope: !5731)
!5733 = !DILocation(line: 1030, column: 17, scope: !5731)
!5734 = !DILocation(line: 1030, column: 6, scope: !4945)
!5735 = !DILocation(line: 1031, column: 3, scope: !5731)
!5736 = !DILocation(line: 1033, column: 30, scope: !4945)
!5737 = !DILocation(line: 1033, column: 8, scope: !4945)
!5738 = !DILocation(line: 1033, column: 6, scope: !4945)
!5739 = !DILocation(line: 1034, column: 6, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 1034, column: 6)
!5741 = !DILocation(line: 1034, column: 6, scope: !4945)
!5742 = !DILocation(line: 1035, column: 3, scope: !5740)
!5743 = !DILocation(line: 1037, column: 12, scope: !4945)
!5744 = !DILocation(line: 1037, column: 2, scope: !4945)
!5745 = !DILocation(line: 1037, column: 6, scope: !4945)
!5746 = !DILocation(line: 1037, column: 10, scope: !4945)
!5747 = !DILocation(line: 1038, column: 13, scope: !4945)
!5748 = !DILocation(line: 1038, column: 2, scope: !4945)
!5749 = !DILocation(line: 1038, column: 6, scope: !4945)
!5750 = !DILocation(line: 1038, column: 11, scope: !4945)
!5751 = !DILocation(line: 1039, column: 2, scope: !4945)
!5752 = !DILocation(line: 1039, column: 6, scope: !4945)
!5753 = !DILocation(line: 1039, column: 29, scope: !4945)
!5754 = !DILocation(line: 1040, column: 2, scope: !4945)
!5755 = !DILocation(line: 1040, column: 2, scope: !5696)
!5756 = !DILocation(line: 329, column: 10, scope: !5452, inlinedAt: !5695)
!5757 = !DILocation(line: 329, column: 16, scope: !5452, inlinedAt: !5695)
!5758 = !DILocation(line: 1041, column: 18, scope: !4945)
!5759 = !DILocation(line: 1041, column: 22, scope: !4945)
!5760 = !DILocation(line: 1041, column: 2, scope: !4945)
!5761 = !DILocation(line: 1042, column: 18, scope: !4945)
!5762 = !DILocation(line: 1042, column: 22, scope: !4945)
!5763 = !DILocation(line: 1042, column: 2, scope: !4945)
!5764 = !DILocation(line: 1043, column: 18, scope: !4945)
!5765 = !DILocation(line: 1043, column: 22, scope: !4945)
!5766 = !DILocation(line: 1043, column: 2, scope: !4945)
!5767 = !DILocation(line: 1044, column: 18, scope: !4945)
!5768 = !DILocation(line: 1044, column: 22, scope: !4945)
!5769 = !DILocation(line: 1044, column: 2, scope: !4945)
!5770 = !DILocation(line: 1045, column: 2, scope: !4945)
!5771 = !DILocation(line: 1045, column: 2, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 1045, column: 2)
!5773 = !DILocation(line: 1046, column: 2, scope: !4945)
!5774 = !DILocation(line: 1046, column: 2, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 1046, column: 2)
!5776 = !{i32 -2146557061}
!5777 = !DILocation(line: 1047, column: 25, scope: !4945)
!5778 = !DILocation(line: 1047, column: 17, scope: !4945)
!5779 = !DILocation(line: 1047, column: 2, scope: !4945)
!5780 = !DILocation(line: 1047, column: 6, scope: !4945)
!5781 = !DILocation(line: 1047, column: 15, scope: !4945)
!5782 = !DILocation(line: 1048, column: 13, scope: !5687)
!5783 = !DILocation(line: 1048, column: 13, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 1048, column: 13)
!5785 = !DILocation(line: 1048, column: 13, scope: !4945)
!5786 = !DILocation(line: 1048, column: 2, scope: !4945)
!5787 = !DILocation(line: 1048, column: 6, scope: !4945)
!5788 = !DILocation(line: 1048, column: 11, scope: !4945)
!5789 = !DILocation(line: 1049, column: 2, scope: !4945)
!5790 = !{i32 -2140964628}
!5791 = !DILocation(line: 1052, column: 17, scope: !4945)
!5792 = !DILocation(line: 1052, column: 21, scope: !4945)
!5793 = !DILocation(line: 1052, column: 28, scope: !4945)
!5794 = !DILocation(line: 1052, column: 33, scope: !4945)
!5795 = !DILocation(line: 1052, column: 2, scope: !4945)
!5796 = !DILocation(line: 1053, column: 23, scope: !4945)
!5797 = !DILocation(line: 1053, column: 2, scope: !4945)
!5798 = !DILocation(line: 1053, column: 8, scope: !4945)
!5799 = !DILocation(line: 1053, column: 21, scope: !4945)
!5800 = !DILocation(line: 1054, column: 2, scope: !4945)
!5801 = !DILocation(line: 1055, column: 2, scope: !4945)
!5802 = !DILocation(line: 1055, column: 2, scope: !5673)
!5803 = !DILocation(line: 1055, column: 2, scope: !5674)
!5804 = !DILocation(line: 1057, column: 9, scope: !4945)
!5805 = !DILocation(line: 1057, column: 2, scope: !4945)
!5806 = !DILabel(scope: !4945, name: "out_unlock_device", file: !3, line: 1059)
!5807 = !DILocation(line: 1059, column: 2, scope: !4945)
!5808 = !DILocation(line: 1060, column: 2, scope: !4945)
!5809 = !DILocation(line: 1061, column: 14, scope: !4945)
!5810 = !DILocation(line: 1061, column: 2, scope: !4945)
!5811 = !DILabel(scope: !4945, name: "out_free_ps", file: !3, line: 1062)
!5812 = !DILocation(line: 1062, column: 2, scope: !4945)
!5813 = !DILocation(line: 1063, column: 8, scope: !4945)
!5814 = !DILocation(line: 1063, column: 2, scope: !4945)
!5815 = !DILocation(line: 1064, column: 9, scope: !4945)
!5816 = !DILocation(line: 1064, column: 2, scope: !4945)
!5817 = !DILocation(line: 1065, column: 1, scope: !4945)
!5818 = distinct !DISubprogram(name: "usbdev_release", scope: !3, file: !3, line: 1067, type: !3122, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5819 = !DILocalVariable(name: "inode", arg: 1, scope: !5818, file: !3, line: 1067, type: !473)
!5820 = !DILocation(line: 1067, column: 41, scope: !5818)
!5821 = !DILocalVariable(name: "file", arg: 2, scope: !5818, file: !3, line: 1067, type: !400)
!5822 = !DILocation(line: 1067, column: 61, scope: !5818)
!5823 = !DILocalVariable(name: "ps", scope: !5818, file: !3, line: 1069, type: !190)
!5824 = !DILocation(line: 1069, column: 24, scope: !5818)
!5825 = !DILocation(line: 1069, column: 29, scope: !5818)
!5826 = !DILocation(line: 1069, column: 35, scope: !5818)
!5827 = !DILocalVariable(name: "dev", scope: !5818, file: !3, line: 1070, type: !201)
!5828 = !DILocation(line: 1070, column: 21, scope: !5818)
!5829 = !DILocation(line: 1070, column: 27, scope: !5818)
!5830 = !DILocation(line: 1070, column: 31, scope: !5818)
!5831 = !DILocalVariable(name: "ifnum", scope: !5818, file: !3, line: 1071, type: !7)
!5832 = !DILocation(line: 1071, column: 15, scope: !5818)
!5833 = !DILocalVariable(name: "as", scope: !5818, file: !3, line: 1072, type: !4429)
!5834 = !DILocation(line: 1072, column: 16, scope: !5818)
!5835 = !DILocation(line: 1074, column: 2, scope: !5818)
!5836 = !DILocation(line: 1075, column: 28, scope: !5818)
!5837 = !DILocation(line: 1075, column: 33, scope: !5818)
!5838 = !DILocation(line: 1075, column: 2, scope: !5818)
!5839 = !DILocation(line: 1078, column: 2, scope: !5818)
!5840 = !DILocation(line: 1079, column: 17, scope: !5818)
!5841 = !DILocation(line: 1079, column: 21, scope: !5818)
!5842 = !DILocation(line: 1079, column: 2, scope: !5818)
!5843 = !DILocation(line: 1080, column: 2, scope: !5818)
!5844 = !DILocation(line: 1082, column: 13, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 1082, column: 2)
!5846 = !DILocation(line: 1082, column: 7, scope: !5845)
!5847 = !DILocation(line: 1082, column: 18, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 1082, column: 2)
!5849 = !DILocation(line: 1082, column: 22, scope: !5848)
!5850 = !DILocation(line: 1082, column: 32, scope: !5848)
!5851 = !DILocation(line: 1082, column: 35, scope: !5848)
!5852 = !DILocation(line: 1082, column: 41, scope: !5848)
!5853 = !DILocation(line: 0, scope: !5848)
!5854 = !DILocation(line: 1082, column: 2, scope: !5845)
!5855 = !DILocation(line: 1084, column: 16, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 1084, column: 7)
!5857 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 1083, column: 13)
!5858 = !DILocation(line: 1084, column: 24, scope: !5856)
!5859 = !DILocation(line: 1084, column: 28, scope: !5856)
!5860 = !DILocation(line: 1084, column: 7, scope: !5856)
!5861 = !DILocation(line: 1084, column: 7, scope: !5857)
!5862 = !DILocation(line: 1085, column: 16, scope: !5856)
!5863 = !DILocation(line: 1085, column: 20, scope: !5856)
!5864 = !DILocation(line: 1085, column: 4, scope: !5856)
!5865 = !DILocation(line: 1086, column: 2, scope: !5857)
!5866 = !DILocation(line: 1083, column: 9, scope: !5848)
!5867 = !DILocation(line: 1082, column: 2, scope: !5848)
!5868 = distinct !{!5868, !5854, !5869}
!5869 = !DILocation(line: 1086, column: 2, scope: !5845)
!5870 = !DILocation(line: 1087, column: 20, scope: !5818)
!5871 = !DILocation(line: 1087, column: 2, scope: !5818)
!5872 = !DILocation(line: 1088, column: 7, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 1088, column: 6)
!5874 = !DILocation(line: 1088, column: 11, scope: !5873)
!5875 = !DILocation(line: 1088, column: 6, scope: !5818)
!5876 = !DILocation(line: 1089, column: 26, scope: !5873)
!5877 = !DILocation(line: 1089, column: 3, scope: !5873)
!5878 = !DILocation(line: 1090, column: 2, scope: !5818)
!5879 = !DILocation(line: 1091, column: 14, scope: !5818)
!5880 = !DILocation(line: 1091, column: 2, scope: !5818)
!5881 = !DILocation(line: 1092, column: 10, scope: !5818)
!5882 = !DILocation(line: 1092, column: 14, scope: !5818)
!5883 = !DILocation(line: 1092, column: 2, scope: !5818)
!5884 = !DILocation(line: 1093, column: 11, scope: !5818)
!5885 = !DILocation(line: 1093, column: 15, scope: !5818)
!5886 = !DILocation(line: 1093, column: 2, scope: !5818)
!5887 = !DILocation(line: 1095, column: 26, scope: !5818)
!5888 = !DILocation(line: 1095, column: 7, scope: !5818)
!5889 = !DILocation(line: 1095, column: 5, scope: !5818)
!5890 = !DILocation(line: 1096, column: 2, scope: !5818)
!5891 = !DILocation(line: 1096, column: 9, scope: !5818)
!5892 = !DILocation(line: 1097, column: 14, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 1096, column: 13)
!5894 = !DILocation(line: 1097, column: 3, scope: !5893)
!5895 = !DILocation(line: 1098, column: 27, scope: !5893)
!5896 = !DILocation(line: 1098, column: 8, scope: !5893)
!5897 = !DILocation(line: 1098, column: 6, scope: !5893)
!5898 = distinct !{!5898, !5890, !5899}
!5899 = !DILocation(line: 1099, column: 2, scope: !5818)
!5900 = !DILocation(line: 1101, column: 8, scope: !5818)
!5901 = !DILocation(line: 1101, column: 2, scope: !5818)
!5902 = !DILocation(line: 1102, column: 2, scope: !5818)
!5903 = distinct !DISubprogram(name: "usb_devio_init", scope: !3, file: !3, line: 2781, type: !5904, scopeLine: 2782, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5904 = !DISubroutineType(types: !5905)
!5905 = !{!205}
!5906 = !DILocalVariable(name: "retval", scope: !5903, file: !3, line: 2783, type: !205)
!5907 = !DILocation(line: 2783, column: 6, scope: !5903)
!5908 = !DILocation(line: 2785, column: 11, scope: !5903)
!5909 = !DILocation(line: 2785, column: 9, scope: !5903)
!5910 = !DILocation(line: 2787, column: 6, scope: !5911)
!5911 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 2787, column: 6)
!5912 = !DILocation(line: 2787, column: 6, scope: !5903)
!5913 = !DILocation(line: 2788, column: 3, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5911, file: !3, line: 2787, column: 14)
!5915 = !DILocation(line: 2789, column: 3, scope: !5914)
!5916 = !DILocation(line: 2791, column: 2, scope: !5903)
!5917 = !DILocation(line: 2792, column: 11, scope: !5903)
!5918 = !DILocation(line: 2792, column: 9, scope: !5903)
!5919 = !DILocation(line: 2793, column: 6, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 2793, column: 6)
!5921 = !DILocation(line: 2793, column: 6, scope: !5903)
!5922 = !DILocation(line: 2794, column: 3, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 2793, column: 14)
!5924 = !DILocation(line: 2796, column: 3, scope: !5923)
!5925 = !DILocation(line: 2798, column: 2, scope: !5903)
!5926 = !DILabel(scope: !5903, name: "out", file: !3, line: 2799)
!5927 = !DILocation(line: 2799, column: 1, scope: !5903)
!5928 = !DILocation(line: 2800, column: 9, scope: !5903)
!5929 = !DILocation(line: 2800, column: 2, scope: !5903)
!5930 = !DILabel(scope: !5903, name: "error_cdev", file: !3, line: 2802)
!5931 = !DILocation(line: 2802, column: 1, scope: !5903)
!5932 = !DILocation(line: 2803, column: 2, scope: !5903)
!5933 = !DILocation(line: 2804, column: 2, scope: !5903)
!5934 = distinct !DISubprogram(name: "usb_devio_cleanup", scope: !3, file: !3, line: 2807, type: !2082, scopeLine: 2808, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5935 = !DILocation(line: 2809, column: 2, scope: !5934)
!5936 = !DILocation(line: 2810, column: 2, scope: !5934)
!5937 = !DILocation(line: 2811, column: 2, scope: !5934)
!5938 = !DILocation(line: 2812, column: 1, scope: !5934)
!5939 = distinct !DISubprogram(name: "usb_get_intfdata", scope: !129, file: !129, line: 263, type: !5940, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5940 = !DISubroutineType(types: !5941)
!5941 = !{!189, !4299}
!5942 = !DILocalVariable(name: "intf", arg: 1, scope: !5939, file: !129, line: 263, type: !4299)
!5943 = !DILocation(line: 263, column: 60, scope: !5939)
!5944 = !DILocation(line: 265, column: 26, scope: !5939)
!5945 = !DILocation(line: 265, column: 32, scope: !5939)
!5946 = !DILocation(line: 265, column: 9, scope: !5939)
!5947 = !DILocation(line: 265, column: 2, scope: !5939)
!5948 = distinct !DISubprogram(name: "clear_bit", scope: !5949, file: !5949, line: 39, type: !5950, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5949 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!5950 = !DISubroutineType(types: !5951)
!5951 = !{null, !357, !5952}
!5952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5953, size: 64)
!5953 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !372)
!5954 = !DILocalVariable(name: "nr", arg: 1, scope: !5955, file: !5956, line: 72, type: !357)
!5955 = distinct !DISubprogram(name: "arch_clear_bit", scope: !5956, file: !5956, line: 72, type: !5950, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5956 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!5957 = !DILocation(line: 72, column: 21, scope: !5955, inlinedAt: !5958)
!5958 = distinct !DILocation(line: 42, column: 2, scope: !5948)
!5959 = !DILocalVariable(name: "addr", arg: 2, scope: !5955, file: !5956, line: 72, type: !5952)
!5960 = !DILocation(line: 72, column: 49, scope: !5955, inlinedAt: !5958)
!5961 = !DILocalVariable(name: "v", arg: 1, scope: !5962, file: !5963, line: 84, type: !5966)
!5962 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !5963, file: !5963, line: 84, type: !5964, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!5963 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5964 = !DISubroutineType(types: !5965)
!5965 = !{null, !5966, !369}
!5966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5967, size: 64)
!5967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5968)
!5968 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5969 = !DILocation(line: 84, column: 74, scope: !5962, inlinedAt: !5970)
!5970 = distinct !DILocation(line: 41, column: 2, scope: !5948)
!5971 = !DILocalVariable(name: "size", arg: 2, scope: !5962, file: !5963, line: 84, type: !369)
!5972 = !DILocation(line: 84, column: 84, scope: !5962, inlinedAt: !5970)
!5973 = !DILocalVariable(name: "nr", arg: 1, scope: !5948, file: !5949, line: 39, type: !357)
!5974 = !DILocation(line: 39, column: 35, scope: !5948)
!5975 = !DILocalVariable(name: "addr", arg: 2, scope: !5948, file: !5949, line: 39, type: !5952)
!5976 = !DILocation(line: 39, column: 63, scope: !5948)
!5977 = !DILocation(line: 41, column: 26, scope: !5948)
!5978 = !DILocation(line: 41, column: 33, scope: !5948)
!5979 = !DILocation(line: 41, column: 31, scope: !5948)
!5980 = !DILocation(line: 86, column: 20, scope: !5962, inlinedAt: !5970)
!5981 = !DILocation(line: 86, column: 23, scope: !5962, inlinedAt: !5970)
!5982 = !DILocation(line: 86, column: 2, scope: !5962, inlinedAt: !5970)
!5983 = !DILocation(line: 87, column: 2, scope: !5962, inlinedAt: !5970)
!5984 = !DILocation(line: 42, column: 17, scope: !5948)
!5985 = !DILocation(line: 42, column: 21, scope: !5948)
!5986 = !DILocation(line: 74, column: 27, scope: !5987, inlinedAt: !5958)
!5987 = distinct !DILexicalBlock(scope: !5955, file: !5956, line: 74, column: 6)
!5988 = !DILocation(line: 74, column: 6, scope: !5987, inlinedAt: !5958)
!5989 = !DILocation(line: 74, column: 6, scope: !5955, inlinedAt: !5958)
!5990 = !DILocation(line: 76, column: 6, scope: !5991, inlinedAt: !5958)
!5991 = distinct !DILexicalBlock(scope: !5987, file: !5956, line: 74, column: 32)
!5992 = !DILocation(line: 77, column: 13, scope: !5991, inlinedAt: !5958)
!5993 = !DILocation(line: 77, column: 12, scope: !5991, inlinedAt: !5958)
!5994 = !DILocation(line: 75, column: 3, scope: !5991, inlinedAt: !5958)
!5995 = !{i32 -2146941892}
!5996 = !DILocation(line: 78, column: 2, scope: !5991, inlinedAt: !5958)
!5997 = !DILocation(line: 80, column: 8, scope: !5998, inlinedAt: !5958)
!5998 = distinct !DILexicalBlock(scope: !5987, file: !5956, line: 78, column: 9)
!5999 = !DILocation(line: 80, column: 32, scope: !5998, inlinedAt: !5958)
!6000 = !DILocation(line: 79, column: 3, scope: !5998, inlinedAt: !5958)
!6001 = !{i32 -2146941760}
!6002 = !DILocation(line: 43, column: 1, scope: !5948)
!6003 = distinct !DISubprogram(name: "usb_set_intfdata", scope: !129, file: !129, line: 268, type: !6004, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6004 = !DISubroutineType(types: !6005)
!6005 = !{null, !4299, !189}
!6006 = !DILocalVariable(name: "intf", arg: 1, scope: !6003, file: !129, line: 268, type: !4299)
!6007 = !DILocation(line: 268, column: 59, scope: !6003)
!6008 = !DILocalVariable(name: "data", arg: 2, scope: !6003, file: !129, line: 268, type: !189)
!6009 = !DILocation(line: 268, column: 71, scope: !6003)
!6010 = !DILocation(line: 270, column: 19, scope: !6003)
!6011 = !DILocation(line: 270, column: 25, scope: !6003)
!6012 = !DILocation(line: 270, column: 30, scope: !6003)
!6013 = !DILocation(line: 270, column: 2, scope: !6003)
!6014 = !DILocation(line: 271, column: 1, scope: !6003)
!6015 = distinct !DISubprogram(name: "destroy_async_on_interface", scope: !3, file: !3, line: 662, type: !6016, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6016 = !DISubroutineType(types: !6017)
!6017 = !{null, !190, !7}
!6018 = !DILocation(line: 407, column: 64, scope: !5443, inlinedAt: !6019)
!6019 = distinct !DILocation(line: 673, column: 2, scope: !6015)
!6020 = !DILocation(line: 407, column: 84, scope: !5443, inlinedAt: !6019)
!6021 = !DILocation(line: 327, column: 67, scope: !5452, inlinedAt: !6022)
!6022 = distinct !DILocation(line: 669, column: 2, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !6024, file: !3, line: 669, column: 2)
!6024 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 669, column: 2)
!6025 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 669, column: 2)
!6026 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 669, column: 2)
!6027 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 669, column: 2)
!6028 = !DILocalVariable(name: "ps", arg: 1, scope: !6015, file: !3, line: 662, type: !190)
!6029 = !DILocation(line: 662, column: 62, scope: !6015)
!6030 = !DILocalVariable(name: "ifnum", arg: 2, scope: !6015, file: !3, line: 663, type: !7)
!6031 = !DILocation(line: 663, column: 25, scope: !6015)
!6032 = !DILocalVariable(name: "p", scope: !6015, file: !3, line: 665, type: !198)
!6033 = !DILocation(line: 665, column: 20, scope: !6015)
!6034 = !DILocalVariable(name: "q", scope: !6015, file: !3, line: 665, type: !198)
!6035 = !DILocation(line: 665, column: 24, scope: !6015)
!6036 = !DILocalVariable(name: "hitlist", scope: !6015, file: !3, line: 665, type: !194)
!6037 = !DILocation(line: 665, column: 27, scope: !6015)
!6038 = !DILocalVariable(name: "flags", scope: !6015, file: !3, line: 666, type: !372)
!6039 = !DILocation(line: 666, column: 16, scope: !6015)
!6040 = !DILocation(line: 668, column: 2, scope: !6015)
!6041 = !DILocation(line: 669, column: 2, scope: !6015)
!6042 = !DILocation(line: 669, column: 2, scope: !6027)
!6043 = !DILocalVariable(name: "__dummy", scope: !6044, file: !3, line: 669, type: !372)
!6044 = distinct !DILexicalBlock(scope: !6026, file: !3, line: 669, column: 2)
!6045 = !DILocation(line: 669, column: 2, scope: !6044)
!6046 = !DILocalVariable(name: "__dummy2", scope: !6044, file: !3, line: 669, type: !372)
!6047 = !DILocation(line: 669, column: 2, scope: !6026)
!6048 = !DILocation(line: 669, column: 2, scope: !6025)
!6049 = !DILocation(line: 669, column: 2, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 669, column: 2)
!6051 = !DILocalVariable(name: "__dummy", scope: !6052, file: !3, line: 669, type: !372)
!6052 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 669, column: 2)
!6053 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 669, column: 2)
!6054 = !DILocation(line: 669, column: 2, scope: !6052)
!6055 = !DILocalVariable(name: "__dummy2", scope: !6052, file: !3, line: 669, type: !372)
!6056 = !DILocation(line: 669, column: 2, scope: !6053)
!6057 = !DILocation(line: 669, column: 2, scope: !6024)
!6058 = !{i32 -2140981501}
!6059 = !DILocation(line: 669, column: 2, scope: !6023)
!6060 = !DILocation(line: 329, column: 10, scope: !5452, inlinedAt: !6022)
!6061 = !DILocation(line: 329, column: 16, scope: !5452, inlinedAt: !6022)
!6062 = !DILocation(line: 670, column: 2, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6015, file: !3, line: 670, column: 2)
!6064 = !DILocation(line: 670, column: 2, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 670, column: 2)
!6066 = !DILocation(line: 671, column: 7, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6065, file: !3, line: 671, column: 7)
!6068 = !DILocalVariable(name: "__mptr", scope: !6069, file: !3, line: 671, type: !189)
!6069 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 671, column: 16)
!6070 = !DILocation(line: 671, column: 16, scope: !6069)
!6071 = !DILocation(line: 671, column: 16, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6069, file: !3, line: 671, column: 16)
!6073 = !DILocation(line: 671, column: 56, scope: !6067)
!6074 = !DILocation(line: 671, column: 13, scope: !6067)
!6075 = !DILocation(line: 671, column: 7, scope: !6065)
!6076 = !DILocation(line: 672, column: 19, scope: !6067)
!6077 = !DILocation(line: 672, column: 4, scope: !6067)
!6078 = distinct !{!6078, !6062, !6079}
!6079 = !DILocation(line: 672, column: 30, scope: !6063)
!6080 = !DILocation(line: 673, column: 26, scope: !6015)
!6081 = !DILocation(line: 673, column: 30, scope: !6015)
!6082 = !DILocation(line: 673, column: 36, scope: !6015)
!6083 = !DILocation(line: 409, column: 2, scope: !5633, inlinedAt: !6019)
!6084 = !DILocation(line: 409, column: 2, scope: !5638, inlinedAt: !6019)
!6085 = !DILocation(line: 409, column: 2, scope: !5639, inlinedAt: !6019)
!6086 = !DILocation(line: 409, column: 2, scope: !5646, inlinedAt: !6019)
!6087 = !DILocation(line: 409, column: 2, scope: !5649, inlinedAt: !6019)
!6088 = !DILocation(line: 674, column: 16, scope: !6015)
!6089 = !DILocation(line: 674, column: 2, scope: !6015)
!6090 = !DILocation(line: 675, column: 1, scope: !6015)
!6091 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !94, file: !94, line: 655, type: !6092, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6092 = !DISubroutineType(types: !6093)
!6093 = !{!189, !3909}
!6094 = !DILocalVariable(name: "dev", arg: 1, scope: !6091, file: !94, line: 655, type: !3909)
!6095 = !DILocation(line: 655, column: 58, scope: !6091)
!6096 = !DILocation(line: 657, column: 9, scope: !6091)
!6097 = !DILocation(line: 657, column: 14, scope: !6091)
!6098 = !DILocation(line: 657, column: 2, scope: !6091)
!6099 = distinct !DISubprogram(name: "kasan_check_write", scope: !6100, file: !6100, line: 38, type: !6101, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6100 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!6101 = !DISubroutineType(types: !6102)
!6102 = !{!534, !5966, !7}
!6103 = !DILocalVariable(name: "p", arg: 1, scope: !6099, file: !6100, line: 38, type: !5966)
!6104 = !DILocation(line: 38, column: 59, scope: !6099)
!6105 = !DILocalVariable(name: "size", arg: 2, scope: !6099, file: !6100, line: 38, type: !7)
!6106 = !DILocation(line: 38, column: 75, scope: !6099)
!6107 = !DILocation(line: 40, column: 2, scope: !6099)
!6108 = distinct !DISubprogram(name: "kcsan_check_access", scope: !6109, file: !6109, line: 178, type: !6110, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6109 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!6110 = !DISubroutineType(types: !6111)
!6111 = !{null, !5966, !369, !205}
!6112 = !DILocalVariable(name: "ptr", arg: 1, scope: !6108, file: !6109, line: 178, type: !5966)
!6113 = !DILocation(line: 178, column: 60, scope: !6108)
!6114 = !DILocalVariable(name: "size", arg: 2, scope: !6108, file: !6109, line: 178, type: !369)
!6115 = !DILocation(line: 178, column: 72, scope: !6108)
!6116 = !DILocalVariable(name: "type", arg: 3, scope: !6108, file: !6109, line: 179, type: !205)
!6117 = !DILocation(line: 179, column: 15, scope: !6108)
!6118 = !DILocation(line: 179, column: 23, scope: !6108)
!6119 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !94, file: !94, line: 660, type: !6120, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6120 = !DISubroutineType(types: !6121)
!6121 = !{null, !277, !189}
!6122 = !DILocalVariable(name: "dev", arg: 1, scope: !6119, file: !94, line: 660, type: !277)
!6123 = !DILocation(line: 660, column: 51, scope: !6119)
!6124 = !DILocalVariable(name: "data", arg: 2, scope: !6119, file: !94, line: 660, type: !189)
!6125 = !DILocation(line: 660, column: 62, scope: !6119)
!6126 = !DILocation(line: 662, column: 21, scope: !6119)
!6127 = !DILocation(line: 662, column: 2, scope: !6119)
!6128 = !DILocation(line: 662, column: 7, scope: !6119)
!6129 = !DILocation(line: 662, column: 19, scope: !6119)
!6130 = !DILocation(line: 663, column: 1, scope: !6119)
!6131 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !6132, file: !6132, line: 33, type: !6133, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6132 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!6133 = !DISubroutineType(types: !6134)
!6134 = !{null, !198}
!6135 = !DILocalVariable(name: "list", arg: 1, scope: !6131, file: !6132, line: 33, type: !198)
!6136 = !DILocation(line: 33, column: 53, scope: !6131)
!6137 = !DILocation(line: 35, column: 2, scope: !6131)
!6138 = !DILocation(line: 35, column: 2, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6131, file: !6132, line: 35, column: 2)
!6140 = !DILocation(line: 35, column: 2, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6139, file: !6132, line: 35, column: 2)
!6142 = !DILocation(line: 35, column: 2, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6139, file: !6132, line: 35, column: 2)
!6144 = !DILocation(line: 36, column: 15, scope: !6131)
!6145 = !DILocation(line: 36, column: 2, scope: !6131)
!6146 = !DILocation(line: 36, column: 8, scope: !6131)
!6147 = !DILocation(line: 36, column: 13, scope: !6131)
!6148 = !DILocation(line: 37, column: 1, scope: !6131)
!6149 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !6150, file: !6150, line: 666, type: !6151, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6150 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!6151 = !DISubroutineType(types: !6152)
!6152 = !{!372}
!6153 = !DILocalVariable(name: "f", scope: !6149, file: !6150, line: 668, type: !372)
!6154 = !DILocation(line: 668, column: 16, scope: !6149)
!6155 = !DILocation(line: 670, column: 6, scope: !6149)
!6156 = !DILocation(line: 670, column: 4, scope: !6149)
!6157 = !DILocation(line: 671, column: 2, scope: !6149)
!6158 = !DILocation(line: 672, column: 9, scope: !6149)
!6159 = !DILocation(line: 672, column: 2, scope: !6149)
!6160 = distinct !DISubprogram(name: "list_move_tail", scope: !6132, file: !6132, line: 224, type: !6161, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6161 = !DISubroutineType(types: !6162)
!6162 = !{null, !198, !198}
!6163 = !DILocalVariable(name: "list", arg: 1, scope: !6160, file: !6132, line: 224, type: !198)
!6164 = !DILocation(line: 224, column: 53, scope: !6160)
!6165 = !DILocalVariable(name: "head", arg: 2, scope: !6160, file: !6132, line: 225, type: !198)
!6166 = !DILocation(line: 225, column: 25, scope: !6160)
!6167 = !DILocation(line: 227, column: 19, scope: !6160)
!6168 = !DILocation(line: 227, column: 2, scope: !6160)
!6169 = !DILocation(line: 228, column: 16, scope: !6160)
!6170 = !DILocation(line: 228, column: 22, scope: !6160)
!6171 = !DILocation(line: 228, column: 2, scope: !6160)
!6172 = !DILocation(line: 229, column: 1, scope: !6160)
!6173 = distinct !DISubprogram(name: "destroy_async", scope: !3, file: !3, line: 640, type: !6174, scopeLine: 641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6174 = !DISubroutineType(types: !6175)
!6175 = !{null, !190, !198}
!6176 = !DILocation(line: 327, column: 67, scope: !5452, inlinedAt: !6177)
!6177 = distinct !DILocation(line: 657, column: 3, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 657, column: 3)
!6179 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 657, column: 3)
!6180 = distinct !DILexicalBlock(scope: !6181, file: !3, line: 657, column: 3)
!6181 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 657, column: 3)
!6182 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 657, column: 3)
!6183 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 647, column: 28)
!6184 = !DILocation(line: 407, column: 64, scope: !5443, inlinedAt: !6185)
!6185 = distinct !DILocation(line: 654, column: 3, scope: !6183)
!6186 = !DILocation(line: 407, column: 84, scope: !5443, inlinedAt: !6185)
!6187 = !DILocation(line: 407, column: 64, scope: !5443, inlinedAt: !6188)
!6188 = distinct !DILocation(line: 659, column: 2, scope: !6173)
!6189 = !DILocation(line: 407, column: 84, scope: !5443, inlinedAt: !6188)
!6190 = !DILocation(line: 327, column: 67, scope: !5452, inlinedAt: !6191)
!6191 = distinct !DILocation(line: 646, column: 2, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 646, column: 2)
!6193 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 646, column: 2)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 646, column: 2)
!6195 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 646, column: 2)
!6196 = distinct !DILexicalBlock(scope: !6173, file: !3, line: 646, column: 2)
!6197 = !DILocalVariable(name: "ps", arg: 1, scope: !6173, file: !3, line: 640, type: !190)
!6198 = !DILocation(line: 640, column: 49, scope: !6173)
!6199 = !DILocalVariable(name: "list", arg: 2, scope: !6173, file: !3, line: 640, type: !198)
!6200 = !DILocation(line: 640, column: 71, scope: !6173)
!6201 = !DILocalVariable(name: "urb", scope: !6173, file: !3, line: 642, type: !4442)
!6202 = !DILocation(line: 642, column: 14, scope: !6173)
!6203 = !DILocalVariable(name: "as", scope: !6173, file: !3, line: 643, type: !4429)
!6204 = !DILocation(line: 643, column: 16, scope: !6173)
!6205 = !DILocalVariable(name: "flags", scope: !6173, file: !3, line: 644, type: !372)
!6206 = !DILocation(line: 644, column: 16, scope: !6173)
!6207 = !DILocation(line: 646, column: 2, scope: !6173)
!6208 = !DILocation(line: 646, column: 2, scope: !6196)
!6209 = !DILocalVariable(name: "__dummy", scope: !6210, file: !3, line: 646, type: !372)
!6210 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 646, column: 2)
!6211 = !DILocation(line: 646, column: 2, scope: !6210)
!6212 = !DILocalVariable(name: "__dummy2", scope: !6210, file: !3, line: 646, type: !372)
!6213 = !DILocation(line: 646, column: 2, scope: !6195)
!6214 = !DILocation(line: 646, column: 2, scope: !6194)
!6215 = !DILocation(line: 646, column: 2, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 646, column: 2)
!6217 = !DILocalVariable(name: "__dummy", scope: !6218, file: !3, line: 646, type: !372)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 646, column: 2)
!6219 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 646, column: 2)
!6220 = !DILocation(line: 646, column: 2, scope: !6218)
!6221 = !DILocalVariable(name: "__dummy2", scope: !6218, file: !3, line: 646, type: !372)
!6222 = !DILocation(line: 646, column: 2, scope: !6219)
!6223 = !DILocation(line: 646, column: 2, scope: !6193)
!6224 = !{i32 -2140985214}
!6225 = !DILocation(line: 646, column: 2, scope: !6192)
!6226 = !DILocation(line: 329, column: 10, scope: !5452, inlinedAt: !6191)
!6227 = !DILocation(line: 329, column: 16, scope: !5452, inlinedAt: !6191)
!6228 = !DILocation(line: 647, column: 2, scope: !6173)
!6229 = !DILocation(line: 647, column: 21, scope: !6173)
!6230 = !DILocation(line: 647, column: 10, scope: !6173)
!6231 = !DILocation(line: 647, column: 9, scope: !6173)
!6232 = !DILocalVariable(name: "__mptr", scope: !6233, file: !3, line: 648, type: !189)
!6233 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 648, column: 8)
!6234 = !DILocation(line: 648, column: 8, scope: !6233)
!6235 = !DILocation(line: 648, column: 8, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 648, column: 8)
!6237 = !DILocation(line: 648, column: 6, scope: !6183)
!6238 = !DILocation(line: 649, column: 18, scope: !6183)
!6239 = !DILocation(line: 649, column: 22, scope: !6183)
!6240 = !DILocation(line: 649, column: 3, scope: !6183)
!6241 = !DILocation(line: 650, column: 9, scope: !6183)
!6242 = !DILocation(line: 650, column: 13, scope: !6183)
!6243 = !DILocation(line: 650, column: 7, scope: !6183)
!6244 = !DILocation(line: 651, column: 15, scope: !6183)
!6245 = !DILocation(line: 651, column: 3, scope: !6183)
!6246 = !DILocation(line: 654, column: 27, scope: !6183)
!6247 = !DILocation(line: 654, column: 31, scope: !6183)
!6248 = !DILocation(line: 654, column: 37, scope: !6183)
!6249 = !DILocation(line: 409, column: 2, scope: !5633, inlinedAt: !6185)
!6250 = !DILocation(line: 409, column: 2, scope: !5638, inlinedAt: !6185)
!6251 = !DILocation(line: 409, column: 2, scope: !5639, inlinedAt: !6185)
!6252 = !DILocation(line: 409, column: 2, scope: !5646, inlinedAt: !6185)
!6253 = !DILocation(line: 409, column: 2, scope: !5649, inlinedAt: !6185)
!6254 = !DILocation(line: 655, column: 16, scope: !6183)
!6255 = !DILocation(line: 655, column: 3, scope: !6183)
!6256 = !DILocation(line: 656, column: 15, scope: !6183)
!6257 = !DILocation(line: 656, column: 3, scope: !6183)
!6258 = !DILocation(line: 657, column: 3, scope: !6183)
!6259 = !DILocation(line: 657, column: 3, scope: !6182)
!6260 = !DILocalVariable(name: "__dummy", scope: !6261, file: !3, line: 657, type: !372)
!6261 = distinct !DILexicalBlock(scope: !6181, file: !3, line: 657, column: 3)
!6262 = !DILocation(line: 657, column: 3, scope: !6261)
!6263 = !DILocalVariable(name: "__dummy2", scope: !6261, file: !3, line: 657, type: !372)
!6264 = !DILocation(line: 657, column: 3, scope: !6181)
!6265 = !DILocation(line: 657, column: 3, scope: !6180)
!6266 = !DILocation(line: 657, column: 3, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 657, column: 3)
!6268 = !DILocalVariable(name: "__dummy", scope: !6269, file: !3, line: 657, type: !372)
!6269 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 657, column: 3)
!6270 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 657, column: 3)
!6271 = !DILocation(line: 657, column: 3, scope: !6269)
!6272 = !DILocalVariable(name: "__dummy2", scope: !6269, file: !3, line: 657, type: !372)
!6273 = !DILocation(line: 657, column: 3, scope: !6270)
!6274 = !DILocation(line: 657, column: 3, scope: !6179)
!6275 = !{i32 -2140982506}
!6276 = !DILocation(line: 657, column: 3, scope: !6178)
!6277 = !DILocation(line: 329, column: 10, scope: !5452, inlinedAt: !6177)
!6278 = !DILocation(line: 329, column: 16, scope: !5452, inlinedAt: !6177)
!6279 = distinct !{!6279, !6228, !6280}
!6280 = !DILocation(line: 658, column: 2, scope: !6173)
!6281 = !DILocation(line: 659, column: 26, scope: !6173)
!6282 = !DILocation(line: 659, column: 30, scope: !6173)
!6283 = !DILocation(line: 659, column: 36, scope: !6173)
!6284 = !DILocation(line: 409, column: 2, scope: !5633, inlinedAt: !6188)
!6285 = !DILocation(line: 409, column: 2, scope: !5638, inlinedAt: !6188)
!6286 = !DILocation(line: 409, column: 2, scope: !5639, inlinedAt: !6188)
!6287 = !DILocation(line: 409, column: 2, scope: !5646, inlinedAt: !6188)
!6288 = !DILocation(line: 409, column: 2, scope: !5649, inlinedAt: !6188)
!6289 = !DILocation(line: 660, column: 1, scope: !6173)
!6290 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !6150, file: !6150, line: 646, type: !6151, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6291 = !DILocalVariable(name: "__ret", scope: !6292, file: !6150, line: 648, type: !372)
!6292 = distinct !DILexicalBlock(scope: !6290, file: !6150, line: 648, column: 9)
!6293 = !DILocation(line: 648, column: 9, scope: !6292)
!6294 = !DILocalVariable(name: "__edi", scope: !6292, file: !6150, line: 648, type: !372)
!6295 = !DILocalVariable(name: "__esi", scope: !6292, file: !6150, line: 648, type: !372)
!6296 = !DILocalVariable(name: "__edx", scope: !6292, file: !6150, line: 648, type: !372)
!6297 = !DILocalVariable(name: "__ecx", scope: !6292, file: !6150, line: 648, type: !372)
!6298 = !DILocalVariable(name: "__eax", scope: !6292, file: !6150, line: 648, type: !372)
!6299 = !DILocation(line: 648, column: 9, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6301, file: !6150, line: 648, column: 9)
!6301 = distinct !DILexicalBlock(scope: !6292, file: !6150, line: 648, column: 9)
!6302 = !{i32 -2145564238, i32 -2145561923, i32 -2145561689, i32 -2145561638, i32 -2145561610, i32 -2145561585, i32 -2145561901, i32 -2145561888, i32 -2145561450, i32 -2145561331, i32 -2145561796, i32 -2145561769, i32 -2145561741, i32 -2145561711}
!6303 = !DILocalVariable(name: "__mask", scope: !6304, file: !6150, line: 648, type: !372)
!6304 = distinct !DILexicalBlock(scope: !6300, file: !6150, line: 648, column: 9)
!6305 = !DILocation(line: 648, column: 9, scope: !6304)
!6306 = !DILocation(line: 648, column: 9, scope: !6301)
!6307 = !DILocation(line: 648, column: 2, scope: !6290)
!6308 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !6150, file: !6150, line: 656, type: !2082, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6309 = !DILocalVariable(name: "__edi", scope: !6310, file: !6150, line: 658, type: !372)
!6310 = distinct !DILexicalBlock(scope: !6308, file: !6150, line: 658, column: 2)
!6311 = !DILocation(line: 658, column: 2, scope: !6310)
!6312 = !DILocalVariable(name: "__esi", scope: !6310, file: !6150, line: 658, type: !372)
!6313 = !DILocalVariable(name: "__edx", scope: !6310, file: !6150, line: 658, type: !372)
!6314 = !DILocalVariable(name: "__ecx", scope: !6310, file: !6150, line: 658, type: !372)
!6315 = !DILocalVariable(name: "__eax", scope: !6310, file: !6150, line: 658, type: !372)
!6316 = !{i32 -2145557144, i32 -2145556412, i32 -2145556178, i32 -2145556127, i32 -2145556099, i32 -2145556074, i32 -2145556390, i32 -2145556377, i32 -2145555939, i32 -2145555820, i32 -2145556285, i32 -2145556258, i32 -2145556230, i32 -2145556200}
!6317 = !DILocation(line: 659, column: 1, scope: !6308)
!6318 = distinct !DISubprogram(name: "__list_del_entry", scope: !6132, file: !6132, line: 130, type: !6133, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6319 = !DILocalVariable(name: "entry", arg: 1, scope: !6318, file: !6132, line: 130, type: !198)
!6320 = !DILocation(line: 130, column: 55, scope: !6318)
!6321 = !DILocation(line: 132, column: 30, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6318, file: !6132, line: 132, column: 6)
!6323 = !DILocation(line: 132, column: 7, scope: !6322)
!6324 = !DILocation(line: 132, column: 6, scope: !6318)
!6325 = !DILocation(line: 133, column: 3, scope: !6322)
!6326 = !DILocation(line: 135, column: 13, scope: !6318)
!6327 = !DILocation(line: 135, column: 20, scope: !6318)
!6328 = !DILocation(line: 135, column: 26, scope: !6318)
!6329 = !DILocation(line: 135, column: 33, scope: !6318)
!6330 = !DILocation(line: 135, column: 2, scope: !6318)
!6331 = !DILocation(line: 136, column: 1, scope: !6318)
!6332 = distinct !DISubprogram(name: "list_add_tail", scope: !6132, file: !6132, line: 98, type: !6161, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6333 = !DILocalVariable(name: "new", arg: 1, scope: !6332, file: !6132, line: 98, type: !198)
!6334 = !DILocation(line: 98, column: 52, scope: !6332)
!6335 = !DILocalVariable(name: "head", arg: 2, scope: !6332, file: !6132, line: 98, type: !198)
!6336 = !DILocation(line: 98, column: 75, scope: !6332)
!6337 = !DILocation(line: 100, column: 13, scope: !6332)
!6338 = !DILocation(line: 100, column: 18, scope: !6332)
!6339 = !DILocation(line: 100, column: 24, scope: !6332)
!6340 = !DILocation(line: 100, column: 30, scope: !6332)
!6341 = !DILocation(line: 100, column: 2, scope: !6332)
!6342 = !DILocation(line: 101, column: 1, scope: !6332)
!6343 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !6132, file: !6132, line: 51, type: !6344, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6344 = !DISubroutineType(types: !6345)
!6345 = !{!534, !198}
!6346 = !DILocalVariable(name: "entry", arg: 1, scope: !6343, file: !6132, line: 51, type: !198)
!6347 = !DILocation(line: 51, column: 61, scope: !6343)
!6348 = !DILocation(line: 53, column: 2, scope: !6343)
!6349 = distinct !DISubprogram(name: "__list_del", scope: !6132, file: !6132, line: 110, type: !6161, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6350 = !DILocalVariable(name: "prev", arg: 1, scope: !6349, file: !6132, line: 110, type: !198)
!6351 = !DILocation(line: 110, column: 50, scope: !6349)
!6352 = !DILocalVariable(name: "next", arg: 2, scope: !6349, file: !6132, line: 110, type: !198)
!6353 = !DILocation(line: 110, column: 75, scope: !6349)
!6354 = !DILocation(line: 112, column: 15, scope: !6349)
!6355 = !DILocation(line: 112, column: 2, scope: !6349)
!6356 = !DILocation(line: 112, column: 8, scope: !6349)
!6357 = !DILocation(line: 112, column: 13, scope: !6349)
!6358 = !DILocation(line: 113, column: 2, scope: !6349)
!6359 = !DILocation(line: 113, column: 2, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6349, file: !6132, line: 113, column: 2)
!6361 = !DILocation(line: 113, column: 2, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6360, file: !6132, line: 113, column: 2)
!6363 = !DILocation(line: 113, column: 2, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6360, file: !6132, line: 113, column: 2)
!6365 = !DILocation(line: 114, column: 1, scope: !6349)
!6366 = distinct !DISubprogram(name: "__list_add", scope: !6132, file: !6132, line: 63, type: !6367, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6367 = !DISubroutineType(types: !6368)
!6368 = !{null, !198, !198, !198}
!6369 = !DILocalVariable(name: "new", arg: 1, scope: !6366, file: !6132, line: 63, type: !198)
!6370 = !DILocation(line: 63, column: 49, scope: !6366)
!6371 = !DILocalVariable(name: "prev", arg: 2, scope: !6366, file: !6132, line: 64, type: !198)
!6372 = !DILocation(line: 64, column: 28, scope: !6366)
!6373 = !DILocalVariable(name: "next", arg: 3, scope: !6366, file: !6132, line: 65, type: !198)
!6374 = !DILocation(line: 65, column: 28, scope: !6366)
!6375 = !DILocation(line: 67, column: 24, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6366, file: !6132, line: 67, column: 6)
!6377 = !DILocation(line: 67, column: 29, scope: !6376)
!6378 = !DILocation(line: 67, column: 35, scope: !6376)
!6379 = !DILocation(line: 67, column: 7, scope: !6376)
!6380 = !DILocation(line: 67, column: 6, scope: !6366)
!6381 = !DILocation(line: 68, column: 3, scope: !6376)
!6382 = !DILocation(line: 70, column: 15, scope: !6366)
!6383 = !DILocation(line: 70, column: 2, scope: !6366)
!6384 = !DILocation(line: 70, column: 8, scope: !6366)
!6385 = !DILocation(line: 70, column: 13, scope: !6366)
!6386 = !DILocation(line: 71, column: 14, scope: !6366)
!6387 = !DILocation(line: 71, column: 2, scope: !6366)
!6388 = !DILocation(line: 71, column: 7, scope: !6366)
!6389 = !DILocation(line: 71, column: 12, scope: !6366)
!6390 = !DILocation(line: 72, column: 14, scope: !6366)
!6391 = !DILocation(line: 72, column: 2, scope: !6366)
!6392 = !DILocation(line: 72, column: 7, scope: !6366)
!6393 = !DILocation(line: 72, column: 12, scope: !6366)
!6394 = !DILocation(line: 73, column: 2, scope: !6366)
!6395 = !DILocation(line: 73, column: 2, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6366, file: !6132, line: 73, column: 2)
!6397 = !DILocation(line: 73, column: 2, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6396, file: !6132, line: 73, column: 2)
!6399 = !DILocation(line: 73, column: 2, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6396, file: !6132, line: 73, column: 2)
!6401 = !DILocation(line: 74, column: 1, scope: !6366)
!6402 = distinct !DISubprogram(name: "__list_add_valid", scope: !6132, file: !6132, line: 45, type: !6403, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6403 = !DISubroutineType(types: !6404)
!6404 = !{!534, !198, !198, !198}
!6405 = !DILocalVariable(name: "new", arg: 1, scope: !6402, file: !6132, line: 45, type: !198)
!6406 = !DILocation(line: 45, column: 55, scope: !6402)
!6407 = !DILocalVariable(name: "prev", arg: 2, scope: !6402, file: !6132, line: 46, type: !198)
!6408 = !DILocation(line: 46, column: 23, scope: !6402)
!6409 = !DILocalVariable(name: "next", arg: 3, scope: !6402, file: !6132, line: 47, type: !198)
!6410 = !DILocation(line: 47, column: 23, scope: !6402)
!6411 = !DILocation(line: 49, column: 2, scope: !6402)
!6412 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !6150, file: !6150, line: 651, type: !4804, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6413 = !DILocalVariable(name: "f", arg: 1, scope: !6412, file: !6150, line: 651, type: !372)
!6414 = !DILocation(line: 651, column: 65, scope: !6412)
!6415 = !DILocalVariable(name: "__edi", scope: !6416, file: !6150, line: 653, type: !372)
!6416 = distinct !DILexicalBlock(scope: !6412, file: !6150, line: 653, column: 2)
!6417 = !DILocation(line: 653, column: 2, scope: !6416)
!6418 = !DILocalVariable(name: "__esi", scope: !6416, file: !6150, line: 653, type: !372)
!6419 = !DILocalVariable(name: "__edx", scope: !6416, file: !6150, line: 653, type: !372)
!6420 = !DILocalVariable(name: "__ecx", scope: !6416, file: !6150, line: 653, type: !372)
!6421 = !DILocalVariable(name: "__eax", scope: !6416, file: !6150, line: 653, type: !372)
!6422 = !{i32 -2145559771, i32 -2145559021, i32 -2145558787, i32 -2145558736, i32 -2145558708, i32 -2145558683, i32 -2145558999, i32 -2145558986, i32 -2145558548, i32 -2145558429, i32 -2145558894, i32 -2145558867, i32 -2145558839, i32 -2145558809}
!6423 = !DILocation(line: 654, column: 1, scope: !6412)
!6424 = distinct !DISubprogram(name: "list_empty", scope: !6132, file: !6132, line: 280, type: !6425, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6425 = !DISubroutineType(types: !6426)
!6426 = !{!205, !6427}
!6427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6428, size: 64)
!6428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !194)
!6429 = !DILocalVariable(name: "head", arg: 1, scope: !6424, file: !6132, line: 280, type: !6427)
!6430 = !DILocation(line: 280, column: 54, scope: !6424)
!6431 = !DILocation(line: 282, column: 9, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6424, file: !6132, line: 282, column: 9)
!6433 = !DILocation(line: 282, column: 9, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6432, file: !6132, line: 282, column: 9)
!6435 = !DILocation(line: 282, column: 34, scope: !6424)
!6436 = !DILocation(line: 282, column: 31, scope: !6424)
!6437 = !DILocation(line: 282, column: 2, scope: !6424)
!6438 = distinct !DISubprogram(name: "list_del_init", scope: !6132, file: !6132, line: 202, type: !6133, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6439 = !DILocalVariable(name: "entry", arg: 1, scope: !6438, file: !6132, line: 202, type: !198)
!6440 = !DILocation(line: 202, column: 52, scope: !6438)
!6441 = !DILocation(line: 204, column: 19, scope: !6438)
!6442 = !DILocation(line: 204, column: 2, scope: !6438)
!6443 = !DILocation(line: 205, column: 17, scope: !6438)
!6444 = !DILocation(line: 205, column: 2, scope: !6438)
!6445 = !DILocation(line: 206, column: 1, scope: !6438)
!6446 = distinct !DISubprogram(name: "device_lock", scope: !94, file: !94, line: 729, type: !3602, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6447 = !DILocalVariable(name: "dev", arg: 1, scope: !6446, file: !94, line: 729, type: !277)
!6448 = !DILocation(line: 729, column: 47, scope: !6446)
!6449 = !DILocation(line: 731, column: 14, scope: !6446)
!6450 = !DILocation(line: 731, column: 19, scope: !6446)
!6451 = !DILocation(line: 731, column: 2, scope: !6446)
!6452 = !DILocation(line: 732, column: 1, scope: !6446)
!6453 = distinct !DISubprogram(name: "connected", scope: !3, file: !3, line: 167, type: !6454, scopeLine: 168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6454 = !DISubroutineType(types: !6455)
!6455 = !{!205, !190}
!6456 = !DILocalVariable(name: "ps", arg: 1, scope: !6453, file: !3, line: 167, type: !190)
!6457 = !DILocation(line: 167, column: 44, scope: !6453)
!6458 = !DILocation(line: 169, column: 23, scope: !6453)
!6459 = !DILocation(line: 169, column: 27, scope: !6453)
!6460 = !DILocation(line: 169, column: 11, scope: !6453)
!6461 = !DILocation(line: 169, column: 33, scope: !6453)
!6462 = !DILocation(line: 170, column: 4, scope: !6453)
!6463 = !DILocation(line: 170, column: 8, scope: !6453)
!6464 = !DILocation(line: 170, column: 13, scope: !6453)
!6465 = !DILocation(line: 170, column: 19, scope: !6453)
!6466 = !DILocation(line: 0, scope: !6453)
!6467 = !DILocation(line: 169, column: 2, scope: !6453)
!6468 = distinct !DISubprogram(name: "device_unlock", scope: !94, file: !94, line: 744, type: !3602, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6469 = !DILocalVariable(name: "dev", arg: 1, scope: !6468, file: !94, line: 744, type: !277)
!6470 = !DILocation(line: 744, column: 49, scope: !6468)
!6471 = !DILocation(line: 746, column: 16, scope: !6468)
!6472 = !DILocation(line: 746, column: 21, scope: !6468)
!6473 = !DILocation(line: 746, column: 2, scope: !6468)
!6474 = !DILocation(line: 747, column: 1, scope: !6468)
!6475 = distinct !DISubprogram(name: "copy_overflow", scope: !5058, file: !5058, line: 132, type: !6476, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6476 = !DISubroutineType(types: !6477)
!6477 = !{null, !205, !372}
!6478 = !DILocalVariable(name: "size", arg: 1, scope: !6475, file: !5058, line: 132, type: !205)
!6479 = !DILocation(line: 132, column: 38, scope: !6475)
!6480 = !DILocalVariable(name: "count", arg: 2, scope: !6475, file: !5058, line: 132, type: !372)
!6481 = !DILocation(line: 132, column: 58, scope: !6475)
!6482 = !DILocalVariable(name: "__ret_warn_on", scope: !6483, file: !5058, line: 134, type: !205)
!6483 = distinct !DILexicalBlock(scope: !6475, file: !5058, line: 134, column: 2)
!6484 = !DILocation(line: 134, column: 2, scope: !6483)
!6485 = !DILocation(line: 134, column: 2, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6483, file: !5058, line: 134, column: 2)
!6487 = !DILocation(line: 134, column: 2, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6486, file: !5058, line: 134, column: 2)
!6489 = !DILocation(line: 134, column: 2, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6488, file: !5058, line: 134, column: 2)
!6491 = !DILocation(line: 134, column: 2, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6488, file: !5058, line: 134, column: 2)
!6493 = !DILocation(line: 134, column: 2, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6492, file: !5058, line: 134, column: 2)
!6495 = !DILocation(line: 134, column: 2, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6492, file: !5058, line: 134, column: 2)
!6497 = !{i32 -2145474646, i32 -2145474617, i32 -2145474571, i32 -2145474513, i32 -2145474459, i32 -2145474405, i32 -2145474350, i32 -2145474319}
!6498 = !DILocation(line: 134, column: 2, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6492, file: !5058, line: 134, column: 2)
!6500 = !{i32 -2145473899, i32 -2145473892, i32 -2145473840, i32 -2145473809, i32 -2145473779}
!6501 = !DILocation(line: 134, column: 2, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6492, file: !5058, line: 134, column: 2)
!6503 = !DILocation(line: 134, column: 2, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6488, file: !5058, line: 134, column: 2)
!6505 = !DILocation(line: 135, column: 1, scope: !6475)
!6506 = distinct !DISubprogram(name: "check_object_size", scope: !5058, file: !5058, line: 122, type: !6507, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6507 = !DISubroutineType(types: !6508)
!6508 = !{null, !2320, !372, !534}
!6509 = !DILocalVariable(name: "ptr", arg: 1, scope: !6506, file: !5058, line: 122, type: !2320)
!6510 = !DILocation(line: 122, column: 50, scope: !6506)
!6511 = !DILocalVariable(name: "n", arg: 2, scope: !6506, file: !5058, line: 122, type: !372)
!6512 = !DILocation(line: 122, column: 69, scope: !6506)
!6513 = !DILocalVariable(name: "to_user", arg: 3, scope: !6506, file: !5058, line: 123, type: !534)
!6514 = !DILocation(line: 123, column: 15, scope: !6506)
!6515 = !DILocation(line: 124, column: 3, scope: !6506)
!6516 = distinct !DISubprogram(name: "poll_wait", scope: !3101, file: !3101, line: 48, type: !6517, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6517 = !DISubroutineType(types: !6518)
!6518 = !{null, !400, !3108, !6519}
!6519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6520, size: 64)
!6520 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_table", file: !3101, line: 46, baseType: !3100)
!6521 = !DILocalVariable(name: "filp", arg: 1, scope: !6516, file: !3101, line: 48, type: !400)
!6522 = !DILocation(line: 48, column: 44, scope: !6516)
!6523 = !DILocalVariable(name: "wait_address", arg: 2, scope: !6516, file: !3101, line: 48, type: !3108)
!6524 = !DILocation(line: 48, column: 70, scope: !6516)
!6525 = !DILocalVariable(name: "p", arg: 3, scope: !6516, file: !3101, line: 48, type: !6519)
!6526 = !DILocation(line: 48, column: 96, scope: !6516)
!6527 = !DILocation(line: 50, column: 6, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6516, file: !3101, line: 50, column: 6)
!6529 = !DILocation(line: 50, column: 8, scope: !6528)
!6530 = !DILocation(line: 50, column: 11, scope: !6528)
!6531 = !DILocation(line: 50, column: 14, scope: !6528)
!6532 = !DILocation(line: 50, column: 21, scope: !6528)
!6533 = !DILocation(line: 50, column: 24, scope: !6528)
!6534 = !DILocation(line: 50, column: 6, scope: !6516)
!6535 = !DILocation(line: 51, column: 3, scope: !6528)
!6536 = !DILocation(line: 51, column: 6, scope: !6528)
!6537 = !DILocation(line: 51, column: 13, scope: !6528)
!6538 = !DILocation(line: 51, column: 19, scope: !6528)
!6539 = !DILocation(line: 51, column: 33, scope: !6528)
!6540 = !DILocation(line: 52, column: 1, scope: !6516)
!6541 = distinct !DISubprogram(name: "usbdev_do_ioctl", scope: !3, file: !3, line: 2489, type: !6542, scopeLine: 2491, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6542 = !DISubroutineType(types: !6543)
!6543 = !{!357, !400, !7, !189}
!6544 = !DILocalVariable(name: "file", arg: 1, scope: !6541, file: !3, line: 2489, type: !400)
!6545 = !DILocation(line: 2489, column: 42, scope: !6541)
!6546 = !DILocalVariable(name: "cmd", arg: 2, scope: !6541, file: !3, line: 2489, type: !7)
!6547 = !DILocation(line: 2489, column: 61, scope: !6541)
!6548 = !DILocalVariable(name: "p", arg: 3, scope: !6541, file: !3, line: 2490, type: !189)
!6549 = !DILocation(line: 2490, column: 18, scope: !6541)
!6550 = !DILocalVariable(name: "ps", scope: !6541, file: !3, line: 2492, type: !190)
!6551 = !DILocation(line: 2492, column: 24, scope: !6541)
!6552 = !DILocation(line: 2492, column: 29, scope: !6541)
!6553 = !DILocation(line: 2492, column: 35, scope: !6541)
!6554 = !DILocalVariable(name: "inode", scope: !6541, file: !3, line: 2493, type: !473)
!6555 = !DILocation(line: 2493, column: 16, scope: !6541)
!6556 = !DILocation(line: 2493, column: 35, scope: !6541)
!6557 = !DILocation(line: 2493, column: 24, scope: !6541)
!6558 = !DILocalVariable(name: "dev", scope: !6541, file: !3, line: 2494, type: !201)
!6559 = !DILocation(line: 2494, column: 21, scope: !6541)
!6560 = !DILocation(line: 2494, column: 27, scope: !6541)
!6561 = !DILocation(line: 2494, column: 31, scope: !6541)
!6562 = !DILocalVariable(name: "ret", scope: !6541, file: !3, line: 2495, type: !205)
!6563 = !DILocation(line: 2495, column: 6, scope: !6541)
!6564 = !DILocation(line: 2497, column: 8, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 2497, column: 6)
!6566 = !DILocation(line: 2497, column: 14, scope: !6565)
!6567 = !DILocation(line: 2497, column: 21, scope: !6565)
!6568 = !DILocation(line: 2497, column: 6, scope: !6541)
!6569 = !DILocation(line: 2498, column: 3, scope: !6565)
!6570 = !DILocation(line: 2500, column: 2, scope: !6541)
!6571 = !DILocation(line: 2503, column: 10, scope: !6541)
!6572 = !DILocation(line: 2503, column: 2, scope: !6541)
!6573 = !DILocation(line: 2505, column: 3, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 2503, column: 15)
!6575 = !DILocation(line: 2505, column: 3, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 2505, column: 3)
!6577 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 2505, column: 3)
!6578 = !DILocation(line: 2505, column: 3, scope: !6577)
!6579 = !DILocation(line: 2506, column: 22, scope: !6574)
!6580 = !DILocation(line: 2506, column: 26, scope: !6574)
!6581 = !DILocation(line: 2506, column: 9, scope: !6574)
!6582 = !DILocation(line: 2506, column: 7, scope: !6574)
!6583 = !DILocation(line: 2507, column: 3, scope: !6574)
!6584 = !DILocation(line: 2510, column: 3, scope: !6574)
!6585 = !DILocation(line: 2510, column: 3, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 2510, column: 3)
!6587 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 2510, column: 3)
!6588 = !DILocation(line: 2510, column: 3, scope: !6587)
!6589 = !DILocation(line: 2511, column: 30, scope: !6574)
!6590 = !DILocation(line: 2511, column: 34, scope: !6574)
!6591 = !DILocation(line: 2511, column: 9, scope: !6574)
!6592 = !DILocation(line: 2511, column: 7, scope: !6574)
!6593 = !DILocation(line: 2512, column: 3, scope: !6574)
!6594 = !DILocation(line: 2527, column: 17, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 2527, column: 6)
!6596 = !DILocation(line: 2527, column: 7, scope: !6595)
!6597 = !DILocation(line: 2527, column: 6, scope: !6541)
!6598 = !DILocation(line: 2528, column: 3, scope: !6599)
!6599 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 2527, column: 22)
!6600 = !DILocation(line: 2529, column: 3, scope: !6599)
!6601 = !DILocation(line: 2532, column: 10, scope: !6541)
!6602 = !DILocation(line: 2532, column: 2, scope: !6541)
!6603 = !DILocation(line: 2534, column: 3, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 2532, column: 15)
!6605 = !DILocation(line: 2534, column: 3, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 2534, column: 3)
!6607 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2534, column: 3)
!6608 = !DILocation(line: 2534, column: 3, scope: !6607)
!6609 = !DILocation(line: 2535, column: 22, scope: !6604)
!6610 = !DILocation(line: 2535, column: 26, scope: !6604)
!6611 = !DILocation(line: 2535, column: 9, scope: !6604)
!6612 = !DILocation(line: 2535, column: 7, scope: !6604)
!6613 = !DILocation(line: 2536, column: 7, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2536, column: 7)
!6615 = !DILocation(line: 2536, column: 11, scope: !6614)
!6616 = !DILocation(line: 2536, column: 7, scope: !6604)
!6617 = !DILocation(line: 2537, column: 4, scope: !6614)
!6618 = !DILocation(line: 2537, column: 11, scope: !6614)
!6619 = !DILocation(line: 2537, column: 34, scope: !6614)
!6620 = !DILocation(line: 2537, column: 21, scope: !6614)
!6621 = !DILocation(line: 2538, column: 3, scope: !6604)
!6622 = !DILocation(line: 2541, column: 3, scope: !6604)
!6623 = !DILocation(line: 2541, column: 3, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 2541, column: 3)
!6625 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2541, column: 3)
!6626 = !DILocation(line: 2541, column: 3, scope: !6625)
!6627 = !DILocation(line: 2542, column: 19, scope: !6604)
!6628 = !DILocation(line: 2542, column: 23, scope: !6604)
!6629 = !DILocation(line: 2542, column: 9, scope: !6604)
!6630 = !DILocation(line: 2542, column: 7, scope: !6604)
!6631 = !DILocation(line: 2543, column: 7, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2543, column: 7)
!6633 = !DILocation(line: 2543, column: 11, scope: !6632)
!6634 = !DILocation(line: 2543, column: 7, scope: !6604)
!6635 = !DILocation(line: 2544, column: 4, scope: !6632)
!6636 = !DILocation(line: 2544, column: 11, scope: !6632)
!6637 = !DILocation(line: 2544, column: 34, scope: !6632)
!6638 = !DILocation(line: 2544, column: 21, scope: !6632)
!6639 = !DILocation(line: 2545, column: 3, scope: !6604)
!6640 = !DILocation(line: 2548, column: 3, scope: !6604)
!6641 = !DILocation(line: 2548, column: 3, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 2548, column: 3)
!6643 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2548, column: 3)
!6644 = !DILocation(line: 2548, column: 3, scope: !6643)
!6645 = !DILocation(line: 2549, column: 22, scope: !6604)
!6646 = !DILocation(line: 2549, column: 26, scope: !6604)
!6647 = !DILocation(line: 2549, column: 9, scope: !6604)
!6648 = !DILocation(line: 2549, column: 7, scope: !6604)
!6649 = !DILocation(line: 2550, column: 7, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2550, column: 7)
!6651 = !DILocation(line: 2550, column: 11, scope: !6650)
!6652 = !DILocation(line: 2550, column: 7, scope: !6604)
!6653 = !DILocation(line: 2551, column: 4, scope: !6650)
!6654 = !DILocation(line: 2551, column: 11, scope: !6650)
!6655 = !DILocation(line: 2551, column: 34, scope: !6650)
!6656 = !DILocation(line: 2551, column: 21, scope: !6650)
!6657 = !DILocation(line: 2552, column: 3, scope: !6604)
!6658 = !DILocation(line: 2555, column: 3, scope: !6604)
!6659 = !DILocation(line: 2555, column: 3, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 2555, column: 3)
!6661 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2555, column: 3)
!6662 = !DILocation(line: 2555, column: 3, scope: !6661)
!6663 = !DILocation(line: 2556, column: 26, scope: !6604)
!6664 = !DILocation(line: 2556, column: 9, scope: !6604)
!6665 = !DILocation(line: 2556, column: 7, scope: !6604)
!6666 = !DILocation(line: 2557, column: 3, scope: !6604)
!6667 = !DILocation(line: 2560, column: 3, scope: !6604)
!6668 = !DILocation(line: 2560, column: 3, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 2560, column: 3)
!6670 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2560, column: 3)
!6671 = !DILocation(line: 2560, column: 3, scope: !6670)
!6672 = !DILocation(line: 2561, column: 24, scope: !6604)
!6673 = !DILocation(line: 2561, column: 28, scope: !6604)
!6674 = !DILocation(line: 2561, column: 9, scope: !6604)
!6675 = !DILocation(line: 2561, column: 7, scope: !6604)
!6676 = !DILocation(line: 2562, column: 7, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2562, column: 7)
!6678 = !DILocation(line: 2562, column: 11, scope: !6677)
!6679 = !DILocation(line: 2562, column: 7, scope: !6604)
!6680 = !DILocation(line: 2563, column: 4, scope: !6677)
!6681 = !DILocation(line: 2563, column: 11, scope: !6677)
!6682 = !DILocation(line: 2563, column: 34, scope: !6677)
!6683 = !DILocation(line: 2563, column: 21, scope: !6677)
!6684 = !DILocation(line: 2564, column: 3, scope: !6604)
!6685 = !DILocation(line: 2567, column: 3, scope: !6604)
!6686 = !DILocation(line: 2567, column: 3, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 2567, column: 3)
!6688 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2567, column: 3)
!6689 = !DILocation(line: 2567, column: 3, scope: !6688)
!6690 = !DILocation(line: 2568, column: 24, scope: !6604)
!6691 = !DILocation(line: 2568, column: 28, scope: !6604)
!6692 = !DILocation(line: 2568, column: 9, scope: !6604)
!6693 = !DILocation(line: 2568, column: 7, scope: !6604)
!6694 = !DILocation(line: 2569, column: 3, scope: !6604)
!6695 = !DILocation(line: 2572, column: 3, scope: !6604)
!6696 = !DILocation(line: 2572, column: 3, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 2572, column: 3)
!6698 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2572, column: 3)
!6699 = !DILocation(line: 2572, column: 3, scope: !6698)
!6700 = !DILocation(line: 2573, column: 26, scope: !6604)
!6701 = !DILocation(line: 2573, column: 30, scope: !6604)
!6702 = !DILocation(line: 2573, column: 9, scope: !6604)
!6703 = !DILocation(line: 2573, column: 7, scope: !6604)
!6704 = !DILocation(line: 2574, column: 3, scope: !6604)
!6705 = !DILocation(line: 2577, column: 3, scope: !6604)
!6706 = !DILocation(line: 2577, column: 3, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 2577, column: 3)
!6708 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2577, column: 3)
!6709 = !DILocation(line: 2577, column: 3, scope: !6708)
!6710 = !DILocation(line: 2578, column: 22, scope: !6604)
!6711 = !DILocation(line: 2578, column: 26, scope: !6604)
!6712 = !DILocation(line: 2578, column: 9, scope: !6604)
!6713 = !DILocation(line: 2578, column: 7, scope: !6604)
!6714 = !DILocation(line: 2579, column: 3, scope: !6604)
!6715 = !DILocation(line: 2582, column: 3, scope: !6604)
!6716 = !DILocation(line: 2582, column: 3, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 2582, column: 3)
!6718 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2582, column: 3)
!6719 = !DILocation(line: 2582, column: 3, scope: !6718)
!6720 = !DILocation(line: 2583, column: 24, scope: !6604)
!6721 = !DILocation(line: 2583, column: 28, scope: !6604)
!6722 = !DILocation(line: 2583, column: 9, scope: !6604)
!6723 = !DILocation(line: 2583, column: 7, scope: !6604)
!6724 = !DILocation(line: 2584, column: 3, scope: !6604)
!6725 = !DILocation(line: 2587, column: 3, scope: !6604)
!6726 = !DILocation(line: 2587, column: 3, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 2587, column: 3)
!6728 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2587, column: 3)
!6729 = !DILocation(line: 2587, column: 3, scope: !6728)
!6730 = !DILocation(line: 2588, column: 24, scope: !6604)
!6731 = !DILocation(line: 2588, column: 28, scope: !6604)
!6732 = !DILocation(line: 2588, column: 9, scope: !6604)
!6733 = !DILocation(line: 2588, column: 7, scope: !6604)
!6734 = !DILocation(line: 2589, column: 7, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2589, column: 7)
!6736 = !DILocation(line: 2589, column: 11, scope: !6735)
!6737 = !DILocation(line: 2589, column: 7, scope: !6604)
!6738 = !DILocation(line: 2590, column: 4, scope: !6735)
!6739 = !DILocation(line: 2590, column: 11, scope: !6735)
!6740 = !DILocation(line: 2590, column: 34, scope: !6735)
!6741 = !DILocation(line: 2590, column: 21, scope: !6735)
!6742 = !DILocation(line: 2591, column: 3, scope: !6604)
!6743 = !DILocation(line: 2627, column: 3, scope: !6604)
!6744 = !DILocation(line: 2627, column: 3, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 2627, column: 3)
!6746 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2627, column: 3)
!6747 = !DILocation(line: 2627, column: 3, scope: !6746)
!6748 = !DILocation(line: 2628, column: 24, scope: !6604)
!6749 = !DILocation(line: 2628, column: 28, scope: !6604)
!6750 = !DILocation(line: 2628, column: 9, scope: !6604)
!6751 = !DILocation(line: 2628, column: 7, scope: !6604)
!6752 = !DILocation(line: 2629, column: 3, scope: !6604)
!6753 = !DILocation(line: 2632, column: 3, scope: !6604)
!6754 = !DILocation(line: 2632, column: 3, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 2632, column: 3)
!6756 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2632, column: 3)
!6757 = !DILocation(line: 2632, column: 3, scope: !6756)
!6758 = !DILocation(line: 2633, column: 31, scope: !6604)
!6759 = !DILocation(line: 2633, column: 35, scope: !6604)
!6760 = !DILocation(line: 2633, column: 9, scope: !6604)
!6761 = !DILocation(line: 2633, column: 7, scope: !6604)
!6762 = !DILocation(line: 2634, column: 3, scope: !6604)
!6763 = !DILocation(line: 2637, column: 3, scope: !6604)
!6764 = !DILocation(line: 2637, column: 3, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6766, file: !3, line: 2637, column: 3)
!6766 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2637, column: 3)
!6767 = !DILocation(line: 2637, column: 3, scope: !6766)
!6768 = !DILocation(line: 2638, column: 29, scope: !6604)
!6769 = !DILocation(line: 2638, column: 33, scope: !6604)
!6770 = !DILocation(line: 2638, column: 9, scope: !6604)
!6771 = !DILocation(line: 2638, column: 7, scope: !6604)
!6772 = !DILocation(line: 2639, column: 3, scope: !6604)
!6773 = !DILocation(line: 2642, column: 3, scope: !6604)
!6774 = !DILocation(line: 2642, column: 3, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6776, file: !3, line: 2642, column: 3)
!6776 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2642, column: 3)
!6777 = !DILocation(line: 2642, column: 3, scope: !6776)
!6778 = !DILocation(line: 2643, column: 31, scope: !6604)
!6779 = !DILocation(line: 2643, column: 35, scope: !6604)
!6780 = !DILocation(line: 2643, column: 9, scope: !6604)
!6781 = !DILocation(line: 2643, column: 7, scope: !6604)
!6782 = !DILocation(line: 2644, column: 3, scope: !6604)
!6783 = !DILocation(line: 2647, column: 3, scope: !6604)
!6784 = !DILocation(line: 2647, column: 3, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 2647, column: 3)
!6786 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2647, column: 3)
!6787 = !DILocation(line: 2647, column: 3, scope: !6786)
!6788 = !DILocation(line: 2648, column: 28, scope: !6604)
!6789 = !DILocation(line: 2648, column: 32, scope: !6604)
!6790 = !DILocation(line: 2648, column: 9, scope: !6604)
!6791 = !DILocation(line: 2648, column: 7, scope: !6604)
!6792 = !DILocation(line: 2649, column: 3, scope: !6604)
!6793 = !DILocation(line: 2652, column: 3, scope: !6604)
!6794 = !DILocation(line: 2652, column: 3, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !3, line: 2652, column: 3)
!6796 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2652, column: 3)
!6797 = !DILocation(line: 2652, column: 3, scope: !6796)
!6798 = !DILocation(line: 2653, column: 25, scope: !6604)
!6799 = !DILocation(line: 2653, column: 29, scope: !6604)
!6800 = !DILocation(line: 2653, column: 9, scope: !6604)
!6801 = !DILocation(line: 2653, column: 7, scope: !6604)
!6802 = !DILocation(line: 2654, column: 3, scope: !6604)
!6803 = !DILocation(line: 2657, column: 3, scope: !6604)
!6804 = !DILocation(line: 2657, column: 3, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 2657, column: 3)
!6806 = distinct !DILexicalBlock(scope: !6604, file: !3, line: 2657, column: 3)
!6807 = !DILocation(line: 2657, column: 3, scope: !6806)
!6808 = !DILocation(line: 2658, column: 27, scope: !6604)
!6809 = !DILocation(line: 2658, column: 31, scope: !6604)
!6810 = !DILocation(line: 2658, column: 9, scope: !6604)
!6811 = !DILocation(line: 2658, column: 7, scope: !6604)
!6812 = !DILocation(line: 2659, column: 3, scope: !6604)
!6813 = !DILocation(line: 2661, column: 31, scope: !6604)
!6814 = !DILocation(line: 2661, column: 35, scope: !6604)
!6815 = !DILocation(line: 2661, column: 9, scope: !6604)
!6816 = !DILocation(line: 2661, column: 7, scope: !6604)
!6817 = !DILocation(line: 2662, column: 3, scope: !6604)
!6818 = !DILocation(line: 2664, column: 31, scope: !6604)
!6819 = !DILocation(line: 2664, column: 35, scope: !6604)
!6820 = !DILocation(line: 2664, column: 9, scope: !6604)
!6821 = !DILocation(line: 2664, column: 7, scope: !6604)
!6822 = !DILocation(line: 2665, column: 3, scope: !6604)
!6823 = !DILocation(line: 2667, column: 28, scope: !6604)
!6824 = !DILocation(line: 2667, column: 32, scope: !6604)
!6825 = !DILocation(line: 2667, column: 9, scope: !6604)
!6826 = !DILocation(line: 2667, column: 7, scope: !6604)
!6827 = !DILocation(line: 2668, column: 3, scope: !6604)
!6828 = !DILocation(line: 2670, column: 27, scope: !6604)
!6829 = !DILocation(line: 2670, column: 31, scope: !6604)
!6830 = !DILocation(line: 2670, column: 9, scope: !6604)
!6831 = !DILocation(line: 2670, column: 7, scope: !6604)
!6832 = !DILocation(line: 2671, column: 3, scope: !6604)
!6833 = !DILocation(line: 2673, column: 30, scope: !6604)
!6834 = !DILocation(line: 2673, column: 34, scope: !6604)
!6835 = !DILocation(line: 2673, column: 9, scope: !6604)
!6836 = !DILocation(line: 2673, column: 7, scope: !6604)
!6837 = !DILocation(line: 2674, column: 3, scope: !6604)
!6838 = !DILocation(line: 2676, column: 9, scope: !6604)
!6839 = !DILocation(line: 2676, column: 13, scope: !6604)
!6840 = !DILocation(line: 2676, column: 18, scope: !6604)
!6841 = !DILocation(line: 2676, column: 7, scope: !6604)
!6842 = !DILocation(line: 2677, column: 3, scope: !6604)
!6843 = !DILocation(line: 2679, column: 29, scope: !6604)
!6844 = !DILocation(line: 2679, column: 9, scope: !6604)
!6845 = !DILocation(line: 2679, column: 7, scope: !6604)
!6846 = !DILocation(line: 2680, column: 3, scope: !6604)
!6847 = !DILocation(line: 2682, column: 28, scope: !6604)
!6848 = !DILocation(line: 2682, column: 9, scope: !6604)
!6849 = !DILocation(line: 2682, column: 7, scope: !6604)
!6850 = !DILocation(line: 2683, column: 3, scope: !6604)
!6851 = !DILocation(line: 2685, column: 30, scope: !6604)
!6852 = !DILocation(line: 2685, column: 9, scope: !6604)
!6853 = !DILocation(line: 2685, column: 7, scope: !6604)
!6854 = !DILocation(line: 2686, column: 3, scope: !6604)
!6855 = !DILocation(line: 2690, column: 10, scope: !6541)
!6856 = !DILocation(line: 2690, column: 14, scope: !6541)
!6857 = !DILocation(line: 2690, column: 2, scope: !6541)
!6858 = !DILocation(line: 2692, column: 26, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 2690, column: 31)
!6860 = !DILocation(line: 2692, column: 30, scope: !6859)
!6861 = !DILocation(line: 2692, column: 33, scope: !6859)
!6862 = !DILocation(line: 2692, column: 9, scope: !6859)
!6863 = !DILocation(line: 2692, column: 7, scope: !6859)
!6864 = !DILocation(line: 2693, column: 3, scope: !6859)
!6865 = !DILocation(line: 2694, column: 2, scope: !6859)
!6866 = !DILabel(scope: !6541, name: "done", file: !3, line: 2696)
!6867 = !DILocation(line: 2696, column: 2, scope: !6541)
!6868 = !DILocation(line: 2697, column: 2, scope: !6541)
!6869 = !DILocation(line: 2698, column: 6, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 2698, column: 6)
!6871 = !DILocation(line: 2698, column: 10, scope: !6870)
!6872 = !DILocation(line: 2698, column: 6, scope: !6541)
!6873 = !DILocation(line: 2699, column: 3, scope: !6870)
!6874 = !DILocation(line: 2699, column: 10, scope: !6870)
!6875 = !DILocation(line: 2699, column: 33, scope: !6870)
!6876 = !DILocation(line: 2699, column: 20, scope: !6870)
!6877 = !DILocation(line: 2700, column: 9, scope: !6541)
!6878 = !DILocation(line: 2700, column: 2, scope: !6541)
!6879 = !DILocation(line: 2701, column: 1, scope: !6541)
!6880 = distinct !DISubprogram(name: "file_inode", scope: !65, file: !65, line: 1299, type: !6881, scopeLine: 1300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6881 = !DISubroutineType(types: !6882)
!6882 = !{!473, !6883}
!6883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6884, size: 64)
!6884 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !401)
!6885 = !DILocalVariable(name: "f", arg: 1, scope: !6880, file: !65, line: 1299, type: !6883)
!6886 = !DILocation(line: 1299, column: 59, scope: !6880)
!6887 = !DILocation(line: 1301, column: 9, scope: !6880)
!6888 = !DILocation(line: 1301, column: 12, scope: !6880)
!6889 = !DILocation(line: 1301, column: 2, scope: !6880)
!6890 = distinct !DISubprogram(name: "proc_reapurb", scope: !3, file: !3, line: 1993, type: !6891, scopeLine: 1994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6891 = !DISubroutineType(types: !6892)
!6892 = !{!205, !190, !189}
!6893 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !6894)
!6894 = distinct !DILocation(line: 2005, column: 21, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 2005, column: 6)
!6896 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !6894)
!6897 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !6894)
!6898 = !DILocalVariable(name: "ps", arg: 1, scope: !6890, file: !3, line: 1993, type: !190)
!6899 = !DILocation(line: 1993, column: 47, scope: !6890)
!6900 = !DILocalVariable(name: "arg", arg: 2, scope: !6890, file: !3, line: 1993, type: !189)
!6901 = !DILocation(line: 1993, column: 64, scope: !6890)
!6902 = !DILocalVariable(name: "as", scope: !6890, file: !3, line: 1995, type: !4429)
!6903 = !DILocation(line: 1995, column: 16, scope: !6890)
!6904 = !DILocation(line: 1995, column: 29, scope: !6890)
!6905 = !DILocation(line: 1995, column: 21, scope: !6890)
!6906 = !DILocation(line: 1997, column: 6, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 1997, column: 6)
!6908 = !DILocation(line: 1997, column: 6, scope: !6890)
!6909 = !DILocalVariable(name: "retval", scope: !6910, file: !3, line: 1998, type: !205)
!6910 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 1997, column: 10)
!6911 = !DILocation(line: 1998, column: 7, scope: !6910)
!6912 = !DILocation(line: 2000, column: 3, scope: !6910)
!6913 = !DILocation(line: 2000, column: 3, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !3, line: 2000, column: 3)
!6915 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 2000, column: 3)
!6916 = !DILocation(line: 2000, column: 3, scope: !6915)
!6917 = !DILocation(line: 2001, column: 25, scope: !6910)
!6918 = !DILocation(line: 2001, column: 53, scope: !6910)
!6919 = !DILocation(line: 2001, column: 29, scope: !6910)
!6920 = !DILocation(line: 2001, column: 12, scope: !6910)
!6921 = !DILocation(line: 2001, column: 10, scope: !6910)
!6922 = !DILocation(line: 2002, column: 14, scope: !6910)
!6923 = !DILocation(line: 2002, column: 3, scope: !6910)
!6924 = !DILocation(line: 2003, column: 10, scope: !6910)
!6925 = !DILocation(line: 2003, column: 3, scope: !6910)
!6926 = !DILocation(line: 2005, column: 6, scope: !6895)
!6927 = !DILocation(line: 2005, column: 6, scope: !6890)
!6928 = !DILocation(line: 2006, column: 3, scope: !6895)
!6929 = !DILocation(line: 2007, column: 2, scope: !6890)
!6930 = !DILocation(line: 2008, column: 1, scope: !6890)
!6931 = distinct !DISubprogram(name: "proc_reapurbnonblock", scope: !3, file: !3, line: 2010, type: !6891, scopeLine: 2011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6932 = !DILocalVariable(name: "ps", arg: 1, scope: !6931, file: !3, line: 2010, type: !190)
!6933 = !DILocation(line: 2010, column: 55, scope: !6931)
!6934 = !DILocalVariable(name: "arg", arg: 2, scope: !6931, file: !3, line: 2010, type: !189)
!6935 = !DILocation(line: 2010, column: 72, scope: !6931)
!6936 = !DILocalVariable(name: "retval", scope: !6931, file: !3, line: 2012, type: !205)
!6937 = !DILocation(line: 2012, column: 6, scope: !6931)
!6938 = !DILocalVariable(name: "as", scope: !6931, file: !3, line: 2013, type: !4429)
!6939 = !DILocation(line: 2013, column: 16, scope: !6931)
!6940 = !DILocation(line: 2015, column: 26, scope: !6931)
!6941 = !DILocation(line: 2015, column: 7, scope: !6931)
!6942 = !DILocation(line: 2015, column: 5, scope: !6931)
!6943 = !DILocation(line: 2016, column: 6, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 2016, column: 6)
!6945 = !DILocation(line: 2016, column: 6, scope: !6931)
!6946 = !DILocation(line: 2017, column: 3, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 2016, column: 10)
!6948 = !DILocation(line: 2017, column: 3, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !3, line: 2017, column: 3)
!6950 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 2017, column: 3)
!6951 = !DILocation(line: 2017, column: 3, scope: !6950)
!6952 = !DILocation(line: 2018, column: 25, scope: !6947)
!6953 = !DILocation(line: 2018, column: 53, scope: !6947)
!6954 = !DILocation(line: 2018, column: 29, scope: !6947)
!6955 = !DILocation(line: 2018, column: 12, scope: !6947)
!6956 = !DILocation(line: 2018, column: 10, scope: !6947)
!6957 = !DILocation(line: 2019, column: 14, scope: !6947)
!6958 = !DILocation(line: 2019, column: 3, scope: !6947)
!6959 = !DILocation(line: 2020, column: 2, scope: !6947)
!6960 = !DILocation(line: 2021, column: 23, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 2020, column: 9)
!6962 = !DILocation(line: 2021, column: 13, scope: !6961)
!6963 = !DILocation(line: 2021, column: 10, scope: !6961)
!6964 = !DILocation(line: 2023, column: 9, scope: !6931)
!6965 = !DILocation(line: 2023, column: 2, scope: !6931)
!6966 = distinct !DISubprogram(name: "proc_control", scope: !3, file: !3, line: 1185, type: !6891, scopeLine: 1186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6967 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !6968)
!6968 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !6971)
!6969 = distinct !DILexicalBlock(scope: !6970, file: !5064, line: 191, column: 6)
!6970 = distinct !DISubprogram(name: "copy_from_user", scope: !5064, file: !5064, line: 189, type: !5066, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!6971 = distinct !DILocation(line: 1189, column: 6, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 1189, column: 6)
!6973 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !6968)
!6974 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !6968)
!6975 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !6968)
!6976 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !6968)
!6977 = !DILocalVariable(name: "to", arg: 1, scope: !6970, file: !5064, line: 189, type: !189)
!6978 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !6971)
!6979 = !DILocalVariable(name: "from", arg: 2, scope: !6970, file: !5064, line: 189, type: !2320)
!6980 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !6971)
!6981 = !DILocalVariable(name: "n", arg: 3, scope: !6970, file: !5064, line: 189, type: !372)
!6982 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !6971)
!6983 = !DILocalVariable(name: "ps", arg: 1, scope: !6966, file: !3, line: 1185, type: !190)
!6984 = !DILocation(line: 1185, column: 47, scope: !6966)
!6985 = !DILocalVariable(name: "arg", arg: 2, scope: !6966, file: !3, line: 1185, type: !189)
!6986 = !DILocation(line: 1185, column: 64, scope: !6966)
!6987 = !DILocalVariable(name: "ctrl", scope: !6966, file: !3, line: 1187, type: !6988)
!6988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdevfs_ctrltransfer", file: !4534, line: 40, size: 192, elements: !6989)
!6989 = !{!6990, !6991, !6992, !6993, !6994, !6995, !6996}
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "bRequestType", scope: !6988, file: !4534, line: 41, baseType: !1390, size: 8)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "bRequest", scope: !6988, file: !4534, line: 42, baseType: !1390, size: 8, offset: 8)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "wValue", scope: !6988, file: !4534, line: 43, baseType: !898, size: 16, offset: 16)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "wIndex", scope: !6988, file: !4534, line: 44, baseType: !898, size: 16, offset: 32)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "wLength", scope: !6988, file: !4534, line: 45, baseType: !898, size: 16, offset: 48)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6988, file: !4534, line: 46, baseType: !214, size: 32, offset: 64)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6988, file: !4534, line: 47, baseType: !189, size: 64, offset: 128)
!6997 = !DILocation(line: 1187, column: 31, scope: !6966)
!6998 = !DILocation(line: 1189, column: 21, scope: !6972)
!6999 = !DILocation(line: 1189, column: 28, scope: !6972)
!7000 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !6971)
!7001 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !6968)
!7002 = !DILocation(line: 0, scope: !5187, inlinedAt: !6968)
!7003 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !6968)
!7004 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !6968)
!7005 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !6968)
!7006 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !6968)
!7007 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !6968)
!7008 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !6968)
!7009 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !6968)
!7010 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !6968)
!7011 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !6968)
!7012 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !6968)
!7013 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !6968)
!7014 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !6968)
!7015 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !6968)
!7016 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !6968)
!7017 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !6968)
!7018 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !6968)
!7019 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !6968)
!7020 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !6968)
!7021 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !6968)
!7022 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !6968)
!7023 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !6968)
!7024 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !6968)
!7025 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !6968)
!7026 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !6968)
!7027 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !6968)
!7028 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !6971)
!7029 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !6971)
!7030 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !6971)
!7031 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !6971)
!7032 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !6971)
!7033 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !6971)
!7034 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !6971)
!7035 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !6971)
!7036 = !DILocation(line: 1189, column: 6, scope: !6972)
!7037 = !DILocation(line: 1189, column: 6, scope: !6966)
!7038 = !DILocation(line: 1190, column: 3, scope: !6972)
!7039 = !DILocation(line: 1191, column: 25, scope: !6966)
!7040 = !DILocation(line: 1191, column: 9, scope: !6966)
!7041 = !DILocation(line: 1191, column: 2, scope: !6966)
!7042 = !DILocation(line: 1192, column: 1, scope: !6966)
!7043 = distinct !DISubprogram(name: "proc_bulk", scope: !3, file: !3, line: 1262, type: !6891, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!7044 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !7045)
!7045 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !7046)
!7046 = distinct !DILocation(line: 1266, column: 6, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 1266, column: 6)
!7048 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !7045)
!7049 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !7045)
!7050 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !7045)
!7051 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !7045)
!7052 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !7046)
!7053 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !7046)
!7054 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !7046)
!7055 = !DILocalVariable(name: "ps", arg: 1, scope: !7043, file: !3, line: 1262, type: !190)
!7056 = !DILocation(line: 1262, column: 44, scope: !7043)
!7057 = !DILocalVariable(name: "arg", arg: 2, scope: !7043, file: !3, line: 1262, type: !189)
!7058 = !DILocation(line: 1262, column: 61, scope: !7043)
!7059 = !DILocalVariable(name: "bulk", scope: !7043, file: !3, line: 1264, type: !7060)
!7060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdevfs_bulktransfer", file: !4534, line: 50, size: 192, elements: !7061)
!7061 = !{!7062, !7063, !7064, !7065}
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "ep", scope: !7060, file: !4534, line: 51, baseType: !7, size: 32)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7060, file: !4534, line: 52, baseType: !7, size: 32, offset: 32)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7060, file: !4534, line: 53, baseType: !7, size: 32, offset: 64)
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7060, file: !4534, line: 54, baseType: !189, size: 64, offset: 128)
!7066 = !DILocation(line: 1264, column: 31, scope: !7043)
!7067 = !DILocation(line: 1266, column: 21, scope: !7047)
!7068 = !DILocation(line: 1266, column: 28, scope: !7047)
!7069 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !7046)
!7070 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !7045)
!7071 = !DILocation(line: 0, scope: !5187, inlinedAt: !7045)
!7072 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !7045)
!7073 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !7045)
!7074 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !7045)
!7075 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !7045)
!7076 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !7045)
!7077 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !7045)
!7078 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !7045)
!7079 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !7045)
!7080 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !7045)
!7081 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !7045)
!7082 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !7045)
!7083 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !7045)
!7084 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !7045)
!7085 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !7045)
!7086 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !7045)
!7087 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !7045)
!7088 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !7045)
!7089 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !7045)
!7090 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !7045)
!7091 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !7045)
!7092 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !7045)
!7093 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !7045)
!7094 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !7045)
!7095 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !7045)
!7096 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !7045)
!7097 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !7046)
!7098 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !7046)
!7099 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !7046)
!7100 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !7046)
!7101 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !7046)
!7102 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !7046)
!7103 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !7046)
!7104 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !7046)
!7105 = !DILocation(line: 1266, column: 6, scope: !7047)
!7106 = !DILocation(line: 1266, column: 6, scope: !7043)
!7107 = !DILocation(line: 1267, column: 3, scope: !7047)
!7108 = !DILocation(line: 1268, column: 22, scope: !7043)
!7109 = !DILocation(line: 1268, column: 9, scope: !7043)
!7110 = !DILocation(line: 1268, column: 2, scope: !7043)
!7111 = !DILocation(line: 1269, column: 1, scope: !7043)
!7112 = distinct !DISubprogram(name: "proc_resetep", scope: !3, file: !3, line: 1285, type: !6891, scopeLine: 1286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!7113 = !DILocalVariable(name: "ps", arg: 1, scope: !7112, file: !3, line: 1285, type: !190)
!7114 = !DILocation(line: 1285, column: 47, scope: !7112)
!7115 = !DILocalVariable(name: "arg", arg: 2, scope: !7112, file: !3, line: 1285, type: !189)
!7116 = !DILocation(line: 1285, column: 64, scope: !7112)
!7117 = !DILocalVariable(name: "ep", scope: !7112, file: !3, line: 1287, type: !7)
!7118 = !DILocation(line: 1287, column: 15, scope: !7112)
!7119 = !DILocalVariable(name: "ret", scope: !7112, file: !3, line: 1288, type: !205)
!7120 = !DILocation(line: 1288, column: 6, scope: !7112)
!7121 = !DILocation(line: 1290, column: 6, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7123, file: !3, line: 1290, column: 6)
!7123 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 1290, column: 6)
!7124 = !DILocalVariable(name: "__ret_gu", scope: !7125, file: !3, line: 1290, type: !205)
!7125 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 1290, column: 6)
!7126 = !DILocation(line: 1290, column: 6, scope: !7125)
!7127 = !DILocalVariable(name: "__val_gu", scope: !7125, file: !3, line: 1290, type: !7)
!7128 = !{i32 -2140955448}
!7129 = !DILocation(line: 1290, column: 6, scope: !7123)
!7130 = !DILocation(line: 1290, column: 6, scope: !7112)
!7131 = !DILocation(line: 1291, column: 3, scope: !7123)
!7132 = !DILocation(line: 1292, column: 19, scope: !7112)
!7133 = !DILocation(line: 1292, column: 23, scope: !7112)
!7134 = !DILocation(line: 1292, column: 28, scope: !7112)
!7135 = !DILocation(line: 1292, column: 8, scope: !7112)
!7136 = !DILocation(line: 1292, column: 6, scope: !7112)
!7137 = !DILocation(line: 1293, column: 6, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 1293, column: 6)
!7139 = !DILocation(line: 1293, column: 10, scope: !7138)
!7140 = !DILocation(line: 1293, column: 6, scope: !7112)
!7141 = !DILocation(line: 1294, column: 10, scope: !7138)
!7142 = !DILocation(line: 1294, column: 3, scope: !7138)
!7143 = !DILocation(line: 1295, column: 18, scope: !7112)
!7144 = !DILocation(line: 1295, column: 22, scope: !7112)
!7145 = !DILocation(line: 1295, column: 8, scope: !7112)
!7146 = !DILocation(line: 1295, column: 6, scope: !7112)
!7147 = !DILocation(line: 1296, column: 6, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 1296, column: 6)
!7149 = !DILocation(line: 1296, column: 6, scope: !7112)
!7150 = !DILocation(line: 1297, column: 10, scope: !7148)
!7151 = !DILocation(line: 1297, column: 3, scope: !7148)
!7152 = !DILocation(line: 1298, column: 27, scope: !7112)
!7153 = !DILocation(line: 1298, column: 31, scope: !7112)
!7154 = !DILocation(line: 1298, column: 36, scope: !7112)
!7155 = !DILocation(line: 1298, column: 2, scope: !7112)
!7156 = !DILocation(line: 1299, column: 21, scope: !7112)
!7157 = !DILocation(line: 1299, column: 25, scope: !7112)
!7158 = !DILocation(line: 1299, column: 30, scope: !7112)
!7159 = !DILocation(line: 1299, column: 2, scope: !7112)
!7160 = !DILocation(line: 1300, column: 2, scope: !7112)
!7161 = !DILocation(line: 1301, column: 1, scope: !7112)
!7162 = distinct !DISubprogram(name: "proc_resetdevice", scope: !3, file: !3, line: 1391, type: !6454, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!7163 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !7164)
!7164 = distinct !DILocation(line: 1407, column: 5, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 1406, column: 41)
!7166 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 1405, column: 8)
!7167 = distinct !DILexicalBlock(scope: !7168, file: !3, line: 1402, column: 56)
!7168 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 1402, column: 3)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 1402, column: 3)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !3, line: 1401, column: 43)
!7171 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 1401, column: 6)
!7172 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !7164)
!7173 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !7164)
!7174 = !DILocalVariable(name: "ps", arg: 1, scope: !7162, file: !3, line: 1391, type: !190)
!7175 = !DILocation(line: 1391, column: 51, scope: !7162)
!7176 = !DILocalVariable(name: "actconfig", scope: !7162, file: !3, line: 1393, type: !4269)
!7177 = !DILocation(line: 1393, column: 26, scope: !7162)
!7178 = !DILocation(line: 1393, column: 38, scope: !7162)
!7179 = !DILocation(line: 1393, column: 42, scope: !7162)
!7180 = !DILocation(line: 1393, column: 47, scope: !7162)
!7181 = !DILocalVariable(name: "interface", scope: !7162, file: !3, line: 1394, type: !4299)
!7182 = !DILocation(line: 1394, column: 24, scope: !7162)
!7183 = !DILocalVariable(name: "i", scope: !7162, file: !3, line: 1395, type: !205)
!7184 = !DILocation(line: 1395, column: 6, scope: !7162)
!7185 = !DILocalVariable(name: "number", scope: !7162, file: !3, line: 1395, type: !205)
!7186 = !DILocation(line: 1395, column: 9, scope: !7162)
!7187 = !DILocation(line: 1401, column: 6, scope: !7171)
!7188 = !DILocation(line: 1401, column: 10, scope: !7171)
!7189 = !DILocation(line: 1401, column: 29, scope: !7171)
!7190 = !DILocation(line: 1401, column: 32, scope: !7171)
!7191 = !DILocation(line: 1401, column: 6, scope: !7162)
!7192 = !DILocation(line: 1402, column: 10, scope: !7169)
!7193 = !DILocation(line: 1402, column: 8, scope: !7169)
!7194 = !DILocation(line: 1402, column: 15, scope: !7168)
!7195 = !DILocation(line: 1402, column: 19, scope: !7168)
!7196 = !DILocation(line: 1402, column: 30, scope: !7168)
!7197 = !DILocation(line: 1402, column: 35, scope: !7168)
!7198 = !DILocation(line: 1402, column: 17, scope: !7168)
!7199 = !DILocation(line: 1402, column: 3, scope: !7169)
!7200 = !DILocation(line: 1403, column: 16, scope: !7167)
!7201 = !DILocation(line: 1403, column: 27, scope: !7167)
!7202 = !DILocation(line: 1403, column: 37, scope: !7167)
!7203 = !DILocation(line: 1403, column: 14, scope: !7167)
!7204 = !DILocation(line: 1404, column: 13, scope: !7167)
!7205 = !DILocation(line: 1404, column: 24, scope: !7167)
!7206 = !DILocation(line: 1404, column: 40, scope: !7167)
!7207 = !DILocation(line: 1404, column: 45, scope: !7167)
!7208 = !DILocation(line: 1404, column: 11, scope: !7167)
!7209 = !DILocation(line: 1405, column: 30, scope: !7166)
!7210 = !DILocation(line: 1405, column: 8, scope: !7166)
!7211 = !DILocation(line: 1405, column: 41, scope: !7166)
!7212 = !DILocation(line: 1406, column: 16, scope: !7166)
!7213 = !DILocation(line: 1406, column: 25, scope: !7166)
!7214 = !DILocation(line: 1406, column: 29, scope: !7166)
!7215 = !DILocation(line: 1406, column: 7, scope: !7166)
!7216 = !DILocation(line: 1405, column: 8, scope: !7167)
!7217 = !DILocation(line: 1407, column: 5, scope: !7165)
!7218 = !DILocation(line: 1410, column: 5, scope: !7165)
!7219 = !DILocation(line: 1412, column: 3, scope: !7167)
!7220 = !DILocation(line: 1402, column: 51, scope: !7168)
!7221 = !DILocation(line: 1402, column: 3, scope: !7168)
!7222 = distinct !{!7222, !7199, !7223}
!7223 = !DILocation(line: 1412, column: 3, scope: !7169)
!7224 = !DILocation(line: 1413, column: 2, scope: !7170)
!7225 = !DILocation(line: 1415, column: 26, scope: !7162)
!7226 = !DILocation(line: 1415, column: 30, scope: !7162)
!7227 = !DILocation(line: 1415, column: 9, scope: !7162)
!7228 = !DILocation(line: 1415, column: 2, scope: !7162)
!7229 = !DILocation(line: 1416, column: 1, scope: !7162)
!7230 = distinct !DISubprogram(name: "proc_clearhalt", scope: !3, file: !3, line: 1303, type: !6891, scopeLine: 1304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!7231 = !DILocalVariable(name: "ps", arg: 1, scope: !7230, file: !3, line: 1303, type: !190)
!7232 = !DILocation(line: 1303, column: 49, scope: !7230)
!7233 = !DILocalVariable(name: "arg", arg: 2, scope: !7230, file: !3, line: 1303, type: !189)
!7234 = !DILocation(line: 1303, column: 66, scope: !7230)
!7235 = !DILocalVariable(name: "ep", scope: !7230, file: !3, line: 1305, type: !7)
!7236 = !DILocation(line: 1305, column: 15, scope: !7230)
!7237 = !DILocalVariable(name: "pipe", scope: !7230, file: !3, line: 1306, type: !205)
!7238 = !DILocation(line: 1306, column: 6, scope: !7230)
!7239 = !DILocalVariable(name: "ret", scope: !7230, file: !3, line: 1307, type: !205)
!7240 = !DILocation(line: 1307, column: 6, scope: !7230)
!7241 = !DILocation(line: 1309, column: 6, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 1309, column: 6)
!7243 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 1309, column: 6)
!7244 = !DILocalVariable(name: "__ret_gu", scope: !7245, file: !3, line: 1309, type: !205)
!7245 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 1309, column: 6)
!7246 = !DILocation(line: 1309, column: 6, scope: !7245)
!7247 = !DILocalVariable(name: "__val_gu", scope: !7245, file: !3, line: 1309, type: !7)
!7248 = !{i32 -2140953350}
!7249 = !DILocation(line: 1309, column: 6, scope: !7243)
!7250 = !DILocation(line: 1309, column: 6, scope: !7230)
!7251 = !DILocation(line: 1310, column: 3, scope: !7243)
!7252 = !DILocation(line: 1311, column: 19, scope: !7230)
!7253 = !DILocation(line: 1311, column: 23, scope: !7230)
!7254 = !DILocation(line: 1311, column: 28, scope: !7230)
!7255 = !DILocation(line: 1311, column: 8, scope: !7230)
!7256 = !DILocation(line: 1311, column: 6, scope: !7230)
!7257 = !DILocation(line: 1312, column: 6, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 1312, column: 6)
!7259 = !DILocation(line: 1312, column: 10, scope: !7258)
!7260 = !DILocation(line: 1312, column: 6, scope: !7230)
!7261 = !DILocation(line: 1313, column: 10, scope: !7258)
!7262 = !DILocation(line: 1313, column: 3, scope: !7258)
!7263 = !DILocation(line: 1314, column: 18, scope: !7230)
!7264 = !DILocation(line: 1314, column: 22, scope: !7230)
!7265 = !DILocation(line: 1314, column: 8, scope: !7230)
!7266 = !DILocation(line: 1314, column: 6, scope: !7230)
!7267 = !DILocation(line: 1315, column: 6, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 1315, column: 6)
!7269 = !DILocation(line: 1315, column: 6, scope: !7230)
!7270 = !DILocation(line: 1316, column: 10, scope: !7268)
!7271 = !DILocation(line: 1316, column: 3, scope: !7268)
!7272 = !DILocation(line: 1317, column: 27, scope: !7230)
!7273 = !DILocation(line: 1317, column: 31, scope: !7230)
!7274 = !DILocation(line: 1317, column: 36, scope: !7230)
!7275 = !DILocation(line: 1317, column: 2, scope: !7230)
!7276 = !DILocation(line: 1318, column: 6, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7230, file: !3, line: 1318, column: 6)
!7278 = !DILocation(line: 1318, column: 9, scope: !7277)
!7279 = !DILocation(line: 1318, column: 6, scope: !7230)
!7280 = !DILocation(line: 1319, column: 10, scope: !7277)
!7281 = !DILocation(line: 1319, column: 8, scope: !7277)
!7282 = !DILocation(line: 1319, column: 3, scope: !7277)
!7283 = !DILocation(line: 1321, column: 10, scope: !7277)
!7284 = !DILocation(line: 1321, column: 8, scope: !7277)
!7285 = !DILocation(line: 1323, column: 24, scope: !7230)
!7286 = !DILocation(line: 1323, column: 28, scope: !7230)
!7287 = !DILocation(line: 1323, column: 33, scope: !7230)
!7288 = !DILocation(line: 1323, column: 9, scope: !7230)
!7289 = !DILocation(line: 1323, column: 2, scope: !7230)
!7290 = !DILocation(line: 1324, column: 1, scope: !7230)
!7291 = distinct !DISubprogram(name: "proc_getdriver", scope: !3, file: !3, line: 1326, type: !6891, scopeLine: 1327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!7292 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !7293)
!7293 = distinct !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !7294)
!7294 = distinct !DILocation(line: 1340, column: 10, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7296, file: !3, line: 1337, column: 7)
!7296 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 1335, column: 6)
!7297 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !7293)
!7298 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !7293)
!7299 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !7293)
!7300 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !7293)
!7301 = !DILocation(line: 197, column: 27, scope: !5065, inlinedAt: !7294)
!7302 = !DILocation(line: 197, column: 43, scope: !5065, inlinedAt: !7294)
!7303 = !DILocation(line: 197, column: 63, scope: !5065, inlinedAt: !7294)
!7304 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !7305)
!7305 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !7306)
!7306 = distinct !DILocation(line: 1332, column: 6, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 1332, column: 6)
!7308 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !7305)
!7309 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !7305)
!7310 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !7305)
!7311 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !7305)
!7312 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !7306)
!7313 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !7306)
!7314 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !7306)
!7315 = !DILocalVariable(name: "ps", arg: 1, scope: !7291, file: !3, line: 1326, type: !190)
!7316 = !DILocation(line: 1326, column: 49, scope: !7291)
!7317 = !DILocalVariable(name: "arg", arg: 2, scope: !7291, file: !3, line: 1326, type: !189)
!7318 = !DILocation(line: 1326, column: 66, scope: !7291)
!7319 = !DILocalVariable(name: "gd", scope: !7291, file: !3, line: 1328, type: !7320)
!7320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdevfs_getdriver", file: !4534, line: 69, size: 2080, elements: !7321)
!7321 = !{!7322, !7323}
!7322 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !7320, file: !4534, line: 70, baseType: !7, size: 32)
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7320, file: !4534, line: 71, baseType: !7324, size: 2048, offset: 32)
!7324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 2048, elements: !7325)
!7325 = !{!7326}
!7326 = !DISubrange(count: 256)
!7327 = !DILocation(line: 1328, column: 28, scope: !7291)
!7328 = !DILocalVariable(name: "intf", scope: !7291, file: !3, line: 1329, type: !4299)
!7329 = !DILocation(line: 1329, column: 24, scope: !7291)
!7330 = !DILocalVariable(name: "ret", scope: !7291, file: !3, line: 1330, type: !205)
!7331 = !DILocation(line: 1330, column: 6, scope: !7291)
!7332 = !DILocation(line: 1332, column: 21, scope: !7307)
!7333 = !DILocation(line: 1332, column: 26, scope: !7307)
!7334 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !7306)
!7335 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !7305)
!7336 = !DILocation(line: 0, scope: !5187, inlinedAt: !7305)
!7337 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !7305)
!7338 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !7305)
!7339 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !7305)
!7340 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !7305)
!7341 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !7305)
!7342 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !7305)
!7343 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !7305)
!7344 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !7305)
!7345 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !7305)
!7346 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !7305)
!7347 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !7305)
!7348 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !7305)
!7349 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !7305)
!7350 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !7305)
!7351 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !7305)
!7352 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !7305)
!7353 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !7305)
!7354 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !7305)
!7355 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !7305)
!7356 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !7305)
!7357 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !7305)
!7358 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !7305)
!7359 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !7305)
!7360 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !7305)
!7361 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !7305)
!7362 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !7306)
!7363 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !7306)
!7364 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !7306)
!7365 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !7306)
!7366 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !7306)
!7367 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !7306)
!7368 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !7306)
!7369 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !7306)
!7370 = !DILocation(line: 1332, column: 6, scope: !7307)
!7371 = !DILocation(line: 1332, column: 6, scope: !7291)
!7372 = !DILocation(line: 1333, column: 3, scope: !7307)
!7373 = !DILocation(line: 1334, column: 25, scope: !7291)
!7374 = !DILocation(line: 1334, column: 29, scope: !7291)
!7375 = !DILocation(line: 1334, column: 37, scope: !7291)
!7376 = !DILocation(line: 1334, column: 9, scope: !7291)
!7377 = !DILocation(line: 1334, column: 7, scope: !7291)
!7378 = !DILocation(line: 1335, column: 7, scope: !7296)
!7379 = !DILocation(line: 1335, column: 12, scope: !7296)
!7380 = !DILocation(line: 1335, column: 16, scope: !7296)
!7381 = !DILocation(line: 1335, column: 22, scope: !7296)
!7382 = !DILocation(line: 1335, column: 26, scope: !7296)
!7383 = !DILocation(line: 1335, column: 6, scope: !7291)
!7384 = !DILocation(line: 1336, column: 7, scope: !7296)
!7385 = !DILocation(line: 1336, column: 3, scope: !7296)
!7386 = !DILocation(line: 1338, column: 14, scope: !7295)
!7387 = !DILocation(line: 1338, column: 11, scope: !7295)
!7388 = !DILocation(line: 1338, column: 22, scope: !7295)
!7389 = !DILocation(line: 1338, column: 28, scope: !7295)
!7390 = !DILocation(line: 1338, column: 32, scope: !7295)
!7391 = !DILocation(line: 1338, column: 40, scope: !7295)
!7392 = !DILocation(line: 1338, column: 3, scope: !7295)
!7393 = !DILocation(line: 1340, column: 23, scope: !7295)
!7394 = !DILocation(line: 1340, column: 28, scope: !7295)
!7395 = !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !7294)
!7396 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !7293)
!7397 = !DILocation(line: 0, scope: !5187, inlinedAt: !7293)
!7398 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !7293)
!7399 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !7293)
!7400 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !7293)
!7401 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !7293)
!7402 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !7293)
!7403 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !7293)
!7404 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !7293)
!7405 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !7293)
!7406 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !7293)
!7407 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !7293)
!7408 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !7293)
!7409 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !7293)
!7410 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !7293)
!7411 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !7293)
!7412 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !7293)
!7413 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !7293)
!7414 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !7293)
!7415 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !7293)
!7416 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !7293)
!7417 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !7293)
!7418 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !7293)
!7419 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !7293)
!7420 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !7293)
!7421 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !7293)
!7422 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !7293)
!7423 = !DILocation(line: 199, column: 6, scope: !5065, inlinedAt: !7294)
!7424 = !DILocation(line: 200, column: 21, scope: !5063, inlinedAt: !7294)
!7425 = !DILocation(line: 200, column: 25, scope: !5063, inlinedAt: !7294)
!7426 = !DILocation(line: 200, column: 31, scope: !5063, inlinedAt: !7294)
!7427 = !DILocation(line: 200, column: 7, scope: !5063, inlinedAt: !7294)
!7428 = !DILocation(line: 200, column: 5, scope: !5063, inlinedAt: !7294)
!7429 = !DILocation(line: 200, column: 3, scope: !5063, inlinedAt: !7294)
!7430 = !DILocation(line: 201, column: 9, scope: !5065, inlinedAt: !7294)
!7431 = !DILocation(line: 1340, column: 10, scope: !7295)
!7432 = !DILocation(line: 1340, column: 7, scope: !7295)
!7433 = !DILocation(line: 1342, column: 9, scope: !7291)
!7434 = !DILocation(line: 1342, column: 2, scope: !7291)
!7435 = !DILocation(line: 1343, column: 1, scope: !7291)
!7436 = distinct !DISubprogram(name: "proc_connectinfo", scope: !3, file: !3, line: 1345, type: !6891, scopeLine: 1346, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!7437 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !7438)
!7438 = distinct !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !7439)
!7439 = distinct !DILocation(line: 1353, column: 6, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7436, file: !3, line: 1353, column: 6)
!7441 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !7438)
!7442 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !7438)
!7443 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !7438)
!7444 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !7438)
!7445 = !DILocation(line: 197, column: 27, scope: !5065, inlinedAt: !7439)
!7446 = !DILocation(line: 197, column: 43, scope: !5065, inlinedAt: !7439)
!7447 = !DILocation(line: 197, column: 63, scope: !5065, inlinedAt: !7439)
!7448 = !DILocalVariable(name: "ps", arg: 1, scope: !7436, file: !3, line: 1345, type: !190)
!7449 = !DILocation(line: 1345, column: 51, scope: !7436)
!7450 = !DILocalVariable(name: "arg", arg: 2, scope: !7436, file: !3, line: 1345, type: !189)
!7451 = !DILocation(line: 1345, column: 68, scope: !7436)
!7452 = !DILocalVariable(name: "ci", scope: !7436, file: !3, line: 1347, type: !7453)
!7453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdevfs_connectinfo", file: !4534, line: 74, size: 64, elements: !7454)
!7454 = !{!7455, !7456}
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "devnum", scope: !7453, file: !4534, line: 75, baseType: !7, size: 32)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "slow", scope: !7453, file: !4534, line: 76, baseType: !471, size: 8, offset: 32)
!7457 = !DILocation(line: 1347, column: 30, scope: !7436)
!7458 = !DILocation(line: 1349, column: 2, scope: !7436)
!7459 = !DILocation(line: 1350, column: 14, scope: !7436)
!7460 = !DILocation(line: 1350, column: 18, scope: !7436)
!7461 = !DILocation(line: 1350, column: 23, scope: !7436)
!7462 = !DILocation(line: 1350, column: 5, scope: !7436)
!7463 = !DILocation(line: 1350, column: 12, scope: !7436)
!7464 = !DILocation(line: 1351, column: 12, scope: !7436)
!7465 = !DILocation(line: 1351, column: 16, scope: !7436)
!7466 = !DILocation(line: 1351, column: 21, scope: !7436)
!7467 = !DILocation(line: 1351, column: 27, scope: !7436)
!7468 = !DILocation(line: 1351, column: 5, scope: !7436)
!7469 = !DILocation(line: 1351, column: 10, scope: !7436)
!7470 = !DILocation(line: 1353, column: 19, scope: !7440)
!7471 = !DILocation(line: 1353, column: 24, scope: !7440)
!7472 = !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !7439)
!7473 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !7438)
!7474 = !DILocation(line: 0, scope: !5187, inlinedAt: !7438)
!7475 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !7438)
!7476 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !7438)
!7477 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !7438)
!7478 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !7438)
!7479 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !7438)
!7480 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !7438)
!7481 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !7438)
!7482 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !7438)
!7483 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !7438)
!7484 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !7438)
!7485 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !7438)
!7486 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !7438)
!7487 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !7438)
!7488 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !7438)
!7489 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !7438)
!7490 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !7438)
!7491 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !7438)
!7492 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !7438)
!7493 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !7438)
!7494 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !7438)
!7495 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !7438)
!7496 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !7438)
!7497 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !7438)
!7498 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !7438)
!7499 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !7438)
!7500 = !DILocation(line: 199, column: 6, scope: !5065, inlinedAt: !7439)
!7501 = !DILocation(line: 200, column: 21, scope: !5063, inlinedAt: !7439)
!7502 = !DILocation(line: 200, column: 25, scope: !5063, inlinedAt: !7439)
!7503 = !DILocation(line: 200, column: 31, scope: !5063, inlinedAt: !7439)
!7504 = !DILocation(line: 200, column: 7, scope: !5063, inlinedAt: !7439)
!7505 = !DILocation(line: 200, column: 5, scope: !5063, inlinedAt: !7439)
!7506 = !DILocation(line: 200, column: 3, scope: !5063, inlinedAt: !7439)
!7507 = !DILocation(line: 201, column: 9, scope: !5065, inlinedAt: !7439)
!7508 = !DILocation(line: 1353, column: 6, scope: !7440)
!7509 = !DILocation(line: 1353, column: 6, scope: !7436)
!7510 = !DILocation(line: 1354, column: 3, scope: !7440)
!7511 = !DILocation(line: 1355, column: 2, scope: !7436)
!7512 = !DILocation(line: 1356, column: 1, scope: !7436)
!7513 = distinct !DISubprogram(name: "proc_setintf", scope: !3, file: !3, line: 1418, type: !6891, scopeLine: 1419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!7514 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !7515)
!7515 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !7516)
!7516 = distinct !DILocation(line: 1423, column: 6, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 1423, column: 6)
!7518 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !7515)
!7519 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !7515)
!7520 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !7515)
!7521 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !7515)
!7522 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !7516)
!7523 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !7516)
!7524 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !7516)
!7525 = !DILocalVariable(name: "ps", arg: 1, scope: !7513, file: !3, line: 1418, type: !190)
!7526 = !DILocation(line: 1418, column: 47, scope: !7513)
!7527 = !DILocalVariable(name: "arg", arg: 2, scope: !7513, file: !3, line: 1418, type: !189)
!7528 = !DILocation(line: 1418, column: 64, scope: !7513)
!7529 = !DILocalVariable(name: "setintf", scope: !7513, file: !3, line: 1420, type: !7530)
!7530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdevfs_setinterface", file: !4534, line: 57, size: 64, elements: !7531)
!7531 = !{!7532, !7533}
!7532 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !7530, file: !4534, line: 58, baseType: !7, size: 32)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "altsetting", scope: !7530, file: !4534, line: 59, baseType: !7, size: 32, offset: 32)
!7534 = !DILocation(line: 1420, column: 31, scope: !7513)
!7535 = !DILocalVariable(name: "ret", scope: !7513, file: !3, line: 1421, type: !205)
!7536 = !DILocation(line: 1421, column: 6, scope: !7513)
!7537 = !DILocation(line: 1423, column: 21, scope: !7517)
!7538 = !DILocation(line: 1423, column: 31, scope: !7517)
!7539 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !7516)
!7540 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !7515)
!7541 = !DILocation(line: 0, scope: !5187, inlinedAt: !7515)
!7542 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !7515)
!7543 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !7515)
!7544 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !7515)
!7545 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !7515)
!7546 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !7515)
!7547 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !7515)
!7548 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !7515)
!7549 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !7515)
!7550 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !7515)
!7551 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !7515)
!7552 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !7515)
!7553 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !7515)
!7554 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !7515)
!7555 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !7515)
!7556 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !7515)
!7557 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !7515)
!7558 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !7515)
!7559 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !7515)
!7560 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !7515)
!7561 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !7515)
!7562 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !7515)
!7563 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !7515)
!7564 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !7515)
!7565 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !7515)
!7566 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !7515)
!7567 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !7516)
!7568 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !7516)
!7569 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !7516)
!7570 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !7516)
!7571 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !7516)
!7572 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !7516)
!7573 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !7516)
!7574 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !7516)
!7575 = !DILocation(line: 1423, column: 6, scope: !7517)
!7576 = !DILocation(line: 1423, column: 6, scope: !7513)
!7577 = !DILocation(line: 1424, column: 3, scope: !7517)
!7578 = !DILocation(line: 1425, column: 18, scope: !7513)
!7579 = !DILocation(line: 1425, column: 30, scope: !7513)
!7580 = !DILocation(line: 1425, column: 8, scope: !7513)
!7581 = !DILocation(line: 1425, column: 6, scope: !7513)
!7582 = !DILocation(line: 1426, column: 6, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 1426, column: 6)
!7584 = !DILocation(line: 1426, column: 6, scope: !7513)
!7585 = !DILocation(line: 1427, column: 10, scope: !7583)
!7586 = !DILocation(line: 1427, column: 3, scope: !7583)
!7587 = !DILocation(line: 1429, column: 29, scope: !7513)
!7588 = !DILocation(line: 1429, column: 41, scope: !7513)
!7589 = !DILocation(line: 1429, column: 2, scope: !7513)
!7590 = !DILocation(line: 1431, column: 27, scope: !7513)
!7591 = !DILocation(line: 1431, column: 31, scope: !7513)
!7592 = !DILocation(line: 1431, column: 44, scope: !7513)
!7593 = !DILocation(line: 1432, column: 12, scope: !7513)
!7594 = !DILocation(line: 1431, column: 9, scope: !7513)
!7595 = !DILocation(line: 1431, column: 2, scope: !7513)
!7596 = !DILocation(line: 1433, column: 1, scope: !7513)
!7597 = distinct !DISubprogram(name: "proc_setconfig", scope: !3, file: !3, line: 1435, type: !6891, scopeLine: 1436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!7598 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !7599)
!7599 = distinct !DILocation(line: 1455, column: 5, scope: !7600)
!7600 = distinct !DILexicalBlock(scope: !7601, file: !3, line: 1454, column: 56)
!7601 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 1454, column: 8)
!7602 = distinct !DILexicalBlock(scope: !7603, file: !3, line: 1453, column: 56)
!7603 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 1453, column: 3)
!7604 = distinct !DILexicalBlock(scope: !7605, file: !3, line: 1453, column: 3)
!7605 = distinct !DILexicalBlock(scope: !7606, file: !3, line: 1450, column: 17)
!7606 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 1450, column: 6)
!7607 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !7599)
!7608 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !7599)
!7609 = !DILocalVariable(name: "ps", arg: 1, scope: !7597, file: !3, line: 1435, type: !190)
!7610 = !DILocation(line: 1435, column: 49, scope: !7597)
!7611 = !DILocalVariable(name: "arg", arg: 2, scope: !7597, file: !3, line: 1435, type: !189)
!7612 = !DILocation(line: 1435, column: 66, scope: !7597)
!7613 = !DILocalVariable(name: "u", scope: !7597, file: !3, line: 1437, type: !205)
!7614 = !DILocation(line: 1437, column: 6, scope: !7597)
!7615 = !DILocalVariable(name: "status", scope: !7597, file: !3, line: 1438, type: !205)
!7616 = !DILocation(line: 1438, column: 6, scope: !7597)
!7617 = !DILocalVariable(name: "actconfig", scope: !7597, file: !3, line: 1439, type: !4269)
!7618 = !DILocation(line: 1439, column: 26, scope: !7597)
!7619 = !DILocation(line: 1441, column: 6, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 1441, column: 6)
!7621 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 1441, column: 6)
!7622 = !DILocalVariable(name: "__ret_gu", scope: !7623, file: !3, line: 1441, type: !205)
!7623 = distinct !DILexicalBlock(scope: !7620, file: !3, line: 1441, column: 6)
!7624 = !DILocation(line: 1441, column: 6, scope: !7623)
!7625 = !DILocalVariable(name: "__val_gu", scope: !7623, file: !3, line: 1441, type: !7)
!7626 = !{i32 -2140948062}
!7627 = !DILocation(line: 1441, column: 6, scope: !7621)
!7628 = !DILocation(line: 1441, column: 6, scope: !7597)
!7629 = !DILocation(line: 1442, column: 3, scope: !7621)
!7630 = !DILocation(line: 1444, column: 14, scope: !7597)
!7631 = !DILocation(line: 1444, column: 18, scope: !7597)
!7632 = !DILocation(line: 1444, column: 23, scope: !7597)
!7633 = !DILocation(line: 1444, column: 12, scope: !7597)
!7634 = !DILocation(line: 1450, column: 6, scope: !7606)
!7635 = !DILocation(line: 1450, column: 6, scope: !7597)
!7636 = !DILocalVariable(name: "i", scope: !7605, file: !3, line: 1451, type: !205)
!7637 = !DILocation(line: 1451, column: 7, scope: !7605)
!7638 = !DILocation(line: 1453, column: 10, scope: !7604)
!7639 = !DILocation(line: 1453, column: 8, scope: !7604)
!7640 = !DILocation(line: 1453, column: 15, scope: !7603)
!7641 = !DILocation(line: 1453, column: 19, scope: !7603)
!7642 = !DILocation(line: 1453, column: 30, scope: !7603)
!7643 = !DILocation(line: 1453, column: 35, scope: !7603)
!7644 = !DILocation(line: 1453, column: 17, scope: !7603)
!7645 = !DILocation(line: 1453, column: 3, scope: !7604)
!7646 = !DILocation(line: 1454, column: 30, scope: !7601)
!7647 = !DILocation(line: 1454, column: 41, scope: !7601)
!7648 = !DILocation(line: 1454, column: 51, scope: !7601)
!7649 = !DILocation(line: 1454, column: 8, scope: !7601)
!7650 = !DILocation(line: 1454, column: 8, scope: !7602)
!7651 = !DILocation(line: 1455, column: 5, scope: !7600)
!7652 = !DILocation(line: 1464, column: 12, scope: !7600)
!7653 = !DILocation(line: 1465, column: 5, scope: !7600)
!7654 = !DILocation(line: 1467, column: 3, scope: !7602)
!7655 = !DILocation(line: 1453, column: 51, scope: !7603)
!7656 = !DILocation(line: 1453, column: 3, scope: !7603)
!7657 = distinct !{!7657, !7645, !7658}
!7658 = !DILocation(line: 1467, column: 3, scope: !7604)
!7659 = !DILocation(line: 1468, column: 2, scope: !7605)
!7660 = !DILocation(line: 1473, column: 6, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 1473, column: 6)
!7662 = !DILocation(line: 1473, column: 13, scope: !7661)
!7663 = !DILocation(line: 1473, column: 6, scope: !7597)
!7664 = !DILocation(line: 1474, column: 7, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 1474, column: 7)
!7666 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 1473, column: 19)
!7667 = !DILocation(line: 1474, column: 17, scope: !7665)
!7668 = !DILocation(line: 1474, column: 20, scope: !7665)
!7669 = !DILocation(line: 1474, column: 31, scope: !7665)
!7670 = !DILocation(line: 1474, column: 36, scope: !7665)
!7671 = !DILocation(line: 1474, column: 59, scope: !7665)
!7672 = !DILocation(line: 1474, column: 56, scope: !7665)
!7673 = !DILocation(line: 1474, column: 7, scope: !7666)
!7674 = !DILocation(line: 1475, column: 37, scope: !7665)
!7675 = !DILocation(line: 1475, column: 41, scope: !7665)
!7676 = !DILocation(line: 1475, column: 13, scope: !7665)
!7677 = !DILocation(line: 1475, column: 11, scope: !7665)
!7678 = !DILocation(line: 1475, column: 4, scope: !7665)
!7679 = !DILocation(line: 1477, column: 35, scope: !7665)
!7680 = !DILocation(line: 1477, column: 39, scope: !7665)
!7681 = !DILocation(line: 1477, column: 44, scope: !7665)
!7682 = !DILocation(line: 1477, column: 13, scope: !7665)
!7683 = !DILocation(line: 1477, column: 11, scope: !7665)
!7684 = !DILocation(line: 1478, column: 2, scope: !7666)
!7685 = !DILocation(line: 1480, column: 9, scope: !7597)
!7686 = !DILocation(line: 1480, column: 2, scope: !7597)
!7687 = !DILocation(line: 1481, column: 1, scope: !7597)
!7688 = distinct !DISubprogram(name: "proc_submiturb", scope: !3, file: !3, line: 1881, type: !6891, scopeLine: 1882, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!7689 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !7690)
!7690 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !7691)
!7691 = distinct !DILocation(line: 1886, column: 6, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 1886, column: 6)
!7693 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !7690)
!7694 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !7690)
!7695 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !7690)
!7696 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !7690)
!7697 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !7691)
!7698 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !7691)
!7699 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !7691)
!7700 = !DILocalVariable(name: "ps", arg: 1, scope: !7688, file: !3, line: 1881, type: !190)
!7701 = !DILocation(line: 1881, column: 49, scope: !7688)
!7702 = !DILocalVariable(name: "arg", arg: 2, scope: !7688, file: !3, line: 1881, type: !189)
!7703 = !DILocation(line: 1881, column: 66, scope: !7688)
!7704 = !DILocalVariable(name: "uurb", scope: !7688, file: !3, line: 1883, type: !4533)
!7705 = !DILocation(line: 1883, column: 22, scope: !7688)
!7706 = !DILocalVariable(name: "userurb_sigval", scope: !7688, file: !3, line: 1884, type: !2192)
!7707 = !DILocation(line: 1884, column: 11, scope: !7688)
!7708 = !DILocation(line: 1886, column: 21, scope: !7692)
!7709 = !DILocation(line: 1886, column: 28, scope: !7692)
!7710 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !7691)
!7711 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !7690)
!7712 = !DILocation(line: 0, scope: !5187, inlinedAt: !7690)
!7713 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !7690)
!7714 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !7690)
!7715 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !7690)
!7716 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !7690)
!7717 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !7690)
!7718 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !7690)
!7719 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !7690)
!7720 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !7690)
!7721 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !7690)
!7722 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !7690)
!7723 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !7690)
!7724 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !7690)
!7725 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !7690)
!7726 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !7690)
!7727 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !7690)
!7728 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !7690)
!7729 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !7690)
!7730 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !7690)
!7731 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !7690)
!7732 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !7690)
!7733 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !7690)
!7734 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !7690)
!7735 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !7690)
!7736 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !7690)
!7737 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !7690)
!7738 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !7691)
!7739 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !7691)
!7740 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !7691)
!7741 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !7691)
!7742 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !7691)
!7743 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !7691)
!7744 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !7691)
!7745 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !7691)
!7746 = !DILocation(line: 1886, column: 6, scope: !7692)
!7747 = !DILocation(line: 1886, column: 6, scope: !7688)
!7748 = !DILocation(line: 1887, column: 3, scope: !7692)
!7749 = !DILocation(line: 1889, column: 2, scope: !7688)
!7750 = !DILocation(line: 1890, column: 29, scope: !7688)
!7751 = !DILocation(line: 1890, column: 17, scope: !7688)
!7752 = !DILocation(line: 1890, column: 27, scope: !7688)
!7753 = !DILocation(line: 1892, column: 27, scope: !7688)
!7754 = !DILocation(line: 1893, column: 36, scope: !7688)
!7755 = !DILocation(line: 1893, column: 6, scope: !7688)
!7756 = !DILocation(line: 1893, column: 42, scope: !7688)
!7757 = !DILocation(line: 1893, column: 4, scope: !7688)
!7758 = !DILocation(line: 1894, column: 4, scope: !7688)
!7759 = !DILocation(line: 1892, column: 9, scope: !7688)
!7760 = !DILocation(line: 1892, column: 2, scope: !7688)
!7761 = !DILocation(line: 1895, column: 1, scope: !7688)
!7762 = distinct !DISubprogram(name: "proc_unlinkurb", scope: !3, file: !3, line: 1897, type: !6891, scopeLine: 1898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!7763 = !DILocation(line: 407, column: 64, scope: !5443, inlinedAt: !7764)
!7764 = distinct !DILocation(line: 1906, column: 3, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 1905, column: 11)
!7766 = distinct !DILexicalBlock(scope: !7762, file: !3, line: 1905, column: 6)
!7767 = !DILocation(line: 407, column: 84, scope: !5443, inlinedAt: !7764)
!7768 = !DILocation(line: 407, column: 64, scope: !5443, inlinedAt: !7769)
!7769 = distinct !DILocation(line: 1912, column: 2, scope: !7762)
!7770 = !DILocation(line: 407, column: 84, scope: !5443, inlinedAt: !7769)
!7771 = !DILocation(line: 327, column: 67, scope: !5452, inlinedAt: !7772)
!7772 = distinct !DILocation(line: 1903, column: 2, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 1903, column: 2)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 1903, column: 2)
!7775 = distinct !DILexicalBlock(scope: !7776, file: !3, line: 1903, column: 2)
!7776 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 1903, column: 2)
!7777 = distinct !DILexicalBlock(scope: !7762, file: !3, line: 1903, column: 2)
!7778 = !DILocalVariable(name: "ps", arg: 1, scope: !7762, file: !3, line: 1897, type: !190)
!7779 = !DILocation(line: 1897, column: 49, scope: !7762)
!7780 = !DILocalVariable(name: "arg", arg: 2, scope: !7762, file: !3, line: 1897, type: !189)
!7781 = !DILocation(line: 1897, column: 66, scope: !7762)
!7782 = !DILocalVariable(name: "urb", scope: !7762, file: !3, line: 1899, type: !4442)
!7783 = !DILocation(line: 1899, column: 14, scope: !7762)
!7784 = !DILocalVariable(name: "as", scope: !7762, file: !3, line: 1900, type: !4429)
!7785 = !DILocation(line: 1900, column: 16, scope: !7762)
!7786 = !DILocalVariable(name: "flags", scope: !7762, file: !3, line: 1901, type: !372)
!7787 = !DILocation(line: 1901, column: 16, scope: !7762)
!7788 = !DILocation(line: 1903, column: 2, scope: !7762)
!7789 = !DILocation(line: 1903, column: 2, scope: !7777)
!7790 = !DILocalVariable(name: "__dummy", scope: !7791, file: !3, line: 1903, type: !372)
!7791 = distinct !DILexicalBlock(scope: !7776, file: !3, line: 1903, column: 2)
!7792 = !DILocation(line: 1903, column: 2, scope: !7791)
!7793 = !DILocalVariable(name: "__dummy2", scope: !7791, file: !3, line: 1903, type: !372)
!7794 = !DILocation(line: 1903, column: 2, scope: !7776)
!7795 = !DILocation(line: 1903, column: 2, scope: !7775)
!7796 = !DILocation(line: 1903, column: 2, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 1903, column: 2)
!7798 = !DILocalVariable(name: "__dummy", scope: !7799, file: !3, line: 1903, type: !372)
!7799 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 1903, column: 2)
!7800 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 1903, column: 2)
!7801 = !DILocation(line: 1903, column: 2, scope: !7799)
!7802 = !DILocalVariable(name: "__dummy2", scope: !7799, file: !3, line: 1903, type: !372)
!7803 = !DILocation(line: 1903, column: 2, scope: !7800)
!7804 = !DILocation(line: 1903, column: 2, scope: !7774)
!7805 = !{i32 -2140906055}
!7806 = !DILocation(line: 1903, column: 2, scope: !7773)
!7807 = !DILocation(line: 329, column: 10, scope: !5452, inlinedAt: !7772)
!7808 = !DILocation(line: 329, column: 16, scope: !5452, inlinedAt: !7772)
!7809 = !DILocation(line: 1904, column: 24, scope: !7762)
!7810 = !DILocation(line: 1904, column: 28, scope: !7762)
!7811 = !DILocation(line: 1904, column: 7, scope: !7762)
!7812 = !DILocation(line: 1904, column: 5, scope: !7762)
!7813 = !DILocation(line: 1905, column: 7, scope: !7766)
!7814 = !DILocation(line: 1905, column: 6, scope: !7762)
!7815 = !DILocation(line: 1906, column: 27, scope: !7765)
!7816 = !DILocation(line: 1906, column: 31, scope: !7765)
!7817 = !DILocation(line: 1906, column: 37, scope: !7765)
!7818 = !DILocation(line: 409, column: 2, scope: !5633, inlinedAt: !7764)
!7819 = !DILocation(line: 409, column: 2, scope: !5638, inlinedAt: !7764)
!7820 = !DILocation(line: 409, column: 2, scope: !5639, inlinedAt: !7764)
!7821 = !DILocation(line: 409, column: 2, scope: !5646, inlinedAt: !7764)
!7822 = !DILocation(line: 409, column: 2, scope: !5649, inlinedAt: !7764)
!7823 = !DILocation(line: 1907, column: 3, scope: !7765)
!7824 = !DILocation(line: 1910, column: 8, scope: !7762)
!7825 = !DILocation(line: 1910, column: 12, scope: !7762)
!7826 = !DILocation(line: 1910, column: 6, scope: !7762)
!7827 = !DILocation(line: 1911, column: 14, scope: !7762)
!7828 = !DILocation(line: 1911, column: 2, scope: !7762)
!7829 = !DILocation(line: 1912, column: 26, scope: !7762)
!7830 = !DILocation(line: 1912, column: 30, scope: !7762)
!7831 = !DILocation(line: 1912, column: 36, scope: !7762)
!7832 = !DILocation(line: 409, column: 2, scope: !5633, inlinedAt: !7769)
!7833 = !DILocation(line: 409, column: 2, scope: !5638, inlinedAt: !7769)
!7834 = !DILocation(line: 409, column: 2, scope: !5639, inlinedAt: !7769)
!7835 = !DILocation(line: 409, column: 2, scope: !5646, inlinedAt: !7769)
!7836 = !DILocation(line: 409, column: 2, scope: !5649, inlinedAt: !7769)
!7837 = !DILocation(line: 1914, column: 15, scope: !7762)
!7838 = !DILocation(line: 1914, column: 2, scope: !7762)
!7839 = !DILocation(line: 1915, column: 14, scope: !7762)
!7840 = !DILocation(line: 1915, column: 2, scope: !7762)
!7841 = !DILocation(line: 1917, column: 2, scope: !7762)
!7842 = !DILocation(line: 1918, column: 1, scope: !7762)
!7843 = distinct !DISubprogram(name: "proc_disconnectsignal", scope: !3, file: !3, line: 2174, type: !6891, scopeLine: 2175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!7844 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !7845)
!7845 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !7846)
!7846 = distinct !DILocation(line: 2178, column: 6, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 2178, column: 6)
!7848 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !7845)
!7849 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !7845)
!7850 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !7845)
!7851 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !7845)
!7852 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !7846)
!7853 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !7846)
!7854 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !7846)
!7855 = !DILocalVariable(name: "ps", arg: 1, scope: !7843, file: !3, line: 2174, type: !190)
!7856 = !DILocation(line: 2174, column: 56, scope: !7843)
!7857 = !DILocalVariable(name: "arg", arg: 2, scope: !7843, file: !3, line: 2174, type: !189)
!7858 = !DILocation(line: 2174, column: 73, scope: !7843)
!7859 = !DILocalVariable(name: "ds", scope: !7843, file: !3, line: 2176, type: !7860)
!7860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdevfs_disconnectsignal", file: !4534, line: 62, size: 128, elements: !7861)
!7861 = !{!7862, !7863}
!7862 = !DIDerivedType(tag: DW_TAG_member, name: "signr", scope: !7860, file: !4534, line: 63, baseType: !7, size: 32)
!7863 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !7860, file: !4534, line: 64, baseType: !189, size: 64, offset: 64)
!7864 = !DILocation(line: 2176, column: 35, scope: !7843)
!7865 = !DILocation(line: 2178, column: 21, scope: !7847)
!7866 = !DILocation(line: 2178, column: 26, scope: !7847)
!7867 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !7846)
!7868 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !7845)
!7869 = !DILocation(line: 0, scope: !5187, inlinedAt: !7845)
!7870 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !7845)
!7871 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !7845)
!7872 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !7845)
!7873 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !7845)
!7874 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !7845)
!7875 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !7845)
!7876 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !7845)
!7877 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !7845)
!7878 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !7845)
!7879 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !7845)
!7880 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !7845)
!7881 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !7845)
!7882 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !7845)
!7883 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !7845)
!7884 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !7845)
!7885 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !7845)
!7886 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !7845)
!7887 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !7845)
!7888 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !7845)
!7889 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !7845)
!7890 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !7845)
!7891 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !7845)
!7892 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !7845)
!7893 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !7845)
!7894 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !7845)
!7895 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !7846)
!7896 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !7846)
!7897 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !7846)
!7898 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !7846)
!7899 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !7846)
!7900 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !7846)
!7901 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !7846)
!7902 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !7846)
!7903 = !DILocation(line: 2178, column: 6, scope: !7847)
!7904 = !DILocation(line: 2178, column: 6, scope: !7843)
!7905 = !DILocation(line: 2179, column: 3, scope: !7847)
!7906 = !DILocation(line: 2180, column: 21, scope: !7843)
!7907 = !DILocation(line: 2180, column: 2, scope: !7843)
!7908 = !DILocation(line: 2180, column: 6, scope: !7843)
!7909 = !DILocation(line: 2180, column: 16, scope: !7843)
!7910 = !DILocation(line: 2181, column: 33, scope: !7843)
!7911 = !DILocation(line: 2181, column: 2, scope: !7843)
!7912 = !DILocation(line: 2181, column: 6, scope: !7843)
!7913 = !DILocation(line: 2181, column: 18, scope: !7843)
!7914 = !DILocation(line: 2181, column: 28, scope: !7843)
!7915 = !DILocation(line: 2182, column: 2, scope: !7843)
!7916 = !DILocation(line: 2183, column: 1, scope: !7843)
!7917 = distinct !DISubprogram(name: "proc_claiminterface", scope: !3, file: !3, line: 2185, type: !6891, scopeLine: 2186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!7918 = !DILocalVariable(name: "ps", arg: 1, scope: !7917, file: !3, line: 2185, type: !190)
!7919 = !DILocation(line: 2185, column: 54, scope: !7917)
!7920 = !DILocalVariable(name: "arg", arg: 2, scope: !7917, file: !3, line: 2185, type: !189)
!7921 = !DILocation(line: 2185, column: 71, scope: !7917)
!7922 = !DILocalVariable(name: "ifnum", scope: !7917, file: !3, line: 2187, type: !7)
!7923 = !DILocation(line: 2187, column: 15, scope: !7917)
!7924 = !DILocation(line: 2189, column: 6, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 2189, column: 6)
!7926 = distinct !DILexicalBlock(scope: !7917, file: !3, line: 2189, column: 6)
!7927 = !DILocalVariable(name: "__ret_gu", scope: !7928, file: !3, line: 2189, type: !205)
!7928 = distinct !DILexicalBlock(scope: !7925, file: !3, line: 2189, column: 6)
!7929 = !DILocation(line: 2189, column: 6, scope: !7928)
!7930 = !DILocalVariable(name: "__val_gu", scope: !7928, file: !3, line: 2189, type: !7)
!7931 = !{i32 -2140897811}
!7932 = !DILocation(line: 2189, column: 6, scope: !7926)
!7933 = !DILocation(line: 2189, column: 6, scope: !7917)
!7934 = !DILocation(line: 2190, column: 3, scope: !7926)
!7935 = !DILocation(line: 2191, column: 19, scope: !7917)
!7936 = !DILocation(line: 2191, column: 23, scope: !7917)
!7937 = !DILocation(line: 2191, column: 9, scope: !7917)
!7938 = !DILocation(line: 2191, column: 2, scope: !7917)
!7939 = !DILocation(line: 2192, column: 1, scope: !7917)
!7940 = distinct !DISubprogram(name: "proc_releaseinterface", scope: !3, file: !3, line: 2194, type: !6891, scopeLine: 2195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!7941 = !DILocalVariable(name: "ps", arg: 1, scope: !7940, file: !3, line: 2194, type: !190)
!7942 = !DILocation(line: 2194, column: 56, scope: !7940)
!7943 = !DILocalVariable(name: "arg", arg: 2, scope: !7940, file: !3, line: 2194, type: !189)
!7944 = !DILocation(line: 2194, column: 73, scope: !7940)
!7945 = !DILocalVariable(name: "ifnum", scope: !7940, file: !3, line: 2196, type: !7)
!7946 = !DILocation(line: 2196, column: 15, scope: !7940)
!7947 = !DILocalVariable(name: "ret", scope: !7940, file: !3, line: 2197, type: !205)
!7948 = !DILocation(line: 2197, column: 6, scope: !7940)
!7949 = !DILocation(line: 2199, column: 6, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 2199, column: 6)
!7951 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 2199, column: 6)
!7952 = !DILocalVariable(name: "__ret_gu", scope: !7953, file: !3, line: 2199, type: !205)
!7953 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 2199, column: 6)
!7954 = !DILocation(line: 2199, column: 6, scope: !7953)
!7955 = !DILocalVariable(name: "__val_gu", scope: !7953, file: !3, line: 2199, type: !7)
!7956 = !{i32 -2140895707}
!7957 = !DILocation(line: 2199, column: 6, scope: !7951)
!7958 = !DILocation(line: 2199, column: 6, scope: !7940)
!7959 = !DILocation(line: 2200, column: 3, scope: !7951)
!7960 = !DILocation(line: 2201, column: 20, scope: !7940)
!7961 = !DILocation(line: 2201, column: 24, scope: !7940)
!7962 = !DILocation(line: 2201, column: 8, scope: !7940)
!7963 = !DILocation(line: 2201, column: 6, scope: !7940)
!7964 = !DILocation(line: 2202, column: 6, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 2202, column: 6)
!7966 = !DILocation(line: 2202, column: 10, scope: !7965)
!7967 = !DILocation(line: 2202, column: 6, scope: !7940)
!7968 = !DILocation(line: 2203, column: 10, scope: !7965)
!7969 = !DILocation(line: 2203, column: 3, scope: !7965)
!7970 = !DILocation(line: 2204, column: 29, scope: !7940)
!7971 = !DILocation(line: 2204, column: 33, scope: !7940)
!7972 = !DILocation(line: 2204, column: 2, scope: !7940)
!7973 = !DILocation(line: 2205, column: 2, scope: !7940)
!7974 = !DILocation(line: 2206, column: 1, scope: !7940)
!7975 = distinct !DISubprogram(name: "proc_ioctl_default", scope: !3, file: !3, line: 2286, type: !6891, scopeLine: 2287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!7976 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !7977)
!7977 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !7978)
!7978 = distinct !DILocation(line: 2290, column: 6, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 2290, column: 6)
!7980 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !7977)
!7981 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !7977)
!7982 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !7977)
!7983 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !7977)
!7984 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !7978)
!7985 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !7978)
!7986 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !7978)
!7987 = !DILocalVariable(name: "ps", arg: 1, scope: !7975, file: !3, line: 2286, type: !190)
!7988 = !DILocation(line: 2286, column: 53, scope: !7975)
!7989 = !DILocalVariable(name: "arg", arg: 2, scope: !7975, file: !3, line: 2286, type: !189)
!7990 = !DILocation(line: 2286, column: 70, scope: !7975)
!7991 = !DILocalVariable(name: "ctrl", scope: !7975, file: !3, line: 2288, type: !7992)
!7992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdevfs_ioctl", file: !4534, line: 138, size: 128, elements: !7993)
!7993 = !{!7994, !7995, !7996}
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "ifno", scope: !7992, file: !4534, line: 139, baseType: !205, size: 32)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl_code", scope: !7992, file: !4534, line: 140, baseType: !205, size: 32, offset: 32)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7992, file: !4534, line: 142, baseType: !189, size: 64, offset: 64)
!7997 = !DILocation(line: 2288, column: 24, scope: !7975)
!7998 = !DILocation(line: 2290, column: 21, scope: !7979)
!7999 = !DILocation(line: 2290, column: 28, scope: !7979)
!8000 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !7978)
!8001 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !7977)
!8002 = !DILocation(line: 0, scope: !5187, inlinedAt: !7977)
!8003 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !7977)
!8004 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !7977)
!8005 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !7977)
!8006 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !7977)
!8007 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !7977)
!8008 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !7977)
!8009 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !7977)
!8010 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !7977)
!8011 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !7977)
!8012 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !7977)
!8013 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !7977)
!8014 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !7977)
!8015 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !7977)
!8016 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !7977)
!8017 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !7977)
!8018 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !7977)
!8019 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !7977)
!8020 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !7977)
!8021 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !7977)
!8022 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !7977)
!8023 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !7977)
!8024 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !7977)
!8025 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !7977)
!8026 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !7977)
!8027 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !7977)
!8028 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !7978)
!8029 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !7978)
!8030 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !7978)
!8031 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !7978)
!8032 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !7978)
!8033 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !7978)
!8034 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !7978)
!8035 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !7978)
!8036 = !DILocation(line: 2290, column: 6, scope: !7979)
!8037 = !DILocation(line: 2290, column: 6, scope: !7975)
!8038 = !DILocation(line: 2291, column: 3, scope: !7979)
!8039 = !DILocation(line: 2292, column: 20, scope: !7975)
!8040 = !DILocation(line: 2292, column: 9, scope: !7975)
!8041 = !DILocation(line: 2292, column: 2, scope: !7975)
!8042 = !DILocation(line: 2293, column: 1, scope: !7975)
!8043 = distinct !DISubprogram(name: "proc_claim_port", scope: !3, file: !3, line: 2310, type: !6891, scopeLine: 2311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8044 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !8045)
!8045 = distinct !DILocation(line: 2319, column: 3, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 2319, column: 3)
!8047 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 2319, column: 3)
!8048 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 2318, column: 6)
!8049 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !8045)
!8050 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !8045)
!8051 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !8052)
!8052 = distinct !DILocation(line: 2319, column: 3, scope: !8046)
!8053 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !8052)
!8054 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !8052)
!8055 = !DILocalVariable(name: "ps", arg: 1, scope: !8043, file: !3, line: 2310, type: !190)
!8056 = !DILocation(line: 2310, column: 50, scope: !8043)
!8057 = !DILocalVariable(name: "arg", arg: 2, scope: !8043, file: !3, line: 2310, type: !189)
!8058 = !DILocation(line: 2310, column: 67, scope: !8043)
!8059 = !DILocalVariable(name: "portnum", scope: !8043, file: !3, line: 2312, type: !7)
!8060 = !DILocation(line: 2312, column: 11, scope: !8043)
!8061 = !DILocalVariable(name: "rc", scope: !8043, file: !3, line: 2313, type: !205)
!8062 = !DILocation(line: 2313, column: 6, scope: !8043)
!8063 = !DILocation(line: 2315, column: 6, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 2315, column: 6)
!8065 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 2315, column: 6)
!8066 = !DILocalVariable(name: "__ret_gu", scope: !8067, file: !3, line: 2315, type: !205)
!8067 = distinct !DILexicalBlock(scope: !8064, file: !3, line: 2315, column: 6)
!8068 = !DILocation(line: 2315, column: 6, scope: !8067)
!8069 = !DILocalVariable(name: "__val_gu", scope: !8067, file: !3, line: 2315, type: !7)
!8070 = !{i32 -2140888367}
!8071 = !DILocation(line: 2315, column: 6, scope: !8065)
!8072 = !DILocation(line: 2315, column: 6, scope: !8043)
!8073 = !DILocation(line: 2316, column: 3, scope: !8065)
!8074 = !DILocation(line: 2317, column: 26, scope: !8043)
!8075 = !DILocation(line: 2317, column: 30, scope: !8043)
!8076 = !DILocation(line: 2317, column: 35, scope: !8043)
!8077 = !DILocation(line: 2317, column: 44, scope: !8043)
!8078 = !DILocation(line: 2317, column: 7, scope: !8043)
!8079 = !DILocation(line: 2317, column: 5, scope: !8043)
!8080 = !DILocation(line: 2318, column: 6, scope: !8048)
!8081 = !DILocation(line: 2318, column: 9, scope: !8048)
!8082 = !DILocation(line: 2318, column: 6, scope: !8043)
!8083 = !DILocation(line: 2319, column: 3, scope: !8048)
!8084 = !DILocation(line: 2319, column: 3, scope: !8046)
!8085 = !DILocation(line: 2319, column: 3, scope: !8047)
!8086 = !DILocation(line: 2321, column: 9, scope: !8043)
!8087 = !DILocation(line: 2321, column: 2, scope: !8043)
!8088 = !DILocation(line: 2322, column: 1, scope: !8043)
!8089 = distinct !DISubprogram(name: "proc_release_port", scope: !3, file: !3, line: 2324, type: !6891, scopeLine: 2325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8090 = !DILocalVariable(name: "ps", arg: 1, scope: !8089, file: !3, line: 2324, type: !190)
!8091 = !DILocation(line: 2324, column: 52, scope: !8089)
!8092 = !DILocalVariable(name: "arg", arg: 2, scope: !8089, file: !3, line: 2324, type: !189)
!8093 = !DILocation(line: 2324, column: 69, scope: !8089)
!8094 = !DILocalVariable(name: "portnum", scope: !8089, file: !3, line: 2326, type: !7)
!8095 = !DILocation(line: 2326, column: 11, scope: !8089)
!8096 = !DILocation(line: 2328, column: 6, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 2328, column: 6)
!8098 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 2328, column: 6)
!8099 = !DILocalVariable(name: "__ret_gu", scope: !8100, file: !3, line: 2328, type: !205)
!8100 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 2328, column: 6)
!8101 = !DILocation(line: 2328, column: 6, scope: !8100)
!8102 = !DILocalVariable(name: "__val_gu", scope: !8100, file: !3, line: 2328, type: !7)
!8103 = !{i32 -2140885924}
!8104 = !DILocation(line: 2328, column: 6, scope: !8098)
!8105 = !DILocation(line: 2328, column: 6, scope: !8089)
!8106 = !DILocation(line: 2329, column: 3, scope: !8098)
!8107 = !DILocation(line: 2330, column: 30, scope: !8089)
!8108 = !DILocation(line: 2330, column: 34, scope: !8089)
!8109 = !DILocation(line: 2330, column: 39, scope: !8089)
!8110 = !DILocation(line: 2330, column: 48, scope: !8089)
!8111 = !DILocation(line: 2330, column: 9, scope: !8089)
!8112 = !DILocation(line: 2330, column: 2, scope: !8089)
!8113 = !DILocation(line: 2331, column: 1, scope: !8089)
!8114 = distinct !DISubprogram(name: "proc_get_capabilities", scope: !3, file: !3, line: 2333, type: !6891, scopeLine: 2334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8115 = !DILocalVariable(name: "ps", arg: 1, scope: !8114, file: !3, line: 2333, type: !190)
!8116 = !DILocation(line: 2333, column: 56, scope: !8114)
!8117 = !DILocalVariable(name: "arg", arg: 2, scope: !8114, file: !3, line: 2333, type: !189)
!8118 = !DILocation(line: 2333, column: 73, scope: !8114)
!8119 = !DILocalVariable(name: "caps", scope: !8114, file: !3, line: 2335, type: !214)
!8120 = !DILocation(line: 2335, column: 8, scope: !8114)
!8121 = !DILocation(line: 2337, column: 7, scope: !8114)
!8122 = !DILocation(line: 2341, column: 7, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 2341, column: 6)
!8124 = !DILocation(line: 2341, column: 11, scope: !8123)
!8125 = !DILocation(line: 2341, column: 16, scope: !8123)
!8126 = !DILocation(line: 2341, column: 21, scope: !8123)
!8127 = !DILocation(line: 2341, column: 6, scope: !8114)
!8128 = !DILocation(line: 2342, column: 8, scope: !8123)
!8129 = !DILocation(line: 2342, column: 3, scope: !8123)
!8130 = !DILocation(line: 2343, column: 6, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 2343, column: 6)
!8132 = !DILocation(line: 2343, column: 10, scope: !8131)
!8133 = !DILocation(line: 2343, column: 15, scope: !8131)
!8134 = !DILocation(line: 2343, column: 20, scope: !8131)
!8135 = !DILocation(line: 2343, column: 6, scope: !8114)
!8136 = !DILocation(line: 2344, column: 8, scope: !8131)
!8137 = !DILocation(line: 2344, column: 3, scope: !8131)
!8138 = !DILocation(line: 2346, column: 6, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !3, line: 2346, column: 6)
!8140 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 2346, column: 6)
!8141 = !DILocalVariable(name: "__ret_pu", scope: !8142, file: !3, line: 2346, type: !205)
!8142 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 2346, column: 6)
!8143 = !DILocation(line: 2346, column: 6, scope: !8142)
!8144 = !DILocalVariable(name: "__ptr_pu", scope: !8142, file: !3, line: 2346, type: !189)
!8145 = !DILocalVariable(name: "__val_pu", scope: !8142, file: !3, line: 2346, type: !214)
!8146 = !{i32 -2140883733}
!8147 = !DILocation(line: 2346, column: 6, scope: !8140)
!8148 = !DILocation(line: 2346, column: 6, scope: !8114)
!8149 = !DILocation(line: 2347, column: 3, scope: !8140)
!8150 = !DILocation(line: 2349, column: 2, scope: !8114)
!8151 = !DILocation(line: 2350, column: 1, scope: !8114)
!8152 = distinct !DISubprogram(name: "proc_disconnect_claim", scope: !3, file: !3, line: 2352, type: !6891, scopeLine: 2353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8153 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !8154)
!8154 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !8155)
!8155 = distinct !DILocation(line: 2357, column: 6, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8152, file: !3, line: 2357, column: 6)
!8157 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !8154)
!8158 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !8154)
!8159 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !8154)
!8160 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !8154)
!8161 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !8155)
!8162 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !8155)
!8163 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !8155)
!8164 = !DILocalVariable(name: "ps", arg: 1, scope: !8152, file: !3, line: 2352, type: !190)
!8165 = !DILocation(line: 2352, column: 56, scope: !8152)
!8166 = !DILocalVariable(name: "arg", arg: 2, scope: !8152, file: !3, line: 2352, type: !189)
!8167 = !DILocation(line: 2352, column: 73, scope: !8152)
!8168 = !DILocalVariable(name: "dc", scope: !8152, file: !3, line: 2354, type: !8169)
!8169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdevfs_disconnect_claim", file: !4534, line: 170, size: 2112, elements: !8170)
!8170 = !{!8171, !8172, !8173}
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !8169, file: !4534, line: 171, baseType: !7, size: 32)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8169, file: !4534, line: 172, baseType: !7, size: 32, offset: 32)
!8173 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !8169, file: !4534, line: 173, baseType: !7324, size: 2048, offset: 64)
!8174 = !DILocation(line: 2354, column: 35, scope: !8152)
!8175 = !DILocalVariable(name: "intf", scope: !8152, file: !3, line: 2355, type: !4299)
!8176 = !DILocation(line: 2355, column: 24, scope: !8152)
!8177 = !DILocation(line: 2357, column: 21, scope: !8156)
!8178 = !DILocation(line: 2357, column: 26, scope: !8156)
!8179 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !8155)
!8180 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !8154)
!8181 = !DILocation(line: 0, scope: !5187, inlinedAt: !8154)
!8182 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !8154)
!8183 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !8154)
!8184 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !8154)
!8185 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !8154)
!8186 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !8154)
!8187 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !8154)
!8188 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !8154)
!8189 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !8154)
!8190 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !8154)
!8191 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !8154)
!8192 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !8154)
!8193 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !8154)
!8194 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !8154)
!8195 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !8154)
!8196 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !8154)
!8197 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !8154)
!8198 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !8154)
!8199 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !8154)
!8200 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !8154)
!8201 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !8154)
!8202 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !8154)
!8203 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !8154)
!8204 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !8154)
!8205 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !8154)
!8206 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !8154)
!8207 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !8155)
!8208 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !8155)
!8209 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !8155)
!8210 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !8155)
!8211 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !8155)
!8212 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !8155)
!8213 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !8155)
!8214 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !8155)
!8215 = !DILocation(line: 2357, column: 6, scope: !8156)
!8216 = !DILocation(line: 2357, column: 6, scope: !8152)
!8217 = !DILocation(line: 2358, column: 3, scope: !8156)
!8218 = !DILocation(line: 2360, column: 25, scope: !8152)
!8219 = !DILocation(line: 2360, column: 29, scope: !8152)
!8220 = !DILocation(line: 2360, column: 37, scope: !8152)
!8221 = !DILocation(line: 2360, column: 9, scope: !8152)
!8222 = !DILocation(line: 2360, column: 7, scope: !8152)
!8223 = !DILocation(line: 2361, column: 7, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8152, file: !3, line: 2361, column: 6)
!8225 = !DILocation(line: 2361, column: 6, scope: !8152)
!8226 = !DILocation(line: 2362, column: 3, scope: !8224)
!8227 = !DILocation(line: 2364, column: 6, scope: !8228)
!8228 = distinct !DILexicalBlock(scope: !8152, file: !3, line: 2364, column: 6)
!8229 = !DILocation(line: 2364, column: 12, scope: !8228)
!8230 = !DILocation(line: 2364, column: 16, scope: !8228)
!8231 = !DILocation(line: 2364, column: 6, scope: !8152)
!8232 = !DILocalVariable(name: "driver", scope: !8233, file: !3, line: 2365, type: !4559)
!8233 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 2364, column: 24)
!8234 = !DILocation(line: 2365, column: 22, scope: !8233)
!8235 = !DILocalVariable(name: "__mptr", scope: !8236, file: !3, line: 2365, type: !189)
!8236 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 2365, column: 31)
!8237 = !DILocation(line: 2365, column: 31, scope: !8236)
!8238 = !DILocation(line: 2365, column: 31, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 2365, column: 31)
!8240 = !DILocation(line: 2367, column: 7, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 2367, column: 7)
!8242 = !DILocation(line: 2367, column: 11, scope: !8241)
!8243 = !DILocation(line: 2367, column: 7, scope: !8233)
!8244 = !DILocation(line: 2368, column: 4, scope: !8241)
!8245 = !DILocation(line: 2370, column: 11, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 2370, column: 7)
!8247 = !DILocation(line: 2370, column: 17, scope: !8246)
!8248 = !DILocation(line: 2370, column: 56, scope: !8246)
!8249 = !DILocation(line: 2371, column: 16, scope: !8246)
!8250 = !DILocation(line: 2371, column: 13, scope: !8246)
!8251 = !DILocation(line: 2371, column: 24, scope: !8246)
!8252 = !DILocation(line: 2371, column: 30, scope: !8246)
!8253 = !DILocation(line: 2371, column: 34, scope: !8246)
!8254 = !DILocation(line: 2371, column: 42, scope: !8246)
!8255 = !DILocation(line: 2371, column: 5, scope: !8246)
!8256 = !DILocation(line: 2372, column: 25, scope: !8246)
!8257 = !DILocation(line: 2370, column: 7, scope: !8233)
!8258 = !DILocation(line: 2373, column: 4, scope: !8246)
!8259 = !DILocation(line: 2375, column: 11, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8233, file: !3, line: 2375, column: 7)
!8261 = !DILocation(line: 2375, column: 17, scope: !8260)
!8262 = !DILocation(line: 2375, column: 60, scope: !8260)
!8263 = !DILocation(line: 2376, column: 16, scope: !8260)
!8264 = !DILocation(line: 2376, column: 13, scope: !8260)
!8265 = !DILocation(line: 2376, column: 24, scope: !8260)
!8266 = !DILocation(line: 2376, column: 30, scope: !8260)
!8267 = !DILocation(line: 2376, column: 34, scope: !8260)
!8268 = !DILocation(line: 2376, column: 42, scope: !8260)
!8269 = !DILocation(line: 2376, column: 5, scope: !8260)
!8270 = !DILocation(line: 2377, column: 25, scope: !8260)
!8271 = !DILocation(line: 2375, column: 7, scope: !8233)
!8272 = !DILocation(line: 2378, column: 4, scope: !8260)
!8273 = !DILocation(line: 2381, column: 32, scope: !8233)
!8274 = !DILocation(line: 2381, column: 40, scope: !8233)
!8275 = !DILocation(line: 2381, column: 3, scope: !8233)
!8276 = !DILocation(line: 2382, column: 2, scope: !8233)
!8277 = !DILocation(line: 2384, column: 19, scope: !8152)
!8278 = !DILocation(line: 2384, column: 26, scope: !8152)
!8279 = !DILocation(line: 2384, column: 9, scope: !8152)
!8280 = !DILocation(line: 2384, column: 2, scope: !8152)
!8281 = !DILocation(line: 2385, column: 1, scope: !8152)
!8282 = distinct !DISubprogram(name: "proc_alloc_streams", scope: !3, file: !3, line: 2387, type: !6891, scopeLine: 2388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8283 = !DILocalVariable(name: "ps", arg: 1, scope: !8282, file: !3, line: 2387, type: !190)
!8284 = !DILocation(line: 2387, column: 53, scope: !8282)
!8285 = !DILocalVariable(name: "arg", arg: 2, scope: !8282, file: !3, line: 2387, type: !189)
!8286 = !DILocation(line: 2387, column: 70, scope: !8282)
!8287 = !DILocalVariable(name: "num_streams", scope: !8282, file: !3, line: 2389, type: !7)
!8288 = !DILocation(line: 2389, column: 11, scope: !8282)
!8289 = !DILocalVariable(name: "num_eps", scope: !8282, file: !3, line: 2389, type: !7)
!8290 = !DILocation(line: 2389, column: 24, scope: !8282)
!8291 = !DILocalVariable(name: "eps", scope: !8282, file: !3, line: 2390, type: !4724)
!8292 = !DILocation(line: 2390, column: 29, scope: !8282)
!8293 = !DILocalVariable(name: "intf", scope: !8282, file: !3, line: 2391, type: !4299)
!8294 = !DILocation(line: 2391, column: 24, scope: !8282)
!8295 = !DILocalVariable(name: "r", scope: !8282, file: !3, line: 2392, type: !205)
!8296 = !DILocation(line: 2392, column: 6, scope: !8282)
!8297 = !DILocation(line: 2394, column: 29, scope: !8282)
!8298 = !DILocation(line: 2394, column: 33, scope: !8282)
!8299 = !DILocation(line: 2394, column: 6, scope: !8282)
!8300 = !DILocation(line: 2394, column: 4, scope: !8282)
!8301 = !DILocation(line: 2396, column: 6, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 2396, column: 6)
!8303 = !DILocation(line: 2396, column: 6, scope: !8282)
!8304 = !DILocation(line: 2397, column: 10, scope: !8302)
!8305 = !DILocation(line: 2397, column: 3, scope: !8302)
!8306 = !DILocation(line: 2399, column: 29, scope: !8282)
!8307 = !DILocation(line: 2400, column: 8, scope: !8282)
!8308 = !DILocation(line: 2400, column: 14, scope: !8282)
!8309 = !DILocation(line: 2400, column: 28, scope: !8282)
!8310 = !DILocation(line: 2400, column: 33, scope: !8282)
!8311 = !DILocation(line: 2399, column: 2, scope: !8282)
!8312 = !DILocation(line: 2402, column: 24, scope: !8282)
!8313 = !DILocation(line: 2402, column: 30, scope: !8282)
!8314 = !DILocation(line: 2402, column: 35, scope: !8282)
!8315 = !DILocation(line: 2402, column: 44, scope: !8282)
!8316 = !DILocation(line: 2402, column: 6, scope: !8282)
!8317 = !DILocation(line: 2402, column: 4, scope: !8282)
!8318 = !DILocation(line: 2403, column: 8, scope: !8282)
!8319 = !DILocation(line: 2403, column: 2, scope: !8282)
!8320 = !DILocation(line: 2404, column: 9, scope: !8282)
!8321 = !DILocation(line: 2404, column: 2, scope: !8282)
!8322 = !DILocation(line: 2405, column: 1, scope: !8282)
!8323 = distinct !DISubprogram(name: "proc_free_streams", scope: !3, file: !3, line: 2407, type: !6891, scopeLine: 2408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8324 = !DILocalVariable(name: "ps", arg: 1, scope: !8323, file: !3, line: 2407, type: !190)
!8325 = !DILocation(line: 2407, column: 52, scope: !8323)
!8326 = !DILocalVariable(name: "arg", arg: 2, scope: !8323, file: !3, line: 2407, type: !189)
!8327 = !DILocation(line: 2407, column: 69, scope: !8323)
!8328 = !DILocalVariable(name: "num_eps", scope: !8323, file: !3, line: 2409, type: !7)
!8329 = !DILocation(line: 2409, column: 11, scope: !8323)
!8330 = !DILocalVariable(name: "eps", scope: !8323, file: !3, line: 2410, type: !4724)
!8331 = !DILocation(line: 2410, column: 29, scope: !8323)
!8332 = !DILocalVariable(name: "intf", scope: !8323, file: !3, line: 2411, type: !4299)
!8333 = !DILocation(line: 2411, column: 24, scope: !8323)
!8334 = !DILocalVariable(name: "r", scope: !8323, file: !3, line: 2412, type: !205)
!8335 = !DILocation(line: 2412, column: 6, scope: !8323)
!8336 = !DILocation(line: 2414, column: 29, scope: !8323)
!8337 = !DILocation(line: 2414, column: 33, scope: !8323)
!8338 = !DILocation(line: 2414, column: 6, scope: !8323)
!8339 = !DILocation(line: 2414, column: 4, scope: !8323)
!8340 = !DILocation(line: 2415, column: 6, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 2415, column: 6)
!8342 = !DILocation(line: 2415, column: 6, scope: !8323)
!8343 = !DILocation(line: 2416, column: 10, scope: !8341)
!8344 = !DILocation(line: 2416, column: 3, scope: !8341)
!8345 = !DILocation(line: 2418, column: 29, scope: !8323)
!8346 = !DILocation(line: 2419, column: 8, scope: !8323)
!8347 = !DILocation(line: 2419, column: 14, scope: !8323)
!8348 = !DILocation(line: 2419, column: 28, scope: !8323)
!8349 = !DILocation(line: 2419, column: 33, scope: !8323)
!8350 = !DILocation(line: 2418, column: 2, scope: !8323)
!8351 = !DILocation(line: 2421, column: 23, scope: !8323)
!8352 = !DILocation(line: 2421, column: 29, scope: !8323)
!8353 = !DILocation(line: 2421, column: 34, scope: !8323)
!8354 = !DILocation(line: 2421, column: 6, scope: !8323)
!8355 = !DILocation(line: 2421, column: 4, scope: !8323)
!8356 = !DILocation(line: 2422, column: 8, scope: !8323)
!8357 = !DILocation(line: 2422, column: 2, scope: !8323)
!8358 = !DILocation(line: 2423, column: 9, scope: !8323)
!8359 = !DILocation(line: 2423, column: 2, scope: !8323)
!8360 = !DILocation(line: 2424, column: 1, scope: !8323)
!8361 = distinct !DISubprogram(name: "proc_drop_privileges", scope: !3, file: !3, line: 2426, type: !6891, scopeLine: 2427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8362 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !8363)
!8363 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !8364)
!8364 = distinct !DILocation(line: 2430, column: 6, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8361, file: !3, line: 2430, column: 6)
!8366 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !8363)
!8367 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !8363)
!8368 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !8363)
!8369 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !8363)
!8370 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !8364)
!8371 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !8364)
!8372 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !8364)
!8373 = !DILocalVariable(name: "ps", arg: 1, scope: !8361, file: !3, line: 2426, type: !190)
!8374 = !DILocation(line: 2426, column: 55, scope: !8361)
!8375 = !DILocalVariable(name: "arg", arg: 2, scope: !8361, file: !3, line: 2426, type: !189)
!8376 = !DILocation(line: 2426, column: 72, scope: !8361)
!8377 = !DILocalVariable(name: "data", scope: !8361, file: !3, line: 2428, type: !212)
!8378 = !DILocation(line: 2428, column: 6, scope: !8361)
!8379 = !DILocation(line: 2430, column: 21, scope: !8365)
!8380 = !DILocation(line: 2430, column: 28, scope: !8365)
!8381 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !8364)
!8382 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !8363)
!8383 = !DILocation(line: 0, scope: !5187, inlinedAt: !8363)
!8384 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !8363)
!8385 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !8363)
!8386 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !8363)
!8387 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !8363)
!8388 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !8363)
!8389 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !8363)
!8390 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !8363)
!8391 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !8363)
!8392 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !8363)
!8393 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !8363)
!8394 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !8363)
!8395 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !8363)
!8396 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !8363)
!8397 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !8363)
!8398 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !8363)
!8399 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !8363)
!8400 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !8363)
!8401 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !8363)
!8402 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !8363)
!8403 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !8363)
!8404 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !8363)
!8405 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !8363)
!8406 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !8363)
!8407 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !8363)
!8408 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !8363)
!8409 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !8364)
!8410 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !8364)
!8411 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !8364)
!8412 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !8364)
!8413 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !8364)
!8414 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !8364)
!8415 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !8364)
!8416 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !8364)
!8417 = !DILocation(line: 2430, column: 6, scope: !8365)
!8418 = !DILocation(line: 2430, column: 6, scope: !8361)
!8419 = !DILocation(line: 2431, column: 3, scope: !8365)
!8420 = !DILocation(line: 2437, column: 32, scope: !8361)
!8421 = !DILocation(line: 2437, column: 2, scope: !8361)
!8422 = !DILocation(line: 2437, column: 6, scope: !8361)
!8423 = !DILocation(line: 2437, column: 29, scope: !8361)
!8424 = !DILocation(line: 2438, column: 2, scope: !8361)
!8425 = !DILocation(line: 2438, column: 6, scope: !8361)
!8426 = !DILocation(line: 2438, column: 25, scope: !8361)
!8427 = !DILocation(line: 2440, column: 2, scope: !8361)
!8428 = !DILocation(line: 2441, column: 1, scope: !8361)
!8429 = distinct !DISubprogram(name: "proc_forbid_suspend", scope: !3, file: !3, line: 2443, type: !6454, scopeLine: 2444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8430 = !DILocalVariable(name: "ps", arg: 1, scope: !8429, file: !3, line: 2443, type: !190)
!8431 = !DILocation(line: 2443, column: 54, scope: !8429)
!8432 = !DILocalVariable(name: "ret", scope: !8429, file: !3, line: 2445, type: !205)
!8433 = !DILocation(line: 2445, column: 6, scope: !8429)
!8434 = !DILocation(line: 2447, column: 6, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 2447, column: 6)
!8436 = !DILocation(line: 2447, column: 10, scope: !8435)
!8437 = !DILocation(line: 2447, column: 6, scope: !8429)
!8438 = !DILocation(line: 2448, column: 31, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 2447, column: 27)
!8440 = !DILocation(line: 2448, column: 35, scope: !8439)
!8441 = !DILocation(line: 2448, column: 9, scope: !8439)
!8442 = !DILocation(line: 2448, column: 7, scope: !8439)
!8443 = !DILocation(line: 2449, column: 7, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 2449, column: 7)
!8445 = !DILocation(line: 2449, column: 11, scope: !8444)
!8446 = !DILocation(line: 2449, column: 7, scope: !8439)
!8447 = !DILocation(line: 2450, column: 4, scope: !8444)
!8448 = !DILocation(line: 2450, column: 8, scope: !8444)
!8449 = !DILocation(line: 2450, column: 24, scope: !8444)
!8450 = !DILocation(line: 2451, column: 12, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8444, file: !3, line: 2451, column: 12)
!8452 = !DILocation(line: 2451, column: 16, scope: !8451)
!8453 = !DILocation(line: 2451, column: 12, scope: !8444)
!8454 = !DILocation(line: 2452, column: 8, scope: !8451)
!8455 = !DILocation(line: 2452, column: 4, scope: !8451)
!8456 = !DILocation(line: 2453, column: 2, scope: !8439)
!8457 = !DILocation(line: 2454, column: 9, scope: !8429)
!8458 = !DILocation(line: 2454, column: 2, scope: !8429)
!8459 = distinct !DISubprogram(name: "proc_allow_suspend", scope: !3, file: !3, line: 2457, type: !6454, scopeLine: 2458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8460 = !DILocalVariable(name: "ps", arg: 1, scope: !8459, file: !3, line: 2457, type: !190)
!8461 = !DILocation(line: 2457, column: 53, scope: !8459)
!8462 = !DILocation(line: 2459, column: 17, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 2459, column: 6)
!8464 = !DILocation(line: 2459, column: 7, scope: !8463)
!8465 = !DILocation(line: 2459, column: 6, scope: !8459)
!8466 = !DILocation(line: 2460, column: 3, scope: !8463)
!8467 = !DILocation(line: 2462, column: 2, scope: !8459)
!8468 = !DILocation(line: 2462, column: 2, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 2462, column: 2)
!8470 = !DILocation(line: 2462, column: 2, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8469, file: !3, line: 2462, column: 2)
!8472 = !DILocation(line: 2462, column: 2, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8469, file: !3, line: 2462, column: 2)
!8474 = !DILocation(line: 2463, column: 7, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 2463, column: 6)
!8476 = !DILocation(line: 2463, column: 11, scope: !8475)
!8477 = !DILocation(line: 2463, column: 6, scope: !8459)
!8478 = !DILocation(line: 2464, column: 26, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 2463, column: 28)
!8480 = !DILocation(line: 2464, column: 30, scope: !8479)
!8481 = !DILocation(line: 2464, column: 3, scope: !8479)
!8482 = !DILocation(line: 2465, column: 3, scope: !8479)
!8483 = !DILocation(line: 2465, column: 7, scope: !8479)
!8484 = !DILocation(line: 2465, column: 23, scope: !8479)
!8485 = !DILocation(line: 2466, column: 2, scope: !8479)
!8486 = !DILocation(line: 2467, column: 2, scope: !8459)
!8487 = !DILocation(line: 2468, column: 1, scope: !8459)
!8488 = distinct !DISubprogram(name: "proc_wait_for_resume", scope: !3, file: !3, line: 2470, type: !6454, scopeLine: 2471, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8489 = !DILocalVariable(name: "ps", arg: 1, scope: !8488, file: !3, line: 2470, type: !190)
!8490 = !DILocation(line: 2470, column: 55, scope: !8488)
!8491 = !DILocalVariable(name: "ret", scope: !8488, file: !3, line: 2472, type: !205)
!8492 = !DILocation(line: 2472, column: 6, scope: !8488)
!8493 = !DILocation(line: 2474, column: 2, scope: !8488)
!8494 = !DILocalVariable(name: "__ret", scope: !8495, file: !3, line: 2475, type: !205)
!8495 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 2475, column: 8)
!8496 = !DILocation(line: 2475, column: 8, scope: !8495)
!8497 = !DILocation(line: 2475, column: 8, scope: !8498)
!8498 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 2475, column: 8)
!8499 = !DILocation(line: 2475, column: 8, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 2475, column: 8)
!8501 = !DILocation(line: 2475, column: 8, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8503, file: !3, line: 2475, column: 8)
!8503 = distinct !DILexicalBlock(scope: !8495, file: !3, line: 2475, column: 8)
!8504 = !DILocation(line: 2475, column: 8, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 2475, column: 8)
!8506 = !DILocation(line: 2475, column: 8, scope: !8503)
!8507 = !DILocalVariable(name: "__wq_entry", scope: !8508, file: !3, line: 2475, type: !8509)
!8508 = distinct !DILexicalBlock(scope: !8503, file: !3, line: 2475, column: 8)
!8509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1524, line: 29, size: 320, elements: !8510)
!8510 = !{!8511, !8512, !8513, !8519}
!8511 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8509, file: !1524, line: 30, baseType: !7, size: 32)
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !8509, file: !1524, line: 31, baseType: !189, size: 64, offset: 64)
!8513 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !8509, file: !1524, line: 32, baseType: !8514, size: 64, offset: 128)
!8514 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1524, line: 16, baseType: !8515)
!8515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8516, size: 64)
!8516 = !DISubroutineType(types: !8517)
!8517 = !{!205, !8518, !7, !205, !189}
!8518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8509, size: 64)
!8519 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !8509, file: !1524, line: 33, baseType: !194, size: 128, offset: 192)
!8520 = !DILocation(line: 2475, column: 8, scope: !8508)
!8521 = !DILocalVariable(name: "__ret", scope: !8508, file: !3, line: 2475, type: !357)
!8522 = !DILocalVariable(name: "__int", scope: !8523, file: !3, line: 2475, type: !357)
!8523 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 2475, column: 8)
!8524 = distinct !DILexicalBlock(scope: !8525, file: !3, line: 2475, column: 8)
!8525 = distinct !DILexicalBlock(scope: !8508, file: !3, line: 2475, column: 8)
!8526 = !DILocation(line: 2475, column: 8, scope: !8523)
!8527 = !DILocation(line: 2475, column: 8, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !3, line: 2475, column: 8)
!8529 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 2475, column: 8)
!8530 = !DILocation(line: 2475, column: 8, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8528, file: !3, line: 2475, column: 8)
!8532 = !DILocation(line: 2475, column: 8, scope: !8529)
!8533 = !DILocation(line: 2475, column: 8, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8523, file: !3, line: 2475, column: 8)
!8535 = !DILocation(line: 2475, column: 8, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8534, file: !3, line: 2475, column: 8)
!8537 = !DILocation(line: 2475, column: 8, scope: !8524)
!8538 = distinct !{!8538, !8539, !8539}
!8539 = !DILocation(line: 2475, column: 8, scope: !8525)
!8540 = !DILabel(scope: !8508, name: "__out", file: !3, line: 2475)
!8541 = !DILocation(line: 2475, column: 6, scope: !8488)
!8542 = !DILocation(line: 2477, column: 2, scope: !8488)
!8543 = !DILocation(line: 2479, column: 6, scope: !8544)
!8544 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 2479, column: 6)
!8545 = !DILocation(line: 2479, column: 10, scope: !8544)
!8546 = !DILocation(line: 2479, column: 6, scope: !8488)
!8547 = !DILocation(line: 2480, column: 3, scope: !8544)
!8548 = !DILocation(line: 2481, column: 29, scope: !8488)
!8549 = !DILocation(line: 2481, column: 9, scope: !8488)
!8550 = !DILocation(line: 2481, column: 2, scope: !8488)
!8551 = !DILocation(line: 2482, column: 1, scope: !8488)
!8552 = distinct !DISubprogram(name: "proc_conninfo_ex", scope: !3, file: !3, line: 1358, type: !8553, scopeLine: 1360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8553 = !DISubroutineType(types: !8554)
!8554 = !{!205, !190, !189, !369}
!8555 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !8556)
!8556 = distinct !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !8557)
!8557 = distinct !DILocation(line: 1385, column: 6, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 1385, column: 6)
!8559 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !8556)
!8560 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !8556)
!8561 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !8556)
!8562 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !8556)
!8563 = !DILocation(line: 197, column: 27, scope: !5065, inlinedAt: !8557)
!8564 = !DILocation(line: 197, column: 43, scope: !5065, inlinedAt: !8557)
!8565 = !DILocation(line: 197, column: 63, scope: !5065, inlinedAt: !8557)
!8566 = !DILocalVariable(name: "ps", arg: 1, scope: !8552, file: !3, line: 1358, type: !190)
!8567 = !DILocation(line: 1358, column: 51, scope: !8552)
!8568 = !DILocalVariable(name: "arg", arg: 2, scope: !8552, file: !3, line: 1359, type: !189)
!8569 = !DILocation(line: 1359, column: 21, scope: !8552)
!8570 = !DILocalVariable(name: "size", arg: 3, scope: !8552, file: !3, line: 1359, type: !369)
!8571 = !DILocation(line: 1359, column: 33, scope: !8552)
!8572 = !DILocalVariable(name: "ci", scope: !8552, file: !3, line: 1361, type: !8573)
!8573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdevfs_conninfo_ex", file: !4534, line: 79, size: 192, elements: !8574)
!8574 = !{!8575, !8576, !8577, !8578, !8579, !8580}
!8575 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8573, file: !4534, line: 80, baseType: !214, size: 32)
!8576 = !DIDerivedType(tag: DW_TAG_member, name: "busnum", scope: !8573, file: !4534, line: 84, baseType: !214, size: 32, offset: 32)
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "devnum", scope: !8573, file: !4534, line: 86, baseType: !214, size: 32, offset: 64)
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !8573, file: !4534, line: 87, baseType: !214, size: 32, offset: 96)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "num_ports", scope: !8573, file: !4534, line: 88, baseType: !1390, size: 8, offset: 128)
!8580 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !8573, file: !4534, line: 92, baseType: !8581, size: 56, offset: 136)
!8581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1390, size: 56, elements: !8582)
!8582 = !{!8583}
!8583 = !DISubrange(count: 7)
!8584 = !DILocation(line: 1361, column: 30, scope: !8552)
!8585 = !DILocalVariable(name: "udev", scope: !8552, file: !3, line: 1362, type: !201)
!8586 = !DILocation(line: 1362, column: 21, scope: !8552)
!8587 = !DILocation(line: 1362, column: 28, scope: !8552)
!8588 = !DILocation(line: 1362, column: 32, scope: !8552)
!8589 = !DILocation(line: 1364, column: 6, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 1364, column: 6)
!8591 = !DILocation(line: 1364, column: 11, scope: !8590)
!8592 = !DILocation(line: 1364, column: 6, scope: !8552)
!8593 = !DILocation(line: 1365, column: 3, scope: !8590)
!8594 = !DILocation(line: 1367, column: 2, scope: !8552)
!8595 = !DILocation(line: 1368, column: 5, scope: !8552)
!8596 = !DILocation(line: 1368, column: 10, scope: !8552)
!8597 = !DILocation(line: 1369, column: 14, scope: !8552)
!8598 = !DILocation(line: 1369, column: 20, scope: !8552)
!8599 = !DILocation(line: 1369, column: 25, scope: !8552)
!8600 = !DILocation(line: 1369, column: 5, scope: !8552)
!8601 = !DILocation(line: 1369, column: 12, scope: !8552)
!8602 = !DILocation(line: 1370, column: 14, scope: !8552)
!8603 = !DILocation(line: 1370, column: 20, scope: !8552)
!8604 = !DILocation(line: 1370, column: 5, scope: !8552)
!8605 = !DILocation(line: 1370, column: 12, scope: !8552)
!8606 = !DILocation(line: 1371, column: 13, scope: !8552)
!8607 = !DILocation(line: 1371, column: 19, scope: !8552)
!8608 = !DILocation(line: 1371, column: 5, scope: !8552)
!8609 = !DILocation(line: 1371, column: 11, scope: !8552)
!8610 = !DILocation(line: 1373, column: 2, scope: !8552)
!8611 = !DILocation(line: 1373, column: 9, scope: !8552)
!8612 = !DILocation(line: 1373, column: 14, scope: !8552)
!8613 = !DILocation(line: 1373, column: 17, scope: !8552)
!8614 = !DILocation(line: 1373, column: 23, scope: !8552)
!8615 = !DILocation(line: 1373, column: 31, scope: !8552)
!8616 = !DILocation(line: 0, scope: !8552)
!8617 = !DILocation(line: 1374, column: 12, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 1374, column: 7)
!8619 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 1373, column: 37)
!8620 = !DILocation(line: 1374, column: 7, scope: !8618)
!8621 = !DILocation(line: 1374, column: 22, scope: !8618)
!8622 = !DILocation(line: 1374, column: 7, scope: !8619)
!8623 = !DILocation(line: 1376, column: 6, scope: !8618)
!8624 = !DILocation(line: 1376, column: 12, scope: !8618)
!8625 = !DILocation(line: 1375, column: 7, scope: !8618)
!8626 = !DILocation(line: 1375, column: 39, scope: !8618)
!8627 = !DILocation(line: 1375, column: 36, scope: !8618)
!8628 = !DILocation(line: 1375, column: 34, scope: !8618)
!8629 = !DILocation(line: 1375, column: 4, scope: !8618)
!8630 = !DILocation(line: 1375, column: 50, scope: !8618)
!8631 = !DILocation(line: 1377, column: 10, scope: !8619)
!8632 = !DILocation(line: 1377, column: 16, scope: !8619)
!8633 = !DILocation(line: 1377, column: 8, scope: !8619)
!8634 = distinct !{!8634, !8610, !8635}
!8635 = !DILocation(line: 1378, column: 2, scope: !8552)
!8636 = !DILocation(line: 1380, column: 9, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 1380, column: 6)
!8638 = !DILocation(line: 1380, column: 6, scope: !8637)
!8639 = !DILocation(line: 1380, column: 19, scope: !8637)
!8640 = !DILocation(line: 1380, column: 6, scope: !8552)
!8641 = !DILocation(line: 1381, column: 15, scope: !8637)
!8642 = !DILocation(line: 1381, column: 12, scope: !8637)
!8643 = !DILocation(line: 1382, column: 8, scope: !8637)
!8644 = !DILocation(line: 1382, column: 40, scope: !8637)
!8645 = !DILocation(line: 1382, column: 37, scope: !8637)
!8646 = !DILocation(line: 1382, column: 35, scope: !8637)
!8647 = !DILocation(line: 1382, column: 5, scope: !8637)
!8648 = !DILocation(line: 1383, column: 7, scope: !8637)
!8649 = !DILocation(line: 1383, column: 4, scope: !8637)
!8650 = !DILocation(line: 1381, column: 3, scope: !8637)
!8651 = !DILocation(line: 1385, column: 19, scope: !8558)
!8652 = !DILocation(line: 1385, column: 24, scope: !8558)
!8653 = !DILocalVariable(name: "__UNIQUE_ID___x283", scope: !8654, file: !3, line: 1385, type: !372)
!8654 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 1385, column: 29)
!8655 = !DILocation(line: 1385, column: 29, scope: !8654)
!8656 = !DILocalVariable(name: "__UNIQUE_ID___y284", scope: !8654, file: !3, line: 1385, type: !369)
!8657 = !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !8557)
!8658 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !8556)
!8659 = !DILocation(line: 0, scope: !5187, inlinedAt: !8556)
!8660 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !8556)
!8661 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !8556)
!8662 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !8556)
!8663 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !8556)
!8664 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !8556)
!8665 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !8556)
!8666 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !8556)
!8667 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !8556)
!8668 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !8556)
!8669 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !8556)
!8670 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !8556)
!8671 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !8556)
!8672 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !8556)
!8673 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !8556)
!8674 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !8556)
!8675 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !8556)
!8676 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !8556)
!8677 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !8556)
!8678 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !8556)
!8679 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !8556)
!8680 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !8556)
!8681 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !8556)
!8682 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !8556)
!8683 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !8556)
!8684 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !8556)
!8685 = !DILocation(line: 199, column: 6, scope: !5065, inlinedAt: !8557)
!8686 = !DILocation(line: 200, column: 21, scope: !5063, inlinedAt: !8557)
!8687 = !DILocation(line: 200, column: 25, scope: !5063, inlinedAt: !8557)
!8688 = !DILocation(line: 200, column: 31, scope: !5063, inlinedAt: !8557)
!8689 = !DILocation(line: 200, column: 7, scope: !5063, inlinedAt: !8557)
!8690 = !DILocation(line: 200, column: 5, scope: !5063, inlinedAt: !8557)
!8691 = !DILocation(line: 200, column: 3, scope: !5063, inlinedAt: !8557)
!8692 = !DILocation(line: 201, column: 9, scope: !5065, inlinedAt: !8557)
!8693 = !DILocation(line: 1385, column: 6, scope: !8558)
!8694 = !DILocation(line: 1385, column: 6, scope: !8552)
!8695 = !DILocation(line: 1386, column: 3, scope: !8558)
!8696 = !DILocation(line: 1388, column: 2, scope: !8552)
!8697 = !DILocation(line: 1389, column: 1, scope: !8552)
!8698 = distinct !DISubprogram(name: "reap_as", scope: !3, file: !3, line: 1970, type: !8699, scopeLine: 1971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8699 = !DISubroutineType(types: !8700)
!8700 = !{!4429, !190}
!8701 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !8702)
!8702 = distinct !DILocation(line: 1989, column: 2, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 1989, column: 2)
!8704 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 1989, column: 2)
!8705 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 1989, column: 2)
!8706 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !8702)
!8707 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !8702)
!8708 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !8709)
!8709 = distinct !DILocation(line: 1982, column: 22, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 1982, column: 7)
!8711 = distinct !DILexicalBlock(scope: !8712, file: !3, line: 1977, column: 11)
!8712 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 1977, column: 2)
!8713 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 1977, column: 2)
!8714 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !8709)
!8715 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !8709)
!8716 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !8717)
!8717 = distinct !DILocation(line: 1978, column: 3, scope: !8711)
!8718 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !8717)
!8719 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !8717)
!8720 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !8721)
!8721 = distinct !DILocation(line: 1972, column: 2, scope: !8698)
!8722 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !8721)
!8723 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !8721)
!8724 = !DILocalVariable(name: "ps", arg: 1, scope: !8698, file: !3, line: 1970, type: !190)
!8725 = !DILocation(line: 1970, column: 52, scope: !8698)
!8726 = !DILocalVariable(name: "wait", scope: !8698, file: !3, line: 1972, type: !8509)
!8727 = !DILocation(line: 1972, column: 2, scope: !8698)
!8728 = !DILocalVariable(name: "as", scope: !8698, file: !3, line: 1973, type: !4429)
!8729 = !DILocation(line: 1973, column: 16, scope: !8698)
!8730 = !DILocalVariable(name: "dev", scope: !8698, file: !3, line: 1974, type: !201)
!8731 = !DILocation(line: 1974, column: 21, scope: !8698)
!8732 = !DILocation(line: 1974, column: 27, scope: !8698)
!8733 = !DILocation(line: 1974, column: 31, scope: !8698)
!8734 = !DILocation(line: 1976, column: 18, scope: !8698)
!8735 = !DILocation(line: 1976, column: 22, scope: !8698)
!8736 = !DILocation(line: 1976, column: 2, scope: !8698)
!8737 = !DILocation(line: 1977, column: 2, scope: !8698)
!8738 = !DILocation(line: 1978, column: 3, scope: !8711)
!8739 = !DILocation(line: 1979, column: 27, scope: !8711)
!8740 = !DILocation(line: 1979, column: 8, scope: !8711)
!8741 = !DILocation(line: 1979, column: 6, scope: !8711)
!8742 = !DILocation(line: 1980, column: 7, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8711, file: !3, line: 1980, column: 7)
!8744 = !DILocation(line: 1980, column: 10, scope: !8743)
!8745 = !DILocation(line: 1980, column: 24, scope: !8743)
!8746 = !DILocation(line: 1980, column: 14, scope: !8743)
!8747 = !DILocation(line: 1980, column: 7, scope: !8711)
!8748 = !DILocation(line: 1981, column: 4, scope: !8743)
!8749 = !DILocation(line: 1982, column: 7, scope: !8710)
!8750 = !DILocation(line: 1982, column: 7, scope: !8711)
!8751 = !DILocation(line: 1983, column: 4, scope: !8710)
!8752 = !DILocation(line: 1984, column: 3, scope: !8711)
!8753 = !DILocation(line: 1985, column: 3, scope: !8711)
!8754 = !DILocation(line: 1986, column: 3, scope: !8711)
!8755 = !DILocation(line: 1977, column: 2, scope: !8712)
!8756 = distinct !{!8756, !8757, !8758}
!8757 = !DILocation(line: 1977, column: 2, scope: !8713)
!8758 = !DILocation(line: 1987, column: 2, scope: !8713)
!8759 = !DILocation(line: 1988, column: 21, scope: !8698)
!8760 = !DILocation(line: 1988, column: 25, scope: !8698)
!8761 = !DILocation(line: 1988, column: 2, scope: !8698)
!8762 = !DILocation(line: 1989, column: 2, scope: !8698)
!8763 = !DILocation(line: 1989, column: 2, scope: !8705)
!8764 = !DILocation(line: 1989, column: 2, scope: !8704)
!8765 = !DILocation(line: 1989, column: 2, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 1989, column: 2)
!8767 = !DILocation(line: 1989, column: 2, scope: !8703)
!8768 = !{i32 -2140898534}
!8769 = !DILocation(line: 1990, column: 9, scope: !8698)
!8770 = !DILocation(line: 1990, column: 2, scope: !8698)
!8771 = distinct !DISubprogram(name: "processcompl", scope: !3, file: !3, line: 1932, type: !8772, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8772 = !DISubroutineType(types: !8773)
!8773 = !{!205, !4429, !859}
!8774 = !DILocalVariable(name: "as", arg: 1, scope: !8771, file: !3, line: 1932, type: !4429)
!8775 = !DILocation(line: 1932, column: 39, scope: !8771)
!8776 = !DILocalVariable(name: "arg", arg: 2, scope: !8771, file: !3, line: 1932, type: !859)
!8777 = !DILocation(line: 1932, column: 65, scope: !8771)
!8778 = !DILocalVariable(name: "urb", scope: !8771, file: !3, line: 1934, type: !4442)
!8779 = !DILocation(line: 1934, column: 14, scope: !8771)
!8780 = !DILocation(line: 1934, column: 20, scope: !8771)
!8781 = !DILocation(line: 1934, column: 24, scope: !8771)
!8782 = !DILocalVariable(name: "userurb", scope: !8771, file: !3, line: 1935, type: !4532)
!8783 = !DILocation(line: 1935, column: 30, scope: !8771)
!8784 = !DILocation(line: 1935, column: 40, scope: !8771)
!8785 = !DILocation(line: 1935, column: 44, scope: !8771)
!8786 = !DILocalVariable(name: "addr", scope: !8771, file: !3, line: 1936, type: !189)
!8787 = !DILocation(line: 1936, column: 15, scope: !8771)
!8788 = !DILocation(line: 1936, column: 22, scope: !8771)
!8789 = !DILocation(line: 1936, column: 26, scope: !8771)
!8790 = !DILocalVariable(name: "i", scope: !8771, file: !3, line: 1937, type: !7)
!8791 = !DILocation(line: 1937, column: 15, scope: !8771)
!8792 = !DILocation(line: 1939, column: 36, scope: !8771)
!8793 = !DILocation(line: 1939, column: 2, scope: !8771)
!8794 = !DILocation(line: 1940, column: 6, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 1940, column: 6)
!8796 = !DILocation(line: 1940, column: 10, scope: !8795)
!8797 = !DILocation(line: 1940, column: 21, scope: !8795)
!8798 = !DILocation(line: 1940, column: 24, scope: !8795)
!8799 = !DILocation(line: 1940, column: 29, scope: !8795)
!8800 = !DILocation(line: 1940, column: 6, scope: !8771)
!8801 = !DILocation(line: 1941, column: 29, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8803, file: !3, line: 1941, column: 7)
!8803 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 1940, column: 44)
!8804 = !DILocation(line: 1941, column: 33, scope: !8802)
!8805 = !DILocation(line: 1941, column: 45, scope: !8802)
!8806 = !DILocation(line: 1941, column: 7, scope: !8802)
!8807 = !DILocation(line: 1941, column: 7, scope: !8803)
!8808 = !DILocation(line: 1942, column: 4, scope: !8802)
!8809 = !DILocation(line: 1943, column: 2, scope: !8803)
!8810 = !DILocation(line: 1944, column: 6, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 1944, column: 6)
!8812 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 1944, column: 6)
!8813 = !DILocalVariable(name: "__ret_pu", scope: !8814, file: !3, line: 1944, type: !205)
!8814 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 1944, column: 6)
!8815 = !DILocation(line: 1944, column: 6, scope: !8814)
!8816 = !DILocalVariable(name: "__ptr_pu", scope: !8814, file: !3, line: 1944, type: !189)
!8817 = !DILocalVariable(name: "__val_pu", scope: !8814, file: !3, line: 1944, type: !205)
!8818 = !{i32 -2140905606}
!8819 = !DILocation(line: 1944, column: 6, scope: !8812)
!8820 = !DILocation(line: 1944, column: 6, scope: !8771)
!8821 = !DILocation(line: 1945, column: 3, scope: !8812)
!8822 = !DILocation(line: 1946, column: 6, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 1946, column: 6)
!8824 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 1946, column: 6)
!8825 = !DILocalVariable(name: "__ret_pu", scope: !8826, file: !3, line: 1946, type: !205)
!8826 = distinct !DILexicalBlock(scope: !8823, file: !3, line: 1946, column: 6)
!8827 = !DILocation(line: 1946, column: 6, scope: !8826)
!8828 = !DILocalVariable(name: "__ptr_pu", scope: !8826, file: !3, line: 1946, type: !189)
!8829 = !DILocalVariable(name: "__val_pu", scope: !8826, file: !3, line: 1946, type: !205)
!8830 = !{i32 -2140904773}
!8831 = !DILocation(line: 1946, column: 6, scope: !8824)
!8832 = !DILocation(line: 1946, column: 6, scope: !8771)
!8833 = !DILocation(line: 1947, column: 3, scope: !8824)
!8834 = !DILocation(line: 1948, column: 6, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8836, file: !3, line: 1948, column: 6)
!8836 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 1948, column: 6)
!8837 = !DILocalVariable(name: "__ret_pu", scope: !8838, file: !3, line: 1948, type: !205)
!8838 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 1948, column: 6)
!8839 = !DILocation(line: 1948, column: 6, scope: !8838)
!8840 = !DILocalVariable(name: "__ptr_pu", scope: !8838, file: !3, line: 1948, type: !189)
!8841 = !DILocalVariable(name: "__val_pu", scope: !8838, file: !3, line: 1948, type: !205)
!8842 = !{i32 -2140903908}
!8843 = !DILocation(line: 1948, column: 6, scope: !8836)
!8844 = !DILocation(line: 1948, column: 6, scope: !8771)
!8845 = !DILocation(line: 1949, column: 3, scope: !8836)
!8846 = !DILocation(line: 1951, column: 30, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 1951, column: 6)
!8848 = !DILocation(line: 1951, column: 35, scope: !8847)
!8849 = !DILocation(line: 1951, column: 39, scope: !8847)
!8850 = !DILocation(line: 1951, column: 6, scope: !8847)
!8851 = !DILocation(line: 1951, column: 6, scope: !8771)
!8852 = !DILocation(line: 1952, column: 10, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8854, file: !3, line: 1952, column: 3)
!8854 = distinct !DILexicalBlock(scope: !8847, file: !3, line: 1951, column: 46)
!8855 = !DILocation(line: 1952, column: 8, scope: !8853)
!8856 = !DILocation(line: 1952, column: 15, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8853, file: !3, line: 1952, column: 3)
!8858 = !DILocation(line: 1952, column: 19, scope: !8857)
!8859 = !DILocation(line: 1952, column: 24, scope: !8857)
!8860 = !DILocation(line: 1952, column: 17, scope: !8857)
!8861 = !DILocation(line: 1952, column: 3, scope: !8853)
!8862 = !DILocation(line: 1953, column: 8, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 1953, column: 8)
!8864 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 1953, column: 8)
!8865 = distinct !DILexicalBlock(scope: !8857, file: !3, line: 1952, column: 48)
!8866 = !DILocalVariable(name: "__ret_pu", scope: !8867, file: !3, line: 1953, type: !205)
!8867 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 1953, column: 8)
!8868 = !DILocation(line: 1953, column: 8, scope: !8867)
!8869 = !DILocalVariable(name: "__ptr_pu", scope: !8867, file: !3, line: 1953, type: !189)
!8870 = !DILocalVariable(name: "__val_pu", scope: !8867, file: !3, line: 1953, type: !7)
!8871 = !{i32 -2140903013}
!8872 = !DILocation(line: 1953, column: 8, scope: !8864)
!8873 = !DILocation(line: 1953, column: 8, scope: !8865)
!8874 = !DILocation(line: 1955, column: 5, scope: !8864)
!8875 = !DILocation(line: 1956, column: 8, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 1956, column: 8)
!8877 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 1956, column: 8)
!8878 = !DILocalVariable(name: "__ret_pu", scope: !8879, file: !3, line: 1956, type: !205)
!8879 = distinct !DILexicalBlock(scope: !8876, file: !3, line: 1956, column: 8)
!8880 = !DILocation(line: 1956, column: 8, scope: !8879)
!8881 = !DILocalVariable(name: "__ptr_pu", scope: !8879, file: !3, line: 1956, type: !189)
!8882 = !DILocalVariable(name: "__val_pu", scope: !8879, file: !3, line: 1956, type: !7)
!8883 = !{i32 -2140902032}
!8884 = !DILocation(line: 1956, column: 8, scope: !8877)
!8885 = !DILocation(line: 1956, column: 8, scope: !8865)
!8886 = !DILocation(line: 1958, column: 5, scope: !8877)
!8887 = !DILocation(line: 1959, column: 3, scope: !8865)
!8888 = !DILocation(line: 1952, column: 44, scope: !8857)
!8889 = !DILocation(line: 1952, column: 3, scope: !8857)
!8890 = distinct !{!8890, !8861, !8891}
!8891 = !DILocation(line: 1959, column: 3, scope: !8853)
!8892 = !DILocation(line: 1960, column: 2, scope: !8854)
!8893 = !DILocation(line: 1962, column: 6, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8895, file: !3, line: 1962, column: 6)
!8895 = distinct !DILexicalBlock(scope: !8771, file: !3, line: 1962, column: 6)
!8896 = !DILocalVariable(name: "__ret_pu", scope: !8897, file: !3, line: 1962, type: !205)
!8897 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 1962, column: 6)
!8898 = !DILocation(line: 1962, column: 6, scope: !8897)
!8899 = !DILocalVariable(name: "__ptr_pu", scope: !8897, file: !3, line: 1962, type: !189)
!8900 = !DILocalVariable(name: "__val_pu", scope: !8897, file: !3, line: 1962, type: !189)
!8901 = !{i32 -2140901118}
!8902 = !DILocation(line: 1962, column: 6, scope: !8895)
!8903 = !DILocation(line: 1962, column: 6, scope: !8771)
!8904 = !DILocation(line: 1963, column: 3, scope: !8895)
!8905 = !DILocation(line: 1964, column: 2, scope: !8771)
!8906 = !DILabel(scope: !8771, name: "err_out", file: !3, line: 1966)
!8907 = !DILocation(line: 1966, column: 1, scope: !8771)
!8908 = !DILocation(line: 1967, column: 2, scope: !8771)
!8909 = !DILocation(line: 1968, column: 1, scope: !8771)
!8910 = distinct !DISubprogram(name: "free_async", scope: !3, file: !3, line: 393, type: !8911, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8911 = !DISubroutineType(types: !8912)
!8912 = !{null, !4429}
!8913 = !DILocalVariable(name: "as", arg: 1, scope: !8910, file: !3, line: 393, type: !4429)
!8914 = !DILocation(line: 393, column: 38, scope: !8910)
!8915 = !DILocalVariable(name: "i", scope: !8910, file: !3, line: 395, type: !205)
!8916 = !DILocation(line: 395, column: 6, scope: !8910)
!8917 = !DILocation(line: 397, column: 10, scope: !8910)
!8918 = !DILocation(line: 397, column: 14, scope: !8910)
!8919 = !DILocation(line: 397, column: 2, scope: !8910)
!8920 = !DILocation(line: 398, column: 6, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8910, file: !3, line: 398, column: 6)
!8922 = !DILocation(line: 398, column: 10, scope: !8921)
!8923 = !DILocation(line: 398, column: 6, scope: !8910)
!8924 = !DILocation(line: 399, column: 12, scope: !8921)
!8925 = !DILocation(line: 399, column: 16, scope: !8921)
!8926 = !DILocation(line: 399, column: 3, scope: !8921)
!8927 = !DILocation(line: 400, column: 9, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8910, file: !3, line: 400, column: 2)
!8929 = !DILocation(line: 400, column: 7, scope: !8928)
!8930 = !DILocation(line: 400, column: 14, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 400, column: 2)
!8932 = !DILocation(line: 400, column: 18, scope: !8931)
!8933 = !DILocation(line: 400, column: 22, scope: !8931)
!8934 = !DILocation(line: 400, column: 27, scope: !8931)
!8935 = !DILocation(line: 400, column: 16, scope: !8931)
!8936 = !DILocation(line: 400, column: 2, scope: !8928)
!8937 = !DILocation(line: 401, column: 16, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8939, file: !3, line: 401, column: 7)
!8939 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 400, column: 41)
!8940 = !DILocation(line: 401, column: 20, scope: !8938)
!8941 = !DILocation(line: 401, column: 25, scope: !8938)
!8942 = !DILocation(line: 401, column: 28, scope: !8938)
!8943 = !DILocation(line: 401, column: 7, scope: !8938)
!8944 = !DILocation(line: 401, column: 7, scope: !8939)
!8945 = !DILocation(line: 402, column: 19, scope: !8938)
!8946 = !DILocation(line: 402, column: 23, scope: !8938)
!8947 = !DILocation(line: 402, column: 28, scope: !8938)
!8948 = !DILocation(line: 402, column: 31, scope: !8938)
!8949 = !DILocation(line: 402, column: 10, scope: !8938)
!8950 = !DILocation(line: 402, column: 4, scope: !8938)
!8951 = !DILocation(line: 403, column: 2, scope: !8939)
!8952 = !DILocation(line: 400, column: 37, scope: !8931)
!8953 = !DILocation(line: 400, column: 2, scope: !8931)
!8954 = distinct !{!8954, !8936, !8955}
!8955 = !DILocation(line: 403, column: 2, scope: !8928)
!8956 = !DILocation(line: 405, column: 8, scope: !8910)
!8957 = !DILocation(line: 405, column: 12, scope: !8910)
!8958 = !DILocation(line: 405, column: 17, scope: !8910)
!8959 = !DILocation(line: 405, column: 2, scope: !8910)
!8960 = !DILocation(line: 406, column: 6, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8910, file: !3, line: 406, column: 6)
!8962 = !DILocation(line: 406, column: 10, scope: !8961)
!8963 = !DILocation(line: 406, column: 15, scope: !8961)
!8964 = !DILocation(line: 406, column: 6, scope: !8910)
!8965 = !DILocation(line: 407, column: 9, scope: !8961)
!8966 = !DILocation(line: 407, column: 13, scope: !8961)
!8967 = !DILocation(line: 407, column: 18, scope: !8961)
!8968 = !DILocation(line: 407, column: 3, scope: !8961)
!8969 = !DILocation(line: 409, column: 28, scope: !8961)
!8970 = !DILocation(line: 409, column: 32, scope: !8961)
!8971 = !DILocation(line: 409, column: 39, scope: !8961)
!8972 = !DILocation(line: 409, column: 43, scope: !8961)
!8973 = !DILocation(line: 409, column: 49, scope: !8961)
!8974 = !DILocation(line: 409, column: 3, scope: !8961)
!8975 = !DILocation(line: 411, column: 8, scope: !8910)
!8976 = !DILocation(line: 411, column: 12, scope: !8910)
!8977 = !DILocation(line: 411, column: 17, scope: !8910)
!8978 = !DILocation(line: 411, column: 2, scope: !8910)
!8979 = !DILocation(line: 412, column: 15, scope: !8910)
!8980 = !DILocation(line: 412, column: 19, scope: !8910)
!8981 = !DILocation(line: 412, column: 2, scope: !8910)
!8982 = !DILocation(line: 413, column: 30, scope: !8910)
!8983 = !DILocation(line: 413, column: 34, scope: !8910)
!8984 = !DILocation(line: 413, column: 2, scope: !8910)
!8985 = !DILocation(line: 414, column: 8, scope: !8910)
!8986 = !DILocation(line: 414, column: 2, scope: !8910)
!8987 = !DILocation(line: 415, column: 1, scope: !8910)
!8988 = distinct !DISubprogram(name: "signal_pending", scope: !1958, file: !1958, line: 356, type: !8989, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8989 = !DISubroutineType(types: !8990)
!8990 = !{!205, !1254}
!8991 = !DILocalVariable(name: "p", arg: 1, scope: !8988, file: !1958, line: 356, type: !1254)
!8992 = !DILocation(line: 356, column: 54, scope: !8988)
!8993 = !DILocation(line: 358, column: 9, scope: !8988)
!8994 = !DILocation(line: 358, column: 2, scope: !8988)
!8995 = distinct !DISubprogram(name: "async_getcompleted", scope: !3, file: !3, line: 437, type: !8699, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!8996 = !DILocation(line: 407, column: 64, scope: !5443, inlinedAt: !8997)
!8997 = distinct !DILocation(line: 448, column: 2, scope: !8995)
!8998 = !DILocation(line: 407, column: 84, scope: !5443, inlinedAt: !8997)
!8999 = !DILocation(line: 327, column: 67, scope: !5452, inlinedAt: !9000)
!9000 = distinct !DILocation(line: 442, column: 2, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !9002, file: !3, line: 442, column: 2)
!9002 = distinct !DILexicalBlock(scope: !9003, file: !3, line: 442, column: 2)
!9003 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 442, column: 2)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !3, line: 442, column: 2)
!9005 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 442, column: 2)
!9006 = !DILocalVariable(name: "ps", arg: 1, scope: !8995, file: !3, line: 437, type: !190)
!9007 = !DILocation(line: 437, column: 63, scope: !8995)
!9008 = !DILocalVariable(name: "flags", scope: !8995, file: !3, line: 439, type: !372)
!9009 = !DILocation(line: 439, column: 16, scope: !8995)
!9010 = !DILocalVariable(name: "as", scope: !8995, file: !3, line: 440, type: !4429)
!9011 = !DILocation(line: 440, column: 16, scope: !8995)
!9012 = !DILocation(line: 442, column: 2, scope: !8995)
!9013 = !DILocation(line: 442, column: 2, scope: !9005)
!9014 = !DILocalVariable(name: "__dummy", scope: !9015, file: !3, line: 442, type: !372)
!9015 = distinct !DILexicalBlock(scope: !9004, file: !3, line: 442, column: 2)
!9016 = !DILocation(line: 442, column: 2, scope: !9015)
!9017 = !DILocalVariable(name: "__dummy2", scope: !9015, file: !3, line: 442, type: !372)
!9018 = !DILocation(line: 442, column: 2, scope: !9004)
!9019 = !DILocation(line: 442, column: 2, scope: !9003)
!9020 = !DILocation(line: 442, column: 2, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9003, file: !3, line: 442, column: 2)
!9022 = !DILocalVariable(name: "__dummy", scope: !9023, file: !3, line: 442, type: !372)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !3, line: 442, column: 2)
!9024 = distinct !DILexicalBlock(scope: !9021, file: !3, line: 442, column: 2)
!9025 = !DILocation(line: 442, column: 2, scope: !9023)
!9026 = !DILocalVariable(name: "__dummy2", scope: !9023, file: !3, line: 442, type: !372)
!9027 = !DILocation(line: 442, column: 2, scope: !9024)
!9028 = !DILocation(line: 442, column: 2, scope: !9002)
!9029 = !{i32 -2141005323}
!9030 = !DILocation(line: 442, column: 2, scope: !9001)
!9031 = !DILocation(line: 329, column: 10, scope: !5452, inlinedAt: !9000)
!9032 = !DILocation(line: 329, column: 16, scope: !5452, inlinedAt: !9000)
!9033 = !DILocation(line: 443, column: 19, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 443, column: 6)
!9035 = !DILocation(line: 443, column: 23, scope: !9034)
!9036 = !DILocation(line: 443, column: 7, scope: !9034)
!9037 = !DILocation(line: 443, column: 6, scope: !8995)
!9038 = !DILocalVariable(name: "__mptr", scope: !9039, file: !3, line: 444, type: !189)
!9039 = distinct !DILexicalBlock(scope: !9040, file: !3, line: 444, column: 8)
!9040 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 443, column: 41)
!9041 = !DILocation(line: 444, column: 8, scope: !9039)
!9042 = !DILocation(line: 444, column: 8, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 444, column: 8)
!9044 = !DILocation(line: 444, column: 6, scope: !9040)
!9045 = !DILocation(line: 446, column: 18, scope: !9040)
!9046 = !DILocation(line: 446, column: 22, scope: !9040)
!9047 = !DILocation(line: 446, column: 3, scope: !9040)
!9048 = !DILocation(line: 447, column: 2, scope: !9040)
!9049 = !DILocation(line: 448, column: 26, scope: !8995)
!9050 = !DILocation(line: 448, column: 30, scope: !8995)
!9051 = !DILocation(line: 448, column: 36, scope: !8995)
!9052 = !DILocation(line: 409, column: 2, scope: !5633, inlinedAt: !8997)
!9053 = !DILocation(line: 409, column: 2, scope: !5638, inlinedAt: !8997)
!9054 = !DILocation(line: 409, column: 2, scope: !5639, inlinedAt: !8997)
!9055 = !DILocation(line: 409, column: 2, scope: !5646, inlinedAt: !8997)
!9056 = !DILocation(line: 409, column: 2, scope: !5649, inlinedAt: !8997)
!9057 = !DILocation(line: 449, column: 9, scope: !8995)
!9058 = !DILocation(line: 449, column: 2, scope: !8995)
!9059 = distinct !DISubprogram(name: "compute_isochronous_actual_length", scope: !3, file: !3, line: 1920, type: !4493, scopeLine: 1921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9060 = !DILocalVariable(name: "urb", arg: 1, scope: !9059, file: !3, line: 1920, type: !4442)
!9061 = !DILocation(line: 1920, column: 59, scope: !9059)
!9062 = !DILocalVariable(name: "i", scope: !9059, file: !3, line: 1922, type: !7)
!9063 = !DILocation(line: 1922, column: 15, scope: !9059)
!9064 = !DILocation(line: 1924, column: 6, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 1924, column: 6)
!9066 = !DILocation(line: 1924, column: 11, scope: !9065)
!9067 = !DILocation(line: 1924, column: 29, scope: !9065)
!9068 = !DILocation(line: 1924, column: 6, scope: !9059)
!9069 = !DILocation(line: 1925, column: 3, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9065, file: !3, line: 1924, column: 34)
!9071 = !DILocation(line: 1925, column: 8, scope: !9070)
!9072 = !DILocation(line: 1925, column: 22, scope: !9070)
!9073 = !DILocation(line: 1926, column: 10, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 1926, column: 3)
!9075 = !DILocation(line: 1926, column: 8, scope: !9074)
!9076 = !DILocation(line: 1926, column: 15, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9074, file: !3, line: 1926, column: 3)
!9078 = !DILocation(line: 1926, column: 19, scope: !9077)
!9079 = !DILocation(line: 1926, column: 24, scope: !9077)
!9080 = !DILocation(line: 1926, column: 17, scope: !9077)
!9081 = !DILocation(line: 1926, column: 3, scope: !9074)
!9082 = !DILocation(line: 1928, column: 6, scope: !9077)
!9083 = !DILocation(line: 1928, column: 11, scope: !9077)
!9084 = !DILocation(line: 1928, column: 26, scope: !9077)
!9085 = !DILocation(line: 1928, column: 29, scope: !9077)
!9086 = !DILocation(line: 1927, column: 4, scope: !9077)
!9087 = !DILocation(line: 1927, column: 9, scope: !9077)
!9088 = !DILocation(line: 1927, column: 23, scope: !9077)
!9089 = !DILocation(line: 1926, column: 44, scope: !9077)
!9090 = !DILocation(line: 1926, column: 3, scope: !9077)
!9091 = distinct !{!9091, !9081, !9092}
!9092 = !DILocation(line: 1928, column: 29, scope: !9074)
!9093 = !DILocation(line: 1929, column: 2, scope: !9070)
!9094 = !DILocation(line: 1930, column: 1, scope: !9059)
!9095 = distinct !DISubprogram(name: "copy_urb_data_to_user", scope: !3, file: !3, line: 533, type: !9096, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{!205, !9098, !4442}
!9098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!9099 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !9100)
!9100 = distinct !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !9101)
!9101 = distinct !DILocation(line: 550, column: 7, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9103, file: !3, line: 550, column: 7)
!9103 = distinct !DILexicalBlock(scope: !9104, file: !3, line: 548, column: 44)
!9104 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 548, column: 2)
!9105 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 548, column: 2)
!9106 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !9100)
!9107 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !9100)
!9108 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !9100)
!9109 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !9100)
!9110 = !DILocation(line: 197, column: 27, scope: !5065, inlinedAt: !9101)
!9111 = !DILocation(line: 197, column: 43, scope: !5065, inlinedAt: !9101)
!9112 = !DILocation(line: 197, column: 63, scope: !5065, inlinedAt: !9101)
!9113 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !9114)
!9114 = distinct !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !9115)
!9115 = distinct !DILocation(line: 543, column: 7, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 543, column: 7)
!9117 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 542, column: 25)
!9118 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 542, column: 6)
!9119 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !9114)
!9120 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !9114)
!9121 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !9114)
!9122 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !9114)
!9123 = !DILocation(line: 197, column: 27, scope: !5065, inlinedAt: !9115)
!9124 = !DILocation(line: 197, column: 43, scope: !5065, inlinedAt: !9115)
!9125 = !DILocation(line: 197, column: 63, scope: !5065, inlinedAt: !9115)
!9126 = !DILocalVariable(name: "userbuffer", arg: 1, scope: !9095, file: !3, line: 533, type: !9098)
!9127 = !DILocation(line: 533, column: 45, scope: !9095)
!9128 = !DILocalVariable(name: "urb", arg: 2, scope: !9095, file: !3, line: 533, type: !4442)
!9129 = !DILocation(line: 533, column: 69, scope: !9095)
!9130 = !DILocalVariable(name: "i", scope: !9095, file: !3, line: 535, type: !7)
!9131 = !DILocation(line: 535, column: 11, scope: !9095)
!9132 = !DILocalVariable(name: "len", scope: !9095, file: !3, line: 535, type: !7)
!9133 = !DILocation(line: 535, column: 14, scope: !9095)
!9134 = !DILocalVariable(name: "size", scope: !9095, file: !3, line: 535, type: !7)
!9135 = !DILocation(line: 535, column: 19, scope: !9095)
!9136 = !DILocation(line: 537, column: 6, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 537, column: 6)
!9138 = !DILocation(line: 537, column: 11, scope: !9137)
!9139 = !DILocation(line: 537, column: 29, scope: !9137)
!9140 = !DILocation(line: 537, column: 6, scope: !9095)
!9141 = !DILocation(line: 538, column: 9, scope: !9137)
!9142 = !DILocation(line: 538, column: 14, scope: !9137)
!9143 = !DILocation(line: 538, column: 7, scope: !9137)
!9144 = !DILocation(line: 538, column: 3, scope: !9137)
!9145 = !DILocation(line: 540, column: 9, scope: !9137)
!9146 = !DILocation(line: 540, column: 14, scope: !9137)
!9147 = !DILocation(line: 540, column: 7, scope: !9137)
!9148 = !DILocation(line: 542, column: 6, scope: !9118)
!9149 = !DILocation(line: 542, column: 11, scope: !9118)
!9150 = !DILocation(line: 542, column: 19, scope: !9118)
!9151 = !DILocation(line: 542, column: 6, scope: !9095)
!9152 = !DILocation(line: 543, column: 20, scope: !9116)
!9153 = !DILocation(line: 543, column: 32, scope: !9116)
!9154 = !DILocation(line: 543, column: 37, scope: !9116)
!9155 = !DILocation(line: 543, column: 54, scope: !9116)
!9156 = !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !9115)
!9157 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !9114)
!9158 = !DILocation(line: 0, scope: !5187, inlinedAt: !9114)
!9159 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !9114)
!9160 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !9114)
!9161 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !9114)
!9162 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !9114)
!9163 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !9114)
!9164 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !9114)
!9165 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !9114)
!9166 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !9114)
!9167 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !9114)
!9168 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !9114)
!9169 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !9114)
!9170 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !9114)
!9171 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !9114)
!9172 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !9114)
!9173 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !9114)
!9174 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !9114)
!9175 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !9114)
!9176 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !9114)
!9177 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !9114)
!9178 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !9114)
!9179 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !9114)
!9180 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !9114)
!9181 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !9114)
!9182 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !9114)
!9183 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !9114)
!9184 = !DILocation(line: 199, column: 6, scope: !5065, inlinedAt: !9115)
!9185 = !DILocation(line: 200, column: 21, scope: !5063, inlinedAt: !9115)
!9186 = !DILocation(line: 200, column: 25, scope: !5063, inlinedAt: !9115)
!9187 = !DILocation(line: 200, column: 31, scope: !5063, inlinedAt: !9115)
!9188 = !DILocation(line: 200, column: 7, scope: !5063, inlinedAt: !9115)
!9189 = !DILocation(line: 200, column: 5, scope: !5063, inlinedAt: !9115)
!9190 = !DILocation(line: 200, column: 3, scope: !5063, inlinedAt: !9115)
!9191 = !DILocation(line: 201, column: 9, scope: !5065, inlinedAt: !9115)
!9192 = !DILocation(line: 543, column: 7, scope: !9116)
!9193 = !DILocation(line: 543, column: 7, scope: !9117)
!9194 = !DILocation(line: 544, column: 4, scope: !9116)
!9195 = !DILocation(line: 545, column: 3, scope: !9117)
!9196 = !DILocation(line: 548, column: 9, scope: !9105)
!9197 = !DILocation(line: 548, column: 7, scope: !9105)
!9198 = !DILocation(line: 548, column: 14, scope: !9104)
!9199 = !DILocation(line: 548, column: 18, scope: !9104)
!9200 = !DILocation(line: 548, column: 23, scope: !9104)
!9201 = !DILocation(line: 548, column: 16, scope: !9104)
!9202 = !DILocation(line: 548, column: 31, scope: !9104)
!9203 = !DILocation(line: 548, column: 34, scope: !9104)
!9204 = !DILocation(line: 0, scope: !9104)
!9205 = !DILocation(line: 548, column: 2, scope: !9105)
!9206 = !DILocation(line: 549, column: 11, scope: !9103)
!9207 = !DILocation(line: 549, column: 15, scope: !9103)
!9208 = !DILocation(line: 549, column: 10, scope: !9103)
!9209 = !DILocation(line: 549, column: 46, scope: !9103)
!9210 = !DILocation(line: 549, column: 8, scope: !9103)
!9211 = !DILocation(line: 550, column: 20, scope: !9102)
!9212 = !DILocation(line: 550, column: 41, scope: !9102)
!9213 = !DILocation(line: 550, column: 46, scope: !9102)
!9214 = !DILocation(line: 550, column: 49, scope: !9102)
!9215 = !DILocation(line: 550, column: 32, scope: !9102)
!9216 = !DILocation(line: 550, column: 54, scope: !9102)
!9217 = !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !9101)
!9218 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !9100)
!9219 = !DILocation(line: 0, scope: !5187, inlinedAt: !9100)
!9220 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !9100)
!9221 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !9100)
!9222 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !9100)
!9223 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !9100)
!9224 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !9100)
!9225 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !9100)
!9226 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !9100)
!9227 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !9100)
!9228 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !9100)
!9229 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !9100)
!9230 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !9100)
!9231 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !9100)
!9232 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !9100)
!9233 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !9100)
!9234 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !9100)
!9235 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !9100)
!9236 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !9100)
!9237 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !9100)
!9238 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !9100)
!9239 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !9100)
!9240 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !9100)
!9241 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !9100)
!9242 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !9100)
!9243 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !9100)
!9244 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !9100)
!9245 = !DILocation(line: 199, column: 6, scope: !5065, inlinedAt: !9101)
!9246 = !DILocation(line: 200, column: 21, scope: !5063, inlinedAt: !9101)
!9247 = !DILocation(line: 200, column: 25, scope: !5063, inlinedAt: !9101)
!9248 = !DILocation(line: 200, column: 31, scope: !5063, inlinedAt: !9101)
!9249 = !DILocation(line: 200, column: 7, scope: !5063, inlinedAt: !9101)
!9250 = !DILocation(line: 200, column: 5, scope: !5063, inlinedAt: !9101)
!9251 = !DILocation(line: 200, column: 3, scope: !5063, inlinedAt: !9101)
!9252 = !DILocation(line: 201, column: 9, scope: !5065, inlinedAt: !9101)
!9253 = !DILocation(line: 550, column: 7, scope: !9102)
!9254 = !DILocation(line: 550, column: 7, scope: !9103)
!9255 = !DILocation(line: 551, column: 4, scope: !9102)
!9256 = !DILocation(line: 552, column: 17, scope: !9103)
!9257 = !DILocation(line: 552, column: 14, scope: !9103)
!9258 = !DILocation(line: 553, column: 10, scope: !9103)
!9259 = !DILocation(line: 553, column: 7, scope: !9103)
!9260 = !DILocation(line: 554, column: 2, scope: !9103)
!9261 = !DILocation(line: 548, column: 40, scope: !9104)
!9262 = !DILocation(line: 548, column: 2, scope: !9104)
!9263 = distinct !{!9263, !9205, !9264}
!9264 = !DILocation(line: 554, column: 2, scope: !9105)
!9265 = !DILocation(line: 556, column: 2, scope: !9095)
!9266 = !DILocation(line: 557, column: 1, scope: !9095)
!9267 = distinct !DISubprogram(name: "might_fault", scope: !9268, file: !9268, line: 315, type: !2082, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9268 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!9269 = !DILocation(line: 315, column: 40, scope: !9267)
!9270 = distinct !DISubprogram(name: "usb_endpoint_xfer_isoc", scope: !6, file: !6, line: 556, type: !9271, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9271 = !DISubroutineType(types: !9272)
!9272 = !{!205, !9273}
!9273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9274, size: 64)
!9274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4152)
!9275 = !DILocalVariable(name: "epd", arg: 1, scope: !9270, file: !6, line: 557, type: !9273)
!9276 = !DILocation(line: 557, column: 43, scope: !9270)
!9277 = !DILocation(line: 559, column: 11, scope: !9270)
!9278 = !DILocation(line: 559, column: 16, scope: !9270)
!9279 = !DILocation(line: 559, column: 29, scope: !9270)
!9280 = !DILocation(line: 559, column: 59, scope: !9270)
!9281 = !DILocation(line: 559, column: 2, scope: !9270)
!9282 = distinct !DISubprogram(name: "sg_virt", scope: !4472, file: !4472, line: 256, type: !9283, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9283 = !DISubroutineType(types: !9284)
!9284 = !{!189, !4470}
!9285 = !DILocalVariable(name: "page", arg: 1, scope: !9286, file: !35, line: 1514, type: !9289)
!9286 = distinct !DISubprogram(name: "lowmem_page_address", scope: !35, file: !35, line: 1514, type: !9287, scopeLine: 1515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9287 = !DISubroutineType(types: !9288)
!9288 = !{!189, !9289}
!9289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9290, size: 64)
!9290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !766)
!9291 = !DILocation(line: 1514, column: 69, scope: !9286, inlinedAt: !9292)
!9292 = distinct !DILocation(line: 258, column: 9, scope: !9282)
!9293 = !DILocalVariable(name: "sg", arg: 1, scope: !9282, file: !4472, line: 256, type: !4470)
!9294 = !DILocation(line: 256, column: 49, scope: !9282)
!9295 = !DILocation(line: 258, column: 9, scope: !9282)
!9296 = !DILocation(line: 1516, column: 9, scope: !9286, inlinedAt: !9292)
!9297 = !DILocation(line: 258, column: 37, scope: !9282)
!9298 = !DILocation(line: 258, column: 41, scope: !9282)
!9299 = !DILocation(line: 258, column: 35, scope: !9282)
!9300 = !DILocation(line: 258, column: 2, scope: !9282)
!9301 = distinct !DISubprogram(name: "sg_page", scope: !4472, file: !4472, line: 124, type: !9302, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9302 = !DISubroutineType(types: !9303)
!9303 = !{!765, !4470}
!9304 = !DILocalVariable(name: "sg", arg: 1, scope: !9301, file: !4472, line: 124, type: !4470)
!9305 = !DILocation(line: 124, column: 56, scope: !9301)
!9306 = !DILocation(line: 129, column: 26, scope: !9301)
!9307 = !DILocation(line: 129, column: 31, scope: !9301)
!9308 = !DILocation(line: 129, column: 41, scope: !9301)
!9309 = !DILocation(line: 129, column: 9, scope: !9301)
!9310 = !DILocation(line: 129, column: 2, scope: !9301)
!9311 = distinct !DISubprogram(name: "put_cred", scope: !1592, file: !1592, line: 280, type: !9312, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9312 = !DISubroutineType(types: !9313)
!9313 = !{null, !1589}
!9314 = !DILocalVariable(name: "v", arg: 1, scope: !9315, file: !9316, line: 121, type: !9319)
!9315 = distinct !DISubprogram(name: "arch_atomic_dec_and_test", scope: !9316, file: !9316, line: 121, type: !9317, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9316 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!9317 = !DISubroutineType(types: !9318)
!9318 = !{!534, !9319}
!9319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!9320 = !DILocation(line: 121, column: 64, scope: !9315, inlinedAt: !9321)
!9321 = distinct !DILocation(line: 749, column: 9, scope: !9322, inlinedAt: !9324)
!9322 = distinct !DISubprogram(name: "atomic_dec_and_test", scope: !9323, file: !9323, line: 746, type: !9317, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9323 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!9324 = distinct !DILocation(line: 286, column: 7, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9326, file: !1592, line: 286, column: 7)
!9326 = distinct !DILexicalBlock(scope: !9327, file: !1592, line: 284, column: 12)
!9327 = distinct !DILexicalBlock(scope: !9311, file: !1592, line: 284, column: 6)
!9328 = !DILocalVariable(name: "c", scope: !9329, file: !9316, line: 123, type: !534)
!9329 = distinct !DILexicalBlock(scope: !9315, file: !9316, line: 123, column: 9)
!9330 = !DILocation(line: 123, column: 9, scope: !9329, inlinedAt: !9321)
!9331 = !DILocalVariable(name: "v", arg: 1, scope: !9332, file: !5963, line: 99, type: !5966)
!9332 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !5963, file: !5963, line: 99, type: !5964, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9333 = !DILocation(line: 99, column: 79, scope: !9332, inlinedAt: !9334)
!9334 = distinct !DILocation(line: 748, column: 2, scope: !9322, inlinedAt: !9324)
!9335 = !DILocalVariable(name: "size", arg: 2, scope: !9332, file: !5963, line: 99, type: !369)
!9336 = !DILocation(line: 99, column: 89, scope: !9332, inlinedAt: !9334)
!9337 = !DILocalVariable(name: "v", arg: 1, scope: !9322, file: !9323, line: 746, type: !9319)
!9338 = !DILocation(line: 746, column: 31, scope: !9322, inlinedAt: !9324)
!9339 = !DILocalVariable(name: "_cred", arg: 1, scope: !9311, file: !1592, line: 280, type: !1589)
!9340 = !DILocation(line: 280, column: 48, scope: !9311)
!9341 = !DILocalVariable(name: "cred", scope: !9311, file: !1592, line: 282, type: !4524)
!9342 = !DILocation(line: 282, column: 15, scope: !9311)
!9343 = !DILocation(line: 282, column: 38, scope: !9311)
!9344 = !DILocation(line: 284, column: 6, scope: !9327)
!9345 = !DILocation(line: 284, column: 6, scope: !9311)
!9346 = !DILocation(line: 285, column: 18, scope: !9326)
!9347 = !DILocation(line: 285, column: 3, scope: !9326)
!9348 = !DILocation(line: 286, column: 29, scope: !9325)
!9349 = !DILocation(line: 286, column: 36, scope: !9325)
!9350 = !DILocation(line: 748, column: 31, scope: !9322, inlinedAt: !9324)
!9351 = !DILocation(line: 101, column: 20, scope: !9332, inlinedAt: !9334)
!9352 = !DILocation(line: 101, column: 23, scope: !9332, inlinedAt: !9334)
!9353 = !DILocation(line: 101, column: 2, scope: !9332, inlinedAt: !9334)
!9354 = !DILocation(line: 102, column: 2, scope: !9332, inlinedAt: !9334)
!9355 = !DILocation(line: 749, column: 34, scope: !9322, inlinedAt: !9324)
!9356 = !{i32 -2146318440, i32 -2146318373}
!9357 = !DILocation(line: 286, column: 7, scope: !9326)
!9358 = !DILocation(line: 287, column: 15, scope: !9325)
!9359 = !DILocation(line: 287, column: 4, scope: !9325)
!9360 = !DILocation(line: 288, column: 2, scope: !9326)
!9361 = !DILocation(line: 289, column: 1, scope: !9311)
!9362 = distinct !DISubprogram(name: "dec_usb_memory_use_count", scope: !3, file: !3, line: 173, type: !9363, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9363 = !DISubroutineType(types: !9364)
!9364 = !{null, !4504, !749}
!9365 = !DILocation(line: 407, column: 64, scope: !5443, inlinedAt: !9366)
!9366 = distinct !DILocation(line: 182, column: 3, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9368, file: !3, line: 180, column: 60)
!9368 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 180, column: 6)
!9369 = !DILocation(line: 407, column: 84, scope: !5443, inlinedAt: !9366)
!9370 = !DILocation(line: 407, column: 64, scope: !5443, inlinedAt: !9371)
!9371 = distinct !DILocation(line: 190, column: 3, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9368, file: !3, line: 189, column: 9)
!9373 = !DILocation(line: 407, column: 84, scope: !5443, inlinedAt: !9371)
!9374 = !DILocation(line: 327, column: 67, scope: !5452, inlinedAt: !9375)
!9375 = distinct !DILocation(line: 178, column: 2, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9377, file: !3, line: 178, column: 2)
!9377 = distinct !DILexicalBlock(scope: !9378, file: !3, line: 178, column: 2)
!9378 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 178, column: 2)
!9379 = distinct !DILexicalBlock(scope: !9380, file: !3, line: 178, column: 2)
!9380 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 178, column: 2)
!9381 = !DILocalVariable(name: "usbm", arg: 1, scope: !9362, file: !3, line: 173, type: !4504)
!9382 = !DILocation(line: 173, column: 57, scope: !9362)
!9383 = !DILocalVariable(name: "count", arg: 2, scope: !9362, file: !3, line: 173, type: !749)
!9384 = !DILocation(line: 173, column: 68, scope: !9362)
!9385 = !DILocalVariable(name: "ps", scope: !9362, file: !3, line: 175, type: !190)
!9386 = !DILocation(line: 175, column: 24, scope: !9362)
!9387 = !DILocation(line: 175, column: 29, scope: !9362)
!9388 = !DILocation(line: 175, column: 35, scope: !9362)
!9389 = !DILocalVariable(name: "flags", scope: !9362, file: !3, line: 176, type: !372)
!9390 = !DILocation(line: 176, column: 16, scope: !9362)
!9391 = !DILocation(line: 178, column: 2, scope: !9362)
!9392 = !DILocation(line: 178, column: 2, scope: !9380)
!9393 = !DILocalVariable(name: "__dummy", scope: !9394, file: !3, line: 178, type: !372)
!9394 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 178, column: 2)
!9395 = !DILocation(line: 178, column: 2, scope: !9394)
!9396 = !DILocalVariable(name: "__dummy2", scope: !9394, file: !3, line: 178, type: !372)
!9397 = !DILocation(line: 178, column: 2, scope: !9379)
!9398 = !DILocation(line: 178, column: 2, scope: !9378)
!9399 = !DILocation(line: 178, column: 2, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9378, file: !3, line: 178, column: 2)
!9401 = !DILocalVariable(name: "__dummy", scope: !9402, file: !3, line: 178, type: !372)
!9402 = distinct !DILexicalBlock(scope: !9403, file: !3, line: 178, column: 2)
!9403 = distinct !DILexicalBlock(scope: !9400, file: !3, line: 178, column: 2)
!9404 = !DILocation(line: 178, column: 2, scope: !9402)
!9405 = !DILocalVariable(name: "__dummy2", scope: !9402, file: !3, line: 178, type: !372)
!9406 = !DILocation(line: 178, column: 2, scope: !9403)
!9407 = !DILocation(line: 178, column: 2, scope: !9377)
!9408 = !{i32 -2141013193}
!9409 = !DILocation(line: 178, column: 2, scope: !9376)
!9410 = !DILocation(line: 329, column: 10, scope: !5452, inlinedAt: !9375)
!9411 = !DILocation(line: 329, column: 16, scope: !5452, inlinedAt: !9375)
!9412 = !DILocation(line: 179, column: 5, scope: !9362)
!9413 = !DILocation(line: 179, column: 2, scope: !9362)
!9414 = !DILocation(line: 180, column: 6, scope: !9368)
!9415 = !DILocation(line: 180, column: 12, scope: !9368)
!9416 = !DILocation(line: 180, column: 26, scope: !9368)
!9417 = !DILocation(line: 180, column: 31, scope: !9368)
!9418 = !DILocation(line: 180, column: 34, scope: !9368)
!9419 = !DILocation(line: 180, column: 40, scope: !9368)
!9420 = !DILocation(line: 180, column: 54, scope: !9368)
!9421 = !DILocation(line: 180, column: 6, scope: !9362)
!9422 = !DILocation(line: 181, column: 13, scope: !9367)
!9423 = !DILocation(line: 181, column: 19, scope: !9367)
!9424 = !DILocation(line: 181, column: 3, scope: !9367)
!9425 = !DILocation(line: 182, column: 27, scope: !9367)
!9426 = !DILocation(line: 182, column: 31, scope: !9367)
!9427 = !DILocation(line: 182, column: 37, scope: !9367)
!9428 = !DILocation(line: 409, column: 2, scope: !5633, inlinedAt: !9366)
!9429 = !DILocation(line: 409, column: 2, scope: !5638, inlinedAt: !9366)
!9430 = !DILocation(line: 409, column: 2, scope: !5639, inlinedAt: !9366)
!9431 = !DILocation(line: 409, column: 2, scope: !5646, inlinedAt: !9366)
!9432 = !DILocation(line: 409, column: 2, scope: !5649, inlinedAt: !9366)
!9433 = !DILocation(line: 184, column: 21, scope: !9367)
!9434 = !DILocation(line: 184, column: 25, scope: !9367)
!9435 = !DILocation(line: 184, column: 30, scope: !9367)
!9436 = !DILocation(line: 184, column: 36, scope: !9367)
!9437 = !DILocation(line: 184, column: 42, scope: !9367)
!9438 = !DILocation(line: 184, column: 48, scope: !9367)
!9439 = !DILocation(line: 185, column: 5, scope: !9367)
!9440 = !DILocation(line: 185, column: 11, scope: !9367)
!9441 = !DILocation(line: 184, column: 3, scope: !9367)
!9442 = !DILocation(line: 187, column: 4, scope: !9367)
!9443 = !DILocation(line: 187, column: 10, scope: !9367)
!9444 = !DILocation(line: 187, column: 15, scope: !9367)
!9445 = !DILocation(line: 186, column: 3, scope: !9367)
!9446 = !DILocation(line: 188, column: 9, scope: !9367)
!9447 = !DILocation(line: 188, column: 3, scope: !9367)
!9448 = !DILocation(line: 189, column: 2, scope: !9367)
!9449 = !DILocation(line: 190, column: 27, scope: !9372)
!9450 = !DILocation(line: 190, column: 31, scope: !9372)
!9451 = !DILocation(line: 190, column: 37, scope: !9372)
!9452 = !DILocation(line: 409, column: 2, scope: !5633, inlinedAt: !9371)
!9453 = !DILocation(line: 409, column: 2, scope: !5638, inlinedAt: !9371)
!9454 = !DILocation(line: 409, column: 2, scope: !5639, inlinedAt: !9371)
!9455 = !DILocation(line: 409, column: 2, scope: !5646, inlinedAt: !9371)
!9456 = !DILocation(line: 409, column: 2, scope: !5649, inlinedAt: !9371)
!9457 = !DILocation(line: 192, column: 1, scope: !9362)
!9458 = distinct !DISubprogram(name: "usbfs_decrease_memory_usage", scope: !3, file: !3, line: 162, type: !9459, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9459 = !DISubroutineType(types: !9460)
!9460 = !{null, !465}
!9461 = !DILocation(line: 99, column: 79, scope: !9332, inlinedAt: !9462)
!9462 = distinct !DILocation(line: 961, column: 2, scope: !9463, inlinedAt: !9467)
!9463 = distinct !DISubprogram(name: "atomic64_sub", scope: !9323, file: !9323, line: 959, type: !9464, scopeLine: 960, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9464 = !DISubroutineType(types: !9465)
!9465 = !{null, !256, !9466}
!9466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!9467 = distinct !DILocation(line: 164, column: 2, scope: !9458)
!9468 = !DILocation(line: 99, column: 89, scope: !9332, inlinedAt: !9462)
!9469 = !DILocalVariable(name: "i", arg: 1, scope: !9463, file: !9323, line: 959, type: !256)
!9470 = !DILocation(line: 959, column: 18, scope: !9463, inlinedAt: !9467)
!9471 = !DILocalVariable(name: "v", arg: 2, scope: !9463, file: !9323, line: 959, type: !9466)
!9472 = !DILocation(line: 959, column: 33, scope: !9463, inlinedAt: !9467)
!9473 = !DILocalVariable(name: "amount", arg: 1, scope: !9458, file: !3, line: 162, type: !465)
!9474 = !DILocation(line: 162, column: 45, scope: !9458)
!9475 = !DILocation(line: 164, column: 15, scope: !9458)
!9476 = !DILocation(line: 961, column: 31, scope: !9463, inlinedAt: !9467)
!9477 = !DILocation(line: 101, column: 20, scope: !9332, inlinedAt: !9462)
!9478 = !DILocation(line: 101, column: 23, scope: !9332, inlinedAt: !9462)
!9479 = !DILocation(line: 101, column: 2, scope: !9332, inlinedAt: !9462)
!9480 = !DILocation(line: 102, column: 2, scope: !9332, inlinedAt: !9462)
!9481 = !DILocation(line: 962, column: 20, scope: !9463, inlinedAt: !9467)
!9482 = !DILocation(line: 962, column: 23, scope: !9463, inlinedAt: !9467)
!9483 = !DILocation(line: 962, column: 2, scope: !9463, inlinedAt: !9467)
!9484 = !DILocation(line: 165, column: 1, scope: !9458)
!9485 = distinct !DISubprogram(name: "validate_creds", scope: !1592, file: !1592, line: 203, type: !9312, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9486 = !DILocalVariable(name: "cred", arg: 1, scope: !9485, file: !1592, line: 203, type: !1589)
!9487 = !DILocation(line: 203, column: 54, scope: !9485)
!9488 = !DILocation(line: 205, column: 1, scope: !9485)
!9489 = distinct !DISubprogram(name: "list_del", scope: !6132, file: !6132, line: 144, type: !6133, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9490 = !DILocalVariable(name: "entry", arg: 1, scope: !9489, file: !6132, line: 144, type: !198)
!9491 = !DILocation(line: 144, column: 47, scope: !9489)
!9492 = !DILocation(line: 146, column: 19, scope: !9489)
!9493 = !DILocation(line: 146, column: 2, scope: !9489)
!9494 = !DILocation(line: 147, column: 2, scope: !9489)
!9495 = !DILocation(line: 147, column: 9, scope: !9489)
!9496 = !DILocation(line: 147, column: 14, scope: !9489)
!9497 = !DILocation(line: 148, column: 2, scope: !9489)
!9498 = !DILocation(line: 148, column: 9, scope: !9489)
!9499 = !DILocation(line: 148, column: 14, scope: !9489)
!9500 = !DILocation(line: 149, column: 1, scope: !9489)
!9501 = distinct !DISubprogram(name: "arch_atomic64_sub", scope: !9502, file: !9502, line: 58, type: !9464, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9502 = !DIFile(filename: "./arch/x86/include/asm/atomic64_64.h", directory: "/home/lizy2001/genbc/linux")
!9503 = !DILocalVariable(name: "i", arg: 1, scope: !9501, file: !9502, line: 58, type: !256)
!9504 = !DILocation(line: 58, column: 42, scope: !9501)
!9505 = !DILocalVariable(name: "v", arg: 2, scope: !9501, file: !9502, line: 58, type: !9466)
!9506 = !DILocation(line: 58, column: 57, scope: !9501)
!9507 = !DILocation(line: 61, column: 16, scope: !9501)
!9508 = !DILocation(line: 61, column: 19, scope: !9501)
!9509 = !DILocation(line: 62, column: 16, scope: !9501)
!9510 = !DILocation(line: 62, column: 25, scope: !9501)
!9511 = !DILocation(line: 62, column: 28, scope: !9501)
!9512 = !DILocation(line: 60, column: 2, scope: !9501)
!9513 = !{i32 -2146296867}
!9514 = !DILocation(line: 63, column: 1, scope: !9501)
!9515 = distinct !DISubprogram(name: "test_tsk_thread_flag", scope: !1256, file: !1256, line: 1828, type: !9516, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9516 = !DISubroutineType(types: !9517)
!9517 = !{!205, !1254, !205}
!9518 = !DILocalVariable(name: "tsk", arg: 1, scope: !9515, file: !1256, line: 1828, type: !1254)
!9519 = !DILocation(line: 1828, column: 60, scope: !9515)
!9520 = !DILocalVariable(name: "flag", arg: 2, scope: !9515, file: !1256, line: 1828, type: !205)
!9521 = !DILocation(line: 1828, column: 69, scope: !9515)
!9522 = !DILocation(line: 1830, column: 46, scope: !9515)
!9523 = !DILocation(line: 1830, column: 29, scope: !9515)
!9524 = !DILocation(line: 1830, column: 52, scope: !9515)
!9525 = !DILocation(line: 1830, column: 9, scope: !9515)
!9526 = !DILocation(line: 1830, column: 2, scope: !9515)
!9527 = distinct !DISubprogram(name: "test_ti_thread_flag", scope: !5058, file: !5058, line: 82, type: !9528, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9528 = !DISubroutineType(types: !9529)
!9529 = !{!205, !9530, !205}
!9530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!9531 = !DILocalVariable(name: "ti", arg: 1, scope: !9527, file: !5058, line: 82, type: !9530)
!9532 = !DILocation(line: 82, column: 59, scope: !9527)
!9533 = !DILocalVariable(name: "flag", arg: 2, scope: !9527, file: !5058, line: 82, type: !205)
!9534 = !DILocation(line: 82, column: 67, scope: !9527)
!9535 = !DILocation(line: 84, column: 18, scope: !9527)
!9536 = !DILocation(line: 84, column: 42, scope: !9527)
!9537 = !DILocation(line: 84, column: 46, scope: !9527)
!9538 = !DILocation(line: 84, column: 9, scope: !9527)
!9539 = !DILocation(line: 84, column: 2, scope: !9527)
!9540 = distinct !DISubprogram(name: "task_thread_info", scope: !1256, file: !1256, line: 1729, type: !9541, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9541 = !DISubroutineType(types: !9542)
!9542 = !{!9530, !1254}
!9543 = !DILocalVariable(name: "task", arg: 1, scope: !9540, file: !1256, line: 1729, type: !1254)
!9544 = !DILocation(line: 1729, column: 72, scope: !9540)
!9545 = !DILocation(line: 1731, column: 10, scope: !9540)
!9546 = !DILocation(line: 1731, column: 16, scope: !9540)
!9547 = !DILocation(line: 1731, column: 2, scope: !9540)
!9548 = distinct !DISubprogram(name: "test_bit", scope: !9549, file: !9549, line: 132, type: !9550, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9549 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!9550 = !DISubroutineType(types: !9551)
!9551 = !{!534, !357, !9552}
!9552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9553, size: 64)
!9553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5953)
!9554 = !DILocalVariable(name: "nr", arg: 1, scope: !9555, file: !5956, line: 210, type: !357)
!9555 = distinct !DISubprogram(name: "variable_test_bit", scope: !5956, file: !5956, line: 210, type: !9550, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9556 = !DILocation(line: 210, column: 52, scope: !9555, inlinedAt: !9557)
!9557 = distinct !DILocation(line: 135, column: 9, scope: !9548)
!9558 = !DILocalVariable(name: "addr", arg: 2, scope: !9555, file: !5956, line: 210, type: !9552)
!9559 = !DILocation(line: 210, column: 86, scope: !9555, inlinedAt: !9557)
!9560 = !DILocalVariable(name: "oldbit", scope: !9555, file: !5956, line: 212, type: !534)
!9561 = !DILocation(line: 212, column: 7, scope: !9555, inlinedAt: !9557)
!9562 = !DILocalVariable(name: "nr", arg: 1, scope: !9563, file: !5956, line: 204, type: !357)
!9563 = distinct !DISubprogram(name: "constant_test_bit", scope: !5956, file: !5956, line: 204, type: !9550, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9564 = !DILocation(line: 204, column: 52, scope: !9563, inlinedAt: !9565)
!9565 = distinct !DILocation(line: 135, column: 9, scope: !9548)
!9566 = !DILocalVariable(name: "addr", arg: 2, scope: !9563, file: !5956, line: 204, type: !9552)
!9567 = !DILocation(line: 204, column: 86, scope: !9563, inlinedAt: !9565)
!9568 = !DILocalVariable(name: "v", arg: 1, scope: !9569, file: !5963, line: 69, type: !5966)
!9569 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !5963, file: !5963, line: 69, type: !5964, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9570 = !DILocation(line: 69, column: 73, scope: !9569, inlinedAt: !9571)
!9571 = distinct !DILocation(line: 134, column: 2, scope: !9548)
!9572 = !DILocalVariable(name: "size", arg: 2, scope: !9569, file: !5963, line: 69, type: !369)
!9573 = !DILocation(line: 69, column: 83, scope: !9569, inlinedAt: !9571)
!9574 = !DILocalVariable(name: "nr", arg: 1, scope: !9548, file: !9549, line: 132, type: !357)
!9575 = !DILocation(line: 132, column: 34, scope: !9548)
!9576 = !DILocalVariable(name: "addr", arg: 2, scope: !9548, file: !9549, line: 132, type: !9552)
!9577 = !DILocation(line: 132, column: 68, scope: !9548)
!9578 = !DILocation(line: 134, column: 25, scope: !9548)
!9579 = !DILocation(line: 134, column: 32, scope: !9548)
!9580 = !DILocation(line: 134, column: 30, scope: !9548)
!9581 = !DILocation(line: 71, column: 19, scope: !9569, inlinedAt: !9571)
!9582 = !DILocation(line: 71, column: 22, scope: !9569, inlinedAt: !9571)
!9583 = !DILocation(line: 71, column: 2, scope: !9569, inlinedAt: !9571)
!9584 = !DILocation(line: 72, column: 2, scope: !9569, inlinedAt: !9571)
!9585 = !DILocation(line: 135, column: 9, scope: !9548)
!9586 = !DILocation(line: 206, column: 19, scope: !9563, inlinedAt: !9565)
!9587 = !DILocation(line: 206, column: 22, scope: !9563, inlinedAt: !9565)
!9588 = !DILocation(line: 206, column: 15, scope: !9563, inlinedAt: !9565)
!9589 = !DILocation(line: 207, column: 4, scope: !9563, inlinedAt: !9565)
!9590 = !DILocation(line: 207, column: 9, scope: !9563, inlinedAt: !9565)
!9591 = !DILocation(line: 207, column: 12, scope: !9563, inlinedAt: !9565)
!9592 = !DILocation(line: 206, column: 44, scope: !9563, inlinedAt: !9565)
!9593 = !DILocation(line: 207, column: 37, scope: !9563, inlinedAt: !9565)
!9594 = !DILocation(line: 217, column: 33, scope: !9555, inlinedAt: !9557)
!9595 = !DILocation(line: 217, column: 46, scope: !9555, inlinedAt: !9557)
!9596 = !DILocation(line: 214, column: 2, scope: !9555, inlinedAt: !9557)
!9597 = !{i32 -2146933598, i32 -2146933538}
!9598 = !DILocation(line: 219, column: 9, scope: !9555, inlinedAt: !9557)
!9599 = !DILocation(line: 135, column: 2, scope: !9548)
!9600 = distinct !DISubprogram(name: "kasan_check_read", scope: !6100, file: !6100, line: 34, type: !6101, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9601 = !DILocalVariable(name: "p", arg: 1, scope: !9600, file: !6100, line: 34, type: !5966)
!9602 = !DILocation(line: 34, column: 58, scope: !9600)
!9603 = !DILocalVariable(name: "size", arg: 2, scope: !9600, file: !6100, line: 34, type: !7)
!9604 = !DILocation(line: 34, column: 74, scope: !9600)
!9605 = !DILocation(line: 36, column: 2, scope: !9600)
!9606 = distinct !DISubprogram(name: "do_proc_control", scope: !3, file: !3, line: 1105, type: !9607, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9607 = !DISubroutineType(types: !9608)
!9608 = !{!205, !190, !9609}
!9609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6988, size: 64)
!9610 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !9611)
!9611 = distinct !DILocation(line: 1174, column: 7, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9613, file: !3, line: 1171, column: 28)
!9613 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 1171, column: 6)
!9614 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !9611)
!9615 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !9611)
!9616 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !9617)
!9617 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !9618)
!9618 = distinct !DILocation(line: 1155, column: 8, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9620, file: !3, line: 1155, column: 8)
!9620 = distinct !DILexicalBlock(scope: !9621, file: !3, line: 1154, column: 22)
!9621 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 1154, column: 7)
!9622 = distinct !DILexicalBlock(scope: !9623, file: !3, line: 1153, column: 9)
!9623 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 1136, column: 6)
!9624 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !9617)
!9625 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !9617)
!9626 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !9617)
!9627 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !9617)
!9628 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !9618)
!9629 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !9618)
!9630 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !9618)
!9631 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !9632)
!9632 = distinct !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !9633)
!9633 = distinct !DILocation(line: 1148, column: 8, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9635, file: !3, line: 1148, column: 8)
!9635 = distinct !DILexicalBlock(scope: !9636, file: !3, line: 1147, column: 33)
!9636 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 1147, column: 7)
!9637 = distinct !DILexicalBlock(scope: !9623, file: !3, line: 1136, column: 33)
!9638 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !9632)
!9639 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !9632)
!9640 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !9632)
!9641 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !9632)
!9642 = !DILocation(line: 197, column: 27, scope: !5065, inlinedAt: !9633)
!9643 = !DILocation(line: 197, column: 43, scope: !5065, inlinedAt: !9633)
!9644 = !DILocation(line: 197, column: 63, scope: !5065, inlinedAt: !9633)
!9645 = !DILocalVariable(name: "ps", arg: 1, scope: !9606, file: !3, line: 1105, type: !190)
!9646 = !DILocation(line: 1105, column: 50, scope: !9606)
!9647 = !DILocalVariable(name: "ctrl", arg: 2, scope: !9606, file: !3, line: 1106, type: !9609)
!9648 = !DILocation(line: 1106, column: 33, scope: !9606)
!9649 = !DILocalVariable(name: "dev", scope: !9606, file: !3, line: 1108, type: !201)
!9650 = !DILocation(line: 1108, column: 21, scope: !9606)
!9651 = !DILocation(line: 1108, column: 27, scope: !9606)
!9652 = !DILocation(line: 1108, column: 31, scope: !9606)
!9653 = !DILocalVariable(name: "tmo", scope: !9606, file: !3, line: 1109, type: !7)
!9654 = !DILocation(line: 1109, column: 15, scope: !9606)
!9655 = !DILocalVariable(name: "tbuf", scope: !9606, file: !3, line: 1110, type: !4185)
!9656 = !DILocation(line: 1110, column: 17, scope: !9606)
!9657 = !DILocalVariable(name: "wLength", scope: !9606, file: !3, line: 1111, type: !7)
!9658 = !DILocation(line: 1111, column: 11, scope: !9606)
!9659 = !DILocalVariable(name: "i", scope: !9606, file: !3, line: 1112, type: !205)
!9660 = !DILocation(line: 1112, column: 6, scope: !9606)
!9661 = !DILocalVariable(name: "pipe", scope: !9606, file: !3, line: 1112, type: !205)
!9662 = !DILocation(line: 1112, column: 9, scope: !9606)
!9663 = !DILocalVariable(name: "ret", scope: !9606, file: !3, line: 1112, type: !205)
!9664 = !DILocation(line: 1112, column: 15, scope: !9606)
!9665 = !DILocation(line: 1114, column: 24, scope: !9606)
!9666 = !DILocation(line: 1114, column: 28, scope: !9606)
!9667 = !DILocation(line: 1114, column: 34, scope: !9606)
!9668 = !DILocation(line: 1114, column: 48, scope: !9606)
!9669 = !DILocation(line: 1114, column: 54, scope: !9606)
!9670 = !DILocation(line: 1115, column: 10, scope: !9606)
!9671 = !DILocation(line: 1115, column: 16, scope: !9606)
!9672 = !DILocation(line: 1114, column: 8, scope: !9606)
!9673 = !DILocation(line: 1114, column: 6, scope: !9606)
!9674 = !DILocation(line: 1116, column: 6, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 1116, column: 6)
!9676 = !DILocation(line: 1116, column: 6, scope: !9606)
!9677 = !DILocation(line: 1117, column: 10, scope: !9675)
!9678 = !DILocation(line: 1117, column: 3, scope: !9675)
!9679 = !DILocation(line: 1118, column: 12, scope: !9606)
!9680 = !DILocation(line: 1118, column: 18, scope: !9606)
!9681 = !DILocation(line: 1118, column: 10, scope: !9606)
!9682 = !DILocation(line: 1119, column: 6, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 1119, column: 6)
!9684 = !DILocation(line: 1119, column: 14, scope: !9683)
!9685 = !DILocation(line: 1119, column: 6, scope: !9606)
!9686 = !DILocation(line: 1120, column: 3, scope: !9683)
!9687 = !DILocation(line: 1121, column: 8, scope: !9606)
!9688 = !DILocation(line: 1121, column: 6, scope: !9606)
!9689 = !DILocation(line: 1123, column: 6, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 1123, column: 6)
!9691 = !DILocation(line: 1123, column: 6, scope: !9606)
!9692 = !DILocation(line: 1124, column: 10, scope: !9690)
!9693 = !DILocation(line: 1124, column: 3, scope: !9690)
!9694 = !DILocation(line: 1125, column: 26, scope: !9606)
!9695 = !DILocation(line: 1125, column: 9, scope: !9606)
!9696 = !DILocation(line: 1125, column: 7, scope: !9606)
!9697 = !DILocation(line: 1126, column: 7, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 1126, column: 6)
!9699 = !DILocation(line: 1126, column: 6, scope: !9606)
!9700 = !DILocation(line: 1127, column: 7, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9698, file: !3, line: 1126, column: 13)
!9702 = !DILocation(line: 1128, column: 3, scope: !9701)
!9703 = !DILocation(line: 1130, column: 8, scope: !9606)
!9704 = !DILocation(line: 1130, column: 14, scope: !9606)
!9705 = !DILocation(line: 1130, column: 6, scope: !9606)
!9706 = !DILocation(line: 1131, column: 2, scope: !9606)
!9707 = !DILocation(line: 1131, column: 2, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9709, file: !3, line: 1131, column: 2)
!9709 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 1131, column: 2)
!9710 = !DILocation(line: 1131, column: 2, scope: !9709)
!9711 = !DILocation(line: 1136, column: 6, scope: !9623)
!9712 = !DILocation(line: 1136, column: 12, scope: !9623)
!9713 = !DILocation(line: 1136, column: 25, scope: !9623)
!9714 = !DILocation(line: 1136, column: 6, scope: !9606)
!9715 = !DILocation(line: 1137, column: 10, scope: !9637)
!9716 = !DILocation(line: 1137, column: 8, scope: !9637)
!9717 = !DILocation(line: 1138, column: 13, scope: !9637)
!9718 = !DILocation(line: 1138, column: 24, scope: !9637)
!9719 = !DILocation(line: 1138, column: 30, scope: !9637)
!9720 = !DILocation(line: 1138, column: 36, scope: !9637)
!9721 = !DILocation(line: 1138, column: 45, scope: !9637)
!9722 = !DILocation(line: 1138, column: 3, scope: !9637)
!9723 = !DILocation(line: 1140, column: 3, scope: !9637)
!9724 = !DILocation(line: 1141, column: 23, scope: !9637)
!9725 = !DILocation(line: 1141, column: 28, scope: !9637)
!9726 = !DILocation(line: 1141, column: 34, scope: !9637)
!9727 = !DILocation(line: 1141, column: 40, scope: !9637)
!9728 = !DILocation(line: 1142, column: 9, scope: !9637)
!9729 = !DILocation(line: 1142, column: 15, scope: !9637)
!9730 = !DILocation(line: 1142, column: 29, scope: !9637)
!9731 = !DILocation(line: 1142, column: 35, scope: !9637)
!9732 = !DILocation(line: 1142, column: 43, scope: !9637)
!9733 = !DILocation(line: 1142, column: 49, scope: !9637)
!9734 = !DILocation(line: 1143, column: 9, scope: !9637)
!9735 = !DILocation(line: 1143, column: 15, scope: !9637)
!9736 = !DILocation(line: 1143, column: 21, scope: !9637)
!9737 = !DILocation(line: 1143, column: 30, scope: !9637)
!9738 = !DILocation(line: 1141, column: 7, scope: !9637)
!9739 = !DILocation(line: 1141, column: 5, scope: !9637)
!9740 = !DILocation(line: 1144, column: 3, scope: !9637)
!9741 = !DILocation(line: 1145, column: 13, scope: !9637)
!9742 = !DILocation(line: 1145, column: 24, scope: !9637)
!9743 = !DILocalVariable(name: "__UNIQUE_ID___x273", scope: !9744, file: !3, line: 1145, type: !205)
!9744 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 1145, column: 30)
!9745 = !DILocation(line: 1145, column: 30, scope: !9744)
!9746 = !DILocalVariable(name: "__UNIQUE_ID___y274", scope: !9744, file: !3, line: 1145, type: !205)
!9747 = !DILocalVariable(name: "__UNIQUE_ID___x275", scope: !9748, file: !3, line: 1145, type: !205)
!9748 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 1145, column: 41)
!9749 = !DILocation(line: 1145, column: 41, scope: !9748)
!9750 = !DILocalVariable(name: "__UNIQUE_ID___y276", scope: !9748, file: !3, line: 1145, type: !205)
!9751 = !DILocation(line: 1146, column: 6, scope: !9637)
!9752 = !DILocalVariable(name: "__UNIQUE_ID___x277", scope: !9753, file: !3, line: 1146, type: !205)
!9753 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 1146, column: 12)
!9754 = !DILocation(line: 1146, column: 12, scope: !9753)
!9755 = !DILocalVariable(name: "__UNIQUE_ID___y278", scope: !9753, file: !3, line: 1146, type: !205)
!9756 = !DILocation(line: 1145, column: 3, scope: !9637)
!9757 = !DILocation(line: 1147, column: 8, scope: !9636)
!9758 = !DILocation(line: 1147, column: 10, scope: !9636)
!9759 = !DILocation(line: 1147, column: 15, scope: !9636)
!9760 = !DILocation(line: 1147, column: 18, scope: !9636)
!9761 = !DILocation(line: 1147, column: 24, scope: !9636)
!9762 = !DILocation(line: 1147, column: 7, scope: !9637)
!9763 = !DILocation(line: 1148, column: 21, scope: !9634)
!9764 = !DILocation(line: 1148, column: 27, scope: !9634)
!9765 = !DILocation(line: 1148, column: 33, scope: !9634)
!9766 = !DILocation(line: 1148, column: 39, scope: !9634)
!9767 = !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !9633)
!9768 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !9632)
!9769 = !DILocation(line: 0, scope: !5187, inlinedAt: !9632)
!9770 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !9632)
!9771 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !9632)
!9772 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !9632)
!9773 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !9632)
!9774 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !9632)
!9775 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !9632)
!9776 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !9632)
!9777 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !9632)
!9778 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !9632)
!9779 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !9632)
!9780 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !9632)
!9781 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !9632)
!9782 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !9632)
!9783 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !9632)
!9784 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !9632)
!9785 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !9632)
!9786 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !9632)
!9787 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !9632)
!9788 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !9632)
!9789 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !9632)
!9790 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !9632)
!9791 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !9632)
!9792 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !9632)
!9793 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !9632)
!9794 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !9632)
!9795 = !DILocation(line: 199, column: 6, scope: !5065, inlinedAt: !9633)
!9796 = !DILocation(line: 200, column: 21, scope: !5063, inlinedAt: !9633)
!9797 = !DILocation(line: 200, column: 25, scope: !5063, inlinedAt: !9633)
!9798 = !DILocation(line: 200, column: 31, scope: !5063, inlinedAt: !9633)
!9799 = !DILocation(line: 200, column: 7, scope: !5063, inlinedAt: !9633)
!9800 = !DILocation(line: 200, column: 5, scope: !5063, inlinedAt: !9633)
!9801 = !DILocation(line: 200, column: 3, scope: !5063, inlinedAt: !9633)
!9802 = !DILocation(line: 201, column: 9, scope: !5065, inlinedAt: !9633)
!9803 = !DILocation(line: 1148, column: 8, scope: !9634)
!9804 = !DILocation(line: 1148, column: 8, scope: !9635)
!9805 = !DILocation(line: 1149, column: 9, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 1148, column: 43)
!9807 = !DILocation(line: 1150, column: 5, scope: !9806)
!9808 = !DILocation(line: 1152, column: 3, scope: !9635)
!9809 = !DILocation(line: 1153, column: 2, scope: !9637)
!9810 = !DILocation(line: 1154, column: 7, scope: !9621)
!9811 = !DILocation(line: 1154, column: 13, scope: !9621)
!9812 = !DILocation(line: 1154, column: 7, scope: !9622)
!9813 = !DILocation(line: 1155, column: 23, scope: !9619)
!9814 = !DILocation(line: 1155, column: 29, scope: !9619)
!9815 = !DILocation(line: 1155, column: 35, scope: !9619)
!9816 = !DILocation(line: 1155, column: 41, scope: !9619)
!9817 = !DILocation(line: 1155, column: 47, scope: !9619)
!9818 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !9618)
!9819 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !9617)
!9820 = !DILocation(line: 0, scope: !5187, inlinedAt: !9617)
!9821 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !9617)
!9822 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !9617)
!9823 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !9617)
!9824 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !9617)
!9825 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !9617)
!9826 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !9617)
!9827 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !9617)
!9828 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !9617)
!9829 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !9617)
!9830 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !9617)
!9831 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !9617)
!9832 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !9617)
!9833 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !9617)
!9834 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !9617)
!9835 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !9617)
!9836 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !9617)
!9837 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !9617)
!9838 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !9617)
!9839 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !9617)
!9840 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !9617)
!9841 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !9617)
!9842 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !9617)
!9843 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !9617)
!9844 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !9617)
!9845 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !9617)
!9846 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !9618)
!9847 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !9618)
!9848 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !9618)
!9849 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !9618)
!9850 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !9618)
!9851 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !9618)
!9852 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !9618)
!9853 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !9618)
!9854 = !DILocation(line: 1155, column: 8, scope: !9619)
!9855 = !DILocation(line: 1155, column: 8, scope: !9620)
!9856 = !DILocation(line: 1156, column: 9, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9619, file: !3, line: 1155, column: 57)
!9858 = !DILocation(line: 1157, column: 5, scope: !9857)
!9859 = !DILocation(line: 1159, column: 3, scope: !9620)
!9860 = !DILocation(line: 1160, column: 10, scope: !9622)
!9861 = !DILocation(line: 1160, column: 8, scope: !9622)
!9862 = !DILocation(line: 1161, column: 13, scope: !9622)
!9863 = !DILocation(line: 1161, column: 24, scope: !9622)
!9864 = !DILocation(line: 1161, column: 30, scope: !9622)
!9865 = !DILocation(line: 1161, column: 36, scope: !9622)
!9866 = !DILocation(line: 1161, column: 45, scope: !9622)
!9867 = !DILocation(line: 1162, column: 4, scope: !9622)
!9868 = !DILocation(line: 1162, column: 10, scope: !9622)
!9869 = !DILocation(line: 1162, column: 16, scope: !9622)
!9870 = !DILocation(line: 1161, column: 3, scope: !9622)
!9871 = !DILocation(line: 1164, column: 3, scope: !9622)
!9872 = !DILocation(line: 1165, column: 23, scope: !9622)
!9873 = !DILocation(line: 1165, column: 28, scope: !9622)
!9874 = !DILocation(line: 1165, column: 53, scope: !9622)
!9875 = !DILocation(line: 1165, column: 59, scope: !9622)
!9876 = !DILocation(line: 1166, column: 9, scope: !9622)
!9877 = !DILocation(line: 1166, column: 15, scope: !9622)
!9878 = !DILocation(line: 1166, column: 29, scope: !9622)
!9879 = !DILocation(line: 1166, column: 35, scope: !9622)
!9880 = !DILocation(line: 1166, column: 43, scope: !9622)
!9881 = !DILocation(line: 1166, column: 49, scope: !9622)
!9882 = !DILocation(line: 1167, column: 9, scope: !9622)
!9883 = !DILocation(line: 1167, column: 15, scope: !9622)
!9884 = !DILocation(line: 1167, column: 21, scope: !9622)
!9885 = !DILocation(line: 1167, column: 30, scope: !9622)
!9886 = !DILocation(line: 1165, column: 7, scope: !9622)
!9887 = !DILocation(line: 1165, column: 5, scope: !9622)
!9888 = !DILocation(line: 1168, column: 3, scope: !9622)
!9889 = !DILocation(line: 1169, column: 13, scope: !9622)
!9890 = !DILocation(line: 1169, column: 24, scope: !9622)
!9891 = !DILocalVariable(name: "__UNIQUE_ID___x279", scope: !9892, file: !3, line: 1169, type: !205)
!9892 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 1169, column: 30)
!9893 = !DILocation(line: 1169, column: 30, scope: !9892)
!9894 = !DILocalVariable(name: "__UNIQUE_ID___y280", scope: !9892, file: !3, line: 1169, type: !205)
!9895 = !DILocalVariable(name: "__UNIQUE_ID___x281", scope: !9896, file: !3, line: 1169, type: !205)
!9896 = distinct !DILexicalBlock(scope: !9622, file: !3, line: 1169, column: 41)
!9897 = !DILocation(line: 1169, column: 41, scope: !9896)
!9898 = !DILocalVariable(name: "__UNIQUE_ID___y282", scope: !9896, file: !3, line: 1169, type: !205)
!9899 = !DILocation(line: 1169, column: 3, scope: !9622)
!9900 = !DILocation(line: 1171, column: 6, scope: !9613)
!9901 = !DILocation(line: 1171, column: 8, scope: !9613)
!9902 = !DILocation(line: 1171, column: 12, scope: !9613)
!9903 = !DILocation(line: 1171, column: 15, scope: !9613)
!9904 = !DILocation(line: 1171, column: 17, scope: !9613)
!9905 = !DILocation(line: 1171, column: 6, scope: !9606)
!9906 = !DILocation(line: 1172, column: 27, scope: !9612)
!9907 = !DILocation(line: 1172, column: 32, scope: !9612)
!9908 = !DILocation(line: 1174, column: 16, scope: !9612)
!9909 = !DILocation(line: 1174, column: 7, scope: !9612)
!9910 = !DILocation(line: 1174, column: 22, scope: !9612)
!9911 = !DILocation(line: 1174, column: 28, scope: !9612)
!9912 = !DILocation(line: 1174, column: 42, scope: !9612)
!9913 = !DILocation(line: 1174, column: 48, scope: !9612)
!9914 = !DILocation(line: 1175, column: 7, scope: !9612)
!9915 = !DILocation(line: 1175, column: 13, scope: !9612)
!9916 = !DILocation(line: 1175, column: 22, scope: !9612)
!9917 = !DILocation(line: 1172, column: 3, scope: !9612)
!9918 = !DILocation(line: 1176, column: 2, scope: !9612)
!9919 = !DILocation(line: 1177, column: 8, scope: !9606)
!9920 = !DILocation(line: 1177, column: 6, scope: !9606)
!9921 = !DILocation(line: 1177, column: 2, scope: !9606)
!9922 = !DILabel(scope: !9606, name: "done", file: !3, line: 1178)
!9923 = !DILocation(line: 1178, column: 2, scope: !9606)
!9924 = !DILocation(line: 1179, column: 2, scope: !9606)
!9925 = !DILocation(line: 1180, column: 2, scope: !9606)
!9926 = !DILocation(line: 1182, column: 9, scope: !9606)
!9927 = !DILocation(line: 1182, column: 2, scope: !9606)
!9928 = !DILocation(line: 1183, column: 1, scope: !9606)
!9929 = distinct !DISubprogram(name: "check_ctrlrecip", scope: !3, file: !3, line: 856, type: !9930, scopeLine: 858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!9930 = !DISubroutineType(types: !9931)
!9931 = !{!205, !190, !7, !7, !7}
!9932 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !9933)
!9933 = distinct !DILocation(line: 899, column: 5, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9935, file: !3, line: 898, column: 8)
!9935 = distinct !DILexicalBlock(scope: !9936, file: !3, line: 888, column: 16)
!9936 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 888, column: 7)
!9937 = distinct !DILexicalBlock(scope: !9929, file: !3, line: 883, column: 40)
!9938 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !9933)
!9939 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !9933)
!9940 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !9941)
!9941 = distinct !DILocation(line: 899, column: 5, scope: !9934)
!9942 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !9941)
!9943 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !9941)
!9944 = !DILocalVariable(name: "ps", arg: 1, scope: !9929, file: !3, line: 856, type: !190)
!9945 = !DILocation(line: 856, column: 50, scope: !9929)
!9946 = !DILocalVariable(name: "requesttype", arg: 2, scope: !9929, file: !3, line: 856, type: !7)
!9947 = !DILocation(line: 856, column: 67, scope: !9929)
!9948 = !DILocalVariable(name: "request", arg: 3, scope: !9929, file: !3, line: 857, type: !7)
!9949 = !DILocation(line: 857, column: 20, scope: !9929)
!9950 = !DILocalVariable(name: "index", arg: 4, scope: !9929, file: !3, line: 857, type: !7)
!9951 = !DILocation(line: 857, column: 42, scope: !9929)
!9952 = !DILocalVariable(name: "ret", scope: !9929, file: !3, line: 859, type: !205)
!9953 = !DILocation(line: 859, column: 6, scope: !9929)
!9954 = !DILocalVariable(name: "alt_setting", scope: !9929, file: !3, line: 860, type: !4303)
!9955 = !DILocation(line: 860, column: 29, scope: !9929)
!9956 = !DILocation(line: 862, column: 6, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9929, file: !3, line: 862, column: 6)
!9958 = !DILocation(line: 862, column: 10, scope: !9957)
!9959 = !DILocation(line: 862, column: 15, scope: !9957)
!9960 = !DILocation(line: 862, column: 21, scope: !9957)
!9961 = !DILocation(line: 863, column: 3, scope: !9957)
!9962 = !DILocation(line: 863, column: 6, scope: !9957)
!9963 = !DILocation(line: 863, column: 10, scope: !9957)
!9964 = !DILocation(line: 863, column: 15, scope: !9957)
!9965 = !DILocation(line: 863, column: 21, scope: !9957)
!9966 = !DILocation(line: 864, column: 3, scope: !9957)
!9967 = !DILocation(line: 864, column: 6, scope: !9957)
!9968 = !DILocation(line: 864, column: 10, scope: !9957)
!9969 = !DILocation(line: 864, column: 15, scope: !9957)
!9970 = !DILocation(line: 864, column: 21, scope: !9957)
!9971 = !DILocation(line: 862, column: 6, scope: !9929)
!9972 = !DILocation(line: 865, column: 3, scope: !9957)
!9973 = !DILocation(line: 866, column: 42, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9929, file: !3, line: 866, column: 6)
!9975 = !DILocation(line: 866, column: 40, scope: !9974)
!9976 = !DILocation(line: 866, column: 22, scope: !9974)
!9977 = !DILocation(line: 866, column: 6, scope: !9929)
!9978 = !DILocation(line: 867, column: 3, scope: !9974)
!9979 = !DILocation(line: 874, column: 6, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9929, file: !3, line: 874, column: 6)
!9981 = !DILocation(line: 874, column: 18, scope: !9980)
!9982 = !DILocation(line: 874, column: 26, scope: !9980)
!9983 = !DILocation(line: 874, column: 29, scope: !9980)
!9984 = !DILocation(line: 874, column: 37, scope: !9980)
!9985 = !DILocation(line: 874, column: 6, scope: !9929)
!9986 = !DILocation(line: 875, column: 38, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 874, column: 43)
!9988 = !DILocation(line: 875, column: 42, scope: !9987)
!9989 = !DILocation(line: 875, column: 47, scope: !9987)
!9990 = !DILocation(line: 876, column: 10, scope: !9987)
!9991 = !DILocation(line: 876, column: 16, scope: !9987)
!9992 = !DILocation(line: 876, column: 22, scope: !9987)
!9993 = !DILocation(line: 876, column: 28, scope: !9987)
!9994 = !DILocation(line: 875, column: 17, scope: !9987)
!9995 = !DILocation(line: 875, column: 15, scope: !9987)
!9996 = !DILocation(line: 877, column: 7, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9987, file: !3, line: 877, column: 7)
!9998 = !DILocation(line: 878, column: 4, scope: !9997)
!9999 = !DILocation(line: 878, column: 7, scope: !9997)
!10000 = !DILocation(line: 878, column: 20, scope: !9997)
!10001 = !DILocation(line: 878, column: 25, scope: !9997)
!10002 = !DILocation(line: 878, column: 41, scope: !9997)
!10003 = !DILocation(line: 877, column: 7, scope: !9987)
!10004 = !DILocation(line: 879, column: 4, scope: !9997)
!10005 = !DILocation(line: 880, column: 2, scope: !9987)
!10006 = !DILocation(line: 882, column: 8, scope: !9929)
!10007 = !DILocation(line: 883, column: 10, scope: !9929)
!10008 = !DILocation(line: 883, column: 22, scope: !9929)
!10009 = !DILocation(line: 883, column: 2, scope: !9929)
!10010 = !DILocation(line: 885, column: 8, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 885, column: 7)
!10012 = !DILocation(line: 885, column: 14, scope: !10011)
!10013 = !DILocation(line: 885, column: 29, scope: !10011)
!10014 = !DILocation(line: 885, column: 7, scope: !9937)
!10015 = !DILocation(line: 886, column: 4, scope: !10011)
!10016 = !DILocation(line: 887, column: 20, scope: !9937)
!10017 = !DILocation(line: 887, column: 24, scope: !9937)
!10018 = !DILocation(line: 887, column: 29, scope: !9937)
!10019 = !DILocation(line: 887, column: 9, scope: !9937)
!10020 = !DILocation(line: 887, column: 7, scope: !9937)
!10021 = !DILocation(line: 888, column: 7, scope: !9936)
!10022 = !DILocation(line: 888, column: 11, scope: !9936)
!10023 = !DILocation(line: 888, column: 7, scope: !9937)
!10024 = !DILocation(line: 897, column: 21, scope: !9935)
!10025 = !DILocation(line: 897, column: 25, scope: !9935)
!10026 = !DILocation(line: 897, column: 30, scope: !9935)
!10027 = !DILocation(line: 897, column: 36, scope: !9935)
!10028 = !DILocation(line: 897, column: 10, scope: !9935)
!10029 = !DILocation(line: 897, column: 8, scope: !9935)
!10030 = !DILocation(line: 898, column: 8, scope: !9934)
!10031 = !DILocation(line: 898, column: 12, scope: !9934)
!10032 = !DILocation(line: 898, column: 8, scope: !9935)
!10033 = !DILocation(line: 899, column: 5, scope: !9934)
!10034 = !DILocation(line: 903, column: 3, scope: !9935)
!10035 = !DILocation(line: 904, column: 7, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !9937, file: !3, line: 904, column: 7)
!10037 = !DILocation(line: 904, column: 11, scope: !10036)
!10038 = !DILocation(line: 904, column: 7, scope: !9937)
!10039 = !DILocation(line: 905, column: 20, scope: !10036)
!10040 = !DILocation(line: 905, column: 24, scope: !10036)
!10041 = !DILocation(line: 905, column: 10, scope: !10036)
!10042 = !DILocation(line: 905, column: 8, scope: !10036)
!10043 = !DILocation(line: 905, column: 4, scope: !10036)
!10044 = !DILocation(line: 906, column: 3, scope: !9937)
!10045 = !DILocation(line: 909, column: 19, scope: !9937)
!10046 = !DILocation(line: 909, column: 23, scope: !9937)
!10047 = !DILocation(line: 909, column: 9, scope: !9937)
!10048 = !DILocation(line: 909, column: 7, scope: !9937)
!10049 = !DILocation(line: 910, column: 3, scope: !9937)
!10050 = !DILocation(line: 912, column: 9, scope: !9929)
!10051 = !DILocation(line: 912, column: 2, scope: !9929)
!10052 = !DILocation(line: 913, column: 1, scope: !9929)
!10053 = distinct !DISubprogram(name: "usbfs_increase_memory_usage", scope: !3, file: !3, line: 144, type: !10054, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10054 = !DISubroutineType(types: !10055)
!10055 = !{!205, !465}
!10056 = !DILocation(line: 99, column: 79, scope: !9332, inlinedAt: !10057)
!10057 = distinct !DILocation(line: 961, column: 2, scope: !9463, inlinedAt: !10058)
!10058 = distinct !DILocation(line: 154, column: 3, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10060, file: !3, line: 153, column: 59)
!10060 = distinct !DILexicalBlock(scope: !10053, file: !3, line: 153, column: 6)
!10061 = !DILocation(line: 99, column: 89, scope: !9332, inlinedAt: !10057)
!10062 = !DILocation(line: 959, column: 18, scope: !9463, inlinedAt: !10058)
!10063 = !DILocation(line: 959, column: 33, scope: !9463, inlinedAt: !10058)
!10064 = !DILocation(line: 69, column: 73, scope: !9569, inlinedAt: !10065)
!10065 = distinct !DILocation(line: 837, column: 2, scope: !10066, inlinedAt: !10071)
!10066 = distinct !DISubprogram(name: "atomic64_read", scope: !9323, file: !9323, line: 835, type: !10067, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10067 = !DISubroutineType(types: !10068)
!10068 = !{!256, !10069}
!10069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10070, size: 64)
!10070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !252)
!10071 = distinct !DILocation(line: 153, column: 17, scope: !10060)
!10072 = !DILocation(line: 69, column: 83, scope: !9569, inlinedAt: !10065)
!10073 = !DILocalVariable(name: "v", arg: 1, scope: !10066, file: !9323, line: 835, type: !10069)
!10074 = !DILocation(line: 835, column: 33, scope: !10066, inlinedAt: !10071)
!10075 = !DILocalVariable(name: "i", arg: 1, scope: !10076, file: !9502, line: 44, type: !256)
!10076 = distinct !DISubprogram(name: "arch_atomic64_add", scope: !9502, file: !9502, line: 44, type: !9464, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10077 = !DILocation(line: 44, column: 51, scope: !10076, inlinedAt: !10078)
!10078 = distinct !DILocation(line: 874, column: 2, scope: !10079, inlinedAt: !10080)
!10079 = distinct !DISubprogram(name: "atomic64_add", scope: !9323, file: !9323, line: 871, type: !9464, scopeLine: 872, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10080 = distinct !DILocation(line: 151, column: 2, scope: !10053)
!10081 = !DILocalVariable(name: "v", arg: 2, scope: !10076, file: !9502, line: 44, type: !9466)
!10082 = !DILocation(line: 44, column: 66, scope: !10076, inlinedAt: !10078)
!10083 = !DILocation(line: 99, column: 79, scope: !9332, inlinedAt: !10084)
!10084 = distinct !DILocation(line: 873, column: 2, scope: !10079, inlinedAt: !10080)
!10085 = !DILocation(line: 99, column: 89, scope: !9332, inlinedAt: !10084)
!10086 = !DILocalVariable(name: "i", arg: 1, scope: !10079, file: !9323, line: 871, type: !256)
!10087 = !DILocation(line: 871, column: 18, scope: !10079, inlinedAt: !10080)
!10088 = !DILocalVariable(name: "v", arg: 2, scope: !10079, file: !9323, line: 871, type: !9466)
!10089 = !DILocation(line: 871, column: 33, scope: !10079, inlinedAt: !10080)
!10090 = !DILocalVariable(name: "amount", arg: 1, scope: !10053, file: !3, line: 144, type: !465)
!10091 = !DILocation(line: 144, column: 44, scope: !10053)
!10092 = !DILocalVariable(name: "lim", scope: !10053, file: !3, line: 146, type: !465)
!10093 = !DILocation(line: 146, column: 6, scope: !10053)
!10094 = !DILocation(line: 148, column: 8, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10053, file: !3, line: 148, column: 8)
!10096 = !DILocation(line: 148, column: 8, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 148, column: 8)
!10098 = !DILocation(line: 148, column: 8, scope: !10053)
!10099 = !DILocation(line: 148, column: 6, scope: !10053)
!10100 = !DILocation(line: 149, column: 6, scope: !10053)
!10101 = !DILocation(line: 151, column: 15, scope: !10053)
!10102 = !DILocation(line: 873, column: 31, scope: !10079, inlinedAt: !10080)
!10103 = !DILocation(line: 101, column: 20, scope: !9332, inlinedAt: !10084)
!10104 = !DILocation(line: 101, column: 23, scope: !9332, inlinedAt: !10084)
!10105 = !DILocation(line: 101, column: 2, scope: !9332, inlinedAt: !10084)
!10106 = !DILocation(line: 102, column: 2, scope: !9332, inlinedAt: !10084)
!10107 = !DILocation(line: 874, column: 20, scope: !10079, inlinedAt: !10080)
!10108 = !DILocation(line: 874, column: 23, scope: !10079, inlinedAt: !10080)
!10109 = !DILocation(line: 47, column: 16, scope: !10076, inlinedAt: !10078)
!10110 = !DILocation(line: 47, column: 19, scope: !10076, inlinedAt: !10078)
!10111 = !DILocation(line: 48, column: 16, scope: !10076, inlinedAt: !10078)
!10112 = !DILocation(line: 48, column: 25, scope: !10076, inlinedAt: !10078)
!10113 = !DILocation(line: 48, column: 28, scope: !10076, inlinedAt: !10078)
!10114 = !DILocation(line: 46, column: 2, scope: !10076, inlinedAt: !10078)
!10115 = !{i32 -2146297035}
!10116 = !DILocation(line: 153, column: 6, scope: !10060)
!10117 = !DILocation(line: 153, column: 10, scope: !10060)
!10118 = !DILocation(line: 153, column: 14, scope: !10060)
!10119 = !DILocation(line: 837, column: 25, scope: !10066, inlinedAt: !10071)
!10120 = !DILocation(line: 71, column: 19, scope: !9569, inlinedAt: !10065)
!10121 = !DILocation(line: 71, column: 22, scope: !9569, inlinedAt: !10065)
!10122 = !DILocation(line: 71, column: 2, scope: !9569, inlinedAt: !10065)
!10123 = !DILocation(line: 72, column: 2, scope: !9569, inlinedAt: !10065)
!10124 = !DILocation(line: 838, column: 28, scope: !10066, inlinedAt: !10071)
!10125 = !DILocation(line: 838, column: 9, scope: !10066, inlinedAt: !10071)
!10126 = !DILocation(line: 153, column: 54, scope: !10060)
!10127 = !DILocation(line: 153, column: 52, scope: !10060)
!10128 = !DILocation(line: 153, column: 6, scope: !10053)
!10129 = !DILocation(line: 154, column: 16, scope: !10059)
!10130 = !DILocation(line: 961, column: 31, scope: !9463, inlinedAt: !10058)
!10131 = !DILocation(line: 101, column: 20, scope: !9332, inlinedAt: !10057)
!10132 = !DILocation(line: 101, column: 23, scope: !9332, inlinedAt: !10057)
!10133 = !DILocation(line: 101, column: 2, scope: !9332, inlinedAt: !10057)
!10134 = !DILocation(line: 102, column: 2, scope: !9332, inlinedAt: !10057)
!10135 = !DILocation(line: 962, column: 20, scope: !9463, inlinedAt: !10058)
!10136 = !DILocation(line: 962, column: 23, scope: !9463, inlinedAt: !10058)
!10137 = !DILocation(line: 962, column: 2, scope: !9463, inlinedAt: !10058)
!10138 = !DILocation(line: 155, column: 3, scope: !10059)
!10139 = !DILocation(line: 158, column: 2, scope: !10053)
!10140 = !DILocation(line: 159, column: 1, scope: !10053)
!10141 = distinct !DISubprogram(name: "__create_pipe", scope: !129, file: !129, line: 1945, type: !10142, scopeLine: 1947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10142 = !DISubroutineType(types: !10143)
!10143 = !{!7, !201, !7}
!10144 = !DILocalVariable(name: "dev", arg: 1, scope: !10141, file: !129, line: 1945, type: !201)
!10145 = !DILocation(line: 1945, column: 61, scope: !10141)
!10146 = !DILocalVariable(name: "endpoint", arg: 2, scope: !10141, file: !129, line: 1946, type: !7)
!10147 = !DILocation(line: 1946, column: 16, scope: !10141)
!10148 = !DILocation(line: 1948, column: 10, scope: !10141)
!10149 = !DILocation(line: 1948, column: 15, scope: !10141)
!10150 = !DILocation(line: 1948, column: 22, scope: !10141)
!10151 = !DILocation(line: 1948, column: 31, scope: !10141)
!10152 = !DILocation(line: 1948, column: 40, scope: !10141)
!10153 = !DILocation(line: 1948, column: 28, scope: !10141)
!10154 = !DILocation(line: 1948, column: 2, scope: !10141)
!10155 = !DILocalVariable(name: "udev", arg: 1, scope: !4934, file: !3, line: 466, type: !201)
!10156 = !DILocation(line: 466, column: 42, scope: !4934)
!10157 = !DILocalVariable(name: "userurb", arg: 2, scope: !4934, file: !3, line: 467, type: !189)
!10158 = !DILocation(line: 467, column: 16, scope: !4934)
!10159 = !DILocalVariable(name: "pipe", arg: 3, scope: !4934, file: !3, line: 467, type: !205)
!10160 = !DILocation(line: 467, column: 29, scope: !4934)
!10161 = !DILocalVariable(name: "length", arg: 4, scope: !4934, file: !3, line: 467, type: !7)
!10162 = !DILocation(line: 467, column: 44, scope: !4934)
!10163 = !DILocalVariable(name: "timeout_or_status", arg: 5, scope: !4934, file: !3, line: 468, type: !205)
!10164 = !DILocation(line: 468, column: 7, scope: !4934)
!10165 = !DILocalVariable(name: "when", arg: 6, scope: !4934, file: !3, line: 468, type: !145)
!10166 = !DILocation(line: 468, column: 42, scope: !4934)
!10167 = !DILocalVariable(name: "data", arg: 7, scope: !4934, file: !3, line: 469, type: !4185)
!10168 = !DILocation(line: 469, column: 18, scope: !4934)
!10169 = !DILocalVariable(name: "data_len", arg: 8, scope: !4934, file: !3, line: 469, type: !7)
!10170 = !DILocation(line: 469, column: 33, scope: !4934)
!10171 = !DILocalVariable(name: "ep", scope: !4934, file: !3, line: 473, type: !205)
!10172 = !DILocation(line: 473, column: 6, scope: !4934)
!10173 = !DILocalVariable(name: "t", scope: !4934, file: !3, line: 474, type: !285)
!10174 = !DILocation(line: 474, column: 14, scope: !4934)
!10175 = !DILocalVariable(name: "d", scope: !4934, file: !3, line: 474, type: !285)
!10176 = !DILocation(line: 474, column: 18, scope: !4934)
!10177 = !DILocation(line: 476, column: 7, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 476, column: 6)
!10179 = !DILocation(line: 476, column: 6, scope: !4934)
!10180 = !DILocation(line: 477, column: 3, scope: !10178)
!10181 = !DILocation(line: 479, column: 7, scope: !4934)
!10182 = !DILocation(line: 479, column: 5, scope: !4934)
!10183 = !DILocation(line: 480, column: 12, scope: !4934)
!10184 = !DILocation(line: 480, column: 6, scope: !4934)
!10185 = !DILocation(line: 480, column: 4, scope: !4934)
!10186 = !DILocation(line: 481, column: 13, scope: !4934)
!10187 = !DILocation(line: 481, column: 12, scope: !4934)
!10188 = !DILocation(line: 481, column: 11, scope: !4934)
!10189 = !DILocation(line: 481, column: 6, scope: !4934)
!10190 = !DILocation(line: 481, column: 4, scope: !4934)
!10191 = !DILocation(line: 483, column: 6, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 483, column: 6)
!10193 = !DILocation(line: 483, column: 6, scope: !4934)
!10194 = !DILocation(line: 484, column: 7, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10196, file: !3, line: 484, column: 7)
!10196 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 483, column: 15)
!10197 = !DILocation(line: 484, column: 12, scope: !10195)
!10198 = !DILocation(line: 484, column: 7, scope: !10196)
!10199 = !DILocation(line: 485, column: 4, scope: !10195)
!10200 = !DILocation(line: 489, column: 4, scope: !10195)
!10201 = !DILocation(line: 493, column: 2, scope: !10196)
!10202 = !DILocation(line: 494, column: 7, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10204, file: !3, line: 494, column: 7)
!10204 = distinct !DILexicalBlock(scope: !10192, file: !3, line: 493, column: 9)
!10205 = !DILocation(line: 494, column: 12, scope: !10203)
!10206 = !DILocation(line: 494, column: 7, scope: !10204)
!10207 = !DILocation(line: 495, column: 4, scope: !10203)
!10208 = !DILocation(line: 499, column: 4, scope: !10203)
!10209 = !DILocalVariable(name: "__UNIQUE_ID___x259", scope: !10210, file: !3, line: 504, type: !7)
!10210 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 504, column: 13)
!10211 = !DILocation(line: 504, column: 13, scope: !10210)
!10212 = !DILocalVariable(name: "__UNIQUE_ID___y260", scope: !10210, file: !3, line: 504, type: !7)
!10213 = !DILocation(line: 504, column: 11, scope: !4934)
!10214 = !DILocation(line: 505, column: 6, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 505, column: 6)
!10216 = !DILocation(line: 505, column: 11, scope: !10215)
!10217 = !DILocation(line: 505, column: 14, scope: !10215)
!10218 = !DILocation(line: 505, column: 23, scope: !10215)
!10219 = !DILocation(line: 505, column: 6, scope: !4934)
!10220 = !DILocation(line: 507, column: 4, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10215, file: !3, line: 505, column: 28)
!10222 = !DILocation(line: 507, column: 10, scope: !10221)
!10223 = !DILocation(line: 506, column: 3, scope: !10221)
!10224 = !DILocation(line: 508, column: 2, scope: !10221)
!10225 = !DILocation(line: 509, column: 1, scope: !4934)
!10226 = distinct !DISubprogram(name: "findintfep", scope: !3, file: !3, line: 831, type: !10227, scopeLine: 832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10227 = !DISubroutineType(types: !10228)
!10228 = !{!205, !201, !7}
!10229 = !DILocalVariable(name: "dev", arg: 1, scope: !10226, file: !3, line: 831, type: !201)
!10230 = !DILocation(line: 831, column: 42, scope: !10226)
!10231 = !DILocalVariable(name: "ep", arg: 2, scope: !10226, file: !3, line: 831, type: !7)
!10232 = !DILocation(line: 831, column: 60, scope: !10226)
!10233 = !DILocalVariable(name: "i", scope: !10226, file: !3, line: 833, type: !7)
!10234 = !DILocation(line: 833, column: 15, scope: !10226)
!10235 = !DILocalVariable(name: "j", scope: !10226, file: !3, line: 833, type: !7)
!10236 = !DILocation(line: 833, column: 18, scope: !10226)
!10237 = !DILocalVariable(name: "e", scope: !10226, file: !3, line: 833, type: !7)
!10238 = !DILocation(line: 833, column: 21, scope: !10226)
!10239 = !DILocalVariable(name: "intf", scope: !10226, file: !3, line: 834, type: !4299)
!10240 = !DILocation(line: 834, column: 24, scope: !10226)
!10241 = !DILocalVariable(name: "alts", scope: !10226, file: !3, line: 835, type: !4303)
!10242 = !DILocation(line: 835, column: 29, scope: !10226)
!10243 = !DILocalVariable(name: "endpt", scope: !10226, file: !3, line: 836, type: !10244)
!10244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!10245 = !DILocation(line: 836, column: 34, scope: !10226)
!10246 = !DILocation(line: 838, column: 6, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10226, file: !3, line: 838, column: 6)
!10248 = !DILocation(line: 838, column: 9, scope: !10247)
!10249 = !DILocation(line: 838, column: 6, scope: !10226)
!10250 = !DILocation(line: 839, column: 3, scope: !10247)
!10251 = !DILocation(line: 840, column: 7, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10226, file: !3, line: 840, column: 6)
!10253 = !DILocation(line: 840, column: 12, scope: !10252)
!10254 = !DILocation(line: 840, column: 6, scope: !10226)
!10255 = !DILocation(line: 841, column: 3, scope: !10252)
!10256 = !DILocation(line: 842, column: 9, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10226, file: !3, line: 842, column: 2)
!10258 = !DILocation(line: 842, column: 7, scope: !10257)
!10259 = !DILocation(line: 842, column: 14, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 842, column: 2)
!10261 = !DILocation(line: 842, column: 18, scope: !10260)
!10262 = !DILocation(line: 842, column: 23, scope: !10260)
!10263 = !DILocation(line: 842, column: 34, scope: !10260)
!10264 = !DILocation(line: 842, column: 39, scope: !10260)
!10265 = !DILocation(line: 842, column: 16, scope: !10260)
!10266 = !DILocation(line: 842, column: 2, scope: !10257)
!10267 = !DILocation(line: 843, column: 10, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10260, file: !3, line: 842, column: 60)
!10269 = !DILocation(line: 843, column: 15, scope: !10268)
!10270 = !DILocation(line: 843, column: 26, scope: !10268)
!10271 = !DILocation(line: 843, column: 36, scope: !10268)
!10272 = !DILocation(line: 843, column: 8, scope: !10268)
!10273 = !DILocation(line: 844, column: 10, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 844, column: 3)
!10275 = !DILocation(line: 844, column: 8, scope: !10274)
!10276 = !DILocation(line: 844, column: 15, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 844, column: 3)
!10278 = !DILocation(line: 844, column: 19, scope: !10277)
!10279 = !DILocation(line: 844, column: 25, scope: !10277)
!10280 = !DILocation(line: 844, column: 17, scope: !10277)
!10281 = !DILocation(line: 844, column: 3, scope: !10274)
!10282 = !DILocation(line: 845, column: 12, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10277, file: !3, line: 844, column: 46)
!10284 = !DILocation(line: 845, column: 18, scope: !10283)
!10285 = !DILocation(line: 845, column: 29, scope: !10283)
!10286 = !DILocation(line: 845, column: 9, scope: !10283)
!10287 = !DILocation(line: 846, column: 11, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 846, column: 4)
!10289 = !DILocation(line: 846, column: 9, scope: !10288)
!10290 = !DILocation(line: 846, column: 16, scope: !10291)
!10291 = distinct !DILexicalBlock(scope: !10288, file: !3, line: 846, column: 4)
!10292 = !DILocation(line: 846, column: 20, scope: !10291)
!10293 = !DILocation(line: 846, column: 26, scope: !10291)
!10294 = !DILocation(line: 846, column: 31, scope: !10291)
!10295 = !DILocation(line: 846, column: 18, scope: !10291)
!10296 = !DILocation(line: 846, column: 4, scope: !10288)
!10297 = !DILocation(line: 847, column: 14, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10291, file: !3, line: 846, column: 51)
!10299 = !DILocation(line: 847, column: 20, scope: !10298)
!10300 = !DILocation(line: 847, column: 29, scope: !10298)
!10301 = !DILocation(line: 847, column: 32, scope: !10298)
!10302 = !DILocation(line: 847, column: 11, scope: !10298)
!10303 = !DILocation(line: 848, column: 9, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10298, file: !3, line: 848, column: 9)
!10305 = !DILocation(line: 848, column: 16, scope: !10304)
!10306 = !DILocation(line: 848, column: 36, scope: !10304)
!10307 = !DILocation(line: 848, column: 33, scope: !10304)
!10308 = !DILocation(line: 848, column: 9, scope: !10298)
!10309 = !DILocation(line: 849, column: 13, scope: !10304)
!10310 = !DILocation(line: 849, column: 19, scope: !10304)
!10311 = !DILocation(line: 849, column: 24, scope: !10304)
!10312 = !DILocation(line: 849, column: 6, scope: !10304)
!10313 = !DILocation(line: 850, column: 4, scope: !10298)
!10314 = !DILocation(line: 846, column: 47, scope: !10291)
!10315 = !DILocation(line: 846, column: 4, scope: !10291)
!10316 = distinct !{!10316, !10296, !10317}
!10317 = !DILocation(line: 850, column: 4, scope: !10288)
!10318 = !DILocation(line: 851, column: 3, scope: !10283)
!10319 = !DILocation(line: 844, column: 42, scope: !10277)
!10320 = !DILocation(line: 844, column: 3, scope: !10277)
!10321 = distinct !{!10321, !10281, !10322}
!10322 = !DILocation(line: 851, column: 3, scope: !10274)
!10323 = !DILocation(line: 852, column: 2, scope: !10268)
!10324 = !DILocation(line: 842, column: 56, scope: !10260)
!10325 = !DILocation(line: 842, column: 2, scope: !10260)
!10326 = distinct !{!10326, !10266, !10327}
!10327 = !DILocation(line: 852, column: 2, scope: !10257)
!10328 = !DILocation(line: 853, column: 2, scope: !10226)
!10329 = !DILocation(line: 854, column: 1, scope: !10226)
!10330 = distinct !DISubprogram(name: "task_pid_nr", scope: !1256, file: !1256, line: 1386, type: !10331, scopeLine: 1387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10331 = !DISubroutineType(types: !10332)
!10332 = !{!1501, !1254}
!10333 = !DILocalVariable(name: "tsk", arg: 1, scope: !10330, file: !1256, line: 1386, type: !1254)
!10334 = !DILocation(line: 1386, column: 53, scope: !10330)
!10335 = !DILocation(line: 1388, column: 9, scope: !10330)
!10336 = !DILocation(line: 1388, column: 14, scope: !10330)
!10337 = !DILocation(line: 1388, column: 2, scope: !10330)
!10338 = distinct !DISubprogram(name: "checkintf", scope: !3, file: !3, line: 816, type: !10339, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10339 = !DISubroutineType(types: !10340)
!10340 = !{!205, !190, !7}
!10341 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !10342)
!10342 = distinct !DILocation(line: 825, column: 2, scope: !10338)
!10343 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !10342)
!10344 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !10342)
!10345 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !10346)
!10346 = distinct !DILocation(line: 825, column: 2, scope: !10338)
!10347 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !10346)
!10348 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !10346)
!10349 = !DILocalVariable(name: "ps", arg: 1, scope: !10338, file: !3, line: 816, type: !190)
!10350 = !DILocation(line: 816, column: 44, scope: !10338)
!10351 = !DILocalVariable(name: "ifnum", arg: 2, scope: !10338, file: !3, line: 816, type: !7)
!10352 = !DILocation(line: 816, column: 61, scope: !10338)
!10353 = !DILocation(line: 818, column: 6, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 818, column: 6)
!10355 = !DILocation(line: 818, column: 10, scope: !10354)
!10356 = !DILocation(line: 818, column: 15, scope: !10354)
!10357 = !DILocation(line: 818, column: 21, scope: !10354)
!10358 = !DILocation(line: 818, column: 6, scope: !10338)
!10359 = !DILocation(line: 819, column: 3, scope: !10354)
!10360 = !DILocation(line: 820, column: 6, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 820, column: 6)
!10362 = !DILocation(line: 820, column: 12, scope: !10361)
!10363 = !DILocation(line: 820, column: 6, scope: !10338)
!10364 = !DILocation(line: 821, column: 3, scope: !10361)
!10365 = !DILocation(line: 822, column: 15, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 822, column: 6)
!10367 = !DILocation(line: 822, column: 23, scope: !10366)
!10368 = !DILocation(line: 822, column: 27, scope: !10366)
!10369 = !DILocation(line: 822, column: 6, scope: !10366)
!10370 = !DILocation(line: 822, column: 6, scope: !10338)
!10371 = !DILocation(line: 823, column: 3, scope: !10366)
!10372 = !DILocation(line: 825, column: 2, scope: !10338)
!10373 = !DILocation(line: 828, column: 19, scope: !10338)
!10374 = !DILocation(line: 828, column: 23, scope: !10338)
!10375 = !DILocation(line: 828, column: 9, scope: !10338)
!10376 = !DILocation(line: 828, column: 2, scope: !10338)
!10377 = !DILocation(line: 829, column: 1, scope: !10338)
!10378 = distinct !DISubprogram(name: "claimintf", scope: !3, file: !3, line: 757, type: !10339, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10379 = !DILocalVariable(name: "ps", arg: 1, scope: !10378, file: !3, line: 757, type: !190)
!10380 = !DILocation(line: 757, column: 44, scope: !10378)
!10381 = !DILocalVariable(name: "ifnum", arg: 2, scope: !10378, file: !3, line: 757, type: !7)
!10382 = !DILocation(line: 757, column: 61, scope: !10378)
!10383 = !DILocalVariable(name: "dev", scope: !10378, file: !3, line: 759, type: !201)
!10384 = !DILocation(line: 759, column: 21, scope: !10378)
!10385 = !DILocation(line: 759, column: 27, scope: !10378)
!10386 = !DILocation(line: 759, column: 31, scope: !10378)
!10387 = !DILocalVariable(name: "intf", scope: !10378, file: !3, line: 760, type: !4299)
!10388 = !DILocation(line: 760, column: 24, scope: !10378)
!10389 = !DILocalVariable(name: "err", scope: !10378, file: !3, line: 761, type: !205)
!10390 = !DILocation(line: 761, column: 6, scope: !10378)
!10391 = !DILocation(line: 763, column: 6, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 763, column: 6)
!10393 = !DILocation(line: 763, column: 12, scope: !10392)
!10394 = !DILocation(line: 763, column: 6, scope: !10378)
!10395 = !DILocation(line: 764, column: 3, scope: !10392)
!10396 = !DILocation(line: 766, column: 15, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 766, column: 6)
!10398 = !DILocation(line: 766, column: 23, scope: !10397)
!10399 = !DILocation(line: 766, column: 27, scope: !10397)
!10400 = !DILocation(line: 766, column: 6, scope: !10397)
!10401 = !DILocation(line: 766, column: 6, scope: !10378)
!10402 = !DILocation(line: 767, column: 3, scope: !10397)
!10403 = !DILocation(line: 769, column: 6, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 769, column: 6)
!10405 = !DILocation(line: 769, column: 10, scope: !10404)
!10406 = !DILocation(line: 769, column: 29, scope: !10404)
!10407 = !DILocation(line: 770, column: 14, scope: !10404)
!10408 = !DILocation(line: 770, column: 22, scope: !10404)
!10409 = !DILocation(line: 770, column: 26, scope: !10404)
!10410 = !DILocation(line: 770, column: 5, scope: !10404)
!10411 = !DILocation(line: 769, column: 6, scope: !10378)
!10412 = !DILocation(line: 771, column: 3, scope: !10404)
!10413 = !DILocation(line: 773, column: 25, scope: !10378)
!10414 = !DILocation(line: 773, column: 30, scope: !10378)
!10415 = !DILocation(line: 773, column: 9, scope: !10378)
!10416 = !DILocation(line: 773, column: 7, scope: !10378)
!10417 = !DILocation(line: 774, column: 7, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 774, column: 6)
!10419 = !DILocation(line: 774, column: 6, scope: !10378)
!10420 = !DILocation(line: 775, column: 7, scope: !10418)
!10421 = !DILocation(line: 775, column: 3, scope: !10418)
!10422 = !DILocalVariable(name: "old_suppress", scope: !10423, file: !3, line: 777, type: !7)
!10423 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 776, column: 7)
!10424 = !DILocation(line: 777, column: 16, scope: !10423)
!10425 = !DILocation(line: 780, column: 43, scope: !10423)
!10426 = !DILocation(line: 780, column: 49, scope: !10423)
!10427 = !DILocation(line: 780, column: 18, scope: !10423)
!10428 = !DILocation(line: 780, column: 16, scope: !10423)
!10429 = !DILocation(line: 781, column: 28, scope: !10423)
!10430 = !DILocation(line: 781, column: 34, scope: !10423)
!10431 = !DILocation(line: 781, column: 3, scope: !10423)
!10432 = !DILocation(line: 782, column: 51, scope: !10423)
!10433 = !DILocation(line: 782, column: 57, scope: !10423)
!10434 = !DILocation(line: 782, column: 9, scope: !10423)
!10435 = !DILocation(line: 782, column: 7, scope: !10423)
!10436 = !DILocation(line: 783, column: 28, scope: !10423)
!10437 = !DILocation(line: 783, column: 34, scope: !10423)
!10438 = !DILocation(line: 783, column: 39, scope: !10423)
!10439 = !DILocation(line: 783, column: 3, scope: !10423)
!10440 = !DILocation(line: 785, column: 6, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 785, column: 6)
!10442 = !DILocation(line: 785, column: 10, scope: !10441)
!10443 = !DILocation(line: 785, column: 6, scope: !10378)
!10444 = !DILocation(line: 786, column: 11, scope: !10441)
!10445 = !DILocation(line: 786, column: 19, scope: !10441)
!10446 = !DILocation(line: 786, column: 23, scope: !10441)
!10447 = !DILocation(line: 786, column: 3, scope: !10441)
!10448 = !DILocation(line: 787, column: 9, scope: !10378)
!10449 = !DILocation(line: 787, column: 2, scope: !10378)
!10450 = !DILocation(line: 788, column: 1, scope: !10378)
!10451 = distinct !DISubprogram(name: "dev_get_uevent_suppress", scope: !94, file: !94, line: 670, type: !10452, scopeLine: 671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10452 = !DISubroutineType(types: !10453)
!10453 = !{!7, !3909}
!10454 = !DILocalVariable(name: "dev", arg: 1, scope: !10451, file: !94, line: 670, type: !3909)
!10455 = !DILocation(line: 670, column: 73, scope: !10451)
!10456 = !DILocation(line: 672, column: 9, scope: !10451)
!10457 = !DILocation(line: 672, column: 14, scope: !10451)
!10458 = !DILocation(line: 672, column: 19, scope: !10451)
!10459 = !DILocation(line: 672, column: 2, scope: !10451)
!10460 = distinct !DISubprogram(name: "dev_set_uevent_suppress", scope: !94, file: !94, line: 675, type: !10461, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10461 = !DISubroutineType(types: !10462)
!10462 = !{null, !277, !205}
!10463 = !DILocalVariable(name: "dev", arg: 1, scope: !10460, file: !94, line: 675, type: !277)
!10464 = !DILocation(line: 675, column: 59, scope: !10460)
!10465 = !DILocalVariable(name: "val", arg: 2, scope: !10460, file: !94, line: 675, type: !205)
!10466 = !DILocation(line: 675, column: 68, scope: !10460)
!10467 = !DILocation(line: 677, column: 30, scope: !10460)
!10468 = !DILocation(line: 677, column: 2, scope: !10460)
!10469 = !DILocation(line: 677, column: 7, scope: !10460)
!10470 = !DILocation(line: 677, column: 12, scope: !10460)
!10471 = !DILocation(line: 677, column: 28, scope: !10460)
!10472 = !DILocation(line: 678, column: 1, scope: !10460)
!10473 = distinct !DISubprogram(name: "set_bit", scope: !5949, file: !5949, line: 26, type: !5950, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10474 = !DILocalVariable(name: "nr", arg: 1, scope: !10475, file: !5956, line: 52, type: !357)
!10475 = distinct !DISubprogram(name: "arch_set_bit", scope: !5956, file: !5956, line: 52, type: !5950, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10476 = !DILocation(line: 52, column: 19, scope: !10475, inlinedAt: !10477)
!10477 = distinct !DILocation(line: 29, column: 2, scope: !10473)
!10478 = !DILocalVariable(name: "addr", arg: 2, scope: !10475, file: !5956, line: 52, type: !5952)
!10479 = !DILocation(line: 52, column: 47, scope: !10475, inlinedAt: !10477)
!10480 = !DILocation(line: 84, column: 74, scope: !5962, inlinedAt: !10481)
!10481 = distinct !DILocation(line: 28, column: 2, scope: !10473)
!10482 = !DILocation(line: 84, column: 84, scope: !5962, inlinedAt: !10481)
!10483 = !DILocalVariable(name: "nr", arg: 1, scope: !10473, file: !5949, line: 26, type: !357)
!10484 = !DILocation(line: 26, column: 33, scope: !10473)
!10485 = !DILocalVariable(name: "addr", arg: 2, scope: !10473, file: !5949, line: 26, type: !5952)
!10486 = !DILocation(line: 26, column: 61, scope: !10473)
!10487 = !DILocation(line: 28, column: 26, scope: !10473)
!10488 = !DILocation(line: 28, column: 33, scope: !10473)
!10489 = !DILocation(line: 28, column: 31, scope: !10473)
!10490 = !DILocation(line: 86, column: 20, scope: !5962, inlinedAt: !10481)
!10491 = !DILocation(line: 86, column: 23, scope: !5962, inlinedAt: !10481)
!10492 = !DILocation(line: 86, column: 2, scope: !5962, inlinedAt: !10481)
!10493 = !DILocation(line: 87, column: 2, scope: !5962, inlinedAt: !10481)
!10494 = !DILocation(line: 29, column: 15, scope: !10473)
!10495 = !DILocation(line: 29, column: 19, scope: !10473)
!10496 = !DILocation(line: 54, column: 27, scope: !10497, inlinedAt: !10477)
!10497 = distinct !DILexicalBlock(scope: !10475, file: !5956, line: 54, column: 6)
!10498 = !DILocation(line: 54, column: 6, scope: !10497, inlinedAt: !10477)
!10499 = !DILocation(line: 54, column: 6, scope: !10475, inlinedAt: !10477)
!10500 = !DILocation(line: 56, column: 6, scope: !10501, inlinedAt: !10477)
!10501 = distinct !DILexicalBlock(scope: !10497, file: !5956, line: 54, column: 32)
!10502 = !DILocation(line: 57, column: 12, scope: !10501, inlinedAt: !10477)
!10503 = !DILocation(line: 55, column: 3, scope: !10501, inlinedAt: !10477)
!10504 = !{i32 -2146942846}
!10505 = !DILocation(line: 59, column: 2, scope: !10501, inlinedAt: !10477)
!10506 = !DILocation(line: 61, column: 8, scope: !10507, inlinedAt: !10477)
!10507 = distinct !DILexicalBlock(scope: !10497, file: !5956, line: 59, column: 9)
!10508 = !DILocation(line: 61, column: 32, scope: !10507, inlinedAt: !10477)
!10509 = !DILocation(line: 60, column: 3, scope: !10507, inlinedAt: !10477)
!10510 = !{i32 -2146942714}
!10511 = !DILocation(line: 30, column: 1, scope: !10473)
!10512 = distinct !DISubprogram(name: "arch_atomic64_read", scope: !9502, file: !9502, line: 20, type: !10067, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10513 = !DILocalVariable(name: "v", arg: 1, scope: !10512, file: !9502, line: 20, type: !10069)
!10514 = !DILocation(line: 20, column: 56, scope: !10512)
!10515 = !DILocation(line: 22, column: 9, scope: !10512)
!10516 = !DILocation(line: 22, column: 2, scope: !10512)
!10517 = distinct !DISubprogram(name: "do_proc_bulk", scope: !3, file: !3, line: 1194, type: !10518, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10518 = !DISubroutineType(types: !10519)
!10519 = !{!205, !190, !10520}
!10520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7060, size: 64)
!10521 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !10522)
!10522 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !10523)
!10523 = distinct !DILocation(line: 1243, column: 8, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 1243, column: 8)
!10525 = distinct !DILexicalBlock(scope: !10526, file: !3, line: 1242, column: 13)
!10526 = distinct !DILexicalBlock(scope: !10527, file: !3, line: 1242, column: 7)
!10527 = distinct !DILexicalBlock(scope: !10528, file: !3, line: 1241, column: 9)
!10528 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 1227, column: 6)
!10529 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !10522)
!10530 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !10522)
!10531 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !10522)
!10532 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !10522)
!10533 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !10523)
!10534 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !10523)
!10535 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !10523)
!10536 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !10537)
!10537 = distinct !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !10538)
!10538 = distinct !DILocation(line: 1236, column: 8, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10540, file: !3, line: 1236, column: 8)
!10540 = distinct !DILexicalBlock(scope: !10541, file: !3, line: 1235, column: 19)
!10541 = distinct !DILexicalBlock(scope: !10542, file: !3, line: 1235, column: 7)
!10542 = distinct !DILexicalBlock(scope: !10528, file: !3, line: 1227, column: 23)
!10543 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !10537)
!10544 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !10537)
!10545 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !10537)
!10546 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !10537)
!10547 = !DILocation(line: 197, column: 27, scope: !5065, inlinedAt: !10538)
!10548 = !DILocation(line: 197, column: 43, scope: !5065, inlinedAt: !10538)
!10549 = !DILocation(line: 197, column: 63, scope: !5065, inlinedAt: !10538)
!10550 = !DILocalVariable(name: "s", arg: 1, scope: !10551, file: !156, line: 445, type: !973)
!10551 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !156, file: !156, line: 445, type: !10552, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10552 = !DISubroutineType(types: !10553)
!10553 = !{!189, !973, !788, !369}
!10554 = !DILocation(line: 445, column: 72, scope: !10551, inlinedAt: !10555)
!10555 = distinct !DILocation(line: 552, column: 10, scope: !10556, inlinedAt: !10561)
!10556 = distinct !DILexicalBlock(scope: !10557, file: !156, line: 540, column: 34)
!10557 = distinct !DILexicalBlock(scope: !10558, file: !156, line: 540, column: 6)
!10558 = distinct !DISubprogram(name: "kmalloc", scope: !156, file: !156, line: 538, type: !10559, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10559 = !DISubroutineType(types: !10560)
!10560 = !{!189, !369, !788}
!10561 = distinct !DILocation(line: 1221, column: 9, scope: !10517)
!10562 = !DILocalVariable(name: "flags", arg: 2, scope: !10551, file: !156, line: 446, type: !788)
!10563 = !DILocation(line: 446, column: 9, scope: !10551, inlinedAt: !10555)
!10564 = !DILocalVariable(name: "size", arg: 3, scope: !10551, file: !156, line: 446, type: !369)
!10565 = !DILocation(line: 446, column: 23, scope: !10551, inlinedAt: !10555)
!10566 = !DILocalVariable(name: "ret", scope: !10551, file: !156, line: 448, type: !189)
!10567 = !DILocation(line: 448, column: 8, scope: !10551, inlinedAt: !10555)
!10568 = !DILocalVariable(name: "flags", arg: 1, scope: !10569, file: !156, line: 318, type: !788)
!10569 = distinct !DISubprogram(name: "kmalloc_type", scope: !156, file: !156, line: 318, type: !10570, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10570 = !DISubroutineType(types: !10571)
!10571 = !{!155, !788}
!10572 = !DILocation(line: 318, column: 67, scope: !10569, inlinedAt: !10573)
!10573 = distinct !DILocation(line: 553, column: 20, scope: !10556, inlinedAt: !10561)
!10574 = !DILocalVariable(name: "size", arg: 1, scope: !10575, file: !156, line: 346, type: !369)
!10575 = distinct !DISubprogram(name: "kmalloc_index", scope: !156, file: !156, line: 346, type: !10576, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10576 = !DISubroutineType(types: !10577)
!10577 = !{!7, !369}
!10578 = !DILocation(line: 346, column: 58, scope: !10575, inlinedAt: !10579)
!10579 = distinct !DILocation(line: 547, column: 11, scope: !10556, inlinedAt: !10561)
!10580 = !DILocalVariable(name: "size", arg: 1, scope: !10581, file: !156, line: 472, type: !369)
!10581 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !156, file: !156, line: 472, type: !10582, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10582 = !DISubroutineType(types: !10583)
!10583 = !{!189, !369, !788, !7}
!10584 = !DILocation(line: 472, column: 28, scope: !10581, inlinedAt: !10585)
!10585 = distinct !DILocation(line: 481, column: 9, scope: !10586, inlinedAt: !10587)
!10586 = distinct !DISubprogram(name: "kmalloc_large", scope: !156, file: !156, line: 478, type: !10559, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!10587 = distinct !DILocation(line: 545, column: 11, scope: !10588, inlinedAt: !10561)
!10588 = distinct !DILexicalBlock(scope: !10556, file: !156, line: 544, column: 7)
!10589 = !DILocalVariable(name: "flags", arg: 2, scope: !10581, file: !156, line: 472, type: !788)
!10590 = !DILocation(line: 472, column: 40, scope: !10581, inlinedAt: !10585)
!10591 = !DILocalVariable(name: "order", arg: 3, scope: !10581, file: !156, line: 472, type: !7)
!10592 = !DILocation(line: 472, column: 60, scope: !10581, inlinedAt: !10585)
!10593 = !DILocalVariable(name: "size", arg: 1, scope: !10586, file: !156, line: 478, type: !369)
!10594 = !DILocation(line: 478, column: 51, scope: !10586, inlinedAt: !10587)
!10595 = !DILocalVariable(name: "flags", arg: 2, scope: !10586, file: !156, line: 478, type: !788)
!10596 = !DILocation(line: 478, column: 63, scope: !10586, inlinedAt: !10587)
!10597 = !DILocalVariable(name: "order", scope: !10586, file: !156, line: 480, type: !7)
!10598 = !DILocation(line: 480, column: 15, scope: !10586, inlinedAt: !10587)
!10599 = !DILocalVariable(name: "size", arg: 1, scope: !10558, file: !156, line: 538, type: !369)
!10600 = !DILocation(line: 538, column: 45, scope: !10558, inlinedAt: !10561)
!10601 = !DILocalVariable(name: "flags", arg: 2, scope: !10558, file: !156, line: 538, type: !788)
!10602 = !DILocation(line: 538, column: 57, scope: !10558, inlinedAt: !10561)
!10603 = !DILocalVariable(name: "index", scope: !10556, file: !156, line: 542, type: !7)
!10604 = !DILocation(line: 542, column: 16, scope: !10556, inlinedAt: !10561)
!10605 = !DILocalVariable(name: "ps", arg: 1, scope: !10517, file: !3, line: 1194, type: !190)
!10606 = !DILocation(line: 1194, column: 47, scope: !10517)
!10607 = !DILocalVariable(name: "bulk", arg: 2, scope: !10517, file: !3, line: 1195, type: !10520)
!10608 = !DILocation(line: 1195, column: 33, scope: !10517)
!10609 = !DILocalVariable(name: "dev", scope: !10517, file: !3, line: 1197, type: !201)
!10610 = !DILocation(line: 1197, column: 21, scope: !10517)
!10611 = !DILocation(line: 1197, column: 27, scope: !10517)
!10612 = !DILocation(line: 1197, column: 31, scope: !10517)
!10613 = !DILocalVariable(name: "tmo", scope: !10517, file: !3, line: 1198, type: !7)
!10614 = !DILocation(line: 1198, column: 15, scope: !10517)
!10615 = !DILocalVariable(name: "len1", scope: !10517, file: !3, line: 1198, type: !7)
!10616 = !DILocation(line: 1198, column: 20, scope: !10517)
!10617 = !DILocalVariable(name: "pipe", scope: !10517, file: !3, line: 1198, type: !7)
!10618 = !DILocation(line: 1198, column: 26, scope: !10517)
!10619 = !DILocalVariable(name: "len2", scope: !10517, file: !3, line: 1199, type: !205)
!10620 = !DILocation(line: 1199, column: 6, scope: !10517)
!10621 = !DILocalVariable(name: "tbuf", scope: !10517, file: !3, line: 1200, type: !4185)
!10622 = !DILocation(line: 1200, column: 17, scope: !10517)
!10623 = !DILocalVariable(name: "i", scope: !10517, file: !3, line: 1201, type: !205)
!10624 = !DILocation(line: 1201, column: 6, scope: !10517)
!10625 = !DILocalVariable(name: "ret", scope: !10517, file: !3, line: 1201, type: !205)
!10626 = !DILocation(line: 1201, column: 9, scope: !10517)
!10627 = !DILocation(line: 1203, column: 19, scope: !10517)
!10628 = !DILocation(line: 1203, column: 23, scope: !10517)
!10629 = !DILocation(line: 1203, column: 28, scope: !10517)
!10630 = !DILocation(line: 1203, column: 34, scope: !10517)
!10631 = !DILocation(line: 1203, column: 8, scope: !10517)
!10632 = !DILocation(line: 1203, column: 6, scope: !10517)
!10633 = !DILocation(line: 1204, column: 6, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 1204, column: 6)
!10635 = !DILocation(line: 1204, column: 10, scope: !10634)
!10636 = !DILocation(line: 1204, column: 6, scope: !10517)
!10637 = !DILocation(line: 1205, column: 10, scope: !10634)
!10638 = !DILocation(line: 1205, column: 3, scope: !10634)
!10639 = !DILocation(line: 1206, column: 18, scope: !10517)
!10640 = !DILocation(line: 1206, column: 22, scope: !10517)
!10641 = !DILocation(line: 1206, column: 8, scope: !10517)
!10642 = !DILocation(line: 1206, column: 6, scope: !10517)
!10643 = !DILocation(line: 1207, column: 6, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 1207, column: 6)
!10645 = !DILocation(line: 1207, column: 6, scope: !10517)
!10646 = !DILocation(line: 1208, column: 10, scope: !10644)
!10647 = !DILocation(line: 1208, column: 3, scope: !10644)
!10648 = !DILocation(line: 1209, column: 6, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 1209, column: 6)
!10650 = !DILocation(line: 1209, column: 12, scope: !10649)
!10651 = !DILocation(line: 1209, column: 15, scope: !10649)
!10652 = !DILocation(line: 1209, column: 6, scope: !10517)
!10653 = !DILocation(line: 1210, column: 10, scope: !10649)
!10654 = !DILocation(line: 1210, column: 8, scope: !10649)
!10655 = !DILocation(line: 1210, column: 3, scope: !10649)
!10656 = !DILocation(line: 1212, column: 10, scope: !10649)
!10657 = !DILocation(line: 1212, column: 8, scope: !10649)
!10658 = !DILocation(line: 1213, column: 21, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 1213, column: 6)
!10660 = !DILocation(line: 1213, column: 26, scope: !10659)
!10661 = !DILocation(line: 1213, column: 34, scope: !10659)
!10662 = !DILocation(line: 1213, column: 40, scope: !10659)
!10663 = !DILocation(line: 1213, column: 43, scope: !10659)
!10664 = !DILocation(line: 1213, column: 32, scope: !10659)
!10665 = !DILocation(line: 1213, column: 7, scope: !10659)
!10666 = !DILocation(line: 1213, column: 6, scope: !10517)
!10667 = !DILocation(line: 1214, column: 3, scope: !10659)
!10668 = !DILocation(line: 1215, column: 9, scope: !10517)
!10669 = !DILocation(line: 1215, column: 15, scope: !10517)
!10670 = !DILocation(line: 1215, column: 7, scope: !10517)
!10671 = !DILocation(line: 1216, column: 6, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 1216, column: 6)
!10673 = !DILocation(line: 1216, column: 11, scope: !10672)
!10674 = !DILocation(line: 1216, column: 6, scope: !10517)
!10675 = !DILocation(line: 1217, column: 3, scope: !10672)
!10676 = !DILocation(line: 1218, column: 36, scope: !10517)
!10677 = !DILocation(line: 1218, column: 41, scope: !10517)
!10678 = !DILocation(line: 1218, column: 8, scope: !10517)
!10679 = !DILocation(line: 1218, column: 6, scope: !10517)
!10680 = !DILocation(line: 1219, column: 6, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 1219, column: 6)
!10682 = !DILocation(line: 1219, column: 6, scope: !10517)
!10683 = !DILocation(line: 1220, column: 10, scope: !10681)
!10684 = !DILocation(line: 1220, column: 3, scope: !10681)
!10685 = !DILocation(line: 1221, column: 17, scope: !10517)
!10686 = !DILocation(line: 540, column: 27, scope: !10557, inlinedAt: !10561)
!10687 = !DILocation(line: 540, column: 6, scope: !10557, inlinedAt: !10561)
!10688 = !DILocation(line: 540, column: 6, scope: !10558, inlinedAt: !10561)
!10689 = !DILocation(line: 544, column: 7, scope: !10588, inlinedAt: !10561)
!10690 = !DILocation(line: 544, column: 12, scope: !10588, inlinedAt: !10561)
!10691 = !DILocation(line: 544, column: 7, scope: !10556, inlinedAt: !10561)
!10692 = !DILocation(line: 545, column: 25, scope: !10588, inlinedAt: !10561)
!10693 = !DILocation(line: 545, column: 31, scope: !10588, inlinedAt: !10561)
!10694 = !DILocation(line: 480, column: 33, scope: !10586, inlinedAt: !10587)
!10695 = !DILocation(line: 480, column: 23, scope: !10586, inlinedAt: !10587)
!10696 = !DILocation(line: 481, column: 29, scope: !10586, inlinedAt: !10587)
!10697 = !DILocation(line: 481, column: 35, scope: !10586, inlinedAt: !10587)
!10698 = !DILocation(line: 481, column: 42, scope: !10586, inlinedAt: !10587)
!10699 = !DILocation(line: 474, column: 23, scope: !10581, inlinedAt: !10585)
!10700 = !DILocation(line: 474, column: 29, scope: !10581, inlinedAt: !10585)
!10701 = !DILocation(line: 474, column: 36, scope: !10581, inlinedAt: !10585)
!10702 = !DILocation(line: 474, column: 9, scope: !10581, inlinedAt: !10585)
!10703 = !DILocation(line: 545, column: 4, scope: !10588, inlinedAt: !10561)
!10704 = !DILocation(line: 547, column: 25, scope: !10556, inlinedAt: !10561)
!10705 = !DILocation(line: 348, column: 7, scope: !10706, inlinedAt: !10579)
!10706 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 348, column: 6)
!10707 = !DILocation(line: 348, column: 6, scope: !10575, inlinedAt: !10579)
!10708 = !DILocation(line: 349, column: 3, scope: !10706, inlinedAt: !10579)
!10709 = !DILocation(line: 351, column: 6, scope: !10710, inlinedAt: !10579)
!10710 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 351, column: 6)
!10711 = !DILocation(line: 351, column: 11, scope: !10710, inlinedAt: !10579)
!10712 = !DILocation(line: 351, column: 6, scope: !10575, inlinedAt: !10579)
!10713 = !DILocation(line: 352, column: 3, scope: !10710, inlinedAt: !10579)
!10714 = !DILocation(line: 354, column: 32, scope: !10715, inlinedAt: !10579)
!10715 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 354, column: 6)
!10716 = !DILocation(line: 354, column: 37, scope: !10715, inlinedAt: !10579)
!10717 = !DILocation(line: 354, column: 42, scope: !10715, inlinedAt: !10579)
!10718 = !DILocation(line: 354, column: 45, scope: !10715, inlinedAt: !10579)
!10719 = !DILocation(line: 354, column: 50, scope: !10715, inlinedAt: !10579)
!10720 = !DILocation(line: 354, column: 6, scope: !10575, inlinedAt: !10579)
!10721 = !DILocation(line: 355, column: 3, scope: !10715, inlinedAt: !10579)
!10722 = !DILocation(line: 356, column: 32, scope: !10723, inlinedAt: !10579)
!10723 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 356, column: 6)
!10724 = !DILocation(line: 356, column: 37, scope: !10723, inlinedAt: !10579)
!10725 = !DILocation(line: 356, column: 43, scope: !10723, inlinedAt: !10579)
!10726 = !DILocation(line: 356, column: 46, scope: !10723, inlinedAt: !10579)
!10727 = !DILocation(line: 356, column: 51, scope: !10723, inlinedAt: !10579)
!10728 = !DILocation(line: 356, column: 6, scope: !10575, inlinedAt: !10579)
!10729 = !DILocation(line: 357, column: 3, scope: !10723, inlinedAt: !10579)
!10730 = !DILocation(line: 358, column: 6, scope: !10731, inlinedAt: !10579)
!10731 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 358, column: 6)
!10732 = !DILocation(line: 358, column: 11, scope: !10731, inlinedAt: !10579)
!10733 = !DILocation(line: 358, column: 6, scope: !10575, inlinedAt: !10579)
!10734 = !DILocation(line: 358, column: 26, scope: !10731, inlinedAt: !10579)
!10735 = !DILocation(line: 359, column: 6, scope: !10736, inlinedAt: !10579)
!10736 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 359, column: 6)
!10737 = !DILocation(line: 359, column: 11, scope: !10736, inlinedAt: !10579)
!10738 = !DILocation(line: 359, column: 6, scope: !10575, inlinedAt: !10579)
!10739 = !DILocation(line: 359, column: 26, scope: !10736, inlinedAt: !10579)
!10740 = !DILocation(line: 360, column: 6, scope: !10741, inlinedAt: !10579)
!10741 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 360, column: 6)
!10742 = !DILocation(line: 360, column: 11, scope: !10741, inlinedAt: !10579)
!10743 = !DILocation(line: 360, column: 6, scope: !10575, inlinedAt: !10579)
!10744 = !DILocation(line: 360, column: 26, scope: !10741, inlinedAt: !10579)
!10745 = !DILocation(line: 361, column: 6, scope: !10746, inlinedAt: !10579)
!10746 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 361, column: 6)
!10747 = !DILocation(line: 361, column: 11, scope: !10746, inlinedAt: !10579)
!10748 = !DILocation(line: 361, column: 6, scope: !10575, inlinedAt: !10579)
!10749 = !DILocation(line: 361, column: 26, scope: !10746, inlinedAt: !10579)
!10750 = !DILocation(line: 362, column: 6, scope: !10751, inlinedAt: !10579)
!10751 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 362, column: 6)
!10752 = !DILocation(line: 362, column: 11, scope: !10751, inlinedAt: !10579)
!10753 = !DILocation(line: 362, column: 6, scope: !10575, inlinedAt: !10579)
!10754 = !DILocation(line: 362, column: 26, scope: !10751, inlinedAt: !10579)
!10755 = !DILocation(line: 363, column: 6, scope: !10756, inlinedAt: !10579)
!10756 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 363, column: 6)
!10757 = !DILocation(line: 363, column: 11, scope: !10756, inlinedAt: !10579)
!10758 = !DILocation(line: 363, column: 6, scope: !10575, inlinedAt: !10579)
!10759 = !DILocation(line: 363, column: 26, scope: !10756, inlinedAt: !10579)
!10760 = !DILocation(line: 364, column: 6, scope: !10761, inlinedAt: !10579)
!10761 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 364, column: 6)
!10762 = !DILocation(line: 364, column: 11, scope: !10761, inlinedAt: !10579)
!10763 = !DILocation(line: 364, column: 6, scope: !10575, inlinedAt: !10579)
!10764 = !DILocation(line: 364, column: 26, scope: !10761, inlinedAt: !10579)
!10765 = !DILocation(line: 365, column: 6, scope: !10766, inlinedAt: !10579)
!10766 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 365, column: 6)
!10767 = !DILocation(line: 365, column: 11, scope: !10766, inlinedAt: !10579)
!10768 = !DILocation(line: 365, column: 6, scope: !10575, inlinedAt: !10579)
!10769 = !DILocation(line: 365, column: 26, scope: !10766, inlinedAt: !10579)
!10770 = !DILocation(line: 366, column: 6, scope: !10771, inlinedAt: !10579)
!10771 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 366, column: 6)
!10772 = !DILocation(line: 366, column: 11, scope: !10771, inlinedAt: !10579)
!10773 = !DILocation(line: 366, column: 6, scope: !10575, inlinedAt: !10579)
!10774 = !DILocation(line: 366, column: 26, scope: !10771, inlinedAt: !10579)
!10775 = !DILocation(line: 367, column: 6, scope: !10776, inlinedAt: !10579)
!10776 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 367, column: 6)
!10777 = !DILocation(line: 367, column: 11, scope: !10776, inlinedAt: !10579)
!10778 = !DILocation(line: 367, column: 6, scope: !10575, inlinedAt: !10579)
!10779 = !DILocation(line: 367, column: 26, scope: !10776, inlinedAt: !10579)
!10780 = !DILocation(line: 368, column: 6, scope: !10781, inlinedAt: !10579)
!10781 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 368, column: 6)
!10782 = !DILocation(line: 368, column: 11, scope: !10781, inlinedAt: !10579)
!10783 = !DILocation(line: 368, column: 6, scope: !10575, inlinedAt: !10579)
!10784 = !DILocation(line: 368, column: 26, scope: !10781, inlinedAt: !10579)
!10785 = !DILocation(line: 369, column: 6, scope: !10786, inlinedAt: !10579)
!10786 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 369, column: 6)
!10787 = !DILocation(line: 369, column: 11, scope: !10786, inlinedAt: !10579)
!10788 = !DILocation(line: 369, column: 6, scope: !10575, inlinedAt: !10579)
!10789 = !DILocation(line: 369, column: 26, scope: !10786, inlinedAt: !10579)
!10790 = !DILocation(line: 370, column: 6, scope: !10791, inlinedAt: !10579)
!10791 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 370, column: 6)
!10792 = !DILocation(line: 370, column: 11, scope: !10791, inlinedAt: !10579)
!10793 = !DILocation(line: 370, column: 6, scope: !10575, inlinedAt: !10579)
!10794 = !DILocation(line: 370, column: 26, scope: !10791, inlinedAt: !10579)
!10795 = !DILocation(line: 371, column: 6, scope: !10796, inlinedAt: !10579)
!10796 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 371, column: 6)
!10797 = !DILocation(line: 371, column: 11, scope: !10796, inlinedAt: !10579)
!10798 = !DILocation(line: 371, column: 6, scope: !10575, inlinedAt: !10579)
!10799 = !DILocation(line: 371, column: 26, scope: !10796, inlinedAt: !10579)
!10800 = !DILocation(line: 372, column: 6, scope: !10801, inlinedAt: !10579)
!10801 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 372, column: 6)
!10802 = !DILocation(line: 372, column: 11, scope: !10801, inlinedAt: !10579)
!10803 = !DILocation(line: 372, column: 6, scope: !10575, inlinedAt: !10579)
!10804 = !DILocation(line: 372, column: 26, scope: !10801, inlinedAt: !10579)
!10805 = !DILocation(line: 373, column: 6, scope: !10806, inlinedAt: !10579)
!10806 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 373, column: 6)
!10807 = !DILocation(line: 373, column: 11, scope: !10806, inlinedAt: !10579)
!10808 = !DILocation(line: 373, column: 6, scope: !10575, inlinedAt: !10579)
!10809 = !DILocation(line: 373, column: 26, scope: !10806, inlinedAt: !10579)
!10810 = !DILocation(line: 374, column: 6, scope: !10811, inlinedAt: !10579)
!10811 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 374, column: 6)
!10812 = !DILocation(line: 374, column: 11, scope: !10811, inlinedAt: !10579)
!10813 = !DILocation(line: 374, column: 6, scope: !10575, inlinedAt: !10579)
!10814 = !DILocation(line: 374, column: 26, scope: !10811, inlinedAt: !10579)
!10815 = !DILocation(line: 375, column: 6, scope: !10816, inlinedAt: !10579)
!10816 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 375, column: 6)
!10817 = !DILocation(line: 375, column: 11, scope: !10816, inlinedAt: !10579)
!10818 = !DILocation(line: 375, column: 6, scope: !10575, inlinedAt: !10579)
!10819 = !DILocation(line: 375, column: 27, scope: !10816, inlinedAt: !10579)
!10820 = !DILocation(line: 376, column: 6, scope: !10821, inlinedAt: !10579)
!10821 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 376, column: 6)
!10822 = !DILocation(line: 376, column: 11, scope: !10821, inlinedAt: !10579)
!10823 = !DILocation(line: 376, column: 6, scope: !10575, inlinedAt: !10579)
!10824 = !DILocation(line: 376, column: 32, scope: !10821, inlinedAt: !10579)
!10825 = !DILocation(line: 377, column: 6, scope: !10826, inlinedAt: !10579)
!10826 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 377, column: 6)
!10827 = !DILocation(line: 377, column: 11, scope: !10826, inlinedAt: !10579)
!10828 = !DILocation(line: 377, column: 6, scope: !10575, inlinedAt: !10579)
!10829 = !DILocation(line: 377, column: 32, scope: !10826, inlinedAt: !10579)
!10830 = !DILocation(line: 378, column: 6, scope: !10831, inlinedAt: !10579)
!10831 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 378, column: 6)
!10832 = !DILocation(line: 378, column: 11, scope: !10831, inlinedAt: !10579)
!10833 = !DILocation(line: 378, column: 6, scope: !10575, inlinedAt: !10579)
!10834 = !DILocation(line: 378, column: 32, scope: !10831, inlinedAt: !10579)
!10835 = !DILocation(line: 379, column: 6, scope: !10836, inlinedAt: !10579)
!10836 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 379, column: 6)
!10837 = !DILocation(line: 379, column: 11, scope: !10836, inlinedAt: !10579)
!10838 = !DILocation(line: 379, column: 6, scope: !10575, inlinedAt: !10579)
!10839 = !DILocation(line: 379, column: 33, scope: !10836, inlinedAt: !10579)
!10840 = !DILocation(line: 380, column: 6, scope: !10841, inlinedAt: !10579)
!10841 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 380, column: 6)
!10842 = !DILocation(line: 380, column: 11, scope: !10841, inlinedAt: !10579)
!10843 = !DILocation(line: 380, column: 6, scope: !10575, inlinedAt: !10579)
!10844 = !DILocation(line: 380, column: 33, scope: !10841, inlinedAt: !10579)
!10845 = !DILocation(line: 381, column: 6, scope: !10846, inlinedAt: !10579)
!10846 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 381, column: 6)
!10847 = !DILocation(line: 381, column: 11, scope: !10846, inlinedAt: !10579)
!10848 = !DILocation(line: 381, column: 6, scope: !10575, inlinedAt: !10579)
!10849 = !DILocation(line: 381, column: 33, scope: !10846, inlinedAt: !10579)
!10850 = !DILocation(line: 382, column: 2, scope: !10851, inlinedAt: !10579)
!10851 = distinct !DILexicalBlock(scope: !10852, file: !156, line: 382, column: 2)
!10852 = distinct !DILexicalBlock(scope: !10575, file: !156, line: 382, column: 2)
!10853 = !{i32 -2142615417, i32 -2142615388, i32 -2142615342, i32 -2142615284, i32 -2142615230, i32 -2142615176, i32 -2142615121, i32 -2142615090}
!10854 = !DILocation(line: 382, column: 2, scope: !10855, inlinedAt: !10579)
!10855 = distinct !DILexicalBlock(scope: !10856, file: !156, line: 382, column: 2)
!10856 = distinct !DILexicalBlock(scope: !10852, file: !156, line: 382, column: 2)
!10857 = !{i32 -2142614647, i32 -2142614640, i32 -2142614586, i32 -2142614555, i32 -2142614525}
!10858 = !DILocation(line: 382, column: 2, scope: !10856, inlinedAt: !10579)
!10859 = !DILocation(line: 386, column: 1, scope: !10575, inlinedAt: !10579)
!10860 = !DILocation(line: 547, column: 9, scope: !10556, inlinedAt: !10561)
!10861 = !DILocation(line: 549, column: 8, scope: !10862, inlinedAt: !10561)
!10862 = distinct !DILexicalBlock(scope: !10556, file: !156, line: 549, column: 7)
!10863 = !DILocation(line: 549, column: 7, scope: !10556, inlinedAt: !10561)
!10864 = !DILocation(line: 550, column: 4, scope: !10862, inlinedAt: !10561)
!10865 = !DILocation(line: 553, column: 33, scope: !10556, inlinedAt: !10561)
!10866 = !DILocation(line: 325, column: 6, scope: !10867, inlinedAt: !10573)
!10867 = distinct !DILexicalBlock(scope: !10569, file: !156, line: 325, column: 6)
!10868 = !DILocation(line: 325, column: 6, scope: !10569, inlinedAt: !10573)
!10869 = !DILocation(line: 326, column: 3, scope: !10867, inlinedAt: !10573)
!10870 = !DILocation(line: 332, column: 9, scope: !10569, inlinedAt: !10573)
!10871 = !DILocation(line: 332, column: 15, scope: !10569, inlinedAt: !10573)
!10872 = !DILocation(line: 332, column: 2, scope: !10569, inlinedAt: !10573)
!10873 = !DILocation(line: 336, column: 1, scope: !10569, inlinedAt: !10573)
!10874 = !DILocation(line: 553, column: 5, scope: !10556, inlinedAt: !10561)
!10875 = !DILocation(line: 553, column: 41, scope: !10556, inlinedAt: !10561)
!10876 = !DILocation(line: 554, column: 5, scope: !10556, inlinedAt: !10561)
!10877 = !DILocation(line: 554, column: 12, scope: !10556, inlinedAt: !10561)
!10878 = !DILocation(line: 448, column: 31, scope: !10551, inlinedAt: !10555)
!10879 = !DILocation(line: 448, column: 34, scope: !10551, inlinedAt: !10555)
!10880 = !DILocation(line: 448, column: 14, scope: !10551, inlinedAt: !10555)
!10881 = !DILocation(line: 450, column: 22, scope: !10551, inlinedAt: !10555)
!10882 = !DILocation(line: 450, column: 25, scope: !10551, inlinedAt: !10555)
!10883 = !DILocation(line: 450, column: 30, scope: !10551, inlinedAt: !10555)
!10884 = !DILocation(line: 450, column: 36, scope: !10551, inlinedAt: !10555)
!10885 = !DILocation(line: 450, column: 8, scope: !10551, inlinedAt: !10555)
!10886 = !DILocation(line: 450, column: 6, scope: !10551, inlinedAt: !10555)
!10887 = !DILocation(line: 451, column: 9, scope: !10551, inlinedAt: !10555)
!10888 = !DILocation(line: 552, column: 3, scope: !10556, inlinedAt: !10561)
!10889 = !DILocation(line: 557, column: 19, scope: !10558, inlinedAt: !10561)
!10890 = !DILocation(line: 557, column: 25, scope: !10558, inlinedAt: !10561)
!10891 = !DILocation(line: 557, column: 9, scope: !10558, inlinedAt: !10561)
!10892 = !DILocation(line: 557, column: 2, scope: !10558, inlinedAt: !10561)
!10893 = !DILocation(line: 558, column: 1, scope: !10558, inlinedAt: !10561)
!10894 = !DILocation(line: 1221, column: 7, scope: !10517)
!10895 = !DILocation(line: 1222, column: 7, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10517, file: !3, line: 1222, column: 6)
!10897 = !DILocation(line: 1222, column: 6, scope: !10517)
!10898 = !DILocation(line: 1223, column: 7, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10896, file: !3, line: 1222, column: 13)
!10900 = !DILocation(line: 1224, column: 3, scope: !10899)
!10901 = !DILocation(line: 1226, column: 8, scope: !10517)
!10902 = !DILocation(line: 1226, column: 14, scope: !10517)
!10903 = !DILocation(line: 1226, column: 6, scope: !10517)
!10904 = !DILocation(line: 1227, column: 6, scope: !10528)
!10905 = !DILocation(line: 1227, column: 12, scope: !10528)
!10906 = !DILocation(line: 1227, column: 15, scope: !10528)
!10907 = !DILocation(line: 1227, column: 6, scope: !10517)
!10908 = !DILocation(line: 1228, column: 13, scope: !10542)
!10909 = !DILocation(line: 1228, column: 24, scope: !10542)
!10910 = !DILocation(line: 1228, column: 30, scope: !10542)
!10911 = !DILocation(line: 1228, column: 36, scope: !10542)
!10912 = !DILocation(line: 1228, column: 3, scope: !10542)
!10913 = !DILocation(line: 1230, column: 3, scope: !10542)
!10914 = !DILocation(line: 1231, column: 20, scope: !10542)
!10915 = !DILocation(line: 1231, column: 25, scope: !10542)
!10916 = !DILocation(line: 1231, column: 31, scope: !10542)
!10917 = !DILocation(line: 1231, column: 37, scope: !10542)
!10918 = !DILocation(line: 1231, column: 50, scope: !10542)
!10919 = !DILocation(line: 1231, column: 7, scope: !10542)
!10920 = !DILocation(line: 1231, column: 5, scope: !10542)
!10921 = !DILocation(line: 1232, column: 3, scope: !10542)
!10922 = !DILocation(line: 1233, column: 13, scope: !10542)
!10923 = !DILocation(line: 1233, column: 24, scope: !10542)
!10924 = !DILocation(line: 1233, column: 30, scope: !10542)
!10925 = !DILocation(line: 1233, column: 36, scope: !10542)
!10926 = !DILocation(line: 1233, column: 49, scope: !10542)
!10927 = !DILocation(line: 1233, column: 55, scope: !10542)
!10928 = !DILocation(line: 1233, column: 3, scope: !10542)
!10929 = !DILocation(line: 1235, column: 8, scope: !10541)
!10930 = !DILocation(line: 1235, column: 10, scope: !10541)
!10931 = !DILocation(line: 1235, column: 13, scope: !10541)
!10932 = !DILocation(line: 1235, column: 7, scope: !10542)
!10933 = !DILocation(line: 1236, column: 21, scope: !10539)
!10934 = !DILocation(line: 1236, column: 27, scope: !10539)
!10935 = !DILocation(line: 1236, column: 33, scope: !10539)
!10936 = !DILocation(line: 1236, column: 39, scope: !10539)
!10937 = !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !10538)
!10938 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !10537)
!10939 = !DILocation(line: 0, scope: !5187, inlinedAt: !10537)
!10940 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !10537)
!10941 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !10537)
!10942 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !10537)
!10943 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !10537)
!10944 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !10537)
!10945 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !10537)
!10946 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !10537)
!10947 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !10537)
!10948 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !10537)
!10949 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !10537)
!10950 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !10537)
!10951 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !10537)
!10952 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !10537)
!10953 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !10537)
!10954 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !10537)
!10955 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !10537)
!10956 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !10537)
!10957 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !10537)
!10958 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !10537)
!10959 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !10537)
!10960 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !10537)
!10961 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !10537)
!10962 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !10537)
!10963 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !10537)
!10964 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !10537)
!10965 = !DILocation(line: 199, column: 6, scope: !5065, inlinedAt: !10538)
!10966 = !DILocation(line: 200, column: 21, scope: !5063, inlinedAt: !10538)
!10967 = !DILocation(line: 200, column: 25, scope: !5063, inlinedAt: !10538)
!10968 = !DILocation(line: 200, column: 31, scope: !5063, inlinedAt: !10538)
!10969 = !DILocation(line: 200, column: 7, scope: !5063, inlinedAt: !10538)
!10970 = !DILocation(line: 200, column: 5, scope: !5063, inlinedAt: !10538)
!10971 = !DILocation(line: 200, column: 3, scope: !5063, inlinedAt: !10538)
!10972 = !DILocation(line: 201, column: 9, scope: !5065, inlinedAt: !10538)
!10973 = !DILocation(line: 1236, column: 8, scope: !10539)
!10974 = !DILocation(line: 1236, column: 8, scope: !10540)
!10975 = !DILocation(line: 1237, column: 9, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10539, file: !3, line: 1236, column: 46)
!10977 = !DILocation(line: 1238, column: 5, scope: !10976)
!10978 = !DILocation(line: 1240, column: 3, scope: !10540)
!10979 = !DILocation(line: 1241, column: 2, scope: !10542)
!10980 = !DILocation(line: 1242, column: 7, scope: !10526)
!10981 = !DILocation(line: 1242, column: 7, scope: !10527)
!10982 = !DILocation(line: 1243, column: 23, scope: !10524)
!10983 = !DILocation(line: 1243, column: 29, scope: !10524)
!10984 = !DILocation(line: 1243, column: 35, scope: !10524)
!10985 = !DILocation(line: 1243, column: 41, scope: !10524)
!10986 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !10523)
!10987 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !10522)
!10988 = !DILocation(line: 0, scope: !5187, inlinedAt: !10522)
!10989 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !10522)
!10990 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !10522)
!10991 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !10522)
!10992 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !10522)
!10993 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !10522)
!10994 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !10522)
!10995 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !10522)
!10996 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !10522)
!10997 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !10522)
!10998 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !10522)
!10999 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !10522)
!11000 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !10522)
!11001 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !10522)
!11002 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !10522)
!11003 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !10522)
!11004 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !10522)
!11005 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !10522)
!11006 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !10522)
!11007 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !10522)
!11008 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !10522)
!11009 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !10522)
!11010 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !10522)
!11011 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !10522)
!11012 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !10522)
!11013 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !10522)
!11014 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !10523)
!11015 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !10523)
!11016 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !10523)
!11017 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !10523)
!11018 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !10523)
!11019 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !10523)
!11020 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !10523)
!11021 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !10523)
!11022 = !DILocation(line: 1243, column: 8, scope: !10524)
!11023 = !DILocation(line: 1243, column: 8, scope: !10525)
!11024 = !DILocation(line: 1244, column: 9, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 1243, column: 48)
!11026 = !DILocation(line: 1245, column: 5, scope: !11025)
!11027 = !DILocation(line: 1247, column: 3, scope: !10525)
!11028 = !DILocation(line: 1248, column: 13, scope: !10527)
!11029 = !DILocation(line: 1248, column: 24, scope: !10527)
!11030 = !DILocation(line: 1248, column: 30, scope: !10527)
!11031 = !DILocation(line: 1248, column: 36, scope: !10527)
!11032 = !DILocation(line: 1248, column: 49, scope: !10527)
!11033 = !DILocation(line: 1248, column: 55, scope: !10527)
!11034 = !DILocation(line: 1248, column: 3, scope: !10527)
!11035 = !DILocation(line: 1250, column: 3, scope: !10527)
!11036 = !DILocation(line: 1251, column: 20, scope: !10527)
!11037 = !DILocation(line: 1251, column: 25, scope: !10527)
!11038 = !DILocation(line: 1251, column: 31, scope: !10527)
!11039 = !DILocation(line: 1251, column: 37, scope: !10527)
!11040 = !DILocation(line: 1251, column: 50, scope: !10527)
!11041 = !DILocation(line: 1251, column: 7, scope: !10527)
!11042 = !DILocation(line: 1251, column: 5, scope: !10527)
!11043 = !DILocation(line: 1252, column: 3, scope: !10527)
!11044 = !DILocation(line: 1253, column: 13, scope: !10527)
!11045 = !DILocation(line: 1253, column: 24, scope: !10527)
!11046 = !DILocation(line: 1253, column: 30, scope: !10527)
!11047 = !DILocation(line: 1253, column: 36, scope: !10527)
!11048 = !DILocation(line: 1253, column: 3, scope: !10527)
!11049 = !DILocation(line: 1255, column: 9, scope: !10517)
!11050 = !DILocation(line: 1255, column: 11, scope: !10517)
!11051 = !DILocation(line: 1255, column: 17, scope: !10517)
!11052 = !DILocation(line: 1255, column: 21, scope: !10517)
!11053 = !DILocation(line: 1255, column: 6, scope: !10517)
!11054 = !DILocation(line: 1255, column: 2, scope: !10517)
!11055 = !DILabel(scope: !10517, name: "done", file: !3, line: 1256)
!11056 = !DILocation(line: 1256, column: 2, scope: !10517)
!11057 = !DILocation(line: 1257, column: 8, scope: !10517)
!11058 = !DILocation(line: 1257, column: 2, scope: !10517)
!11059 = !DILocation(line: 1258, column: 30, scope: !10517)
!11060 = !DILocation(line: 1258, column: 35, scope: !10517)
!11061 = !DILocation(line: 1258, column: 2, scope: !10517)
!11062 = !DILocation(line: 1259, column: 9, scope: !10517)
!11063 = !DILocation(line: 1259, column: 2, scope: !10517)
!11064 = !DILocation(line: 1260, column: 1, scope: !10517)
!11065 = distinct !DISubprogram(name: "usb_maxpacket", scope: !129, file: !129, line: 1980, type: !11066, scopeLine: 1981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!11066 = !DISubroutineType(types: !11067)
!11067 = !{!898, !201, !205, !205}
!11068 = !DILocalVariable(name: "udev", arg: 1, scope: !11065, file: !129, line: 1980, type: !201)
!11069 = !DILocation(line: 1980, column: 34, scope: !11065)
!11070 = !DILocalVariable(name: "pipe", arg: 2, scope: !11065, file: !129, line: 1980, type: !205)
!11071 = !DILocation(line: 1980, column: 44, scope: !11065)
!11072 = !DILocalVariable(name: "is_out", arg: 3, scope: !11065, file: !129, line: 1980, type: !205)
!11073 = !DILocation(line: 1980, column: 54, scope: !11065)
!11074 = !DILocalVariable(name: "ep", scope: !11065, file: !129, line: 1982, type: !4321)
!11075 = !DILocation(line: 1982, column: 28, scope: !11065)
!11076 = !DILocalVariable(name: "epnum", scope: !11065, file: !129, line: 1983, type: !7)
!11077 = !DILocation(line: 1983, column: 13, scope: !11065)
!11078 = !DILocation(line: 1983, column: 21, scope: !11065)
!11079 = !DILocation(line: 1985, column: 6, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11065, file: !129, line: 1985, column: 6)
!11081 = !DILocation(line: 1985, column: 6, scope: !11065)
!11082 = !DILocalVariable(name: "__ret_warn_on", scope: !11083, file: !129, line: 1986, type: !205)
!11083 = distinct !DILexicalBlock(scope: !11084, file: !129, line: 1986, column: 3)
!11084 = distinct !DILexicalBlock(scope: !11080, file: !129, line: 1985, column: 14)
!11085 = !DILocation(line: 1986, column: 3, scope: !11083)
!11086 = !DILocation(line: 1986, column: 3, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11083, file: !129, line: 1986, column: 3)
!11088 = !DILocation(line: 1986, column: 3, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !11087, file: !129, line: 1986, column: 3)
!11090 = !DILocation(line: 1986, column: 3, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11089, file: !129, line: 1986, column: 3)
!11092 = !DILocation(line: 1986, column: 3, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11089, file: !129, line: 1986, column: 3)
!11094 = !{i32 -2141939325, i32 -2141939296, i32 -2141939250, i32 -2141939192, i32 -2141939138, i32 -2141939084, i32 -2141939029, i32 -2141938998}
!11095 = !DILocation(line: 1986, column: 3, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11089, file: !129, line: 1986, column: 3)
!11097 = !{i32 -2141938596, i32 -2141938589, i32 -2141938537, i32 -2141938506, i32 -2141938476}
!11098 = !DILocation(line: 1986, column: 3, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11089, file: !129, line: 1986, column: 3)
!11100 = !DILocation(line: 1987, column: 8, scope: !11084)
!11101 = !DILocation(line: 1987, column: 14, scope: !11084)
!11102 = !DILocation(line: 1987, column: 21, scope: !11084)
!11103 = !DILocation(line: 1987, column: 6, scope: !11084)
!11104 = !DILocation(line: 1988, column: 2, scope: !11084)
!11105 = !DILocalVariable(name: "__ret_warn_on", scope: !11106, file: !129, line: 1989, type: !205)
!11106 = distinct !DILexicalBlock(scope: !11107, file: !129, line: 1989, column: 3)
!11107 = distinct !DILexicalBlock(scope: !11080, file: !129, line: 1988, column: 9)
!11108 = !DILocation(line: 1989, column: 3, scope: !11106)
!11109 = !DILocation(line: 1989, column: 3, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11106, file: !129, line: 1989, column: 3)
!11111 = !DILocation(line: 1989, column: 3, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11110, file: !129, line: 1989, column: 3)
!11113 = !DILocation(line: 1989, column: 3, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11112, file: !129, line: 1989, column: 3)
!11115 = !DILocation(line: 1989, column: 3, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11112, file: !129, line: 1989, column: 3)
!11117 = !{i32 -2141937824, i32 -2141937795, i32 -2141937749, i32 -2141937691, i32 -2141937637, i32 -2141937583, i32 -2141937528, i32 -2141937497}
!11118 = !DILocation(line: 1989, column: 3, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11112, file: !129, line: 1989, column: 3)
!11120 = !{i32 -2141937095, i32 -2141937088, i32 -2141937036, i32 -2141937005, i32 -2141936975}
!11121 = !DILocation(line: 1989, column: 3, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11112, file: !129, line: 1989, column: 3)
!11123 = !DILocation(line: 1990, column: 8, scope: !11107)
!11124 = !DILocation(line: 1990, column: 14, scope: !11107)
!11125 = !DILocation(line: 1990, column: 20, scope: !11107)
!11126 = !DILocation(line: 1990, column: 6, scope: !11107)
!11127 = !DILocation(line: 1992, column: 7, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11065, file: !129, line: 1992, column: 6)
!11129 = !DILocation(line: 1992, column: 6, scope: !11065)
!11130 = !DILocation(line: 1993, column: 3, scope: !11128)
!11131 = !DILocation(line: 1996, column: 28, scope: !11065)
!11132 = !DILocation(line: 1996, column: 32, scope: !11065)
!11133 = !DILocation(line: 1996, column: 9, scope: !11065)
!11134 = !DILocation(line: 1996, column: 2, scope: !11065)
!11135 = !DILocation(line: 1997, column: 1, scope: !11065)
!11136 = distinct !DISubprogram(name: "usb_endpoint_maxp", scope: !6, file: !6, line: 647, type: !9271, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!11137 = !DILocalVariable(name: "epd", arg: 1, scope: !11136, file: !6, line: 647, type: !9273)
!11138 = !DILocation(line: 647, column: 75, scope: !11136)
!11139 = !DILocation(line: 649, column: 9, scope: !11136)
!11140 = !DILocation(line: 649, column: 44, scope: !11136)
!11141 = !DILocation(line: 649, column: 2, scope: !11136)
!11142 = distinct !DISubprogram(name: "get_order", scope: !11143, file: !11143, line: 29, type: !11144, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!11143 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!11144 = !DISubroutineType(types: !11145)
!11145 = !{!205, !372}
!11146 = !DILocalVariable(name: "x", arg: 1, scope: !11147, file: !5956, line: 366, type: !466)
!11147 = distinct !DISubprogram(name: "fls64", scope: !5956, file: !5956, line: 366, type: !11148, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!11148 = !DISubroutineType(types: !11149)
!11149 = !{!205, !466}
!11150 = !DILocation(line: 366, column: 40, scope: !11147, inlinedAt: !11151)
!11151 = distinct !DILocation(line: 46, column: 9, scope: !11142)
!11152 = !DILocalVariable(name: "bitpos", scope: !11147, file: !5956, line: 368, type: !205)
!11153 = !DILocation(line: 368, column: 6, scope: !11147, inlinedAt: !11151)
!11154 = !DILocalVariable(name: "size", arg: 1, scope: !11142, file: !11143, line: 29, type: !372)
!11155 = !DILocation(line: 29, column: 63, scope: !11142)
!11156 = !DILocation(line: 31, column: 27, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11142, file: !11143, line: 31, column: 6)
!11158 = !DILocation(line: 31, column: 6, scope: !11157)
!11159 = !DILocation(line: 31, column: 6, scope: !11142)
!11160 = !DILocation(line: 32, column: 8, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11162, file: !11143, line: 32, column: 7)
!11162 = distinct !DILexicalBlock(scope: !11157, file: !11143, line: 31, column: 34)
!11163 = !DILocation(line: 32, column: 7, scope: !11162)
!11164 = !DILocation(line: 33, column: 4, scope: !11161)
!11165 = !DILocation(line: 35, column: 7, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11162, file: !11143, line: 35, column: 7)
!11167 = !DILocation(line: 35, column: 12, scope: !11166)
!11168 = !DILocation(line: 35, column: 7, scope: !11162)
!11169 = !DILocation(line: 36, column: 4, scope: !11166)
!11170 = !DILocation(line: 38, column: 10, scope: !11162)
!11171 = !DILocation(line: 38, column: 28, scope: !11162)
!11172 = !DILocation(line: 38, column: 41, scope: !11162)
!11173 = !DILocation(line: 38, column: 3, scope: !11162)
!11174 = !DILocation(line: 41, column: 6, scope: !11142)
!11175 = !DILocation(line: 42, column: 7, scope: !11142)
!11176 = !DILocation(line: 46, column: 15, scope: !11142)
!11177 = !DILocation(line: 374, column: 2, scope: !11147, inlinedAt: !11151)
!11178 = !DILocation(line: 376, column: 14, scope: !11147, inlinedAt: !11151)
!11179 = !{i32 509375}
!11180 = !DILocation(line: 377, column: 9, scope: !11147, inlinedAt: !11151)
!11181 = !DILocation(line: 377, column: 16, scope: !11147, inlinedAt: !11151)
!11182 = !DILocation(line: 46, column: 2, scope: !11142)
!11183 = !DILocation(line: 48, column: 1, scope: !11142)
!11184 = distinct !DISubprogram(name: "__ilog2_u64", scope: !11185, file: !11185, line: 30, type: !10054, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!11185 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!11186 = !DILocation(line: 366, column: 40, scope: !11147, inlinedAt: !11187)
!11187 = distinct !DILocation(line: 32, column: 9, scope: !11184)
!11188 = !DILocation(line: 368, column: 6, scope: !11147, inlinedAt: !11187)
!11189 = !DILocalVariable(name: "n", arg: 1, scope: !11184, file: !11185, line: 30, type: !465)
!11190 = !DILocation(line: 30, column: 21, scope: !11184)
!11191 = !DILocation(line: 32, column: 15, scope: !11184)
!11192 = !DILocation(line: 374, column: 2, scope: !11147, inlinedAt: !11187)
!11193 = !DILocation(line: 376, column: 14, scope: !11147, inlinedAt: !11187)
!11194 = !DILocation(line: 377, column: 9, scope: !11147, inlinedAt: !11187)
!11195 = !DILocation(line: 377, column: 16, scope: !11147, inlinedAt: !11187)
!11196 = !DILocation(line: 32, column: 18, scope: !11184)
!11197 = !DILocation(line: 32, column: 2, scope: !11184)
!11198 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !11199, file: !11199, line: 137, type: !11200, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!11199 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!11200 = !DISubroutineType(types: !11201)
!11201 = !{!189, !973, !2320, !369, !788}
!11202 = !DILocalVariable(name: "s", arg: 1, scope: !11198, file: !11199, line: 137, type: !973)
!11203 = !DILocation(line: 137, column: 54, scope: !11198)
!11204 = !DILocalVariable(name: "object", arg: 2, scope: !11198, file: !11199, line: 137, type: !2320)
!11205 = !DILocation(line: 137, column: 69, scope: !11198)
!11206 = !DILocalVariable(name: "size", arg: 3, scope: !11198, file: !11199, line: 138, type: !369)
!11207 = !DILocation(line: 138, column: 12, scope: !11198)
!11208 = !DILocalVariable(name: "flags", arg: 4, scope: !11198, file: !11199, line: 138, type: !788)
!11209 = !DILocation(line: 138, column: 24, scope: !11198)
!11210 = !DILocation(line: 140, column: 17, scope: !11198)
!11211 = !DILocation(line: 140, column: 2, scope: !11198)
!11212 = distinct !DISubprogram(name: "check_reset_of_active_ep", scope: !3, file: !3, line: 1271, type: !11213, scopeLine: 1273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!11213 = !DISubroutineType(types: !11214)
!11214 = !{null, !201, !7, !322}
!11215 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !11216)
!11216 = distinct !DILocation(line: 1280, column: 3, scope: !11217)
!11217 = distinct !DILexicalBlock(scope: !11212, file: !3, line: 1279, column: 6)
!11218 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !11216)
!11219 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !11216)
!11220 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !11221)
!11221 = distinct !DILocation(line: 1280, column: 3, scope: !11217)
!11222 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !11221)
!11223 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !11221)
!11224 = !DILocalVariable(name: "udev", arg: 1, scope: !11212, file: !3, line: 1271, type: !201)
!11225 = !DILocation(line: 1271, column: 57, scope: !11212)
!11226 = !DILocalVariable(name: "epnum", arg: 2, scope: !11212, file: !3, line: 1272, type: !7)
!11227 = !DILocation(line: 1272, column: 16, scope: !11212)
!11228 = !DILocalVariable(name: "ioctl_name", arg: 3, scope: !11212, file: !3, line: 1272, type: !322)
!11229 = !DILocation(line: 1272, column: 29, scope: !11212)
!11230 = !DILocalVariable(name: "eps", scope: !11212, file: !3, line: 1274, type: !4724)
!11231 = !DILocation(line: 1274, column: 29, scope: !11212)
!11232 = !DILocalVariable(name: "ep", scope: !11212, file: !3, line: 1275, type: !4321)
!11233 = !DILocation(line: 1275, column: 28, scope: !11212)
!11234 = !DILocation(line: 1277, column: 9, scope: !11212)
!11235 = !DILocation(line: 1277, column: 15, scope: !11212)
!11236 = !DILocation(line: 1277, column: 8, scope: !11212)
!11237 = !DILocation(line: 1277, column: 31, scope: !11212)
!11238 = !DILocation(line: 1277, column: 37, scope: !11212)
!11239 = !DILocation(line: 1277, column: 45, scope: !11212)
!11240 = !DILocation(line: 1277, column: 51, scope: !11212)
!11241 = !DILocation(line: 1277, column: 6, scope: !11212)
!11242 = !DILocation(line: 1278, column: 7, scope: !11212)
!11243 = !DILocation(line: 1278, column: 11, scope: !11212)
!11244 = !DILocation(line: 1278, column: 17, scope: !11212)
!11245 = !DILocation(line: 1278, column: 5, scope: !11212)
!11246 = !DILocation(line: 1279, column: 6, scope: !11217)
!11247 = !DILocation(line: 1279, column: 9, scope: !11217)
!11248 = !DILocation(line: 1279, column: 25, scope: !11217)
!11249 = !DILocation(line: 1279, column: 29, scope: !11217)
!11250 = !DILocation(line: 1279, column: 13, scope: !11217)
!11251 = !DILocation(line: 1279, column: 6, scope: !11212)
!11252 = !DILocation(line: 1280, column: 3, scope: !11217)
!11253 = !DILocation(line: 1283, column: 1, scope: !11212)
!11254 = distinct !DISubprogram(name: "usb_interface_claimed", scope: !129, file: !129, line: 857, type: !4598, scopeLine: 858, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!11255 = !DILocalVariable(name: "iface", arg: 1, scope: !11254, file: !129, line: 857, type: !4299)
!11256 = !DILocation(line: 857, column: 63, scope: !11254)
!11257 = !DILocation(line: 859, column: 10, scope: !11254)
!11258 = !DILocation(line: 859, column: 17, scope: !11254)
!11259 = !DILocation(line: 859, column: 21, scope: !11254)
!11260 = !DILocation(line: 859, column: 28, scope: !11254)
!11261 = !DILocation(line: 859, column: 2, scope: !11254)
!11262 = distinct !DISubprogram(name: "proc_do_submiturb", scope: !3, file: !3, line: 1508, type: !11263, scopeLine: 1511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!11263 = !DISubroutineType(types: !11264)
!11264 = !{!205, !190, !4532, !11265, !189, !2192}
!11265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4554, size: 64)
!11266 = !DILocalVariable(name: "lock", arg: 1, scope: !11267, file: !5444, line: 402, type: !1102)
!11267 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !5444, file: !5444, line: 402, type: !11268, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!11268 = !DISubroutineType(types: !11269)
!11269 = !{null, !1102}
!11270 = !DILocation(line: 402, column: 57, scope: !11267, inlinedAt: !11271)
!11271 = distinct !DILocation(line: 1858, column: 3, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 1832, column: 41)
!11273 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1832, column: 6)
!11274 = !DILocalVariable(name: "lock", arg: 1, scope: !11275, file: !5444, line: 377, type: !1102)
!11275 = distinct !DISubprogram(name: "spin_lock_irq", scope: !5444, file: !5444, line: 377, type: !11268, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!11276 = !DILocation(line: 377, column: 55, scope: !11275, inlinedAt: !11277)
!11277 = distinct !DILocation(line: 1833, column: 3, scope: !11272)
!11278 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !11279)
!11279 = distinct !DILocation(line: 1823, column: 13, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1823, column: 13)
!11281 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !11279)
!11282 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !11279)
!11283 = !DILocation(line: 15, column: 9, scope: !5666, inlinedAt: !11284)
!11284 = distinct !DILocation(line: 1822, column: 29, scope: !11262)
!11285 = !DILocation(line: 15, column: 9, scope: !5676, inlinedAt: !11284)
!11286 = !DILocation(line: 15, column: 9, scope: !5679, inlinedAt: !11284)
!11287 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !11288)
!11288 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !11289)
!11289 = distinct !DILocation(line: 1740, column: 9, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !3, line: 1740, column: 9)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 1739, column: 16)
!11292 = distinct !DILexicalBlock(scope: !11293, file: !3, line: 1739, column: 8)
!11293 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 1732, column: 10)
!11294 = distinct !DILexicalBlock(scope: !11295, file: !3, line: 1727, column: 7)
!11295 = distinct !DILexicalBlock(scope: !11296, file: !3, line: 1726, column: 38)
!11296 = distinct !DILexicalBlock(scope: !11297, file: !3, line: 1726, column: 13)
!11297 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1696, column: 6)
!11298 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !11288)
!11299 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !11288)
!11300 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !11288)
!11301 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !11288)
!11302 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !11289)
!11303 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !11289)
!11304 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !11289)
!11305 = !DILocation(line: 445, column: 72, scope: !10551, inlinedAt: !11306)
!11306 = distinct !DILocation(line: 552, column: 10, scope: !10556, inlinedAt: !11307)
!11307 = distinct !DILocation(line: 1733, column: 31, scope: !11293)
!11308 = !DILocation(line: 446, column: 9, scope: !10551, inlinedAt: !11306)
!11309 = !DILocation(line: 446, column: 23, scope: !10551, inlinedAt: !11306)
!11310 = !DILocation(line: 448, column: 8, scope: !10551, inlinedAt: !11306)
!11311 = !DILocation(line: 318, column: 67, scope: !10569, inlinedAt: !11312)
!11312 = distinct !DILocation(line: 553, column: 20, scope: !10556, inlinedAt: !11307)
!11313 = !DILocation(line: 346, column: 58, scope: !10575, inlinedAt: !11314)
!11314 = distinct !DILocation(line: 547, column: 11, scope: !10556, inlinedAt: !11307)
!11315 = !DILocation(line: 472, column: 28, scope: !10581, inlinedAt: !11316)
!11316 = distinct !DILocation(line: 481, column: 9, scope: !10586, inlinedAt: !11317)
!11317 = distinct !DILocation(line: 545, column: 11, scope: !10588, inlinedAt: !11307)
!11318 = !DILocation(line: 472, column: 40, scope: !10581, inlinedAt: !11316)
!11319 = !DILocation(line: 472, column: 60, scope: !10581, inlinedAt: !11316)
!11320 = !DILocation(line: 478, column: 51, scope: !10586, inlinedAt: !11317)
!11321 = !DILocation(line: 478, column: 63, scope: !10586, inlinedAt: !11317)
!11322 = !DILocation(line: 480, column: 15, scope: !10586, inlinedAt: !11317)
!11323 = !DILocation(line: 538, column: 45, scope: !10558, inlinedAt: !11307)
!11324 = !DILocation(line: 538, column: 57, scope: !10558, inlinedAt: !11307)
!11325 = !DILocation(line: 542, column: 16, scope: !10556, inlinedAt: !11307)
!11326 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !11327)
!11327 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !11328)
!11328 = distinct !DILocation(line: 1718, column: 9, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11330, file: !3, line: 1718, column: 9)
!11330 = distinct !DILexicalBlock(scope: !11331, file: !3, line: 1717, column: 16)
!11331 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 1717, column: 8)
!11332 = distinct !DILexicalBlock(scope: !11333, file: !3, line: 1708, column: 42)
!11333 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 1708, column: 3)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !3, line: 1708, column: 3)
!11335 = distinct !DILexicalBlock(scope: !11297, file: !3, line: 1696, column: 15)
!11336 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !11327)
!11337 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !11327)
!11338 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !11327)
!11339 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !11327)
!11340 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !11328)
!11341 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !11328)
!11342 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !11328)
!11343 = !DILocation(line: 445, column: 72, scope: !10551, inlinedAt: !11344)
!11344 = distinct !DILocation(line: 552, column: 10, scope: !10556, inlinedAt: !11345)
!11345 = distinct !DILocation(line: 1710, column: 10, scope: !11332)
!11346 = !DILocation(line: 446, column: 9, scope: !10551, inlinedAt: !11344)
!11347 = !DILocation(line: 446, column: 23, scope: !10551, inlinedAt: !11344)
!11348 = !DILocation(line: 448, column: 8, scope: !10551, inlinedAt: !11344)
!11349 = !DILocation(line: 318, column: 67, scope: !10569, inlinedAt: !11350)
!11350 = distinct !DILocation(line: 553, column: 20, scope: !10556, inlinedAt: !11345)
!11351 = !DILocation(line: 346, column: 58, scope: !10575, inlinedAt: !11352)
!11352 = distinct !DILocation(line: 547, column: 11, scope: !10556, inlinedAt: !11345)
!11353 = !DILocation(line: 472, column: 28, scope: !10581, inlinedAt: !11354)
!11354 = distinct !DILocation(line: 481, column: 9, scope: !10586, inlinedAt: !11355)
!11355 = distinct !DILocation(line: 545, column: 11, scope: !10588, inlinedAt: !11345)
!11356 = !DILocation(line: 472, column: 40, scope: !10581, inlinedAt: !11354)
!11357 = !DILocation(line: 472, column: 60, scope: !10581, inlinedAt: !11354)
!11358 = !DILocation(line: 478, column: 51, scope: !10586, inlinedAt: !11355)
!11359 = !DILocation(line: 478, column: 63, scope: !10586, inlinedAt: !11355)
!11360 = !DILocation(line: 480, column: 15, scope: !10586, inlinedAt: !11355)
!11361 = !DILocation(line: 538, column: 45, scope: !10558, inlinedAt: !11345)
!11362 = !DILocation(line: 538, column: 57, scope: !10558, inlinedAt: !11345)
!11363 = !DILocation(line: 542, column: 16, scope: !10556, inlinedAt: !11345)
!11364 = !DILocalVariable(name: "bit", arg: 1, scope: !11365, file: !11366, line: 173, type: !897)
!11365 = distinct !DISubprogram(name: "_static_cpu_has", scope: !11366, file: !11366, line: 173, type: !11367, scopeLine: 174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!11366 = !DIFile(filename: "./arch/x86/include/asm/cpufeature.h", directory: "/home/lizy2001/genbc/linux")
!11367 = !DISubroutineType(types: !11368)
!11368 = !{!534, !897}
!11369 = !DILocation(line: 173, column: 49, scope: !11365, inlinedAt: !11370)
!11370 = distinct !DILocation(line: 1665, column: 5, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 1665, column: 5)
!11372 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 1665, column: 5)
!11373 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1664, column: 6)
!11374 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !11375)
!11375 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !11376)
!11376 = distinct !DILocation(line: 1565, column: 7, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1565, column: 7)
!11378 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1555, column: 22)
!11379 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !11375)
!11380 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !11375)
!11381 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !11375)
!11382 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !11375)
!11383 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !11376)
!11384 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !11376)
!11385 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !11376)
!11386 = !DILocation(line: 445, column: 72, scope: !10551, inlinedAt: !11387)
!11387 = distinct !DILocation(line: 552, column: 10, scope: !10556, inlinedAt: !11388)
!11388 = distinct !DILocation(line: 1562, column: 8, scope: !11378)
!11389 = !DILocation(line: 446, column: 9, scope: !10551, inlinedAt: !11387)
!11390 = !DILocation(line: 446, column: 23, scope: !10551, inlinedAt: !11387)
!11391 = !DILocation(line: 448, column: 8, scope: !10551, inlinedAt: !11387)
!11392 = !DILocation(line: 318, column: 67, scope: !10569, inlinedAt: !11393)
!11393 = distinct !DILocation(line: 553, column: 20, scope: !10556, inlinedAt: !11388)
!11394 = !DILocation(line: 346, column: 58, scope: !10575, inlinedAt: !11395)
!11395 = distinct !DILocation(line: 547, column: 11, scope: !10556, inlinedAt: !11388)
!11396 = !DILocation(line: 472, column: 28, scope: !10581, inlinedAt: !11397)
!11397 = distinct !DILocation(line: 481, column: 9, scope: !10586, inlinedAt: !11398)
!11398 = distinct !DILocation(line: 545, column: 11, scope: !10588, inlinedAt: !11388)
!11399 = !DILocation(line: 472, column: 40, scope: !10581, inlinedAt: !11397)
!11400 = !DILocation(line: 472, column: 60, scope: !10581, inlinedAt: !11397)
!11401 = !DILocation(line: 478, column: 51, scope: !10586, inlinedAt: !11398)
!11402 = !DILocation(line: 478, column: 63, scope: !10586, inlinedAt: !11398)
!11403 = !DILocation(line: 480, column: 15, scope: !10586, inlinedAt: !11398)
!11404 = !DILocation(line: 538, column: 45, scope: !10558, inlinedAt: !11388)
!11405 = !DILocation(line: 538, column: 57, scope: !10558, inlinedAt: !11388)
!11406 = !DILocation(line: 542, column: 16, scope: !10556, inlinedAt: !11388)
!11407 = !DILocalVariable(name: "ps", arg: 1, scope: !11262, file: !3, line: 1508, type: !190)
!11408 = !DILocation(line: 1508, column: 52, scope: !11262)
!11409 = !DILocalVariable(name: "uurb", arg: 2, scope: !11262, file: !3, line: 1508, type: !4532)
!11410 = !DILocation(line: 1508, column: 77, scope: !11262)
!11411 = !DILocalVariable(name: "iso_frame_desc", arg: 3, scope: !11262, file: !3, line: 1509, type: !11265)
!11412 = !DILocation(line: 1509, column: 44, scope: !11262)
!11413 = !DILocalVariable(name: "arg", arg: 4, scope: !11262, file: !3, line: 1510, type: !189)
!11414 = !DILocation(line: 1510, column: 17, scope: !11262)
!11415 = !DILocalVariable(name: "userurb_sigval", arg: 5, scope: !11262, file: !3, line: 1510, type: !2192)
!11416 = !DILocation(line: 1510, column: 31, scope: !11262)
!11417 = !DILocalVariable(name: "isopkt", scope: !11262, file: !3, line: 1512, type: !11265)
!11418 = !DILocation(line: 1512, column: 35, scope: !11262)
!11419 = !DILocalVariable(name: "ep", scope: !11262, file: !3, line: 1513, type: !4321)
!11420 = !DILocation(line: 1513, column: 28, scope: !11262)
!11421 = !DILocalVariable(name: "as", scope: !11262, file: !3, line: 1514, type: !4429)
!11422 = !DILocation(line: 1514, column: 16, scope: !11262)
!11423 = !DILocalVariable(name: "dr", scope: !11262, file: !3, line: 1515, type: !11424)
!11424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11425, size: 64)
!11425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ctrlrequest", file: !6, line: 213, size: 64, elements: !11426)
!11426 = !{!11427, !11428, !11429, !11430, !11431}
!11427 = !DIDerivedType(tag: DW_TAG_member, name: "bRequestType", scope: !11425, file: !6, line: 214, baseType: !1390, size: 8)
!11428 = !DIDerivedType(tag: DW_TAG_member, name: "bRequest", scope: !11425, file: !6, line: 215, baseType: !1390, size: 8, offset: 8)
!11429 = !DIDerivedType(tag: DW_TAG_member, name: "wValue", scope: !11425, file: !6, line: 216, baseType: !4159, size: 16, offset: 16)
!11430 = !DIDerivedType(tag: DW_TAG_member, name: "wIndex", scope: !11425, file: !6, line: 217, baseType: !4159, size: 16, offset: 32)
!11431 = !DIDerivedType(tag: DW_TAG_member, name: "wLength", scope: !11425, file: !6, line: 218, baseType: !4159, size: 16, offset: 48)
!11432 = !DILocation(line: 1515, column: 26, scope: !11262)
!11433 = !DILocalVariable(name: "u", scope: !11262, file: !3, line: 1516, type: !7)
!11434 = !DILocation(line: 1516, column: 15, scope: !11262)
!11435 = !DILocalVariable(name: "totlen", scope: !11262, file: !3, line: 1516, type: !7)
!11436 = !DILocation(line: 1516, column: 18, scope: !11262)
!11437 = !DILocalVariable(name: "isofrmlen", scope: !11262, file: !3, line: 1516, type: !7)
!11438 = !DILocation(line: 1516, column: 26, scope: !11262)
!11439 = !DILocalVariable(name: "i", scope: !11262, file: !3, line: 1517, type: !205)
!11440 = !DILocation(line: 1517, column: 6, scope: !11262)
!11441 = !DILocalVariable(name: "ret", scope: !11262, file: !3, line: 1517, type: !205)
!11442 = !DILocation(line: 1517, column: 9, scope: !11262)
!11443 = !DILocalVariable(name: "num_sgs", scope: !11262, file: !3, line: 1517, type: !205)
!11444 = !DILocation(line: 1517, column: 14, scope: !11262)
!11445 = !DILocalVariable(name: "ifnum", scope: !11262, file: !3, line: 1517, type: !205)
!11446 = !DILocation(line: 1517, column: 27, scope: !11262)
!11447 = !DILocalVariable(name: "number_of_packets", scope: !11262, file: !3, line: 1518, type: !205)
!11448 = !DILocation(line: 1518, column: 6, scope: !11262)
!11449 = !DILocalVariable(name: "stream_id", scope: !11262, file: !3, line: 1519, type: !7)
!11450 = !DILocation(line: 1519, column: 15, scope: !11262)
!11451 = !DILocalVariable(name: "buf", scope: !11262, file: !3, line: 1520, type: !189)
!11452 = !DILocation(line: 1520, column: 8, scope: !11262)
!11453 = !DILocalVariable(name: "is_in", scope: !11262, file: !3, line: 1521, type: !534)
!11454 = !DILocation(line: 1521, column: 7, scope: !11262)
!11455 = !DILocalVariable(name: "allow_short", scope: !11262, file: !3, line: 1522, type: !534)
!11456 = !DILocation(line: 1522, column: 7, scope: !11262)
!11457 = !DILocalVariable(name: "allow_zero", scope: !11262, file: !3, line: 1523, type: !534)
!11458 = !DILocation(line: 1523, column: 7, scope: !11262)
!11459 = !DILocalVariable(name: "mask", scope: !11262, file: !3, line: 1524, type: !372)
!11460 = !DILocation(line: 1524, column: 16, scope: !11262)
!11461 = !DILocation(line: 1530, column: 6, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1530, column: 6)
!11463 = !DILocation(line: 1530, column: 12, scope: !11462)
!11464 = !DILocation(line: 1530, column: 17, scope: !11462)
!11465 = !DILocation(line: 1530, column: 6, scope: !11262)
!11466 = !DILocation(line: 1531, column: 8, scope: !11462)
!11467 = !DILocation(line: 1531, column: 3, scope: !11462)
!11468 = !DILocation(line: 1533, column: 6, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1533, column: 6)
!11470 = !DILocation(line: 1533, column: 12, scope: !11469)
!11471 = !DILocation(line: 1533, column: 21, scope: !11469)
!11472 = !DILocation(line: 1533, column: 20, scope: !11469)
!11473 = !DILocation(line: 1533, column: 18, scope: !11469)
!11474 = !DILocation(line: 1533, column: 6, scope: !11262)
!11475 = !DILocation(line: 1534, column: 4, scope: !11469)
!11476 = !DILocation(line: 1536, column: 20, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1536, column: 6)
!11478 = !DILocation(line: 1536, column: 26, scope: !11477)
!11479 = !DILocation(line: 1536, column: 40, scope: !11477)
!11480 = !DILocation(line: 1536, column: 6, scope: !11262)
!11481 = !DILocation(line: 1537, column: 3, scope: !11477)
!11482 = !DILocation(line: 1538, column: 6, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1538, column: 6)
!11484 = !DILocation(line: 1538, column: 12, scope: !11483)
!11485 = !DILocation(line: 1538, column: 26, scope: !11483)
!11486 = !DILocation(line: 1538, column: 30, scope: !11483)
!11487 = !DILocation(line: 1538, column: 34, scope: !11483)
!11488 = !DILocation(line: 1538, column: 40, scope: !11483)
!11489 = !DILocation(line: 1538, column: 6, scope: !11262)
!11490 = !DILocation(line: 1539, column: 3, scope: !11483)
!11491 = !DILocation(line: 1540, column: 8, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1540, column: 6)
!11493 = !DILocation(line: 1540, column: 14, scope: !11492)
!11494 = !DILocation(line: 1540, column: 19, scope: !11492)
!11495 = !DILocation(line: 1540, column: 48, scope: !11492)
!11496 = !DILocation(line: 1541, column: 7, scope: !11492)
!11497 = !DILocation(line: 1541, column: 13, scope: !11492)
!11498 = !DILocation(line: 1541, column: 22, scope: !11492)
!11499 = !DILocation(line: 1541, column: 48, scope: !11492)
!11500 = !DILocation(line: 1540, column: 6, scope: !11262)
!11501 = !DILocation(line: 1542, column: 22, scope: !11502)
!11502 = distinct !DILexicalBlock(scope: !11492, file: !3, line: 1541, column: 55)
!11503 = !DILocation(line: 1542, column: 26, scope: !11502)
!11504 = !DILocation(line: 1542, column: 31, scope: !11502)
!11505 = !DILocation(line: 1542, column: 37, scope: !11502)
!11506 = !DILocation(line: 1542, column: 11, scope: !11502)
!11507 = !DILocation(line: 1542, column: 9, scope: !11502)
!11508 = !DILocation(line: 1543, column: 7, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11502, file: !3, line: 1543, column: 7)
!11510 = !DILocation(line: 1543, column: 13, scope: !11509)
!11511 = !DILocation(line: 1543, column: 7, scope: !11502)
!11512 = !DILocation(line: 1544, column: 11, scope: !11509)
!11513 = !DILocation(line: 1544, column: 4, scope: !11509)
!11514 = !DILocation(line: 1545, column: 19, scope: !11502)
!11515 = !DILocation(line: 1545, column: 23, scope: !11502)
!11516 = !DILocation(line: 1545, column: 9, scope: !11502)
!11517 = !DILocation(line: 1545, column: 7, scope: !11502)
!11518 = !DILocation(line: 1546, column: 7, scope: !11519)
!11519 = distinct !DILexicalBlock(scope: !11502, file: !3, line: 1546, column: 7)
!11520 = !DILocation(line: 1546, column: 7, scope: !11502)
!11521 = !DILocation(line: 1547, column: 11, scope: !11519)
!11522 = !DILocation(line: 1547, column: 4, scope: !11519)
!11523 = !DILocation(line: 1548, column: 2, scope: !11502)
!11524 = !DILocation(line: 1549, column: 27, scope: !11262)
!11525 = !DILocation(line: 1549, column: 31, scope: !11262)
!11526 = !DILocation(line: 1549, column: 36, scope: !11262)
!11527 = !DILocation(line: 1549, column: 42, scope: !11262)
!11528 = !DILocation(line: 1549, column: 7, scope: !11262)
!11529 = !DILocation(line: 1549, column: 5, scope: !11262)
!11530 = !DILocation(line: 1550, column: 7, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1550, column: 6)
!11532 = !DILocation(line: 1550, column: 6, scope: !11262)
!11533 = !DILocation(line: 1551, column: 3, scope: !11531)
!11534 = !DILocation(line: 1552, column: 11, scope: !11262)
!11535 = !DILocation(line: 1552, column: 17, scope: !11262)
!11536 = !DILocation(line: 1552, column: 26, scope: !11262)
!11537 = !DILocation(line: 1552, column: 51, scope: !11262)
!11538 = !DILocation(line: 1552, column: 8, scope: !11262)
!11539 = !DILocation(line: 1554, column: 4, scope: !11262)
!11540 = !DILocation(line: 1555, column: 10, scope: !11262)
!11541 = !DILocation(line: 1555, column: 16, scope: !11262)
!11542 = !DILocation(line: 1555, column: 2, scope: !11262)
!11543 = !DILocation(line: 1557, column: 35, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1557, column: 7)
!11545 = !DILocation(line: 1557, column: 39, scope: !11544)
!11546 = !DILocation(line: 1557, column: 8, scope: !11544)
!11547 = !DILocation(line: 1557, column: 7, scope: !11378)
!11548 = !DILocation(line: 1558, column: 4, scope: !11544)
!11549 = !DILocation(line: 1560, column: 7, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1560, column: 7)
!11551 = !DILocation(line: 1560, column: 13, scope: !11550)
!11552 = !DILocation(line: 1560, column: 27, scope: !11550)
!11553 = !DILocation(line: 1560, column: 7, scope: !11378)
!11554 = !DILocation(line: 1561, column: 4, scope: !11550)
!11555 = !DILocation(line: 540, column: 27, scope: !10557, inlinedAt: !11388)
!11556 = !DILocation(line: 540, column: 6, scope: !10557, inlinedAt: !11388)
!11557 = !DILocation(line: 540, column: 6, scope: !10558, inlinedAt: !11388)
!11558 = !DILocation(line: 544, column: 7, scope: !10588, inlinedAt: !11388)
!11559 = !DILocation(line: 544, column: 12, scope: !10588, inlinedAt: !11388)
!11560 = !DILocation(line: 544, column: 7, scope: !10556, inlinedAt: !11388)
!11561 = !DILocation(line: 545, column: 25, scope: !10588, inlinedAt: !11388)
!11562 = !DILocation(line: 545, column: 31, scope: !10588, inlinedAt: !11388)
!11563 = !DILocation(line: 480, column: 33, scope: !10586, inlinedAt: !11398)
!11564 = !DILocation(line: 480, column: 23, scope: !10586, inlinedAt: !11398)
!11565 = !DILocation(line: 481, column: 29, scope: !10586, inlinedAt: !11398)
!11566 = !DILocation(line: 481, column: 35, scope: !10586, inlinedAt: !11398)
!11567 = !DILocation(line: 481, column: 42, scope: !10586, inlinedAt: !11398)
!11568 = !DILocation(line: 474, column: 23, scope: !10581, inlinedAt: !11397)
!11569 = !DILocation(line: 474, column: 29, scope: !10581, inlinedAt: !11397)
!11570 = !DILocation(line: 474, column: 36, scope: !10581, inlinedAt: !11397)
!11571 = !DILocation(line: 474, column: 9, scope: !10581, inlinedAt: !11397)
!11572 = !DILocation(line: 545, column: 4, scope: !10588, inlinedAt: !11388)
!11573 = !DILocation(line: 547, column: 25, scope: !10556, inlinedAt: !11388)
!11574 = !DILocation(line: 348, column: 7, scope: !10706, inlinedAt: !11395)
!11575 = !DILocation(line: 348, column: 6, scope: !10575, inlinedAt: !11395)
!11576 = !DILocation(line: 349, column: 3, scope: !10706, inlinedAt: !11395)
!11577 = !DILocation(line: 351, column: 6, scope: !10710, inlinedAt: !11395)
!11578 = !DILocation(line: 351, column: 11, scope: !10710, inlinedAt: !11395)
!11579 = !DILocation(line: 351, column: 6, scope: !10575, inlinedAt: !11395)
!11580 = !DILocation(line: 352, column: 3, scope: !10710, inlinedAt: !11395)
!11581 = !DILocation(line: 354, column: 32, scope: !10715, inlinedAt: !11395)
!11582 = !DILocation(line: 354, column: 37, scope: !10715, inlinedAt: !11395)
!11583 = !DILocation(line: 354, column: 42, scope: !10715, inlinedAt: !11395)
!11584 = !DILocation(line: 354, column: 45, scope: !10715, inlinedAt: !11395)
!11585 = !DILocation(line: 354, column: 50, scope: !10715, inlinedAt: !11395)
!11586 = !DILocation(line: 354, column: 6, scope: !10575, inlinedAt: !11395)
!11587 = !DILocation(line: 355, column: 3, scope: !10715, inlinedAt: !11395)
!11588 = !DILocation(line: 356, column: 32, scope: !10723, inlinedAt: !11395)
!11589 = !DILocation(line: 356, column: 37, scope: !10723, inlinedAt: !11395)
!11590 = !DILocation(line: 356, column: 43, scope: !10723, inlinedAt: !11395)
!11591 = !DILocation(line: 356, column: 46, scope: !10723, inlinedAt: !11395)
!11592 = !DILocation(line: 356, column: 51, scope: !10723, inlinedAt: !11395)
!11593 = !DILocation(line: 356, column: 6, scope: !10575, inlinedAt: !11395)
!11594 = !DILocation(line: 357, column: 3, scope: !10723, inlinedAt: !11395)
!11595 = !DILocation(line: 358, column: 6, scope: !10731, inlinedAt: !11395)
!11596 = !DILocation(line: 358, column: 11, scope: !10731, inlinedAt: !11395)
!11597 = !DILocation(line: 358, column: 6, scope: !10575, inlinedAt: !11395)
!11598 = !DILocation(line: 358, column: 26, scope: !10731, inlinedAt: !11395)
!11599 = !DILocation(line: 359, column: 6, scope: !10736, inlinedAt: !11395)
!11600 = !DILocation(line: 359, column: 11, scope: !10736, inlinedAt: !11395)
!11601 = !DILocation(line: 359, column: 6, scope: !10575, inlinedAt: !11395)
!11602 = !DILocation(line: 359, column: 26, scope: !10736, inlinedAt: !11395)
!11603 = !DILocation(line: 360, column: 6, scope: !10741, inlinedAt: !11395)
!11604 = !DILocation(line: 360, column: 11, scope: !10741, inlinedAt: !11395)
!11605 = !DILocation(line: 360, column: 6, scope: !10575, inlinedAt: !11395)
!11606 = !DILocation(line: 360, column: 26, scope: !10741, inlinedAt: !11395)
!11607 = !DILocation(line: 361, column: 6, scope: !10746, inlinedAt: !11395)
!11608 = !DILocation(line: 361, column: 11, scope: !10746, inlinedAt: !11395)
!11609 = !DILocation(line: 361, column: 6, scope: !10575, inlinedAt: !11395)
!11610 = !DILocation(line: 361, column: 26, scope: !10746, inlinedAt: !11395)
!11611 = !DILocation(line: 362, column: 6, scope: !10751, inlinedAt: !11395)
!11612 = !DILocation(line: 362, column: 11, scope: !10751, inlinedAt: !11395)
!11613 = !DILocation(line: 362, column: 6, scope: !10575, inlinedAt: !11395)
!11614 = !DILocation(line: 362, column: 26, scope: !10751, inlinedAt: !11395)
!11615 = !DILocation(line: 363, column: 6, scope: !10756, inlinedAt: !11395)
!11616 = !DILocation(line: 363, column: 11, scope: !10756, inlinedAt: !11395)
!11617 = !DILocation(line: 363, column: 6, scope: !10575, inlinedAt: !11395)
!11618 = !DILocation(line: 363, column: 26, scope: !10756, inlinedAt: !11395)
!11619 = !DILocation(line: 364, column: 6, scope: !10761, inlinedAt: !11395)
!11620 = !DILocation(line: 364, column: 11, scope: !10761, inlinedAt: !11395)
!11621 = !DILocation(line: 364, column: 6, scope: !10575, inlinedAt: !11395)
!11622 = !DILocation(line: 364, column: 26, scope: !10761, inlinedAt: !11395)
!11623 = !DILocation(line: 365, column: 6, scope: !10766, inlinedAt: !11395)
!11624 = !DILocation(line: 365, column: 11, scope: !10766, inlinedAt: !11395)
!11625 = !DILocation(line: 365, column: 6, scope: !10575, inlinedAt: !11395)
!11626 = !DILocation(line: 365, column: 26, scope: !10766, inlinedAt: !11395)
!11627 = !DILocation(line: 366, column: 6, scope: !10771, inlinedAt: !11395)
!11628 = !DILocation(line: 366, column: 11, scope: !10771, inlinedAt: !11395)
!11629 = !DILocation(line: 366, column: 6, scope: !10575, inlinedAt: !11395)
!11630 = !DILocation(line: 366, column: 26, scope: !10771, inlinedAt: !11395)
!11631 = !DILocation(line: 367, column: 6, scope: !10776, inlinedAt: !11395)
!11632 = !DILocation(line: 367, column: 11, scope: !10776, inlinedAt: !11395)
!11633 = !DILocation(line: 367, column: 6, scope: !10575, inlinedAt: !11395)
!11634 = !DILocation(line: 367, column: 26, scope: !10776, inlinedAt: !11395)
!11635 = !DILocation(line: 368, column: 6, scope: !10781, inlinedAt: !11395)
!11636 = !DILocation(line: 368, column: 11, scope: !10781, inlinedAt: !11395)
!11637 = !DILocation(line: 368, column: 6, scope: !10575, inlinedAt: !11395)
!11638 = !DILocation(line: 368, column: 26, scope: !10781, inlinedAt: !11395)
!11639 = !DILocation(line: 369, column: 6, scope: !10786, inlinedAt: !11395)
!11640 = !DILocation(line: 369, column: 11, scope: !10786, inlinedAt: !11395)
!11641 = !DILocation(line: 369, column: 6, scope: !10575, inlinedAt: !11395)
!11642 = !DILocation(line: 369, column: 26, scope: !10786, inlinedAt: !11395)
!11643 = !DILocation(line: 370, column: 6, scope: !10791, inlinedAt: !11395)
!11644 = !DILocation(line: 370, column: 11, scope: !10791, inlinedAt: !11395)
!11645 = !DILocation(line: 370, column: 6, scope: !10575, inlinedAt: !11395)
!11646 = !DILocation(line: 370, column: 26, scope: !10791, inlinedAt: !11395)
!11647 = !DILocation(line: 371, column: 6, scope: !10796, inlinedAt: !11395)
!11648 = !DILocation(line: 371, column: 11, scope: !10796, inlinedAt: !11395)
!11649 = !DILocation(line: 371, column: 6, scope: !10575, inlinedAt: !11395)
!11650 = !DILocation(line: 371, column: 26, scope: !10796, inlinedAt: !11395)
!11651 = !DILocation(line: 372, column: 6, scope: !10801, inlinedAt: !11395)
!11652 = !DILocation(line: 372, column: 11, scope: !10801, inlinedAt: !11395)
!11653 = !DILocation(line: 372, column: 6, scope: !10575, inlinedAt: !11395)
!11654 = !DILocation(line: 372, column: 26, scope: !10801, inlinedAt: !11395)
!11655 = !DILocation(line: 373, column: 6, scope: !10806, inlinedAt: !11395)
!11656 = !DILocation(line: 373, column: 11, scope: !10806, inlinedAt: !11395)
!11657 = !DILocation(line: 373, column: 6, scope: !10575, inlinedAt: !11395)
!11658 = !DILocation(line: 373, column: 26, scope: !10806, inlinedAt: !11395)
!11659 = !DILocation(line: 374, column: 6, scope: !10811, inlinedAt: !11395)
!11660 = !DILocation(line: 374, column: 11, scope: !10811, inlinedAt: !11395)
!11661 = !DILocation(line: 374, column: 6, scope: !10575, inlinedAt: !11395)
!11662 = !DILocation(line: 374, column: 26, scope: !10811, inlinedAt: !11395)
!11663 = !DILocation(line: 375, column: 6, scope: !10816, inlinedAt: !11395)
!11664 = !DILocation(line: 375, column: 11, scope: !10816, inlinedAt: !11395)
!11665 = !DILocation(line: 375, column: 6, scope: !10575, inlinedAt: !11395)
!11666 = !DILocation(line: 375, column: 27, scope: !10816, inlinedAt: !11395)
!11667 = !DILocation(line: 376, column: 6, scope: !10821, inlinedAt: !11395)
!11668 = !DILocation(line: 376, column: 11, scope: !10821, inlinedAt: !11395)
!11669 = !DILocation(line: 376, column: 6, scope: !10575, inlinedAt: !11395)
!11670 = !DILocation(line: 376, column: 32, scope: !10821, inlinedAt: !11395)
!11671 = !DILocation(line: 377, column: 6, scope: !10826, inlinedAt: !11395)
!11672 = !DILocation(line: 377, column: 11, scope: !10826, inlinedAt: !11395)
!11673 = !DILocation(line: 377, column: 6, scope: !10575, inlinedAt: !11395)
!11674 = !DILocation(line: 377, column: 32, scope: !10826, inlinedAt: !11395)
!11675 = !DILocation(line: 378, column: 6, scope: !10831, inlinedAt: !11395)
!11676 = !DILocation(line: 378, column: 11, scope: !10831, inlinedAt: !11395)
!11677 = !DILocation(line: 378, column: 6, scope: !10575, inlinedAt: !11395)
!11678 = !DILocation(line: 378, column: 32, scope: !10831, inlinedAt: !11395)
!11679 = !DILocation(line: 379, column: 6, scope: !10836, inlinedAt: !11395)
!11680 = !DILocation(line: 379, column: 11, scope: !10836, inlinedAt: !11395)
!11681 = !DILocation(line: 379, column: 6, scope: !10575, inlinedAt: !11395)
!11682 = !DILocation(line: 379, column: 33, scope: !10836, inlinedAt: !11395)
!11683 = !DILocation(line: 380, column: 6, scope: !10841, inlinedAt: !11395)
!11684 = !DILocation(line: 380, column: 11, scope: !10841, inlinedAt: !11395)
!11685 = !DILocation(line: 380, column: 6, scope: !10575, inlinedAt: !11395)
!11686 = !DILocation(line: 380, column: 33, scope: !10841, inlinedAt: !11395)
!11687 = !DILocation(line: 381, column: 6, scope: !10846, inlinedAt: !11395)
!11688 = !DILocation(line: 381, column: 11, scope: !10846, inlinedAt: !11395)
!11689 = !DILocation(line: 381, column: 6, scope: !10575, inlinedAt: !11395)
!11690 = !DILocation(line: 381, column: 33, scope: !10846, inlinedAt: !11395)
!11691 = !DILocation(line: 382, column: 2, scope: !10851, inlinedAt: !11395)
!11692 = !DILocation(line: 382, column: 2, scope: !10855, inlinedAt: !11395)
!11693 = !DILocation(line: 382, column: 2, scope: !10856, inlinedAt: !11395)
!11694 = !DILocation(line: 386, column: 1, scope: !10575, inlinedAt: !11395)
!11695 = !DILocation(line: 547, column: 9, scope: !10556, inlinedAt: !11388)
!11696 = !DILocation(line: 549, column: 8, scope: !10862, inlinedAt: !11388)
!11697 = !DILocation(line: 549, column: 7, scope: !10556, inlinedAt: !11388)
!11698 = !DILocation(line: 550, column: 4, scope: !10862, inlinedAt: !11388)
!11699 = !DILocation(line: 553, column: 33, scope: !10556, inlinedAt: !11388)
!11700 = !DILocation(line: 325, column: 6, scope: !10867, inlinedAt: !11393)
!11701 = !DILocation(line: 325, column: 6, scope: !10569, inlinedAt: !11393)
!11702 = !DILocation(line: 326, column: 3, scope: !10867, inlinedAt: !11393)
!11703 = !DILocation(line: 332, column: 9, scope: !10569, inlinedAt: !11393)
!11704 = !DILocation(line: 332, column: 15, scope: !10569, inlinedAt: !11393)
!11705 = !DILocation(line: 332, column: 2, scope: !10569, inlinedAt: !11393)
!11706 = !DILocation(line: 336, column: 1, scope: !10569, inlinedAt: !11393)
!11707 = !DILocation(line: 553, column: 5, scope: !10556, inlinedAt: !11388)
!11708 = !DILocation(line: 553, column: 41, scope: !10556, inlinedAt: !11388)
!11709 = !DILocation(line: 554, column: 5, scope: !10556, inlinedAt: !11388)
!11710 = !DILocation(line: 554, column: 12, scope: !10556, inlinedAt: !11388)
!11711 = !DILocation(line: 448, column: 31, scope: !10551, inlinedAt: !11387)
!11712 = !DILocation(line: 448, column: 34, scope: !10551, inlinedAt: !11387)
!11713 = !DILocation(line: 448, column: 14, scope: !10551, inlinedAt: !11387)
!11714 = !DILocation(line: 450, column: 22, scope: !10551, inlinedAt: !11387)
!11715 = !DILocation(line: 450, column: 25, scope: !10551, inlinedAt: !11387)
!11716 = !DILocation(line: 450, column: 30, scope: !10551, inlinedAt: !11387)
!11717 = !DILocation(line: 450, column: 36, scope: !10551, inlinedAt: !11387)
!11718 = !DILocation(line: 450, column: 8, scope: !10551, inlinedAt: !11387)
!11719 = !DILocation(line: 450, column: 6, scope: !10551, inlinedAt: !11387)
!11720 = !DILocation(line: 451, column: 9, scope: !10551, inlinedAt: !11387)
!11721 = !DILocation(line: 552, column: 3, scope: !10556, inlinedAt: !11388)
!11722 = !DILocation(line: 557, column: 19, scope: !10558, inlinedAt: !11388)
!11723 = !DILocation(line: 557, column: 25, scope: !10558, inlinedAt: !11388)
!11724 = !DILocation(line: 557, column: 9, scope: !10558, inlinedAt: !11388)
!11725 = !DILocation(line: 557, column: 2, scope: !10558, inlinedAt: !11388)
!11726 = !DILocation(line: 558, column: 1, scope: !10558, inlinedAt: !11388)
!11727 = !DILocation(line: 1562, column: 8, scope: !11378)
!11728 = !DILocation(line: 1562, column: 6, scope: !11378)
!11729 = !DILocation(line: 1563, column: 8, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1563, column: 7)
!11731 = !DILocation(line: 1563, column: 7, scope: !11378)
!11732 = !DILocation(line: 1564, column: 4, scope: !11730)
!11733 = !DILocation(line: 1565, column: 22, scope: !11377)
!11734 = !DILocation(line: 1565, column: 26, scope: !11377)
!11735 = !DILocation(line: 1565, column: 32, scope: !11377)
!11736 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !11376)
!11737 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !11375)
!11738 = !DILocation(line: 0, scope: !5187, inlinedAt: !11375)
!11739 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !11375)
!11740 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !11375)
!11741 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !11375)
!11742 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !11375)
!11743 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !11375)
!11744 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !11375)
!11745 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !11375)
!11746 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !11375)
!11747 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !11375)
!11748 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !11375)
!11749 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !11375)
!11750 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !11375)
!11751 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !11375)
!11752 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !11375)
!11753 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !11375)
!11754 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !11375)
!11755 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !11375)
!11756 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !11375)
!11757 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !11375)
!11758 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !11375)
!11759 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !11375)
!11760 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !11375)
!11761 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !11375)
!11762 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !11375)
!11763 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !11375)
!11764 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !11376)
!11765 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !11376)
!11766 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !11376)
!11767 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !11376)
!11768 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !11376)
!11769 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !11376)
!11770 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !11376)
!11771 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !11376)
!11772 = !DILocation(line: 1565, column: 7, scope: !11377)
!11773 = !DILocation(line: 1565, column: 7, scope: !11378)
!11774 = !DILocation(line: 1566, column: 8, scope: !11775)
!11775 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 1565, column: 44)
!11776 = !DILocation(line: 1567, column: 4, scope: !11775)
!11777 = !DILocation(line: 1569, column: 7, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1569, column: 7)
!11779 = !DILocation(line: 1569, column: 13, scope: !11778)
!11780 = !DILocation(line: 1569, column: 30, scope: !11778)
!11781 = !DILocation(line: 1569, column: 55, scope: !11778)
!11782 = !DILocation(line: 1569, column: 27, scope: !11778)
!11783 = !DILocation(line: 1569, column: 7, scope: !11378)
!11784 = !DILocation(line: 1570, column: 8, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11778, file: !3, line: 1569, column: 61)
!11786 = !DILocation(line: 1571, column: 4, scope: !11785)
!11787 = !DILocation(line: 1573, column: 25, scope: !11378)
!11788 = !DILocation(line: 1573, column: 29, scope: !11378)
!11789 = !DILocation(line: 1573, column: 33, scope: !11378)
!11790 = !DILocation(line: 1573, column: 47, scope: !11378)
!11791 = !DILocation(line: 1573, column: 51, scope: !11378)
!11792 = !DILocation(line: 1574, column: 11, scope: !11378)
!11793 = !DILocation(line: 1573, column: 9, scope: !11378)
!11794 = !DILocation(line: 1573, column: 7, scope: !11378)
!11795 = !DILocation(line: 1575, column: 7, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1575, column: 7)
!11797 = !DILocation(line: 1575, column: 7, scope: !11378)
!11798 = !DILocation(line: 1576, column: 4, scope: !11796)
!11799 = !DILocation(line: 1577, column: 25, scope: !11378)
!11800 = !DILocation(line: 1577, column: 3, scope: !11378)
!11801 = !DILocation(line: 1577, column: 9, scope: !11378)
!11802 = !DILocation(line: 1577, column: 23, scope: !11378)
!11803 = !DILocation(line: 1578, column: 3, scope: !11378)
!11804 = !DILocation(line: 1578, column: 9, scope: !11378)
!11805 = !DILocation(line: 1578, column: 16, scope: !11378)
!11806 = !DILocation(line: 1579, column: 8, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1579, column: 7)
!11808 = !DILocation(line: 1579, column: 12, scope: !11807)
!11809 = !DILocation(line: 1579, column: 25, scope: !11807)
!11810 = !DILocation(line: 1579, column: 39, scope: !11807)
!11811 = !DILocation(line: 1579, column: 42, scope: !11807)
!11812 = !DILocation(line: 1579, column: 48, scope: !11807)
!11813 = !DILocation(line: 1579, column: 7, scope: !11378)
!11814 = !DILocation(line: 1580, column: 10, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 1579, column: 63)
!11816 = !DILocation(line: 1581, column: 4, scope: !11815)
!11817 = !DILocation(line: 1581, column: 10, scope: !11815)
!11818 = !DILocation(line: 1581, column: 19, scope: !11815)
!11819 = !DILocation(line: 1582, column: 3, scope: !11815)
!11820 = !DILocation(line: 1583, column: 10, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 1582, column: 10)
!11822 = !DILocation(line: 1584, column: 4, scope: !11821)
!11823 = !DILocation(line: 1584, column: 10, scope: !11821)
!11824 = !DILocation(line: 1584, column: 19, scope: !11821)
!11825 = !DILocation(line: 1586, column: 7, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1586, column: 7)
!11827 = !DILocation(line: 1586, column: 7, scope: !11378)
!11828 = !DILocation(line: 1587, column: 16, scope: !11826)
!11829 = !DILocation(line: 1587, column: 4, scope: !11826)
!11830 = !DILocation(line: 1588, column: 3, scope: !11378)
!11831 = !DILocation(line: 1588, column: 3, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11833, file: !3, line: 1588, column: 3)
!11833 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1588, column: 3)
!11834 = !DILocation(line: 1588, column: 3, scope: !11833)
!11835 = !DILocation(line: 1595, column: 5, scope: !11378)
!11836 = !DILocation(line: 1596, column: 3, scope: !11378)
!11837 = !DILocation(line: 1599, column: 8, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1599, column: 7)
!11839 = !DILocation(line: 1599, column: 7, scope: !11378)
!11840 = !DILocation(line: 1600, column: 15, scope: !11838)
!11841 = !DILocation(line: 1600, column: 4, scope: !11838)
!11842 = !DILocation(line: 1602, column: 16, scope: !11838)
!11843 = !DILocation(line: 1603, column: 30, scope: !11378)
!11844 = !DILocation(line: 1603, column: 34, scope: !11378)
!11845 = !DILocation(line: 1603, column: 11, scope: !11378)
!11846 = !DILocation(line: 1603, column: 3, scope: !11378)
!11847 = !DILocation(line: 1606, column: 4, scope: !11848)
!11848 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1603, column: 41)
!11849 = !DILocation(line: 1609, column: 4, scope: !11848)
!11850 = !DILocation(line: 1609, column: 10, scope: !11848)
!11851 = !DILocation(line: 1609, column: 15, scope: !11848)
!11852 = !DILocation(line: 1610, column: 4, scope: !11848)
!11853 = !DILocation(line: 1612, column: 13, scope: !11378)
!11854 = !DILocation(line: 1612, column: 11, scope: !11378)
!11855 = !DILocation(line: 1613, column: 7, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1613, column: 7)
!11857 = !DILocation(line: 1613, column: 15, scope: !11856)
!11858 = !DILocation(line: 1613, column: 20, scope: !11856)
!11859 = !DILocation(line: 1613, column: 23, scope: !11856)
!11860 = !DILocation(line: 1613, column: 33, scope: !11856)
!11861 = !DILocation(line: 1613, column: 37, scope: !11856)
!11862 = !DILocation(line: 1613, column: 42, scope: !11856)
!11863 = !DILocation(line: 1613, column: 47, scope: !11856)
!11864 = !DILocation(line: 1613, column: 31, scope: !11856)
!11865 = !DILocation(line: 1613, column: 7, scope: !11378)
!11866 = !DILocation(line: 1614, column: 12, scope: !11856)
!11867 = !DILocation(line: 1614, column: 4, scope: !11856)
!11868 = !DILocation(line: 1615, column: 7, scope: !11869)
!11869 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1615, column: 7)
!11870 = !DILocation(line: 1615, column: 11, scope: !11869)
!11871 = !DILocation(line: 1615, column: 7, scope: !11378)
!11872 = !DILocation(line: 1616, column: 16, scope: !11869)
!11873 = !DILocation(line: 1616, column: 22, scope: !11869)
!11874 = !DILocation(line: 1616, column: 14, scope: !11869)
!11875 = !DILocation(line: 1616, column: 4, scope: !11869)
!11876 = !DILocation(line: 1617, column: 3, scope: !11378)
!11877 = !DILocation(line: 1620, column: 31, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1620, column: 7)
!11879 = !DILocation(line: 1620, column: 35, scope: !11878)
!11880 = !DILocation(line: 1620, column: 8, scope: !11878)
!11881 = !DILocation(line: 1620, column: 7, scope: !11378)
!11882 = !DILocation(line: 1621, column: 4, scope: !11878)
!11883 = !DILocation(line: 1620, column: 39, scope: !11878)
!11884 = !DILabel(scope: !11378, name: "interrupt_urb", file: !3, line: 1622)
!11885 = !DILocation(line: 1622, column: 2, scope: !11378)
!11886 = !DILocation(line: 1623, column: 8, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1623, column: 7)
!11888 = !DILocation(line: 1623, column: 7, scope: !11378)
!11889 = !DILocation(line: 1624, column: 15, scope: !11887)
!11890 = !DILocation(line: 1624, column: 4, scope: !11887)
!11891 = !DILocation(line: 1626, column: 16, scope: !11887)
!11892 = !DILocation(line: 1627, column: 3, scope: !11378)
!11893 = !DILocation(line: 1631, column: 7, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1631, column: 7)
!11895 = !DILocation(line: 1631, column: 13, scope: !11894)
!11896 = !DILocation(line: 1631, column: 31, scope: !11894)
!11897 = !DILocation(line: 1631, column: 35, scope: !11894)
!11898 = !DILocation(line: 1632, column: 7, scope: !11894)
!11899 = !DILocation(line: 1632, column: 13, scope: !11894)
!11900 = !DILocation(line: 1632, column: 31, scope: !11894)
!11901 = !DILocation(line: 1631, column: 7, scope: !11378)
!11902 = !DILocation(line: 1633, column: 4, scope: !11894)
!11903 = !DILocation(line: 1634, column: 32, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1634, column: 7)
!11905 = !DILocation(line: 1634, column: 36, scope: !11904)
!11906 = !DILocation(line: 1634, column: 8, scope: !11904)
!11907 = !DILocation(line: 1634, column: 7, scope: !11378)
!11908 = !DILocation(line: 1635, column: 4, scope: !11904)
!11909 = !DILocation(line: 1636, column: 23, scope: !11378)
!11910 = !DILocation(line: 1636, column: 29, scope: !11378)
!11911 = !DILocation(line: 1636, column: 21, scope: !11378)
!11912 = !DILocation(line: 1638, column: 8, scope: !11378)
!11913 = !DILocation(line: 1637, column: 55, scope: !11378)
!11914 = !DILocation(line: 1637, column: 15, scope: !11378)
!11915 = !DILocation(line: 1637, column: 13, scope: !11378)
!11916 = !DILocation(line: 1639, column: 24, scope: !11378)
!11917 = !DILocation(line: 1639, column: 40, scope: !11378)
!11918 = !DILocation(line: 1639, column: 12, scope: !11378)
!11919 = !DILocation(line: 1639, column: 10, scope: !11378)
!11920 = !DILocation(line: 1640, column: 14, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1640, column: 7)
!11922 = !DILocation(line: 1640, column: 7, scope: !11921)
!11923 = !DILocation(line: 1640, column: 7, scope: !11378)
!11924 = !DILocation(line: 1641, column: 18, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11921, file: !3, line: 1640, column: 23)
!11926 = !DILocation(line: 1641, column: 10, scope: !11925)
!11927 = !DILocation(line: 1641, column: 8, scope: !11925)
!11928 = !DILocation(line: 1642, column: 11, scope: !11925)
!11929 = !DILocation(line: 1643, column: 4, scope: !11925)
!11930 = !DILocation(line: 1645, column: 19, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 1645, column: 3)
!11932 = !DILocation(line: 1645, column: 15, scope: !11931)
!11933 = !DILocation(line: 1645, column: 8, scope: !11931)
!11934 = !DILocation(line: 1645, column: 24, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11931, file: !3, line: 1645, column: 3)
!11936 = !DILocation(line: 1645, column: 28, scope: !11935)
!11937 = !DILocation(line: 1645, column: 26, scope: !11935)
!11938 = !DILocation(line: 1645, column: 3, scope: !11931)
!11939 = !DILocation(line: 1650, column: 8, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11941, file: !3, line: 1650, column: 8)
!11941 = distinct !DILexicalBlock(scope: !11935, file: !3, line: 1645, column: 52)
!11942 = !DILocation(line: 1650, column: 15, scope: !11940)
!11943 = !DILocation(line: 1650, column: 18, scope: !11940)
!11944 = !DILocation(line: 1650, column: 25, scope: !11940)
!11945 = !DILocation(line: 1650, column: 8, scope: !11941)
!11946 = !DILocation(line: 1651, column: 9, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 1650, column: 34)
!11948 = !DILocation(line: 1652, column: 5, scope: !11947)
!11949 = !DILocation(line: 1654, column: 14, scope: !11941)
!11950 = !DILocation(line: 1654, column: 21, scope: !11941)
!11951 = !DILocation(line: 1654, column: 24, scope: !11941)
!11952 = !DILocation(line: 1654, column: 11, scope: !11941)
!11953 = !DILocation(line: 1655, column: 3, scope: !11941)
!11954 = !DILocation(line: 1645, column: 48, scope: !11935)
!11955 = !DILocation(line: 1645, column: 3, scope: !11935)
!11956 = distinct !{!11956, !11938, !11957}
!11957 = !DILocation(line: 1655, column: 3, scope: !11931)
!11958 = !DILocation(line: 1656, column: 5, scope: !11378)
!11959 = !DILocation(line: 1657, column: 25, scope: !11378)
!11960 = !DILocation(line: 1657, column: 3, scope: !11378)
!11961 = !DILocation(line: 1657, column: 9, scope: !11378)
!11962 = !DILocation(line: 1657, column: 23, scope: !11378)
!11963 = !DILocation(line: 1658, column: 3, scope: !11378)
!11964 = !DILocation(line: 1661, column: 3, scope: !11378)
!11965 = !DILocation(line: 1664, column: 6, scope: !11373)
!11966 = !DILocation(line: 1664, column: 12, scope: !11373)
!11967 = !DILocation(line: 1664, column: 26, scope: !11373)
!11968 = !DILocation(line: 1664, column: 30, scope: !11373)
!11969 = !DILocation(line: 1665, column: 5, scope: !11371)
!11970 = !DILocation(line: 175, column: 2, scope: !11365, inlinedAt: !11370)
!11971 = !{i32 -2145478037, i32 -2145478019, i32 -2145478009, i32 -2145477935, i32 -2145477925, i32 -2145477886, i32 -2145477847, i32 -2145477807, i32 -2145477760, i32 -2145477723, i32 -2145477685, i32 -2145477648, i32 -2145477631, i32 -2145477586, i32 -2145477563, i32 -2145477553, i32 -2145477536, i32 -2145477497, i32 -2145477458, i32 -2145477419, i32 -2145477374, i32 -2145477337, i32 -2145477304, i32 -2145477272, i32 -2145477255, i32 -2145477218, i32 -2145477208, i32 -2145477172, i32 -2145477150, i32 -2145477129}
!11972 = !DILabel(scope: !11365, name: "t_yes", file: !11366, line: 211)
!11973 = !DILocation(line: 211, column: 1, scope: !11365, inlinedAt: !11370)
!11974 = !DILocation(line: 212, column: 2, scope: !11365, inlinedAt: !11370)
!11975 = !DILabel(scope: !11365, name: "t_no", file: !11366, line: 213)
!11976 = !DILocation(line: 213, column: 1, scope: !11365, inlinedAt: !11370)
!11977 = !DILocation(line: 214, column: 2, scope: !11365, inlinedAt: !11370)
!11978 = !DILocation(line: 215, column: 1, scope: !11365, inlinedAt: !11370)
!11979 = !DILocation(line: 1665, column: 5, scope: !11372)
!11980 = !DILocation(line: 1665, column: 5, scope: !11373)
!11981 = !DILocation(line: 1664, column: 6, scope: !11262)
!11982 = !DILocation(line: 1666, column: 7, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 1665, column: 51)
!11984 = !DILocation(line: 1667, column: 3, scope: !11983)
!11985 = !DILocation(line: 1669, column: 19, scope: !11262)
!11986 = !DILocation(line: 1669, column: 7, scope: !11262)
!11987 = !DILocation(line: 1669, column: 5, scope: !11262)
!11988 = !DILocation(line: 1670, column: 7, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1670, column: 6)
!11990 = !DILocation(line: 1670, column: 6, scope: !11262)
!11991 = !DILocation(line: 1671, column: 7, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11989, file: !3, line: 1670, column: 11)
!11993 = !DILocation(line: 1672, column: 3, scope: !11992)
!11994 = !DILocation(line: 1675, column: 30, scope: !11262)
!11995 = !DILocation(line: 1675, column: 34, scope: !11262)
!11996 = !DILocation(line: 1675, column: 13, scope: !11262)
!11997 = !DILocation(line: 1675, column: 2, scope: !11262)
!11998 = !DILocation(line: 1675, column: 6, scope: !11262)
!11999 = !DILocation(line: 1675, column: 11, scope: !11262)
!12000 = !DILocation(line: 1676, column: 13, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1676, column: 6)
!12002 = !DILocation(line: 1676, column: 17, scope: !12001)
!12003 = !DILocation(line: 1676, column: 6, scope: !12001)
!12004 = !DILocation(line: 1676, column: 6, scope: !11262)
!12005 = !DILocation(line: 1677, column: 17, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !12001, file: !3, line: 1676, column: 24)
!12007 = !DILocation(line: 1677, column: 21, scope: !12006)
!12008 = !DILocation(line: 1677, column: 9, scope: !12006)
!12009 = !DILocation(line: 1677, column: 7, scope: !12006)
!12010 = !DILocation(line: 1678, column: 3, scope: !12006)
!12011 = !DILocation(line: 1678, column: 7, scope: !12006)
!12012 = !DILocation(line: 1678, column: 12, scope: !12006)
!12013 = !DILocation(line: 1679, column: 3, scope: !12006)
!12014 = !DILocation(line: 1685, column: 6, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1685, column: 6)
!12016 = !DILocation(line: 1685, column: 10, scope: !12015)
!12017 = !DILocation(line: 1685, column: 6, scope: !11262)
!12018 = !DILocation(line: 1686, column: 11, scope: !12015)
!12019 = !DILocation(line: 1686, column: 3, scope: !12015)
!12020 = !DILocation(line: 1689, column: 8, scope: !11262)
!12021 = !DILocation(line: 1689, column: 12, scope: !11262)
!12022 = !DILocation(line: 1689, column: 23, scope: !11262)
!12023 = !DILocation(line: 1689, column: 29, scope: !11262)
!12024 = !DILocation(line: 1689, column: 7, scope: !11262)
!12025 = !DILocation(line: 1688, column: 49, scope: !11262)
!12026 = !DILocation(line: 1690, column: 7, scope: !11262)
!12027 = !DILocation(line: 1690, column: 15, scope: !11262)
!12028 = !DILocation(line: 1689, column: 44, scope: !11262)
!12029 = !DILocation(line: 1688, column: 4, scope: !11262)
!12030 = !DILocation(line: 1691, column: 36, scope: !11262)
!12031 = !DILocation(line: 1691, column: 8, scope: !11262)
!12032 = !DILocation(line: 1691, column: 6, scope: !11262)
!12033 = !DILocation(line: 1692, column: 6, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1692, column: 6)
!12035 = !DILocation(line: 1692, column: 6, scope: !11262)
!12036 = !DILocation(line: 1693, column: 3, scope: !12034)
!12037 = !DILocation(line: 1694, column: 18, scope: !11262)
!12038 = !DILocation(line: 1694, column: 2, scope: !11262)
!12039 = !DILocation(line: 1694, column: 6, scope: !11262)
!12040 = !DILocation(line: 1694, column: 16, scope: !11262)
!12041 = !DILocation(line: 1696, column: 6, scope: !11297)
!12042 = !DILocation(line: 1696, column: 6, scope: !11262)
!12043 = !DILocation(line: 1697, column: 31, scope: !11335)
!12044 = !DILocation(line: 1697, column: 17, scope: !11335)
!12045 = !DILocation(line: 1697, column: 3, scope: !11335)
!12046 = !DILocation(line: 1697, column: 7, scope: !11335)
!12047 = !DILocation(line: 1697, column: 12, scope: !11335)
!12048 = !DILocation(line: 1697, column: 15, scope: !11335)
!12049 = !DILocation(line: 1700, column: 8, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !11335, file: !3, line: 1700, column: 7)
!12051 = !DILocation(line: 1700, column: 12, scope: !12050)
!12052 = !DILocation(line: 1700, column: 17, scope: !12050)
!12053 = !DILocation(line: 1700, column: 7, scope: !11335)
!12054 = !DILocation(line: 1701, column: 8, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !12050, file: !3, line: 1700, column: 21)
!12056 = !DILocation(line: 1702, column: 4, scope: !12055)
!12057 = !DILocation(line: 1704, column: 22, scope: !11335)
!12058 = !DILocation(line: 1704, column: 3, scope: !11335)
!12059 = !DILocation(line: 1704, column: 7, scope: !11335)
!12060 = !DILocation(line: 1704, column: 12, scope: !11335)
!12061 = !DILocation(line: 1704, column: 20, scope: !11335)
!12062 = !DILocation(line: 1705, column: 17, scope: !11335)
!12063 = !DILocation(line: 1705, column: 21, scope: !11335)
!12064 = !DILocation(line: 1705, column: 26, scope: !11335)
!12065 = !DILocation(line: 1705, column: 30, scope: !11335)
!12066 = !DILocation(line: 1705, column: 34, scope: !11335)
!12067 = !DILocation(line: 1705, column: 39, scope: !11335)
!12068 = !DILocation(line: 1705, column: 3, scope: !11335)
!12069 = !DILocation(line: 1707, column: 12, scope: !11335)
!12070 = !DILocation(line: 1707, column: 18, scope: !11335)
!12071 = !DILocation(line: 1707, column: 10, scope: !11335)
!12072 = !DILocation(line: 1708, column: 10, scope: !11334)
!12073 = !DILocation(line: 1708, column: 8, scope: !11334)
!12074 = !DILocation(line: 1708, column: 15, scope: !11333)
!12075 = !DILocation(line: 1708, column: 19, scope: !11333)
!12076 = !DILocation(line: 1708, column: 23, scope: !11333)
!12077 = !DILocation(line: 1708, column: 28, scope: !11333)
!12078 = !DILocation(line: 1708, column: 17, scope: !11333)
!12079 = !DILocation(line: 1708, column: 3, scope: !11334)
!12080 = !DILocation(line: 1709, column: 9, scope: !11332)
!12081 = !DILocation(line: 1709, column: 16, scope: !11332)
!12082 = !DILocation(line: 1709, column: 8, scope: !11332)
!12083 = !DILocation(line: 1709, column: 47, scope: !11332)
!12084 = !DILocation(line: 1709, column: 6, scope: !11332)
!12085 = !DILocation(line: 1710, column: 18, scope: !11332)
!12086 = !DILocation(line: 540, column: 27, scope: !10557, inlinedAt: !11345)
!12087 = !DILocation(line: 540, column: 6, scope: !10557, inlinedAt: !11345)
!12088 = !DILocation(line: 540, column: 6, scope: !10558, inlinedAt: !11345)
!12089 = !DILocation(line: 544, column: 7, scope: !10588, inlinedAt: !11345)
!12090 = !DILocation(line: 544, column: 12, scope: !10588, inlinedAt: !11345)
!12091 = !DILocation(line: 544, column: 7, scope: !10556, inlinedAt: !11345)
!12092 = !DILocation(line: 545, column: 25, scope: !10588, inlinedAt: !11345)
!12093 = !DILocation(line: 545, column: 31, scope: !10588, inlinedAt: !11345)
!12094 = !DILocation(line: 480, column: 33, scope: !10586, inlinedAt: !11355)
!12095 = !DILocation(line: 480, column: 23, scope: !10586, inlinedAt: !11355)
!12096 = !DILocation(line: 481, column: 29, scope: !10586, inlinedAt: !11355)
!12097 = !DILocation(line: 481, column: 35, scope: !10586, inlinedAt: !11355)
!12098 = !DILocation(line: 481, column: 42, scope: !10586, inlinedAt: !11355)
!12099 = !DILocation(line: 474, column: 23, scope: !10581, inlinedAt: !11354)
!12100 = !DILocation(line: 474, column: 29, scope: !10581, inlinedAt: !11354)
!12101 = !DILocation(line: 474, column: 36, scope: !10581, inlinedAt: !11354)
!12102 = !DILocation(line: 474, column: 9, scope: !10581, inlinedAt: !11354)
!12103 = !DILocation(line: 545, column: 4, scope: !10588, inlinedAt: !11345)
!12104 = !DILocation(line: 547, column: 25, scope: !10556, inlinedAt: !11345)
!12105 = !DILocation(line: 348, column: 7, scope: !10706, inlinedAt: !11352)
!12106 = !DILocation(line: 348, column: 6, scope: !10575, inlinedAt: !11352)
!12107 = !DILocation(line: 349, column: 3, scope: !10706, inlinedAt: !11352)
!12108 = !DILocation(line: 351, column: 6, scope: !10710, inlinedAt: !11352)
!12109 = !DILocation(line: 351, column: 11, scope: !10710, inlinedAt: !11352)
!12110 = !DILocation(line: 351, column: 6, scope: !10575, inlinedAt: !11352)
!12111 = !DILocation(line: 352, column: 3, scope: !10710, inlinedAt: !11352)
!12112 = !DILocation(line: 354, column: 32, scope: !10715, inlinedAt: !11352)
!12113 = !DILocation(line: 354, column: 37, scope: !10715, inlinedAt: !11352)
!12114 = !DILocation(line: 354, column: 42, scope: !10715, inlinedAt: !11352)
!12115 = !DILocation(line: 354, column: 45, scope: !10715, inlinedAt: !11352)
!12116 = !DILocation(line: 354, column: 50, scope: !10715, inlinedAt: !11352)
!12117 = !DILocation(line: 354, column: 6, scope: !10575, inlinedAt: !11352)
!12118 = !DILocation(line: 355, column: 3, scope: !10715, inlinedAt: !11352)
!12119 = !DILocation(line: 356, column: 32, scope: !10723, inlinedAt: !11352)
!12120 = !DILocation(line: 356, column: 37, scope: !10723, inlinedAt: !11352)
!12121 = !DILocation(line: 356, column: 43, scope: !10723, inlinedAt: !11352)
!12122 = !DILocation(line: 356, column: 46, scope: !10723, inlinedAt: !11352)
!12123 = !DILocation(line: 356, column: 51, scope: !10723, inlinedAt: !11352)
!12124 = !DILocation(line: 356, column: 6, scope: !10575, inlinedAt: !11352)
!12125 = !DILocation(line: 357, column: 3, scope: !10723, inlinedAt: !11352)
!12126 = !DILocation(line: 358, column: 6, scope: !10731, inlinedAt: !11352)
!12127 = !DILocation(line: 358, column: 11, scope: !10731, inlinedAt: !11352)
!12128 = !DILocation(line: 358, column: 6, scope: !10575, inlinedAt: !11352)
!12129 = !DILocation(line: 358, column: 26, scope: !10731, inlinedAt: !11352)
!12130 = !DILocation(line: 359, column: 6, scope: !10736, inlinedAt: !11352)
!12131 = !DILocation(line: 359, column: 11, scope: !10736, inlinedAt: !11352)
!12132 = !DILocation(line: 359, column: 6, scope: !10575, inlinedAt: !11352)
!12133 = !DILocation(line: 359, column: 26, scope: !10736, inlinedAt: !11352)
!12134 = !DILocation(line: 360, column: 6, scope: !10741, inlinedAt: !11352)
!12135 = !DILocation(line: 360, column: 11, scope: !10741, inlinedAt: !11352)
!12136 = !DILocation(line: 360, column: 6, scope: !10575, inlinedAt: !11352)
!12137 = !DILocation(line: 360, column: 26, scope: !10741, inlinedAt: !11352)
!12138 = !DILocation(line: 361, column: 6, scope: !10746, inlinedAt: !11352)
!12139 = !DILocation(line: 361, column: 11, scope: !10746, inlinedAt: !11352)
!12140 = !DILocation(line: 361, column: 6, scope: !10575, inlinedAt: !11352)
!12141 = !DILocation(line: 361, column: 26, scope: !10746, inlinedAt: !11352)
!12142 = !DILocation(line: 362, column: 6, scope: !10751, inlinedAt: !11352)
!12143 = !DILocation(line: 362, column: 11, scope: !10751, inlinedAt: !11352)
!12144 = !DILocation(line: 362, column: 6, scope: !10575, inlinedAt: !11352)
!12145 = !DILocation(line: 362, column: 26, scope: !10751, inlinedAt: !11352)
!12146 = !DILocation(line: 363, column: 6, scope: !10756, inlinedAt: !11352)
!12147 = !DILocation(line: 363, column: 11, scope: !10756, inlinedAt: !11352)
!12148 = !DILocation(line: 363, column: 6, scope: !10575, inlinedAt: !11352)
!12149 = !DILocation(line: 363, column: 26, scope: !10756, inlinedAt: !11352)
!12150 = !DILocation(line: 364, column: 6, scope: !10761, inlinedAt: !11352)
!12151 = !DILocation(line: 364, column: 11, scope: !10761, inlinedAt: !11352)
!12152 = !DILocation(line: 364, column: 6, scope: !10575, inlinedAt: !11352)
!12153 = !DILocation(line: 364, column: 26, scope: !10761, inlinedAt: !11352)
!12154 = !DILocation(line: 365, column: 6, scope: !10766, inlinedAt: !11352)
!12155 = !DILocation(line: 365, column: 11, scope: !10766, inlinedAt: !11352)
!12156 = !DILocation(line: 365, column: 6, scope: !10575, inlinedAt: !11352)
!12157 = !DILocation(line: 365, column: 26, scope: !10766, inlinedAt: !11352)
!12158 = !DILocation(line: 366, column: 6, scope: !10771, inlinedAt: !11352)
!12159 = !DILocation(line: 366, column: 11, scope: !10771, inlinedAt: !11352)
!12160 = !DILocation(line: 366, column: 6, scope: !10575, inlinedAt: !11352)
!12161 = !DILocation(line: 366, column: 26, scope: !10771, inlinedAt: !11352)
!12162 = !DILocation(line: 367, column: 6, scope: !10776, inlinedAt: !11352)
!12163 = !DILocation(line: 367, column: 11, scope: !10776, inlinedAt: !11352)
!12164 = !DILocation(line: 367, column: 6, scope: !10575, inlinedAt: !11352)
!12165 = !DILocation(line: 367, column: 26, scope: !10776, inlinedAt: !11352)
!12166 = !DILocation(line: 368, column: 6, scope: !10781, inlinedAt: !11352)
!12167 = !DILocation(line: 368, column: 11, scope: !10781, inlinedAt: !11352)
!12168 = !DILocation(line: 368, column: 6, scope: !10575, inlinedAt: !11352)
!12169 = !DILocation(line: 368, column: 26, scope: !10781, inlinedAt: !11352)
!12170 = !DILocation(line: 369, column: 6, scope: !10786, inlinedAt: !11352)
!12171 = !DILocation(line: 369, column: 11, scope: !10786, inlinedAt: !11352)
!12172 = !DILocation(line: 369, column: 6, scope: !10575, inlinedAt: !11352)
!12173 = !DILocation(line: 369, column: 26, scope: !10786, inlinedAt: !11352)
!12174 = !DILocation(line: 370, column: 6, scope: !10791, inlinedAt: !11352)
!12175 = !DILocation(line: 370, column: 11, scope: !10791, inlinedAt: !11352)
!12176 = !DILocation(line: 370, column: 6, scope: !10575, inlinedAt: !11352)
!12177 = !DILocation(line: 370, column: 26, scope: !10791, inlinedAt: !11352)
!12178 = !DILocation(line: 371, column: 6, scope: !10796, inlinedAt: !11352)
!12179 = !DILocation(line: 371, column: 11, scope: !10796, inlinedAt: !11352)
!12180 = !DILocation(line: 371, column: 6, scope: !10575, inlinedAt: !11352)
!12181 = !DILocation(line: 371, column: 26, scope: !10796, inlinedAt: !11352)
!12182 = !DILocation(line: 372, column: 6, scope: !10801, inlinedAt: !11352)
!12183 = !DILocation(line: 372, column: 11, scope: !10801, inlinedAt: !11352)
!12184 = !DILocation(line: 372, column: 6, scope: !10575, inlinedAt: !11352)
!12185 = !DILocation(line: 372, column: 26, scope: !10801, inlinedAt: !11352)
!12186 = !DILocation(line: 373, column: 6, scope: !10806, inlinedAt: !11352)
!12187 = !DILocation(line: 373, column: 11, scope: !10806, inlinedAt: !11352)
!12188 = !DILocation(line: 373, column: 6, scope: !10575, inlinedAt: !11352)
!12189 = !DILocation(line: 373, column: 26, scope: !10806, inlinedAt: !11352)
!12190 = !DILocation(line: 374, column: 6, scope: !10811, inlinedAt: !11352)
!12191 = !DILocation(line: 374, column: 11, scope: !10811, inlinedAt: !11352)
!12192 = !DILocation(line: 374, column: 6, scope: !10575, inlinedAt: !11352)
!12193 = !DILocation(line: 374, column: 26, scope: !10811, inlinedAt: !11352)
!12194 = !DILocation(line: 375, column: 6, scope: !10816, inlinedAt: !11352)
!12195 = !DILocation(line: 375, column: 11, scope: !10816, inlinedAt: !11352)
!12196 = !DILocation(line: 375, column: 6, scope: !10575, inlinedAt: !11352)
!12197 = !DILocation(line: 375, column: 27, scope: !10816, inlinedAt: !11352)
!12198 = !DILocation(line: 376, column: 6, scope: !10821, inlinedAt: !11352)
!12199 = !DILocation(line: 376, column: 11, scope: !10821, inlinedAt: !11352)
!12200 = !DILocation(line: 376, column: 6, scope: !10575, inlinedAt: !11352)
!12201 = !DILocation(line: 376, column: 32, scope: !10821, inlinedAt: !11352)
!12202 = !DILocation(line: 377, column: 6, scope: !10826, inlinedAt: !11352)
!12203 = !DILocation(line: 377, column: 11, scope: !10826, inlinedAt: !11352)
!12204 = !DILocation(line: 377, column: 6, scope: !10575, inlinedAt: !11352)
!12205 = !DILocation(line: 377, column: 32, scope: !10826, inlinedAt: !11352)
!12206 = !DILocation(line: 378, column: 6, scope: !10831, inlinedAt: !11352)
!12207 = !DILocation(line: 378, column: 11, scope: !10831, inlinedAt: !11352)
!12208 = !DILocation(line: 378, column: 6, scope: !10575, inlinedAt: !11352)
!12209 = !DILocation(line: 378, column: 32, scope: !10831, inlinedAt: !11352)
!12210 = !DILocation(line: 379, column: 6, scope: !10836, inlinedAt: !11352)
!12211 = !DILocation(line: 379, column: 11, scope: !10836, inlinedAt: !11352)
!12212 = !DILocation(line: 379, column: 6, scope: !10575, inlinedAt: !11352)
!12213 = !DILocation(line: 379, column: 33, scope: !10836, inlinedAt: !11352)
!12214 = !DILocation(line: 380, column: 6, scope: !10841, inlinedAt: !11352)
!12215 = !DILocation(line: 380, column: 11, scope: !10841, inlinedAt: !11352)
!12216 = !DILocation(line: 380, column: 6, scope: !10575, inlinedAt: !11352)
!12217 = !DILocation(line: 380, column: 33, scope: !10841, inlinedAt: !11352)
!12218 = !DILocation(line: 381, column: 6, scope: !10846, inlinedAt: !11352)
!12219 = !DILocation(line: 381, column: 11, scope: !10846, inlinedAt: !11352)
!12220 = !DILocation(line: 381, column: 6, scope: !10575, inlinedAt: !11352)
!12221 = !DILocation(line: 381, column: 33, scope: !10846, inlinedAt: !11352)
!12222 = !DILocation(line: 382, column: 2, scope: !10851, inlinedAt: !11352)
!12223 = !DILocation(line: 382, column: 2, scope: !10855, inlinedAt: !11352)
!12224 = !DILocation(line: 382, column: 2, scope: !10856, inlinedAt: !11352)
!12225 = !DILocation(line: 386, column: 1, scope: !10575, inlinedAt: !11352)
!12226 = !DILocation(line: 547, column: 9, scope: !10556, inlinedAt: !11345)
!12227 = !DILocation(line: 549, column: 8, scope: !10862, inlinedAt: !11345)
!12228 = !DILocation(line: 549, column: 7, scope: !10556, inlinedAt: !11345)
!12229 = !DILocation(line: 550, column: 4, scope: !10862, inlinedAt: !11345)
!12230 = !DILocation(line: 553, column: 33, scope: !10556, inlinedAt: !11345)
!12231 = !DILocation(line: 325, column: 6, scope: !10867, inlinedAt: !11350)
!12232 = !DILocation(line: 325, column: 6, scope: !10569, inlinedAt: !11350)
!12233 = !DILocation(line: 326, column: 3, scope: !10867, inlinedAt: !11350)
!12234 = !DILocation(line: 332, column: 9, scope: !10569, inlinedAt: !11350)
!12235 = !DILocation(line: 332, column: 15, scope: !10569, inlinedAt: !11350)
!12236 = !DILocation(line: 332, column: 2, scope: !10569, inlinedAt: !11350)
!12237 = !DILocation(line: 336, column: 1, scope: !10569, inlinedAt: !11350)
!12238 = !DILocation(line: 553, column: 5, scope: !10556, inlinedAt: !11345)
!12239 = !DILocation(line: 553, column: 41, scope: !10556, inlinedAt: !11345)
!12240 = !DILocation(line: 554, column: 5, scope: !10556, inlinedAt: !11345)
!12241 = !DILocation(line: 554, column: 12, scope: !10556, inlinedAt: !11345)
!12242 = !DILocation(line: 448, column: 31, scope: !10551, inlinedAt: !11344)
!12243 = !DILocation(line: 448, column: 34, scope: !10551, inlinedAt: !11344)
!12244 = !DILocation(line: 448, column: 14, scope: !10551, inlinedAt: !11344)
!12245 = !DILocation(line: 450, column: 22, scope: !10551, inlinedAt: !11344)
!12246 = !DILocation(line: 450, column: 25, scope: !10551, inlinedAt: !11344)
!12247 = !DILocation(line: 450, column: 30, scope: !10551, inlinedAt: !11344)
!12248 = !DILocation(line: 450, column: 36, scope: !10551, inlinedAt: !11344)
!12249 = !DILocation(line: 450, column: 8, scope: !10551, inlinedAt: !11344)
!12250 = !DILocation(line: 450, column: 6, scope: !10551, inlinedAt: !11344)
!12251 = !DILocation(line: 451, column: 9, scope: !10551, inlinedAt: !11344)
!12252 = !DILocation(line: 552, column: 3, scope: !10556, inlinedAt: !11345)
!12253 = !DILocation(line: 557, column: 19, scope: !10558, inlinedAt: !11345)
!12254 = !DILocation(line: 557, column: 25, scope: !10558, inlinedAt: !11345)
!12255 = !DILocation(line: 557, column: 9, scope: !10558, inlinedAt: !11345)
!12256 = !DILocation(line: 557, column: 2, scope: !10558, inlinedAt: !11345)
!12257 = !DILocation(line: 558, column: 1, scope: !10558, inlinedAt: !11345)
!12258 = !DILocation(line: 1710, column: 8, scope: !11332)
!12259 = !DILocation(line: 1711, column: 9, scope: !12260)
!12260 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 1711, column: 8)
!12261 = !DILocation(line: 1711, column: 8, scope: !11332)
!12262 = !DILocation(line: 1712, column: 9, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12260, file: !3, line: 1711, column: 14)
!12264 = !DILocation(line: 1713, column: 5, scope: !12263)
!12265 = !DILocation(line: 1715, column: 16, scope: !11332)
!12266 = !DILocation(line: 1715, column: 20, scope: !11332)
!12267 = !DILocation(line: 1715, column: 25, scope: !11332)
!12268 = !DILocation(line: 1715, column: 28, scope: !11332)
!12269 = !DILocation(line: 1715, column: 32, scope: !11332)
!12270 = !DILocation(line: 1715, column: 37, scope: !11332)
!12271 = !DILocation(line: 1715, column: 4, scope: !11332)
!12272 = !DILocation(line: 1717, column: 9, scope: !11331)
!12273 = !DILocation(line: 1717, column: 8, scope: !11332)
!12274 = !DILocation(line: 1718, column: 24, scope: !11329)
!12275 = !DILocation(line: 1718, column: 29, scope: !11329)
!12276 = !DILocation(line: 1718, column: 35, scope: !11329)
!12277 = !DILocation(line: 1718, column: 43, scope: !11329)
!12278 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !11328)
!12279 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !11327)
!12280 = !DILocation(line: 0, scope: !5187, inlinedAt: !11327)
!12281 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !11327)
!12282 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !11327)
!12283 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !11327)
!12284 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !11327)
!12285 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !11327)
!12286 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !11327)
!12287 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !11327)
!12288 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !11327)
!12289 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !11327)
!12290 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !11327)
!12291 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !11327)
!12292 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !11327)
!12293 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !11327)
!12294 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !11327)
!12295 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !11327)
!12296 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !11327)
!12297 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !11327)
!12298 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !11327)
!12299 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !11327)
!12300 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !11327)
!12301 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !11327)
!12302 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !11327)
!12303 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !11327)
!12304 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !11327)
!12305 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !11327)
!12306 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !11328)
!12307 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !11328)
!12308 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !11328)
!12309 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !11328)
!12310 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !11328)
!12311 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !11328)
!12312 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !11328)
!12313 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !11328)
!12314 = !DILocation(line: 1718, column: 9, scope: !11329)
!12315 = !DILocation(line: 1718, column: 9, scope: !11330)
!12316 = !DILocation(line: 1719, column: 10, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 1718, column: 47)
!12318 = !DILocation(line: 1720, column: 6, scope: !12317)
!12319 = !DILocation(line: 1722, column: 21, scope: !11330)
!12320 = !DILocation(line: 1722, column: 5, scope: !11330)
!12321 = !DILocation(line: 1722, column: 11, scope: !11330)
!12322 = !DILocation(line: 1722, column: 18, scope: !11330)
!12323 = !DILocation(line: 1723, column: 4, scope: !11330)
!12324 = !DILocation(line: 1724, column: 14, scope: !11332)
!12325 = !DILocation(line: 1724, column: 11, scope: !11332)
!12326 = !DILocation(line: 1725, column: 3, scope: !11332)
!12327 = !DILocation(line: 1708, column: 38, scope: !11333)
!12328 = !DILocation(line: 1708, column: 3, scope: !11333)
!12329 = distinct !{!12329, !12079, !12330}
!12330 = !DILocation(line: 1725, column: 3, scope: !11334)
!12331 = !DILocation(line: 1726, column: 2, scope: !11335)
!12332 = !DILocation(line: 1726, column: 13, scope: !11296)
!12333 = !DILocation(line: 1726, column: 19, scope: !11296)
!12334 = !DILocation(line: 1726, column: 33, scope: !11296)
!12335 = !DILocation(line: 1726, column: 13, scope: !11297)
!12336 = !DILocation(line: 1727, column: 7, scope: !11294)
!12337 = !DILocation(line: 1727, column: 11, scope: !11294)
!12338 = !DILocation(line: 1727, column: 7, scope: !11295)
!12339 = !DILocalVariable(name: "uurb_start", scope: !12340, file: !3, line: 1728, type: !372)
!12340 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 1727, column: 17)
!12341 = !DILocation(line: 1728, column: 18, scope: !12340)
!12342 = !DILocation(line: 1728, column: 46, scope: !12340)
!12343 = !DILocation(line: 1728, column: 52, scope: !12340)
!12344 = !DILocation(line: 1728, column: 31, scope: !12340)
!12345 = !DILocation(line: 1730, column: 31, scope: !12340)
!12346 = !DILocation(line: 1730, column: 35, scope: !12340)
!12347 = !DILocation(line: 1730, column: 41, scope: !12340)
!12348 = !DILocation(line: 1731, column: 7, scope: !12340)
!12349 = !DILocation(line: 1731, column: 20, scope: !12340)
!12350 = !DILocation(line: 1731, column: 24, scope: !12340)
!12351 = !DILocation(line: 1731, column: 30, scope: !12340)
!12352 = !DILocation(line: 1731, column: 18, scope: !12340)
!12353 = !DILocation(line: 1730, column: 45, scope: !12340)
!12354 = !DILocation(line: 1730, column: 4, scope: !12340)
!12355 = !DILocation(line: 1730, column: 8, scope: !12340)
!12356 = !DILocation(line: 1730, column: 13, scope: !12340)
!12357 = !DILocation(line: 1730, column: 29, scope: !12340)
!12358 = !DILocation(line: 1732, column: 3, scope: !12340)
!12359 = !DILocation(line: 1733, column: 39, scope: !11293)
!12360 = !DILocation(line: 1733, column: 45, scope: !11293)
!12361 = !DILocation(line: 540, column: 27, scope: !10557, inlinedAt: !11307)
!12362 = !DILocation(line: 540, column: 6, scope: !10557, inlinedAt: !11307)
!12363 = !DILocation(line: 540, column: 6, scope: !10558, inlinedAt: !11307)
!12364 = !DILocation(line: 544, column: 7, scope: !10588, inlinedAt: !11307)
!12365 = !DILocation(line: 544, column: 12, scope: !10588, inlinedAt: !11307)
!12366 = !DILocation(line: 544, column: 7, scope: !10556, inlinedAt: !11307)
!12367 = !DILocation(line: 545, column: 25, scope: !10588, inlinedAt: !11307)
!12368 = !DILocation(line: 545, column: 31, scope: !10588, inlinedAt: !11307)
!12369 = !DILocation(line: 480, column: 33, scope: !10586, inlinedAt: !11317)
!12370 = !DILocation(line: 480, column: 23, scope: !10586, inlinedAt: !11317)
!12371 = !DILocation(line: 481, column: 29, scope: !10586, inlinedAt: !11317)
!12372 = !DILocation(line: 481, column: 35, scope: !10586, inlinedAt: !11317)
!12373 = !DILocation(line: 481, column: 42, scope: !10586, inlinedAt: !11317)
!12374 = !DILocation(line: 474, column: 23, scope: !10581, inlinedAt: !11316)
!12375 = !DILocation(line: 474, column: 29, scope: !10581, inlinedAt: !11316)
!12376 = !DILocation(line: 474, column: 36, scope: !10581, inlinedAt: !11316)
!12377 = !DILocation(line: 474, column: 9, scope: !10581, inlinedAt: !11316)
!12378 = !DILocation(line: 545, column: 4, scope: !10588, inlinedAt: !11307)
!12379 = !DILocation(line: 547, column: 25, scope: !10556, inlinedAt: !11307)
!12380 = !DILocation(line: 348, column: 7, scope: !10706, inlinedAt: !11314)
!12381 = !DILocation(line: 348, column: 6, scope: !10575, inlinedAt: !11314)
!12382 = !DILocation(line: 349, column: 3, scope: !10706, inlinedAt: !11314)
!12383 = !DILocation(line: 351, column: 6, scope: !10710, inlinedAt: !11314)
!12384 = !DILocation(line: 351, column: 11, scope: !10710, inlinedAt: !11314)
!12385 = !DILocation(line: 351, column: 6, scope: !10575, inlinedAt: !11314)
!12386 = !DILocation(line: 352, column: 3, scope: !10710, inlinedAt: !11314)
!12387 = !DILocation(line: 354, column: 32, scope: !10715, inlinedAt: !11314)
!12388 = !DILocation(line: 354, column: 37, scope: !10715, inlinedAt: !11314)
!12389 = !DILocation(line: 354, column: 42, scope: !10715, inlinedAt: !11314)
!12390 = !DILocation(line: 354, column: 45, scope: !10715, inlinedAt: !11314)
!12391 = !DILocation(line: 354, column: 50, scope: !10715, inlinedAt: !11314)
!12392 = !DILocation(line: 354, column: 6, scope: !10575, inlinedAt: !11314)
!12393 = !DILocation(line: 355, column: 3, scope: !10715, inlinedAt: !11314)
!12394 = !DILocation(line: 356, column: 32, scope: !10723, inlinedAt: !11314)
!12395 = !DILocation(line: 356, column: 37, scope: !10723, inlinedAt: !11314)
!12396 = !DILocation(line: 356, column: 43, scope: !10723, inlinedAt: !11314)
!12397 = !DILocation(line: 356, column: 46, scope: !10723, inlinedAt: !11314)
!12398 = !DILocation(line: 356, column: 51, scope: !10723, inlinedAt: !11314)
!12399 = !DILocation(line: 356, column: 6, scope: !10575, inlinedAt: !11314)
!12400 = !DILocation(line: 357, column: 3, scope: !10723, inlinedAt: !11314)
!12401 = !DILocation(line: 358, column: 6, scope: !10731, inlinedAt: !11314)
!12402 = !DILocation(line: 358, column: 11, scope: !10731, inlinedAt: !11314)
!12403 = !DILocation(line: 358, column: 6, scope: !10575, inlinedAt: !11314)
!12404 = !DILocation(line: 358, column: 26, scope: !10731, inlinedAt: !11314)
!12405 = !DILocation(line: 359, column: 6, scope: !10736, inlinedAt: !11314)
!12406 = !DILocation(line: 359, column: 11, scope: !10736, inlinedAt: !11314)
!12407 = !DILocation(line: 359, column: 6, scope: !10575, inlinedAt: !11314)
!12408 = !DILocation(line: 359, column: 26, scope: !10736, inlinedAt: !11314)
!12409 = !DILocation(line: 360, column: 6, scope: !10741, inlinedAt: !11314)
!12410 = !DILocation(line: 360, column: 11, scope: !10741, inlinedAt: !11314)
!12411 = !DILocation(line: 360, column: 6, scope: !10575, inlinedAt: !11314)
!12412 = !DILocation(line: 360, column: 26, scope: !10741, inlinedAt: !11314)
!12413 = !DILocation(line: 361, column: 6, scope: !10746, inlinedAt: !11314)
!12414 = !DILocation(line: 361, column: 11, scope: !10746, inlinedAt: !11314)
!12415 = !DILocation(line: 361, column: 6, scope: !10575, inlinedAt: !11314)
!12416 = !DILocation(line: 361, column: 26, scope: !10746, inlinedAt: !11314)
!12417 = !DILocation(line: 362, column: 6, scope: !10751, inlinedAt: !11314)
!12418 = !DILocation(line: 362, column: 11, scope: !10751, inlinedAt: !11314)
!12419 = !DILocation(line: 362, column: 6, scope: !10575, inlinedAt: !11314)
!12420 = !DILocation(line: 362, column: 26, scope: !10751, inlinedAt: !11314)
!12421 = !DILocation(line: 363, column: 6, scope: !10756, inlinedAt: !11314)
!12422 = !DILocation(line: 363, column: 11, scope: !10756, inlinedAt: !11314)
!12423 = !DILocation(line: 363, column: 6, scope: !10575, inlinedAt: !11314)
!12424 = !DILocation(line: 363, column: 26, scope: !10756, inlinedAt: !11314)
!12425 = !DILocation(line: 364, column: 6, scope: !10761, inlinedAt: !11314)
!12426 = !DILocation(line: 364, column: 11, scope: !10761, inlinedAt: !11314)
!12427 = !DILocation(line: 364, column: 6, scope: !10575, inlinedAt: !11314)
!12428 = !DILocation(line: 364, column: 26, scope: !10761, inlinedAt: !11314)
!12429 = !DILocation(line: 365, column: 6, scope: !10766, inlinedAt: !11314)
!12430 = !DILocation(line: 365, column: 11, scope: !10766, inlinedAt: !11314)
!12431 = !DILocation(line: 365, column: 6, scope: !10575, inlinedAt: !11314)
!12432 = !DILocation(line: 365, column: 26, scope: !10766, inlinedAt: !11314)
!12433 = !DILocation(line: 366, column: 6, scope: !10771, inlinedAt: !11314)
!12434 = !DILocation(line: 366, column: 11, scope: !10771, inlinedAt: !11314)
!12435 = !DILocation(line: 366, column: 6, scope: !10575, inlinedAt: !11314)
!12436 = !DILocation(line: 366, column: 26, scope: !10771, inlinedAt: !11314)
!12437 = !DILocation(line: 367, column: 6, scope: !10776, inlinedAt: !11314)
!12438 = !DILocation(line: 367, column: 11, scope: !10776, inlinedAt: !11314)
!12439 = !DILocation(line: 367, column: 6, scope: !10575, inlinedAt: !11314)
!12440 = !DILocation(line: 367, column: 26, scope: !10776, inlinedAt: !11314)
!12441 = !DILocation(line: 368, column: 6, scope: !10781, inlinedAt: !11314)
!12442 = !DILocation(line: 368, column: 11, scope: !10781, inlinedAt: !11314)
!12443 = !DILocation(line: 368, column: 6, scope: !10575, inlinedAt: !11314)
!12444 = !DILocation(line: 368, column: 26, scope: !10781, inlinedAt: !11314)
!12445 = !DILocation(line: 369, column: 6, scope: !10786, inlinedAt: !11314)
!12446 = !DILocation(line: 369, column: 11, scope: !10786, inlinedAt: !11314)
!12447 = !DILocation(line: 369, column: 6, scope: !10575, inlinedAt: !11314)
!12448 = !DILocation(line: 369, column: 26, scope: !10786, inlinedAt: !11314)
!12449 = !DILocation(line: 370, column: 6, scope: !10791, inlinedAt: !11314)
!12450 = !DILocation(line: 370, column: 11, scope: !10791, inlinedAt: !11314)
!12451 = !DILocation(line: 370, column: 6, scope: !10575, inlinedAt: !11314)
!12452 = !DILocation(line: 370, column: 26, scope: !10791, inlinedAt: !11314)
!12453 = !DILocation(line: 371, column: 6, scope: !10796, inlinedAt: !11314)
!12454 = !DILocation(line: 371, column: 11, scope: !10796, inlinedAt: !11314)
!12455 = !DILocation(line: 371, column: 6, scope: !10575, inlinedAt: !11314)
!12456 = !DILocation(line: 371, column: 26, scope: !10796, inlinedAt: !11314)
!12457 = !DILocation(line: 372, column: 6, scope: !10801, inlinedAt: !11314)
!12458 = !DILocation(line: 372, column: 11, scope: !10801, inlinedAt: !11314)
!12459 = !DILocation(line: 372, column: 6, scope: !10575, inlinedAt: !11314)
!12460 = !DILocation(line: 372, column: 26, scope: !10801, inlinedAt: !11314)
!12461 = !DILocation(line: 373, column: 6, scope: !10806, inlinedAt: !11314)
!12462 = !DILocation(line: 373, column: 11, scope: !10806, inlinedAt: !11314)
!12463 = !DILocation(line: 373, column: 6, scope: !10575, inlinedAt: !11314)
!12464 = !DILocation(line: 373, column: 26, scope: !10806, inlinedAt: !11314)
!12465 = !DILocation(line: 374, column: 6, scope: !10811, inlinedAt: !11314)
!12466 = !DILocation(line: 374, column: 11, scope: !10811, inlinedAt: !11314)
!12467 = !DILocation(line: 374, column: 6, scope: !10575, inlinedAt: !11314)
!12468 = !DILocation(line: 374, column: 26, scope: !10811, inlinedAt: !11314)
!12469 = !DILocation(line: 375, column: 6, scope: !10816, inlinedAt: !11314)
!12470 = !DILocation(line: 375, column: 11, scope: !10816, inlinedAt: !11314)
!12471 = !DILocation(line: 375, column: 6, scope: !10575, inlinedAt: !11314)
!12472 = !DILocation(line: 375, column: 27, scope: !10816, inlinedAt: !11314)
!12473 = !DILocation(line: 376, column: 6, scope: !10821, inlinedAt: !11314)
!12474 = !DILocation(line: 376, column: 11, scope: !10821, inlinedAt: !11314)
!12475 = !DILocation(line: 376, column: 6, scope: !10575, inlinedAt: !11314)
!12476 = !DILocation(line: 376, column: 32, scope: !10821, inlinedAt: !11314)
!12477 = !DILocation(line: 377, column: 6, scope: !10826, inlinedAt: !11314)
!12478 = !DILocation(line: 377, column: 11, scope: !10826, inlinedAt: !11314)
!12479 = !DILocation(line: 377, column: 6, scope: !10575, inlinedAt: !11314)
!12480 = !DILocation(line: 377, column: 32, scope: !10826, inlinedAt: !11314)
!12481 = !DILocation(line: 378, column: 6, scope: !10831, inlinedAt: !11314)
!12482 = !DILocation(line: 378, column: 11, scope: !10831, inlinedAt: !11314)
!12483 = !DILocation(line: 378, column: 6, scope: !10575, inlinedAt: !11314)
!12484 = !DILocation(line: 378, column: 32, scope: !10831, inlinedAt: !11314)
!12485 = !DILocation(line: 379, column: 6, scope: !10836, inlinedAt: !11314)
!12486 = !DILocation(line: 379, column: 11, scope: !10836, inlinedAt: !11314)
!12487 = !DILocation(line: 379, column: 6, scope: !10575, inlinedAt: !11314)
!12488 = !DILocation(line: 379, column: 33, scope: !10836, inlinedAt: !11314)
!12489 = !DILocation(line: 380, column: 6, scope: !10841, inlinedAt: !11314)
!12490 = !DILocation(line: 380, column: 11, scope: !10841, inlinedAt: !11314)
!12491 = !DILocation(line: 380, column: 6, scope: !10575, inlinedAt: !11314)
!12492 = !DILocation(line: 380, column: 33, scope: !10841, inlinedAt: !11314)
!12493 = !DILocation(line: 381, column: 6, scope: !10846, inlinedAt: !11314)
!12494 = !DILocation(line: 381, column: 11, scope: !10846, inlinedAt: !11314)
!12495 = !DILocation(line: 381, column: 6, scope: !10575, inlinedAt: !11314)
!12496 = !DILocation(line: 381, column: 33, scope: !10846, inlinedAt: !11314)
!12497 = !DILocation(line: 382, column: 2, scope: !10851, inlinedAt: !11314)
!12498 = !DILocation(line: 382, column: 2, scope: !10855, inlinedAt: !11314)
!12499 = !DILocation(line: 382, column: 2, scope: !10856, inlinedAt: !11314)
!12500 = !DILocation(line: 386, column: 1, scope: !10575, inlinedAt: !11314)
!12501 = !DILocation(line: 547, column: 9, scope: !10556, inlinedAt: !11307)
!12502 = !DILocation(line: 549, column: 8, scope: !10862, inlinedAt: !11307)
!12503 = !DILocation(line: 549, column: 7, scope: !10556, inlinedAt: !11307)
!12504 = !DILocation(line: 550, column: 4, scope: !10862, inlinedAt: !11307)
!12505 = !DILocation(line: 553, column: 33, scope: !10556, inlinedAt: !11307)
!12506 = !DILocation(line: 325, column: 6, scope: !10867, inlinedAt: !11312)
!12507 = !DILocation(line: 325, column: 6, scope: !10569, inlinedAt: !11312)
!12508 = !DILocation(line: 326, column: 3, scope: !10867, inlinedAt: !11312)
!12509 = !DILocation(line: 332, column: 9, scope: !10569, inlinedAt: !11312)
!12510 = !DILocation(line: 332, column: 15, scope: !10569, inlinedAt: !11312)
!12511 = !DILocation(line: 332, column: 2, scope: !10569, inlinedAt: !11312)
!12512 = !DILocation(line: 336, column: 1, scope: !10569, inlinedAt: !11312)
!12513 = !DILocation(line: 553, column: 5, scope: !10556, inlinedAt: !11307)
!12514 = !DILocation(line: 553, column: 41, scope: !10556, inlinedAt: !11307)
!12515 = !DILocation(line: 554, column: 5, scope: !10556, inlinedAt: !11307)
!12516 = !DILocation(line: 554, column: 12, scope: !10556, inlinedAt: !11307)
!12517 = !DILocation(line: 448, column: 31, scope: !10551, inlinedAt: !11306)
!12518 = !DILocation(line: 448, column: 34, scope: !10551, inlinedAt: !11306)
!12519 = !DILocation(line: 448, column: 14, scope: !10551, inlinedAt: !11306)
!12520 = !DILocation(line: 450, column: 22, scope: !10551, inlinedAt: !11306)
!12521 = !DILocation(line: 450, column: 25, scope: !10551, inlinedAt: !11306)
!12522 = !DILocation(line: 450, column: 30, scope: !10551, inlinedAt: !11306)
!12523 = !DILocation(line: 450, column: 36, scope: !10551, inlinedAt: !11306)
!12524 = !DILocation(line: 450, column: 8, scope: !10551, inlinedAt: !11306)
!12525 = !DILocation(line: 450, column: 6, scope: !10551, inlinedAt: !11306)
!12526 = !DILocation(line: 451, column: 9, scope: !10551, inlinedAt: !11306)
!12527 = !DILocation(line: 552, column: 3, scope: !10556, inlinedAt: !11307)
!12528 = !DILocation(line: 557, column: 19, scope: !10558, inlinedAt: !11307)
!12529 = !DILocation(line: 557, column: 25, scope: !10558, inlinedAt: !11307)
!12530 = !DILocation(line: 557, column: 9, scope: !10558, inlinedAt: !11307)
!12531 = !DILocation(line: 557, column: 2, scope: !10558, inlinedAt: !11307)
!12532 = !DILocation(line: 558, column: 1, scope: !10558, inlinedAt: !11307)
!12533 = !DILocation(line: 1733, column: 4, scope: !11293)
!12534 = !DILocation(line: 1733, column: 8, scope: !11293)
!12535 = !DILocation(line: 1733, column: 13, scope: !11293)
!12536 = !DILocation(line: 1733, column: 29, scope: !11293)
!12537 = !DILocation(line: 1735, column: 9, scope: !12538)
!12538 = distinct !DILexicalBlock(scope: !11293, file: !3, line: 1735, column: 8)
!12539 = !DILocation(line: 1735, column: 13, scope: !12538)
!12540 = !DILocation(line: 1735, column: 18, scope: !12538)
!12541 = !DILocation(line: 1735, column: 8, scope: !11293)
!12542 = !DILocation(line: 1736, column: 9, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12538, file: !3, line: 1735, column: 35)
!12544 = !DILocation(line: 1737, column: 5, scope: !12543)
!12545 = !DILocation(line: 1739, column: 9, scope: !11292)
!12546 = !DILocation(line: 1739, column: 8, scope: !11293)
!12547 = !DILocation(line: 1740, column: 24, scope: !11290)
!12548 = !DILocation(line: 1740, column: 28, scope: !11290)
!12549 = !DILocation(line: 1740, column: 33, scope: !11290)
!12550 = !DILocation(line: 1741, column: 10, scope: !11290)
!12551 = !DILocation(line: 1741, column: 16, scope: !11290)
!12552 = !DILocation(line: 1742, column: 10, scope: !11290)
!12553 = !DILocation(line: 1742, column: 16, scope: !11290)
!12554 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !11289)
!12555 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !11288)
!12556 = !DILocation(line: 0, scope: !5187, inlinedAt: !11288)
!12557 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !11288)
!12558 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !11288)
!12559 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !11288)
!12560 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !11288)
!12561 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !11288)
!12562 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !11288)
!12563 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !11288)
!12564 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !11288)
!12565 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !11288)
!12566 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !11288)
!12567 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !11288)
!12568 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !11288)
!12569 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !11288)
!12570 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !11288)
!12571 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !11288)
!12572 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !11288)
!12573 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !11288)
!12574 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !11288)
!12575 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !11288)
!12576 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !11288)
!12577 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !11288)
!12578 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !11288)
!12579 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !11288)
!12580 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !11288)
!12581 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !11288)
!12582 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !11289)
!12583 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !11289)
!12584 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !11289)
!12585 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !11289)
!12586 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !11289)
!12587 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !11289)
!12588 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !11289)
!12589 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !11289)
!12590 = !DILocation(line: 1740, column: 9, scope: !11290)
!12591 = !DILocation(line: 1740, column: 9, scope: !11291)
!12592 = !DILocation(line: 1743, column: 10, scope: !12593)
!12593 = distinct !DILexicalBlock(scope: !11290, file: !3, line: 1742, column: 32)
!12594 = !DILocation(line: 1744, column: 6, scope: !12593)
!12595 = !DILocation(line: 1746, column: 4, scope: !11291)
!12596 = !DILocation(line: 1746, column: 15, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 1746, column: 15)
!12598 = !DILocation(line: 1746, column: 21, scope: !12597)
!12599 = !DILocation(line: 1746, column: 26, scope: !12597)
!12600 = !DILocation(line: 1746, column: 15, scope: !11292)
!12601 = !DILocation(line: 1753, column: 12, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 1746, column: 52)
!12603 = !DILocation(line: 1753, column: 16, scope: !12602)
!12604 = !DILocation(line: 1753, column: 21, scope: !12602)
!12605 = !DILocation(line: 1754, column: 7, scope: !12602)
!12606 = !DILocation(line: 1754, column: 13, scope: !12602)
!12607 = !DILocation(line: 1753, column: 5, scope: !12602)
!12608 = !DILocation(line: 1755, column: 4, scope: !12602)
!12609 = !DILocation(line: 1757, column: 2, scope: !11295)
!12610 = !DILocation(line: 1758, column: 17, scope: !11262)
!12611 = !DILocation(line: 1758, column: 21, scope: !11262)
!12612 = !DILocation(line: 1758, column: 2, scope: !11262)
!12613 = !DILocation(line: 1758, column: 6, scope: !11262)
!12614 = !DILocation(line: 1758, column: 11, scope: !11262)
!12615 = !DILocation(line: 1758, column: 15, scope: !11262)
!12616 = !DILocation(line: 1759, column: 19, scope: !11262)
!12617 = !DILocation(line: 1759, column: 25, scope: !11262)
!12618 = !DILocation(line: 1759, column: 30, scope: !11262)
!12619 = !DILocation(line: 1760, column: 18, scope: !11262)
!12620 = !DILocation(line: 1760, column: 22, scope: !11262)
!12621 = !DILocation(line: 1760, column: 27, scope: !11262)
!12622 = !DILocation(line: 1760, column: 33, scope: !11262)
!12623 = !DILocation(line: 1760, column: 42, scope: !11262)
!12624 = !DILocation(line: 1760, column: 4, scope: !11262)
!12625 = !DILocation(line: 1759, column: 37, scope: !11262)
!12626 = !DILocation(line: 1761, column: 5, scope: !11262)
!12627 = !DILocation(line: 1761, column: 11, scope: !11262)
!12628 = !DILocation(line: 1761, column: 20, scope: !11262)
!12629 = !DILocation(line: 1760, column: 49, scope: !11262)
!12630 = !DILocation(line: 1759, column: 2, scope: !11262)
!12631 = !DILocation(line: 1759, column: 6, scope: !11262)
!12632 = !DILocation(line: 1759, column: 11, scope: !11262)
!12633 = !DILocation(line: 1759, column: 16, scope: !11262)
!12634 = !DILocation(line: 1767, column: 7, scope: !11262)
!12635 = !DILocation(line: 1767, column: 4, scope: !11262)
!12636 = !DILocation(line: 1768, column: 6, scope: !12637)
!12637 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1768, column: 6)
!12638 = !DILocation(line: 1768, column: 12, scope: !12637)
!12639 = !DILocation(line: 1768, column: 18, scope: !12637)
!12640 = !DILocation(line: 1768, column: 6, scope: !11262)
!12641 = !DILocation(line: 1769, column: 5, scope: !12637)
!12642 = !DILocation(line: 1769, column: 3, scope: !12637)
!12643 = !DILocation(line: 1770, column: 6, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1770, column: 6)
!12645 = !DILocation(line: 1770, column: 18, scope: !12644)
!12646 = !DILocation(line: 1770, column: 21, scope: !12644)
!12647 = !DILocation(line: 1770, column: 27, scope: !12644)
!12648 = !DILocation(line: 1770, column: 33, scope: !12644)
!12649 = !DILocation(line: 1770, column: 6, scope: !11262)
!12650 = !DILocation(line: 1771, column: 5, scope: !12644)
!12651 = !DILocation(line: 1771, column: 3, scope: !12644)
!12652 = !DILocation(line: 1772, column: 6, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1772, column: 6)
!12654 = !DILocation(line: 1772, column: 17, scope: !12653)
!12655 = !DILocation(line: 1772, column: 20, scope: !12653)
!12656 = !DILocation(line: 1772, column: 26, scope: !12653)
!12657 = !DILocation(line: 1772, column: 32, scope: !12653)
!12658 = !DILocation(line: 1772, column: 6, scope: !11262)
!12659 = !DILocation(line: 1773, column: 5, scope: !12653)
!12660 = !DILocation(line: 1773, column: 3, scope: !12653)
!12661 = !DILocation(line: 1774, column: 6, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1774, column: 6)
!12663 = !DILocation(line: 1774, column: 12, scope: !12662)
!12664 = !DILocation(line: 1774, column: 18, scope: !12662)
!12665 = !DILocation(line: 1774, column: 6, scope: !11262)
!12666 = !DILocation(line: 1775, column: 5, scope: !12662)
!12667 = !DILocation(line: 1775, column: 3, scope: !12662)
!12668 = !DILocation(line: 1776, column: 28, scope: !11262)
!12669 = !DILocation(line: 1776, column: 2, scope: !11262)
!12670 = !DILocation(line: 1776, column: 6, scope: !11262)
!12671 = !DILocation(line: 1776, column: 11, scope: !11262)
!12672 = !DILocation(line: 1776, column: 26, scope: !11262)
!12673 = !DILocation(line: 1778, column: 7, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1778, column: 6)
!12675 = !DILocation(line: 1778, column: 19, scope: !12674)
!12676 = !DILocation(line: 1778, column: 22, scope: !12674)
!12677 = !DILocation(line: 1778, column: 28, scope: !12674)
!12678 = !DILocation(line: 1778, column: 34, scope: !12674)
!12679 = !DILocation(line: 1778, column: 6, scope: !11262)
!12680 = !DILocation(line: 1779, column: 3, scope: !12674)
!12681 = !DILocation(line: 1780, column: 7, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1780, column: 6)
!12683 = !DILocation(line: 1780, column: 18, scope: !12682)
!12684 = !DILocation(line: 1780, column: 21, scope: !12682)
!12685 = !DILocation(line: 1780, column: 27, scope: !12682)
!12686 = !DILocation(line: 1780, column: 33, scope: !12682)
!12687 = !DILocation(line: 1780, column: 6, scope: !11262)
!12688 = !DILocation(line: 1781, column: 3, scope: !12682)
!12689 = !DILocation(line: 1783, column: 36, scope: !11262)
!12690 = !DILocation(line: 1783, column: 42, scope: !11262)
!12691 = !DILocation(line: 1783, column: 2, scope: !11262)
!12692 = !DILocation(line: 1783, column: 6, scope: !11262)
!12693 = !DILocation(line: 1783, column: 11, scope: !11262)
!12694 = !DILocation(line: 1783, column: 34, scope: !11262)
!12695 = !DILocation(line: 1784, column: 43, scope: !11262)
!12696 = !DILocation(line: 1784, column: 26, scope: !11262)
!12697 = !DILocation(line: 1784, column: 2, scope: !11262)
!12698 = !DILocation(line: 1784, column: 6, scope: !11262)
!12699 = !DILocation(line: 1784, column: 11, scope: !11262)
!12700 = !DILocation(line: 1784, column: 24, scope: !11262)
!12701 = !DILocation(line: 1785, column: 5, scope: !11262)
!12702 = !DILocation(line: 1786, column: 25, scope: !11262)
!12703 = !DILocation(line: 1786, column: 31, scope: !11262)
!12704 = !DILocation(line: 1786, column: 2, scope: !11262)
!12705 = !DILocation(line: 1786, column: 6, scope: !11262)
!12706 = !DILocation(line: 1786, column: 11, scope: !11262)
!12707 = !DILocation(line: 1786, column: 23, scope: !11262)
!12708 = !DILocation(line: 1787, column: 31, scope: !11262)
!12709 = !DILocation(line: 1787, column: 2, scope: !11262)
!12710 = !DILocation(line: 1787, column: 6, scope: !11262)
!12711 = !DILocation(line: 1787, column: 11, scope: !11262)
!12712 = !DILocation(line: 1787, column: 29, scope: !11262)
!12713 = !DILocation(line: 1788, column: 23, scope: !11262)
!12714 = !DILocation(line: 1788, column: 2, scope: !11262)
!12715 = !DILocation(line: 1788, column: 6, scope: !11262)
!12716 = !DILocation(line: 1788, column: 11, scope: !11262)
!12717 = !DILocation(line: 1788, column: 21, scope: !11262)
!12718 = !DILocation(line: 1790, column: 6, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1790, column: 6)
!12720 = !DILocation(line: 1790, column: 10, scope: !12719)
!12721 = !DILocation(line: 1790, column: 15, scope: !12719)
!12722 = !DILocation(line: 1790, column: 6, scope: !11262)
!12723 = !DILocation(line: 1791, column: 7, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12725, file: !3, line: 1791, column: 7)
!12725 = distinct !DILexicalBlock(scope: !12719, file: !3, line: 1790, column: 26)
!12726 = !DILocation(line: 1791, column: 13, scope: !12724)
!12727 = !DILocation(line: 1791, column: 18, scope: !12724)
!12728 = !DILocation(line: 1791, column: 43, scope: !12724)
!12729 = !DILocation(line: 1792, column: 5, scope: !12724)
!12730 = !DILocation(line: 1792, column: 9, scope: !12724)
!12731 = !DILocation(line: 1792, column: 14, scope: !12724)
!12732 = !DILocation(line: 1792, column: 20, scope: !12724)
!12733 = !DILocation(line: 1792, column: 38, scope: !12724)
!12734 = !DILocation(line: 1793, column: 5, scope: !12724)
!12735 = !DILocation(line: 1793, column: 9, scope: !12724)
!12736 = !DILocation(line: 1793, column: 14, scope: !12724)
!12737 = !DILocation(line: 1793, column: 20, scope: !12724)
!12738 = !DILocation(line: 1791, column: 7, scope: !12725)
!12739 = !DILocalVariable(name: "__UNIQUE_ID___x287", scope: !12740, file: !3, line: 1795, type: !205)
!12740 = distinct !DILexicalBlock(scope: !12724, file: !3, line: 1795, column: 6)
!12741 = !DILocation(line: 1795, column: 6, scope: !12740)
!12742 = !DILocalVariable(name: "__UNIQUE_ID___y288", scope: !12740, file: !3, line: 1795, type: !205)
!12743 = !DILocation(line: 1794, column: 26, scope: !12724)
!12744 = !DILocation(line: 1794, column: 4, scope: !12724)
!12745 = !DILocation(line: 1794, column: 8, scope: !12724)
!12746 = !DILocation(line: 1794, column: 13, scope: !12724)
!12747 = !DILocation(line: 1794, column: 22, scope: !12724)
!12748 = !DILocation(line: 1797, column: 24, scope: !12724)
!12749 = !DILocation(line: 1797, column: 28, scope: !12724)
!12750 = !DILocation(line: 1797, column: 33, scope: !12724)
!12751 = !DILocation(line: 1797, column: 4, scope: !12724)
!12752 = !DILocation(line: 1797, column: 8, scope: !12724)
!12753 = !DILocation(line: 1797, column: 13, scope: !12724)
!12754 = !DILocation(line: 1797, column: 22, scope: !12724)
!12755 = !DILocation(line: 1798, column: 2, scope: !12725)
!12756 = !DILocation(line: 1800, column: 21, scope: !11262)
!12757 = !DILocation(line: 1800, column: 2, scope: !11262)
!12758 = !DILocation(line: 1800, column: 6, scope: !11262)
!12759 = !DILocation(line: 1800, column: 11, scope: !11262)
!12760 = !DILocation(line: 1800, column: 19, scope: !11262)
!12761 = !DILocation(line: 1801, column: 2, scope: !11262)
!12762 = !DILocation(line: 1801, column: 6, scope: !11262)
!12763 = !DILocation(line: 1801, column: 11, scope: !11262)
!12764 = !DILocation(line: 1801, column: 20, scope: !11262)
!12765 = !DILocation(line: 1802, column: 18, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1802, column: 2)
!12767 = !DILocation(line: 1802, column: 14, scope: !12766)
!12768 = !DILocation(line: 1802, column: 7, scope: !12766)
!12769 = !DILocation(line: 1802, column: 23, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12766, file: !3, line: 1802, column: 2)
!12771 = !DILocation(line: 1802, column: 27, scope: !12770)
!12772 = !DILocation(line: 1802, column: 25, scope: !12770)
!12773 = !DILocation(line: 1802, column: 2, scope: !12766)
!12774 = !DILocation(line: 1803, column: 39, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12770, file: !3, line: 1802, column: 51)
!12776 = !DILocation(line: 1803, column: 3, scope: !12775)
!12777 = !DILocation(line: 1803, column: 7, scope: !12775)
!12778 = !DILocation(line: 1803, column: 12, scope: !12775)
!12779 = !DILocation(line: 1803, column: 27, scope: !12775)
!12780 = !DILocation(line: 1803, column: 30, scope: !12775)
!12781 = !DILocation(line: 1803, column: 37, scope: !12775)
!12782 = !DILocation(line: 1804, column: 39, scope: !12775)
!12783 = !DILocation(line: 1804, column: 46, scope: !12775)
!12784 = !DILocation(line: 1804, column: 49, scope: !12775)
!12785 = !DILocation(line: 1804, column: 3, scope: !12775)
!12786 = !DILocation(line: 1804, column: 7, scope: !12775)
!12787 = !DILocation(line: 1804, column: 12, scope: !12775)
!12788 = !DILocation(line: 1804, column: 27, scope: !12775)
!12789 = !DILocation(line: 1804, column: 30, scope: !12775)
!12790 = !DILocation(line: 1804, column: 37, scope: !12775)
!12791 = !DILocation(line: 1805, column: 13, scope: !12775)
!12792 = !DILocation(line: 1805, column: 20, scope: !12775)
!12793 = !DILocation(line: 1805, column: 23, scope: !12775)
!12794 = !DILocation(line: 1805, column: 10, scope: !12775)
!12795 = !DILocation(line: 1806, column: 2, scope: !12775)
!12796 = !DILocation(line: 1802, column: 47, scope: !12770)
!12797 = !DILocation(line: 1802, column: 2, scope: !12770)
!12798 = distinct !{!12798, !12773, !12799}
!12799 = !DILocation(line: 1806, column: 2, scope: !12766)
!12800 = !DILocation(line: 1807, column: 8, scope: !11262)
!12801 = !DILocation(line: 1807, column: 2, scope: !11262)
!12802 = !DILocation(line: 1808, column: 9, scope: !11262)
!12803 = !DILocation(line: 1809, column: 11, scope: !11262)
!12804 = !DILocation(line: 1809, column: 2, scope: !11262)
!12805 = !DILocation(line: 1809, column: 6, scope: !11262)
!12806 = !DILocation(line: 1809, column: 9, scope: !11262)
!12807 = !DILocation(line: 1810, column: 16, scope: !11262)
!12808 = !DILocation(line: 1810, column: 2, scope: !11262)
!12809 = !DILocation(line: 1810, column: 6, scope: !11262)
!12810 = !DILocation(line: 1810, column: 14, scope: !11262)
!12811 = !DILocation(line: 1811, column: 2, scope: !11262)
!12812 = !DILocation(line: 1811, column: 6, scope: !11262)
!12813 = !DILocation(line: 1811, column: 23, scope: !11262)
!12814 = !DILocation(line: 1812, column: 6, scope: !12815)
!12815 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1812, column: 6)
!12816 = !DILocation(line: 1812, column: 10, scope: !12815)
!12817 = !DILocation(line: 1812, column: 6, scope: !11262)
!12818 = !DILocalVariable(name: "uurb_start", scope: !12819, file: !3, line: 1813, type: !372)
!12819 = distinct !DILexicalBlock(scope: !12815, file: !3, line: 1812, column: 16)
!12820 = !DILocation(line: 1813, column: 17, scope: !12819)
!12821 = !DILocation(line: 1813, column: 45, scope: !12819)
!12822 = !DILocation(line: 1813, column: 51, scope: !12819)
!12823 = !DILocation(line: 1813, column: 30, scope: !12819)
!12824 = !DILocation(line: 1815, column: 3, scope: !12819)
!12825 = !DILocation(line: 1815, column: 7, scope: !12819)
!12826 = !DILocation(line: 1815, column: 12, scope: !12819)
!12827 = !DILocation(line: 1815, column: 27, scope: !12819)
!12828 = !DILocation(line: 1816, column: 27, scope: !12819)
!12829 = !DILocation(line: 1816, column: 31, scope: !12819)
!12830 = !DILocation(line: 1816, column: 37, scope: !12819)
!12831 = !DILocation(line: 1817, column: 6, scope: !12819)
!12832 = !DILocation(line: 1817, column: 19, scope: !12819)
!12833 = !DILocation(line: 1817, column: 23, scope: !12819)
!12834 = !DILocation(line: 1817, column: 29, scope: !12819)
!12835 = !DILocation(line: 1817, column: 17, scope: !12819)
!12836 = !DILocation(line: 1816, column: 48, scope: !12819)
!12837 = !DILocation(line: 1816, column: 3, scope: !12819)
!12838 = !DILocation(line: 1816, column: 7, scope: !12819)
!12839 = !DILocation(line: 1816, column: 12, scope: !12819)
!12840 = !DILocation(line: 1816, column: 25, scope: !12819)
!12841 = !DILocation(line: 1818, column: 2, scope: !12819)
!12842 = !DILocation(line: 1818, column: 13, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12815, file: !3, line: 1818, column: 13)
!12844 = !DILocation(line: 1818, column: 19, scope: !12843)
!12845 = !DILocation(line: 1818, column: 22, scope: !12843)
!12846 = !DILocation(line: 1818, column: 28, scope: !12843)
!12847 = !DILocation(line: 1818, column: 42, scope: !12843)
!12848 = !DILocation(line: 1818, column: 13, scope: !12815)
!12849 = !DILocation(line: 1819, column: 20, scope: !12843)
!12850 = !DILocation(line: 1819, column: 26, scope: !12843)
!12851 = !DILocation(line: 1819, column: 3, scope: !12843)
!12852 = !DILocation(line: 1819, column: 7, scope: !12843)
!12853 = !DILocation(line: 1819, column: 18, scope: !12843)
!12854 = !DILocation(line: 1820, column: 14, scope: !11262)
!12855 = !DILocation(line: 1820, column: 20, scope: !11262)
!12856 = !DILocation(line: 1820, column: 2, scope: !11262)
!12857 = !DILocation(line: 1820, column: 6, scope: !11262)
!12858 = !DILocation(line: 1820, column: 12, scope: !11262)
!12859 = !DILocation(line: 1821, column: 14, scope: !11262)
!12860 = !DILocation(line: 1821, column: 2, scope: !11262)
!12861 = !DILocation(line: 1821, column: 6, scope: !11262)
!12862 = !DILocation(line: 1821, column: 12, scope: !11262)
!12863 = !DILocation(line: 1822, column: 20, scope: !11262)
!12864 = !DILocation(line: 1822, column: 12, scope: !11262)
!12865 = !DILocation(line: 1822, column: 2, scope: !11262)
!12866 = !DILocation(line: 1822, column: 6, scope: !11262)
!12867 = !DILocation(line: 1822, column: 10, scope: !11262)
!12868 = !DILocation(line: 1823, column: 13, scope: !11280)
!12869 = !DILocation(line: 1823, column: 13, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !11280, file: !3, line: 1823, column: 13)
!12871 = !DILocation(line: 1823, column: 13, scope: !11262)
!12872 = !DILocation(line: 1823, column: 2, scope: !11262)
!12873 = !DILocation(line: 1823, column: 6, scope: !11262)
!12874 = !DILocation(line: 1823, column: 11, scope: !11262)
!12875 = !DILocation(line: 1824, column: 12, scope: !11262)
!12876 = !DILocation(line: 1824, column: 16, scope: !11262)
!12877 = !DILocation(line: 1824, column: 21, scope: !11262)
!12878 = !DILocation(line: 1824, column: 25, scope: !11262)
!12879 = !DILocation(line: 1824, column: 34, scope: !11262)
!12880 = !DILocation(line: 1824, column: 38, scope: !11262)
!12881 = !DILocation(line: 1824, column: 43, scope: !11262)
!12882 = !DILocation(line: 1825, column: 4, scope: !11262)
!12883 = !DILocation(line: 1825, column: 8, scope: !11262)
!12884 = !DILocation(line: 1825, column: 13, scope: !11262)
!12885 = !DILocation(line: 1824, column: 2, scope: !11262)
!12886 = !DILocation(line: 1827, column: 7, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1827, column: 6)
!12888 = !DILocation(line: 1827, column: 6, scope: !11262)
!12889 = !DILocation(line: 1828, column: 18, scope: !12887)
!12890 = !DILocation(line: 1828, column: 22, scope: !12887)
!12891 = !DILocation(line: 1828, column: 27, scope: !12887)
!12892 = !DILocation(line: 1828, column: 31, scope: !12887)
!12893 = !DILocation(line: 1828, column: 36, scope: !12887)
!12894 = !DILocation(line: 1828, column: 3, scope: !12887)
!12895 = !DILocation(line: 1830, column: 19, scope: !11262)
!12896 = !DILocation(line: 1830, column: 2, scope: !11262)
!12897 = !DILocation(line: 1832, column: 30, scope: !11273)
!12898 = !DILocation(line: 1832, column: 34, scope: !11273)
!12899 = !DILocation(line: 1832, column: 6, scope: !11273)
!12900 = !DILocation(line: 1832, column: 6, scope: !11262)
!12901 = !DILocation(line: 1833, column: 18, scope: !11272)
!12902 = !DILocation(line: 1833, column: 22, scope: !11272)
!12903 = !DILocation(line: 379, column: 2, scope: !12904, inlinedAt: !11277)
!12904 = distinct !DILexicalBlock(scope: !12905, file: !5444, line: 379, column: 2)
!12905 = distinct !DILexicalBlock(scope: !11275, file: !5444, line: 379, column: 2)
!12906 = !DILocation(line: 379, column: 2, scope: !12907, inlinedAt: !11277)
!12907 = distinct !DILexicalBlock(scope: !12905, file: !5444, line: 379, column: 2)
!12908 = !{i32 -2145393172}
!12909 = !DILocation(line: 379, column: 2, scope: !12910, inlinedAt: !11277)
!12910 = distinct !DILexicalBlock(scope: !12907, file: !5444, line: 379, column: 2)
!12911 = !DILocation(line: 1839, column: 37, scope: !11272)
!12912 = !DILocation(line: 1839, column: 41, scope: !11272)
!12913 = !DILocation(line: 1839, column: 19, scope: !11272)
!12914 = !DILocation(line: 1840, column: 6, scope: !11272)
!12915 = !DILocation(line: 1840, column: 10, scope: !11272)
!12916 = !DILocation(line: 1840, column: 15, scope: !11272)
!12917 = !DILocation(line: 1840, column: 32, scope: !11272)
!12918 = !DILocation(line: 1841, column: 5, scope: !11272)
!12919 = !DILocation(line: 1839, column: 47, scope: !11272)
!12920 = !DILocation(line: 1839, column: 3, scope: !11272)
!12921 = !DILocation(line: 1839, column: 7, scope: !11272)
!12922 = !DILocation(line: 1839, column: 17, scope: !11272)
!12923 = !DILocation(line: 1846, column: 7, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !11272, file: !3, line: 1846, column: 7)
!12925 = !DILocation(line: 1846, column: 13, scope: !12924)
!12926 = !DILocation(line: 1846, column: 19, scope: !12924)
!12927 = !DILocation(line: 1846, column: 7, scope: !11272)
!12928 = !DILocation(line: 1847, column: 4, scope: !12924)
!12929 = !DILocation(line: 1847, column: 8, scope: !12924)
!12930 = !DILocation(line: 1847, column: 20, scope: !12924)
!12931 = !DILocation(line: 1849, column: 36, scope: !12924)
!12932 = !DILocation(line: 1849, column: 40, scope: !12924)
!12933 = !DILocation(line: 1849, column: 33, scope: !12924)
!12934 = !DILocation(line: 1849, column: 29, scope: !12924)
!12935 = !DILocation(line: 1849, column: 4, scope: !12924)
!12936 = !DILocation(line: 1849, column: 8, scope: !12924)
!12937 = !DILocation(line: 1849, column: 26, scope: !12924)
!12938 = !DILocation(line: 1854, column: 7, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !11272, file: !3, line: 1854, column: 7)
!12940 = !DILocation(line: 1854, column: 11, scope: !12939)
!12941 = !DILocation(line: 1854, column: 37, scope: !12939)
!12942 = !DILocation(line: 1854, column: 41, scope: !12939)
!12943 = !DILocation(line: 1854, column: 34, scope: !12939)
!12944 = !DILocation(line: 1854, column: 29, scope: !12939)
!12945 = !DILocation(line: 1854, column: 7, scope: !11272)
!12946 = !DILocation(line: 1855, column: 8, scope: !12939)
!12947 = !DILocation(line: 1855, column: 4, scope: !12939)
!12948 = !DILocation(line: 1857, column: 25, scope: !12939)
!12949 = !DILocation(line: 1857, column: 29, scope: !12939)
!12950 = !DILocation(line: 1857, column: 10, scope: !12939)
!12951 = !DILocation(line: 1857, column: 8, scope: !12939)
!12952 = !DILocation(line: 1858, column: 20, scope: !11272)
!12953 = !DILocation(line: 1858, column: 24, scope: !11272)
!12954 = !DILocation(line: 404, column: 2, scope: !12955, inlinedAt: !11271)
!12955 = distinct !DILexicalBlock(scope: !12956, file: !5444, line: 404, column: 2)
!12956 = distinct !DILexicalBlock(scope: !11267, file: !5444, line: 404, column: 2)
!12957 = !DILocation(line: 404, column: 2, scope: !12958, inlinedAt: !11271)
!12958 = distinct !DILexicalBlock(scope: !12956, file: !5444, line: 404, column: 2)
!12959 = !{i32 -2145391424}
!12960 = !DILocation(line: 404, column: 2, scope: !12961, inlinedAt: !11271)
!12961 = distinct !DILexicalBlock(scope: !12958, file: !5444, line: 404, column: 2)
!12962 = !DILocation(line: 1859, column: 2, scope: !11272)
!12963 = !DILocation(line: 1860, column: 24, scope: !12964)
!12964 = distinct !DILexicalBlock(scope: !11273, file: !3, line: 1859, column: 9)
!12965 = !DILocation(line: 1860, column: 28, scope: !12964)
!12966 = !DILocation(line: 1860, column: 9, scope: !12964)
!12967 = !DILocation(line: 1860, column: 7, scope: !12964)
!12968 = !DILocation(line: 1863, column: 6, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1863, column: 6)
!12970 = !DILocation(line: 1863, column: 6, scope: !11262)
!12971 = !DILocation(line: 1864, column: 27, scope: !12972)
!12972 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 1863, column: 11)
!12973 = !DILocation(line: 1864, column: 31, scope: !12972)
!12974 = !DILocation(line: 1864, column: 36, scope: !12972)
!12975 = !DILocation(line: 1865, column: 46, scope: !12972)
!12976 = !DILocation(line: 1864, column: 3, scope: !12972)
!12977 = !DILocation(line: 1866, column: 13, scope: !12972)
!12978 = !DILocation(line: 1866, column: 17, scope: !12972)
!12979 = !DILocation(line: 1866, column: 22, scope: !12972)
!12980 = !DILocation(line: 1866, column: 26, scope: !12972)
!12981 = !DILocation(line: 1866, column: 35, scope: !12972)
!12982 = !DILocation(line: 1866, column: 39, scope: !12972)
!12983 = !DILocation(line: 1866, column: 44, scope: !12972)
!12984 = !DILocation(line: 1867, column: 8, scope: !12972)
!12985 = !DILocation(line: 1866, column: 3, scope: !12972)
!12986 = !DILocation(line: 1868, column: 23, scope: !12972)
!12987 = !DILocation(line: 1868, column: 3, scope: !12972)
!12988 = !DILocation(line: 1869, column: 3, scope: !12972)
!12989 = !DILocation(line: 1871, column: 2, scope: !11262)
!12990 = !DILabel(scope: !11262, name: "error", file: !3, line: 1873)
!12991 = !DILocation(line: 1873, column: 2, scope: !11262)
!12992 = !DILocation(line: 1874, column: 8, scope: !11262)
!12993 = !DILocation(line: 1874, column: 2, scope: !11262)
!12994 = !DILocation(line: 1875, column: 8, scope: !11262)
!12995 = !DILocation(line: 1875, column: 2, scope: !11262)
!12996 = !DILocation(line: 1876, column: 6, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 1876, column: 6)
!12998 = !DILocation(line: 1876, column: 6, scope: !11262)
!12999 = !DILocation(line: 1877, column: 14, scope: !12997)
!13000 = !DILocation(line: 1877, column: 3, scope: !12997)
!13001 = !DILocation(line: 1878, column: 9, scope: !11262)
!13002 = !DILocation(line: 1878, column: 2, scope: !11262)
!13003 = !DILocation(line: 1879, column: 1, scope: !11262)
!13004 = distinct !DISubprogram(name: "ep_to_host_endpoint", scope: !3, file: !3, line: 915, type: !13005, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13005 = !DISubroutineType(types: !13006)
!13006 = !{!4321, !201, !471}
!13007 = !DILocalVariable(name: "dev", arg: 1, scope: !13004, file: !3, line: 915, type: !201)
!13008 = !DILocation(line: 915, column: 73, scope: !13004)
!13009 = !DILocalVariable(name: "ep", arg: 2, scope: !13004, file: !3, line: 916, type: !471)
!13010 = !DILocation(line: 916, column: 26, scope: !13004)
!13011 = !DILocation(line: 918, column: 6, scope: !13012)
!13012 = distinct !DILexicalBlock(scope: !13004, file: !3, line: 918, column: 6)
!13013 = !DILocation(line: 918, column: 9, scope: !13012)
!13014 = !DILocation(line: 918, column: 6, scope: !13004)
!13015 = !DILocation(line: 919, column: 10, scope: !13012)
!13016 = !DILocation(line: 919, column: 15, scope: !13012)
!13017 = !DILocation(line: 919, column: 21, scope: !13012)
!13018 = !DILocation(line: 919, column: 24, scope: !13012)
!13019 = !DILocation(line: 919, column: 3, scope: !13012)
!13020 = !DILocation(line: 921, column: 10, scope: !13012)
!13021 = !DILocation(line: 921, column: 15, scope: !13012)
!13022 = !DILocation(line: 921, column: 22, scope: !13012)
!13023 = !DILocation(line: 921, column: 25, scope: !13012)
!13024 = !DILocation(line: 921, column: 3, scope: !13012)
!13025 = !DILocation(line: 922, column: 1, scope: !13004)
!13026 = distinct !DISubprogram(name: "usb_endpoint_xfer_control", scope: !6, file: !6, line: 528, type: !9271, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13027 = !DILocalVariable(name: "epd", arg: 1, scope: !13026, file: !6, line: 529, type: !9273)
!13028 = !DILocation(line: 529, column: 43, scope: !13026)
!13029 = !DILocation(line: 531, column: 11, scope: !13026)
!13030 = !DILocation(line: 531, column: 16, scope: !13026)
!13031 = !DILocation(line: 531, column: 29, scope: !13026)
!13032 = !DILocation(line: 531, column: 59, scope: !13026)
!13033 = !DILocation(line: 531, column: 2, scope: !13026)
!13034 = distinct !DISubprogram(name: "usb_endpoint_type", scope: !6, file: !6, line: 481, type: !9271, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13035 = !DILocalVariable(name: "epd", arg: 1, scope: !13034, file: !6, line: 481, type: !9273)
!13036 = !DILocation(line: 481, column: 75, scope: !13034)
!13037 = !DILocation(line: 483, column: 9, scope: !13034)
!13038 = !DILocation(line: 483, column: 14, scope: !13034)
!13039 = !DILocation(line: 483, column: 27, scope: !13034)
!13040 = !DILocation(line: 483, column: 2, scope: !13034)
!13041 = distinct !DISubprogram(name: "usb_endpoint_xfer_int", scope: !6, file: !6, line: 542, type: !9271, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13042 = !DILocalVariable(name: "epd", arg: 1, scope: !13041, file: !6, line: 543, type: !9273)
!13043 = !DILocation(line: 543, column: 43, scope: !13041)
!13044 = !DILocation(line: 545, column: 11, scope: !13041)
!13045 = !DILocation(line: 545, column: 16, scope: !13041)
!13046 = !DILocation(line: 545, column: 29, scope: !13041)
!13047 = !DILocation(line: 545, column: 59, scope: !13041)
!13048 = !DILocation(line: 545, column: 2, scope: !13041)
!13049 = distinct !DISubprogram(name: "IS_ERR", scope: !13050, file: !13050, line: 34, type: !13051, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13050 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!13051 = !DISubroutineType(types: !13052)
!13052 = !{!534, !2320}
!13053 = !DILocalVariable(name: "ptr", arg: 1, scope: !13049, file: !13050, line: 34, type: !2320)
!13054 = !DILocation(line: 34, column: 60, scope: !13049)
!13055 = !DILocation(line: 36, column: 9, scope: !13049)
!13056 = !DILocation(line: 36, column: 2, scope: !13049)
!13057 = distinct !DISubprogram(name: "PTR_ERR", scope: !13050, file: !13050, line: 29, type: !13058, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13058 = !DISubroutineType(types: !13059)
!13059 = !{!357, !2320}
!13060 = !DILocalVariable(name: "ptr", arg: 1, scope: !13057, file: !13050, line: 29, type: !2320)
!13061 = !DILocation(line: 29, column: 61, scope: !13057)
!13062 = !DILocation(line: 31, column: 16, scope: !13057)
!13063 = !DILocation(line: 31, column: 9, scope: !13057)
!13064 = !DILocation(line: 31, column: 2, scope: !13057)
!13065 = distinct !DISubprogram(name: "__chk_range_not_ok", scope: !13066, file: !13066, line: 19, type: !13067, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13066 = !DIFile(filename: "./arch/x86/include/asm/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!13067 = !DISubroutineType(types: !13068)
!13068 = !{!534, !372, !372, !372}
!13069 = !DILocalVariable(name: "addr", arg: 1, scope: !13065, file: !13066, line: 19, type: !372)
!13070 = !DILocation(line: 19, column: 53, scope: !13065)
!13071 = !DILocalVariable(name: "size", arg: 2, scope: !13065, file: !13066, line: 19, type: !372)
!13072 = !DILocation(line: 19, column: 73, scope: !13065)
!13073 = !DILocalVariable(name: "limit", arg: 3, scope: !13065, file: !13066, line: 19, type: !372)
!13074 = !DILocation(line: 19, column: 93, scope: !13065)
!13075 = !DILocation(line: 28, column: 27, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13065, file: !13066, line: 28, column: 6)
!13077 = !DILocation(line: 28, column: 6, scope: !13076)
!13078 = !DILocation(line: 28, column: 6, scope: !13065)
!13079 = !DILocation(line: 29, column: 10, scope: !13076)
!13080 = !DILocation(line: 29, column: 3, scope: !13076)
!13081 = !DILocation(line: 32, column: 10, scope: !13065)
!13082 = !DILocation(line: 32, column: 7, scope: !13065)
!13083 = !DILocation(line: 33, column: 6, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13065, file: !13066, line: 33, column: 6)
!13085 = !DILocation(line: 33, column: 6, scope: !13065)
!13086 = !DILocation(line: 34, column: 3, scope: !13084)
!13087 = !DILocation(line: 35, column: 9, scope: !13065)
!13088 = !DILocation(line: 35, column: 2, scope: !13065)
!13089 = !DILocation(line: 36, column: 1, scope: !13065)
!13090 = distinct !DISubprogram(name: "alloc_async", scope: !3, file: !3, line: 378, type: !13091, scopeLine: 379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13091 = !DISubroutineType(types: !13092)
!13092 = !{!4429, !7}
!13093 = !DILocalVariable(name: "numisoframes", arg: 1, scope: !13090, file: !3, line: 378, type: !7)
!13094 = !DILocation(line: 378, column: 47, scope: !13090)
!13095 = !DILocalVariable(name: "as", scope: !13090, file: !3, line: 380, type: !4429)
!13096 = !DILocation(line: 380, column: 16, scope: !13090)
!13097 = !DILocation(line: 382, column: 7, scope: !13090)
!13098 = !DILocation(line: 382, column: 5, scope: !13090)
!13099 = !DILocation(line: 383, column: 7, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13090, file: !3, line: 383, column: 6)
!13101 = !DILocation(line: 383, column: 6, scope: !13090)
!13102 = !DILocation(line: 384, column: 3, scope: !13100)
!13103 = !DILocation(line: 385, column: 26, scope: !13090)
!13104 = !DILocation(line: 385, column: 12, scope: !13090)
!13105 = !DILocation(line: 385, column: 2, scope: !13090)
!13106 = !DILocation(line: 385, column: 6, scope: !13090)
!13107 = !DILocation(line: 385, column: 10, scope: !13090)
!13108 = !DILocation(line: 386, column: 7, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !13090, file: !3, line: 386, column: 6)
!13110 = !DILocation(line: 386, column: 11, scope: !13109)
!13111 = !DILocation(line: 386, column: 6, scope: !13090)
!13112 = !DILocation(line: 387, column: 9, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13109, file: !3, line: 386, column: 16)
!13114 = !DILocation(line: 387, column: 3, scope: !13113)
!13115 = !DILocation(line: 388, column: 3, scope: !13113)
!13116 = !DILocation(line: 390, column: 9, scope: !13090)
!13117 = !DILocation(line: 390, column: 2, scope: !13090)
!13118 = !DILocation(line: 391, column: 1, scope: !13090)
!13119 = distinct !DISubprogram(name: "find_memory_area", scope: !3, file: !3, line: 1484, type: !13120, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13120 = !DISubroutineType(types: !13121)
!13121 = !{!4504, !190, !13122}
!13122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13123, size: 64)
!13123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4533)
!13124 = !DILocation(line: 407, column: 64, scope: !5443, inlinedAt: !13125)
!13125 = distinct !DILocation(line: 1504, column: 2, scope: !13119)
!13126 = !DILocation(line: 407, column: 84, scope: !5443, inlinedAt: !13125)
!13127 = !DILocation(line: 327, column: 67, scope: !5452, inlinedAt: !13128)
!13128 = distinct !DILocation(line: 1490, column: 2, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13130, file: !3, line: 1490, column: 2)
!13130 = distinct !DILexicalBlock(scope: !13131, file: !3, line: 1490, column: 2)
!13131 = distinct !DILexicalBlock(scope: !13132, file: !3, line: 1490, column: 2)
!13132 = distinct !DILexicalBlock(scope: !13133, file: !3, line: 1490, column: 2)
!13133 = distinct !DILexicalBlock(scope: !13119, file: !3, line: 1490, column: 2)
!13134 = !DILocalVariable(name: "ps", arg: 1, scope: !13119, file: !3, line: 1484, type: !190)
!13135 = !DILocation(line: 1484, column: 40, scope: !13119)
!13136 = !DILocalVariable(name: "uurb", arg: 2, scope: !13119, file: !3, line: 1484, type: !13122)
!13137 = !DILocation(line: 1484, column: 71, scope: !13119)
!13138 = !DILocalVariable(name: "usbm", scope: !13119, file: !3, line: 1486, type: !4504)
!13139 = !DILocation(line: 1486, column: 21, scope: !13119)
!13140 = !DILocalVariable(name: "iter", scope: !13119, file: !3, line: 1486, type: !4504)
!13141 = !DILocation(line: 1486, column: 35, scope: !13119)
!13142 = !DILocalVariable(name: "flags", scope: !13119, file: !3, line: 1487, type: !372)
!13143 = !DILocation(line: 1487, column: 16, scope: !13119)
!13144 = !DILocalVariable(name: "uurb_start", scope: !13119, file: !3, line: 1488, type: !372)
!13145 = !DILocation(line: 1488, column: 16, scope: !13119)
!13146 = !DILocation(line: 1488, column: 44, scope: !13119)
!13147 = !DILocation(line: 1488, column: 50, scope: !13119)
!13148 = !DILocation(line: 1488, column: 29, scope: !13119)
!13149 = !DILocation(line: 1490, column: 2, scope: !13119)
!13150 = !DILocation(line: 1490, column: 2, scope: !13133)
!13151 = !DILocalVariable(name: "__dummy", scope: !13152, file: !3, line: 1490, type: !372)
!13152 = distinct !DILexicalBlock(scope: !13132, file: !3, line: 1490, column: 2)
!13153 = !DILocation(line: 1490, column: 2, scope: !13152)
!13154 = !DILocalVariable(name: "__dummy2", scope: !13152, file: !3, line: 1490, type: !372)
!13155 = !DILocation(line: 1490, column: 2, scope: !13132)
!13156 = !DILocation(line: 1490, column: 2, scope: !13131)
!13157 = !DILocation(line: 1490, column: 2, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13131, file: !3, line: 1490, column: 2)
!13159 = !DILocalVariable(name: "__dummy", scope: !13160, file: !3, line: 1490, type: !372)
!13160 = distinct !DILexicalBlock(scope: !13161, file: !3, line: 1490, column: 2)
!13161 = distinct !DILexicalBlock(scope: !13158, file: !3, line: 1490, column: 2)
!13162 = !DILocation(line: 1490, column: 2, scope: !13160)
!13163 = !DILocalVariable(name: "__dummy2", scope: !13160, file: !3, line: 1490, type: !372)
!13164 = !DILocation(line: 1490, column: 2, scope: !13161)
!13165 = !DILocation(line: 1490, column: 2, scope: !13130)
!13166 = !{i32 -2140945091}
!13167 = !DILocation(line: 1490, column: 2, scope: !13129)
!13168 = !DILocation(line: 329, column: 10, scope: !5452, inlinedAt: !13128)
!13169 = !DILocation(line: 329, column: 16, scope: !5452, inlinedAt: !13128)
!13170 = !DILocalVariable(name: "__mptr", scope: !13171, file: !3, line: 1491, type: !189)
!13171 = distinct !DILexicalBlock(scope: !13172, file: !3, line: 1491, column: 2)
!13172 = distinct !DILexicalBlock(scope: !13119, file: !3, line: 1491, column: 2)
!13173 = !DILocation(line: 1491, column: 2, scope: !13171)
!13174 = !DILocation(line: 1491, column: 2, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13171, file: !3, line: 1491, column: 2)
!13176 = !DILocation(line: 1491, column: 2, scope: !13172)
!13177 = !DILocation(line: 1491, column: 2, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13172, file: !3, line: 1491, column: 2)
!13179 = !DILocation(line: 1492, column: 7, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13181, file: !3, line: 1492, column: 7)
!13181 = distinct !DILexicalBlock(scope: !13178, file: !3, line: 1491, column: 55)
!13182 = !DILocation(line: 1492, column: 21, scope: !13180)
!13183 = !DILocation(line: 1492, column: 27, scope: !13180)
!13184 = !DILocation(line: 1492, column: 18, scope: !13180)
!13185 = !DILocation(line: 1492, column: 36, scope: !13180)
!13186 = !DILocation(line: 1493, column: 5, scope: !13180)
!13187 = !DILocation(line: 1493, column: 18, scope: !13180)
!13188 = !DILocation(line: 1493, column: 24, scope: !13180)
!13189 = !DILocation(line: 1493, column: 35, scope: !13180)
!13190 = !DILocation(line: 1493, column: 41, scope: !13180)
!13191 = !DILocation(line: 1493, column: 33, scope: !13180)
!13192 = !DILocation(line: 1493, column: 16, scope: !13180)
!13193 = !DILocation(line: 1492, column: 7, scope: !13181)
!13194 = !DILocation(line: 1494, column: 8, scope: !13195)
!13195 = distinct !DILexicalBlock(scope: !13196, file: !3, line: 1494, column: 8)
!13196 = distinct !DILexicalBlock(scope: !13180, file: !3, line: 1493, column: 47)
!13197 = !DILocation(line: 1494, column: 14, scope: !13195)
!13198 = !DILocation(line: 1494, column: 30, scope: !13195)
!13199 = !DILocation(line: 1494, column: 36, scope: !13195)
!13200 = !DILocation(line: 1494, column: 47, scope: !13195)
!13201 = !DILocation(line: 1494, column: 53, scope: !13195)
!13202 = !DILocation(line: 1494, column: 45, scope: !13195)
!13203 = !DILocation(line: 1495, column: 6, scope: !13195)
!13204 = !DILocation(line: 1494, column: 58, scope: !13195)
!13205 = !DILocation(line: 1494, column: 28, scope: !13195)
!13206 = !DILocation(line: 1494, column: 8, scope: !13196)
!13207 = !DILocation(line: 1496, column: 12, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13195, file: !3, line: 1495, column: 18)
!13209 = !DILocation(line: 1496, column: 10, scope: !13208)
!13210 = !DILocation(line: 1497, column: 4, scope: !13208)
!13211 = !DILocation(line: 1498, column: 12, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13195, file: !3, line: 1497, column: 11)
!13213 = !DILocation(line: 1498, column: 10, scope: !13212)
!13214 = !DILocation(line: 1499, column: 5, scope: !13212)
!13215 = !DILocation(line: 1499, column: 11, scope: !13212)
!13216 = !DILocation(line: 1499, column: 24, scope: !13212)
!13217 = !DILocation(line: 1501, column: 4, scope: !13196)
!13218 = !DILocation(line: 1503, column: 2, scope: !13181)
!13219 = !DILocalVariable(name: "__mptr", scope: !13220, file: !3, line: 1491, type: !189)
!13220 = distinct !DILexicalBlock(scope: !13178, file: !3, line: 1491, column: 2)
!13221 = !DILocation(line: 1491, column: 2, scope: !13220)
!13222 = !DILocation(line: 1491, column: 2, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13220, file: !3, line: 1491, column: 2)
!13224 = distinct !{!13224, !13176, !13225}
!13225 = !DILocation(line: 1503, column: 2, scope: !13172)
!13226 = !DILocation(line: 1504, column: 26, scope: !13119)
!13227 = !DILocation(line: 1504, column: 30, scope: !13119)
!13228 = !DILocation(line: 1504, column: 36, scope: !13119)
!13229 = !DILocation(line: 409, column: 2, scope: !5633, inlinedAt: !13125)
!13230 = !DILocation(line: 409, column: 2, scope: !5638, inlinedAt: !13125)
!13231 = !DILocation(line: 409, column: 2, scope: !5639, inlinedAt: !13125)
!13232 = !DILocation(line: 409, column: 2, scope: !5646, inlinedAt: !13125)
!13233 = !DILocation(line: 409, column: 2, scope: !5649, inlinedAt: !13125)
!13234 = !DILocation(line: 1505, column: 9, scope: !13119)
!13235 = !DILocation(line: 1505, column: 2, scope: !13119)
!13236 = distinct !DISubprogram(name: "kmalloc_array", scope: !156, file: !156, line: 584, type: !13237, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13237 = !DISubroutineType(types: !13238)
!13238 = !{!189, !369, !369, !788}
!13239 = !DILocation(line: 445, column: 72, scope: !10551, inlinedAt: !13240)
!13240 = distinct !DILocation(line: 552, column: 10, scope: !10556, inlinedAt: !13241)
!13241 = distinct !DILocation(line: 591, column: 10, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13236, file: !156, line: 590, column: 6)
!13243 = !DILocation(line: 446, column: 9, scope: !10551, inlinedAt: !13240)
!13244 = !DILocation(line: 446, column: 23, scope: !10551, inlinedAt: !13240)
!13245 = !DILocation(line: 448, column: 8, scope: !10551, inlinedAt: !13240)
!13246 = !DILocation(line: 318, column: 67, scope: !10569, inlinedAt: !13247)
!13247 = distinct !DILocation(line: 553, column: 20, scope: !10556, inlinedAt: !13241)
!13248 = !DILocation(line: 346, column: 58, scope: !10575, inlinedAt: !13249)
!13249 = distinct !DILocation(line: 547, column: 11, scope: !10556, inlinedAt: !13241)
!13250 = !DILocation(line: 472, column: 28, scope: !10581, inlinedAt: !13251)
!13251 = distinct !DILocation(line: 481, column: 9, scope: !10586, inlinedAt: !13252)
!13252 = distinct !DILocation(line: 545, column: 11, scope: !10588, inlinedAt: !13241)
!13253 = !DILocation(line: 472, column: 40, scope: !10581, inlinedAt: !13251)
!13254 = !DILocation(line: 472, column: 60, scope: !10581, inlinedAt: !13251)
!13255 = !DILocation(line: 478, column: 51, scope: !10586, inlinedAt: !13252)
!13256 = !DILocation(line: 478, column: 63, scope: !10586, inlinedAt: !13252)
!13257 = !DILocation(line: 480, column: 15, scope: !10586, inlinedAt: !13252)
!13258 = !DILocation(line: 538, column: 45, scope: !10558, inlinedAt: !13241)
!13259 = !DILocation(line: 538, column: 57, scope: !10558, inlinedAt: !13241)
!13260 = !DILocation(line: 542, column: 16, scope: !10556, inlinedAt: !13241)
!13261 = !DILocalVariable(name: "n", arg: 1, scope: !13236, file: !156, line: 584, type: !369)
!13262 = !DILocation(line: 584, column: 42, scope: !13236)
!13263 = !DILocalVariable(name: "size", arg: 2, scope: !13236, file: !156, line: 584, type: !369)
!13264 = !DILocation(line: 584, column: 52, scope: !13236)
!13265 = !DILocalVariable(name: "flags", arg: 3, scope: !13236, file: !156, line: 584, type: !788)
!13266 = !DILocation(line: 584, column: 64, scope: !13236)
!13267 = !DILocalVariable(name: "bytes", scope: !13236, file: !156, line: 586, type: !369)
!13268 = !DILocation(line: 586, column: 9, scope: !13236)
!13269 = !DILocalVariable(name: "__a", scope: !13270, file: !156, line: 588, type: !369)
!13270 = distinct !DILexicalBlock(scope: !13271, file: !156, line: 588, column: 6)
!13271 = distinct !DILexicalBlock(scope: !13236, file: !156, line: 588, column: 6)
!13272 = !DILocation(line: 588, column: 6, scope: !13270)
!13273 = !DILocalVariable(name: "__b", scope: !13270, file: !156, line: 588, type: !369)
!13274 = !DILocalVariable(name: "__d", scope: !13270, file: !156, line: 588, type: !1836)
!13275 = !DILocation(line: 588, column: 6, scope: !13271)
!13276 = !DILocation(line: 588, column: 6, scope: !13236)
!13277 = !DILocation(line: 589, column: 3, scope: !13271)
!13278 = !DILocation(line: 590, column: 27, scope: !13242)
!13279 = !DILocation(line: 590, column: 6, scope: !13242)
!13280 = !DILocation(line: 590, column: 30, scope: !13242)
!13281 = !DILocation(line: 590, column: 54, scope: !13242)
!13282 = !DILocation(line: 590, column: 33, scope: !13242)
!13283 = !DILocation(line: 590, column: 6, scope: !13236)
!13284 = !DILocation(line: 591, column: 18, scope: !13242)
!13285 = !DILocation(line: 591, column: 25, scope: !13242)
!13286 = !DILocation(line: 540, column: 27, scope: !10557, inlinedAt: !13241)
!13287 = !DILocation(line: 540, column: 6, scope: !10557, inlinedAt: !13241)
!13288 = !DILocation(line: 540, column: 6, scope: !10558, inlinedAt: !13241)
!13289 = !DILocation(line: 544, column: 7, scope: !10588, inlinedAt: !13241)
!13290 = !DILocation(line: 544, column: 12, scope: !10588, inlinedAt: !13241)
!13291 = !DILocation(line: 544, column: 7, scope: !10556, inlinedAt: !13241)
!13292 = !DILocation(line: 545, column: 25, scope: !10588, inlinedAt: !13241)
!13293 = !DILocation(line: 545, column: 31, scope: !10588, inlinedAt: !13241)
!13294 = !DILocation(line: 480, column: 33, scope: !10586, inlinedAt: !13252)
!13295 = !DILocation(line: 480, column: 23, scope: !10586, inlinedAt: !13252)
!13296 = !DILocation(line: 481, column: 29, scope: !10586, inlinedAt: !13252)
!13297 = !DILocation(line: 481, column: 35, scope: !10586, inlinedAt: !13252)
!13298 = !DILocation(line: 481, column: 42, scope: !10586, inlinedAt: !13252)
!13299 = !DILocation(line: 474, column: 23, scope: !10581, inlinedAt: !13251)
!13300 = !DILocation(line: 474, column: 29, scope: !10581, inlinedAt: !13251)
!13301 = !DILocation(line: 474, column: 36, scope: !10581, inlinedAt: !13251)
!13302 = !DILocation(line: 474, column: 9, scope: !10581, inlinedAt: !13251)
!13303 = !DILocation(line: 545, column: 4, scope: !10588, inlinedAt: !13241)
!13304 = !DILocation(line: 547, column: 25, scope: !10556, inlinedAt: !13241)
!13305 = !DILocation(line: 348, column: 7, scope: !10706, inlinedAt: !13249)
!13306 = !DILocation(line: 348, column: 6, scope: !10575, inlinedAt: !13249)
!13307 = !DILocation(line: 349, column: 3, scope: !10706, inlinedAt: !13249)
!13308 = !DILocation(line: 351, column: 6, scope: !10710, inlinedAt: !13249)
!13309 = !DILocation(line: 351, column: 11, scope: !10710, inlinedAt: !13249)
!13310 = !DILocation(line: 351, column: 6, scope: !10575, inlinedAt: !13249)
!13311 = !DILocation(line: 352, column: 3, scope: !10710, inlinedAt: !13249)
!13312 = !DILocation(line: 354, column: 32, scope: !10715, inlinedAt: !13249)
!13313 = !DILocation(line: 354, column: 37, scope: !10715, inlinedAt: !13249)
!13314 = !DILocation(line: 354, column: 42, scope: !10715, inlinedAt: !13249)
!13315 = !DILocation(line: 354, column: 45, scope: !10715, inlinedAt: !13249)
!13316 = !DILocation(line: 354, column: 50, scope: !10715, inlinedAt: !13249)
!13317 = !DILocation(line: 354, column: 6, scope: !10575, inlinedAt: !13249)
!13318 = !DILocation(line: 355, column: 3, scope: !10715, inlinedAt: !13249)
!13319 = !DILocation(line: 356, column: 32, scope: !10723, inlinedAt: !13249)
!13320 = !DILocation(line: 356, column: 37, scope: !10723, inlinedAt: !13249)
!13321 = !DILocation(line: 356, column: 43, scope: !10723, inlinedAt: !13249)
!13322 = !DILocation(line: 356, column: 46, scope: !10723, inlinedAt: !13249)
!13323 = !DILocation(line: 356, column: 51, scope: !10723, inlinedAt: !13249)
!13324 = !DILocation(line: 356, column: 6, scope: !10575, inlinedAt: !13249)
!13325 = !DILocation(line: 357, column: 3, scope: !10723, inlinedAt: !13249)
!13326 = !DILocation(line: 358, column: 6, scope: !10731, inlinedAt: !13249)
!13327 = !DILocation(line: 358, column: 11, scope: !10731, inlinedAt: !13249)
!13328 = !DILocation(line: 358, column: 6, scope: !10575, inlinedAt: !13249)
!13329 = !DILocation(line: 358, column: 26, scope: !10731, inlinedAt: !13249)
!13330 = !DILocation(line: 359, column: 6, scope: !10736, inlinedAt: !13249)
!13331 = !DILocation(line: 359, column: 11, scope: !10736, inlinedAt: !13249)
!13332 = !DILocation(line: 359, column: 6, scope: !10575, inlinedAt: !13249)
!13333 = !DILocation(line: 359, column: 26, scope: !10736, inlinedAt: !13249)
!13334 = !DILocation(line: 360, column: 6, scope: !10741, inlinedAt: !13249)
!13335 = !DILocation(line: 360, column: 11, scope: !10741, inlinedAt: !13249)
!13336 = !DILocation(line: 360, column: 6, scope: !10575, inlinedAt: !13249)
!13337 = !DILocation(line: 360, column: 26, scope: !10741, inlinedAt: !13249)
!13338 = !DILocation(line: 361, column: 6, scope: !10746, inlinedAt: !13249)
!13339 = !DILocation(line: 361, column: 11, scope: !10746, inlinedAt: !13249)
!13340 = !DILocation(line: 361, column: 6, scope: !10575, inlinedAt: !13249)
!13341 = !DILocation(line: 361, column: 26, scope: !10746, inlinedAt: !13249)
!13342 = !DILocation(line: 362, column: 6, scope: !10751, inlinedAt: !13249)
!13343 = !DILocation(line: 362, column: 11, scope: !10751, inlinedAt: !13249)
!13344 = !DILocation(line: 362, column: 6, scope: !10575, inlinedAt: !13249)
!13345 = !DILocation(line: 362, column: 26, scope: !10751, inlinedAt: !13249)
!13346 = !DILocation(line: 363, column: 6, scope: !10756, inlinedAt: !13249)
!13347 = !DILocation(line: 363, column: 11, scope: !10756, inlinedAt: !13249)
!13348 = !DILocation(line: 363, column: 6, scope: !10575, inlinedAt: !13249)
!13349 = !DILocation(line: 363, column: 26, scope: !10756, inlinedAt: !13249)
!13350 = !DILocation(line: 364, column: 6, scope: !10761, inlinedAt: !13249)
!13351 = !DILocation(line: 364, column: 11, scope: !10761, inlinedAt: !13249)
!13352 = !DILocation(line: 364, column: 6, scope: !10575, inlinedAt: !13249)
!13353 = !DILocation(line: 364, column: 26, scope: !10761, inlinedAt: !13249)
!13354 = !DILocation(line: 365, column: 6, scope: !10766, inlinedAt: !13249)
!13355 = !DILocation(line: 365, column: 11, scope: !10766, inlinedAt: !13249)
!13356 = !DILocation(line: 365, column: 6, scope: !10575, inlinedAt: !13249)
!13357 = !DILocation(line: 365, column: 26, scope: !10766, inlinedAt: !13249)
!13358 = !DILocation(line: 366, column: 6, scope: !10771, inlinedAt: !13249)
!13359 = !DILocation(line: 366, column: 11, scope: !10771, inlinedAt: !13249)
!13360 = !DILocation(line: 366, column: 6, scope: !10575, inlinedAt: !13249)
!13361 = !DILocation(line: 366, column: 26, scope: !10771, inlinedAt: !13249)
!13362 = !DILocation(line: 367, column: 6, scope: !10776, inlinedAt: !13249)
!13363 = !DILocation(line: 367, column: 11, scope: !10776, inlinedAt: !13249)
!13364 = !DILocation(line: 367, column: 6, scope: !10575, inlinedAt: !13249)
!13365 = !DILocation(line: 367, column: 26, scope: !10776, inlinedAt: !13249)
!13366 = !DILocation(line: 368, column: 6, scope: !10781, inlinedAt: !13249)
!13367 = !DILocation(line: 368, column: 11, scope: !10781, inlinedAt: !13249)
!13368 = !DILocation(line: 368, column: 6, scope: !10575, inlinedAt: !13249)
!13369 = !DILocation(line: 368, column: 26, scope: !10781, inlinedAt: !13249)
!13370 = !DILocation(line: 369, column: 6, scope: !10786, inlinedAt: !13249)
!13371 = !DILocation(line: 369, column: 11, scope: !10786, inlinedAt: !13249)
!13372 = !DILocation(line: 369, column: 6, scope: !10575, inlinedAt: !13249)
!13373 = !DILocation(line: 369, column: 26, scope: !10786, inlinedAt: !13249)
!13374 = !DILocation(line: 370, column: 6, scope: !10791, inlinedAt: !13249)
!13375 = !DILocation(line: 370, column: 11, scope: !10791, inlinedAt: !13249)
!13376 = !DILocation(line: 370, column: 6, scope: !10575, inlinedAt: !13249)
!13377 = !DILocation(line: 370, column: 26, scope: !10791, inlinedAt: !13249)
!13378 = !DILocation(line: 371, column: 6, scope: !10796, inlinedAt: !13249)
!13379 = !DILocation(line: 371, column: 11, scope: !10796, inlinedAt: !13249)
!13380 = !DILocation(line: 371, column: 6, scope: !10575, inlinedAt: !13249)
!13381 = !DILocation(line: 371, column: 26, scope: !10796, inlinedAt: !13249)
!13382 = !DILocation(line: 372, column: 6, scope: !10801, inlinedAt: !13249)
!13383 = !DILocation(line: 372, column: 11, scope: !10801, inlinedAt: !13249)
!13384 = !DILocation(line: 372, column: 6, scope: !10575, inlinedAt: !13249)
!13385 = !DILocation(line: 372, column: 26, scope: !10801, inlinedAt: !13249)
!13386 = !DILocation(line: 373, column: 6, scope: !10806, inlinedAt: !13249)
!13387 = !DILocation(line: 373, column: 11, scope: !10806, inlinedAt: !13249)
!13388 = !DILocation(line: 373, column: 6, scope: !10575, inlinedAt: !13249)
!13389 = !DILocation(line: 373, column: 26, scope: !10806, inlinedAt: !13249)
!13390 = !DILocation(line: 374, column: 6, scope: !10811, inlinedAt: !13249)
!13391 = !DILocation(line: 374, column: 11, scope: !10811, inlinedAt: !13249)
!13392 = !DILocation(line: 374, column: 6, scope: !10575, inlinedAt: !13249)
!13393 = !DILocation(line: 374, column: 26, scope: !10811, inlinedAt: !13249)
!13394 = !DILocation(line: 375, column: 6, scope: !10816, inlinedAt: !13249)
!13395 = !DILocation(line: 375, column: 11, scope: !10816, inlinedAt: !13249)
!13396 = !DILocation(line: 375, column: 6, scope: !10575, inlinedAt: !13249)
!13397 = !DILocation(line: 375, column: 27, scope: !10816, inlinedAt: !13249)
!13398 = !DILocation(line: 376, column: 6, scope: !10821, inlinedAt: !13249)
!13399 = !DILocation(line: 376, column: 11, scope: !10821, inlinedAt: !13249)
!13400 = !DILocation(line: 376, column: 6, scope: !10575, inlinedAt: !13249)
!13401 = !DILocation(line: 376, column: 32, scope: !10821, inlinedAt: !13249)
!13402 = !DILocation(line: 377, column: 6, scope: !10826, inlinedAt: !13249)
!13403 = !DILocation(line: 377, column: 11, scope: !10826, inlinedAt: !13249)
!13404 = !DILocation(line: 377, column: 6, scope: !10575, inlinedAt: !13249)
!13405 = !DILocation(line: 377, column: 32, scope: !10826, inlinedAt: !13249)
!13406 = !DILocation(line: 378, column: 6, scope: !10831, inlinedAt: !13249)
!13407 = !DILocation(line: 378, column: 11, scope: !10831, inlinedAt: !13249)
!13408 = !DILocation(line: 378, column: 6, scope: !10575, inlinedAt: !13249)
!13409 = !DILocation(line: 378, column: 32, scope: !10831, inlinedAt: !13249)
!13410 = !DILocation(line: 379, column: 6, scope: !10836, inlinedAt: !13249)
!13411 = !DILocation(line: 379, column: 11, scope: !10836, inlinedAt: !13249)
!13412 = !DILocation(line: 379, column: 6, scope: !10575, inlinedAt: !13249)
!13413 = !DILocation(line: 379, column: 33, scope: !10836, inlinedAt: !13249)
!13414 = !DILocation(line: 380, column: 6, scope: !10841, inlinedAt: !13249)
!13415 = !DILocation(line: 380, column: 11, scope: !10841, inlinedAt: !13249)
!13416 = !DILocation(line: 380, column: 6, scope: !10575, inlinedAt: !13249)
!13417 = !DILocation(line: 380, column: 33, scope: !10841, inlinedAt: !13249)
!13418 = !DILocation(line: 381, column: 6, scope: !10846, inlinedAt: !13249)
!13419 = !DILocation(line: 381, column: 11, scope: !10846, inlinedAt: !13249)
!13420 = !DILocation(line: 381, column: 6, scope: !10575, inlinedAt: !13249)
!13421 = !DILocation(line: 381, column: 33, scope: !10846, inlinedAt: !13249)
!13422 = !DILocation(line: 382, column: 2, scope: !10851, inlinedAt: !13249)
!13423 = !DILocation(line: 382, column: 2, scope: !10855, inlinedAt: !13249)
!13424 = !DILocation(line: 382, column: 2, scope: !10856, inlinedAt: !13249)
!13425 = !DILocation(line: 386, column: 1, scope: !10575, inlinedAt: !13249)
!13426 = !DILocation(line: 547, column: 9, scope: !10556, inlinedAt: !13241)
!13427 = !DILocation(line: 549, column: 8, scope: !10862, inlinedAt: !13241)
!13428 = !DILocation(line: 549, column: 7, scope: !10556, inlinedAt: !13241)
!13429 = !DILocation(line: 550, column: 4, scope: !10862, inlinedAt: !13241)
!13430 = !DILocation(line: 553, column: 33, scope: !10556, inlinedAt: !13241)
!13431 = !DILocation(line: 325, column: 6, scope: !10867, inlinedAt: !13247)
!13432 = !DILocation(line: 325, column: 6, scope: !10569, inlinedAt: !13247)
!13433 = !DILocation(line: 326, column: 3, scope: !10867, inlinedAt: !13247)
!13434 = !DILocation(line: 332, column: 9, scope: !10569, inlinedAt: !13247)
!13435 = !DILocation(line: 332, column: 15, scope: !10569, inlinedAt: !13247)
!13436 = !DILocation(line: 332, column: 2, scope: !10569, inlinedAt: !13247)
!13437 = !DILocation(line: 336, column: 1, scope: !10569, inlinedAt: !13247)
!13438 = !DILocation(line: 553, column: 5, scope: !10556, inlinedAt: !13241)
!13439 = !DILocation(line: 553, column: 41, scope: !10556, inlinedAt: !13241)
!13440 = !DILocation(line: 554, column: 5, scope: !10556, inlinedAt: !13241)
!13441 = !DILocation(line: 554, column: 12, scope: !10556, inlinedAt: !13241)
!13442 = !DILocation(line: 448, column: 31, scope: !10551, inlinedAt: !13240)
!13443 = !DILocation(line: 448, column: 34, scope: !10551, inlinedAt: !13240)
!13444 = !DILocation(line: 448, column: 14, scope: !10551, inlinedAt: !13240)
!13445 = !DILocation(line: 450, column: 22, scope: !10551, inlinedAt: !13240)
!13446 = !DILocation(line: 450, column: 25, scope: !10551, inlinedAt: !13240)
!13447 = !DILocation(line: 450, column: 30, scope: !10551, inlinedAt: !13240)
!13448 = !DILocation(line: 450, column: 36, scope: !10551, inlinedAt: !13240)
!13449 = !DILocation(line: 450, column: 8, scope: !10551, inlinedAt: !13240)
!13450 = !DILocation(line: 450, column: 6, scope: !10551, inlinedAt: !13240)
!13451 = !DILocation(line: 451, column: 9, scope: !10551, inlinedAt: !13240)
!13452 = !DILocation(line: 552, column: 3, scope: !10556, inlinedAt: !13241)
!13453 = !DILocation(line: 557, column: 19, scope: !10558, inlinedAt: !13241)
!13454 = !DILocation(line: 557, column: 25, scope: !10558, inlinedAt: !13241)
!13455 = !DILocation(line: 557, column: 9, scope: !10558, inlinedAt: !13241)
!13456 = !DILocation(line: 557, column: 2, scope: !10558, inlinedAt: !13241)
!13457 = !DILocation(line: 558, column: 1, scope: !10558, inlinedAt: !13241)
!13458 = !DILocation(line: 591, column: 3, scope: !13242)
!13459 = !DILocation(line: 592, column: 19, scope: !13236)
!13460 = !DILocation(line: 592, column: 26, scope: !13236)
!13461 = !DILocation(line: 592, column: 9, scope: !13236)
!13462 = !DILocation(line: 592, column: 2, scope: !13236)
!13463 = !DILocation(line: 593, column: 1, scope: !13236)
!13464 = distinct !DISubprogram(name: "sg_set_buf", scope: !4472, file: !4472, line: 139, type: !13465, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13465 = !DISubroutineType(types: !13466)
!13466 = !{null, !4470, !2320, !7}
!13467 = !DILocalVariable(name: "sg", arg: 1, scope: !13464, file: !4472, line: 139, type: !4470)
!13468 = !DILocation(line: 139, column: 51, scope: !13464)
!13469 = !DILocalVariable(name: "buf", arg: 2, scope: !13464, file: !4472, line: 139, type: !2320)
!13470 = !DILocation(line: 139, column: 67, scope: !13464)
!13471 = !DILocalVariable(name: "buflen", arg: 3, scope: !13464, file: !4472, line: 140, type: !7)
!13472 = !DILocation(line: 140, column: 23, scope: !13464)
!13473 = !DILocation(line: 145, column: 14, scope: !13464)
!13474 = !DILocation(line: 145, column: 18, scope: !13464)
!13475 = !DILocation(line: 145, column: 37, scope: !13464)
!13476 = !DILocation(line: 145, column: 45, scope: !13464)
!13477 = !DILocation(line: 145, column: 2, scope: !13464)
!13478 = !DILocation(line: 146, column: 1, scope: !13464)
!13479 = distinct !DISubprogram(name: "async_completed", scope: !3, file: !3, line: 600, type: !4493, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13480 = !DILocation(line: 407, column: 64, scope: !5443, inlinedAt: !13481)
!13481 = distinct !DILocation(line: 631, column: 2, scope: !13479)
!13482 = !DILocation(line: 407, column: 84, scope: !5443, inlinedAt: !13481)
!13483 = !DILocation(line: 327, column: 67, scope: !5452, inlinedAt: !13484)
!13484 = distinct !DILocation(line: 610, column: 2, scope: !13485)
!13485 = distinct !DILexicalBlock(scope: !13486, file: !3, line: 610, column: 2)
!13486 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 610, column: 2)
!13487 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 610, column: 2)
!13488 = distinct !DILexicalBlock(scope: !13489, file: !3, line: 610, column: 2)
!13489 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 610, column: 2)
!13490 = !DILocalVariable(name: "urb", arg: 1, scope: !13479, file: !3, line: 600, type: !4442)
!13491 = !DILocation(line: 600, column: 41, scope: !13479)
!13492 = !DILocalVariable(name: "as", scope: !13479, file: !3, line: 602, type: !4429)
!13493 = !DILocation(line: 602, column: 16, scope: !13479)
!13494 = !DILocation(line: 602, column: 21, scope: !13479)
!13495 = !DILocation(line: 602, column: 26, scope: !13479)
!13496 = !DILocalVariable(name: "ps", scope: !13479, file: !3, line: 603, type: !190)
!13497 = !DILocation(line: 603, column: 24, scope: !13479)
!13498 = !DILocation(line: 603, column: 29, scope: !13479)
!13499 = !DILocation(line: 603, column: 33, scope: !13479)
!13500 = !DILocalVariable(name: "pid", scope: !13479, file: !3, line: 604, type: !1513)
!13501 = !DILocation(line: 604, column: 14, scope: !13479)
!13502 = !DILocalVariable(name: "cred", scope: !13479, file: !3, line: 605, type: !1589)
!13503 = !DILocation(line: 605, column: 21, scope: !13479)
!13504 = !DILocalVariable(name: "flags", scope: !13479, file: !3, line: 606, type: !372)
!13505 = !DILocation(line: 606, column: 16, scope: !13479)
!13506 = !DILocalVariable(name: "addr", scope: !13479, file: !3, line: 607, type: !2192)
!13507 = !DILocation(line: 607, column: 11, scope: !13479)
!13508 = !DILocalVariable(name: "signr", scope: !13479, file: !3, line: 608, type: !205)
!13509 = !DILocation(line: 608, column: 6, scope: !13479)
!13510 = !DILocalVariable(name: "errno", scope: !13479, file: !3, line: 608, type: !205)
!13511 = !DILocation(line: 608, column: 13, scope: !13479)
!13512 = !DILocation(line: 610, column: 2, scope: !13479)
!13513 = !DILocation(line: 610, column: 2, scope: !13489)
!13514 = !DILocalVariable(name: "__dummy", scope: !13515, file: !3, line: 610, type: !372)
!13515 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 610, column: 2)
!13516 = !DILocation(line: 610, column: 2, scope: !13515)
!13517 = !DILocalVariable(name: "__dummy2", scope: !13515, file: !3, line: 610, type: !372)
!13518 = !DILocation(line: 610, column: 2, scope: !13488)
!13519 = !DILocation(line: 610, column: 2, scope: !13487)
!13520 = !DILocation(line: 610, column: 2, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13487, file: !3, line: 610, column: 2)
!13522 = !DILocalVariable(name: "__dummy", scope: !13523, file: !3, line: 610, type: !372)
!13523 = distinct !DILexicalBlock(scope: !13524, file: !3, line: 610, column: 2)
!13524 = distinct !DILexicalBlock(scope: !13521, file: !3, line: 610, column: 2)
!13525 = !DILocation(line: 610, column: 2, scope: !13523)
!13526 = !DILocalVariable(name: "__dummy2", scope: !13523, file: !3, line: 610, type: !372)
!13527 = !DILocation(line: 610, column: 2, scope: !13524)
!13528 = !DILocation(line: 610, column: 2, scope: !13486)
!13529 = !{i32 -2140986568}
!13530 = !DILocation(line: 610, column: 2, scope: !13485)
!13531 = !DILocation(line: 329, column: 10, scope: !5452, inlinedAt: !13484)
!13532 = !DILocation(line: 329, column: 16, scope: !5452, inlinedAt: !13484)
!13533 = !DILocation(line: 611, column: 18, scope: !13479)
!13534 = !DILocation(line: 611, column: 22, scope: !13479)
!13535 = !DILocation(line: 611, column: 34, scope: !13479)
!13536 = !DILocation(line: 611, column: 38, scope: !13479)
!13537 = !DILocation(line: 611, column: 2, scope: !13479)
!13538 = !DILocation(line: 612, column: 15, scope: !13479)
!13539 = !DILocation(line: 612, column: 20, scope: !13479)
!13540 = !DILocation(line: 612, column: 2, scope: !13479)
!13541 = !DILocation(line: 612, column: 6, scope: !13479)
!13542 = !DILocation(line: 612, column: 13, scope: !13479)
!13543 = !DILocation(line: 613, column: 10, scope: !13479)
!13544 = !DILocation(line: 613, column: 14, scope: !13479)
!13545 = !DILocation(line: 613, column: 8, scope: !13479)
!13546 = !DILocation(line: 614, column: 6, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 614, column: 6)
!13548 = !DILocation(line: 614, column: 6, scope: !13479)
!13549 = !DILocation(line: 615, column: 11, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !13547, file: !3, line: 614, column: 13)
!13551 = !DILocation(line: 615, column: 15, scope: !13550)
!13552 = !DILocation(line: 615, column: 9, scope: !13550)
!13553 = !DILocation(line: 616, column: 10, scope: !13550)
!13554 = !DILocation(line: 616, column: 14, scope: !13550)
!13555 = !DILocation(line: 617, column: 17, scope: !13550)
!13556 = !DILocation(line: 617, column: 21, scope: !13550)
!13557 = !DILocation(line: 617, column: 9, scope: !13550)
!13558 = !DILocation(line: 617, column: 7, scope: !13550)
!13559 = !DILocation(line: 618, column: 19, scope: !13550)
!13560 = !DILocation(line: 618, column: 23, scope: !13550)
!13561 = !DILocation(line: 618, column: 10, scope: !13550)
!13562 = !DILocation(line: 618, column: 8, scope: !13550)
!13563 = !DILocation(line: 619, column: 2, scope: !13550)
!13564 = !DILocation(line: 620, column: 2, scope: !13479)
!13565 = !DILocation(line: 620, column: 2, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13567, file: !3, line: 620, column: 2)
!13567 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 620, column: 2)
!13568 = !DILocation(line: 620, column: 2, scope: !13567)
!13569 = !DILocation(line: 621, column: 12, scope: !13479)
!13570 = !DILocation(line: 621, column: 17, scope: !13479)
!13571 = !DILocation(line: 621, column: 22, scope: !13479)
!13572 = !DILocation(line: 621, column: 26, scope: !13479)
!13573 = !DILocation(line: 621, column: 35, scope: !13479)
!13574 = !DILocation(line: 621, column: 40, scope: !13479)
!13575 = !DILocation(line: 621, column: 46, scope: !13479)
!13576 = !DILocation(line: 621, column: 51, scope: !13479)
!13577 = !DILocation(line: 622, column: 4, scope: !13479)
!13578 = !DILocation(line: 622, column: 8, scope: !13479)
!13579 = !DILocation(line: 621, column: 2, scope: !13479)
!13580 = !DILocation(line: 623, column: 21, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 623, column: 6)
!13582 = !DILocation(line: 623, column: 6, scope: !13581)
!13583 = !DILocation(line: 623, column: 6, scope: !13479)
!13584 = !DILocation(line: 624, column: 18, scope: !13581)
!13585 = !DILocation(line: 624, column: 23, scope: !13581)
!13586 = !DILocation(line: 624, column: 28, scope: !13581)
!13587 = !DILocation(line: 624, column: 3, scope: !13581)
!13588 = !DILocation(line: 626, column: 6, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 626, column: 6)
!13590 = !DILocation(line: 626, column: 10, scope: !13589)
!13591 = !DILocation(line: 626, column: 17, scope: !13589)
!13592 = !DILocation(line: 626, column: 21, scope: !13589)
!13593 = !DILocation(line: 626, column: 24, scope: !13589)
!13594 = !DILocation(line: 626, column: 28, scope: !13589)
!13595 = !DILocation(line: 626, column: 38, scope: !13589)
!13596 = !DILocation(line: 626, column: 41, scope: !13589)
!13597 = !DILocation(line: 626, column: 45, scope: !13589)
!13598 = !DILocation(line: 626, column: 52, scope: !13589)
!13599 = !DILocation(line: 626, column: 67, scope: !13589)
!13600 = !DILocation(line: 627, column: 4, scope: !13589)
!13601 = !DILocation(line: 627, column: 8, scope: !13589)
!13602 = !DILocation(line: 627, column: 15, scope: !13589)
!13603 = !DILocation(line: 626, column: 6, scope: !13479)
!13604 = !DILocation(line: 628, column: 20, scope: !13589)
!13605 = !DILocation(line: 628, column: 24, scope: !13589)
!13606 = !DILocation(line: 628, column: 28, scope: !13589)
!13607 = !DILocation(line: 628, column: 3, scope: !13589)
!13608 = !DILocation(line: 630, column: 2, scope: !13479)
!13609 = !DILocation(line: 631, column: 26, scope: !13479)
!13610 = !DILocation(line: 631, column: 30, scope: !13479)
!13611 = !DILocation(line: 631, column: 36, scope: !13479)
!13612 = !DILocation(line: 409, column: 2, scope: !5633, inlinedAt: !13481)
!13613 = !DILocation(line: 409, column: 2, scope: !5638, inlinedAt: !13481)
!13614 = !DILocation(line: 409, column: 2, scope: !5639, inlinedAt: !13481)
!13615 = !DILocation(line: 409, column: 2, scope: !5646, inlinedAt: !13481)
!13616 = !DILocation(line: 409, column: 2, scope: !5649, inlinedAt: !13481)
!13617 = !DILocation(line: 633, column: 6, scope: !13618)
!13618 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 633, column: 6)
!13619 = !DILocation(line: 633, column: 6, scope: !13479)
!13620 = !DILocation(line: 634, column: 24, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13618, file: !3, line: 633, column: 13)
!13622 = !DILocation(line: 634, column: 31, scope: !13621)
!13623 = !DILocation(line: 634, column: 44, scope: !13621)
!13624 = !DILocation(line: 634, column: 49, scope: !13621)
!13625 = !DILocation(line: 634, column: 3, scope: !13621)
!13626 = !DILocation(line: 635, column: 11, scope: !13621)
!13627 = !DILocation(line: 635, column: 3, scope: !13621)
!13628 = !DILocation(line: 636, column: 12, scope: !13621)
!13629 = !DILocation(line: 636, column: 3, scope: !13621)
!13630 = !DILocation(line: 637, column: 2, scope: !13621)
!13631 = !DILocation(line: 638, column: 1, scope: !13479)
!13632 = distinct !DISubprogram(name: "get_pid", scope: !74, file: !74, line: 82, type: !13633, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13633 = !DISubroutineType(types: !13634)
!13634 = !{!1513, !1513}
!13635 = !DILocalVariable(name: "pid", arg: 1, scope: !13632, file: !74, line: 82, type: !1513)
!13636 = !DILocation(line: 82, column: 47, scope: !13632)
!13637 = !DILocation(line: 84, column: 6, scope: !13638)
!13638 = distinct !DILexicalBlock(scope: !13632, file: !74, line: 84, column: 6)
!13639 = !DILocation(line: 84, column: 6, scope: !13632)
!13640 = !DILocation(line: 85, column: 17, scope: !13638)
!13641 = !DILocation(line: 85, column: 22, scope: !13638)
!13642 = !DILocation(line: 85, column: 3, scope: !13638)
!13643 = !DILocation(line: 86, column: 9, scope: !13632)
!13644 = !DILocation(line: 86, column: 2, scope: !13632)
!13645 = distinct !DISubprogram(name: "task_pid", scope: !1256, file: !1256, line: 1368, type: !13646, scopeLine: 1369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13646 = !DISubroutineType(types: !13647)
!13647 = !{!1513, !1254}
!13648 = !DILocalVariable(name: "task", arg: 1, scope: !13645, file: !1256, line: 1368, type: !1254)
!13649 = !DILocation(line: 1368, column: 56, scope: !13645)
!13650 = !DILocation(line: 1370, column: 9, scope: !13645)
!13651 = !DILocation(line: 1370, column: 15, scope: !13645)
!13652 = !DILocation(line: 1370, column: 2, scope: !13645)
!13653 = distinct !DISubprogram(name: "get_cred", scope: !1592, file: !1592, line: 247, type: !13654, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13654 = !DISubroutineType(types: !13655)
!13655 = !{!1589, !1589}
!13656 = !DILocalVariable(name: "cred", arg: 1, scope: !13653, file: !1592, line: 247, type: !1589)
!13657 = !DILocation(line: 247, column: 62, scope: !13653)
!13658 = !DILocalVariable(name: "nonconst_cred", scope: !13653, file: !1592, line: 249, type: !4524)
!13659 = !DILocation(line: 249, column: 15, scope: !13653)
!13660 = !DILocation(line: 249, column: 47, scope: !13653)
!13661 = !DILocation(line: 250, column: 7, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13653, file: !1592, line: 250, column: 6)
!13663 = !DILocation(line: 250, column: 6, scope: !13653)
!13664 = !DILocation(line: 251, column: 10, scope: !13662)
!13665 = !DILocation(line: 251, column: 3, scope: !13662)
!13666 = !DILocation(line: 252, column: 17, scope: !13653)
!13667 = !DILocation(line: 252, column: 2, scope: !13653)
!13668 = !DILocation(line: 253, column: 2, scope: !13653)
!13669 = !DILocation(line: 253, column: 17, scope: !13653)
!13670 = !DILocation(line: 253, column: 25, scope: !13653)
!13671 = !DILocation(line: 254, column: 22, scope: !13653)
!13672 = !DILocation(line: 254, column: 9, scope: !13653)
!13673 = !DILocation(line: 254, column: 2, scope: !13653)
!13674 = !DILocation(line: 255, column: 1, scope: !13653)
!13675 = distinct !DISubprogram(name: "snoop_urb_data", scope: !3, file: !3, line: 511, type: !13676, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13676 = !DISubroutineType(types: !13677)
!13677 = !{null, !4442, !7}
!13678 = !DILocalVariable(name: "urb", arg: 1, scope: !13675, file: !3, line: 511, type: !4442)
!13679 = !DILocation(line: 511, column: 40, scope: !13675)
!13680 = !DILocalVariable(name: "len", arg: 2, scope: !13675, file: !3, line: 511, type: !7)
!13681 = !DILocation(line: 511, column: 54, scope: !13675)
!13682 = !DILocalVariable(name: "i", scope: !13675, file: !3, line: 513, type: !205)
!13683 = !DILocation(line: 513, column: 6, scope: !13675)
!13684 = !DILocalVariable(name: "size", scope: !13675, file: !3, line: 513, type: !205)
!13685 = !DILocation(line: 513, column: 9, scope: !13675)
!13686 = !DILocalVariable(name: "__UNIQUE_ID___x261", scope: !13687, file: !3, line: 515, type: !7)
!13687 = distinct !DILexicalBlock(scope: !13675, file: !3, line: 515, column: 8)
!13688 = !DILocation(line: 515, column: 8, scope: !13687)
!13689 = !DILocalVariable(name: "__UNIQUE_ID___y262", scope: !13687, file: !3, line: 515, type: !7)
!13690 = !DILocation(line: 515, column: 6, scope: !13675)
!13691 = !DILocation(line: 516, column: 7, scope: !13692)
!13692 = distinct !DILexicalBlock(scope: !13675, file: !3, line: 516, column: 6)
!13693 = !DILocation(line: 516, column: 19, scope: !13692)
!13694 = !DILocation(line: 516, column: 22, scope: !13692)
!13695 = !DILocation(line: 516, column: 26, scope: !13692)
!13696 = !DILocation(line: 516, column: 6, scope: !13675)
!13697 = !DILocation(line: 517, column: 3, scope: !13692)
!13698 = !DILocation(line: 519, column: 6, scope: !13699)
!13699 = distinct !DILexicalBlock(scope: !13675, file: !3, line: 519, column: 6)
!13700 = !DILocation(line: 519, column: 11, scope: !13699)
!13701 = !DILocation(line: 519, column: 19, scope: !13699)
!13702 = !DILocation(line: 519, column: 6, scope: !13675)
!13703 = !DILocation(line: 521, column: 4, scope: !13704)
!13704 = distinct !DILexicalBlock(scope: !13699, file: !3, line: 519, column: 25)
!13705 = !DILocation(line: 521, column: 9, scope: !13704)
!13706 = !DILocation(line: 521, column: 26, scope: !13704)
!13707 = !DILocation(line: 520, column: 3, scope: !13704)
!13708 = !DILocation(line: 522, column: 3, scope: !13704)
!13709 = !DILocation(line: 525, column: 9, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13675, file: !3, line: 525, column: 2)
!13711 = !DILocation(line: 525, column: 7, scope: !13710)
!13712 = !DILocation(line: 525, column: 14, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13710, file: !3, line: 525, column: 2)
!13714 = !DILocation(line: 525, column: 18, scope: !13713)
!13715 = !DILocation(line: 525, column: 23, scope: !13713)
!13716 = !DILocation(line: 525, column: 16, scope: !13713)
!13717 = !DILocation(line: 525, column: 31, scope: !13713)
!13718 = !DILocation(line: 525, column: 34, scope: !13713)
!13719 = !DILocation(line: 0, scope: !13713)
!13720 = !DILocation(line: 525, column: 2, scope: !13710)
!13721 = !DILocation(line: 526, column: 11, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13713, file: !3, line: 525, column: 44)
!13723 = !DILocation(line: 526, column: 15, scope: !13722)
!13724 = !DILocation(line: 526, column: 10, scope: !13722)
!13725 = !DILocation(line: 526, column: 46, scope: !13722)
!13726 = !DILocation(line: 526, column: 8, scope: !13722)
!13727 = !DILocation(line: 528, column: 13, scope: !13722)
!13728 = !DILocation(line: 528, column: 18, scope: !13722)
!13729 = !DILocation(line: 528, column: 21, scope: !13722)
!13730 = !DILocation(line: 528, column: 4, scope: !13722)
!13731 = !DILocation(line: 528, column: 26, scope: !13722)
!13732 = !DILocation(line: 527, column: 3, scope: !13722)
!13733 = !DILocation(line: 529, column: 10, scope: !13722)
!13734 = !DILocation(line: 529, column: 7, scope: !13722)
!13735 = !DILocation(line: 530, column: 2, scope: !13722)
!13736 = !DILocation(line: 525, column: 40, scope: !13713)
!13737 = !DILocation(line: 525, column: 2, scope: !13713)
!13738 = distinct !{!13738, !13720, !13739}
!13739 = !DILocation(line: 530, column: 2, scope: !13710)
!13740 = !DILocation(line: 531, column: 1, scope: !13675)
!13741 = distinct !DISubprogram(name: "async_newpending", scope: !3, file: !3, line: 417, type: !8911, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13742 = !DILocation(line: 407, column: 64, scope: !5443, inlinedAt: !13743)
!13743 = distinct !DILocation(line: 424, column: 2, scope: !13741)
!13744 = !DILocation(line: 407, column: 84, scope: !5443, inlinedAt: !13743)
!13745 = !DILocation(line: 327, column: 67, scope: !5452, inlinedAt: !13746)
!13746 = distinct !DILocation(line: 422, column: 2, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13748, file: !3, line: 422, column: 2)
!13748 = distinct !DILexicalBlock(scope: !13749, file: !3, line: 422, column: 2)
!13749 = distinct !DILexicalBlock(scope: !13750, file: !3, line: 422, column: 2)
!13750 = distinct !DILexicalBlock(scope: !13751, file: !3, line: 422, column: 2)
!13751 = distinct !DILexicalBlock(scope: !13741, file: !3, line: 422, column: 2)
!13752 = !DILocalVariable(name: "as", arg: 1, scope: !13741, file: !3, line: 417, type: !4429)
!13753 = !DILocation(line: 417, column: 44, scope: !13741)
!13754 = !DILocalVariable(name: "ps", scope: !13741, file: !3, line: 419, type: !190)
!13755 = !DILocation(line: 419, column: 24, scope: !13741)
!13756 = !DILocation(line: 419, column: 29, scope: !13741)
!13757 = !DILocation(line: 419, column: 33, scope: !13741)
!13758 = !DILocalVariable(name: "flags", scope: !13741, file: !3, line: 420, type: !372)
!13759 = !DILocation(line: 420, column: 16, scope: !13741)
!13760 = !DILocation(line: 422, column: 2, scope: !13741)
!13761 = !DILocation(line: 422, column: 2, scope: !13751)
!13762 = !DILocalVariable(name: "__dummy", scope: !13763, file: !3, line: 422, type: !372)
!13763 = distinct !DILexicalBlock(scope: !13750, file: !3, line: 422, column: 2)
!13764 = !DILocation(line: 422, column: 2, scope: !13763)
!13765 = !DILocalVariable(name: "__dummy2", scope: !13763, file: !3, line: 422, type: !372)
!13766 = !DILocation(line: 422, column: 2, scope: !13750)
!13767 = !DILocation(line: 422, column: 2, scope: !13749)
!13768 = !DILocation(line: 422, column: 2, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13749, file: !3, line: 422, column: 2)
!13770 = !DILocalVariable(name: "__dummy", scope: !13771, file: !3, line: 422, type: !372)
!13771 = distinct !DILexicalBlock(scope: !13772, file: !3, line: 422, column: 2)
!13772 = distinct !DILexicalBlock(scope: !13769, file: !3, line: 422, column: 2)
!13773 = !DILocation(line: 422, column: 2, scope: !13771)
!13774 = !DILocalVariable(name: "__dummy2", scope: !13771, file: !3, line: 422, type: !372)
!13775 = !DILocation(line: 422, column: 2, scope: !13772)
!13776 = !DILocation(line: 422, column: 2, scope: !13748)
!13777 = !{i32 -2141007345}
!13778 = !DILocation(line: 422, column: 2, scope: !13747)
!13779 = !DILocation(line: 329, column: 10, scope: !5452, inlinedAt: !13746)
!13780 = !DILocation(line: 329, column: 16, scope: !5452, inlinedAt: !13746)
!13781 = !DILocation(line: 423, column: 17, scope: !13741)
!13782 = !DILocation(line: 423, column: 21, scope: !13741)
!13783 = !DILocation(line: 423, column: 33, scope: !13741)
!13784 = !DILocation(line: 423, column: 37, scope: !13741)
!13785 = !DILocation(line: 423, column: 2, scope: !13741)
!13786 = !DILocation(line: 424, column: 26, scope: !13741)
!13787 = !DILocation(line: 424, column: 30, scope: !13741)
!13788 = !DILocation(line: 424, column: 36, scope: !13741)
!13789 = !DILocation(line: 409, column: 2, scope: !5633, inlinedAt: !13743)
!13790 = !DILocation(line: 409, column: 2, scope: !5638, inlinedAt: !13743)
!13791 = !DILocation(line: 409, column: 2, scope: !5639, inlinedAt: !13743)
!13792 = !DILocation(line: 409, column: 2, scope: !5646, inlinedAt: !13743)
!13793 = !DILocation(line: 409, column: 2, scope: !5649, inlinedAt: !13743)
!13794 = !DILocation(line: 425, column: 1, scope: !13741)
!13795 = distinct !DISubprogram(name: "usb_endpoint_xfer_bulk", scope: !6, file: !6, line: 515, type: !9271, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13796 = !DILocalVariable(name: "epd", arg: 1, scope: !13795, file: !6, line: 516, type: !9273)
!13797 = !DILocation(line: 516, column: 43, scope: !13795)
!13798 = !DILocation(line: 518, column: 11, scope: !13795)
!13799 = !DILocation(line: 518, column: 16, scope: !13795)
!13800 = !DILocation(line: 518, column: 29, scope: !13795)
!13801 = !DILocation(line: 518, column: 59, scope: !13795)
!13802 = !DILocation(line: 518, column: 2, scope: !13795)
!13803 = distinct !DISubprogram(name: "usb_endpoint_num", scope: !6, file: !6, line: 469, type: !9271, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13804 = !DILocalVariable(name: "epd", arg: 1, scope: !13803, file: !6, line: 469, type: !9273)
!13805 = !DILocation(line: 469, column: 74, scope: !13803)
!13806 = !DILocation(line: 471, column: 9, scope: !13803)
!13807 = !DILocation(line: 471, column: 14, scope: !13803)
!13808 = !DILocation(line: 471, column: 31, scope: !13803)
!13809 = !DILocation(line: 471, column: 2, scope: !13803)
!13810 = distinct !DISubprogram(name: "async_removepending", scope: !3, file: !3, line: 427, type: !8911, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13811 = !DILocation(line: 407, column: 64, scope: !5443, inlinedAt: !13812)
!13812 = distinct !DILocation(line: 434, column: 2, scope: !13810)
!13813 = !DILocation(line: 407, column: 84, scope: !5443, inlinedAt: !13812)
!13814 = !DILocation(line: 327, column: 67, scope: !5452, inlinedAt: !13815)
!13815 = distinct !DILocation(line: 432, column: 2, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13817, file: !3, line: 432, column: 2)
!13817 = distinct !DILexicalBlock(scope: !13818, file: !3, line: 432, column: 2)
!13818 = distinct !DILexicalBlock(scope: !13819, file: !3, line: 432, column: 2)
!13819 = distinct !DILexicalBlock(scope: !13820, file: !3, line: 432, column: 2)
!13820 = distinct !DILexicalBlock(scope: !13810, file: !3, line: 432, column: 2)
!13821 = !DILocalVariable(name: "as", arg: 1, scope: !13810, file: !3, line: 427, type: !4429)
!13822 = !DILocation(line: 427, column: 47, scope: !13810)
!13823 = !DILocalVariable(name: "ps", scope: !13810, file: !3, line: 429, type: !190)
!13824 = !DILocation(line: 429, column: 24, scope: !13810)
!13825 = !DILocation(line: 429, column: 29, scope: !13810)
!13826 = !DILocation(line: 429, column: 33, scope: !13810)
!13827 = !DILocalVariable(name: "flags", scope: !13810, file: !3, line: 430, type: !372)
!13828 = !DILocation(line: 430, column: 16, scope: !13810)
!13829 = !DILocation(line: 432, column: 2, scope: !13810)
!13830 = !DILocation(line: 432, column: 2, scope: !13820)
!13831 = !DILocalVariable(name: "__dummy", scope: !13832, file: !3, line: 432, type: !372)
!13832 = distinct !DILexicalBlock(scope: !13819, file: !3, line: 432, column: 2)
!13833 = !DILocation(line: 432, column: 2, scope: !13832)
!13834 = !DILocalVariable(name: "__dummy2", scope: !13832, file: !3, line: 432, type: !372)
!13835 = !DILocation(line: 432, column: 2, scope: !13819)
!13836 = !DILocation(line: 432, column: 2, scope: !13818)
!13837 = !DILocation(line: 432, column: 2, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13818, file: !3, line: 432, column: 2)
!13839 = !DILocalVariable(name: "__dummy", scope: !13840, file: !3, line: 432, type: !372)
!13840 = distinct !DILexicalBlock(scope: !13841, file: !3, line: 432, column: 2)
!13841 = distinct !DILexicalBlock(scope: !13838, file: !3, line: 432, column: 2)
!13842 = !DILocation(line: 432, column: 2, scope: !13840)
!13843 = !DILocalVariable(name: "__dummy2", scope: !13840, file: !3, line: 432, type: !372)
!13844 = !DILocation(line: 432, column: 2, scope: !13841)
!13845 = !DILocation(line: 432, column: 2, scope: !13817)
!13846 = !{i32 -2141006340}
!13847 = !DILocation(line: 432, column: 2, scope: !13816)
!13848 = !DILocation(line: 329, column: 10, scope: !5452, inlinedAt: !13815)
!13849 = !DILocation(line: 329, column: 16, scope: !5452, inlinedAt: !13815)
!13850 = !DILocation(line: 433, column: 17, scope: !13810)
!13851 = !DILocation(line: 433, column: 21, scope: !13810)
!13852 = !DILocation(line: 433, column: 2, scope: !13810)
!13853 = !DILocation(line: 434, column: 26, scope: !13810)
!13854 = !DILocation(line: 434, column: 30, scope: !13810)
!13855 = !DILocation(line: 434, column: 36, scope: !13810)
!13856 = !DILocation(line: 409, column: 2, scope: !5633, inlinedAt: !13812)
!13857 = !DILocation(line: 409, column: 2, scope: !5638, inlinedAt: !13812)
!13858 = !DILocation(line: 409, column: 2, scope: !5639, inlinedAt: !13812)
!13859 = !DILocation(line: 409, column: 2, scope: !5646, inlinedAt: !13812)
!13860 = !DILocation(line: 409, column: 2, scope: !5649, inlinedAt: !13812)
!13861 = !DILocation(line: 435, column: 1, scope: !13810)
!13862 = distinct !DISubprogram(name: "kzalloc", scope: !156, file: !156, line: 662, type: !10559, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!13863 = !DILocation(line: 445, column: 72, scope: !10551, inlinedAt: !13864)
!13864 = distinct !DILocation(line: 552, column: 10, scope: !10556, inlinedAt: !13865)
!13865 = distinct !DILocation(line: 664, column: 9, scope: !13862)
!13866 = !DILocation(line: 446, column: 9, scope: !10551, inlinedAt: !13864)
!13867 = !DILocation(line: 446, column: 23, scope: !10551, inlinedAt: !13864)
!13868 = !DILocation(line: 448, column: 8, scope: !10551, inlinedAt: !13864)
!13869 = !DILocation(line: 318, column: 67, scope: !10569, inlinedAt: !13870)
!13870 = distinct !DILocation(line: 553, column: 20, scope: !10556, inlinedAt: !13865)
!13871 = !DILocation(line: 346, column: 58, scope: !10575, inlinedAt: !13872)
!13872 = distinct !DILocation(line: 547, column: 11, scope: !10556, inlinedAt: !13865)
!13873 = !DILocation(line: 472, column: 28, scope: !10581, inlinedAt: !13874)
!13874 = distinct !DILocation(line: 481, column: 9, scope: !10586, inlinedAt: !13875)
!13875 = distinct !DILocation(line: 545, column: 11, scope: !10588, inlinedAt: !13865)
!13876 = !DILocation(line: 472, column: 40, scope: !10581, inlinedAt: !13874)
!13877 = !DILocation(line: 472, column: 60, scope: !10581, inlinedAt: !13874)
!13878 = !DILocation(line: 478, column: 51, scope: !10586, inlinedAt: !13875)
!13879 = !DILocation(line: 478, column: 63, scope: !10586, inlinedAt: !13875)
!13880 = !DILocation(line: 480, column: 15, scope: !10586, inlinedAt: !13875)
!13881 = !DILocation(line: 538, column: 45, scope: !10558, inlinedAt: !13865)
!13882 = !DILocation(line: 538, column: 57, scope: !10558, inlinedAt: !13865)
!13883 = !DILocation(line: 542, column: 16, scope: !10556, inlinedAt: !13865)
!13884 = !DILocalVariable(name: "size", arg: 1, scope: !13862, file: !156, line: 662, type: !369)
!13885 = !DILocation(line: 662, column: 36, scope: !13862)
!13886 = !DILocalVariable(name: "flags", arg: 2, scope: !13862, file: !156, line: 662, type: !788)
!13887 = !DILocation(line: 662, column: 48, scope: !13862)
!13888 = !DILocation(line: 664, column: 17, scope: !13862)
!13889 = !DILocation(line: 664, column: 23, scope: !13862)
!13890 = !DILocation(line: 664, column: 29, scope: !13862)
!13891 = !DILocation(line: 540, column: 27, scope: !10557, inlinedAt: !13865)
!13892 = !DILocation(line: 540, column: 6, scope: !10557, inlinedAt: !13865)
!13893 = !DILocation(line: 540, column: 6, scope: !10558, inlinedAt: !13865)
!13894 = !DILocation(line: 544, column: 7, scope: !10588, inlinedAt: !13865)
!13895 = !DILocation(line: 544, column: 12, scope: !10588, inlinedAt: !13865)
!13896 = !DILocation(line: 544, column: 7, scope: !10556, inlinedAt: !13865)
!13897 = !DILocation(line: 545, column: 25, scope: !10588, inlinedAt: !13865)
!13898 = !DILocation(line: 545, column: 31, scope: !10588, inlinedAt: !13865)
!13899 = !DILocation(line: 480, column: 33, scope: !10586, inlinedAt: !13875)
!13900 = !DILocation(line: 480, column: 23, scope: !10586, inlinedAt: !13875)
!13901 = !DILocation(line: 481, column: 29, scope: !10586, inlinedAt: !13875)
!13902 = !DILocation(line: 481, column: 35, scope: !10586, inlinedAt: !13875)
!13903 = !DILocation(line: 481, column: 42, scope: !10586, inlinedAt: !13875)
!13904 = !DILocation(line: 474, column: 23, scope: !10581, inlinedAt: !13874)
!13905 = !DILocation(line: 474, column: 29, scope: !10581, inlinedAt: !13874)
!13906 = !DILocation(line: 474, column: 36, scope: !10581, inlinedAt: !13874)
!13907 = !DILocation(line: 474, column: 9, scope: !10581, inlinedAt: !13874)
!13908 = !DILocation(line: 545, column: 4, scope: !10588, inlinedAt: !13865)
!13909 = !DILocation(line: 547, column: 25, scope: !10556, inlinedAt: !13865)
!13910 = !DILocation(line: 348, column: 7, scope: !10706, inlinedAt: !13872)
!13911 = !DILocation(line: 348, column: 6, scope: !10575, inlinedAt: !13872)
!13912 = !DILocation(line: 349, column: 3, scope: !10706, inlinedAt: !13872)
!13913 = !DILocation(line: 351, column: 6, scope: !10710, inlinedAt: !13872)
!13914 = !DILocation(line: 351, column: 11, scope: !10710, inlinedAt: !13872)
!13915 = !DILocation(line: 351, column: 6, scope: !10575, inlinedAt: !13872)
!13916 = !DILocation(line: 352, column: 3, scope: !10710, inlinedAt: !13872)
!13917 = !DILocation(line: 354, column: 32, scope: !10715, inlinedAt: !13872)
!13918 = !DILocation(line: 354, column: 37, scope: !10715, inlinedAt: !13872)
!13919 = !DILocation(line: 354, column: 42, scope: !10715, inlinedAt: !13872)
!13920 = !DILocation(line: 354, column: 45, scope: !10715, inlinedAt: !13872)
!13921 = !DILocation(line: 354, column: 50, scope: !10715, inlinedAt: !13872)
!13922 = !DILocation(line: 354, column: 6, scope: !10575, inlinedAt: !13872)
!13923 = !DILocation(line: 355, column: 3, scope: !10715, inlinedAt: !13872)
!13924 = !DILocation(line: 356, column: 32, scope: !10723, inlinedAt: !13872)
!13925 = !DILocation(line: 356, column: 37, scope: !10723, inlinedAt: !13872)
!13926 = !DILocation(line: 356, column: 43, scope: !10723, inlinedAt: !13872)
!13927 = !DILocation(line: 356, column: 46, scope: !10723, inlinedAt: !13872)
!13928 = !DILocation(line: 356, column: 51, scope: !10723, inlinedAt: !13872)
!13929 = !DILocation(line: 356, column: 6, scope: !10575, inlinedAt: !13872)
!13930 = !DILocation(line: 357, column: 3, scope: !10723, inlinedAt: !13872)
!13931 = !DILocation(line: 358, column: 6, scope: !10731, inlinedAt: !13872)
!13932 = !DILocation(line: 358, column: 11, scope: !10731, inlinedAt: !13872)
!13933 = !DILocation(line: 358, column: 6, scope: !10575, inlinedAt: !13872)
!13934 = !DILocation(line: 358, column: 26, scope: !10731, inlinedAt: !13872)
!13935 = !DILocation(line: 359, column: 6, scope: !10736, inlinedAt: !13872)
!13936 = !DILocation(line: 359, column: 11, scope: !10736, inlinedAt: !13872)
!13937 = !DILocation(line: 359, column: 6, scope: !10575, inlinedAt: !13872)
!13938 = !DILocation(line: 359, column: 26, scope: !10736, inlinedAt: !13872)
!13939 = !DILocation(line: 360, column: 6, scope: !10741, inlinedAt: !13872)
!13940 = !DILocation(line: 360, column: 11, scope: !10741, inlinedAt: !13872)
!13941 = !DILocation(line: 360, column: 6, scope: !10575, inlinedAt: !13872)
!13942 = !DILocation(line: 360, column: 26, scope: !10741, inlinedAt: !13872)
!13943 = !DILocation(line: 361, column: 6, scope: !10746, inlinedAt: !13872)
!13944 = !DILocation(line: 361, column: 11, scope: !10746, inlinedAt: !13872)
!13945 = !DILocation(line: 361, column: 6, scope: !10575, inlinedAt: !13872)
!13946 = !DILocation(line: 361, column: 26, scope: !10746, inlinedAt: !13872)
!13947 = !DILocation(line: 362, column: 6, scope: !10751, inlinedAt: !13872)
!13948 = !DILocation(line: 362, column: 11, scope: !10751, inlinedAt: !13872)
!13949 = !DILocation(line: 362, column: 6, scope: !10575, inlinedAt: !13872)
!13950 = !DILocation(line: 362, column: 26, scope: !10751, inlinedAt: !13872)
!13951 = !DILocation(line: 363, column: 6, scope: !10756, inlinedAt: !13872)
!13952 = !DILocation(line: 363, column: 11, scope: !10756, inlinedAt: !13872)
!13953 = !DILocation(line: 363, column: 6, scope: !10575, inlinedAt: !13872)
!13954 = !DILocation(line: 363, column: 26, scope: !10756, inlinedAt: !13872)
!13955 = !DILocation(line: 364, column: 6, scope: !10761, inlinedAt: !13872)
!13956 = !DILocation(line: 364, column: 11, scope: !10761, inlinedAt: !13872)
!13957 = !DILocation(line: 364, column: 6, scope: !10575, inlinedAt: !13872)
!13958 = !DILocation(line: 364, column: 26, scope: !10761, inlinedAt: !13872)
!13959 = !DILocation(line: 365, column: 6, scope: !10766, inlinedAt: !13872)
!13960 = !DILocation(line: 365, column: 11, scope: !10766, inlinedAt: !13872)
!13961 = !DILocation(line: 365, column: 6, scope: !10575, inlinedAt: !13872)
!13962 = !DILocation(line: 365, column: 26, scope: !10766, inlinedAt: !13872)
!13963 = !DILocation(line: 366, column: 6, scope: !10771, inlinedAt: !13872)
!13964 = !DILocation(line: 366, column: 11, scope: !10771, inlinedAt: !13872)
!13965 = !DILocation(line: 366, column: 6, scope: !10575, inlinedAt: !13872)
!13966 = !DILocation(line: 366, column: 26, scope: !10771, inlinedAt: !13872)
!13967 = !DILocation(line: 367, column: 6, scope: !10776, inlinedAt: !13872)
!13968 = !DILocation(line: 367, column: 11, scope: !10776, inlinedAt: !13872)
!13969 = !DILocation(line: 367, column: 6, scope: !10575, inlinedAt: !13872)
!13970 = !DILocation(line: 367, column: 26, scope: !10776, inlinedAt: !13872)
!13971 = !DILocation(line: 368, column: 6, scope: !10781, inlinedAt: !13872)
!13972 = !DILocation(line: 368, column: 11, scope: !10781, inlinedAt: !13872)
!13973 = !DILocation(line: 368, column: 6, scope: !10575, inlinedAt: !13872)
!13974 = !DILocation(line: 368, column: 26, scope: !10781, inlinedAt: !13872)
!13975 = !DILocation(line: 369, column: 6, scope: !10786, inlinedAt: !13872)
!13976 = !DILocation(line: 369, column: 11, scope: !10786, inlinedAt: !13872)
!13977 = !DILocation(line: 369, column: 6, scope: !10575, inlinedAt: !13872)
!13978 = !DILocation(line: 369, column: 26, scope: !10786, inlinedAt: !13872)
!13979 = !DILocation(line: 370, column: 6, scope: !10791, inlinedAt: !13872)
!13980 = !DILocation(line: 370, column: 11, scope: !10791, inlinedAt: !13872)
!13981 = !DILocation(line: 370, column: 6, scope: !10575, inlinedAt: !13872)
!13982 = !DILocation(line: 370, column: 26, scope: !10791, inlinedAt: !13872)
!13983 = !DILocation(line: 371, column: 6, scope: !10796, inlinedAt: !13872)
!13984 = !DILocation(line: 371, column: 11, scope: !10796, inlinedAt: !13872)
!13985 = !DILocation(line: 371, column: 6, scope: !10575, inlinedAt: !13872)
!13986 = !DILocation(line: 371, column: 26, scope: !10796, inlinedAt: !13872)
!13987 = !DILocation(line: 372, column: 6, scope: !10801, inlinedAt: !13872)
!13988 = !DILocation(line: 372, column: 11, scope: !10801, inlinedAt: !13872)
!13989 = !DILocation(line: 372, column: 6, scope: !10575, inlinedAt: !13872)
!13990 = !DILocation(line: 372, column: 26, scope: !10801, inlinedAt: !13872)
!13991 = !DILocation(line: 373, column: 6, scope: !10806, inlinedAt: !13872)
!13992 = !DILocation(line: 373, column: 11, scope: !10806, inlinedAt: !13872)
!13993 = !DILocation(line: 373, column: 6, scope: !10575, inlinedAt: !13872)
!13994 = !DILocation(line: 373, column: 26, scope: !10806, inlinedAt: !13872)
!13995 = !DILocation(line: 374, column: 6, scope: !10811, inlinedAt: !13872)
!13996 = !DILocation(line: 374, column: 11, scope: !10811, inlinedAt: !13872)
!13997 = !DILocation(line: 374, column: 6, scope: !10575, inlinedAt: !13872)
!13998 = !DILocation(line: 374, column: 26, scope: !10811, inlinedAt: !13872)
!13999 = !DILocation(line: 375, column: 6, scope: !10816, inlinedAt: !13872)
!14000 = !DILocation(line: 375, column: 11, scope: !10816, inlinedAt: !13872)
!14001 = !DILocation(line: 375, column: 6, scope: !10575, inlinedAt: !13872)
!14002 = !DILocation(line: 375, column: 27, scope: !10816, inlinedAt: !13872)
!14003 = !DILocation(line: 376, column: 6, scope: !10821, inlinedAt: !13872)
!14004 = !DILocation(line: 376, column: 11, scope: !10821, inlinedAt: !13872)
!14005 = !DILocation(line: 376, column: 6, scope: !10575, inlinedAt: !13872)
!14006 = !DILocation(line: 376, column: 32, scope: !10821, inlinedAt: !13872)
!14007 = !DILocation(line: 377, column: 6, scope: !10826, inlinedAt: !13872)
!14008 = !DILocation(line: 377, column: 11, scope: !10826, inlinedAt: !13872)
!14009 = !DILocation(line: 377, column: 6, scope: !10575, inlinedAt: !13872)
!14010 = !DILocation(line: 377, column: 32, scope: !10826, inlinedAt: !13872)
!14011 = !DILocation(line: 378, column: 6, scope: !10831, inlinedAt: !13872)
!14012 = !DILocation(line: 378, column: 11, scope: !10831, inlinedAt: !13872)
!14013 = !DILocation(line: 378, column: 6, scope: !10575, inlinedAt: !13872)
!14014 = !DILocation(line: 378, column: 32, scope: !10831, inlinedAt: !13872)
!14015 = !DILocation(line: 379, column: 6, scope: !10836, inlinedAt: !13872)
!14016 = !DILocation(line: 379, column: 11, scope: !10836, inlinedAt: !13872)
!14017 = !DILocation(line: 379, column: 6, scope: !10575, inlinedAt: !13872)
!14018 = !DILocation(line: 379, column: 33, scope: !10836, inlinedAt: !13872)
!14019 = !DILocation(line: 380, column: 6, scope: !10841, inlinedAt: !13872)
!14020 = !DILocation(line: 380, column: 11, scope: !10841, inlinedAt: !13872)
!14021 = !DILocation(line: 380, column: 6, scope: !10575, inlinedAt: !13872)
!14022 = !DILocation(line: 380, column: 33, scope: !10841, inlinedAt: !13872)
!14023 = !DILocation(line: 381, column: 6, scope: !10846, inlinedAt: !13872)
!14024 = !DILocation(line: 381, column: 11, scope: !10846, inlinedAt: !13872)
!14025 = !DILocation(line: 381, column: 6, scope: !10575, inlinedAt: !13872)
!14026 = !DILocation(line: 381, column: 33, scope: !10846, inlinedAt: !13872)
!14027 = !DILocation(line: 382, column: 2, scope: !10851, inlinedAt: !13872)
!14028 = !DILocation(line: 382, column: 2, scope: !10855, inlinedAt: !13872)
!14029 = !DILocation(line: 382, column: 2, scope: !10856, inlinedAt: !13872)
!14030 = !DILocation(line: 386, column: 1, scope: !10575, inlinedAt: !13872)
!14031 = !DILocation(line: 547, column: 9, scope: !10556, inlinedAt: !13865)
!14032 = !DILocation(line: 549, column: 8, scope: !10862, inlinedAt: !13865)
!14033 = !DILocation(line: 549, column: 7, scope: !10556, inlinedAt: !13865)
!14034 = !DILocation(line: 550, column: 4, scope: !10862, inlinedAt: !13865)
!14035 = !DILocation(line: 553, column: 33, scope: !10556, inlinedAt: !13865)
!14036 = !DILocation(line: 325, column: 6, scope: !10867, inlinedAt: !13870)
!14037 = !DILocation(line: 325, column: 6, scope: !10569, inlinedAt: !13870)
!14038 = !DILocation(line: 326, column: 3, scope: !10867, inlinedAt: !13870)
!14039 = !DILocation(line: 332, column: 9, scope: !10569, inlinedAt: !13870)
!14040 = !DILocation(line: 332, column: 15, scope: !10569, inlinedAt: !13870)
!14041 = !DILocation(line: 332, column: 2, scope: !10569, inlinedAt: !13870)
!14042 = !DILocation(line: 336, column: 1, scope: !10569, inlinedAt: !13870)
!14043 = !DILocation(line: 553, column: 5, scope: !10556, inlinedAt: !13865)
!14044 = !DILocation(line: 553, column: 41, scope: !10556, inlinedAt: !13865)
!14045 = !DILocation(line: 554, column: 5, scope: !10556, inlinedAt: !13865)
!14046 = !DILocation(line: 554, column: 12, scope: !10556, inlinedAt: !13865)
!14047 = !DILocation(line: 448, column: 31, scope: !10551, inlinedAt: !13864)
!14048 = !DILocation(line: 448, column: 34, scope: !10551, inlinedAt: !13864)
!14049 = !DILocation(line: 448, column: 14, scope: !10551, inlinedAt: !13864)
!14050 = !DILocation(line: 450, column: 22, scope: !10551, inlinedAt: !13864)
!14051 = !DILocation(line: 450, column: 25, scope: !10551, inlinedAt: !13864)
!14052 = !DILocation(line: 450, column: 30, scope: !10551, inlinedAt: !13864)
!14053 = !DILocation(line: 450, column: 36, scope: !10551, inlinedAt: !13864)
!14054 = !DILocation(line: 450, column: 8, scope: !10551, inlinedAt: !13864)
!14055 = !DILocation(line: 450, column: 6, scope: !10551, inlinedAt: !13864)
!14056 = !DILocation(line: 451, column: 9, scope: !10551, inlinedAt: !13864)
!14057 = !DILocation(line: 552, column: 3, scope: !10556, inlinedAt: !13865)
!14058 = !DILocation(line: 557, column: 19, scope: !10558, inlinedAt: !13865)
!14059 = !DILocation(line: 557, column: 25, scope: !10558, inlinedAt: !13865)
!14060 = !DILocation(line: 557, column: 9, scope: !10558, inlinedAt: !13865)
!14061 = !DILocation(line: 557, column: 2, scope: !10558, inlinedAt: !13865)
!14062 = !DILocation(line: 558, column: 1, scope: !10558, inlinedAt: !13865)
!14063 = !DILocation(line: 664, column: 2, scope: !13862)
!14064 = distinct !DISubprogram(name: "ERR_PTR", scope: !13050, file: !13050, line: 24, type: !14065, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14065 = !DISubroutineType(types: !14066)
!14066 = !{!189, !357}
!14067 = !DILocalVariable(name: "error", arg: 1, scope: !14064, file: !13050, line: 24, type: !357)
!14068 = !DILocation(line: 24, column: 48, scope: !14064)
!14069 = !DILocation(line: 26, column: 18, scope: !14064)
!14070 = !DILocation(line: 26, column: 9, scope: !14064)
!14071 = !DILocation(line: 26, column: 2, scope: !14064)
!14072 = distinct !DISubprogram(name: "__must_check_overflow", scope: !14073, file: !14073, line: 52, type: !14074, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14073 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!14074 = !DISubroutineType(types: !14075)
!14075 = !{!534, !534}
!14076 = !DILocalVariable(name: "overflow", arg: 1, scope: !14072, file: !14073, line: 52, type: !534)
!14077 = !DILocation(line: 52, column: 60, scope: !14072)
!14078 = !DILocation(line: 54, column: 9, scope: !14072)
!14079 = !DILocation(line: 54, column: 2, scope: !14072)
!14080 = distinct !DISubprogram(name: "sg_set_page", scope: !4472, file: !4472, line: 116, type: !14081, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14081 = !DISubroutineType(types: !14082)
!14082 = !{null, !4470, !765, !7, !7}
!14083 = !DILocalVariable(name: "sg", arg: 1, scope: !14080, file: !4472, line: 116, type: !4470)
!14084 = !DILocation(line: 116, column: 52, scope: !14080)
!14085 = !DILocalVariable(name: "page", arg: 2, scope: !14080, file: !4472, line: 116, type: !765)
!14086 = !DILocation(line: 116, column: 69, scope: !14080)
!14087 = !DILocalVariable(name: "len", arg: 3, scope: !14080, file: !4472, line: 117, type: !7)
!14088 = !DILocation(line: 117, column: 24, scope: !14080)
!14089 = !DILocalVariable(name: "offset", arg: 4, scope: !14080, file: !4472, line: 117, type: !7)
!14090 = !DILocation(line: 117, column: 42, scope: !14080)
!14091 = !DILocation(line: 119, column: 17, scope: !14080)
!14092 = !DILocation(line: 119, column: 21, scope: !14080)
!14093 = !DILocation(line: 119, column: 2, scope: !14080)
!14094 = !DILocation(line: 120, column: 15, scope: !14080)
!14095 = !DILocation(line: 120, column: 2, scope: !14080)
!14096 = !DILocation(line: 120, column: 6, scope: !14080)
!14097 = !DILocation(line: 120, column: 13, scope: !14080)
!14098 = !DILocation(line: 121, column: 15, scope: !14080)
!14099 = !DILocation(line: 121, column: 2, scope: !14080)
!14100 = !DILocation(line: 121, column: 6, scope: !14080)
!14101 = !DILocation(line: 121, column: 13, scope: !14080)
!14102 = !DILocation(line: 122, column: 1, scope: !14080)
!14103 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !14104, file: !14104, line: 18, type: !14105, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14104 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!14105 = !DISubroutineType(types: !14106)
!14106 = !{!372, !372}
!14107 = !DILocalVariable(name: "x", arg: 1, scope: !14103, file: !14104, line: 18, type: !372)
!14108 = !DILocation(line: 18, column: 63, scope: !14103)
!14109 = !DILocalVariable(name: "y", scope: !14103, file: !14104, line: 20, type: !372)
!14110 = !DILocation(line: 20, column: 16, scope: !14103)
!14111 = !DILocation(line: 20, column: 20, scope: !14103)
!14112 = !DILocation(line: 20, column: 22, scope: !14103)
!14113 = !DILocation(line: 23, column: 6, scope: !14103)
!14114 = !DILocation(line: 23, column: 12, scope: !14103)
!14115 = !DILocation(line: 23, column: 16, scope: !14103)
!14116 = !DILocation(line: 23, column: 14, scope: !14103)
!14117 = !DILocation(line: 23, column: 11, scope: !14103)
!14118 = !DILocation(line: 23, column: 21, scope: !14103)
!14119 = !DILocation(line: 23, column: 55, scope: !14103)
!14120 = !DILocation(line: 23, column: 53, scope: !14103)
!14121 = !DILocation(line: 23, column: 8, scope: !14103)
!14122 = !DILocation(line: 23, column: 4, scope: !14103)
!14123 = !DILocation(line: 25, column: 9, scope: !14103)
!14124 = !DILocation(line: 25, column: 2, scope: !14103)
!14125 = distinct !DISubprogram(name: "sg_assign_page", scope: !4472, file: !4472, line: 87, type: !14126, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14126 = !DISubroutineType(types: !14127)
!14127 = !{null, !4470, !765}
!14128 = !DILocalVariable(name: "sg", arg: 1, scope: !14125, file: !4472, line: 87, type: !4470)
!14129 = !DILocation(line: 87, column: 55, scope: !14125)
!14130 = !DILocalVariable(name: "page", arg: 2, scope: !14125, file: !4472, line: 87, type: !765)
!14131 = !DILocation(line: 87, column: 72, scope: !14125)
!14132 = !DILocalVariable(name: "page_link", scope: !14125, file: !4472, line: 89, type: !372)
!14133 = !DILocation(line: 89, column: 16, scope: !14125)
!14134 = !DILocation(line: 89, column: 28, scope: !14125)
!14135 = !DILocation(line: 89, column: 32, scope: !14125)
!14136 = !DILocation(line: 89, column: 42, scope: !14125)
!14137 = !DILocation(line: 95, column: 2, scope: !14125)
!14138 = !DILocation(line: 95, column: 2, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14140, file: !4472, line: 95, column: 2)
!14140 = distinct !DILexicalBlock(scope: !14125, file: !4472, line: 95, column: 2)
!14141 = !DILocation(line: 95, column: 2, scope: !14140)
!14142 = !DILocation(line: 95, column: 2, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !14139, file: !4472, line: 95, column: 2)
!14144 = !DILocation(line: 95, column: 2, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14143, file: !4472, line: 95, column: 2)
!14146 = !DILocation(line: 95, column: 2, scope: !14147)
!14147 = distinct !DILexicalBlock(scope: !14143, file: !4472, line: 95, column: 2)
!14148 = !{i32 -2141665247, i32 -2141665218, i32 -2141665172, i32 -2141665114, i32 -2141665060, i32 -2141665006, i32 -2141664951, i32 -2141664920}
!14149 = !DILocation(line: 95, column: 2, scope: !14150)
!14150 = distinct !DILexicalBlock(scope: !14151, file: !4472, line: 95, column: 2)
!14151 = distinct !DILexicalBlock(scope: !14143, file: !4472, line: 95, column: 2)
!14152 = !{i32 -2141664471, i32 -2141664464, i32 -2141664410, i32 -2141664379, i32 -2141664349}
!14153 = !DILocation(line: 95, column: 2, scope: !14151)
!14154 = !DILocation(line: 99, column: 18, scope: !14125)
!14155 = !DILocation(line: 99, column: 46, scope: !14125)
!14156 = !DILocation(line: 99, column: 30, scope: !14125)
!14157 = !DILocation(line: 99, column: 28, scope: !14125)
!14158 = !DILocation(line: 99, column: 2, scope: !14125)
!14159 = !DILocation(line: 99, column: 6, scope: !14125)
!14160 = !DILocation(line: 99, column: 16, scope: !14125)
!14161 = !DILocation(line: 100, column: 1, scope: !14125)
!14162 = distinct !DISubprogram(name: "usb_urb_dir_in", scope: !129, file: !129, line: 1750, type: !14163, scopeLine: 1751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14163 = !DISubroutineType(types: !14164)
!14164 = !{!205, !4442}
!14165 = !DILocalVariable(name: "urb", arg: 1, scope: !14162, file: !129, line: 1750, type: !4442)
!14166 = !DILocation(line: 1750, column: 46, scope: !14162)
!14167 = !DILocation(line: 1752, column: 10, scope: !14162)
!14168 = !DILocation(line: 1752, column: 15, scope: !14162)
!14169 = !DILocation(line: 1752, column: 30, scope: !14162)
!14170 = !DILocation(line: 1752, column: 46, scope: !14162)
!14171 = !DILocation(line: 1752, column: 2, scope: !14162)
!14172 = distinct !DISubprogram(name: "cancel_bulk_urbs", scope: !3, file: !3, line: 562, type: !6016, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14173 = !DILocalVariable(name: "lock", arg: 1, scope: !14174, file: !5444, line: 352, type: !1102)
!14174 = distinct !DISubprogram(name: "spin_lock", scope: !5444, file: !5444, line: 352, type: !11268, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14175 = !DILocation(line: 352, column: 51, scope: !14174, inlinedAt: !14176)
!14176 = distinct !DILocation(line: 594, column: 4, scope: !14177)
!14177 = distinct !DILexicalBlock(scope: !14178, file: !3, line: 587, column: 37)
!14178 = distinct !DILexicalBlock(scope: !14179, file: !3, line: 587, column: 7)
!14179 = distinct !DILexicalBlock(scope: !14180, file: !3, line: 586, column: 65)
!14180 = distinct !DILexicalBlock(scope: !14181, file: !3, line: 586, column: 2)
!14181 = distinct !DILexicalBlock(scope: !14172, file: !3, line: 586, column: 2)
!14182 = !DILocalVariable(name: "lock", arg: 1, scope: !14183, file: !5444, line: 392, type: !1102)
!14183 = distinct !DISubprogram(name: "spin_unlock", scope: !5444, file: !5444, line: 392, type: !11268, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14184 = !DILocation(line: 392, column: 53, scope: !14183, inlinedAt: !14185)
!14185 = distinct !DILocation(line: 591, column: 4, scope: !14177)
!14186 = !DILocalVariable(name: "ps", arg: 1, scope: !14172, file: !3, line: 562, type: !190)
!14187 = !DILocation(line: 562, column: 52, scope: !14172)
!14188 = !DILocalVariable(name: "bulk_addr", arg: 2, scope: !14172, file: !3, line: 562, type: !7)
!14189 = !DILocation(line: 562, column: 65, scope: !14172)
!14190 = !DILocalVariable(name: "urb", scope: !14172, file: !3, line: 566, type: !4442)
!14191 = !DILocation(line: 566, column: 14, scope: !14172)
!14192 = !DILocalVariable(name: "as", scope: !14172, file: !3, line: 567, type: !4429)
!14193 = !DILocation(line: 567, column: 16, scope: !14172)
!14194 = !DILocalVariable(name: "__mptr", scope: !14195, file: !3, line: 574, type: !189)
!14195 = distinct !DILexicalBlock(scope: !14196, file: !3, line: 574, column: 2)
!14196 = distinct !DILexicalBlock(scope: !14172, file: !3, line: 574, column: 2)
!14197 = !DILocation(line: 574, column: 2, scope: !14195)
!14198 = !DILocation(line: 574, column: 2, scope: !14199)
!14199 = distinct !DILexicalBlock(scope: !14195, file: !3, line: 574, column: 2)
!14200 = !DILocation(line: 574, column: 2, scope: !14196)
!14201 = !DILocation(line: 574, column: 2, scope: !14202)
!14202 = distinct !DILexicalBlock(scope: !14196, file: !3, line: 574, column: 2)
!14203 = !DILocation(line: 575, column: 7, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14205, file: !3, line: 575, column: 7)
!14205 = distinct !DILexicalBlock(scope: !14202, file: !3, line: 574, column: 57)
!14206 = !DILocation(line: 575, column: 11, scope: !14204)
!14207 = !DILocation(line: 575, column: 24, scope: !14204)
!14208 = !DILocation(line: 575, column: 21, scope: !14204)
!14209 = !DILocation(line: 575, column: 7, scope: !14205)
!14210 = !DILocation(line: 576, column: 8, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14212, file: !3, line: 576, column: 8)
!14212 = distinct !DILexicalBlock(scope: !14204, file: !3, line: 575, column: 35)
!14213 = !DILocation(line: 576, column: 12, scope: !14211)
!14214 = !DILocation(line: 576, column: 24, scope: !14211)
!14215 = !DILocation(line: 576, column: 8, scope: !14212)
!14216 = !DILocation(line: 577, column: 5, scope: !14211)
!14217 = !DILocation(line: 578, column: 4, scope: !14212)
!14218 = !DILocation(line: 578, column: 8, scope: !14212)
!14219 = !DILocation(line: 578, column: 20, scope: !14212)
!14220 = !DILocation(line: 579, column: 4, scope: !14212)
!14221 = !DILocation(line: 579, column: 8, scope: !14212)
!14222 = !DILocation(line: 579, column: 18, scope: !14212)
!14223 = !DILocation(line: 580, column: 3, scope: !14212)
!14224 = !DILocation(line: 581, column: 2, scope: !14205)
!14225 = !DILocalVariable(name: "__mptr", scope: !14226, file: !3, line: 574, type: !189)
!14226 = distinct !DILexicalBlock(scope: !14202, file: !3, line: 574, column: 2)
!14227 = !DILocation(line: 574, column: 2, scope: !14226)
!14228 = !DILocation(line: 574, column: 2, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14226, file: !3, line: 574, column: 2)
!14230 = distinct !{!14230, !14200, !14231}
!14231 = !DILocation(line: 581, column: 2, scope: !14196)
!14232 = !DILocation(line: 582, column: 33, scope: !14172)
!14233 = !DILocation(line: 582, column: 30, scope: !14172)
!14234 = !DILocation(line: 582, column: 2, scope: !14172)
!14235 = !DILocation(line: 582, column: 6, scope: !14172)
!14236 = !DILocation(line: 582, column: 24, scope: !14172)
!14237 = !DILabel(scope: !14172, name: "rescan", file: !3, line: 585)
!14238 = !DILocation(line: 585, column: 2, scope: !14172)
!14239 = !DILocalVariable(name: "__mptr", scope: !14240, file: !3, line: 586, type: !189)
!14240 = distinct !DILexicalBlock(scope: !14181, file: !3, line: 586, column: 2)
!14241 = !DILocation(line: 586, column: 2, scope: !14240)
!14242 = !DILocation(line: 586, column: 2, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14240, file: !3, line: 586, column: 2)
!14244 = !DILocation(line: 586, column: 2, scope: !14181)
!14245 = !DILocation(line: 586, column: 2, scope: !14180)
!14246 = !DILocation(line: 587, column: 7, scope: !14178)
!14247 = !DILocation(line: 587, column: 11, scope: !14178)
!14248 = !DILocation(line: 587, column: 23, scope: !14178)
!14249 = !DILocation(line: 587, column: 7, scope: !14179)
!14250 = !DILocation(line: 588, column: 4, scope: !14177)
!14251 = !DILocation(line: 588, column: 8, scope: !14177)
!14252 = !DILocation(line: 588, column: 20, scope: !14177)
!14253 = !DILocation(line: 589, column: 10, scope: !14177)
!14254 = !DILocation(line: 589, column: 14, scope: !14177)
!14255 = !DILocation(line: 589, column: 8, scope: !14177)
!14256 = !DILocation(line: 590, column: 16, scope: !14177)
!14257 = !DILocation(line: 590, column: 4, scope: !14177)
!14258 = !DILocation(line: 591, column: 17, scope: !14177)
!14259 = !DILocation(line: 591, column: 21, scope: !14177)
!14260 = !DILocation(line: 394, column: 2, scope: !14261, inlinedAt: !14185)
!14261 = distinct !DILexicalBlock(scope: !14183, file: !5444, line: 394, column: 2)
!14262 = !{i32 -2145392706}
!14263 = !DILocation(line: 394, column: 2, scope: !14264, inlinedAt: !14185)
!14264 = distinct !DILexicalBlock(scope: !14261, file: !5444, line: 394, column: 2)
!14265 = !DILocation(line: 592, column: 19, scope: !14177)
!14266 = !DILocation(line: 592, column: 4, scope: !14177)
!14267 = !DILocation(line: 593, column: 16, scope: !14177)
!14268 = !DILocation(line: 593, column: 4, scope: !14177)
!14269 = !DILocation(line: 594, column: 15, scope: !14177)
!14270 = !DILocation(line: 594, column: 19, scope: !14177)
!14271 = !DILocation(line: 354, column: 2, scope: !14272, inlinedAt: !14176)
!14272 = distinct !DILexicalBlock(scope: !14174, file: !5444, line: 354, column: 2)
!14273 = !{i32 -2145395067}
!14274 = !DILocation(line: 354, column: 2, scope: !14275, inlinedAt: !14176)
!14275 = distinct !DILexicalBlock(scope: !14272, file: !5444, line: 354, column: 2)
!14276 = !DILocation(line: 595, column: 4, scope: !14177)
!14277 = !DILocation(line: 597, column: 2, scope: !14179)
!14278 = !DILocalVariable(name: "__mptr", scope: !14279, file: !3, line: 586, type: !189)
!14279 = distinct !DILexicalBlock(scope: !14180, file: !3, line: 586, column: 2)
!14280 = !DILocation(line: 586, column: 2, scope: !14279)
!14281 = !DILocation(line: 586, column: 2, scope: !14282)
!14282 = distinct !DILexicalBlock(scope: !14279, file: !3, line: 586, column: 2)
!14283 = distinct !{!14283, !14244, !14284}
!14284 = !DILocation(line: 597, column: 2, scope: !14181)
!14285 = !DILocation(line: 598, column: 1, scope: !14172)
!14286 = distinct !DISubprogram(name: "refcount_inc", scope: !163, file: !163, line: 265, type: !14287, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14287 = !DISubroutineType(types: !14288)
!14288 = !{null, !14289}
!14289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!14290 = !DILocalVariable(name: "r", arg: 1, scope: !14286, file: !163, line: 265, type: !14289)
!14291 = !DILocation(line: 265, column: 45, scope: !14286)
!14292 = !DILocation(line: 267, column: 17, scope: !14286)
!14293 = !DILocation(line: 267, column: 2, scope: !14286)
!14294 = !DILocation(line: 268, column: 1, scope: !14286)
!14295 = distinct !DISubprogram(name: "__refcount_inc", scope: !163, file: !163, line: 248, type: !14296, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14296 = !DISubroutineType(types: !14297)
!14297 = !{null, !14289, !749}
!14298 = !DILocalVariable(name: "r", arg: 1, scope: !14295, file: !163, line: 248, type: !14289)
!14299 = !DILocation(line: 248, column: 47, scope: !14295)
!14300 = !DILocalVariable(name: "oldp", arg: 2, scope: !14295, file: !163, line: 248, type: !749)
!14301 = !DILocation(line: 248, column: 55, scope: !14295)
!14302 = !DILocation(line: 250, column: 20, scope: !14295)
!14303 = !DILocation(line: 250, column: 23, scope: !14295)
!14304 = !DILocation(line: 250, column: 2, scope: !14295)
!14305 = !DILocation(line: 251, column: 1, scope: !14295)
!14306 = distinct !DISubprogram(name: "__refcount_add", scope: !163, file: !163, line: 191, type: !14307, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14307 = !DISubroutineType(types: !14308)
!14308 = !{null, !205, !14289, !749}
!14309 = !DILocalVariable(name: "i", arg: 1, scope: !14310, file: !9316, line: 182, type: !205)
!14310 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !9316, file: !9316, line: 182, type: !14311, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14311 = !DISubroutineType(types: !14312)
!14312 = !{!205, !205, !9319}
!14313 = !DILocation(line: 182, column: 54, scope: !14310, inlinedAt: !14314)
!14314 = distinct !DILocation(line: 143, column: 9, scope: !14315, inlinedAt: !14316)
!14315 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !9323, file: !9323, line: 140, type: !14311, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14316 = distinct !DILocation(line: 193, column: 12, scope: !14306)
!14317 = !DILocalVariable(name: "v", arg: 2, scope: !14310, file: !9316, line: 182, type: !9319)
!14318 = !DILocation(line: 182, column: 67, scope: !14310, inlinedAt: !14314)
!14319 = !DILocalVariable(name: "__ret", scope: !14320, file: !9316, line: 184, type: !205)
!14320 = distinct !DILexicalBlock(scope: !14310, file: !9316, line: 184, column: 9)
!14321 = !DILocation(line: 184, column: 9, scope: !14320, inlinedAt: !14314)
!14322 = !DILocation(line: 99, column: 79, scope: !9332, inlinedAt: !14323)
!14323 = distinct !DILocation(line: 142, column: 2, scope: !14315, inlinedAt: !14316)
!14324 = !DILocation(line: 99, column: 89, scope: !9332, inlinedAt: !14323)
!14325 = !DILocalVariable(name: "i", arg: 1, scope: !14315, file: !9323, line: 140, type: !205)
!14326 = !DILocation(line: 140, column: 30, scope: !14315, inlinedAt: !14316)
!14327 = !DILocalVariable(name: "v", arg: 2, scope: !14315, file: !9323, line: 140, type: !9319)
!14328 = !DILocation(line: 140, column: 43, scope: !14315, inlinedAt: !14316)
!14329 = !DILocalVariable(name: "i", arg: 1, scope: !14306, file: !163, line: 191, type: !205)
!14330 = !DILocation(line: 191, column: 39, scope: !14306)
!14331 = !DILocalVariable(name: "r", arg: 2, scope: !14306, file: !163, line: 191, type: !14289)
!14332 = !DILocation(line: 191, column: 54, scope: !14306)
!14333 = !DILocalVariable(name: "oldp", arg: 3, scope: !14306, file: !163, line: 191, type: !749)
!14334 = !DILocation(line: 191, column: 62, scope: !14306)
!14335 = !DILocalVariable(name: "old", scope: !14306, file: !163, line: 193, type: !205)
!14336 = !DILocation(line: 193, column: 6, scope: !14306)
!14337 = !DILocation(line: 193, column: 37, scope: !14306)
!14338 = !DILocation(line: 193, column: 41, scope: !14306)
!14339 = !DILocation(line: 193, column: 44, scope: !14306)
!14340 = !DILocation(line: 142, column: 31, scope: !14315, inlinedAt: !14316)
!14341 = !DILocation(line: 101, column: 20, scope: !9332, inlinedAt: !14323)
!14342 = !DILocation(line: 101, column: 23, scope: !9332, inlinedAt: !14323)
!14343 = !DILocation(line: 101, column: 2, scope: !9332, inlinedAt: !14323)
!14344 = !DILocation(line: 102, column: 2, scope: !9332, inlinedAt: !14323)
!14345 = !DILocation(line: 143, column: 39, scope: !14315, inlinedAt: !14316)
!14346 = !DILocation(line: 143, column: 42, scope: !14315, inlinedAt: !14316)
!14347 = !{i32 -2146313518}
!14348 = !DILocation(line: 195, column: 6, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14306, file: !163, line: 195, column: 6)
!14350 = !DILocation(line: 195, column: 6, scope: !14306)
!14351 = !DILocation(line: 196, column: 11, scope: !14349)
!14352 = !DILocation(line: 196, column: 4, scope: !14349)
!14353 = !DILocation(line: 196, column: 9, scope: !14349)
!14354 = !DILocation(line: 196, column: 3, scope: !14349)
!14355 = !DILocation(line: 198, column: 6, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14306, file: !163, line: 198, column: 6)
!14357 = !DILocation(line: 198, column: 6, scope: !14306)
!14358 = !DILocation(line: 199, column: 26, scope: !14356)
!14359 = !DILocation(line: 199, column: 3, scope: !14356)
!14360 = !DILocation(line: 200, column: 11, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14356, file: !163, line: 200, column: 11)
!14362 = !DILocation(line: 200, column: 11, scope: !14356)
!14363 = !DILocation(line: 201, column: 26, scope: !14361)
!14364 = !DILocation(line: 201, column: 3, scope: !14361)
!14365 = !DILocation(line: 202, column: 1, scope: !14306)
!14366 = distinct !DISubprogram(name: "get_new_cred", scope: !1592, file: !1592, line: 228, type: !14367, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14367 = !DISubroutineType(types: !14368)
!14368 = !{!4524, !4524}
!14369 = !DILocalVariable(name: "v", arg: 1, scope: !14370, file: !9316, line: 93, type: !9319)
!14370 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !9316, file: !9316, line: 93, type: !14371, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14371 = !DISubroutineType(types: !14372)
!14372 = !{null, !9319}
!14373 = !DILocation(line: 93, column: 55, scope: !14370, inlinedAt: !14374)
!14374 = distinct !DILocation(line: 241, column: 2, scope: !14375, inlinedAt: !14376)
!14375 = distinct !DISubprogram(name: "atomic_inc", scope: !9323, file: !9323, line: 238, type: !14371, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14376 = distinct !DILocation(line: 230, column: 2, scope: !14366)
!14377 = !DILocation(line: 99, column: 79, scope: !9332, inlinedAt: !14378)
!14378 = distinct !DILocation(line: 240, column: 2, scope: !14375, inlinedAt: !14376)
!14379 = !DILocation(line: 99, column: 89, scope: !9332, inlinedAt: !14378)
!14380 = !DILocalVariable(name: "v", arg: 1, scope: !14375, file: !9323, line: 238, type: !9319)
!14381 = !DILocation(line: 238, column: 22, scope: !14375, inlinedAt: !14376)
!14382 = !DILocalVariable(name: "cred", arg: 1, scope: !14366, file: !1592, line: 228, type: !4524)
!14383 = !DILocation(line: 228, column: 54, scope: !14366)
!14384 = !DILocation(line: 230, column: 14, scope: !14366)
!14385 = !DILocation(line: 230, column: 20, scope: !14366)
!14386 = !DILocation(line: 240, column: 31, scope: !14375, inlinedAt: !14376)
!14387 = !DILocation(line: 101, column: 20, scope: !9332, inlinedAt: !14378)
!14388 = !DILocation(line: 101, column: 23, scope: !9332, inlinedAt: !14378)
!14389 = !DILocation(line: 101, column: 2, scope: !9332, inlinedAt: !14378)
!14390 = !DILocation(line: 102, column: 2, scope: !9332, inlinedAt: !14378)
!14391 = !DILocation(line: 241, column: 18, scope: !14375, inlinedAt: !14376)
!14392 = !DILocation(line: 96, column: 16, scope: !14370, inlinedAt: !14374)
!14393 = !DILocation(line: 96, column: 19, scope: !14370, inlinedAt: !14374)
!14394 = !DILocation(line: 95, column: 2, scope: !14370, inlinedAt: !14374)
!14395 = !{i32 -2146319450}
!14396 = !DILocation(line: 231, column: 9, scope: !14366)
!14397 = !DILocation(line: 231, column: 2, scope: !14366)
!14398 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !6150, file: !6150, line: 661, type: !2082, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14399 = !DILocalVariable(name: "__edi", scope: !14400, file: !6150, line: 663, type: !372)
!14400 = distinct !DILexicalBlock(scope: !14398, file: !6150, line: 663, column: 2)
!14401 = !DILocation(line: 663, column: 2, scope: !14400)
!14402 = !DILocalVariable(name: "__esi", scope: !14400, file: !6150, line: 663, type: !372)
!14403 = !DILocalVariable(name: "__edx", scope: !14400, file: !6150, line: 663, type: !372)
!14404 = !DILocalVariable(name: "__ecx", scope: !14400, file: !6150, line: 663, type: !372)
!14405 = !DILocalVariable(name: "__eax", scope: !14400, file: !6150, line: 663, type: !372)
!14406 = !{i32 -2145554560, i32 -2145553830, i32 -2145553596, i32 -2145553545, i32 -2145553517, i32 -2145553492, i32 -2145553808, i32 -2145553795, i32 -2145553357, i32 -2145553238, i32 -2145553703, i32 -2145553676, i32 -2145553648, i32 -2145553618}
!14407 = !DILocation(line: 664, column: 1, scope: !14398)
!14408 = distinct !DISubprogram(name: "async_getpending", scope: !3, file: !3, line: 452, type: !14409, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14409 = !DISubroutineType(types: !14410)
!14410 = !{!4429, !190, !189}
!14411 = !DILocalVariable(name: "ps", arg: 1, scope: !14408, file: !3, line: 452, type: !190)
!14412 = !DILocation(line: 452, column: 61, scope: !14408)
!14413 = !DILocalVariable(name: "userurb", arg: 2, scope: !14408, file: !3, line: 453, type: !189)
!14414 = !DILocation(line: 453, column: 24, scope: !14408)
!14415 = !DILocalVariable(name: "as", scope: !14408, file: !3, line: 455, type: !4429)
!14416 = !DILocation(line: 455, column: 16, scope: !14408)
!14417 = !DILocalVariable(name: "__mptr", scope: !14418, file: !3, line: 457, type: !189)
!14418 = distinct !DILexicalBlock(scope: !14419, file: !3, line: 457, column: 2)
!14419 = distinct !DILexicalBlock(scope: !14408, file: !3, line: 457, column: 2)
!14420 = !DILocation(line: 457, column: 2, scope: !14418)
!14421 = !DILocation(line: 457, column: 2, scope: !14422)
!14422 = distinct !DILexicalBlock(scope: !14418, file: !3, line: 457, column: 2)
!14423 = !DILocation(line: 457, column: 2, scope: !14419)
!14424 = !DILocation(line: 457, column: 2, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14419, file: !3, line: 457, column: 2)
!14426 = !DILocation(line: 458, column: 7, scope: !14427)
!14427 = distinct !DILexicalBlock(scope: !14425, file: !3, line: 458, column: 7)
!14428 = !DILocation(line: 458, column: 11, scope: !14427)
!14429 = !DILocation(line: 458, column: 22, scope: !14427)
!14430 = !DILocation(line: 458, column: 19, scope: !14427)
!14431 = !DILocation(line: 458, column: 7, scope: !14425)
!14432 = !DILocation(line: 459, column: 19, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14427, file: !3, line: 458, column: 31)
!14434 = !DILocation(line: 459, column: 23, scope: !14433)
!14435 = !DILocation(line: 459, column: 4, scope: !14433)
!14436 = !DILocation(line: 460, column: 11, scope: !14433)
!14437 = !DILocation(line: 460, column: 4, scope: !14433)
!14438 = !DILocalVariable(name: "__mptr", scope: !14439, file: !3, line: 457, type: !189)
!14439 = distinct !DILexicalBlock(scope: !14425, file: !3, line: 457, column: 2)
!14440 = !DILocation(line: 457, column: 2, scope: !14439)
!14441 = !DILocation(line: 457, column: 2, scope: !14442)
!14442 = distinct !DILexicalBlock(scope: !14439, file: !3, line: 457, column: 2)
!14443 = distinct !{!14443, !14423, !14444}
!14444 = !DILocation(line: 461, column: 3, scope: !14419)
!14445 = !DILocation(line: 463, column: 2, scope: !14408)
!14446 = !DILocation(line: 464, column: 1, scope: !14408)
!14447 = distinct !DISubprogram(name: "releaseintf", scope: !3, file: !3, line: 790, type: !10339, scopeLine: 791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14448 = !DILocalVariable(name: "ps", arg: 1, scope: !14447, file: !3, line: 790, type: !190)
!14449 = !DILocation(line: 790, column: 46, scope: !14447)
!14450 = !DILocalVariable(name: "ifnum", arg: 2, scope: !14447, file: !3, line: 790, type: !7)
!14451 = !DILocation(line: 790, column: 63, scope: !14447)
!14452 = !DILocalVariable(name: "dev", scope: !14447, file: !3, line: 792, type: !201)
!14453 = !DILocation(line: 792, column: 21, scope: !14447)
!14454 = !DILocalVariable(name: "intf", scope: !14447, file: !3, line: 793, type: !4299)
!14455 = !DILocation(line: 793, column: 24, scope: !14447)
!14456 = !DILocalVariable(name: "err", scope: !14447, file: !3, line: 794, type: !205)
!14457 = !DILocation(line: 794, column: 6, scope: !14447)
!14458 = !DILocation(line: 796, column: 6, scope: !14447)
!14459 = !DILocation(line: 797, column: 6, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14447, file: !3, line: 797, column: 6)
!14461 = !DILocation(line: 797, column: 12, scope: !14460)
!14462 = !DILocation(line: 797, column: 6, scope: !14447)
!14463 = !DILocation(line: 798, column: 10, scope: !14460)
!14464 = !DILocation(line: 798, column: 3, scope: !14460)
!14465 = !DILocation(line: 799, column: 8, scope: !14447)
!14466 = !DILocation(line: 799, column: 12, scope: !14447)
!14467 = !DILocation(line: 799, column: 6, scope: !14447)
!14468 = !DILocation(line: 800, column: 25, scope: !14447)
!14469 = !DILocation(line: 800, column: 30, scope: !14447)
!14470 = !DILocation(line: 800, column: 9, scope: !14447)
!14471 = !DILocation(line: 800, column: 7, scope: !14447)
!14472 = !DILocation(line: 801, column: 7, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14447, file: !3, line: 801, column: 6)
!14474 = !DILocation(line: 801, column: 6, scope: !14447)
!14475 = !DILocation(line: 802, column: 7, scope: !14473)
!14476 = !DILocation(line: 802, column: 3, scope: !14473)
!14477 = !DILocation(line: 803, column: 30, scope: !14478)
!14478 = distinct !DILexicalBlock(scope: !14473, file: !3, line: 803, column: 11)
!14479 = !DILocation(line: 803, column: 38, scope: !14478)
!14480 = !DILocation(line: 803, column: 42, scope: !14478)
!14481 = !DILocation(line: 803, column: 11, scope: !14478)
!14482 = !DILocation(line: 803, column: 11, scope: !14473)
!14483 = !DILocalVariable(name: "old_suppress", scope: !14484, file: !3, line: 804, type: !7)
!14484 = distinct !DILexicalBlock(scope: !14478, file: !3, line: 803, column: 54)
!14485 = !DILocation(line: 804, column: 16, scope: !14484)
!14486 = !DILocation(line: 807, column: 43, scope: !14484)
!14487 = !DILocation(line: 807, column: 49, scope: !14484)
!14488 = !DILocation(line: 807, column: 18, scope: !14484)
!14489 = !DILocation(line: 807, column: 16, scope: !14484)
!14490 = !DILocation(line: 808, column: 28, scope: !14484)
!14491 = !DILocation(line: 808, column: 34, scope: !14484)
!14492 = !DILocation(line: 808, column: 3, scope: !14484)
!14493 = !DILocation(line: 809, column: 47, scope: !14484)
!14494 = !DILocation(line: 809, column: 3, scope: !14484)
!14495 = !DILocation(line: 810, column: 28, scope: !14484)
!14496 = !DILocation(line: 810, column: 34, scope: !14484)
!14497 = !DILocation(line: 810, column: 39, scope: !14484)
!14498 = !DILocation(line: 810, column: 3, scope: !14484)
!14499 = !DILocation(line: 811, column: 7, scope: !14484)
!14500 = !DILocation(line: 812, column: 2, scope: !14484)
!14501 = !DILocation(line: 813, column: 9, scope: !14447)
!14502 = !DILocation(line: 813, column: 2, scope: !14447)
!14503 = !DILocation(line: 814, column: 1, scope: !14447)
!14504 = distinct !DISubprogram(name: "test_and_clear_bit", scope: !5949, file: !5949, line: 81, type: !14505, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14505 = !DISubroutineType(types: !14506)
!14506 = !{!534, !357, !5952}
!14507 = !DILocalVariable(name: "nr", arg: 1, scope: !14508, file: !5956, line: 160, type: !357)
!14508 = distinct !DISubprogram(name: "arch_test_and_clear_bit", scope: !5956, file: !5956, line: 160, type: !14505, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14509 = !DILocation(line: 160, column: 30, scope: !14508, inlinedAt: !14510)
!14510 = distinct !DILocation(line: 84, column: 9, scope: !14504)
!14511 = !DILocalVariable(name: "addr", arg: 2, scope: !14508, file: !5956, line: 160, type: !5952)
!14512 = !DILocation(line: 160, column: 58, scope: !14508, inlinedAt: !14510)
!14513 = !DILocalVariable(name: "c", scope: !14514, file: !5956, line: 162, type: !534)
!14514 = distinct !DILexicalBlock(scope: !14508, file: !5956, line: 162, column: 9)
!14515 = !DILocation(line: 162, column: 9, scope: !14514, inlinedAt: !14510)
!14516 = !DILocation(line: 99, column: 79, scope: !9332, inlinedAt: !14517)
!14517 = distinct !DILocation(line: 83, column: 2, scope: !14504)
!14518 = !DILocation(line: 99, column: 89, scope: !9332, inlinedAt: !14517)
!14519 = !DILocalVariable(name: "nr", arg: 1, scope: !14504, file: !5949, line: 81, type: !357)
!14520 = !DILocation(line: 81, column: 44, scope: !14504)
!14521 = !DILocalVariable(name: "addr", arg: 2, scope: !14504, file: !5949, line: 81, type: !5952)
!14522 = !DILocation(line: 81, column: 72, scope: !14504)
!14523 = !DILocation(line: 83, column: 31, scope: !14504)
!14524 = !DILocation(line: 83, column: 38, scope: !14504)
!14525 = !DILocation(line: 83, column: 36, scope: !14504)
!14526 = !DILocation(line: 101, column: 20, scope: !9332, inlinedAt: !14517)
!14527 = !DILocation(line: 101, column: 23, scope: !9332, inlinedAt: !14517)
!14528 = !DILocation(line: 101, column: 2, scope: !9332, inlinedAt: !14517)
!14529 = !DILocation(line: 102, column: 2, scope: !9332, inlinedAt: !14517)
!14530 = !DILocation(line: 84, column: 33, scope: !14504)
!14531 = !DILocation(line: 84, column: 37, scope: !14504)
!14532 = !{i32 -2146936448, i32 -2146936352}
!14533 = !DILocation(line: 84, column: 2, scope: !14504)
!14534 = distinct !DISubprogram(name: "proc_ioctl", scope: !3, file: !3, line: 2208, type: !14535, scopeLine: 2209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14535 = !DISubroutineType(types: !14536)
!14536 = !{!205, !190, !14537}
!14537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7992, size: 64)
!14538 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !14539)
!14539 = distinct !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !14540)
!14540 = distinct !DILocation(line: 2279, column: 7, scope: !14541)
!14541 = distinct !DILexicalBlock(scope: !14534, file: !3, line: 2276, column: 6)
!14542 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !14539)
!14543 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !14539)
!14544 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !14539)
!14545 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !14539)
!14546 = !DILocation(line: 197, column: 27, scope: !5065, inlinedAt: !14540)
!14547 = !DILocation(line: 197, column: 43, scope: !5065, inlinedAt: !14540)
!14548 = !DILocation(line: 197, column: 63, scope: !5065, inlinedAt: !14540)
!14549 = !DILocation(line: 138, column: 29, scope: !5057, inlinedAt: !14550)
!14550 = distinct !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !14551)
!14551 = distinct !DILocation(line: 2229, column: 8, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14553, file: !3, line: 2229, column: 8)
!14553 = distinct !DILexicalBlock(scope: !14554, file: !3, line: 2228, column: 49)
!14554 = distinct !DILexicalBlock(scope: !14555, file: !3, line: 2228, column: 7)
!14555 = distinct !DILexicalBlock(scope: !14556, file: !3, line: 2224, column: 16)
!14556 = distinct !DILexicalBlock(scope: !14534, file: !3, line: 2224, column: 6)
!14557 = !DILocation(line: 138, column: 42, scope: !5057, inlinedAt: !14550)
!14558 = !DILocation(line: 138, column: 54, scope: !5057, inlinedAt: !14550)
!14559 = !DILocation(line: 140, column: 6, scope: !5057, inlinedAt: !14550)
!14560 = !DILocation(line: 150, column: 6, scope: !5084, inlinedAt: !14550)
!14561 = !DILocation(line: 189, column: 22, scope: !6970, inlinedAt: !14551)
!14562 = !DILocation(line: 189, column: 45, scope: !6970, inlinedAt: !14551)
!14563 = !DILocation(line: 189, column: 65, scope: !6970, inlinedAt: !14551)
!14564 = !DILocation(line: 445, column: 72, scope: !10551, inlinedAt: !14565)
!14565 = distinct !DILocation(line: 552, column: 10, scope: !10556, inlinedAt: !14566)
!14566 = distinct !DILocation(line: 2225, column: 9, scope: !14555)
!14567 = !DILocation(line: 446, column: 9, scope: !10551, inlinedAt: !14565)
!14568 = !DILocation(line: 446, column: 23, scope: !10551, inlinedAt: !14565)
!14569 = !DILocation(line: 448, column: 8, scope: !10551, inlinedAt: !14565)
!14570 = !DILocation(line: 318, column: 67, scope: !10569, inlinedAt: !14571)
!14571 = distinct !DILocation(line: 553, column: 20, scope: !10556, inlinedAt: !14566)
!14572 = !DILocation(line: 346, column: 58, scope: !10575, inlinedAt: !14573)
!14573 = distinct !DILocation(line: 547, column: 11, scope: !10556, inlinedAt: !14566)
!14574 = !DILocation(line: 472, column: 28, scope: !10581, inlinedAt: !14575)
!14575 = distinct !DILocation(line: 481, column: 9, scope: !10586, inlinedAt: !14576)
!14576 = distinct !DILocation(line: 545, column: 11, scope: !10588, inlinedAt: !14566)
!14577 = !DILocation(line: 472, column: 40, scope: !10581, inlinedAt: !14575)
!14578 = !DILocation(line: 472, column: 60, scope: !10581, inlinedAt: !14575)
!14579 = !DILocation(line: 478, column: 51, scope: !10586, inlinedAt: !14576)
!14580 = !DILocation(line: 478, column: 63, scope: !10586, inlinedAt: !14576)
!14581 = !DILocation(line: 480, column: 15, scope: !10586, inlinedAt: !14576)
!14582 = !DILocation(line: 538, column: 45, scope: !10558, inlinedAt: !14566)
!14583 = !DILocation(line: 538, column: 57, scope: !10558, inlinedAt: !14566)
!14584 = !DILocation(line: 542, column: 16, scope: !10556, inlinedAt: !14566)
!14585 = !DILocalVariable(name: "ps", arg: 1, scope: !14534, file: !3, line: 2208, type: !190)
!14586 = !DILocation(line: 2208, column: 45, scope: !14534)
!14587 = !DILocalVariable(name: "ctl", arg: 2, scope: !14534, file: !3, line: 2208, type: !14537)
!14588 = !DILocation(line: 2208, column: 72, scope: !14534)
!14589 = !DILocalVariable(name: "size", scope: !14534, file: !3, line: 2210, type: !205)
!14590 = !DILocation(line: 2210, column: 8, scope: !14534)
!14591 = !DILocalVariable(name: "buf", scope: !14534, file: !3, line: 2211, type: !189)
!14592 = !DILocation(line: 2211, column: 10, scope: !14534)
!14593 = !DILocalVariable(name: "retval", scope: !14534, file: !3, line: 2212, type: !205)
!14594 = !DILocation(line: 2212, column: 8, scope: !14534)
!14595 = !DILocalVariable(name: "intf", scope: !14534, file: !3, line: 2213, type: !4299)
!14596 = !DILocation(line: 2213, column: 27, scope: !14534)
!14597 = !DILocalVariable(name: "driver", scope: !14534, file: !3, line: 2214, type: !4559)
!14598 = !DILocation(line: 2214, column: 27, scope: !14534)
!14599 = !DILocation(line: 2216, column: 6, scope: !14600)
!14600 = distinct !DILexicalBlock(scope: !14534, file: !3, line: 2216, column: 6)
!14601 = !DILocation(line: 2216, column: 10, scope: !14600)
!14602 = !DILocation(line: 2216, column: 6, scope: !14534)
!14603 = !DILocation(line: 2217, column: 3, scope: !14600)
!14604 = !DILocation(line: 2219, column: 17, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14534, file: !3, line: 2219, column: 6)
!14606 = !DILocation(line: 2219, column: 7, scope: !14605)
!14607 = !DILocation(line: 2219, column: 6, scope: !14534)
!14608 = !DILocation(line: 2220, column: 3, scope: !14605)
!14609 = !DILocation(line: 2223, column: 9, scope: !14534)
!14610 = !DILocation(line: 2223, column: 7, scope: !14534)
!14611 = !DILocation(line: 2224, column: 6, scope: !14556)
!14612 = !DILocation(line: 2224, column: 11, scope: !14556)
!14613 = !DILocation(line: 2224, column: 6, scope: !14534)
!14614 = !DILocation(line: 2225, column: 17, scope: !14555)
!14615 = !DILocation(line: 540, column: 27, scope: !10557, inlinedAt: !14566)
!14616 = !DILocation(line: 540, column: 6, scope: !10557, inlinedAt: !14566)
!14617 = !DILocation(line: 540, column: 6, scope: !10558, inlinedAt: !14566)
!14618 = !DILocation(line: 544, column: 7, scope: !10588, inlinedAt: !14566)
!14619 = !DILocation(line: 544, column: 12, scope: !10588, inlinedAt: !14566)
!14620 = !DILocation(line: 544, column: 7, scope: !10556, inlinedAt: !14566)
!14621 = !DILocation(line: 545, column: 25, scope: !10588, inlinedAt: !14566)
!14622 = !DILocation(line: 545, column: 31, scope: !10588, inlinedAt: !14566)
!14623 = !DILocation(line: 480, column: 33, scope: !10586, inlinedAt: !14576)
!14624 = !DILocation(line: 480, column: 23, scope: !10586, inlinedAt: !14576)
!14625 = !DILocation(line: 481, column: 29, scope: !10586, inlinedAt: !14576)
!14626 = !DILocation(line: 481, column: 35, scope: !10586, inlinedAt: !14576)
!14627 = !DILocation(line: 481, column: 42, scope: !10586, inlinedAt: !14576)
!14628 = !DILocation(line: 474, column: 23, scope: !10581, inlinedAt: !14575)
!14629 = !DILocation(line: 474, column: 29, scope: !10581, inlinedAt: !14575)
!14630 = !DILocation(line: 474, column: 36, scope: !10581, inlinedAt: !14575)
!14631 = !DILocation(line: 474, column: 9, scope: !10581, inlinedAt: !14575)
!14632 = !DILocation(line: 545, column: 4, scope: !10588, inlinedAt: !14566)
!14633 = !DILocation(line: 547, column: 25, scope: !10556, inlinedAt: !14566)
!14634 = !DILocation(line: 348, column: 7, scope: !10706, inlinedAt: !14573)
!14635 = !DILocation(line: 348, column: 6, scope: !10575, inlinedAt: !14573)
!14636 = !DILocation(line: 349, column: 3, scope: !10706, inlinedAt: !14573)
!14637 = !DILocation(line: 351, column: 6, scope: !10710, inlinedAt: !14573)
!14638 = !DILocation(line: 351, column: 11, scope: !10710, inlinedAt: !14573)
!14639 = !DILocation(line: 351, column: 6, scope: !10575, inlinedAt: !14573)
!14640 = !DILocation(line: 352, column: 3, scope: !10710, inlinedAt: !14573)
!14641 = !DILocation(line: 354, column: 32, scope: !10715, inlinedAt: !14573)
!14642 = !DILocation(line: 354, column: 37, scope: !10715, inlinedAt: !14573)
!14643 = !DILocation(line: 354, column: 42, scope: !10715, inlinedAt: !14573)
!14644 = !DILocation(line: 354, column: 45, scope: !10715, inlinedAt: !14573)
!14645 = !DILocation(line: 354, column: 50, scope: !10715, inlinedAt: !14573)
!14646 = !DILocation(line: 354, column: 6, scope: !10575, inlinedAt: !14573)
!14647 = !DILocation(line: 355, column: 3, scope: !10715, inlinedAt: !14573)
!14648 = !DILocation(line: 356, column: 32, scope: !10723, inlinedAt: !14573)
!14649 = !DILocation(line: 356, column: 37, scope: !10723, inlinedAt: !14573)
!14650 = !DILocation(line: 356, column: 43, scope: !10723, inlinedAt: !14573)
!14651 = !DILocation(line: 356, column: 46, scope: !10723, inlinedAt: !14573)
!14652 = !DILocation(line: 356, column: 51, scope: !10723, inlinedAt: !14573)
!14653 = !DILocation(line: 356, column: 6, scope: !10575, inlinedAt: !14573)
!14654 = !DILocation(line: 357, column: 3, scope: !10723, inlinedAt: !14573)
!14655 = !DILocation(line: 358, column: 6, scope: !10731, inlinedAt: !14573)
!14656 = !DILocation(line: 358, column: 11, scope: !10731, inlinedAt: !14573)
!14657 = !DILocation(line: 358, column: 6, scope: !10575, inlinedAt: !14573)
!14658 = !DILocation(line: 358, column: 26, scope: !10731, inlinedAt: !14573)
!14659 = !DILocation(line: 359, column: 6, scope: !10736, inlinedAt: !14573)
!14660 = !DILocation(line: 359, column: 11, scope: !10736, inlinedAt: !14573)
!14661 = !DILocation(line: 359, column: 6, scope: !10575, inlinedAt: !14573)
!14662 = !DILocation(line: 359, column: 26, scope: !10736, inlinedAt: !14573)
!14663 = !DILocation(line: 360, column: 6, scope: !10741, inlinedAt: !14573)
!14664 = !DILocation(line: 360, column: 11, scope: !10741, inlinedAt: !14573)
!14665 = !DILocation(line: 360, column: 6, scope: !10575, inlinedAt: !14573)
!14666 = !DILocation(line: 360, column: 26, scope: !10741, inlinedAt: !14573)
!14667 = !DILocation(line: 361, column: 6, scope: !10746, inlinedAt: !14573)
!14668 = !DILocation(line: 361, column: 11, scope: !10746, inlinedAt: !14573)
!14669 = !DILocation(line: 361, column: 6, scope: !10575, inlinedAt: !14573)
!14670 = !DILocation(line: 361, column: 26, scope: !10746, inlinedAt: !14573)
!14671 = !DILocation(line: 362, column: 6, scope: !10751, inlinedAt: !14573)
!14672 = !DILocation(line: 362, column: 11, scope: !10751, inlinedAt: !14573)
!14673 = !DILocation(line: 362, column: 6, scope: !10575, inlinedAt: !14573)
!14674 = !DILocation(line: 362, column: 26, scope: !10751, inlinedAt: !14573)
!14675 = !DILocation(line: 363, column: 6, scope: !10756, inlinedAt: !14573)
!14676 = !DILocation(line: 363, column: 11, scope: !10756, inlinedAt: !14573)
!14677 = !DILocation(line: 363, column: 6, scope: !10575, inlinedAt: !14573)
!14678 = !DILocation(line: 363, column: 26, scope: !10756, inlinedAt: !14573)
!14679 = !DILocation(line: 364, column: 6, scope: !10761, inlinedAt: !14573)
!14680 = !DILocation(line: 364, column: 11, scope: !10761, inlinedAt: !14573)
!14681 = !DILocation(line: 364, column: 6, scope: !10575, inlinedAt: !14573)
!14682 = !DILocation(line: 364, column: 26, scope: !10761, inlinedAt: !14573)
!14683 = !DILocation(line: 365, column: 6, scope: !10766, inlinedAt: !14573)
!14684 = !DILocation(line: 365, column: 11, scope: !10766, inlinedAt: !14573)
!14685 = !DILocation(line: 365, column: 6, scope: !10575, inlinedAt: !14573)
!14686 = !DILocation(line: 365, column: 26, scope: !10766, inlinedAt: !14573)
!14687 = !DILocation(line: 366, column: 6, scope: !10771, inlinedAt: !14573)
!14688 = !DILocation(line: 366, column: 11, scope: !10771, inlinedAt: !14573)
!14689 = !DILocation(line: 366, column: 6, scope: !10575, inlinedAt: !14573)
!14690 = !DILocation(line: 366, column: 26, scope: !10771, inlinedAt: !14573)
!14691 = !DILocation(line: 367, column: 6, scope: !10776, inlinedAt: !14573)
!14692 = !DILocation(line: 367, column: 11, scope: !10776, inlinedAt: !14573)
!14693 = !DILocation(line: 367, column: 6, scope: !10575, inlinedAt: !14573)
!14694 = !DILocation(line: 367, column: 26, scope: !10776, inlinedAt: !14573)
!14695 = !DILocation(line: 368, column: 6, scope: !10781, inlinedAt: !14573)
!14696 = !DILocation(line: 368, column: 11, scope: !10781, inlinedAt: !14573)
!14697 = !DILocation(line: 368, column: 6, scope: !10575, inlinedAt: !14573)
!14698 = !DILocation(line: 368, column: 26, scope: !10781, inlinedAt: !14573)
!14699 = !DILocation(line: 369, column: 6, scope: !10786, inlinedAt: !14573)
!14700 = !DILocation(line: 369, column: 11, scope: !10786, inlinedAt: !14573)
!14701 = !DILocation(line: 369, column: 6, scope: !10575, inlinedAt: !14573)
!14702 = !DILocation(line: 369, column: 26, scope: !10786, inlinedAt: !14573)
!14703 = !DILocation(line: 370, column: 6, scope: !10791, inlinedAt: !14573)
!14704 = !DILocation(line: 370, column: 11, scope: !10791, inlinedAt: !14573)
!14705 = !DILocation(line: 370, column: 6, scope: !10575, inlinedAt: !14573)
!14706 = !DILocation(line: 370, column: 26, scope: !10791, inlinedAt: !14573)
!14707 = !DILocation(line: 371, column: 6, scope: !10796, inlinedAt: !14573)
!14708 = !DILocation(line: 371, column: 11, scope: !10796, inlinedAt: !14573)
!14709 = !DILocation(line: 371, column: 6, scope: !10575, inlinedAt: !14573)
!14710 = !DILocation(line: 371, column: 26, scope: !10796, inlinedAt: !14573)
!14711 = !DILocation(line: 372, column: 6, scope: !10801, inlinedAt: !14573)
!14712 = !DILocation(line: 372, column: 11, scope: !10801, inlinedAt: !14573)
!14713 = !DILocation(line: 372, column: 6, scope: !10575, inlinedAt: !14573)
!14714 = !DILocation(line: 372, column: 26, scope: !10801, inlinedAt: !14573)
!14715 = !DILocation(line: 373, column: 6, scope: !10806, inlinedAt: !14573)
!14716 = !DILocation(line: 373, column: 11, scope: !10806, inlinedAt: !14573)
!14717 = !DILocation(line: 373, column: 6, scope: !10575, inlinedAt: !14573)
!14718 = !DILocation(line: 373, column: 26, scope: !10806, inlinedAt: !14573)
!14719 = !DILocation(line: 374, column: 6, scope: !10811, inlinedAt: !14573)
!14720 = !DILocation(line: 374, column: 11, scope: !10811, inlinedAt: !14573)
!14721 = !DILocation(line: 374, column: 6, scope: !10575, inlinedAt: !14573)
!14722 = !DILocation(line: 374, column: 26, scope: !10811, inlinedAt: !14573)
!14723 = !DILocation(line: 375, column: 6, scope: !10816, inlinedAt: !14573)
!14724 = !DILocation(line: 375, column: 11, scope: !10816, inlinedAt: !14573)
!14725 = !DILocation(line: 375, column: 6, scope: !10575, inlinedAt: !14573)
!14726 = !DILocation(line: 375, column: 27, scope: !10816, inlinedAt: !14573)
!14727 = !DILocation(line: 376, column: 6, scope: !10821, inlinedAt: !14573)
!14728 = !DILocation(line: 376, column: 11, scope: !10821, inlinedAt: !14573)
!14729 = !DILocation(line: 376, column: 6, scope: !10575, inlinedAt: !14573)
!14730 = !DILocation(line: 376, column: 32, scope: !10821, inlinedAt: !14573)
!14731 = !DILocation(line: 377, column: 6, scope: !10826, inlinedAt: !14573)
!14732 = !DILocation(line: 377, column: 11, scope: !10826, inlinedAt: !14573)
!14733 = !DILocation(line: 377, column: 6, scope: !10575, inlinedAt: !14573)
!14734 = !DILocation(line: 377, column: 32, scope: !10826, inlinedAt: !14573)
!14735 = !DILocation(line: 378, column: 6, scope: !10831, inlinedAt: !14573)
!14736 = !DILocation(line: 378, column: 11, scope: !10831, inlinedAt: !14573)
!14737 = !DILocation(line: 378, column: 6, scope: !10575, inlinedAt: !14573)
!14738 = !DILocation(line: 378, column: 32, scope: !10831, inlinedAt: !14573)
!14739 = !DILocation(line: 379, column: 6, scope: !10836, inlinedAt: !14573)
!14740 = !DILocation(line: 379, column: 11, scope: !10836, inlinedAt: !14573)
!14741 = !DILocation(line: 379, column: 6, scope: !10575, inlinedAt: !14573)
!14742 = !DILocation(line: 379, column: 33, scope: !10836, inlinedAt: !14573)
!14743 = !DILocation(line: 380, column: 6, scope: !10841, inlinedAt: !14573)
!14744 = !DILocation(line: 380, column: 11, scope: !10841, inlinedAt: !14573)
!14745 = !DILocation(line: 380, column: 6, scope: !10575, inlinedAt: !14573)
!14746 = !DILocation(line: 380, column: 33, scope: !10841, inlinedAt: !14573)
!14747 = !DILocation(line: 381, column: 6, scope: !10846, inlinedAt: !14573)
!14748 = !DILocation(line: 381, column: 11, scope: !10846, inlinedAt: !14573)
!14749 = !DILocation(line: 381, column: 6, scope: !10575, inlinedAt: !14573)
!14750 = !DILocation(line: 381, column: 33, scope: !10846, inlinedAt: !14573)
!14751 = !DILocation(line: 382, column: 2, scope: !10851, inlinedAt: !14573)
!14752 = !DILocation(line: 382, column: 2, scope: !10855, inlinedAt: !14573)
!14753 = !DILocation(line: 382, column: 2, scope: !10856, inlinedAt: !14573)
!14754 = !DILocation(line: 386, column: 1, scope: !10575, inlinedAt: !14573)
!14755 = !DILocation(line: 547, column: 9, scope: !10556, inlinedAt: !14566)
!14756 = !DILocation(line: 549, column: 8, scope: !10862, inlinedAt: !14566)
!14757 = !DILocation(line: 549, column: 7, scope: !10556, inlinedAt: !14566)
!14758 = !DILocation(line: 550, column: 4, scope: !10862, inlinedAt: !14566)
!14759 = !DILocation(line: 553, column: 33, scope: !10556, inlinedAt: !14566)
!14760 = !DILocation(line: 325, column: 6, scope: !10867, inlinedAt: !14571)
!14761 = !DILocation(line: 325, column: 6, scope: !10569, inlinedAt: !14571)
!14762 = !DILocation(line: 326, column: 3, scope: !10867, inlinedAt: !14571)
!14763 = !DILocation(line: 332, column: 9, scope: !10569, inlinedAt: !14571)
!14764 = !DILocation(line: 332, column: 15, scope: !10569, inlinedAt: !14571)
!14765 = !DILocation(line: 332, column: 2, scope: !10569, inlinedAt: !14571)
!14766 = !DILocation(line: 336, column: 1, scope: !10569, inlinedAt: !14571)
!14767 = !DILocation(line: 553, column: 5, scope: !10556, inlinedAt: !14566)
!14768 = !DILocation(line: 553, column: 41, scope: !10556, inlinedAt: !14566)
!14769 = !DILocation(line: 554, column: 5, scope: !10556, inlinedAt: !14566)
!14770 = !DILocation(line: 554, column: 12, scope: !10556, inlinedAt: !14566)
!14771 = !DILocation(line: 448, column: 31, scope: !10551, inlinedAt: !14565)
!14772 = !DILocation(line: 448, column: 34, scope: !10551, inlinedAt: !14565)
!14773 = !DILocation(line: 448, column: 14, scope: !10551, inlinedAt: !14565)
!14774 = !DILocation(line: 450, column: 22, scope: !10551, inlinedAt: !14565)
!14775 = !DILocation(line: 450, column: 25, scope: !10551, inlinedAt: !14565)
!14776 = !DILocation(line: 450, column: 30, scope: !10551, inlinedAt: !14565)
!14777 = !DILocation(line: 450, column: 36, scope: !10551, inlinedAt: !14565)
!14778 = !DILocation(line: 450, column: 8, scope: !10551, inlinedAt: !14565)
!14779 = !DILocation(line: 450, column: 6, scope: !10551, inlinedAt: !14565)
!14780 = !DILocation(line: 451, column: 9, scope: !10551, inlinedAt: !14565)
!14781 = !DILocation(line: 552, column: 3, scope: !10556, inlinedAt: !14566)
!14782 = !DILocation(line: 557, column: 19, scope: !10558, inlinedAt: !14566)
!14783 = !DILocation(line: 557, column: 25, scope: !10558, inlinedAt: !14566)
!14784 = !DILocation(line: 557, column: 9, scope: !10558, inlinedAt: !14566)
!14785 = !DILocation(line: 557, column: 2, scope: !10558, inlinedAt: !14566)
!14786 = !DILocation(line: 558, column: 1, scope: !10558, inlinedAt: !14566)
!14787 = !DILocation(line: 2225, column: 7, scope: !14555)
!14788 = !DILocation(line: 2226, column: 7, scope: !14789)
!14789 = distinct !DILexicalBlock(scope: !14555, file: !3, line: 2226, column: 7)
!14790 = !DILocation(line: 2226, column: 11, scope: !14789)
!14791 = !DILocation(line: 2226, column: 7, scope: !14555)
!14792 = !DILocation(line: 2227, column: 4, scope: !14789)
!14793 = !DILocation(line: 2228, column: 8, scope: !14554)
!14794 = !DILocation(line: 2228, column: 34, scope: !14554)
!14795 = !DILocation(line: 2228, column: 7, scope: !14555)
!14796 = !DILocation(line: 2229, column: 23, scope: !14552)
!14797 = !DILocation(line: 2229, column: 28, scope: !14552)
!14798 = !DILocation(line: 2229, column: 33, scope: !14552)
!14799 = !DILocation(line: 2229, column: 39, scope: !14552)
!14800 = !DILocation(line: 191, column: 6, scope: !6969, inlinedAt: !14551)
!14801 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !14550)
!14802 = !DILocation(line: 0, scope: !5187, inlinedAt: !14550)
!14803 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !14550)
!14804 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !14550)
!14805 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !14550)
!14806 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !14550)
!14807 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !14550)
!14808 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !14550)
!14809 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !14550)
!14810 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !14550)
!14811 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !14550)
!14812 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !14550)
!14813 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !14550)
!14814 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !14550)
!14815 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !14550)
!14816 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !14550)
!14817 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !14550)
!14818 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !14550)
!14819 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !14550)
!14820 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !14550)
!14821 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !14550)
!14822 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !14550)
!14823 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !14550)
!14824 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !14550)
!14825 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !14550)
!14826 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !14550)
!14827 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !14550)
!14828 = !DILocation(line: 191, column: 6, scope: !6970, inlinedAt: !14551)
!14829 = !DILocation(line: 192, column: 23, scope: !6969, inlinedAt: !14551)
!14830 = !DILocation(line: 192, column: 27, scope: !6969, inlinedAt: !14551)
!14831 = !DILocation(line: 192, column: 33, scope: !6969, inlinedAt: !14551)
!14832 = !DILocation(line: 192, column: 7, scope: !6969, inlinedAt: !14551)
!14833 = !DILocation(line: 192, column: 5, scope: !6969, inlinedAt: !14551)
!14834 = !DILocation(line: 192, column: 3, scope: !6969, inlinedAt: !14551)
!14835 = !DILocation(line: 193, column: 9, scope: !6970, inlinedAt: !14551)
!14836 = !DILocation(line: 2229, column: 8, scope: !14552)
!14837 = !DILocation(line: 2229, column: 8, scope: !14553)
!14838 = !DILocation(line: 2230, column: 11, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14552, file: !3, line: 2229, column: 46)
!14840 = !DILocation(line: 2230, column: 5, scope: !14839)
!14841 = !DILocation(line: 2231, column: 5, scope: !14839)
!14842 = !DILocation(line: 2233, column: 3, scope: !14553)
!14843 = !DILocation(line: 2234, column: 11, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14554, file: !3, line: 2233, column: 10)
!14845 = !DILocation(line: 2234, column: 19, scope: !14844)
!14846 = !DILocation(line: 2234, column: 4, scope: !14844)
!14847 = !DILocation(line: 2236, column: 2, scope: !14555)
!14848 = !DILocation(line: 2238, column: 6, scope: !14849)
!14849 = distinct !DILexicalBlock(scope: !14534, file: !3, line: 2238, column: 6)
!14850 = !DILocation(line: 2238, column: 10, scope: !14849)
!14851 = !DILocation(line: 2238, column: 15, scope: !14849)
!14852 = !DILocation(line: 2238, column: 21, scope: !14849)
!14853 = !DILocation(line: 2238, column: 6, scope: !14534)
!14854 = !DILocation(line: 2239, column: 10, scope: !14849)
!14855 = !DILocation(line: 2239, column: 3, scope: !14849)
!14856 = !DILocation(line: 2240, column: 36, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14849, file: !3, line: 2240, column: 11)
!14858 = !DILocation(line: 2240, column: 40, scope: !14857)
!14859 = !DILocation(line: 2240, column: 45, scope: !14857)
!14860 = !DILocation(line: 2240, column: 50, scope: !14857)
!14861 = !DILocation(line: 2240, column: 20, scope: !14857)
!14862 = !DILocation(line: 2240, column: 18, scope: !14857)
!14863 = !DILocation(line: 2240, column: 11, scope: !14849)
!14864 = !DILocation(line: 2241, column: 10, scope: !14857)
!14865 = !DILocation(line: 2241, column: 3, scope: !14857)
!14866 = !DILocation(line: 2242, column: 15, scope: !14857)
!14867 = !DILocation(line: 2242, column: 20, scope: !14857)
!14868 = !DILocation(line: 2242, column: 7, scope: !14857)
!14869 = !DILocation(line: 2246, column: 7, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14871, file: !3, line: 2246, column: 7)
!14871 = distinct !DILexicalBlock(scope: !14857, file: !3, line: 2242, column: 32)
!14872 = !DILocation(line: 2246, column: 13, scope: !14870)
!14873 = !DILocation(line: 2246, column: 17, scope: !14870)
!14874 = !DILocation(line: 2246, column: 7, scope: !14871)
!14875 = !DILocalVariable(name: "__mptr", scope: !14876, file: !3, line: 2247, type: !189)
!14876 = distinct !DILexicalBlock(scope: !14877, file: !3, line: 2247, column: 13)
!14877 = distinct !DILexicalBlock(scope: !14870, file: !3, line: 2246, column: 25)
!14878 = !DILocation(line: 2247, column: 13, scope: !14876)
!14879 = !DILocation(line: 2247, column: 13, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14876, file: !3, line: 2247, column: 13)
!14881 = !DILocation(line: 2247, column: 11, scope: !14877)
!14882 = !DILocation(line: 2249, column: 33, scope: !14877)
!14883 = !DILocation(line: 2249, column: 41, scope: !14877)
!14884 = !DILocation(line: 2249, column: 4, scope: !14877)
!14885 = !DILocation(line: 2250, column: 3, scope: !14877)
!14886 = !DILocation(line: 2251, column: 11, scope: !14870)
!14887 = !DILocation(line: 2252, column: 3, scope: !14871)
!14888 = !DILocation(line: 2256, column: 8, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !14871, file: !3, line: 2256, column: 7)
!14890 = !DILocation(line: 2256, column: 14, scope: !14889)
!14891 = !DILocation(line: 2256, column: 18, scope: !14889)
!14892 = !DILocation(line: 2256, column: 7, scope: !14871)
!14893 = !DILocation(line: 2257, column: 28, scope: !14889)
!14894 = !DILocation(line: 2257, column: 34, scope: !14889)
!14895 = !DILocation(line: 2257, column: 13, scope: !14889)
!14896 = !DILocation(line: 2257, column: 11, scope: !14889)
!14897 = !DILocation(line: 2257, column: 4, scope: !14889)
!14898 = !DILocation(line: 2259, column: 11, scope: !14889)
!14899 = !DILocation(line: 2260, column: 3, scope: !14871)
!14900 = !DILocation(line: 2264, column: 7, scope: !14901)
!14901 = distinct !DILexicalBlock(scope: !14871, file: !3, line: 2264, column: 7)
!14902 = !DILocation(line: 2264, column: 13, scope: !14901)
!14903 = !DILocation(line: 2264, column: 17, scope: !14901)
!14904 = !DILocation(line: 2264, column: 7, scope: !14871)
!14905 = !DILocalVariable(name: "__mptr", scope: !14906, file: !3, line: 2265, type: !189)
!14906 = distinct !DILexicalBlock(scope: !14901, file: !3, line: 2265, column: 13)
!14907 = !DILocation(line: 2265, column: 13, scope: !14906)
!14908 = !DILocation(line: 2265, column: 13, scope: !14909)
!14909 = distinct !DILexicalBlock(scope: !14906, file: !3, line: 2265, column: 13)
!14910 = !DILocation(line: 2265, column: 11, scope: !14901)
!14911 = !DILocation(line: 2265, column: 4, scope: !14901)
!14912 = !DILocation(line: 2266, column: 7, scope: !14913)
!14913 = distinct !DILexicalBlock(scope: !14871, file: !3, line: 2266, column: 7)
!14914 = !DILocation(line: 2266, column: 14, scope: !14913)
!14915 = !DILocation(line: 2266, column: 22, scope: !14913)
!14916 = !DILocation(line: 2266, column: 25, scope: !14913)
!14917 = !DILocation(line: 2266, column: 33, scope: !14913)
!14918 = !DILocation(line: 2266, column: 48, scope: !14913)
!14919 = !DILocation(line: 2266, column: 7, scope: !14871)
!14920 = !DILocation(line: 2267, column: 11, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14913, file: !3, line: 2266, column: 57)
!14922 = !DILocation(line: 2268, column: 3, scope: !14921)
!14923 = !DILocation(line: 2269, column: 13, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14913, file: !3, line: 2268, column: 10)
!14925 = !DILocation(line: 2269, column: 21, scope: !14924)
!14926 = !DILocation(line: 2269, column: 36, scope: !14924)
!14927 = !DILocation(line: 2269, column: 42, scope: !14924)
!14928 = !DILocation(line: 2269, column: 47, scope: !14924)
!14929 = !DILocation(line: 2269, column: 59, scope: !14924)
!14930 = !DILocation(line: 2269, column: 11, scope: !14924)
!14931 = !DILocation(line: 2270, column: 8, scope: !14932)
!14932 = distinct !DILexicalBlock(scope: !14924, file: !3, line: 2270, column: 8)
!14933 = !DILocation(line: 2270, column: 15, scope: !14932)
!14934 = !DILocation(line: 2270, column: 8, scope: !14924)
!14935 = !DILocation(line: 2271, column: 12, scope: !14932)
!14936 = !DILocation(line: 2271, column: 5, scope: !14932)
!14937 = !DILocation(line: 2273, column: 2, scope: !14871)
!14938 = !DILocation(line: 2276, column: 6, scope: !14541)
!14939 = !DILocation(line: 2276, column: 13, scope: !14541)
!14940 = !DILocation(line: 2277, column: 4, scope: !14541)
!14941 = !DILocation(line: 2277, column: 8, scope: !14541)
!14942 = !DILocation(line: 2277, column: 34, scope: !14541)
!14943 = !DILocation(line: 2277, column: 47, scope: !14541)
!14944 = !DILocation(line: 2278, column: 4, scope: !14541)
!14945 = !DILocation(line: 2278, column: 7, scope: !14541)
!14946 = !DILocation(line: 2278, column: 12, scope: !14541)
!14947 = !DILocation(line: 2279, column: 4, scope: !14541)
!14948 = !DILocation(line: 2279, column: 20, scope: !14541)
!14949 = !DILocation(line: 2279, column: 25, scope: !14541)
!14950 = !DILocation(line: 2279, column: 31, scope: !14541)
!14951 = !DILocation(line: 2279, column: 36, scope: !14541)
!14952 = !DILocation(line: 199, column: 6, scope: !5063, inlinedAt: !14540)
!14953 = !DILocation(line: 141, column: 6, scope: !5187, inlinedAt: !14539)
!14954 = !DILocation(line: 0, scope: !5187, inlinedAt: !14539)
!14955 = !DILocation(line: 141, column: 6, scope: !5057, inlinedAt: !14539)
!14956 = !DILocation(line: 142, column: 29, scope: !5191, inlinedAt: !14539)
!14957 = !DILocation(line: 142, column: 8, scope: !5191, inlinedAt: !14539)
!14958 = !DILocation(line: 142, column: 7, scope: !5192, inlinedAt: !14539)
!14959 = !DILocation(line: 143, column: 18, scope: !5191, inlinedAt: !14539)
!14960 = !DILocation(line: 143, column: 22, scope: !5191, inlinedAt: !14539)
!14961 = !DILocation(line: 143, column: 4, scope: !5191, inlinedAt: !14539)
!14962 = !DILocation(line: 144, column: 12, scope: !5199, inlinedAt: !14539)
!14963 = !DILocation(line: 144, column: 12, scope: !5191, inlinedAt: !14539)
!14964 = !DILocation(line: 145, column: 4, scope: !5199, inlinedAt: !14539)
!14965 = !DILocation(line: 147, column: 4, scope: !5199, inlinedAt: !14539)
!14966 = !DILocation(line: 148, column: 3, scope: !5192, inlinedAt: !14539)
!14967 = !DILocation(line: 150, column: 6, scope: !5205, inlinedAt: !14539)
!14968 = !DILocation(line: 150, column: 6, scope: !5207, inlinedAt: !14539)
!14969 = !DILocation(line: 150, column: 6, scope: !5211, inlinedAt: !14539)
!14970 = !DILocation(line: 150, column: 6, scope: !5208, inlinedAt: !14539)
!14971 = !DILocation(line: 150, column: 6, scope: !5085, inlinedAt: !14539)
!14972 = !DILocation(line: 150, column: 6, scope: !5057, inlinedAt: !14539)
!14973 = !DILocation(line: 151, column: 3, scope: !5085, inlinedAt: !14539)
!14974 = !DILocation(line: 152, column: 20, scope: !5057, inlinedAt: !14539)
!14975 = !DILocation(line: 152, column: 26, scope: !5057, inlinedAt: !14539)
!14976 = !DILocation(line: 152, column: 33, scope: !5057, inlinedAt: !14539)
!14977 = !DILocation(line: 152, column: 2, scope: !5057, inlinedAt: !14539)
!14978 = !DILocation(line: 153, column: 2, scope: !5057, inlinedAt: !14539)
!14979 = !DILocation(line: 154, column: 1, scope: !5057, inlinedAt: !14539)
!14980 = !DILocation(line: 199, column: 6, scope: !5065, inlinedAt: !14540)
!14981 = !DILocation(line: 200, column: 21, scope: !5063, inlinedAt: !14540)
!14982 = !DILocation(line: 200, column: 25, scope: !5063, inlinedAt: !14540)
!14983 = !DILocation(line: 200, column: 31, scope: !5063, inlinedAt: !14540)
!14984 = !DILocation(line: 200, column: 7, scope: !5063, inlinedAt: !14540)
!14985 = !DILocation(line: 200, column: 5, scope: !5063, inlinedAt: !14540)
!14986 = !DILocation(line: 200, column: 3, scope: !5063, inlinedAt: !14540)
!14987 = !DILocation(line: 201, column: 9, scope: !5065, inlinedAt: !14540)
!14988 = !DILocation(line: 2279, column: 42, scope: !14541)
!14989 = !DILocation(line: 2276, column: 6, scope: !14534)
!14990 = !DILocation(line: 2280, column: 10, scope: !14541)
!14991 = !DILocation(line: 2280, column: 3, scope: !14541)
!14992 = !DILocation(line: 2282, column: 8, scope: !14534)
!14993 = !DILocation(line: 2282, column: 2, scope: !14534)
!14994 = !DILocation(line: 2283, column: 9, scope: !14534)
!14995 = !DILocation(line: 2283, column: 2, scope: !14534)
!14996 = !DILocation(line: 2284, column: 1, scope: !14534)
!14997 = distinct !DISubprogram(name: "parse_usbdevfs_streams", scope: !3, file: !3, line: 924, type: !14998, scopeLine: 930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!14998 = !DISubroutineType(types: !14999)
!14999 = !{!205, !190, !15000, !2876, !2876, !15007, !15008}
!15000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15001, size: 64)
!15001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdevfs_streams", file: !4534, line: 176, size: 64, elements: !15002)
!15002 = !{!15003, !15004, !15005}
!15003 = !DIDerivedType(tag: DW_TAG_member, name: "num_streams", scope: !15001, file: !4534, line: 177, baseType: !7, size: 32)
!15004 = !DIDerivedType(tag: DW_TAG_member, name: "num_eps", scope: !15001, file: !4534, line: 178, baseType: !7, size: 32, offset: 32)
!15005 = !DIDerivedType(tag: DW_TAG_member, name: "eps", scope: !15001, file: !4534, line: 179, baseType: !15006, offset: 64)
!15006 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, elements: !1906)
!15007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4724, size: 64)
!15008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4299, size: 64)
!15009 = !DILocalVariable(name: "ps", arg: 1, scope: !14997, file: !3, line: 924, type: !190)
!15010 = !DILocation(line: 924, column: 57, scope: !14997)
!15011 = !DILocalVariable(name: "streams", arg: 2, scope: !14997, file: !3, line: 925, type: !15000)
!15012 = !DILocation(line: 925, column: 39, scope: !14997)
!15013 = !DILocalVariable(name: "num_streams_ret", arg: 3, scope: !14997, file: !3, line: 926, type: !2876)
!15014 = !DILocation(line: 926, column: 21, scope: !14997)
!15015 = !DILocalVariable(name: "num_eps_ret", arg: 4, scope: !14997, file: !3, line: 927, type: !2876)
!15016 = !DILocation(line: 927, column: 21, scope: !14997)
!15017 = !DILocalVariable(name: "eps_ret", arg: 5, scope: !14997, file: !3, line: 928, type: !15007)
!15018 = !DILocation(line: 928, column: 35, scope: !14997)
!15019 = !DILocalVariable(name: "intf_ret", arg: 6, scope: !14997, file: !3, line: 929, type: !15008)
!15020 = !DILocation(line: 929, column: 30, scope: !14997)
!15021 = !DILocalVariable(name: "i", scope: !14997, file: !3, line: 931, type: !7)
!15022 = !DILocation(line: 931, column: 15, scope: !14997)
!15023 = !DILocalVariable(name: "num_streams", scope: !14997, file: !3, line: 931, type: !7)
!15024 = !DILocation(line: 931, column: 18, scope: !14997)
!15025 = !DILocalVariable(name: "num_eps", scope: !14997, file: !3, line: 931, type: !7)
!15026 = !DILocation(line: 931, column: 31, scope: !14997)
!15027 = !DILocalVariable(name: "eps", scope: !14997, file: !3, line: 932, type: !4724)
!15028 = !DILocation(line: 932, column: 29, scope: !14997)
!15029 = !DILocalVariable(name: "intf", scope: !14997, file: !3, line: 933, type: !4299)
!15030 = !DILocation(line: 933, column: 24, scope: !14997)
!15031 = !DILocalVariable(name: "ep", scope: !14997, file: !3, line: 934, type: !471)
!15032 = !DILocation(line: 934, column: 16, scope: !14997)
!15033 = !DILocalVariable(name: "ifnum", scope: !14997, file: !3, line: 935, type: !205)
!15034 = !DILocation(line: 935, column: 6, scope: !14997)
!15035 = !DILocalVariable(name: "ret", scope: !14997, file: !3, line: 935, type: !205)
!15036 = !DILocation(line: 935, column: 13, scope: !14997)
!15037 = !DILocation(line: 937, column: 6, scope: !15038)
!15038 = distinct !DILexicalBlock(scope: !15039, file: !3, line: 937, column: 6)
!15039 = distinct !DILexicalBlock(scope: !14997, file: !3, line: 937, column: 6)
!15040 = !DILocalVariable(name: "__ret_gu", scope: !15041, file: !3, line: 937, type: !205)
!15041 = distinct !DILexicalBlock(scope: !15038, file: !3, line: 937, column: 6)
!15042 = !DILocation(line: 937, column: 6, scope: !15041)
!15043 = !DILocalVariable(name: "__val_gu", scope: !15041, file: !3, line: 937, type: !7)
!15044 = !{i32 -2140973338}
!15045 = !DILocation(line: 937, column: 6, scope: !15039)
!15046 = !DILocation(line: 937, column: 51, scope: !15039)
!15047 = !DILocation(line: 938, column: 6, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !15039, file: !3, line: 938, column: 6)
!15049 = !DILocalVariable(name: "__ret_gu", scope: !15050, file: !3, line: 938, type: !205)
!15050 = distinct !DILexicalBlock(scope: !15048, file: !3, line: 938, column: 6)
!15051 = !DILocation(line: 938, column: 6, scope: !15050)
!15052 = !DILocalVariable(name: "__val_gu", scope: !15050, file: !3, line: 938, type: !7)
!15053 = !{i32 -2140971333}
!15054 = !DILocation(line: 938, column: 6, scope: !15039)
!15055 = !DILocation(line: 937, column: 6, scope: !14997)
!15056 = !DILocation(line: 939, column: 3, scope: !15039)
!15057 = !DILocation(line: 941, column: 6, scope: !15058)
!15058 = distinct !DILexicalBlock(scope: !14997, file: !3, line: 941, column: 6)
!15059 = !DILocation(line: 941, column: 14, scope: !15058)
!15060 = !DILocation(line: 941, column: 18, scope: !15058)
!15061 = !DILocation(line: 941, column: 21, scope: !15058)
!15062 = !DILocation(line: 941, column: 29, scope: !15058)
!15063 = !DILocation(line: 941, column: 6, scope: !14997)
!15064 = !DILocation(line: 942, column: 3, scope: !15058)
!15065 = !DILocation(line: 945, column: 6, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !14997, file: !3, line: 945, column: 6)
!15067 = !DILocation(line: 945, column: 22, scope: !15066)
!15068 = !DILocation(line: 945, column: 26, scope: !15066)
!15069 = !DILocation(line: 945, column: 38, scope: !15066)
!15070 = !DILocation(line: 945, column: 42, scope: !15066)
!15071 = !DILocation(line: 945, column: 45, scope: !15066)
!15072 = !DILocation(line: 945, column: 57, scope: !15066)
!15073 = !DILocation(line: 945, column: 6, scope: !14997)
!15074 = !DILocation(line: 946, column: 3, scope: !15066)
!15075 = !DILocation(line: 948, column: 22, scope: !14997)
!15076 = !DILocation(line: 948, column: 8, scope: !14997)
!15077 = !DILocation(line: 948, column: 6, scope: !14997)
!15078 = !DILocation(line: 949, column: 7, scope: !15079)
!15079 = distinct !DILexicalBlock(scope: !14997, file: !3, line: 949, column: 6)
!15080 = !DILocation(line: 949, column: 6, scope: !14997)
!15081 = !DILocation(line: 950, column: 3, scope: !15079)
!15082 = !DILocation(line: 952, column: 9, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !14997, file: !3, line: 952, column: 2)
!15084 = !DILocation(line: 952, column: 7, scope: !15083)
!15085 = !DILocation(line: 952, column: 14, scope: !15086)
!15086 = distinct !DILexicalBlock(scope: !15083, file: !3, line: 952, column: 2)
!15087 = !DILocation(line: 952, column: 18, scope: !15086)
!15088 = !DILocation(line: 952, column: 16, scope: !15086)
!15089 = !DILocation(line: 952, column: 2, scope: !15083)
!15090 = !DILocation(line: 953, column: 7, scope: !15091)
!15091 = distinct !DILexicalBlock(scope: !15092, file: !3, line: 953, column: 7)
!15092 = distinct !DILexicalBlock(scope: !15093, file: !3, line: 953, column: 7)
!15093 = distinct !DILexicalBlock(scope: !15086, file: !3, line: 952, column: 32)
!15094 = !DILocalVariable(name: "__ret_gu", scope: !15095, file: !3, line: 953, type: !205)
!15095 = distinct !DILexicalBlock(scope: !15091, file: !3, line: 953, column: 7)
!15096 = !DILocation(line: 953, column: 7, scope: !15095)
!15097 = !DILocalVariable(name: "__val_gu", scope: !15095, file: !3, line: 953, type: !471)
!15098 = !{i32 -2140969218}
!15099 = !DILocation(line: 953, column: 7, scope: !15092)
!15100 = !DILocation(line: 953, column: 7, scope: !15093)
!15101 = !DILocation(line: 954, column: 8, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !15092, file: !3, line: 953, column: 39)
!15103 = !DILocation(line: 955, column: 4, scope: !15102)
!15104 = !DILocation(line: 957, column: 32, scope: !15093)
!15105 = !DILocation(line: 957, column: 36, scope: !15093)
!15106 = !DILocation(line: 957, column: 41, scope: !15093)
!15107 = !DILocation(line: 957, column: 12, scope: !15093)
!15108 = !DILocation(line: 957, column: 3, scope: !15093)
!15109 = !DILocation(line: 957, column: 7, scope: !15093)
!15110 = !DILocation(line: 957, column: 10, scope: !15093)
!15111 = !DILocation(line: 958, column: 8, scope: !15112)
!15112 = distinct !DILexicalBlock(scope: !15093, file: !3, line: 958, column: 7)
!15113 = !DILocation(line: 958, column: 12, scope: !15112)
!15114 = !DILocation(line: 958, column: 7, scope: !15093)
!15115 = !DILocation(line: 959, column: 8, scope: !15116)
!15116 = distinct !DILexicalBlock(scope: !15112, file: !3, line: 958, column: 16)
!15117 = !DILocation(line: 960, column: 4, scope: !15116)
!15118 = !DILocation(line: 964, column: 22, scope: !15093)
!15119 = !DILocation(line: 964, column: 26, scope: !15093)
!15120 = !DILocation(line: 964, column: 31, scope: !15093)
!15121 = !DILocation(line: 964, column: 11, scope: !15093)
!15122 = !DILocation(line: 964, column: 9, scope: !15093)
!15123 = !DILocation(line: 965, column: 7, scope: !15124)
!15124 = distinct !DILexicalBlock(scope: !15093, file: !3, line: 965, column: 7)
!15125 = !DILocation(line: 965, column: 13, scope: !15124)
!15126 = !DILocation(line: 965, column: 7, scope: !15093)
!15127 = !DILocation(line: 966, column: 10, scope: !15128)
!15128 = distinct !DILexicalBlock(scope: !15124, file: !3, line: 965, column: 18)
!15129 = !DILocation(line: 966, column: 8, scope: !15128)
!15130 = !DILocation(line: 967, column: 4, scope: !15128)
!15131 = !DILocation(line: 970, column: 7, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !15093, file: !3, line: 970, column: 7)
!15133 = !DILocation(line: 970, column: 9, scope: !15132)
!15134 = !DILocation(line: 970, column: 7, scope: !15093)
!15135 = !DILocation(line: 971, column: 20, scope: !15136)
!15136 = distinct !DILexicalBlock(scope: !15132, file: !3, line: 970, column: 15)
!15137 = !DILocation(line: 971, column: 24, scope: !15136)
!15138 = !DILocation(line: 971, column: 10, scope: !15136)
!15139 = !DILocation(line: 971, column: 8, scope: !15136)
!15140 = !DILocation(line: 972, column: 8, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15136, file: !3, line: 972, column: 8)
!15142 = !DILocation(line: 972, column: 12, scope: !15141)
!15143 = !DILocation(line: 972, column: 8, scope: !15136)
!15144 = !DILocation(line: 973, column: 5, scope: !15141)
!15145 = !DILocation(line: 974, column: 27, scope: !15136)
!15146 = !DILocation(line: 974, column: 31, scope: !15136)
!15147 = !DILocation(line: 974, column: 36, scope: !15136)
!15148 = !DILocation(line: 974, column: 11, scope: !15136)
!15149 = !DILocation(line: 974, column: 9, scope: !15136)
!15150 = !DILocation(line: 975, column: 3, scope: !15136)
!15151 = !DILocation(line: 977, column: 8, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15153, file: !3, line: 977, column: 8)
!15153 = distinct !DILexicalBlock(scope: !15132, file: !3, line: 975, column: 10)
!15154 = !DILocation(line: 977, column: 17, scope: !15152)
!15155 = !DILocation(line: 977, column: 23, scope: !15152)
!15156 = !DILocation(line: 977, column: 35, scope: !15152)
!15157 = !DILocation(line: 977, column: 40, scope: !15152)
!15158 = !DILocation(line: 977, column: 14, scope: !15152)
!15159 = !DILocation(line: 977, column: 8, scope: !15153)
!15160 = !DILocation(line: 978, column: 9, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15152, file: !3, line: 977, column: 58)
!15162 = !DILocation(line: 979, column: 5, scope: !15161)
!15163 = !DILocation(line: 982, column: 2, scope: !15093)
!15164 = !DILocation(line: 952, column: 28, scope: !15086)
!15165 = !DILocation(line: 952, column: 2, scope: !15086)
!15166 = distinct !{!15166, !15089, !15167}
!15167 = !DILocation(line: 982, column: 2, scope: !15083)
!15168 = !DILocation(line: 984, column: 6, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !14997, file: !3, line: 984, column: 6)
!15170 = !DILocation(line: 984, column: 6, scope: !14997)
!15171 = !DILocation(line: 985, column: 22, scope: !15169)
!15172 = !DILocation(line: 985, column: 4, scope: !15169)
!15173 = !DILocation(line: 985, column: 20, scope: !15169)
!15174 = !DILocation(line: 985, column: 3, scope: !15169)
!15175 = !DILocation(line: 986, column: 17, scope: !14997)
!15176 = !DILocation(line: 986, column: 3, scope: !14997)
!15177 = !DILocation(line: 986, column: 15, scope: !14997)
!15178 = !DILocation(line: 987, column: 13, scope: !14997)
!15179 = !DILocation(line: 987, column: 3, scope: !14997)
!15180 = !DILocation(line: 987, column: 11, scope: !14997)
!15181 = !DILocation(line: 988, column: 14, scope: !14997)
!15182 = !DILocation(line: 988, column: 3, scope: !14997)
!15183 = !DILocation(line: 988, column: 12, scope: !14997)
!15184 = !DILocation(line: 990, column: 2, scope: !14997)
!15185 = !DILabel(scope: !14997, name: "error", file: !3, line: 992)
!15186 = !DILocation(line: 992, column: 1, scope: !14997)
!15187 = !DILocation(line: 993, column: 8, scope: !14997)
!15188 = !DILocation(line: 993, column: 2, scope: !14997)
!15189 = !DILocation(line: 994, column: 9, scope: !14997)
!15190 = !DILocation(line: 994, column: 2, scope: !14997)
!15191 = !DILocation(line: 995, column: 1, scope: !14997)
!15192 = distinct !DISubprogram(name: "bus_to_hcd", scope: !183, file: !183, line: 241, type: !15193, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!15193 = !DISubroutineType(types: !15194)
!15194 = !{!4622, !273}
!15195 = !DILocalVariable(name: "bus", arg: 1, scope: !15192, file: !183, line: 241, type: !273)
!15196 = !DILocation(line: 241, column: 58, scope: !15192)
!15197 = !DILocalVariable(name: "__mptr", scope: !15198, file: !183, line: 243, type: !189)
!15198 = distinct !DILexicalBlock(scope: !15192, file: !183, line: 243, column: 9)
!15199 = !DILocation(line: 243, column: 9, scope: !15198)
!15200 = !DILocation(line: 243, column: 9, scope: !15201)
!15201 = distinct !DILexicalBlock(scope: !15198, file: !183, line: 243, column: 9)
!15202 = !DILocation(line: 243, column: 2, scope: !15192)
!15203 = distinct !DISubprogram(name: "hcd_uses_dma", scope: !183, file: !183, line: 426, type: !15204, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!15204 = !DISubroutineType(types: !15205)
!15205 = !{!534, !4622}
!15206 = !DILocalVariable(name: "hcd", arg: 1, scope: !15203, file: !183, line: 426, type: !4622)
!15207 = !DILocation(line: 426, column: 49, scope: !15203)
!15208 = !DILocation(line: 428, column: 40, scope: !15203)
!15209 = !DILocation(line: 428, column: 45, scope: !15203)
!15210 = !DILocation(line: 428, column: 53, scope: !15203)
!15211 = !DILocation(line: 428, column: 59, scope: !15203)
!15212 = !DILocation(line: 428, column: 36, scope: !15203)
!15213 = !DILocation(line: 428, column: 2, scope: !15203)
!15214 = distinct !DISubprogram(name: "virt_to_phys", scope: !15215, file: !15215, line: 129, type: !15216, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!15215 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!15216 = !DISubroutineType(types: !15217)
!15217 = !{!2318, !15218}
!15218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5968, size: 64)
!15219 = !DILocalVariable(name: "address", arg: 1, scope: !15214, file: !15215, line: 129, type: !15218)
!15220 = !DILocation(line: 129, column: 55, scope: !15214)
!15221 = !DILocation(line: 131, column: 9, scope: !15214)
!15222 = !DILocation(line: 131, column: 2, scope: !15214)
!15223 = distinct !DISubprogram(name: "usbdev_vm_open", scope: !3, file: !3, line: 194, type: !1053, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!15224 = !DILocation(line: 407, column: 64, scope: !5443, inlinedAt: !15225)
!15225 = distinct !DILocation(line: 201, column: 2, scope: !15223)
!15226 = !DILocation(line: 407, column: 84, scope: !5443, inlinedAt: !15225)
!15227 = !DILocation(line: 327, column: 67, scope: !5452, inlinedAt: !15228)
!15228 = distinct !DILocation(line: 199, column: 2, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !15230, file: !3, line: 199, column: 2)
!15230 = distinct !DILexicalBlock(scope: !15231, file: !3, line: 199, column: 2)
!15231 = distinct !DILexicalBlock(scope: !15232, file: !3, line: 199, column: 2)
!15232 = distinct !DILexicalBlock(scope: !15233, file: !3, line: 199, column: 2)
!15233 = distinct !DILexicalBlock(scope: !15223, file: !3, line: 199, column: 2)
!15234 = !DILocalVariable(name: "vma", arg: 1, scope: !15223, file: !3, line: 194, type: !1019)
!15235 = !DILocation(line: 194, column: 51, scope: !15223)
!15236 = !DILocalVariable(name: "usbm", scope: !15223, file: !3, line: 196, type: !4504)
!15237 = !DILocation(line: 196, column: 21, scope: !15223)
!15238 = !DILocation(line: 196, column: 28, scope: !15223)
!15239 = !DILocation(line: 196, column: 33, scope: !15223)
!15240 = !DILocalVariable(name: "flags", scope: !15223, file: !3, line: 197, type: !372)
!15241 = !DILocation(line: 197, column: 16, scope: !15223)
!15242 = !DILocation(line: 199, column: 2, scope: !15223)
!15243 = !DILocation(line: 199, column: 2, scope: !15233)
!15244 = !DILocalVariable(name: "__dummy", scope: !15245, file: !3, line: 199, type: !372)
!15245 = distinct !DILexicalBlock(scope: !15232, file: !3, line: 199, column: 2)
!15246 = !DILocation(line: 199, column: 2, scope: !15245)
!15247 = !DILocalVariable(name: "__dummy2", scope: !15245, file: !3, line: 199, type: !372)
!15248 = !DILocation(line: 199, column: 2, scope: !15232)
!15249 = !DILocation(line: 199, column: 2, scope: !15231)
!15250 = !DILocation(line: 199, column: 2, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15231, file: !3, line: 199, column: 2)
!15252 = !DILocalVariable(name: "__dummy", scope: !15253, file: !3, line: 199, type: !372)
!15253 = distinct !DILexicalBlock(scope: !15254, file: !3, line: 199, column: 2)
!15254 = distinct !DILexicalBlock(scope: !15251, file: !3, line: 199, column: 2)
!15255 = !DILocation(line: 199, column: 2, scope: !15253)
!15256 = !DILocalVariable(name: "__dummy2", scope: !15253, file: !3, line: 199, type: !372)
!15257 = !DILocation(line: 199, column: 2, scope: !15254)
!15258 = !DILocation(line: 199, column: 2, scope: !15230)
!15259 = !{i32 -2141012158}
!15260 = !DILocation(line: 199, column: 2, scope: !15229)
!15261 = !DILocation(line: 329, column: 10, scope: !5452, inlinedAt: !15228)
!15262 = !DILocation(line: 329, column: 16, scope: !5452, inlinedAt: !15228)
!15263 = !DILocation(line: 200, column: 4, scope: !15223)
!15264 = !DILocation(line: 200, column: 10, scope: !15223)
!15265 = !DILocation(line: 200, column: 2, scope: !15223)
!15266 = !DILocation(line: 201, column: 26, scope: !15223)
!15267 = !DILocation(line: 201, column: 32, scope: !15223)
!15268 = !DILocation(line: 201, column: 36, scope: !15223)
!15269 = !DILocation(line: 201, column: 42, scope: !15223)
!15270 = !DILocation(line: 409, column: 2, scope: !5633, inlinedAt: !15225)
!15271 = !DILocation(line: 409, column: 2, scope: !5638, inlinedAt: !15225)
!15272 = !DILocation(line: 409, column: 2, scope: !5639, inlinedAt: !15225)
!15273 = !DILocation(line: 409, column: 2, scope: !5646, inlinedAt: !15225)
!15274 = !DILocation(line: 409, column: 2, scope: !5649, inlinedAt: !15225)
!15275 = !DILocation(line: 202, column: 1, scope: !15223)
!15276 = distinct !DISubprogram(name: "usbdev_vm_close", scope: !3, file: !3, line: 204, type: !1053, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!15277 = !DILocalVariable(name: "vma", arg: 1, scope: !15276, file: !3, line: 204, type: !1019)
!15278 = !DILocation(line: 204, column: 52, scope: !15276)
!15279 = !DILocalVariable(name: "usbm", scope: !15276, file: !3, line: 206, type: !4504)
!15280 = !DILocation(line: 206, column: 21, scope: !15276)
!15281 = !DILocation(line: 206, column: 28, scope: !15276)
!15282 = !DILocation(line: 206, column: 33, scope: !15276)
!15283 = !DILocation(line: 208, column: 27, scope: !15276)
!15284 = !DILocation(line: 208, column: 34, scope: !15276)
!15285 = !DILocation(line: 208, column: 40, scope: !15276)
!15286 = !DILocation(line: 208, column: 2, scope: !15276)
!15287 = !DILocation(line: 209, column: 1, scope: !15276)
!15288 = distinct !DISubprogram(name: "imajor", scope: !65, file: !65, line: 880, type: !15289, scopeLine: 881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!15289 = !DISubroutineType(types: !15290)
!15290 = !{!7, !2963}
!15291 = !DILocalVariable(name: "inode", arg: 1, scope: !15288, file: !65, line: 880, type: !2963)
!15292 = !DILocation(line: 880, column: 51, scope: !15288)
!15293 = !DILocation(line: 882, column: 9, scope: !15288)
!15294 = !DILocation(line: 882, column: 2, scope: !15288)
!15295 = distinct !DISubprogram(name: "usbdev_lookup_by_devt", scope: !3, file: !3, line: 997, type: !15296, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!15296 = !DISubroutineType(types: !15297)
!15297 = !{!201, !557}
!15298 = !DILocalVariable(name: "devt", arg: 1, scope: !15295, file: !3, line: 997, type: !557)
!15299 = !DILocation(line: 997, column: 55, scope: !15295)
!15300 = !DILocalVariable(name: "dev", scope: !15295, file: !3, line: 999, type: !277)
!15301 = !DILocation(line: 999, column: 17, scope: !15295)
!15302 = !DILocation(line: 1001, column: 47, scope: !15295)
!15303 = !DILocation(line: 1001, column: 8, scope: !15295)
!15304 = !DILocation(line: 1001, column: 6, scope: !15295)
!15305 = !DILocation(line: 1002, column: 7, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15295, file: !3, line: 1002, column: 6)
!15307 = !DILocation(line: 1002, column: 6, scope: !15295)
!15308 = !DILocation(line: 1003, column: 3, scope: !15306)
!15309 = !DILocalVariable(name: "__mptr", scope: !15310, file: !3, line: 1004, type: !189)
!15310 = distinct !DILexicalBlock(scope: !15295, file: !3, line: 1004, column: 9)
!15311 = !DILocation(line: 1004, column: 9, scope: !15310)
!15312 = !DILocation(line: 1004, column: 9, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !15310, file: !3, line: 1004, column: 9)
!15314 = !DILocation(line: 1004, column: 2, scope: !15295)
!15315 = !DILocation(line: 1005, column: 1, scope: !15295)
!15316 = distinct !DISubprogram(name: "bus_find_device_by_devt", scope: !3638, file: !3638, line: 209, type: !15317, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!15317 = !DISubroutineType(types: !15318)
!15318 = !{!277, !3636, !557}
!15319 = !DILocalVariable(name: "bus", arg: 1, scope: !15316, file: !3638, line: 209, type: !3636)
!15320 = !DILocation(line: 209, column: 71, scope: !15316)
!15321 = !DILocalVariable(name: "devt", arg: 2, scope: !15316, file: !3638, line: 210, type: !557)
!15322 = !DILocation(line: 210, column: 18, scope: !15316)
!15323 = !DILocation(line: 212, column: 25, scope: !15316)
!15324 = !DILocation(line: 212, column: 36, scope: !15316)
!15325 = !DILocation(line: 212, column: 9, scope: !15316)
!15326 = !DILocation(line: 212, column: 2, scope: !15316)
!15327 = distinct !DISubprogram(name: "destroy_all_async", scope: !3, file: !3, line: 677, type: !15328, scopeLine: 678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!15328 = !DISubroutineType(types: !15329)
!15329 = !{null, !190}
!15330 = !DILocalVariable(name: "ps", arg: 1, scope: !15327, file: !3, line: 677, type: !190)
!15331 = !DILocation(line: 677, column: 53, scope: !15327)
!15332 = !DILocation(line: 679, column: 16, scope: !15327)
!15333 = !DILocation(line: 679, column: 21, scope: !15327)
!15334 = !DILocation(line: 679, column: 25, scope: !15327)
!15335 = !DILocation(line: 679, column: 2, scope: !15327)
!15336 = !DILocation(line: 680, column: 1, scope: !15327)
!15337 = distinct !DISubprogram(name: "usbdev_notify", scope: !3, file: !3, line: 2762, type: !4956, scopeLine: 2764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!15338 = !DILocalVariable(name: "self", arg: 1, scope: !15337, file: !3, line: 2762, type: !4958)
!15339 = !DILocation(line: 2762, column: 49, scope: !15337)
!15340 = !DILocalVariable(name: "action", arg: 2, scope: !15337, file: !3, line: 2763, type: !372)
!15341 = !DILocation(line: 2763, column: 25, scope: !15337)
!15342 = !DILocalVariable(name: "dev", arg: 3, scope: !15337, file: !3, line: 2763, type: !189)
!15343 = !DILocation(line: 2763, column: 39, scope: !15337)
!15344 = !DILocation(line: 2765, column: 10, scope: !15337)
!15345 = !DILocation(line: 2765, column: 2, scope: !15337)
!15346 = !DILocation(line: 2767, column: 3, scope: !15347)
!15347 = distinct !DILexicalBlock(scope: !15337, file: !3, line: 2765, column: 18)
!15348 = !DILocation(line: 2769, column: 17, scope: !15347)
!15349 = !DILocation(line: 2769, column: 3, scope: !15347)
!15350 = !DILocation(line: 2770, column: 3, scope: !15347)
!15351 = !DILocation(line: 2772, column: 2, scope: !15337)
!15352 = distinct !DISubprogram(name: "usbdev_remove", scope: !3, file: !3, line: 2742, type: !4969, scopeLine: 2743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !243)
!15353 = !DILocalVariable(name: "udev", arg: 1, scope: !15352, file: !3, line: 2742, type: !201)
!15354 = !DILocation(line: 2742, column: 46, scope: !15352)
!15355 = !DILocalVariable(name: "ps", scope: !15352, file: !3, line: 2744, type: !190)
!15356 = !DILocation(line: 2744, column: 24, scope: !15352)
!15357 = !DILocation(line: 2747, column: 2, scope: !15352)
!15358 = !DILocation(line: 2748, column: 2, scope: !15352)
!15359 = !DILocation(line: 2748, column: 22, scope: !15352)
!15360 = !DILocation(line: 2748, column: 28, scope: !15352)
!15361 = !DILocation(line: 2748, column: 10, scope: !15352)
!15362 = !DILocation(line: 2748, column: 9, scope: !15352)
!15363 = !DILocalVariable(name: "__mptr", scope: !15364, file: !3, line: 2749, type: !189)
!15364 = distinct !DILexicalBlock(scope: !15365, file: !3, line: 2749, column: 8)
!15365 = distinct !DILexicalBlock(scope: !15352, file: !3, line: 2748, column: 39)
!15366 = !DILocation(line: 2749, column: 8, scope: !15364)
!15367 = !DILocation(line: 2749, column: 8, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15364, file: !3, line: 2749, column: 8)
!15369 = !DILocation(line: 2749, column: 6, scope: !15365)
!15370 = !DILocation(line: 2750, column: 21, scope: !15365)
!15371 = !DILocation(line: 2750, column: 3, scope: !15365)
!15372 = !DILocation(line: 2751, column: 3, scope: !15365)
!15373 = !DILocation(line: 2752, column: 3, scope: !15365)
!15374 = !DILocation(line: 2752, column: 3, scope: !15375)
!15375 = distinct !DILexicalBlock(scope: !15365, file: !3, line: 2752, column: 3)
!15376 = !DILocation(line: 2752, column: 3, scope: !15377)
!15377 = distinct !DILexicalBlock(scope: !15375, file: !3, line: 2752, column: 3)
!15378 = !DILocation(line: 2752, column: 3, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15375, file: !3, line: 2752, column: 3)
!15380 = !DILocation(line: 2753, column: 3, scope: !15365)
!15381 = !DILocation(line: 2754, column: 18, scope: !15365)
!15382 = !DILocation(line: 2754, column: 22, scope: !15365)
!15383 = !DILocation(line: 2754, column: 3, scope: !15365)
!15384 = !DILocation(line: 2755, column: 7, scope: !15385)
!15385 = distinct !DILexicalBlock(scope: !15365, file: !3, line: 2755, column: 7)
!15386 = !DILocation(line: 2755, column: 11, scope: !15385)
!15387 = !DILocation(line: 2755, column: 7, scope: !15365)
!15388 = !DILocation(line: 2756, column: 25, scope: !15385)
!15389 = !DILocation(line: 2756, column: 29, scope: !15385)
!15390 = !DILocation(line: 2756, column: 47, scope: !15385)
!15391 = !DILocation(line: 2756, column: 51, scope: !15385)
!15392 = !DILocation(line: 2757, column: 11, scope: !15385)
!15393 = !DILocation(line: 2757, column: 15, scope: !15385)
!15394 = !DILocation(line: 2757, column: 25, scope: !15385)
!15395 = !DILocation(line: 2757, column: 29, scope: !15385)
!15396 = !DILocation(line: 2756, column: 4, scope: !15385)
!15397 = distinct !{!15397, !15358, !15398}
!15398 = !DILocation(line: 2758, column: 2, scope: !15352)
!15399 = !DILocation(line: 2759, column: 2, scope: !15352)
!15400 = !DILocation(line: 2760, column: 1, scope: !15352)
