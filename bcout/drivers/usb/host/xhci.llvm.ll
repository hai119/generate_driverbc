; ModuleID = '../bcout/drivers/usb/host/xhci.llvm.bc'
source_filename = "drivers/usb/host/xhci.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_xhci_hcd_init6:\09\09\09"
module asm ".long\09xhci_hcd_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.lock_class_key = type {}
%struct.hc_driver = type { i8*, i8*, i64, i32 (%struct.usb_hcd*)*, i32, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*, i1)*, i32 (%struct.usb_hcd*, i1)*, void (%struct.usb_hcd*)*, void (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, void (%struct.usb_hcd*, %struct.urb*)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, i8*)*, i32 (%struct.usb_hcd*, i16, i16, i16, i8*, i16)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*, i32)*, i64 (%struct.usb_hcd*)*, void (%struct.usb_hcd*, i32)*, i32 (%struct.usb_hcd*, i32)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, void (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint**, i32, i32, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint**, i32, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, void (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_tt*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, i32)*, i32 (%struct.usb_hcd*, i32, i1)* }
%struct.usb_hcd = type { %struct.usb_bus, %struct.kref, i8*, i32, [24 x i8], %struct.timer_list, %struct.urb*, %struct.work_struct, %struct.work_struct, %struct.hc_driver*, %struct.usb_phy*, %struct.usb_phy_roothub*, i64, i32, i16, i32, i8*, i64, i64, i32, %struct.giveback_urb_bh, %struct.giveback_urb_bh, %struct.mutex*, %struct.mutex*, %struct.usb_hcd*, %struct.usb_hcd*, [4 x %struct.dma_pool*], i32, %struct.gen_pool*, [0 x i64] }
%struct.usb_bus = type { %struct.device*, %struct.device*, i32, i8*, i8, i8, i8, i32, i32, %struct.mutex, %struct.usb_devmap, %struct.usb_device*, %struct.usb_bus*, i32, i32, i32, i32 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.66, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.66 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.64, %struct.list_head, %struct.list_head, %union.anon.65 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.62 }
%union.anon.62 = type { %struct.anon.63 }
%struct.anon.63 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.3, %union.anon.54, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.54 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.55, i32 }
%union.anon.55 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.47, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type { i32, %struct.kref, %struct.device*, %struct.tty_driver*, %struct.tty_operations*, i32, %struct.ld_semaphore, %struct.tty_ldisc*, %struct.mutex, %struct.mutex, %struct.mutex, %struct.rw_semaphore, %struct.mutex, %struct.spinlock, %struct.spinlock, %struct.ktermios, %struct.ktermios, %struct.termiox*, [64 x i8], %struct.pid*, %struct.pid*, i64, i32, %struct.winsize, i8, i64, i32, i16, i56, i32, i32, %struct.tty_struct*, %struct.fasync_struct*, %struct.wait_queue_head, %struct.wait_queue_head, %struct.work_struct, i8*, i8*, %struct.spinlock, %struct.list_head, i32, i8*, i32, %struct.work_struct, %struct.tty_port* }
%struct.tty_driver = type { i32, %struct.kref, %struct.cdev**, %struct.module*, i8*, i8*, i32, i32, i32, i32, i16, i16, %struct.ktermios, i64, %struct.proc_dir_entry*, %struct.tty_driver*, %struct.tty_struct**, %struct.tty_port**, %struct.ktermios**, i8*, %struct.tty_operations*, %struct.list_head }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.proc_dir_entry = type opaque
%struct.tty_operations = type { %struct.tty_struct* (%struct.tty_driver*, %struct.file*, i32)*, i32 (%struct.tty_driver*, %struct.tty_struct*)*, void (%struct.tty_driver*, %struct.tty_struct*)*, i32 (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*, %struct.file*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i8*, i32)*, i32 (%struct.tty_struct*, i8)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i64)*, i64 (%struct.tty_struct*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, void (%struct.tty_struct*, i8)*, i32 (%struct.tty_struct*)*, i32 (%struct.tty_struct*, i32, i32)*, i32 (%struct.tty_struct*, %struct.winsize*)*, i32 (%struct.tty_struct*, %struct.termiox*)*, i32 (%struct.tty_struct*, %struct.serial_icounter_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, i32 (%struct.tty_struct*, %struct.serial_struct*)*, void (%struct.tty_struct*, %struct.seq_file*)*, i32 (%struct.seq_file*, i8*)* }
%struct.serial_icounter_struct = type opaque
%struct.serial_struct = type opaque
%struct.ld_semaphore = type { %struct.atomic64_t, %struct.raw_spinlock, i32, %struct.list_head, %struct.list_head }
%struct.tty_ldisc = type { %struct.tty_ldisc_ops*, %struct.tty_struct* }
%struct.tty_ldisc_ops = type { i32, i8*, i32, i32, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i64 (%struct.tty_struct*, %struct.file*, i8*, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, i32 (%struct.tty_struct*, %struct.file*, i32, i64)*, void (%struct.tty_struct*, %struct.ktermios*)*, i32 (%struct.tty_struct*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.tty_struct*)*, void (%struct.tty_struct*, i8*, i8*, i32)*, void (%struct.tty_struct*)*, void (%struct.tty_struct*, i32)*, i32 (%struct.tty_struct*, i8*, i8*, i32)*, %struct.module*, i32 }
%struct.poll_table_struct = type opaque
%struct.ktermios = type { i32, i32, i32, i32, i8, [19 x i8], i32, i32 }
%struct.termiox = type { i16, i16, [5 x i16], i16 }
%struct.winsize = type { i16, i16, i16, i16 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.tty_port = type { %struct.tty_bufhead, %struct.tty_struct*, %struct.tty_struct*, %struct.tty_port_operations*, %struct.tty_port_client_operations*, %struct.spinlock, i32, i32, %struct.wait_queue_head, %struct.wait_queue_head, i64, i64, i8, %struct.mutex, %struct.mutex, i8*, i32, i32, i32, %struct.kref, i8* }
%struct.tty_bufhead = type { %struct.tty_buffer*, %struct.work_struct, %struct.mutex, %struct.atomic_t, %struct.tty_buffer, %struct.llist_head, %struct.atomic_t, i32, %struct.tty_buffer* }
%struct.tty_buffer = type { %union.anon.32, i32, i32, i32, i32, i32, [0 x i64] }
%union.anon.32 = type { %struct.tty_buffer* }
%struct.llist_head = type { %struct.llist_node* }
%struct.llist_node = type { %struct.llist_node* }
%struct.tty_port_operations = type { i32 (%struct.tty_port*)*, void (%struct.tty_port*, i32)*, void (%struct.tty_port*)*, i32 (%struct.tty_port*, %struct.tty_struct*)*, void (%struct.tty_port*)* }
%struct.tty_port_client_operations = type { i32 (%struct.tty_port*, i8*, i8*, i64)*, void (%struct.tty_port*)* }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.33, %union.anon.34, i32 }
%struct.request_queue = type opaque
%union.anon.33 = type { %struct.list_head }
%union.anon.34 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.35 }
%struct.anon.35 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.46, i32, [12 x i8] }
%union.anon.46 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.47 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.48, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.51 }
%union.anon.48 = type { %struct.anon.49 }
%struct.anon.49 = type { i64, i64 }
%union.anon.51 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.64 = type { %struct.list_head }
%union.anon.65 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.56, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.57, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.58, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.61, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.56 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.57 = type { %struct.callback_head }
%union.anon.58 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.61 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.59 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.59 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.31 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.31 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.spinlock = type { %union.anon.2 }
%union.anon.2 = type { %struct.raw_spinlock }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.usb_devmap = type { [2 x i64] }
%struct.usb_device = type <{ i32, [16 x i8], i32, i32, i32, i32, i32, %struct.usb_tt*, i32, [2 x i32], [4 x i8], %struct.usb_device*, %struct.usb_bus*, %struct.usb_host_endpoint, %struct.device, %struct.usb_device_descriptor, [6 x i8], %struct.usb_host_bos*, %struct.usb_host_config*, %struct.usb_host_config*, [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*], i8**, i16, i8, i8, i8, i16, i8, i32, [4 x i8], i8*, i8*, i8*, %struct.list_head, i32, i32, %struct.atomic_t, [4 x i8], i64, i64, i8, [7 x i8], %struct.wusb_dev*, i32, i32, %struct.usb2_lpm_parameters, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters, i32, i16, i8, i8 }>
%struct.usb_tt = type { %struct.usb_device*, i32, i32, i8*, %struct.spinlock, %struct.list_head, %struct.work_struct }
%struct.usb_host_endpoint = type <{ %struct.usb_endpoint_descriptor, %struct.usb_ss_ep_comp_descriptor, %struct.usb_ssp_isoc_ep_comp_descriptor, i8, %struct.list_head, i8*, %struct.ep_device*, i8*, i32, i32, i32, [4 x i8] }>
%struct.usb_endpoint_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8 }>
%struct.usb_ss_ep_comp_descriptor = type { i8, i8, i8, i8, i16 }
%struct.usb_ssp_isoc_ep_comp_descriptor = type { i8, i8, i16, i32 }
%struct.ep_device = type opaque
%struct.usb_device_descriptor = type { i8, i8, i16, i8, i8, i8, i8, i16, i16, i16, i8, i8, i8, i8 }
%struct.usb_host_bos = type { %struct.usb_bos_descriptor*, %struct.usb_ext_cap_descriptor*, %struct.usb_ss_cap_descriptor*, %struct.usb_ssp_cap_descriptor*, %struct.usb_ss_container_id_descriptor*, %struct.usb_ptm_cap_descriptor* }
%struct.usb_bos_descriptor = type <{ i8, i8, i16, i8 }>
%struct.usb_ext_cap_descriptor = type <{ i8, i8, i8, i32 }>
%struct.usb_ss_cap_descriptor = type { i8, i8, i8, i8, i16, i8, i8, i16 }
%struct.usb_ssp_cap_descriptor = type { i8, i8, i8, i8, i32, i16, i16, [1 x i32] }
%struct.usb_ss_container_id_descriptor = type { i8, i8, i8, i8, [16 x i8] }
%struct.usb_ptm_cap_descriptor = type { i8, i8, i8 }
%struct.usb_host_config = type { %struct.usb_config_descriptor, i8*, [16 x %struct.usb_interface_assoc_descriptor*], [32 x %struct.usb_interface*], [32 x %struct.usb_interface_cache*], i8*, i32 }
%struct.usb_config_descriptor = type <{ i8, i8, i16, i8, i8, i8, i8, i8 }>
%struct.usb_interface_assoc_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.usb_interface = type { %struct.usb_host_interface*, %struct.usb_host_interface*, i32, %struct.usb_interface_assoc_descriptor*, i32, i32, i8, %struct.device, %struct.device*, %struct.work_struct }
%struct.usb_host_interface = type { %struct.usb_interface_descriptor, i32, i8*, %struct.usb_host_endpoint*, i8* }
%struct.usb_interface_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.usb_interface_cache = type { i32, %struct.kref, [0 x %struct.usb_host_interface] }
%struct.wusb_dev = type opaque
%struct.usb2_lpm_parameters = type { i32, i32 }
%struct.usb3_lpm_parameters = type { i32, i32, i32, i32 }
%struct.kref = type { %struct.refcount_struct }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.urb = type { %struct.kref, i32, i8*, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.usb_anchor*, %struct.usb_device*, %struct.usb_host_endpoint*, i32, i32, i32, i32, i8*, i64, %struct.scatterlist*, i32, i32, i32, i32, i8*, i64, i32, i32, i32, i32, i8*, void (%struct.urb*)*, [0 x %struct.usb_iso_packet_descriptor] }
%struct.usb_anchor = type { %struct.list_head, %struct.wait_queue_head, %struct.spinlock, %struct.atomic_t, i8 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.usb_iso_packet_descriptor = type { i32, i32, i32, i32 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.usb_phy = type opaque
%struct.usb_phy_roothub = type opaque
%struct.giveback_urb_bh = type { i8, %struct.spinlock, %struct.list_head, %struct.tasklet_struct, %struct.usb_host_endpoint* }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.67, i64 }
%union.anon.67 = type { void (i64)* }
%struct.dma_pool = type opaque
%struct.gen_pool = type opaque
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.kmem_cache = type opaque
%struct.xhci_hcd = type { %struct.usb_hcd*, %struct.usb_hcd*, %struct.xhci_cap_regs*, %struct.xhci_op_regs*, %struct.xhci_run_regs*, %struct.xhci_doorbell_array*, %struct.xhci_intr_reg*, i32, i32, i32, i32, i32, %struct.spinlock, i8, i16, i8, i8, i8, i8, i32, i32, i32, i32, i32, %struct.clk*, %struct.clk*, %struct.reset_control*, %struct.xhci_device_context_array*, %struct.xhci_ring*, i32, %struct.list_head, i32, %struct.delayed_work, %struct.completion, %struct.xhci_command*, %struct.xhci_ring*, %struct.xhci_erst, %struct.xhci_scratchpad*, %struct.list_head, %struct.mutex, %struct.xhci_command*, [256 x %struct.xhci_virt_device*], %struct.xhci_root_port_bw_info*, %struct.dma_pool*, %struct.dma_pool*, %struct.dma_pool*, %struct.dma_pool*, i32, i32, %struct.s3_save, i64, i32, i32, %struct.xhci_port*, %struct.xhci_hub, %struct.xhci_hub, i8, i32*, i32, %struct.xhci_port_cap*, i32, %struct.timer_list, i32, i16, %struct.dentry*, %struct.dentry*, %struct.list_head, i8*, [0 x i64] }
%struct.xhci_cap_regs = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.xhci_op_regs = type { i32, i32, i32, i32, i32, i32, i64, [4 x i32], i64, i32, [241 x i32], i32, i32, i32, i32, [1016 x i32] }
%struct.xhci_run_regs = type { i32, [7 x i32], [128 x %struct.xhci_intr_reg] }
%struct.xhci_intr_reg = type { i32, i32, i32, i32, i64, i64 }
%struct.xhci_doorbell_array = type { [256 x i32] }
%struct.clk = type opaque
%struct.reset_control = type opaque
%struct.xhci_device_context_array = type { [256 x i64], i64 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.xhci_ring = type { %struct.xhci_segment*, %struct.xhci_segment*, %union.xhci_trb*, %struct.xhci_segment*, %union.xhci_trb*, %struct.xhci_segment*, %struct.list_head, i32, i32, i32, i32, i32, i32, i32, i32, i8, %struct.xarray* }
%union.xhci_trb = type { %struct.xhci_link_trb }
%struct.xhci_link_trb = type { i64, i32, i32 }
%struct.xhci_segment = type { %union.xhci_trb*, %struct.xhci_segment*, i64, i64, i8*, i32, i32 }
%struct.xhci_erst = type { %struct.xhci_erst_entry*, i32, i64, i32 }
%struct.xhci_erst_entry = type { i64, i32, i32 }
%struct.xhci_scratchpad = type { i64*, i64, i8** }
%struct.xhci_command = type { %struct.xhci_container_ctx*, i32, i32, %struct.completion*, %union.xhci_trb*, %struct.list_head }
%struct.xhci_container_ctx = type { i32, i32, i8*, i64 }
%struct.xhci_virt_device = type { %struct.usb_device*, %struct.xhci_container_ctx*, %struct.xhci_container_ctx*, [31 x %struct.xhci_virt_ep], i8, i8, %struct.xhci_interval_bw_table*, %struct.xhci_tt_bw_info*, i64, i16, i8* }
%struct.xhci_virt_ep = type { %struct.xhci_ring*, %struct.xhci_stream_info*, %struct.xhci_ring*, i32, %struct.list_head, %struct.timer_list, %struct.xhci_hcd*, %struct.xhci_segment*, %union.xhci_trb*, i8, %struct.xhci_bw_info, %struct.list_head, i32, i8 }
%struct.xhci_stream_info = type { %struct.xhci_ring**, i32, %struct.xhci_stream_ctx*, i32, i64, %struct.xarray, %struct.xhci_command* }
%struct.xhci_stream_ctx = type { i64, [2 x i32] }
%struct.xhci_bw_info = type { i32, i32, i32, i32, i32, i32 }
%struct.xhci_interval_bw_table = type { i32, [16 x %struct.xhci_interval_bw], i32, i32, i32 }
%struct.xhci_interval_bw = type { i32, %struct.list_head, [3 x i32] }
%struct.xhci_tt_bw_info = type { %struct.list_head, i32, i32, %struct.xhci_interval_bw_table, i32 }
%struct.xhci_root_port_bw_info = type { %struct.list_head, i32, %struct.xhci_interval_bw_table }
%struct.s3_save = type { i32, i32, i64, i32, i32, i32, i32, i64, i64 }
%struct.xhci_port = type { i32*, i32, i32, %struct.xhci_hub*, %struct.xhci_port_cap* }
%struct.xhci_hub = type { %struct.xhci_port**, i32, %struct.usb_hcd*, %struct.xhci_bus_state, i8, i8 }
%struct.xhci_bus_state = type { i64, i64, i32, i32, i32, [31 x i64], i64, i64, [31 x %struct.completion], [31 x %struct.completion] }
%struct.xhci_port_cap = type { i32*, i8, i8, i8, i8 }
%struct.va_format = type { i8*, [1 x %struct.__va_list_tag]* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.68, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, {}*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, {}*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, {}*, {}*, {}* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.68 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.xhci_td = type { %struct.list_head, %struct.list_head, %struct.urb*, %struct.xhci_segment*, %union.xhci_trb*, %union.xhci_trb*, %struct.xhci_segment*, i8 }
%struct.xhci_dequeue_state = type { %struct.xhci_segment*, %union.xhci_trb*, i32, i32 }
%struct.xhci_input_control_ctx = type { i32, i32, [6 x i32] }
%struct.xhci_ep_ctx = type { i32, i32, i64, i32, [3 x i32] }
%struct.xhci_slot_ctx = type { i32, i32, i32, i32, [4 x i32] }
%struct.xhci_driver_overrides = type { i64, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)* }
%struct.irq_affinity = type { i32, i32, i32, [4 x i32], void (%struct.irq_affinity*, i32)*, i8* }
%struct.urb_priv = type { i32, i32, [0 x %struct.xhci_td] }
%struct.usb_driver = type { i8*, i32 (%struct.usb_interface*, %struct.usb_device_id*)*, void (%struct.usb_interface*)*, i32 (%struct.usb_interface*, i32, i8*)*, i32 (%struct.usb_interface*, i32)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, %struct.usb_device_id*, %struct.attribute_group**, %struct.usb_dynids, %struct.usbdrv_wrap, i8 }
%struct.usb_device_id = type { i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i64 }
%struct.usb_dynids = type { %struct.spinlock, %struct.list_head }
%struct.usbdrv_wrap = type { %struct.device_driver, i32 }

@__param_str_link_quirk = internal constant [20 x i8] c"xhci_hcd.link_quirk\00", align 16, !dbg !0
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@link_quirk = internal global i32 0, align 4, !dbg !5635
@__param_link_quirk = internal constant %struct.kernel_param { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__param_str_link_quirk, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @link_quirk to i8*) } }, section "__param", align 8, !dbg !5527
@__UNIQUE_ID_link_quirktype248 = internal constant [33 x i8] c"xhci_hcd.parmtype=link_quirk:int\00", section ".modinfo", align 1, !dbg !5579
@__UNIQUE_ID_link_quirk249 = internal constant [65 x i8] c"xhci_hcd.parm=link_quirk:Don't clear the chain bit on a link TRB\00", section ".modinfo", align 1, !dbg !5584
@__param_str_quirks = internal constant [16 x i8] c"xhci_hcd.quirks\00", align 16, !dbg !5639
@param_ops_ullong = external dso_local constant %struct.kernel_param_ops, align 8
@quirks = internal global i64 0, align 8, !dbg !5637
@__param_quirks = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_quirks, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_ullong, i16 292, i8 -1, i8 0, %union.anon { i8* bitcast (i64* @quirks to i8*) } }, section "__param", align 8, !dbg !5589
@__UNIQUE_ID_quirkstype250 = internal constant [32 x i8] c"xhci_hcd.parmtype=quirks:ullong\00", section ".modinfo", align 1, !dbg !5591
@__UNIQUE_ID_quirks251 = internal constant [67 x i8] c"xhci_hcd.parm=quirks:Bit flags for quirks to be enabled as default\00", section ".modinfo", align 1, !dbg !5594
@.str = private unnamed_addr constant [15 x i8] c"// Halt the HC\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Host halt failed, %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"// Turn on HC, cmd = 0x%x.\00", align 1
@.str.3 = private unnamed_addr constant [54 x i8] c"Host took too long to start, waited %u microseconds.\0A\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"Host not accessible, reset failed.\0A\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"Host controller not halted, aborting reset.\0A\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"// Reset the HC\00", align 1
@.str.7 = private unnamed_addr constant [51 x i8] c"Wait for controller to be ready for doorbell rings\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"xhci_run\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"ERST deq = 64'h%0lx\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"// Set the interrupt modulation register\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"// Enable interrupts, cmd = 0x%x.\00", align 1
@.str.12 = private unnamed_addr constant [69 x i8] c"// Enabling event ring interrupter %p by writing 0x%x to irq_pending\00", align 1
@.str.13 = private unnamed_addr constant [35 x i8] c"Finished xhci_run for USB2 roothub\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"xhci_shutdown completed - status = %x\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"WARN: xHC CMD_RUN timeout\0A\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"WARN: xHC save state timeout\0A\00", align 1
@.str.17 = private unnamed_addr constant [43 x i8] c"%s: compliance mode recovery timer deleted\00", align 1
@__func__.xhci_suspend = private unnamed_addr constant [13 x i8] c"xhci_suspend\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.18 = private unnamed_addr constant [35 x i8] c"Controller not ready at resume %d\0A\00", align 1
@.str.19 = private unnamed_addr constant [33 x i8] c"WARN: xHC restore state timeout\0A\00", align 1
@.str.20 = private unnamed_addr constant [40 x i8] c"Compliance Mode Recovery Timer deleted!\00", align 1
@.str.21 = private unnamed_addr constant [34 x i8] c"Cleaning up stalled endpoint ring\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"Queueing new dequeue state\00", align 1
@.str.23 = private unnamed_addr constant [56 x i8] c"Setting up input context for configure endpoint command\00", align 1
@.str.24 = private unnamed_addr constant [49 x i8] c"Dropped %u ep ctxs, flags = 0x%x, %u now active.\00", align 1
@.str.25 = private unnamed_addr constant [38 x i8] c"Error while assigning device slot ID\0A\00", align 1
@.str.26 = private unnamed_addr constant [54 x i8] c"Max number of devices this xHCI host supports is %u.\0A\00", align 1
@.str.27 = private unnamed_addr constant [58 x i8] c"Not enough host resources, active endpoint contexts = %u\0A\00", align 1
@.str.28 = private unnamed_addr constant [52 x i8] c"Could not allocate xHCI USB device data structures\0A\00", align 1
@.str.29 = private unnamed_addr constant [37 x i8] c"Host supports USB 3.%x %sSuperSpeed\0A\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"Enhanced \00", align 1
@.str.31 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@xhci_gen_setup.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !5599
@.str.32 = private unnamed_addr constant [13 x i8] c"&xhci->mutex\00", align 1
@.str.33 = private unnamed_addr constant [53 x i8] c"hcc params 0x%08x hci version 0x%x quirks 0x%016llx\0A\00", align 1
@.str.34 = private unnamed_addr constant [24 x i8] c"drivers/usb/host/xhci.c\00", align 1
@xhci_hc_driver = internal constant %struct.hc_driver { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i32 0, i32 0), i64 6320, i32 (%struct.usb_hcd*)* @xhci_irq, i32 327, i32 (%struct.usb_hcd*)* null, i32 (%struct.usb_hcd*)* @xhci_run, i32 (%struct.usb_hcd*, i1)* null, i32 (%struct.usb_hcd*, i1)* null, void (%struct.usb_hcd*)* @xhci_stop, void (%struct.usb_hcd*)* @xhci_shutdown, i32 (%struct.usb_hcd*)* @xhci_get_frame, i32 (%struct.usb_hcd*, %struct.urb*, i32)* @xhci_urb_enqueue, i32 (%struct.usb_hcd*, %struct.urb*, i32)* @xhci_urb_dequeue, i32 (%struct.usb_hcd*, %struct.urb*, i32)* @xhci_map_urb_for_dma, void (%struct.usb_hcd*, %struct.urb*)* null, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)* @xhci_endpoint_disable, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)* @xhci_endpoint_reset, i32 (%struct.usb_hcd*, i8*)* @xhci_hub_status_data, i32 (%struct.usb_hcd*, i16, i16, i16, i8*, i16)* @xhci_hub_control, i32 (%struct.usb_hcd*)* @xhci_bus_suspend, i32 (%struct.usb_hcd*)* @xhci_bus_resume, i32 (%struct.usb_hcd*, i32)* null, i64 (%struct.usb_hcd*)* @xhci_get_resuming_ports, void (%struct.usb_hcd*, i32)* null, i32 (%struct.usb_hcd*, i32)* null, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)* @xhci_clear_tt_buffer_complete, i32 (%struct.usb_hcd*, %struct.usb_device*)* @xhci_alloc_dev, void (%struct.usb_hcd*, %struct.usb_device*)* @xhci_free_dev, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint**, i32, i32, i32)* @xhci_alloc_streams, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint**, i32, i32)* @xhci_free_streams, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint*)* @xhci_add_endpoint, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint*)* @xhci_drop_endpoint, i32 (%struct.usb_hcd*, %struct.usb_device*)* @xhci_check_bandwidth, void (%struct.usb_hcd*, %struct.usb_device*)* @xhci_reset_bandwidth, i32 (%struct.usb_hcd*, %struct.usb_device*)* @xhci_address_device, i32 (%struct.usb_hcd*, %struct.usb_device*)* @xhci_enable_device, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_tt*, i32)* @xhci_update_hub_device, i32 (%struct.usb_hcd*, %struct.usb_device*)* @xhci_discover_or_reset_device, i32 (%struct.usb_hcd*, %struct.usb_device*)* @xhci_update_device, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)* @xhci_set_usb2_hardware_lpm, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)* @xhci_enable_usb3_lpm_timeout, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)* @xhci_disable_usb3_lpm_timeout, i32 (%struct.usb_hcd*, i32)* @xhci_find_raw_port_number, i32 (%struct.usb_hcd*, i32, i1)* null }, align 8, !dbg !5642
@__UNIQUE_ID_description269 = internal constant [63 x i8] c"xhci_hcd.description='eXtensible' Host Controller (xHC) Driver\00", section ".modinfo", align 1, !dbg !5608
@__UNIQUE_ID_author270 = internal constant [28 x i8] c"xhci_hcd.author=Sarah Sharp\00", section ".modinfo", align 1, !dbg !5613
@__UNIQUE_ID_file271 = internal constant [40 x i8] c"xhci_hcd.file=drivers/usb/host/xhci-hcd\00", section ".modinfo", align 1, !dbg !5618
@__UNIQUE_ID_license272 = internal constant [21 x i8] c"xhci_hcd.license=GPL\00", section ".modinfo", align 1, !dbg !5623
@__UNIQUE_ID___addressable_xhci_hcd_init282 = internal global i8* bitcast (i32 ()* @xhci_hcd_init to i8*), section ".discard.addressable", align 8, !dbg !5628
@__exitcall_xhci_hcd_fini = internal global void ()* @xhci_hcd_fini, section ".exitcall.exit", align 8, !dbg !5630
@.str.35 = private unnamed_addr constant [35 x i8] c"Finished xhci_run for USB3 roothub\00", align 1
@.str.36 = private unnamed_addr constant [39 x i8] c"No msi-x/msi found and no IRQ in BIOS\0A\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"%s:usb%d\00", align 1
@.str.38 = private unnamed_addr constant [29 x i8] c"request interrupt %d failed\0A\00", align 1
@.str.39 = private unnamed_addr constant [23 x i8] c"Failed to enable MSI-X\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"xhci_hcd\00", align 1
@.str.41 = private unnamed_addr constant [24 x i8] c"disable MSI-X interrupt\00", align 1
@.str.42 = private unnamed_addr constant [29 x i8] c"failed to allocate MSI entry\00", align 1
@.str.43 = private unnamed_addr constant [22 x i8] c"disable MSI interrupt\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.44 = private unnamed_addr constant [42 x i8] c"// Setting command ring address to 0x%llx\00", align 1
@.str.45 = private unnamed_addr constant [47 x i8] c"Zeroing 64bit base registers, expecting fault\0A\00", align 1
@.str.46 = private unnamed_addr constant [16 x i8] c"Fault detected\0A\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"xhci_init\00", align 1
@.str.48 = private unnamed_addr constant [41 x i8] c"QUIRK: Not clearing Link TRB chain bits.\00", align 1
@.str.49 = private unnamed_addr constant [33 x i8] c"xHCI doesn't need link TRB QUIRK\00", align 1
@.str.50 = private unnamed_addr constant [19 x i8] c"Finished xhci_init\00", align 1
@.str.51 = private unnamed_addr constant [16 x i8] c"Hewlett-Packard\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"Z420\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"Z620\00", align 1
@.str.54 = private unnamed_addr constant [5 x i8] c"Z820\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"Z1 Workstation\00", align 1
@.str.56 = private unnamed_addr constant [43 x i8] c"Compliance mode recovery timer initialized\00", align 1
@.str.57 = private unnamed_addr constant [34 x i8] c"Compliance mode detected->port %d\00", align 1
@.str.58 = private unnamed_addr constant [36 x i8] c"Attempting compliance mode recovery\00", align 1
@.str.59 = private unnamed_addr constant [44 x i8] c"%s: Could not get input context, bad type.\0A\00", align 1
@__func__.xhci_setup_input_ctx_for_quirk = private unnamed_addr constant [31 x i8] c"xhci_setup_input_ctx_for_quirk\00", align 1
@.str.60 = private unnamed_addr constant [53 x i8] c"WARN Cannot submit config ep after reset ep command\0A\00", align 1
@.str.61 = private unnamed_addr constant [33 x i8] c"WARN deq seg = %p, deq ptr = %p\0A\00", align 1
@.str.62 = private unnamed_addr constant [59 x i8] c"Not enough ep ctxs: %u active, need to add 1, limit is %u.\00", align 1
@.str.63 = private unnamed_addr constant [32 x i8] c"Adding 1 ep ctx, %u now active.\00", align 1
@.str.64 = private unnamed_addr constant [9 x i8] c"xhci-hcd\00", align 1
@.str.65 = private unnamed_addr constant [21 x i8] c"xHCI Host Controller\00", align 1
@__func__.xhci_stop = private unnamed_addr constant [10 x i8] c"xhci_stop\00", align 1
@.str.66 = private unnamed_addr constant [35 x i8] c"// Disabling event ring interrupts\00", align 1
@.str.67 = private unnamed_addr constant [19 x i8] c"cleaning up memory\00", align 1
@.str.68 = private unnamed_addr constant [34 x i8] c"xhci_stop completed - status = %x\00", align 1
@__func__.xhci_urb_enqueue = private unnamed_addr constant [17 x i8] c"xhci_urb_enqueue\00", align 1
@.str.69 = private unnamed_addr constant [60 x i8] c"WARN: Can't enqueue URB, ep in streams transition state %x\0A\00", align 1
@.str.70 = private unnamed_addr constant [50 x i8] c"Can't enqueue URB while manually clearing toggle\0A\00", align 1
@__preempt_count = external dso_local global i32, section ".data", align 4
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.71 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.72 = private unnamed_addr constant [34 x i8] c"Max Packet Size for ep 0 changed.\00", align 1
@.str.73 = private unnamed_addr constant [35 x i8] c"Max packet size in usb_device = %d\00", align 1
@.str.74 = private unnamed_addr constant [32 x i8] c"Max packet size in xHCI HW = %d\00", align 1
@.str.75 = private unnamed_addr constant [34 x i8] c"Issuing evaluate context command.\00", align 1
@__func__.xhci_check_maxpacket = private unnamed_addr constant [21 x i8] c"xhci_check_maxpacket\00", align 1
@__func__.xhci_configure_endpoint = private unnamed_addr constant [24 x i8] c"xhci_configure_endpoint\00", align 1
@.str.76 = private unnamed_addr constant [22 x i8] c"Not enough bandwidth\0A\00", align 1
@.str.77 = private unnamed_addr constant [34 x i8] c"FIXME allocate a new ring segment\00", align 1
@.str.78 = private unnamed_addr constant [60 x i8] c"Not enough ep ctxs: %u active, need to add %u, limit is %u.\00", align 1
@.str.79 = private unnamed_addr constant [34 x i8] c"Adding %u ep ctxs, %u now active.\00", align 1
@__func__.xhci_reserve_bandwidth = private unnamed_addr constant [23 x i8] c"xhci_reserve_bandwidth\00", align 1
@.str.80 = private unnamed_addr constant [33 x i8] c"Recalculating BW for rootport %u\00", align 1
@.str.81 = private unnamed_addr constant [56 x i8] c"Not enough bandwidth on HS bus for newly activated TT.\0A\00", align 1
@.str.82 = private unnamed_addr constant [40 x i8] c"Recalculating BW for TT slot %u port %u\00", align 1
@.str.83 = private unnamed_addr constant [45 x i8] c"Not enough bandwidth. Proposed: %u, Max: %u\0A\00", align 1
@.str.84 = private unnamed_addr constant [68 x i8] c"Final bandwidth: %u, Limit: %u, Reserved: %u, Available: %u percent\00", align 1
@.str.85 = private unnamed_addr constant [43 x i8] c"Removing %u failed ep ctxs, %u now active.\00", align 1
@.str.86 = private unnamed_addr constant [54 x i8] c"Timeout while waiting for configure endpoint command\0A\00", align 1
@.str.87 = private unnamed_addr constant [60 x i8] c"Not enough host controller resources for new device state.\0A\00", align 1
@.str.88 = private unnamed_addr constant [44 x i8] c"Not enough bandwidth for new device state.\0A\00", align 1
@.str.89 = private unnamed_addr constant [76 x i8] c"ERROR: Endpoint drop flag = 0, add flag = 1, and endpoint is not disabled.\0A\00", align 1
@.str.90 = private unnamed_addr constant [60 x i8] c"ERROR: Incompatible device for endpoint configure command.\0A\00", align 1
@.str.91 = private unnamed_addr constant [38 x i8] c"Successful Endpoint Configure command\00", align 1
@.str.92 = private unnamed_addr constant [49 x i8] c"ERROR: unexpected command completion code 0x%x.\0A\00", align 1
@.str.93 = private unnamed_addr constant [52 x i8] c"Timeout while waiting for evaluate context command\0A\00", align 1
@.str.94 = private unnamed_addr constant [59 x i8] c"WARN: xHCI driver setup invalid evaluate context command.\0A\00", align 1
@.str.95 = private unnamed_addr constant [54 x i8] c"WARN: slot not enabled for evaluate context command.\0A\00", align 1
@.str.96 = private unnamed_addr constant [59 x i8] c"WARN: invalid context state for evaluate context command.\0A\00", align 1
@.str.97 = private unnamed_addr constant [58 x i8] c"ERROR: Incompatible device for evaluate context command.\0A\00", align 1
@.str.98 = private unnamed_addr constant [34 x i8] c"WARN: Max Exit Latency too large\0A\00", align 1
@.str.99 = private unnamed_addr constant [36 x i8] c"Successful evaluate context command\00", align 1
@.str.100 = private unnamed_addr constant [44 x i8] c"Removing %u dropped ep ctxs, %u now active.\00", align 1
@.str.101 = private unnamed_addr constant [43 x i8] c"Canceled URB td not found on endpoint ring\00", align 1
@.str.102 = private unnamed_addr constant [32 x i8] c"HC halted, freeing TD manually.\00", align 1
@.str.103 = private unnamed_addr constant [58 x i8] c"Cancel URB %p, dev %s, ep 0x%x, starting at offset 0x%llx\00", align 1
@.str.104 = private unnamed_addr constant [28 x i8] c"EP not empty, refuse reset\0A\00", align 1
@__func__.xhci_free_dev = private unnamed_addr constant [14 x i8] c"xhci_free_dev\00", align 1
@__func__.xhci_alloc_streams = private unnamed_addr constant [19 x i8] c"xhci_alloc_streams\00", align 1
@.str.105 = private unnamed_addr constant [52 x i8] c"WARN: endpoints can't handle more than one stream.\0A\00", align 1
@__func__.xhci_check_streams_endpoint = private unnamed_addr constant [28 x i8] c"xhci_check_streams_endpoint\00", align 1
@.str.106 = private unnamed_addr constant [85 x i8] c"WARN: SuperSpeed Endpoint Companion descriptor for ep 0x%x does not support streams\0A\00", align 1
@.str.107 = private unnamed_addr constant [65 x i8] c"WARN: SuperSpeed bulk endpoint 0x%x already has streams set up.\0A\00", align 1
@.str.108 = private unnamed_addr constant [86 x i8] c"Send email to xHCI maintainer and ask for dynamic stream context array reallocation.\0A\00", align 1
@.str.109 = private unnamed_addr constant [75 x i8] c"Cannot setup streams for SuperSpeed bulk endpoint 0x%x; URBs are pending.\0A\00", align 1
@__func__.xhci_free_streams = private unnamed_addr constant [18 x i8] c"xhci_free_streams\00", align 1
@.str.110 = private unnamed_addr constant [82 x i8] c"WARN Can't disable streams for endpoint 0x%x, streams are being disabled already\0A\00", align 1
@.str.111 = private unnamed_addr constant [77 x i8] c"WARN Can't disable streams for endpoint 0x%x, streams are already disabled!\0A\00", align 1
@.str.112 = private unnamed_addr constant [59 x i8] c"WARN xhci_free_streams() called with non-streams endpoint\0A\00", align 1
@__func__.xhci_add_endpoint = private unnamed_addr constant [18 x i8] c"xhci_add_endpoint\00", align 1
@.str.113 = private unnamed_addr constant [50 x i8] c"Trying to add endpoint 0x%x without dropping it.\0A\00", align 1
@.str.114 = private unnamed_addr constant [35 x i8] c"xHCI %s called with enabled ep %p\0A\00", align 1
@__func__.xhci_drop_endpoint = private unnamed_addr constant [19 x i8] c"xhci_drop_endpoint\00", align 1
@.str.115 = private unnamed_addr constant [36 x i8] c"xHCI %s called with disabled ep %p\0A\00", align 1
@__func__.xhci_check_bandwidth = private unnamed_addr constant [21 x i8] c"xhci_check_bandwidth\00", align 1
@.str.116 = private unnamed_addr constant [70 x i8] c"WARN: endpoint 0x%02x has streams on set_interface, freeing streams.\0A\00", align 1
@__func__.xhci_zero_in_ctx = private unnamed_addr constant [17 x i8] c"xhci_zero_in_ctx\00", align 1
@__func__.xhci_reset_bandwidth = private unnamed_addr constant [21 x i8] c"xhci_reset_bandwidth\00", align 1
@.str.117 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.118 = private unnamed_addr constant [8 x i8] c"address\00", align 1
@.str.119 = private unnamed_addr constant [15 x i8] c"Bad Slot ID %d\00", align 1
@.str.120 = private unnamed_addr constant [36 x i8] c"Virt dev invalid for slot_id 0x%x!\0A\00", align 1
@__func__.xhci_setup_device = private unnamed_addr constant [18 x i8] c"xhci_setup_device\00", align 1
@.str.121 = private unnamed_addr constant [39 x i8] c"FIXME: allocate a command ring segment\00", align 1
@.str.122 = private unnamed_addr constant [48 x i8] c"Timeout while waiting for setup device command\0A\00", align 1
@.str.123 = private unnamed_addr constant [44 x i8] c"Setup ERROR: setup %s command for slot %d.\0A\00", align 1
@.str.124 = private unnamed_addr constant [36 x i8] c"Device not responding to setup %s.\0A\00", align 1
@.str.125 = private unnamed_addr constant [49 x i8] c"ERROR: Incompatible device for setup %s command\0A\00", align 1
@.str.126 = private unnamed_addr constant [28 x i8] c"Successful setup %s command\00", align 1
@.str.127 = private unnamed_addr constant [58 x i8] c"ERROR: unexpected setup %s command completion code 0x%x.\0A\00", align 1
@.str.128 = private unnamed_addr constant [29 x i8] c"Op regs DCBAA ptr = %#016llx\00", align 1
@.str.129 = private unnamed_addr constant [38 x i8] c"Slot ID %d dcbaa entry @%p = %#016llx\00", align 1
@.str.130 = private unnamed_addr constant [37 x i8] c"Output Context DMA address = %#08llx\00", align 1
@.str.131 = private unnamed_addr constant [29 x i8] c"Internal device address = %d\00", align 1
@.str.132 = private unnamed_addr constant [44 x i8] c"Cannot update hub desc for unknown device.\0A\00", align 1
@__func__.xhci_update_hub_device = private unnamed_addr constant [23 x i8] c"xhci_update_hub_device\00", align 1
@__func__.xhci_discover_or_reset_device = private unnamed_addr constant [30 x i8] c"xhci_discover_or_reset_device\00", align 1
@.str.133 = private unnamed_addr constant [42 x i8] c"Timeout waiting for reset device command\0A\00", align 1
@.str.134 = private unnamed_addr constant [54 x i8] c"Unknown completion code %u for reset device command.\0A\00", align 1
@.str.135 = private unnamed_addr constant [69 x i8] c"WARN: endpoint 0x%02x has streams on device reset, freeing streams.\0A\00", align 1
@xhci_besl_encoding = internal global [16 x i32] [i32 125, i32 150, i32 200, i32 300, i32 400, i32 500, i32 1000, i32 2000, i32 3000, i32 4000, i32 5000, i32 6000, i32 7000, i32 8000, i32 9000, i32 10000], align 16, !dbg !5644
@__func__.xhci_change_max_exit_latency = private unnamed_addr constant [29 x i8] c"xhci_change_max_exit_latency\00", align 1
@.str.136 = private unnamed_addr constant [44 x i8] c"Set up evaluate context for LPM MEL change.\00", align 1
@.str.137 = private unnamed_addr constant [3 x i8] c"U1\00", align 1
@.str.138 = private unnamed_addr constant [3 x i8] c"U2\00", align 1
@.str.139 = private unnamed_addr constant [36 x i8] c"Can't enable unknown link state %i\0A\00", align 1
@.str.140 = private unnamed_addr constant [47 x i8] c"%s: Can't get timeout for non-U1 or U2 state.\0A\00", align 1
@__func__.xhci_get_timeout_no_hub_lpm = private unnamed_addr constant [28 x i8] c"xhci_get_timeout_no_hub_lpm\00", align 1
@.str.141 = private unnamed_addr constant [48 x i8] c"Link PM max exit latency of %lluus is too big.\0A\00", align 1
@llvm.used = appending global [14 x i8*] [i8* bitcast (void ()* @xhci_debugfs_remove_root to i8*), i8* bitcast (%struct.kernel_param* @__param_link_quirk to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_link_quirktype248, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__UNIQUE_ID_link_quirk249, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_quirks to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_quirkstype250, i32 0, i32 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__UNIQUE_ID_quirks251, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__UNIQUE_ID_description269, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_author270, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_file271, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_license272, i32 0, i32 0), i8* bitcast (void ()* @xhci_hcd_fini to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_xhci_hcd_init282 to i8*), i8* bitcast (void ()** @__exitcall_xhci_hcd_fini to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @xhci_debugfs_remove_root() #0 section ".exit.text" !dbg !5654 {
entry:
  ret void, !dbg !5656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xhci_handshake(i8* %ptr, i32 %mask, i32 %done, i32 %usec) #1 !dbg !5657 {
entry:
  %retval = alloca i32, align 4
  %ptr.addr = alloca i8*, align 8
  %mask.addr = alloca i32, align 4
  %done.addr = alloca i32, align 4
  %usec.addr = alloca i32, align 4
  %result = alloca i32, align 4
  %ret = alloca i32, align 4
  %__timeout_us = alloca i64, align 8
  %__delay_us = alloca i64, align 8
  %__timeout = alloca i64, align 8
  %tmp = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5660, metadata !DIExpression()), !dbg !5661
  store i32 %mask, i32* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask.addr, metadata !5662, metadata !DIExpression()), !dbg !5663
  store i32 %done, i32* %done.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %done.addr, metadata !5664, metadata !DIExpression()), !dbg !5665
  store i32 %usec, i32* %usec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %usec.addr, metadata !5666, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.declare(metadata i32* %result, metadata !5668, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5670, metadata !DIExpression()), !dbg !5671
  call void @llvm.dbg.declare(metadata i64* %__timeout_us, metadata !5672, metadata !DIExpression()), !dbg !5674
  %0 = load i32, i32* %usec.addr, align 4, !dbg !5674
  %conv = sext i32 %0 to i64, !dbg !5674
  store i64 %conv, i64* %__timeout_us, align 8, !dbg !5674
  call void @llvm.dbg.declare(metadata i64* %__delay_us, metadata !5675, metadata !DIExpression()), !dbg !5674
  store i64 1, i64* %__delay_us, align 8, !dbg !5674
  call void @llvm.dbg.declare(metadata i64* %__timeout, metadata !5676, metadata !DIExpression()), !dbg !5674
  %call = call i64 @ktime_get() #11, !dbg !5674
  %1 = load i64, i64* %__timeout_us, align 8, !dbg !5674
  %call1 = call i64 @ktime_add_us(i64 %call, i64 %1) #11, !dbg !5674
  store i64 %call1, i64* %__timeout, align 8, !dbg !5674
  br label %for.cond, !dbg !5674

for.cond:                                         ; preds = %if.end22, %entry
  %2 = load i8*, i8** %ptr.addr, align 8, !dbg !5677
  %call2 = call i32 @readl(i8* %2) #11, !dbg !5677
  store i32 %call2, i32* %result, align 4, !dbg !5677
  %3 = load i32, i32* %result, align 4, !dbg !5681
  %4 = load i32, i32* %mask.addr, align 4, !dbg !5681
  %and = and i32 %3, %4, !dbg !5681
  %5 = load i32, i32* %done.addr, align 4, !dbg !5681
  %cmp = icmp eq i32 %and, %5, !dbg !5681
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5681

lor.lhs.false:                                    ; preds = %for.cond
  %6 = load i32, i32* %result, align 4, !dbg !5681
  %cmp4 = icmp eq i32 %6, -1, !dbg !5681
  br i1 %cmp4, label %if.then, label %if.end, !dbg !5677

if.then:                                          ; preds = %lor.lhs.false, %for.cond
  br label %for.end, !dbg !5681

if.end:                                           ; preds = %lor.lhs.false
  %7 = load i64, i64* %__timeout_us, align 8, !dbg !5683
  %tobool = icmp ne i64 %7, 0, !dbg !5683
  br i1 %tobool, label %land.lhs.true, label %if.end12, !dbg !5683

land.lhs.true:                                    ; preds = %if.end
  %call6 = call i64 @ktime_get() #11, !dbg !5683
  %8 = load i64, i64* %__timeout, align 8, !dbg !5683
  %call7 = call i32 @ktime_compare(i64 %call6, i64 %8) #11, !dbg !5683
  %cmp8 = icmp sgt i32 %call7, 0, !dbg !5683
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !5677

if.then10:                                        ; preds = %land.lhs.true
  %9 = load i8*, i8** %ptr.addr, align 8, !dbg !5685
  %call11 = call i32 @readl(i8* %9) #11, !dbg !5685
  store i32 %call11, i32* %result, align 4, !dbg !5685
  br label %for.end, !dbg !5685

if.end12:                                         ; preds = %land.lhs.true, %if.end
  %10 = load i64, i64* %__delay_us, align 8, !dbg !5687
  %tobool13 = icmp ne i64 %10, 0, !dbg !5687
  br i1 %tobool13, label %if.then14, label %if.end22, !dbg !5677

if.then14:                                        ; preds = %if.end12
  %11 = load i64, i64* %__delay_us, align 8, !dbg !5689
  %12 = call i1 @llvm.is.constant.i64(i64 %11), !dbg !5689
  br i1 %12, label %if.then15, label %if.else20, !dbg !5692

if.then15:                                        ; preds = %if.then14
  %13 = load i64, i64* %__delay_us, align 8, !dbg !5693
  %div = udiv i64 %13, 20000, !dbg !5693
  %cmp16 = icmp uge i64 %div, 1, !dbg !5693
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !5696

if.then18:                                        ; preds = %if.then15
  call void @__bad_udelay() #11, !dbg !5693
  br label %if.end19, !dbg !5693

if.else:                                          ; preds = %if.then15
  %14 = load i64, i64* %__delay_us, align 8, !dbg !5693
  %mul = mul i64 %14, 4295, !dbg !5693
  call void @__const_udelay(i64 %mul) #11, !dbg !5693
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then18
  br label %if.end21, !dbg !5696

if.else20:                                        ; preds = %if.then14
  %15 = load i64, i64* %__delay_us, align 8, !dbg !5697
  call void @__udelay(i64 %15) #11, !dbg !5697
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.end19
  br label %if.end22, !dbg !5687

if.end22:                                         ; preds = %if.end21, %if.end12
  br label %for.cond, !dbg !5699, !llvm.loop !5700

for.end:                                          ; preds = %if.then10, %if.then
  %16 = load i32, i32* %result, align 4, !dbg !5674
  %17 = load i32, i32* %mask.addr, align 4, !dbg !5674
  %and23 = and i32 %16, %17, !dbg !5674
  %18 = load i32, i32* %done.addr, align 4, !dbg !5674
  %cmp24 = icmp eq i32 %and23, %18, !dbg !5674
  br i1 %cmp24, label %lor.end, label %lor.rhs, !dbg !5674

lor.rhs:                                          ; preds = %for.end
  %19 = load i32, i32* %result, align 4, !dbg !5674
  %cmp26 = icmp eq i32 %19, -1, !dbg !5674
  br label %lor.end, !dbg !5674

lor.end:                                          ; preds = %lor.rhs, %for.end
  %20 = phi i1 [ true, %for.end ], [ %cmp26, %lor.rhs ]
  %21 = zext i1 %20 to i64, !dbg !5674
  %cond = select i1 %20, i32 0, i32 -110, !dbg !5674
  store i32 %cond, i32* %tmp, align 4, !dbg !5701
  %22 = load i32, i32* %tmp, align 4, !dbg !5674
  store i32 %22, i32* %ret, align 4, !dbg !5702
  %23 = load i32, i32* %result, align 4, !dbg !5703
  %cmp28 = icmp eq i32 %23, -1, !dbg !5705
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !5706

if.then30:                                        ; preds = %lor.end
  store i32 -19, i32* %retval, align 4, !dbg !5707
  br label %return, !dbg !5707

if.end31:                                         ; preds = %lor.end
  %24 = load i32, i32* %ret, align 4, !dbg !5708
  store i32 %24, i32* %retval, align 4, !dbg !5709
  br label %return, !dbg !5709

return:                                           ; preds = %if.end31, %if.then30
  %25 = load i32, i32* %retval, align 4, !dbg !5710
  ret i32 %25, !dbg !5710
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_add_us(i64 %kt, i64 %usec) #1 !dbg !5711 {
entry:
  %kt.addr = alloca i64, align 8
  %usec.addr = alloca i64, align 8
  store i64 %kt, i64* %kt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %kt.addr, metadata !5716, metadata !DIExpression()), !dbg !5717
  store i64 %usec, i64* %usec.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %usec.addr, metadata !5718, metadata !DIExpression()), !dbg !5719
  %0 = load i64, i64* %kt.addr, align 8, !dbg !5720
  %1 = load i64, i64* %usec.addr, align 8, !dbg !5720
  %mul = mul i64 %1, 1000, !dbg !5720
  %add = add i64 %0, %mul, !dbg !5720
  ret i64 %add, !dbg !5721
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #1 !dbg !5722 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !5729, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5731, metadata !DIExpression()), !dbg !5730
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !5730
  %1 = bitcast i8* %0 to i32*, !dbg !5730
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #8, !dbg !5730, !srcloc !5732
  store i32 %2, i32* %ret, align 4, !dbg !5730
  %3 = load i32, i32* %ret, align 4, !dbg !5730
  ret i32 %3, !dbg !5730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ktime_compare(i64 %cmp1, i64 %cmp2) #1 !dbg !5733 {
entry:
  %retval = alloca i32, align 4
  %cmp1.addr = alloca i64, align 8
  %cmp2.addr = alloca i64, align 8
  store i64 %cmp1, i64* %cmp1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp1.addr, metadata !5736, metadata !DIExpression()), !dbg !5737
  store i64 %cmp2, i64* %cmp2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp2.addr, metadata !5738, metadata !DIExpression()), !dbg !5739
  %0 = load i64, i64* %cmp1.addr, align 8, !dbg !5740
  %1 = load i64, i64* %cmp2.addr, align 8, !dbg !5742
  %cmp = icmp slt i64 %0, %1, !dbg !5743
  br i1 %cmp, label %if.then, label %if.end, !dbg !5744

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !5745
  br label %return, !dbg !5745

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %cmp1.addr, align 8, !dbg !5746
  %3 = load i64, i64* %cmp2.addr, align 8, !dbg !5748
  %cmp3 = icmp sgt i64 %2, %3, !dbg !5749
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !5750

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !5751
  br label %return, !dbg !5751

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5752
  br label %return, !dbg !5752

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !5753
  ret i32 %4, !dbg !5753
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #4

; Function Attrs: noredzone
declare dso_local void @__bad_udelay() #3

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #3

; Function Attrs: noredzone
declare dso_local void @__udelay(i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xhci_quiesce(%struct.xhci_hcd* %xhci) #1 !dbg !5754 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %halted = alloca i32, align 4
  %cmd = alloca i32, align 4
  %mask = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !5757, metadata !DIExpression()), !dbg !5758
  call void @llvm.dbg.declare(metadata i32* %halted, metadata !5759, metadata !DIExpression()), !dbg !5760
  call void @llvm.dbg.declare(metadata i32* %cmd, metadata !5761, metadata !DIExpression()), !dbg !5762
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !5763, metadata !DIExpression()), !dbg !5764
  store i32 -1037, i32* %mask, align 4, !dbg !5765
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5766
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 3, !dbg !5767
  %1 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !5767
  %status = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %1, i32 0, i32 1, !dbg !5768
  %2 = bitcast i32* %status to i8*, !dbg !5769
  %call = call i32 @readl(i8* %2) #11, !dbg !5770
  %and = and i32 %call, 1, !dbg !5771
  store i32 %and, i32* %halted, align 4, !dbg !5772
  %3 = load i32, i32* %halted, align 4, !dbg !5773
  %tobool = icmp ne i32 %3, 0, !dbg !5773
  br i1 %tobool, label %if.end, label %if.then, !dbg !5775

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %mask, align 4, !dbg !5776
  %and1 = and i32 %4, -2, !dbg !5776
  store i32 %and1, i32* %mask, align 4, !dbg !5776
  br label %if.end, !dbg !5777

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5778
  %op_regs2 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 3, !dbg !5779
  %6 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs2, align 8, !dbg !5779
  %command = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %6, i32 0, i32 0, !dbg !5780
  %7 = bitcast i32* %command to i8*, !dbg !5781
  %call3 = call i32 @readl(i8* %7) #11, !dbg !5782
  store i32 %call3, i32* %cmd, align 4, !dbg !5783
  %8 = load i32, i32* %mask, align 4, !dbg !5784
  %9 = load i32, i32* %cmd, align 4, !dbg !5785
  %and4 = and i32 %9, %8, !dbg !5785
  store i32 %and4, i32* %cmd, align 4, !dbg !5785
  %10 = load i32, i32* %cmd, align 4, !dbg !5786
  %11 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5787
  %op_regs5 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %11, i32 0, i32 3, !dbg !5788
  %12 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs5, align 8, !dbg !5788
  %command6 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %12, i32 0, i32 0, !dbg !5789
  %13 = bitcast i32* %command6 to i8*, !dbg !5790
  call void @writel(i32 %10, i8* %13) #11, !dbg !5791
  ret void, !dbg !5792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #1 !dbg !5793 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !5797, metadata !DIExpression()), !dbg !5798
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !5799, metadata !DIExpression()), !dbg !5798
  %0 = load i32, i32* %val.addr, align 4, !dbg !5798
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !5798
  %2 = bitcast i8* %1 to i32*, !dbg !5798
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #8, !dbg !5798, !srcloc !5800
  ret void, !dbg !5798
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xhci_halt(%struct.xhci_hcd* %xhci) #1 !dbg !5801 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %ret = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !5804, metadata !DIExpression()), !dbg !5805
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5806, metadata !DIExpression()), !dbg !5807
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5808
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %0, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0)) #11, !dbg !5809
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5810
  call void @xhci_quiesce(%struct.xhci_hcd* %1) #11, !dbg !5811
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5812
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %2, i32 0, i32 3, !dbg !5813
  %3 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !5813
  %status = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %3, i32 0, i32 1, !dbg !5814
  %4 = bitcast i32* %status to i8*, !dbg !5815
  %call = call i32 @xhci_handshake(i8* %4, i32 1, i32 1, i32 16000) #11, !dbg !5816
  store i32 %call, i32* %ret, align 4, !dbg !5817
  %5 = load i32, i32* %ret, align 4, !dbg !5818
  %tobool = icmp ne i32 %5, 0, !dbg !5818
  br i1 %tobool, label %if.then, label %if.end, !dbg !5820

if.then:                                          ; preds = %entry
  %6 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5821
  %call1 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %6) #11, !dbg !5821
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call1, i32 0, i32 0, !dbg !5821
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !5821
  %7 = load %struct.device*, %struct.device** %controller, align 8, !dbg !5821
  %8 = load i32, i32* %ret, align 4, !dbg !5821
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i32 %8) #12, !dbg !5821
  %9 = load i32, i32* %ret, align 4, !dbg !5823
  store i32 %9, i32* %retval, align 4, !dbg !5824
  br label %return, !dbg !5824

if.end:                                           ; preds = %entry
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5825
  %xhc_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %10, i32 0, i32 47, !dbg !5826
  %11 = load i32, i32* %xhc_state, align 8, !dbg !5827
  %or = or i32 %11, 2, !dbg !5827
  store i32 %or, i32* %xhc_state, align 8, !dbg !5827
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5828
  %cmd_ring_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %12, i32 0, i32 29, !dbg !5829
  store i32 4, i32* %cmd_ring_state, align 8, !dbg !5830
  %13 = load i32, i32* %ret, align 4, !dbg !5831
  store i32 %13, i32* %retval, align 4, !dbg !5832
  br label %return, !dbg !5832

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !5833
  ret i32 %14, !dbg !5833
}

; Function Attrs: noredzone
declare dso_local void @xhci_dbg_trace(%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_dbg_init(%struct.va_format* %vaf) #1 !dbg !5834 {
entry:
  %vaf.addr = alloca %struct.va_format*, align 8
  store %struct.va_format* %vaf, %struct.va_format** %vaf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.va_format** %vaf.addr, metadata !5856, metadata !DIExpression()), !dbg !5857
  ret void, !dbg !5857
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %xhci) #1 !dbg !5858 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !5861, metadata !DIExpression()), !dbg !5862
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5863
  %main_hcd = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 0, !dbg !5864
  %1 = load %struct.usb_hcd*, %struct.usb_hcd** %main_hcd, align 8, !dbg !5864
  ret %struct.usb_hcd* %1, !dbg !5865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xhci_start(%struct.xhci_hcd* %xhci) #1 !dbg !5866 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %temp = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !5867, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !5869, metadata !DIExpression()), !dbg !5870
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5871, metadata !DIExpression()), !dbg !5872
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5873
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 3, !dbg !5874
  %1 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !5874
  %command = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %1, i32 0, i32 0, !dbg !5875
  %2 = bitcast i32* %command to i8*, !dbg !5876
  %call = call i32 @readl(i8* %2) #11, !dbg !5877
  store i32 %call, i32* %temp, align 4, !dbg !5878
  %3 = load i32, i32* %temp, align 4, !dbg !5879
  %or = or i32 %3, 1, !dbg !5879
  store i32 %or, i32* %temp, align 4, !dbg !5879
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5880
  %5 = load i32, i32* %temp, align 4, !dbg !5881
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %4, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i32 %5) #11, !dbg !5882
  %6 = load i32, i32* %temp, align 4, !dbg !5883
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5884
  %op_regs1 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 3, !dbg !5885
  %8 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs1, align 8, !dbg !5885
  %command2 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %8, i32 0, i32 0, !dbg !5886
  %9 = bitcast i32* %command2 to i8*, !dbg !5887
  call void @writel(i32 %6, i8* %9) #11, !dbg !5888
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5889
  %op_regs3 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %10, i32 0, i32 3, !dbg !5890
  %11 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs3, align 8, !dbg !5890
  %status = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %11, i32 0, i32 1, !dbg !5891
  %12 = bitcast i32* %status to i8*, !dbg !5892
  %call4 = call i32 @xhci_handshake(i8* %12, i32 1, i32 0, i32 16000) #11, !dbg !5893
  store i32 %call4, i32* %ret, align 4, !dbg !5894
  %13 = load i32, i32* %ret, align 4, !dbg !5895
  %cmp = icmp eq i32 %13, -110, !dbg !5897
  br i1 %cmp, label %if.then, label %if.end, !dbg !5898

if.then:                                          ; preds = %entry
  %14 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5899
  %call5 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %14) #11, !dbg !5899
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call5, i32 0, i32 0, !dbg !5899
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !5899
  %15 = load %struct.device*, %struct.device** %controller, align 8, !dbg !5899
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %15, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i64 0, i64 0), i32 16000) #12, !dbg !5899
  br label %if.end, !dbg !5899

if.end:                                           ; preds = %if.then, %entry
  %16 = load i32, i32* %ret, align 4, !dbg !5900
  %tobool = icmp ne i32 %16, 0, !dbg !5900
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !5902

if.then6:                                         ; preds = %if.end
  %17 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5903
  %xhc_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %17, i32 0, i32 47, !dbg !5904
  store i32 0, i32* %xhc_state, align 8, !dbg !5905
  br label %if.end7, !dbg !5903

if.end7:                                          ; preds = %if.then6, %if.end
  %18 = load i32, i32* %ret, align 4, !dbg !5906
  ret i32 %18, !dbg !5907
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xhci_reset(%struct.xhci_hcd* %xhci) #1 !dbg !5908 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %command = alloca i32, align 4
  %state = alloca i32, align 4
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !5909, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.declare(metadata i32* %command, metadata !5911, metadata !DIExpression()), !dbg !5912
  call void @llvm.dbg.declare(metadata i32* %state, metadata !5913, metadata !DIExpression()), !dbg !5914
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5915, metadata !DIExpression()), !dbg !5916
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5917
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 3, !dbg !5918
  %1 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !5918
  %status = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %1, i32 0, i32 1, !dbg !5919
  %2 = bitcast i32* %status to i8*, !dbg !5920
  %call = call i32 @readl(i8* %2) #11, !dbg !5921
  store i32 %call, i32* %state, align 4, !dbg !5922
  %3 = load i32, i32* %state, align 4, !dbg !5923
  %cmp = icmp eq i32 %3, -1, !dbg !5925
  br i1 %cmp, label %if.then, label %if.end, !dbg !5926

if.then:                                          ; preds = %entry
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5927
  %call1 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %4) #11, !dbg !5927
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call1, i32 0, i32 0, !dbg !5927
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !5927
  %5 = load %struct.device*, %struct.device** %controller, align 8, !dbg !5927
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %5, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !5927
  store i32 -19, i32* %retval, align 4, !dbg !5929
  br label %return, !dbg !5929

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %state, align 4, !dbg !5930
  %and = and i32 %6, 1, !dbg !5932
  %cmp2 = icmp eq i32 %and, 0, !dbg !5933
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !5934

if.then3:                                         ; preds = %if.end
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5935
  %call4 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %7) #11, !dbg !5935
  %self5 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call4, i32 0, i32 0, !dbg !5935
  %controller6 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self5, i32 0, i32 0, !dbg !5935
  %8 = load %struct.device*, %struct.device** %controller6, align 8, !dbg !5935
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %8, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0)) #12, !dbg !5935
  store i32 0, i32* %retval, align 4, !dbg !5937
  br label %return, !dbg !5937

if.end7:                                          ; preds = %if.end
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5938
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %9, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)) #11, !dbg !5939
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5940
  %op_regs8 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %10, i32 0, i32 3, !dbg !5941
  %11 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs8, align 8, !dbg !5941
  %command9 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %11, i32 0, i32 0, !dbg !5942
  %12 = bitcast i32* %command9 to i8*, !dbg !5943
  %call10 = call i32 @readl(i8* %12) #11, !dbg !5944
  store i32 %call10, i32* %command, align 4, !dbg !5945
  %13 = load i32, i32* %command, align 4, !dbg !5946
  %or = or i32 %13, 2, !dbg !5946
  store i32 %or, i32* %command, align 4, !dbg !5946
  %14 = load i32, i32* %command, align 4, !dbg !5947
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5948
  %op_regs11 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %15, i32 0, i32 3, !dbg !5949
  %16 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs11, align 8, !dbg !5949
  %command12 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %16, i32 0, i32 0, !dbg !5950
  %17 = bitcast i32* %command12 to i8*, !dbg !5951
  call void @writel(i32 %14, i8* %17) #11, !dbg !5952
  %18 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5953
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %18, i32 0, i32 50, !dbg !5955
  %19 = load i64, i64* %quirks, align 8, !dbg !5955
  %and13 = and i64 %19, 4096, !dbg !5956
  %tobool = icmp ne i64 %and13, 0, !dbg !5956
  br i1 %tobool, label %if.then14, label %if.end15, !dbg !5957

if.then14:                                        ; preds = %if.end7
  call void @__const_udelay(i64 4295000) #11, !dbg !5958
  br label %if.end15, !dbg !5963

if.end15:                                         ; preds = %if.then14, %if.end7
  %20 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5964
  %op_regs16 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %20, i32 0, i32 3, !dbg !5965
  %21 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs16, align 8, !dbg !5965
  %command17 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %21, i32 0, i32 0, !dbg !5966
  %22 = bitcast i32* %command17 to i8*, !dbg !5967
  %call18 = call i32 @xhci_handshake(i8* %22, i32 2, i32 0, i32 10000000) #11, !dbg !5968
  store i32 %call18, i32* %ret, align 4, !dbg !5969
  %23 = load i32, i32* %ret, align 4, !dbg !5970
  %tobool19 = icmp ne i32 %23, 0, !dbg !5970
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !5972

if.then20:                                        ; preds = %if.end15
  %24 = load i32, i32* %ret, align 4, !dbg !5973
  store i32 %24, i32* %retval, align 4, !dbg !5974
  br label %return, !dbg !5974

if.end21:                                         ; preds = %if.end15
  %25 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5975
  %quirks22 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %25, i32 0, i32 50, !dbg !5977
  %26 = load i64, i64* %quirks22, align 8, !dbg !5977
  %and23 = and i64 %26, 268435456, !dbg !5978
  %tobool24 = icmp ne i64 %and23, 0, !dbg !5978
  br i1 %tobool24, label %if.then25, label %if.end29, !dbg !5979

if.then25:                                        ; preds = %if.end21
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5980, metadata !DIExpression()), !dbg !5982
  %27 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5982
  %call26 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %27) #11, !dbg !5982
  %self27 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call26, i32 0, i32 0, !dbg !5982
  %controller28 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self27, i32 0, i32 0, !dbg !5982
  %28 = load %struct.device*, %struct.device** %controller28, align 8, !dbg !5982
  %29 = bitcast %struct.device* %28 to i8*, !dbg !5982
  store i8* %29, i8** %__mptr, align 8, !dbg !5982
  br label %do.body, !dbg !5982

do.body:                                          ; preds = %if.then25
  br label %do.end, !dbg !5983

do.end:                                           ; preds = %do.body
  %30 = load i8*, i8** %__mptr, align 8, !dbg !5982
  %add.ptr = getelementptr i8, i8* %30, i64 -176, !dbg !5982
  %31 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !5982
  store %struct.pci_dev* %31, %struct.pci_dev** %tmp, align 8, !dbg !5983
  %32 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !5982
  call void @usb_asmedia_modifyflowcontrol(%struct.pci_dev* %32) #11, !dbg !5985
  br label %if.end29, !dbg !5985

if.end29:                                         ; preds = %do.end, %if.end21
  %33 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5986
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %33, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7, i64 0, i64 0)) #11, !dbg !5987
  %34 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5988
  %op_regs30 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %34, i32 0, i32 3, !dbg !5989
  %35 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs30, align 8, !dbg !5989
  %status31 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %35, i32 0, i32 1, !dbg !5990
  %36 = bitcast i32* %status31 to i8*, !dbg !5991
  %call32 = call i32 @xhci_handshake(i8* %36, i32 2048, i32 0, i32 10000000) #11, !dbg !5992
  store i32 %call32, i32* %ret, align 4, !dbg !5993
  %37 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5994
  %usb2_rhub = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %37, i32 0, i32 54, !dbg !5995
  %bus_state = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb2_rhub, i32 0, i32 3, !dbg !5996
  %port_c_suspend = getelementptr inbounds %struct.xhci_bus_state, %struct.xhci_bus_state* %bus_state, i32 0, i32 2, !dbg !5997
  store i32 0, i32* %port_c_suspend, align 8, !dbg !5998
  %38 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !5999
  %usb2_rhub33 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %38, i32 0, i32 54, !dbg !6000
  %bus_state34 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb2_rhub33, i32 0, i32 3, !dbg !6001
  %suspended_ports = getelementptr inbounds %struct.xhci_bus_state, %struct.xhci_bus_state* %bus_state34, i32 0, i32 3, !dbg !6002
  store i32 0, i32* %suspended_ports, align 4, !dbg !6003
  %39 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6004
  %usb2_rhub35 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %39, i32 0, i32 54, !dbg !6005
  %bus_state36 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb2_rhub35, i32 0, i32 3, !dbg !6006
  %resuming_ports = getelementptr inbounds %struct.xhci_bus_state, %struct.xhci_bus_state* %bus_state36, i32 0, i32 6, !dbg !6007
  store i64 0, i64* %resuming_ports, align 8, !dbg !6008
  %40 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6009
  %usb3_rhub = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %40, i32 0, i32 55, !dbg !6010
  %bus_state37 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb3_rhub, i32 0, i32 3, !dbg !6011
  %port_c_suspend38 = getelementptr inbounds %struct.xhci_bus_state, %struct.xhci_bus_state* %bus_state37, i32 0, i32 2, !dbg !6012
  store i32 0, i32* %port_c_suspend38, align 8, !dbg !6013
  %41 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6014
  %usb3_rhub39 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %41, i32 0, i32 55, !dbg !6015
  %bus_state40 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb3_rhub39, i32 0, i32 3, !dbg !6016
  %suspended_ports41 = getelementptr inbounds %struct.xhci_bus_state, %struct.xhci_bus_state* %bus_state40, i32 0, i32 3, !dbg !6017
  store i32 0, i32* %suspended_ports41, align 4, !dbg !6018
  %42 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6019
  %usb3_rhub42 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %42, i32 0, i32 55, !dbg !6020
  %bus_state43 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb3_rhub42, i32 0, i32 3, !dbg !6021
  %resuming_ports44 = getelementptr inbounds %struct.xhci_bus_state, %struct.xhci_bus_state* %bus_state43, i32 0, i32 6, !dbg !6022
  store i64 0, i64* %resuming_ports44, align 8, !dbg !6023
  %43 = load i32, i32* %ret, align 4, !dbg !6024
  store i32 %43, i32* %retval, align 4, !dbg !6025
  br label %return, !dbg !6025

return:                                           ; preds = %if.end29, %if.then20, %if.then3, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !6026
  ret i32 %44, !dbg !6026
}

; Function Attrs: noredzone
declare dso_local void @usb_asmedia_modifyflowcontrol(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xhci_run(%struct.usb_hcd* %hcd) #1 !dbg !6027 {
entry:
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %temp = alloca i32, align 4
  %temp_64 = alloca i64, align 8
  %ret = alloca i32, align 4
  %xhci = alloca %struct.xhci_hcd*, align 8
  %command30 = alloca %struct.xhci_command*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !6028, metadata !DIExpression()), !dbg !6029
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !6030, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.declare(metadata i64* %temp_64, metadata !6032, metadata !DIExpression()), !dbg !6033
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6034, metadata !DIExpression()), !dbg !6035
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !6036, metadata !DIExpression()), !dbg !6037
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6038
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !6039
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !6037
  %1 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6040
  %uses_new_polling = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %1, i32 0, i32 14, !dbg !6041
  %bf.load = load i16, i16* %uses_new_polling, align 4, !dbg !6042
  %bf.clear = and i16 %bf.load, -33, !dbg !6042
  %bf.set = or i16 %bf.clear, 32, !dbg !6042
  store i16 %bf.set, i16* %uses_new_polling, align 4, !dbg !6042
  %2 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6043
  %call1 = call i32 @usb_hcd_is_primary_hcd(%struct.usb_hcd* %2) #11, !dbg !6045
  %tobool = icmp ne i32 %call1, 0, !dbg !6045
  br i1 %tobool, label %if.end, label %if.then, !dbg !6046

if.then:                                          ; preds = %entry
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6047
  %call2 = call i32 @xhci_run_finished(%struct.xhci_hcd* %3) #11, !dbg !6048
  store i32 %call2, i32* %retval, align 4, !dbg !6049
  br label %return, !dbg !6049

if.end:                                           ; preds = %entry
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6050
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %4, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #11, !dbg !6051
  %5 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6052
  %call3 = call i32 @xhci_try_enable_msi(%struct.usb_hcd* %5) #11, !dbg !6053
  store i32 %call3, i32* %ret, align 4, !dbg !6054
  %6 = load i32, i32* %ret, align 4, !dbg !6055
  %tobool4 = icmp ne i32 %6, 0, !dbg !6055
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !6057

if.then5:                                         ; preds = %if.end
  %7 = load i32, i32* %ret, align 4, !dbg !6058
  store i32 %7, i32* %retval, align 4, !dbg !6059
  br label %return, !dbg !6059

if.end6:                                          ; preds = %if.end
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6060
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6061
  %ir_set = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %9, i32 0, i32 6, !dbg !6062
  %10 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set, align 8, !dbg !6062
  %erst_dequeue = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %10, i32 0, i32 5, !dbg !6063
  %call7 = call i64 @xhci_read_64(%struct.xhci_hcd* %8, i64* %erst_dequeue) #11, !dbg !6064
  store i64 %call7, i64* %temp_64, align 8, !dbg !6065
  %11 = load i64, i64* %temp_64, align 8, !dbg !6066
  %and = and i64 %11, -16, !dbg !6066
  store i64 %and, i64* %temp_64, align 8, !dbg !6066
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6067
  %13 = load i64, i64* %temp_64, align 8, !dbg !6068
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %12, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i64 %13) #11, !dbg !6069
  %14 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6070
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %14, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0)) #11, !dbg !6071
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6072
  %ir_set8 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %15, i32 0, i32 6, !dbg !6073
  %16 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set8, align 8, !dbg !6073
  %irq_control = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %16, i32 0, i32 1, !dbg !6074
  %17 = bitcast i32* %irq_control to i8*, !dbg !6075
  %call9 = call i32 @readl(i8* %17) #11, !dbg !6076
  store i32 %call9, i32* %temp, align 4, !dbg !6077
  %18 = load i32, i32* %temp, align 4, !dbg !6078
  %and10 = and i32 %18, -65536, !dbg !6078
  store i32 %and10, i32* %temp, align 4, !dbg !6078
  %19 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6079
  %imod_interval = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %19, i32 0, i32 19, !dbg !6080
  %20 = load i32, i32* %imod_interval, align 4, !dbg !6080
  %div = udiv i32 %20, 250, !dbg !6081
  %and11 = and i32 %div, 65535, !dbg !6082
  %21 = load i32, i32* %temp, align 4, !dbg !6083
  %or = or i32 %21, %and11, !dbg !6083
  store i32 %or, i32* %temp, align 4, !dbg !6083
  %22 = load i32, i32* %temp, align 4, !dbg !6084
  %23 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6085
  %ir_set12 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %23, i32 0, i32 6, !dbg !6086
  %24 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set12, align 8, !dbg !6086
  %irq_control13 = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %24, i32 0, i32 1, !dbg !6087
  %25 = bitcast i32* %irq_control13 to i8*, !dbg !6088
  call void @writel(i32 %22, i8* %25) #11, !dbg !6089
  %26 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6090
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %26, i32 0, i32 3, !dbg !6091
  %27 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !6091
  %command = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %27, i32 0, i32 0, !dbg !6092
  %28 = bitcast i32* %command to i8*, !dbg !6093
  %call14 = call i32 @readl(i8* %28) #11, !dbg !6094
  store i32 %call14, i32* %temp, align 4, !dbg !6095
  %29 = load i32, i32* %temp, align 4, !dbg !6096
  %or15 = or i32 %29, 4, !dbg !6096
  store i32 %or15, i32* %temp, align 4, !dbg !6096
  %30 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6097
  %31 = load i32, i32* %temp, align 4, !dbg !6098
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %30, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 %31) #11, !dbg !6099
  %32 = load i32, i32* %temp, align 4, !dbg !6100
  %33 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6101
  %op_regs16 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %33, i32 0, i32 3, !dbg !6102
  %34 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs16, align 8, !dbg !6102
  %command17 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %34, i32 0, i32 0, !dbg !6103
  %35 = bitcast i32* %command17 to i8*, !dbg !6104
  call void @writel(i32 %32, i8* %35) #11, !dbg !6105
  %36 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6106
  %ir_set18 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %36, i32 0, i32 6, !dbg !6107
  %37 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set18, align 8, !dbg !6107
  %irq_pending = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %37, i32 0, i32 0, !dbg !6108
  %38 = bitcast i32* %irq_pending to i8*, !dbg !6109
  %call19 = call i32 @readl(i8* %38) #11, !dbg !6110
  store i32 %call19, i32* %temp, align 4, !dbg !6111
  %39 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6112
  %40 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6113
  %ir_set20 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %40, i32 0, i32 6, !dbg !6114
  %41 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set20, align 8, !dbg !6114
  %42 = load i32, i32* %temp, align 4, !dbg !6115
  %and21 = and i32 %42, -2, !dbg !6115
  %or22 = or i32 %and21, 2, !dbg !6115
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %39, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.12, i64 0, i64 0), %struct.xhci_intr_reg* %41, i32 %or22) #11, !dbg !6116
  %43 = load i32, i32* %temp, align 4, !dbg !6117
  %and23 = and i32 %43, -2, !dbg !6117
  %or24 = or i32 %and23, 2, !dbg !6117
  %44 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6118
  %ir_set25 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %44, i32 0, i32 6, !dbg !6119
  %45 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set25, align 8, !dbg !6119
  %irq_pending26 = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %45, i32 0, i32 0, !dbg !6120
  %46 = bitcast i32* %irq_pending26 to i8*, !dbg !6121
  call void @writel(i32 %or24, i8* %46) #11, !dbg !6122
  %47 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6123
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %47, i32 0, i32 50, !dbg !6125
  %48 = load i64, i64* %quirks, align 8, !dbg !6125
  %and27 = and i64 %48, 4, !dbg !6126
  %tobool28 = icmp ne i64 %and27, 0, !dbg !6126
  br i1 %tobool28, label %if.then29, label %if.end39, !dbg !6127

if.then29:                                        ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %command30, metadata !6128, metadata !DIExpression()), !dbg !6130
  %49 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6131
  %call31 = call %struct.xhci_command* @xhci_alloc_command(%struct.xhci_hcd* %49, i1 zeroext false, i32 3264) #11, !dbg !6132
  store %struct.xhci_command* %call31, %struct.xhci_command** %command30, align 8, !dbg !6133
  %50 = load %struct.xhci_command*, %struct.xhci_command** %command30, align 8, !dbg !6134
  %tobool32 = icmp ne %struct.xhci_command* %50, null, !dbg !6134
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !6136

if.then33:                                        ; preds = %if.then29
  store i32 -12, i32* %retval, align 4, !dbg !6137
  br label %return, !dbg !6137

if.end34:                                         ; preds = %if.then29
  %51 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6138
  %52 = load %struct.xhci_command*, %struct.xhci_command** %command30, align 8, !dbg !6139
  %call35 = call i32 @xhci_queue_vendor_command(%struct.xhci_hcd* %51, %struct.xhci_command* %52, i32 0, i32 0, i32 0, i32 50176) #11, !dbg !6140
  store i32 %call35, i32* %ret, align 4, !dbg !6141
  %53 = load i32, i32* %ret, align 4, !dbg !6142
  %tobool36 = icmp ne i32 %53, 0, !dbg !6142
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !6144

if.then37:                                        ; preds = %if.end34
  %54 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6145
  %55 = load %struct.xhci_command*, %struct.xhci_command** %command30, align 8, !dbg !6146
  call void @xhci_free_command(%struct.xhci_hcd* %54, %struct.xhci_command* %55) #11, !dbg !6147
  br label %if.end38, !dbg !6147

if.end38:                                         ; preds = %if.then37, %if.end34
  br label %if.end39, !dbg !6148

if.end39:                                         ; preds = %if.end38, %if.end6
  %56 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6149
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %56, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i64 0, i64 0)) #11, !dbg !6150
  %57 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6151
  %call40 = call i32 @xhci_dbc_init(%struct.xhci_hcd* %57) #11, !dbg !6152
  %58 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6153
  call void @xhci_debugfs_init(%struct.xhci_hcd* %58) #11, !dbg !6154
  store i32 0, i32* %retval, align 4, !dbg !6155
  br label %return, !dbg !6155

return:                                           ; preds = %if.end39, %if.then33, %if.then5, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !6156
  ret i32 %59, !dbg !6156
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %hcd) #1 !dbg !6157 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %primary_hcd = alloca %struct.usb_hcd*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !6160, metadata !DIExpression()), !dbg !6161
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %primary_hcd, metadata !6162, metadata !DIExpression()), !dbg !6163
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6164
  %call = call i32 @usb_hcd_is_primary_hcd(%struct.usb_hcd* %0) #11, !dbg !6166
  %tobool = icmp ne i32 %call, 0, !dbg !6166
  br i1 %tobool, label %if.then, label %if.else, !dbg !6167

if.then:                                          ; preds = %entry
  %1 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6168
  store %struct.usb_hcd* %1, %struct.usb_hcd** %primary_hcd, align 8, !dbg !6169
  br label %if.end, !dbg !6170

if.else:                                          ; preds = %entry
  %2 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6171
  %primary_hcd1 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %2, i32 0, i32 25, !dbg !6172
  %3 = load %struct.usb_hcd*, %struct.usb_hcd** %primary_hcd1, align 8, !dbg !6172
  store %struct.usb_hcd* %3, %struct.usb_hcd** %primary_hcd, align 8, !dbg !6173
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.usb_hcd*, %struct.usb_hcd** %primary_hcd, align 8, !dbg !6174
  %hcd_priv = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %4, i32 0, i32 29, !dbg !6175
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hcd_priv, i64 0, i64 0, !dbg !6176
  %5 = bitcast i64* %arraydecay to %struct.xhci_hcd*, !dbg !6177
  ret %struct.xhci_hcd* %5, !dbg !6178
}

; Function Attrs: noredzone
declare dso_local i32 @usb_hcd_is_primary_hcd(%struct.usb_hcd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_run_finished(%struct.xhci_hcd* %xhci) #1 !dbg !6179 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !6180, metadata !DIExpression()), !dbg !6181
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6182
  %call = call i32 @xhci_start(%struct.xhci_hcd* %0) #11, !dbg !6184
  %tobool = icmp ne i32 %call, 0, !dbg !6184
  br i1 %tobool, label %if.then, label %if.end, !dbg !6185

if.then:                                          ; preds = %entry
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6186
  %call1 = call i32 @xhci_halt(%struct.xhci_hcd* %1) #11, !dbg !6188
  store i32 -19, i32* %retval, align 4, !dbg !6189
  br label %return, !dbg !6189

if.end:                                           ; preds = %entry
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6190
  %shared_hcd = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %2, i32 0, i32 1, !dbg !6191
  %3 = load %struct.usb_hcd*, %struct.usb_hcd** %shared_hcd, align 8, !dbg !6191
  %state = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %3, i32 0, i32 27, !dbg !6192
  store i32 1, i32* %state, align 8, !dbg !6193
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6194
  %cmd_ring_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %4, i32 0, i32 29, !dbg !6195
  store i32 1, i32* %cmd_ring_state, align 8, !dbg !6196
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6197
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 50, !dbg !6199
  %6 = load i64, i64* %quirks, align 8, !dbg !6199
  %and = and i64 %6, 4, !dbg !6200
  %tobool2 = icmp ne i64 %and, 0, !dbg !6200
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6201

if.then3:                                         ; preds = %if.end
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6202
  call void @xhci_ring_cmd_db(%struct.xhci_hcd* %7) #11, !dbg !6203
  br label %if.end4, !dbg !6203

if.end4:                                          ; preds = %if.then3, %if.end
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6204
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %8, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.35, i64 0, i64 0)) #11, !dbg !6205
  store i32 0, i32* %retval, align 4, !dbg !6206
  br label %return, !dbg !6206

return:                                           ; preds = %if.end4, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !6207
  ret i32 %9, !dbg !6207
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_try_enable_msi(%struct.usb_hcd* %hcd) #1 !dbg !6208 {
entry:
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !6209, metadata !DIExpression()), !dbg !6210
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !6211, metadata !DIExpression()), !dbg !6212
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6213
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !6214
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !6212
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !6215, metadata !DIExpression()), !dbg !6216
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6217, metadata !DIExpression()), !dbg !6218
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6219
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %1, i32 0, i32 50, !dbg !6221
  %2 = load i64, i64* %quirks, align 8, !dbg !6221
  %and = and i64 %2, 65536, !dbg !6222
  %tobool = icmp ne i64 %and, 0, !dbg !6222
  br i1 %tobool, label %if.then, label %if.end, !dbg !6223

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6224
  br label %return, !dbg !6224

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6225, metadata !DIExpression()), !dbg !6227
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6227
  %call1 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %3) #11, !dbg !6227
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call1, i32 0, i32 0, !dbg !6227
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !6227
  %4 = load %struct.device*, %struct.device** %controller, align 8, !dbg !6227
  %5 = bitcast %struct.device* %4 to i8*, !dbg !6227
  store i8* %5, i8** %__mptr, align 8, !dbg !6227
  br label %do.body, !dbg !6227

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !6228

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !6227
  %add.ptr = getelementptr i8, i8* %6, i64 -176, !dbg !6227
  %7 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !6227
  store %struct.pci_dev* %7, %struct.pci_dev** %tmp, align 8, !dbg !6228
  %8 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6227
  store %struct.pci_dev* %8, %struct.pci_dev** %pdev, align 8, !dbg !6230
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6231
  %quirks2 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %9, i32 0, i32 50, !dbg !6233
  %10 = load i64, i64* %quirks2, align 8, !dbg !6233
  %and3 = and i64 %10, 64, !dbg !6234
  %tobool4 = icmp ne i64 %and3, 0, !dbg !6234
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !6235

if.then5:                                         ; preds = %do.end
  br label %legacy_irq, !dbg !6236

if.end6:                                          ; preds = %do.end
  %11 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6237
  %irq = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %11, i32 0, i32 15, !dbg !6239
  %12 = load i32, i32* %irq, align 8, !dbg !6239
  %tobool7 = icmp ne i32 %12, 0, !dbg !6237
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !6240

if.then8:                                         ; preds = %if.end6
  %13 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6241
  %irq9 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %13, i32 0, i32 15, !dbg !6242
  %14 = load i32, i32* %irq9, align 8, !dbg !6242
  %15 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6243
  %16 = bitcast %struct.usb_hcd* %15 to i8*, !dbg !6243
  %call10 = call i8* @free_irq(i32 %14, i8* %16) #11, !dbg !6244
  br label %if.end11, !dbg !6244

if.end11:                                         ; preds = %if.then8, %if.end6
  %17 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6245
  %irq12 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %17, i32 0, i32 15, !dbg !6246
  store i32 0, i32* %irq12, align 8, !dbg !6247
  %18 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6248
  %call13 = call i32 @xhci_setup_msix(%struct.xhci_hcd* %18) #11, !dbg !6249
  store i32 %call13, i32* %ret, align 4, !dbg !6250
  %19 = load i32, i32* %ret, align 4, !dbg !6251
  %tobool14 = icmp ne i32 %19, 0, !dbg !6251
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !6253

if.then15:                                        ; preds = %if.end11
  %20 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6254
  %call16 = call i32 @xhci_setup_msi(%struct.xhci_hcd* %20) #11, !dbg !6255
  store i32 %call16, i32* %ret, align 4, !dbg !6256
  br label %if.end17, !dbg !6257

if.end17:                                         ; preds = %if.then15, %if.end11
  %21 = load i32, i32* %ret, align 4, !dbg !6258
  %tobool18 = icmp ne i32 %21, 0, !dbg !6258
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !6260

if.then19:                                        ; preds = %if.end17
  %22 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6261
  %msi_enabled = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %22, i32 0, i32 14, !dbg !6263
  %bf.load = load i16, i16* %msi_enabled, align 4, !dbg !6264
  %bf.clear = and i16 %bf.load, -9, !dbg !6264
  %bf.set = or i16 %bf.clear, 8, !dbg !6264
  store i16 %bf.set, i16* %msi_enabled, align 4, !dbg !6264
  store i32 0, i32* %retval, align 4, !dbg !6265
  br label %return, !dbg !6265

if.end20:                                         ; preds = %if.end17
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6266
  %irq21 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %23, i32 0, i32 43, !dbg !6268
  %24 = load i32, i32* %irq21, align 4, !dbg !6268
  %tobool22 = icmp ne i32 %24, 0, !dbg !6266
  br i1 %tobool22, label %if.end27, label %if.then23, !dbg !6269

if.then23:                                        ; preds = %if.end20
  %25 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6270
  %call24 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %25) #11, !dbg !6270
  %self25 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call24, i32 0, i32 0, !dbg !6270
  %controller26 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self25, i32 0, i32 0, !dbg !6270
  %26 = load %struct.device*, %struct.device** %controller26, align 8, !dbg !6270
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %26, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.36, i64 0, i64 0)) #12, !dbg !6270
  store i32 -22, i32* %retval, align 4, !dbg !6272
  br label %return, !dbg !6272

if.end27:                                         ; preds = %if.end20
  br label %legacy_irq, !dbg !6268

legacy_irq:                                       ; preds = %if.end27, %if.then5
  call void @llvm.dbg.label(metadata !6273), !dbg !6274
  %27 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6275
  %irq_descr = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %27, i32 0, i32 4, !dbg !6277
  %arraydecay = getelementptr inbounds [24 x i8], [24 x i8]* %irq_descr, i64 0, i64 0, !dbg !6275
  %call28 = call i64 @strlen(i8* %arraydecay) #11, !dbg !6278
  %tobool29 = icmp ne i64 %call28, 0, !dbg !6278
  br i1 %tobool29, label %if.end35, label %if.then30, !dbg !6279

if.then30:                                        ; preds = %legacy_irq
  %28 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6280
  %irq_descr31 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %28, i32 0, i32 4, !dbg !6281
  %arraydecay32 = getelementptr inbounds [24 x i8], [24 x i8]* %irq_descr31, i64 0, i64 0, !dbg !6280
  %29 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6282
  %driver = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %29, i32 0, i32 9, !dbg !6283
  %30 = load %struct.hc_driver*, %struct.hc_driver** %driver, align 8, !dbg !6283
  %description = getelementptr inbounds %struct.hc_driver, %struct.hc_driver* %30, i32 0, i32 0, !dbg !6284
  %31 = load i8*, i8** %description, align 8, !dbg !6284
  %32 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6285
  %self33 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %32, i32 0, i32 0, !dbg !6286
  %busnum = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self33, i32 0, i32 2, !dbg !6287
  %33 = load i32, i32* %busnum, align 8, !dbg !6287
  %call34 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay32, i64 24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0), i8* %31, i32 %33) #11, !dbg !6288
  br label %if.end35, !dbg !6288

if.end35:                                         ; preds = %if.then30, %legacy_irq
  %34 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6289
  %irq36 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %34, i32 0, i32 43, !dbg !6290
  %35 = load i32, i32* %irq36, align 4, !dbg !6290
  %36 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6291
  %irq_descr37 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %36, i32 0, i32 4, !dbg !6292
  %arraydecay38 = getelementptr inbounds [24 x i8], [24 x i8]* %irq_descr37, i64 0, i64 0, !dbg !6291
  %37 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6293
  %38 = bitcast %struct.usb_hcd* %37 to i8*, !dbg !6293
  %call39 = call i32 @request_irq(i32 %35, i32 (i32, i8*)* @usb_hcd_irq, i64 128, i8* %arraydecay38, i8* %38) #11, !dbg !6294
  store i32 %call39, i32* %ret, align 4, !dbg !6295
  %39 = load i32, i32* %ret, align 4, !dbg !6296
  %tobool40 = icmp ne i32 %39, 0, !dbg !6296
  br i1 %tobool40, label %if.then41, label %if.end46, !dbg !6298

if.then41:                                        ; preds = %if.end35
  %40 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6299
  %call42 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %40) #11, !dbg !6299
  %self43 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call42, i32 0, i32 0, !dbg !6299
  %controller44 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self43, i32 0, i32 0, !dbg !6299
  %41 = load %struct.device*, %struct.device** %controller44, align 8, !dbg !6299
  %42 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6299
  %irq45 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %42, i32 0, i32 43, !dbg !6299
  %43 = load i32, i32* %irq45, align 4, !dbg !6299
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %41, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38, i64 0, i64 0), i32 %43) #12, !dbg !6299
  %44 = load i32, i32* %ret, align 4, !dbg !6301
  store i32 %44, i32* %retval, align 4, !dbg !6302
  br label %return, !dbg !6302

if.end46:                                         ; preds = %if.end35
  %45 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6303
  %irq47 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %45, i32 0, i32 43, !dbg !6304
  %46 = load i32, i32* %irq47, align 4, !dbg !6304
  %47 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6305
  %irq48 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %47, i32 0, i32 15, !dbg !6306
  store i32 %46, i32* %irq48, align 8, !dbg !6307
  store i32 0, i32* %retval, align 4, !dbg !6308
  br label %return, !dbg !6308

return:                                           ; preds = %if.end46, %if.then41, %if.then23, %if.then19, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !6309
  ret i32 %48, !dbg !6309
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @xhci_read_64(%struct.xhci_hcd* %xhci, i64* %regs) #1 !dbg !6310 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %regs.addr = alloca i64*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !6316, metadata !DIExpression()), !dbg !6317
  store i64* %regs, i64** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %regs.addr, metadata !6318, metadata !DIExpression()), !dbg !6319
  %0 = load i64*, i64** %regs.addr, align 8, !dbg !6320
  %1 = bitcast i64* %0 to i8*, !dbg !6320
  %call = call i64 @lo_hi_readq(i8* %1) #11, !dbg !6321
  ret i64 %call, !dbg !6322
}

; Function Attrs: noredzone
declare dso_local %struct.xhci_command* @xhci_alloc_command(%struct.xhci_hcd*, i1 zeroext, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @xhci_queue_vendor_command(%struct.xhci_hcd*, %struct.xhci_command*, i32, i32, i32, i32) #3

; Function Attrs: noredzone
declare dso_local void @xhci_free_command(%struct.xhci_hcd*, %struct.xhci_command*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_dbc_init(%struct.xhci_hcd* %xhci) #1 !dbg !6323 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !6325, metadata !DIExpression()), !dbg !6326
  ret i32 0, !dbg !6327
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_debugfs_init(%struct.xhci_hcd* %xhci) #1 !dbg !6328 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !6329, metadata !DIExpression()), !dbg !6330
  ret void, !dbg !6331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xhci_shutdown(%struct.usb_hcd* %hcd) #1 !dbg !6332 {
entry:
  %lock.addr.i10 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i10, metadata !6333, metadata !DIExpression()), !dbg !6338
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6340, metadata !DIExpression()), !dbg !6342
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !6344, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !6346, metadata !DIExpression()), !dbg !6347
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6348
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !6349
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !6347
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6350
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %1, i32 0, i32 50, !dbg !6352
  %2 = load i64, i64* %quirks, align 8, !dbg !6352
  %and = and i64 %2, 8192, !dbg !6353
  %tobool = icmp ne i64 %and, 0, !dbg !6353
  br i1 %tobool, label %if.then, label %if.end, !dbg !6354

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6355, metadata !DIExpression()), !dbg !6357
  %3 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6357
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %3, i32 0, i32 0, !dbg !6357
  %sysdev = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 1, !dbg !6357
  %4 = load %struct.device*, %struct.device** %sysdev, align 8, !dbg !6357
  %5 = bitcast %struct.device* %4 to i8*, !dbg !6357
  store i8* %5, i8** %__mptr, align 8, !dbg !6357
  br label %do.body, !dbg !6357

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !6358

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !6357
  %add.ptr = getelementptr i8, i8* %6, i64 -176, !dbg !6357
  %7 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !6357
  store %struct.pci_dev* %7, %struct.pci_dev** %tmp, align 8, !dbg !6358
  %8 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6357
  call void @usb_disable_xhci_ports(%struct.pci_dev* %8) #11, !dbg !6360
  br label %if.end, !dbg !6360

if.end:                                           ; preds = %do.end, %entry
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6361
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %9, i32 0, i32 12, !dbg !6362
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !6363
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6366, !srcloc !6368
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6369
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !6369
  %rlock.i = bitcast %union.anon.2* %11 to %struct.raw_spinlock*, !dbg !6369
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6371
  %call1 = call i32 @xhci_halt(%struct.xhci_hcd* %12) #11, !dbg !6372
  %13 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6373
  %quirks2 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %13, i32 0, i32 50, !dbg !6375
  %14 = load i64, i64* %quirks2, align 8, !dbg !6375
  %and3 = and i64 %14, 262144, !dbg !6376
  %tobool4 = icmp ne i64 %and3, 0, !dbg !6376
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !6377

if.then5:                                         ; preds = %if.end
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6378
  %call6 = call i32 @xhci_reset(%struct.xhci_hcd* %15) #11, !dbg !6379
  br label %if.end7, !dbg !6379

if.end7:                                          ; preds = %if.then5, %if.end
  %16 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6380
  %lock8 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %16, i32 0, i32 12, !dbg !6381
  store %struct.spinlock* %lock8, %struct.spinlock** %lock.addr.i10, align 8
  call void @arch_local_irq_enable() #13, !dbg !6382
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6385, !srcloc !6387
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i10, align 8, !dbg !6388
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !6388
  %rlock.i11 = bitcast %union.anon.2* %18 to %struct.raw_spinlock*, !dbg !6388
  %19 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6390
  call void @xhci_cleanup_msix(%struct.xhci_hcd* %19) #11, !dbg !6391
  %20 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6392
  %21 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !6393
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %21, i32 0, i32 3, !dbg !6394
  %22 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !6394
  %status = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %22, i32 0, i32 1, !dbg !6395
  %23 = bitcast i32* %status to i8*, !dbg !6396
  %call9 = call i32 @readl(i8* %23) #11, !dbg !6397
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %20, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i32 %call9) #11, !dbg !6398
  ret void, !dbg !6399
}

; Function Attrs: noredzone
declare dso_local void @usb_disable_xhci_ports(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_cleanup_msix(%struct.xhci_hcd* %xhci) #1 !dbg !6400 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %hcd = alloca %struct.usb_hcd*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !6401, metadata !DIExpression()), !dbg !6402
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd, metadata !6403, metadata !DIExpression()), !dbg !6404
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6405
  %call = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %0) #11, !dbg !6406
  store %struct.usb_hcd* %call, %struct.usb_hcd** %hcd, align 8, !dbg !6404
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !6407, metadata !DIExpression()), !dbg !6408
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6409, metadata !DIExpression()), !dbg !6411
  %1 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !6411
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %1, i32 0, i32 0, !dbg !6411
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !6411
  %2 = load %struct.device*, %struct.device** %controller, align 8, !dbg !6411
  %3 = bitcast %struct.device* %2 to i8*, !dbg !6411
  store i8* %3, i8** %__mptr, align 8, !dbg !6411
  br label %do.body, !dbg !6411

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6412

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !6411
  %add.ptr = getelementptr i8, i8* %4, i64 -176, !dbg !6411
  %5 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !6411
  store %struct.pci_dev* %5, %struct.pci_dev** %tmp, align 8, !dbg !6412
  %6 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6411
  store %struct.pci_dev* %6, %struct.pci_dev** %pdev, align 8, !dbg !6408
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6414
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 50, !dbg !6416
  %8 = load i64, i64* %quirks, align 8, !dbg !6416
  %and = and i64 %8, 65536, !dbg !6417
  %tobool = icmp ne i64 %and, 0, !dbg !6417
  br i1 %tobool, label %if.then, label %if.end, !dbg !6418

if.then:                                          ; preds = %do.end
  br label %return, !dbg !6419

if.end:                                           ; preds = %do.end
  %9 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !6420
  %irq = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %9, i32 0, i32 15, !dbg !6422
  %10 = load i32, i32* %irq, align 8, !dbg !6422
  %cmp = icmp ugt i32 %10, 0, !dbg !6423
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !6424

if.then1:                                         ; preds = %if.end
  br label %return, !dbg !6425

if.end2:                                          ; preds = %if.end
  %11 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !6426
  %msix_enabled = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %11, i32 0, i32 14, !dbg !6428
  %bf.load = load i16, i16* %msix_enabled, align 4, !dbg !6428
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !6428
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6428
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6428
  %tobool3 = icmp ne i32 %bf.cast, 0, !dbg !6426
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !6429

if.then4:                                         ; preds = %if.end2
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6430, metadata !DIExpression()), !dbg !6432
  store i32 0, i32* %i, align 4, !dbg !6433
  br label %for.cond, !dbg !6435

for.cond:                                         ; preds = %for.inc, %if.then4
  %12 = load i32, i32* %i, align 4, !dbg !6436
  %13 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6438
  %msix_count = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %13, i32 0, i32 23, !dbg !6439
  %14 = load i32, i32* %msix_count, align 4, !dbg !6439
  %cmp5 = icmp slt i32 %12, %14, !dbg !6440
  br i1 %cmp5, label %for.body, label %for.end, !dbg !6441

for.body:                                         ; preds = %for.cond
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6442
  %16 = load i32, i32* %i, align 4, !dbg !6443
  %call6 = call i32 @pci_irq_vector(%struct.pci_dev* %15, i32 %16) #11, !dbg !6444
  %17 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6445
  %call7 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %17) #11, !dbg !6446
  %18 = bitcast %struct.usb_hcd* %call7 to i8*, !dbg !6446
  %call8 = call i8* @free_irq(i32 %call6, i8* %18) #11, !dbg !6447
  br label %for.inc, !dbg !6447

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !6448
  %inc = add i32 %19, 1, !dbg !6448
  store i32 %inc, i32* %i, align 4, !dbg !6448
  br label %for.cond, !dbg !6449, !llvm.loop !6450

for.end:                                          ; preds = %for.cond
  br label %if.end12, !dbg !6452

if.else:                                          ; preds = %if.end2
  %20 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6453
  %call9 = call i32 @pci_irq_vector(%struct.pci_dev* %20, i32 0) #11, !dbg !6455
  %21 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6456
  %call10 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %21) #11, !dbg !6457
  %22 = bitcast %struct.usb_hcd* %call10 to i8*, !dbg !6457
  %call11 = call i8* @free_irq(i32 %call9, i8* %22) #11, !dbg !6458
  br label %if.end12

if.end12:                                         ; preds = %if.else, %for.end
  %23 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6459
  call void @pci_free_irq_vectors(%struct.pci_dev* %23) #11, !dbg !6460
  %24 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !6461
  %msix_enabled13 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %24, i32 0, i32 14, !dbg !6462
  %bf.load14 = load i16, i16* %msix_enabled13, align 4, !dbg !6463
  %bf.clear15 = and i16 %bf.load14, -5, !dbg !6463
  store i16 %bf.clear15, i16* %msix_enabled13, align 4, !dbg !6463
  br label %return, !dbg !6464

return:                                           ; preds = %if.end12, %if.then1, %if.then
  ret void, !dbg !6464
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xhci_suspend(%struct.xhci_hcd* %xhci, i1 zeroext %do_wakeup) #1 !dbg !6465 {
entry:
  %lock.addr.i87 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i87, metadata !6333, metadata !DIExpression()), !dbg !6468
  %lock.addr.i85 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i85, metadata !6333, metadata !DIExpression()), !dbg !6470
  %lock.addr.i83 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i83, metadata !6333, metadata !DIExpression()), !dbg !6476
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6340, metadata !DIExpression()), !dbg !6480
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %do_wakeup.addr = alloca i8, align 1
  %rc = alloca i32, align 4
  %delay = alloca i32, align 4
  %hcd = alloca %struct.usb_hcd*, align 8
  %command = alloca i32, align 4
  %res = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !6482, metadata !DIExpression()), !dbg !6483
  %frombool = zext i1 %do_wakeup to i8
  store i8 %frombool, i8* %do_wakeup.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_wakeup.addr, metadata !6484, metadata !DIExpression()), !dbg !6485
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6486, metadata !DIExpression()), !dbg !6487
  store i32 0, i32* %rc, align 4, !dbg !6487
  call void @llvm.dbg.declare(metadata i32* %delay, metadata !6488, metadata !DIExpression()), !dbg !6489
  store i32 32000, i32* %delay, align 4, !dbg !6489
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd, metadata !6490, metadata !DIExpression()), !dbg !6491
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6492
  %call = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %0) #11, !dbg !6493
  store %struct.usb_hcd* %call, %struct.usb_hcd** %hcd, align 8, !dbg !6491
  call void @llvm.dbg.declare(metadata i32* %command, metadata !6494, metadata !DIExpression()), !dbg !6495
  call void @llvm.dbg.declare(metadata i32* %res, metadata !6496, metadata !DIExpression()), !dbg !6497
  %1 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !6498
  %state = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %1, i32 0, i32 27, !dbg !6500
  %2 = load i32, i32* %state, align 8, !dbg !6500
  %tobool = icmp ne i32 %2, 0, !dbg !6498
  br i1 %tobool, label %if.end, label %if.then, !dbg !6501

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6502
  br label %return, !dbg !6502

if.end:                                           ; preds = %entry
  %3 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !6503
  %state1 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %3, i32 0, i32 27, !dbg !6505
  %4 = load i32, i32* %state1, align 8, !dbg !6505
  %cmp = icmp ne i32 %4, 4, !dbg !6506
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !6507

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6508
  %shared_hcd = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 1, !dbg !6509
  %6 = load %struct.usb_hcd*, %struct.usb_hcd** %shared_hcd, align 8, !dbg !6509
  %state2 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %6, i32 0, i32 27, !dbg !6510
  %7 = load i32, i32* %state2, align 8, !dbg !6510
  %cmp3 = icmp ne i32 %7, 4, !dbg !6511
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !6512

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !6513
  br label %return, !dbg !6513

if.end5:                                          ; preds = %lor.lhs.false
  %8 = load i8, i8* %do_wakeup.addr, align 1, !dbg !6514
  %tobool6 = trunc i8 %8 to i1, !dbg !6514
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !6516

if.then7:                                         ; preds = %if.end5
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6517
  call void @xhci_disable_port_wake_on_bits(%struct.xhci_hcd* %9) #11, !dbg !6518
  br label %if.end8, !dbg !6518

if.end8:                                          ; preds = %if.then7, %if.end5
  %10 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !6519
  %flags = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %10, i32 0, i32 12, !dbg !6519
  %11 = load i64, i64* %flags, align 8, !dbg !6519
  %and = and i64 %11, 1, !dbg !6519
  %tobool9 = icmp ne i64 %and, 0, !dbg !6519
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !6521

if.then10:                                        ; preds = %if.end8
  store i32 0, i32* %retval, align 4, !dbg !6522
  br label %return, !dbg !6522

if.end11:                                         ; preds = %if.end8
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6523
  %call12 = call i32 @xhci_dbc_suspend(%struct.xhci_hcd* %12) #11, !dbg !6524
  %13 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !6525
  %flags13 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %13, i32 0, i32 12, !dbg !6526
  call void @clear_bit(i64 2, i64* %flags13) #11, !dbg !6527
  %14 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !6528
  %rh_timer = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %14, i32 0, i32 5, !dbg !6528
  %call14 = call i32 @del_timer(%struct.timer_list* %rh_timer) #11, !dbg !6528
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6529
  %shared_hcd15 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %15, i32 0, i32 1, !dbg !6530
  %16 = load %struct.usb_hcd*, %struct.usb_hcd** %shared_hcd15, align 8, !dbg !6530
  %flags16 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %16, i32 0, i32 12, !dbg !6531
  call void @clear_bit(i64 2, i64* %flags16) #11, !dbg !6532
  %17 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6533
  %shared_hcd17 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %17, i32 0, i32 1, !dbg !6533
  %18 = load %struct.usb_hcd*, %struct.usb_hcd** %shared_hcd17, align 8, !dbg !6533
  %rh_timer18 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %18, i32 0, i32 5, !dbg !6533
  %call19 = call i32 @del_timer(%struct.timer_list* %rh_timer18) #11, !dbg !6533
  %19 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6534
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %19, i32 0, i32 50, !dbg !6536
  %20 = load i64, i64* %quirks, align 8, !dbg !6536
  %and20 = and i64 %20, 1073741824, !dbg !6537
  %tobool21 = icmp ne i64 %and20, 0, !dbg !6537
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !6538

if.then22:                                        ; preds = %if.end11
  call void @usleep_range(i64 1000, i64 1500) #11, !dbg !6539
  br label %if.end23, !dbg !6539

if.end23:                                         ; preds = %if.then22, %if.end11
  %21 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6540
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %21, i32 0, i32 12, !dbg !6541
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !6542
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6543, !srcloc !6368
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6544
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !6544
  %rlock.i = bitcast %union.anon.2* %23 to %struct.raw_spinlock*, !dbg !6544
  %24 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !6545
  %flags24 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %24, i32 0, i32 12, !dbg !6546
  call void @clear_bit(i64 0, i64* %flags24) #11, !dbg !6547
  %25 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6548
  %shared_hcd25 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %25, i32 0, i32 1, !dbg !6549
  %26 = load %struct.usb_hcd*, %struct.usb_hcd** %shared_hcd25, align 8, !dbg !6549
  %flags26 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %26, i32 0, i32 12, !dbg !6550
  call void @clear_bit(i64 0, i64* %flags26) #11, !dbg !6551
  %27 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6552
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %27, i32 0, i32 3, !dbg !6553
  %28 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !6553
  %command27 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %28, i32 0, i32 0, !dbg !6554
  %29 = bitcast i32* %command27 to i8*, !dbg !6555
  %call28 = call i32 @readl(i8* %29) #11, !dbg !6556
  store i32 %call28, i32* %command, align 4, !dbg !6557
  %30 = load i32, i32* %command, align 4, !dbg !6558
  %and29 = and i32 %30, -2, !dbg !6558
  store i32 %and29, i32* %command, align 4, !dbg !6558
  %31 = load i32, i32* %command, align 4, !dbg !6559
  %32 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6560
  %op_regs30 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %32, i32 0, i32 3, !dbg !6561
  %33 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs30, align 8, !dbg !6561
  %command31 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %33, i32 0, i32 0, !dbg !6562
  %34 = bitcast i32* %command31 to i8*, !dbg !6563
  call void @writel(i32 %31, i8* %34) #11, !dbg !6564
  %35 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6565
  %quirks32 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %35, i32 0, i32 50, !dbg !6566
  %36 = load i64, i64* %quirks32, align 8, !dbg !6566
  %and33 = and i64 %36, 131072, !dbg !6567
  %tobool34 = icmp ne i64 %and33, 0, !dbg !6568
  %37 = zext i1 %tobool34 to i64, !dbg !6568
  %cond = select i1 %tobool34, i32 10, i32 1, !dbg !6568
  %38 = load i32, i32* %delay, align 4, !dbg !6569
  %mul = mul i32 %38, %cond, !dbg !6569
  store i32 %mul, i32* %delay, align 4, !dbg !6569
  %39 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6570
  %op_regs35 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %39, i32 0, i32 3, !dbg !6571
  %40 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs35, align 8, !dbg !6571
  %status = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %40, i32 0, i32 1, !dbg !6572
  %41 = bitcast i32* %status to i8*, !dbg !6573
  %42 = load i32, i32* %delay, align 4, !dbg !6574
  %call36 = call i32 @xhci_handshake(i8* %41, i32 1, i32 1, i32 %42) #11, !dbg !6575
  %tobool37 = icmp ne i32 %call36, 0, !dbg !6575
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !6576

if.then38:                                        ; preds = %if.end23
  %43 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6577
  %call39 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %43) #11, !dbg !6577
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call39, i32 0, i32 0, !dbg !6577
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !6577
  %44 = load %struct.device*, %struct.device** %controller, align 8, !dbg !6577
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %44, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !6577
  %45 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6578
  %lock40 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %45, i32 0, i32 12, !dbg !6579
  store %struct.spinlock* %lock40, %struct.spinlock** %lock.addr.i83, align 8
  call void @arch_local_irq_enable() #13, !dbg !6580
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6581, !srcloc !6387
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i83, align 8, !dbg !6582
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !6582
  %rlock.i84 = bitcast %union.anon.2* %47 to %struct.raw_spinlock*, !dbg !6582
  store i32 -110, i32* %retval, align 4, !dbg !6583
  br label %return, !dbg !6583

if.end41:                                         ; preds = %if.end23
  %48 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6584
  call void @xhci_clear_command_ring(%struct.xhci_hcd* %48) #11, !dbg !6585
  %49 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6586
  call void @xhci_save_registers(%struct.xhci_hcd* %49) #11, !dbg !6587
  %50 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6588
  %op_regs42 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %50, i32 0, i32 3, !dbg !6589
  %51 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs42, align 8, !dbg !6589
  %command43 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %51, i32 0, i32 0, !dbg !6590
  %52 = bitcast i32* %command43 to i8*, !dbg !6591
  %call44 = call i32 @readl(i8* %52) #11, !dbg !6592
  store i32 %call44, i32* %command, align 4, !dbg !6593
  %53 = load i32, i32* %command, align 4, !dbg !6594
  %or = or i32 %53, 256, !dbg !6594
  store i32 %or, i32* %command, align 4, !dbg !6594
  %54 = load i32, i32* %command, align 4, !dbg !6595
  %55 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6596
  %op_regs45 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %55, i32 0, i32 3, !dbg !6597
  %56 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs45, align 8, !dbg !6597
  %command46 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %56, i32 0, i32 0, !dbg !6598
  %57 = bitcast i32* %command46 to i8*, !dbg !6599
  call void @writel(i32 %54, i8* %57) #11, !dbg !6600
  %58 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6601
  %broken_suspend = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %58, i32 0, i32 56, !dbg !6602
  %bf.load = load i8, i8* %broken_suspend, align 8, !dbg !6603
  %bf.clear = and i8 %bf.load, -3, !dbg !6603
  store i8 %bf.clear, i8* %broken_suspend, align 8, !dbg !6603
  %59 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6604
  %op_regs47 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %59, i32 0, i32 3, !dbg !6605
  %60 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs47, align 8, !dbg !6605
  %status48 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %60, i32 0, i32 1, !dbg !6606
  %61 = bitcast i32* %status48 to i8*, !dbg !6607
  %call49 = call i32 @xhci_handshake(i8* %61, i32 256, i32 0, i32 20000) #11, !dbg !6608
  %tobool50 = icmp ne i32 %call49, 0, !dbg !6608
  br i1 %tobool50, label %if.then51, label %if.end72, !dbg !6609

if.then51:                                        ; preds = %if.end41
  %62 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6610
  %op_regs52 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %62, i32 0, i32 3, !dbg !6611
  %63 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs52, align 8, !dbg !6611
  %status53 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %63, i32 0, i32 1, !dbg !6612
  %64 = bitcast i32* %status53 to i8*, !dbg !6613
  %call54 = call i32 @readl(i8* %64) #11, !dbg !6614
  store i32 %call54, i32* %res, align 4, !dbg !6615
  %65 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6616
  %quirks55 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %65, i32 0, i32 50, !dbg !6617
  %66 = load i64, i64* %quirks55, align 8, !dbg !6617
  %and56 = and i64 %66, 34359738368, !dbg !6618
  %tobool57 = icmp ne i64 %and56, 0, !dbg !6618
  br i1 %tobool57, label %land.lhs.true, label %if.else, !dbg !6619

land.lhs.true:                                    ; preds = %if.then51
  %67 = load i32, i32* %res, align 4, !dbg !6620
  %and58 = and i32 %67, 1024, !dbg !6621
  %cmp59 = icmp eq i32 %and58, 0, !dbg !6622
  br i1 %cmp59, label %land.lhs.true60, label %if.else, !dbg !6623

land.lhs.true60:                                  ; preds = %land.lhs.true
  %68 = load i32, i32* %res, align 4, !dbg !6624
  %and61 = and i32 %68, 4096, !dbg !6625
  %cmp62 = icmp eq i32 %and61, 0, !dbg !6626
  br i1 %cmp62, label %if.then63, label %if.else, !dbg !6627

if.then63:                                        ; preds = %land.lhs.true60
  %69 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6628
  %broken_suspend64 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %69, i32 0, i32 56, !dbg !6630
  %bf.load65 = load i8, i8* %broken_suspend64, align 8, !dbg !6631
  %bf.clear66 = and i8 %bf.load65, -3, !dbg !6631
  %bf.set = or i8 %bf.clear66, 2, !dbg !6631
  store i8 %bf.set, i8* %broken_suspend64, align 8, !dbg !6631
  br label %if.end71, !dbg !6632

if.else:                                          ; preds = %land.lhs.true60, %land.lhs.true, %if.then51
  %70 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6633
  %call67 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %70) #11, !dbg !6633
  %self68 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call67, i32 0, i32 0, !dbg !6633
  %controller69 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self68, i32 0, i32 0, !dbg !6633
  %71 = load %struct.device*, %struct.device** %controller69, align 8, !dbg !6633
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %71, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0)) #12, !dbg !6633
  %72 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6634
  %lock70 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %72, i32 0, i32 12, !dbg !6635
  store %struct.spinlock* %lock70, %struct.spinlock** %lock.addr.i85, align 8
  call void @arch_local_irq_enable() #13, !dbg !6636
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6637, !srcloc !6387
  %73 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i85, align 8, !dbg !6638
  %74 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %73, i32 0, i32 0, !dbg !6638
  %rlock.i86 = bitcast %union.anon.2* %74 to %struct.raw_spinlock*, !dbg !6638
  store i32 -110, i32* %retval, align 4, !dbg !6639
  br label %return, !dbg !6639

if.end71:                                         ; preds = %if.then63
  br label %if.end72, !dbg !6640

if.end72:                                         ; preds = %if.end71, %if.end41
  %75 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6641
  %lock73 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %75, i32 0, i32 12, !dbg !6642
  store %struct.spinlock* %lock73, %struct.spinlock** %lock.addr.i87, align 8
  call void @arch_local_irq_enable() #13, !dbg !6643
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6644, !srcloc !6387
  %76 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i87, align 8, !dbg !6645
  %77 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %76, i32 0, i32 0, !dbg !6645
  %rlock.i88 = bitcast %union.anon.2* %77 to %struct.raw_spinlock*, !dbg !6645
  %78 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6646
  %quirks74 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %78, i32 0, i32 50, !dbg !6648
  %79 = load i64, i64* %quirks74, align 8, !dbg !6648
  %and75 = and i64 %79, 16384, !dbg !6649
  %tobool76 = icmp ne i64 %and75, 0, !dbg !6649
  br i1 %tobool76, label %land.lhs.true77, label %if.end82, !dbg !6650

land.lhs.true77:                                  ; preds = %if.end72
  %80 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6651
  %call78 = call i32 @xhci_all_ports_seen_u0(%struct.xhci_hcd* %80) #11, !dbg !6652
  %tobool79 = icmp ne i32 %call78, 0, !dbg !6652
  br i1 %tobool79, label %if.end82, label %if.then80, !dbg !6653

if.then80:                                        ; preds = %land.lhs.true77
  %81 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6654
  %comp_mode_recovery_timer = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %81, i32 0, i32 61, !dbg !6654
  %call81 = call i32 @del_timer(%struct.timer_list* %comp_mode_recovery_timer) #11, !dbg !6654
  %82 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6656
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %82, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.xhci_suspend, i64 0, i64 0)) #11, !dbg !6657
  br label %if.end82, !dbg !6658

if.end82:                                         ; preds = %if.then80, %land.lhs.true77, %if.end72
  %83 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6659
  call void @xhci_msix_sync_irqs(%struct.xhci_hcd* %83) #11, !dbg !6660
  %84 = load i32, i32* %rc, align 4, !dbg !6661
  store i32 %84, i32* %retval, align 4, !dbg !6662
  br label %return, !dbg !6662

return:                                           ; preds = %if.end82, %if.else, %if.then38, %if.then10, %if.then4, %if.then
  %85 = load i32, i32* %retval, align 4, !dbg !6663
  ret i32 %85, !dbg !6663
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_disable_port_wake_on_bits(%struct.xhci_hcd* %xhci) #1 !dbg !6664 {
entry:
  %lock.addr.i50 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i50, metadata !6665, metadata !DIExpression()), !dbg !6669
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !6672
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !6678
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %ports = alloca %struct.xhci_port**, align 8
  %port_index = alloca i32, align 4
  %flags = alloca i64, align 8
  %t1 = alloca i32, align 4
  %t2 = alloca i32, align 4
  %portsc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !6685, metadata !DIExpression()), !dbg !6686
  call void @llvm.dbg.declare(metadata %struct.xhci_port*** %ports, metadata !6687, metadata !DIExpression()), !dbg !6688
  call void @llvm.dbg.declare(metadata i32* %port_index, metadata !6689, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6691, metadata !DIExpression()), !dbg !6692
  call void @llvm.dbg.declare(metadata i32* %t1, metadata !6693, metadata !DIExpression()), !dbg !6694
  call void @llvm.dbg.declare(metadata i32* %t2, metadata !6695, metadata !DIExpression()), !dbg !6696
  call void @llvm.dbg.declare(metadata i32* %portsc, metadata !6697, metadata !DIExpression()), !dbg !6698
  br label %do.body, !dbg !6699

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6700

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6701, metadata !DIExpression()), !dbg !6703
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6704, metadata !DIExpression()), !dbg !6703
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6703
  %conv = zext i1 %cmp to i32, !dbg !6703
  store i32 1, i32* %tmp, align 4, !dbg !6703
  %0 = load i32, i32* %tmp, align 4, !dbg !6703
  br label %do.body2, !dbg !6705

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6706

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6707

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6709, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6713, metadata !DIExpression()), !dbg !6712
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6712
  %conv8 = zext i1 %cmp7 to i32, !dbg !6712
  store i32 1, i32* %tmp9, align 4, !dbg !6712
  %1 = load i32, i32* %tmp9, align 4, !dbg !6712
  %call = call i64 @arch_local_irq_save() #11, !dbg !6714
  store i64 %call, i64* %flags, align 8, !dbg !6714
  br label %do.end, !dbg !6714

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6707

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6706

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6715, !srcloc !6716
  br label %do.body12, !dbg !6715

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6717
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %2, i32 0, i32 12, !dbg !6717
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6718
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !6719
  %rlock.i = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !6719
  br label %do.end14, !dbg !6717

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6715

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6706

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6705

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6700

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6720
  %usb3_rhub = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 55, !dbg !6721
  %num_ports = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb3_rhub, i32 0, i32 1, !dbg !6722
  %6 = load i32, i32* %num_ports, align 8, !dbg !6722
  store i32 %6, i32* %port_index, align 4, !dbg !6723
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6724
  %usb3_rhub19 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 55, !dbg !6725
  %ports20 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb3_rhub19, i32 0, i32 0, !dbg !6726
  %8 = load %struct.xhci_port**, %struct.xhci_port*** %ports20, align 8, !dbg !6726
  store %struct.xhci_port** %8, %struct.xhci_port*** %ports, align 8, !dbg !6727
  br label %while.cond, !dbg !6728

while.cond:                                       ; preds = %if.end, %do.end18
  %9 = load i32, i32* %port_index, align 4, !dbg !6729
  %dec = add i32 %9, -1, !dbg !6729
  store i32 %dec, i32* %port_index, align 4, !dbg !6729
  %tobool = icmp ne i32 %9, 0, !dbg !6728
  br i1 %tobool, label %while.body, label %while.end, !dbg !6728

while.body:                                       ; preds = %while.cond
  %10 = load %struct.xhci_port**, %struct.xhci_port*** %ports, align 8, !dbg !6730
  %11 = load i32, i32* %port_index, align 4, !dbg !6732
  %idxprom = sext i32 %11 to i64, !dbg !6730
  %arrayidx = getelementptr %struct.xhci_port*, %struct.xhci_port** %10, i64 %idxprom, !dbg !6730
  %12 = load %struct.xhci_port*, %struct.xhci_port** %arrayidx, align 8, !dbg !6730
  %addr = getelementptr inbounds %struct.xhci_port, %struct.xhci_port* %12, i32 0, i32 0, !dbg !6733
  %13 = load i32*, i32** %addr, align 8, !dbg !6733
  %14 = bitcast i32* %13 to i8*, !dbg !6730
  %call21 = call i32 @readl(i8* %14) #11, !dbg !6734
  store i32 %call21, i32* %t1, align 4, !dbg !6735
  %15 = load i32, i32* %t1, align 4, !dbg !6736
  store i32 %15, i32* %portsc, align 4, !dbg !6737
  %16 = load i32, i32* %t1, align 4, !dbg !6738
  %call22 = call i32 @xhci_port_state_to_neutral(i32 %16) #11, !dbg !6739
  store i32 %call22, i32* %t1, align 4, !dbg !6740
  %17 = load i32, i32* %t1, align 4, !dbg !6741
  %and = and i32 %17, -234881025, !dbg !6742
  store i32 %and, i32* %t2, align 4, !dbg !6743
  %18 = load i32, i32* %t1, align 4, !dbg !6744
  %19 = load i32, i32* %t2, align 4, !dbg !6746
  %cmp23 = icmp ne i32 %18, %19, !dbg !6747
  br i1 %cmp23, label %if.then, label %if.end, !dbg !6748

if.then:                                          ; preds = %while.body
  %20 = load i32, i32* %t2, align 4, !dbg !6749
  %21 = load %struct.xhci_port**, %struct.xhci_port*** %ports, align 8, !dbg !6751
  %22 = load i32, i32* %port_index, align 4, !dbg !6752
  %idxprom25 = sext i32 %22 to i64, !dbg !6751
  %arrayidx26 = getelementptr %struct.xhci_port*, %struct.xhci_port** %21, i64 %idxprom25, !dbg !6751
  %23 = load %struct.xhci_port*, %struct.xhci_port** %arrayidx26, align 8, !dbg !6751
  %addr27 = getelementptr inbounds %struct.xhci_port, %struct.xhci_port* %23, i32 0, i32 0, !dbg !6753
  %24 = load i32*, i32** %addr27, align 8, !dbg !6753
  %25 = bitcast i32* %24 to i8*, !dbg !6751
  call void @writel(i32 %20, i8* %25) #11, !dbg !6754
  br label %if.end, !dbg !6755

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !6728, !llvm.loop !6756

while.end:                                        ; preds = %while.cond
  %26 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6758
  %usb2_rhub = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %26, i32 0, i32 54, !dbg !6759
  %num_ports28 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb2_rhub, i32 0, i32 1, !dbg !6760
  %27 = load i32, i32* %num_ports28, align 8, !dbg !6760
  store i32 %27, i32* %port_index, align 4, !dbg !6761
  %28 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6762
  %usb2_rhub29 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %28, i32 0, i32 54, !dbg !6763
  %ports30 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb2_rhub29, i32 0, i32 0, !dbg !6764
  %29 = load %struct.xhci_port**, %struct.xhci_port*** %ports30, align 8, !dbg !6764
  store %struct.xhci_port** %29, %struct.xhci_port*** %ports, align 8, !dbg !6765
  br label %while.cond31, !dbg !6766

while.cond31:                                     ; preds = %if.end47, %while.end
  %30 = load i32, i32* %port_index, align 4, !dbg !6767
  %dec32 = add i32 %30, -1, !dbg !6767
  store i32 %dec32, i32* %port_index, align 4, !dbg !6767
  %tobool33 = icmp ne i32 %30, 0, !dbg !6766
  br i1 %tobool33, label %while.body34, label %while.end48, !dbg !6766

while.body34:                                     ; preds = %while.cond31
  %31 = load %struct.xhci_port**, %struct.xhci_port*** %ports, align 8, !dbg !6768
  %32 = load i32, i32* %port_index, align 4, !dbg !6770
  %idxprom35 = sext i32 %32 to i64, !dbg !6768
  %arrayidx36 = getelementptr %struct.xhci_port*, %struct.xhci_port** %31, i64 %idxprom35, !dbg !6768
  %33 = load %struct.xhci_port*, %struct.xhci_port** %arrayidx36, align 8, !dbg !6768
  %addr37 = getelementptr inbounds %struct.xhci_port, %struct.xhci_port* %33, i32 0, i32 0, !dbg !6771
  %34 = load i32*, i32** %addr37, align 8, !dbg !6771
  %35 = bitcast i32* %34 to i8*, !dbg !6768
  %call38 = call i32 @readl(i8* %35) #11, !dbg !6772
  store i32 %call38, i32* %t1, align 4, !dbg !6773
  %36 = load i32, i32* %t1, align 4, !dbg !6774
  store i32 %36, i32* %portsc, align 4, !dbg !6775
  %37 = load i32, i32* %t1, align 4, !dbg !6776
  %call39 = call i32 @xhci_port_state_to_neutral(i32 %37) #11, !dbg !6777
  store i32 %call39, i32* %t1, align 4, !dbg !6778
  %38 = load i32, i32* %t1, align 4, !dbg !6779
  %and40 = and i32 %38, -234881025, !dbg !6780
  store i32 %and40, i32* %t2, align 4, !dbg !6781
  %39 = load i32, i32* %t1, align 4, !dbg !6782
  %40 = load i32, i32* %t2, align 4, !dbg !6784
  %cmp41 = icmp ne i32 %39, %40, !dbg !6785
  br i1 %cmp41, label %if.then43, label %if.end47, !dbg !6786

if.then43:                                        ; preds = %while.body34
  %41 = load i32, i32* %t2, align 4, !dbg !6787
  %42 = load %struct.xhci_port**, %struct.xhci_port*** %ports, align 8, !dbg !6789
  %43 = load i32, i32* %port_index, align 4, !dbg !6790
  %idxprom44 = sext i32 %43 to i64, !dbg !6789
  %arrayidx45 = getelementptr %struct.xhci_port*, %struct.xhci_port** %42, i64 %idxprom44, !dbg !6789
  %44 = load %struct.xhci_port*, %struct.xhci_port** %arrayidx45, align 8, !dbg !6789
  %addr46 = getelementptr inbounds %struct.xhci_port, %struct.xhci_port* %44, i32 0, i32 0, !dbg !6791
  %45 = load i32*, i32** %addr46, align 8, !dbg !6791
  %46 = bitcast i32* %45 to i8*, !dbg !6789
  call void @writel(i32 %41, i8* %46) #11, !dbg !6792
  br label %if.end47, !dbg !6793

if.end47:                                         ; preds = %if.then43, %while.body34
  br label %while.cond31, !dbg !6766, !llvm.loop !6794

while.end48:                                      ; preds = %while.cond31
  %47 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6796
  %lock49 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %47, i32 0, i32 12, !dbg !6797
  %48 = load i64, i64* %flags, align 8, !dbg !6798
  store %struct.spinlock* %lock49, %struct.spinlock** %lock.addr.i50, align 8
  store i64 %48, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !6802
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !6802
  store i32 1, i32* %tmp.i, align 4, !dbg !6802
  %49 = load i32, i32* %tmp.i, align 4, !dbg !6802
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !6809
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !6809
  store i32 1, i32* %tmp8.i, align 4, !dbg !6809
  %50 = load i32, i32* %tmp8.i, align 4, !dbg !6809
  %51 = load i64, i64* %flags.addr.i, align 8, !dbg !6811
  call void @arch_local_irq_restore(i64 %51) #13, !dbg !6811
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !6812, !srcloc !6814
  %52 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i50, align 8, !dbg !6815
  %53 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %52, i32 0, i32 0, !dbg !6815
  %rlock.i51 = bitcast %union.anon.2* %53 to %struct.raw_spinlock*, !dbg !6815
  ret void, !dbg !6817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_dbc_suspend(%struct.xhci_hcd* %xhci) #1 !dbg !6818 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !6819, metadata !DIExpression()), !dbg !6820
  ret i32 0, !dbg !6821
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #1 !dbg !6822 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !6828, metadata !DIExpression()), !dbg !6831
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !6833, metadata !DIExpression()), !dbg !6834
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6835, metadata !DIExpression()), !dbg !6840
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6842, metadata !DIExpression()), !dbg !6843
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !6844, metadata !DIExpression()), !dbg !6845
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !6846, metadata !DIExpression()), !dbg !6847
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !6848
  %1 = load i64, i64* %nr.addr, align 8, !dbg !6849
  %div = sdiv i64 %1, 64, !dbg !6849
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !6850
  %2 = bitcast i64* %add.ptr to i8*, !dbg !6848
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !6851
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !6852
  %conv.i = trunc i64 %4 to i32, !dbg !6852
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !6853
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !6854
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !6854
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !6854
  %7 = load i64, i64* %nr.addr, align 8, !dbg !6855
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !6856
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !6857
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #8, !dbg !6859
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !6860

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !6861
  %12 = bitcast i64* %11 to i8*, !dbg !6861
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !6861
  %shr.i = ashr i64 %13, 3, !dbg !6861
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !6861
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !6863
  %and.i = and i64 %14, 7, !dbg !6863
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !6863
  %shl.i = shl i32 1, %sh_prom.i, !dbg !6863
  %neg.i = xor i32 %shl.i, -1, !dbg !6864
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #8, !dbg !6865, !srcloc !6866
  br label %arch_clear_bit.exit, !dbg !6867

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !6868
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !6870
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #8, !dbg !6871, !srcloc !6872
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !6873
}

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #3

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_clear_command_ring(%struct.xhci_hcd* %xhci) #1 !dbg !6874 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %ring = alloca %struct.xhci_ring*, align 8
  %seg = alloca %struct.xhci_segment*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !6875, metadata !DIExpression()), !dbg !6876
  call void @llvm.dbg.declare(metadata %struct.xhci_ring** %ring, metadata !6877, metadata !DIExpression()), !dbg !6878
  call void @llvm.dbg.declare(metadata %struct.xhci_segment** %seg, metadata !6879, metadata !DIExpression()), !dbg !6880
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6881
  %cmd_ring = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 28, !dbg !6882
  %1 = load %struct.xhci_ring*, %struct.xhci_ring** %cmd_ring, align 8, !dbg !6882
  store %struct.xhci_ring* %1, %struct.xhci_ring** %ring, align 8, !dbg !6883
  %2 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !6884
  %deq_seg = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %2, i32 0, i32 5, !dbg !6885
  %3 = load %struct.xhci_segment*, %struct.xhci_segment** %deq_seg, align 8, !dbg !6885
  store %struct.xhci_segment* %3, %struct.xhci_segment** %seg, align 8, !dbg !6886
  br label %do.body, !dbg !6887

do.body:                                          ; preds = %do.cond, %entry
  %4 = load %struct.xhci_segment*, %struct.xhci_segment** %seg, align 8, !dbg !6888
  %trbs = getelementptr inbounds %struct.xhci_segment, %struct.xhci_segment* %4, i32 0, i32 0, !dbg !6890
  %5 = load %union.xhci_trb*, %union.xhci_trb** %trbs, align 8, !dbg !6890
  %6 = bitcast %union.xhci_trb* %5 to i8*, !dbg !6891
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 4080, i1 false), !dbg !6891
  %7 = load %struct.xhci_segment*, %struct.xhci_segment** %seg, align 8, !dbg !6892
  %trbs1 = getelementptr inbounds %struct.xhci_segment, %struct.xhci_segment* %7, i32 0, i32 0, !dbg !6893
  %8 = load %union.xhci_trb*, %union.xhci_trb** %trbs1, align 8, !dbg !6893
  %arrayidx = getelementptr %union.xhci_trb, %union.xhci_trb* %8, i64 255, !dbg !6892
  %link = bitcast %union.xhci_trb* %arrayidx to %struct.xhci_link_trb*, !dbg !6894
  %control = getelementptr inbounds %struct.xhci_link_trb, %struct.xhci_link_trb* %link, i32 0, i32 2, !dbg !6895
  %9 = load i32, i32* %control, align 4, !dbg !6896
  %and = and i32 %9, -2, !dbg !6896
  store i32 %and, i32* %control, align 4, !dbg !6896
  %10 = load %struct.xhci_segment*, %struct.xhci_segment** %seg, align 8, !dbg !6897
  %next = getelementptr inbounds %struct.xhci_segment, %struct.xhci_segment* %10, i32 0, i32 1, !dbg !6898
  %11 = load %struct.xhci_segment*, %struct.xhci_segment** %next, align 8, !dbg !6898
  store %struct.xhci_segment* %11, %struct.xhci_segment** %seg, align 8, !dbg !6899
  br label %do.cond, !dbg !6900

do.cond:                                          ; preds = %do.body
  %12 = load %struct.xhci_segment*, %struct.xhci_segment** %seg, align 8, !dbg !6901
  %13 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !6902
  %deq_seg2 = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %13, i32 0, i32 5, !dbg !6903
  %14 = load %struct.xhci_segment*, %struct.xhci_segment** %deq_seg2, align 8, !dbg !6903
  %cmp = icmp ne %struct.xhci_segment* %12, %14, !dbg !6904
  br i1 %cmp, label %do.body, label %do.end, !dbg !6900, !llvm.loop !6905

do.end:                                           ; preds = %do.cond
  %15 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !6907
  %first_seg = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %15, i32 0, i32 0, !dbg !6908
  %16 = load %struct.xhci_segment*, %struct.xhci_segment** %first_seg, align 8, !dbg !6908
  %17 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !6909
  %deq_seg3 = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %17, i32 0, i32 5, !dbg !6910
  store %struct.xhci_segment* %16, %struct.xhci_segment** %deq_seg3, align 8, !dbg !6911
  %18 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !6912
  %first_seg4 = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %18, i32 0, i32 0, !dbg !6913
  %19 = load %struct.xhci_segment*, %struct.xhci_segment** %first_seg4, align 8, !dbg !6913
  %trbs5 = getelementptr inbounds %struct.xhci_segment, %struct.xhci_segment* %19, i32 0, i32 0, !dbg !6914
  %20 = load %union.xhci_trb*, %union.xhci_trb** %trbs5, align 8, !dbg !6914
  %21 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !6915
  %dequeue = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %21, i32 0, i32 4, !dbg !6916
  store %union.xhci_trb* %20, %union.xhci_trb** %dequeue, align 8, !dbg !6917
  %22 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !6918
  %deq_seg6 = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %22, i32 0, i32 5, !dbg !6919
  %23 = load %struct.xhci_segment*, %struct.xhci_segment** %deq_seg6, align 8, !dbg !6919
  %24 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !6920
  %enq_seg = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %24, i32 0, i32 3, !dbg !6921
  store %struct.xhci_segment* %23, %struct.xhci_segment** %enq_seg, align 8, !dbg !6922
  %25 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !6923
  %dequeue7 = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %25, i32 0, i32 4, !dbg !6924
  %26 = load %union.xhci_trb*, %union.xhci_trb** %dequeue7, align 8, !dbg !6924
  %27 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !6925
  %enqueue = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %27, i32 0, i32 2, !dbg !6926
  store %union.xhci_trb* %26, %union.xhci_trb** %enqueue, align 8, !dbg !6927
  %28 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !6928
  %num_segs = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %28, i32 0, i32 10, !dbg !6929
  %29 = load i32, i32* %num_segs, align 4, !dbg !6929
  %mul = mul i32 %29, 255, !dbg !6930
  %sub = sub i32 %mul, 1, !dbg !6931
  %30 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !6932
  %num_trbs_free = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %30, i32 0, i32 11, !dbg !6933
  store i32 %sub, i32* %num_trbs_free, align 8, !dbg !6934
  %31 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !6935
  %cycle_state = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %31, i32 0, i32 7, !dbg !6936
  store i32 1, i32* %cycle_state, align 8, !dbg !6937
  %32 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6938
  call void @xhci_set_cmd_ring_deq(%struct.xhci_hcd* %32) #11, !dbg !6939
  ret void, !dbg !6940
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_save_registers(%struct.xhci_hcd* %xhci) #1 !dbg !6941 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !6942, metadata !DIExpression()), !dbg !6943
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6944
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 3, !dbg !6945
  %1 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !6945
  %command = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %1, i32 0, i32 0, !dbg !6946
  %2 = bitcast i32* %command to i8*, !dbg !6947
  %call = call i32 @readl(i8* %2) #11, !dbg !6948
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6949
  %s3 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %3, i32 0, i32 49, !dbg !6950
  %command1 = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s3, i32 0, i32 0, !dbg !6951
  store i32 %call, i32* %command1, align 8, !dbg !6952
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6953
  %op_regs2 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %4, i32 0, i32 3, !dbg !6954
  %5 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs2, align 8, !dbg !6954
  %dev_notification = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %5, i32 0, i32 5, !dbg !6955
  %6 = bitcast i32* %dev_notification to i8*, !dbg !6956
  %call3 = call i32 @readl(i8* %6) #11, !dbg !6957
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6958
  %s34 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 49, !dbg !6959
  %dev_nt = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s34, i32 0, i32 1, !dbg !6960
  store i32 %call3, i32* %dev_nt, align 4, !dbg !6961
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6962
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6963
  %op_regs5 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %9, i32 0, i32 3, !dbg !6964
  %10 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs5, align 8, !dbg !6964
  %dcbaa_ptr = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %10, i32 0, i32 8, !dbg !6965
  %call6 = call i64 @xhci_read_64(%struct.xhci_hcd* %8, i64* %dcbaa_ptr) #11, !dbg !6966
  %11 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6967
  %s37 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %11, i32 0, i32 49, !dbg !6968
  %dcbaa_ptr8 = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s37, i32 0, i32 2, !dbg !6969
  store i64 %call6, i64* %dcbaa_ptr8, align 8, !dbg !6970
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6971
  %op_regs9 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %12, i32 0, i32 3, !dbg !6972
  %13 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs9, align 8, !dbg !6972
  %config_reg = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %13, i32 0, i32 9, !dbg !6973
  %14 = bitcast i32* %config_reg to i8*, !dbg !6974
  %call10 = call i32 @readl(i8* %14) #11, !dbg !6975
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6976
  %s311 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %15, i32 0, i32 49, !dbg !6977
  %config_reg12 = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s311, i32 0, i32 3, !dbg !6978
  store i32 %call10, i32* %config_reg12, align 8, !dbg !6979
  %16 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6980
  %ir_set = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %16, i32 0, i32 6, !dbg !6981
  %17 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set, align 8, !dbg !6981
  %erst_size = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %17, i32 0, i32 2, !dbg !6982
  %18 = bitcast i32* %erst_size to i8*, !dbg !6983
  %call13 = call i32 @readl(i8* %18) #11, !dbg !6984
  %19 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6985
  %s314 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %19, i32 0, i32 49, !dbg !6986
  %erst_size15 = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s314, i32 0, i32 6, !dbg !6987
  store i32 %call13, i32* %erst_size15, align 4, !dbg !6988
  %20 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6989
  %21 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6990
  %ir_set16 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %21, i32 0, i32 6, !dbg !6991
  %22 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set16, align 8, !dbg !6991
  %erst_base = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %22, i32 0, i32 4, !dbg !6992
  %call17 = call i64 @xhci_read_64(%struct.xhci_hcd* %20, i64* %erst_base) #11, !dbg !6993
  %23 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6994
  %s318 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %23, i32 0, i32 49, !dbg !6995
  %erst_base19 = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s318, i32 0, i32 7, !dbg !6996
  store i64 %call17, i64* %erst_base19, align 8, !dbg !6997
  %24 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6998
  %25 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !6999
  %ir_set20 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %25, i32 0, i32 6, !dbg !7000
  %26 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set20, align 8, !dbg !7000
  %erst_dequeue = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %26, i32 0, i32 5, !dbg !7001
  %call21 = call i64 @xhci_read_64(%struct.xhci_hcd* %24, i64* %erst_dequeue) #11, !dbg !7002
  %27 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7003
  %s322 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %27, i32 0, i32 49, !dbg !7004
  %erst_dequeue23 = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s322, i32 0, i32 8, !dbg !7005
  store i64 %call21, i64* %erst_dequeue23, align 8, !dbg !7006
  %28 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7007
  %ir_set24 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %28, i32 0, i32 6, !dbg !7008
  %29 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set24, align 8, !dbg !7008
  %irq_pending = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %29, i32 0, i32 0, !dbg !7009
  %30 = bitcast i32* %irq_pending to i8*, !dbg !7010
  %call25 = call i32 @readl(i8* %30) #11, !dbg !7011
  %31 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7012
  %s326 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %31, i32 0, i32 49, !dbg !7013
  %irq_pending27 = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s326, i32 0, i32 4, !dbg !7014
  store i32 %call25, i32* %irq_pending27, align 4, !dbg !7015
  %32 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7016
  %ir_set28 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %32, i32 0, i32 6, !dbg !7017
  %33 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set28, align 8, !dbg !7017
  %irq_control = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %33, i32 0, i32 1, !dbg !7018
  %34 = bitcast i32* %irq_control to i8*, !dbg !7019
  %call29 = call i32 @readl(i8* %34) #11, !dbg !7020
  %35 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7021
  %s330 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %35, i32 0, i32 49, !dbg !7022
  %irq_control31 = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s330, i32 0, i32 5, !dbg !7023
  store i32 %call29, i32* %irq_control31, align 8, !dbg !7024
  ret void, !dbg !7025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_all_ports_seen_u0(%struct.xhci_hcd* %xhci) #1 !dbg !7026 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !7027, metadata !DIExpression()), !dbg !7028
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7029
  %port_status_u0 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 62, !dbg !7030
  %1 = load i32, i32* %port_status_u0, align 8, !dbg !7030
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7031
  %usb3_rhub = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %2, i32 0, i32 55, !dbg !7032
  %num_ports = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb3_rhub, i32 0, i32 1, !dbg !7033
  %3 = load i32, i32* %num_ports, align 8, !dbg !7033
  %shl = shl i32 1, %3, !dbg !7034
  %sub = sub i32 %shl, 1, !dbg !7035
  %cmp = icmp eq i32 %1, %sub, !dbg !7036
  %conv = zext i1 %cmp to i32, !dbg !7036
  ret i32 %conv, !dbg !7037
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_dbg_quirks(%struct.va_format* %vaf) #1 !dbg !7038 {
entry:
  %vaf.addr = alloca %struct.va_format*, align 8
  store %struct.va_format* %vaf, %struct.va_format** %vaf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.va_format** %vaf.addr, metadata !7039, metadata !DIExpression()), !dbg !7040
  ret void, !dbg !7040
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_msix_sync_irqs(%struct.xhci_hcd* %xhci) #1 !dbg !7041 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %hcd = alloca %struct.usb_hcd*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %i = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !7042, metadata !DIExpression()), !dbg !7043
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd, metadata !7044, metadata !DIExpression()), !dbg !7045
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7046
  %call = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %0) #11, !dbg !7047
  store %struct.usb_hcd* %call, %struct.usb_hcd** %hcd, align 8, !dbg !7045
  %1 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7048
  %msix_enabled = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %1, i32 0, i32 14, !dbg !7050
  %bf.load = load i16, i16* %msix_enabled, align 4, !dbg !7050
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !7050
  %bf.clear = and i16 %bf.lshr, 1, !dbg !7050
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7050
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7048
  br i1 %tobool, label %if.then, label %if.end, !dbg !7051

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !7052, metadata !DIExpression()), !dbg !7054
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7055, metadata !DIExpression()), !dbg !7057
  %2 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7057
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %2, i32 0, i32 0, !dbg !7057
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !7057
  %3 = load %struct.device*, %struct.device** %controller, align 8, !dbg !7057
  %4 = bitcast %struct.device* %3 to i8*, !dbg !7057
  store i8* %4, i8** %__mptr, align 8, !dbg !7057
  br label %do.body, !dbg !7057

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !7058

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !7057
  %add.ptr = getelementptr i8, i8* %5, i64 -176, !dbg !7057
  %6 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !7057
  store %struct.pci_dev* %6, %struct.pci_dev** %tmp, align 8, !dbg !7058
  %7 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !7057
  store %struct.pci_dev* %7, %struct.pci_dev** %pdev, align 8, !dbg !7054
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7060, metadata !DIExpression()), !dbg !7061
  store i32 0, i32* %i, align 4, !dbg !7062
  br label %for.cond, !dbg !7064

for.cond:                                         ; preds = %for.inc, %do.end
  %8 = load i32, i32* %i, align 4, !dbg !7065
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7067
  %msix_count = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %9, i32 0, i32 23, !dbg !7068
  %10 = load i32, i32* %msix_count, align 4, !dbg !7068
  %cmp = icmp slt i32 %8, %10, !dbg !7069
  br i1 %cmp, label %for.body, label %for.end, !dbg !7070

for.body:                                         ; preds = %for.cond
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7071
  %12 = load i32, i32* %i, align 4, !dbg !7072
  %call1 = call i32 @pci_irq_vector(%struct.pci_dev* %11, i32 %12) #11, !dbg !7073
  call void @synchronize_irq(i32 %call1) #11, !dbg !7074
  br label %for.inc, !dbg !7074

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !7075
  %inc = add i32 %13, 1, !dbg !7075
  store i32 %inc, i32* %i, align 4, !dbg !7075
  br label %for.cond, !dbg !7076, !llvm.loop !7077

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !7079

if.end:                                           ; preds = %for.end, %entry
  ret void, !dbg !7080
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xhci_resume(%struct.xhci_hcd* %xhci, i1 zeroext %hibernated) #1 !dbg !7081 {
entry:
  %lock.addr.i137 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i137, metadata !6333, metadata !DIExpression()), !dbg !7082
  %lock.addr.i135 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i135, metadata !6333, metadata !DIExpression()), !dbg !7084
  %lock.addr.i133 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i133, metadata !6333, metadata !DIExpression()), !dbg !7088
  %lock.addr.i131 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i131, metadata !6333, metadata !DIExpression()), !dbg !7094
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6340, metadata !DIExpression()), !dbg !7098
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %hibernated.addr = alloca i8, align 1
  %command = alloca i32, align 4
  %temp = alloca i32, align 4
  %hcd = alloca %struct.usb_hcd*, align 8
  %secondary_hcd = alloca %struct.usb_hcd*, align 8
  %retval1 = alloca i32, align 4
  %comp_timer_running = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !7100, metadata !DIExpression()), !dbg !7101
  %frombool = zext i1 %hibernated to i8
  store i8 %frombool, i8* %hibernated.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hibernated.addr, metadata !7102, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.declare(metadata i32* %command, metadata !7104, metadata !DIExpression()), !dbg !7105
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !7106, metadata !DIExpression()), !dbg !7107
  store i32 0, i32* %temp, align 4, !dbg !7107
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd, metadata !7108, metadata !DIExpression()), !dbg !7109
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7110
  %call = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %0) #11, !dbg !7111
  store %struct.usb_hcd* %call, %struct.usb_hcd** %hcd, align 8, !dbg !7109
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %secondary_hcd, metadata !7112, metadata !DIExpression()), !dbg !7113
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !7114, metadata !DIExpression()), !dbg !7115
  store i32 0, i32* %retval1, align 4, !dbg !7115
  call void @llvm.dbg.declare(metadata i8* %comp_timer_running, metadata !7116, metadata !DIExpression()), !dbg !7117
  store i8 0, i8* %comp_timer_running, align 1, !dbg !7117
  %1 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7118
  %state = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %1, i32 0, i32 27, !dbg !7120
  %2 = load i32, i32* %state, align 8, !dbg !7120
  %tobool = icmp ne i32 %2, 0, !dbg !7118
  br i1 %tobool, label %if.end, label %if.then, !dbg !7121

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7122
  br label %return, !dbg !7122

if.end:                                           ; preds = %entry
  %3 = load volatile i64, i64* @jiffies, align 8, !dbg !7123
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7123
  %usb2_rhub = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %4, i32 0, i32 54, !dbg !7123
  %bus_state = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb2_rhub, i32 0, i32 3, !dbg !7123
  %next_statechange = getelementptr inbounds %struct.xhci_bus_state, %struct.xhci_bus_state* %bus_state, i32 0, i32 1, !dbg !7123
  %5 = load i64, i64* %next_statechange, align 8, !dbg !7123
  %sub = sub i64 %3, %5, !dbg !7123
  %cmp = icmp slt i64 %sub, 0, !dbg !7123
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !7125

lor.lhs.false:                                    ; preds = %if.end
  %6 = load volatile i64, i64* @jiffies, align 8, !dbg !7126
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7126
  %usb3_rhub = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 55, !dbg !7126
  %bus_state2 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb3_rhub, i32 0, i32 3, !dbg !7126
  %next_statechange3 = getelementptr inbounds %struct.xhci_bus_state, %struct.xhci_bus_state* %bus_state2, i32 0, i32 1, !dbg !7126
  %8 = load i64, i64* %next_statechange3, align 8, !dbg !7126
  %sub4 = sub i64 %6, %8, !dbg !7126
  %cmp5 = icmp slt i64 %sub4, 0, !dbg !7126
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !7127

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @msleep(i32 100) #11, !dbg !7128
  br label %if.end7, !dbg !7128

if.end7:                                          ; preds = %if.then6, %lor.lhs.false
  %9 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7129
  %flags = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %9, i32 0, i32 12, !dbg !7130
  call void @set_bit(i64 0, i64* %flags) #11, !dbg !7131
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7132
  %shared_hcd = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %10, i32 0, i32 1, !dbg !7133
  %11 = load %struct.usb_hcd*, %struct.usb_hcd** %shared_hcd, align 8, !dbg !7133
  %flags8 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %11, i32 0, i32 12, !dbg !7134
  call void @set_bit(i64 0, i64* %flags8) #11, !dbg !7135
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7136
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %12, i32 0, i32 12, !dbg !7137
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !7138
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7139, !srcloc !6368
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7140
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !7140
  %rlock.i = bitcast %union.anon.2* %14 to %struct.raw_spinlock*, !dbg !7140
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7141
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %15, i32 0, i32 50, !dbg !7143
  %16 = load i64, i64* %quirks, align 8, !dbg !7143
  %and = and i64 %16, 128, !dbg !7144
  %tobool9 = icmp ne i64 %and, 0, !dbg !7144
  br i1 %tobool9, label %if.then12, label %lor.lhs.false10, !dbg !7145

lor.lhs.false10:                                  ; preds = %if.end7
  %17 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7146
  %broken_suspend = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %17, i32 0, i32 56, !dbg !7147
  %bf.load = load i8, i8* %broken_suspend, align 8, !dbg !7147
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !7147
  %bf.clear = and i8 %bf.lshr, 1, !dbg !7147
  %bf.cast = zext i8 %bf.clear to i32, !dbg !7147
  %tobool11 = icmp ne i32 %bf.cast, 0, !dbg !7146
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !7148

if.then12:                                        ; preds = %lor.lhs.false10, %if.end7
  store i8 1, i8* %hibernated.addr, align 1, !dbg !7149
  br label %if.end13, !dbg !7150

if.end13:                                         ; preds = %if.then12, %lor.lhs.false10
  %18 = load i8, i8* %hibernated.addr, align 1, !dbg !7151
  %tobool14 = trunc i8 %18 to i1, !dbg !7151
  br i1 %tobool14, label %if.end40, label %if.then15, !dbg !7152

if.then15:                                        ; preds = %if.end13
  %19 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7153
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %19, i32 0, i32 3, !dbg !7154
  %20 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !7154
  %status = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %20, i32 0, i32 1, !dbg !7155
  %21 = bitcast i32* %status to i8*, !dbg !7156
  %call16 = call i32 @xhci_handshake(i8* %21, i32 2048, i32 0, i32 10000000) #11, !dbg !7157
  store i32 %call16, i32* %retval1, align 4, !dbg !7158
  %22 = load i32, i32* %retval1, align 4, !dbg !7159
  %tobool17 = icmp ne i32 %22, 0, !dbg !7159
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !7160

if.then18:                                        ; preds = %if.then15
  %23 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7161
  %call19 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %23) #11, !dbg !7161
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call19, i32 0, i32 0, !dbg !7161
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !7161
  %24 = load %struct.device*, %struct.device** %controller, align 8, !dbg !7161
  %25 = load i32, i32* %retval1, align 4, !dbg !7161
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.18, i64 0, i64 0), i32 %25) #12, !dbg !7161
  %26 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7162
  %lock20 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %26, i32 0, i32 12, !dbg !7163
  store %struct.spinlock* %lock20, %struct.spinlock** %lock.addr.i131, align 8
  call void @arch_local_irq_enable() #13, !dbg !7164
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7165, !srcloc !6387
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i131, align 8, !dbg !7166
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !7166
  %rlock.i132 = bitcast %union.anon.2* %28 to %struct.raw_spinlock*, !dbg !7166
  %29 = load i32, i32* %retval1, align 4, !dbg !7167
  store i32 %29, i32* %retval, align 4, !dbg !7168
  br label %return, !dbg !7168

if.end21:                                         ; preds = %if.then15
  %30 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7169
  call void @xhci_restore_registers(%struct.xhci_hcd* %30) #11, !dbg !7170
  %31 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7171
  call void @xhci_set_cmd_ring_deq(%struct.xhci_hcd* %31) #11, !dbg !7172
  %32 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7173
  %op_regs22 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %32, i32 0, i32 3, !dbg !7174
  %33 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs22, align 8, !dbg !7174
  %command23 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %33, i32 0, i32 0, !dbg !7175
  %34 = bitcast i32* %command23 to i8*, !dbg !7176
  %call24 = call i32 @readl(i8* %34) #11, !dbg !7177
  store i32 %call24, i32* %command, align 4, !dbg !7178
  %35 = load i32, i32* %command, align 4, !dbg !7179
  %or = or i32 %35, 512, !dbg !7179
  store i32 %or, i32* %command, align 4, !dbg !7179
  %36 = load i32, i32* %command, align 4, !dbg !7180
  %37 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7181
  %op_regs25 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %37, i32 0, i32 3, !dbg !7182
  %38 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs25, align 8, !dbg !7182
  %command26 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %38, i32 0, i32 0, !dbg !7183
  %39 = bitcast i32* %command26 to i8*, !dbg !7184
  call void @writel(i32 %36, i8* %39) #11, !dbg !7185
  %40 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7186
  %op_regs27 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %40, i32 0, i32 3, !dbg !7187
  %41 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs27, align 8, !dbg !7187
  %status28 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %41, i32 0, i32 1, !dbg !7188
  %42 = bitcast i32* %status28 to i8*, !dbg !7189
  %call29 = call i32 @xhci_handshake(i8* %42, i32 512, i32 0, i32 100000) #11, !dbg !7190
  %tobool30 = icmp ne i32 %call29, 0, !dbg !7190
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !7191

if.then31:                                        ; preds = %if.end21
  %43 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7192
  %call32 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %43) #11, !dbg !7192
  %self33 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call32, i32 0, i32 0, !dbg !7192
  %controller34 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self33, i32 0, i32 0, !dbg !7192
  %44 = load %struct.device*, %struct.device** %controller34, align 8, !dbg !7192
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %44, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0)) #12, !dbg !7192
  %45 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7193
  %lock35 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %45, i32 0, i32 12, !dbg !7194
  store %struct.spinlock* %lock35, %struct.spinlock** %lock.addr.i133, align 8
  call void @arch_local_irq_enable() #13, !dbg !7195
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7196, !srcloc !6387
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i133, align 8, !dbg !7197
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !7197
  %rlock.i134 = bitcast %union.anon.2* %47 to %struct.raw_spinlock*, !dbg !7197
  store i32 -110, i32* %retval, align 4, !dbg !7198
  br label %return, !dbg !7198

if.end36:                                         ; preds = %if.end21
  %48 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7199
  %op_regs37 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %48, i32 0, i32 3, !dbg !7200
  %49 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs37, align 8, !dbg !7200
  %status38 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %49, i32 0, i32 1, !dbg !7201
  %50 = bitcast i32* %status38 to i8*, !dbg !7202
  %call39 = call i32 @readl(i8* %50) #11, !dbg !7203
  store i32 %call39, i32* %temp, align 4, !dbg !7204
  br label %if.end40, !dbg !7205

if.end40:                                         ; preds = %if.end36, %if.end13
  %51 = load i32, i32* %temp, align 4, !dbg !7206
  %and41 = and i32 %51, 1024, !dbg !7207
  %tobool42 = icmp ne i32 %and41, 0, !dbg !7207
  br i1 %tobool42, label %if.then45, label %lor.lhs.false43, !dbg !7208

lor.lhs.false43:                                  ; preds = %if.end40
  %52 = load i8, i8* %hibernated.addr, align 1, !dbg !7209
  %tobool44 = trunc i8 %52 to i1, !dbg !7209
  br i1 %tobool44, label %if.then45, label %if.end94, !dbg !7210

if.then45:                                        ; preds = %lor.lhs.false43, %if.end40
  %53 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7211
  %quirks46 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %53, i32 0, i32 50, !dbg !7213
  %54 = load i64, i64* %quirks46, align 8, !dbg !7213
  %and47 = and i64 %54, 16384, !dbg !7214
  %tobool48 = icmp ne i64 %and47, 0, !dbg !7214
  br i1 %tobool48, label %land.lhs.true, label %if.end53, !dbg !7215

land.lhs.true:                                    ; preds = %if.then45
  %55 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7216
  %call49 = call i32 @xhci_all_ports_seen_u0(%struct.xhci_hcd* %55) #11, !dbg !7217
  %tobool50 = icmp ne i32 %call49, 0, !dbg !7217
  br i1 %tobool50, label %if.end53, label %if.then51, !dbg !7218

if.then51:                                        ; preds = %land.lhs.true
  %56 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7219
  %comp_mode_recovery_timer = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %56, i32 0, i32 61, !dbg !7219
  %call52 = call i32 @del_timer(%struct.timer_list* %comp_mode_recovery_timer) #11, !dbg !7219
  %57 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7221
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %57, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20, i64 0, i64 0)) #11, !dbg !7222
  br label %if.end53, !dbg !7223

if.end53:                                         ; preds = %if.then51, %land.lhs.true, %if.then45
  %58 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7224
  %main_hcd = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %58, i32 0, i32 0, !dbg !7225
  %59 = load %struct.usb_hcd*, %struct.usb_hcd** %main_hcd, align 8, !dbg !7225
  %self54 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %59, i32 0, i32 0, !dbg !7226
  %root_hub = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self54, i32 0, i32 11, !dbg !7227
  %60 = load %struct.usb_device*, %struct.usb_device** %root_hub, align 8, !dbg !7227
  call void @usb_root_hub_lost_power(%struct.usb_device* %60) #11, !dbg !7228
  %61 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7229
  %shared_hcd55 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %61, i32 0, i32 1, !dbg !7230
  %62 = load %struct.usb_hcd*, %struct.usb_hcd** %shared_hcd55, align 8, !dbg !7230
  %self56 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %62, i32 0, i32 0, !dbg !7231
  %root_hub57 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self56, i32 0, i32 11, !dbg !7232
  %63 = load %struct.usb_device*, %struct.usb_device** %root_hub57, align 8, !dbg !7232
  call void @usb_root_hub_lost_power(%struct.usb_device* %63) #11, !dbg !7233
  %64 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7234
  %call58 = call i32 @xhci_halt(%struct.xhci_hcd* %64) #11, !dbg !7235
  %65 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7236
  call void @xhci_zero_64b_regs(%struct.xhci_hcd* %65) #11, !dbg !7237
  %66 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7238
  %call59 = call i32 @xhci_reset(%struct.xhci_hcd* %66) #11, !dbg !7239
  store i32 %call59, i32* %retval1, align 4, !dbg !7240
  %67 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7241
  %lock60 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %67, i32 0, i32 12, !dbg !7242
  store %struct.spinlock* %lock60, %struct.spinlock** %lock.addr.i135, align 8
  call void @arch_local_irq_enable() #13, !dbg !7243
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7244, !srcloc !6387
  %68 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i135, align 8, !dbg !7245
  %69 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %68, i32 0, i32 0, !dbg !7245
  %rlock.i136 = bitcast %union.anon.2* %69 to %struct.raw_spinlock*, !dbg !7245
  %70 = load i32, i32* %retval1, align 4, !dbg !7246
  %tobool61 = icmp ne i32 %70, 0, !dbg !7246
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !7248

if.then62:                                        ; preds = %if.end53
  %71 = load i32, i32* %retval1, align 4, !dbg !7249
  store i32 %71, i32* %retval, align 4, !dbg !7250
  br label %return, !dbg !7250

if.end63:                                         ; preds = %if.end53
  %72 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7251
  call void @xhci_cleanup_msix(%struct.xhci_hcd* %72) #11, !dbg !7252
  %73 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7253
  %op_regs64 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %73, i32 0, i32 3, !dbg !7254
  %74 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs64, align 8, !dbg !7254
  %status65 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %74, i32 0, i32 1, !dbg !7255
  %75 = bitcast i32* %status65 to i8*, !dbg !7256
  %call66 = call i32 @readl(i8* %75) #11, !dbg !7257
  store i32 %call66, i32* %temp, align 4, !dbg !7258
  %76 = load i32, i32* %temp, align 4, !dbg !7259
  %and67 = and i32 %76, -8192, !dbg !7260
  %or68 = or i32 %and67, 8, !dbg !7261
  %77 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7262
  %op_regs69 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %77, i32 0, i32 3, !dbg !7263
  %78 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs69, align 8, !dbg !7263
  %status70 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %78, i32 0, i32 1, !dbg !7264
  %79 = bitcast i32* %status70 to i8*, !dbg !7265
  call void @writel(i32 %or68, i8* %79) #11, !dbg !7266
  %80 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7267
  %ir_set = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %80, i32 0, i32 6, !dbg !7268
  %81 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set, align 8, !dbg !7268
  %irq_pending = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %81, i32 0, i32 0, !dbg !7269
  %82 = bitcast i32* %irq_pending to i8*, !dbg !7270
  %call71 = call i32 @readl(i8* %82) #11, !dbg !7271
  store i32 %call71, i32* %temp, align 4, !dbg !7272
  %83 = load i32, i32* %temp, align 4, !dbg !7273
  %and72 = and i32 %83, -2, !dbg !7273
  %and73 = and i32 %and72, -3, !dbg !7273
  %84 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7274
  %ir_set74 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %84, i32 0, i32 6, !dbg !7275
  %85 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set74, align 8, !dbg !7275
  %irq_pending75 = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %85, i32 0, i32 0, !dbg !7276
  %86 = bitcast i32* %irq_pending75 to i8*, !dbg !7277
  call void @writel(i32 %and73, i8* %86) #11, !dbg !7278
  %87 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7279
  call void @xhci_mem_cleanup(%struct.xhci_hcd* %87) #11, !dbg !7280
  %88 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7281
  call void @xhci_debugfs_exit(%struct.xhci_hcd* %88) #11, !dbg !7282
  %89 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7283
  %call76 = call i32 @usb_hcd_is_primary_hcd(%struct.usb_hcd* %89) #11, !dbg !7285
  %tobool77 = icmp ne i32 %call76, 0, !dbg !7285
  br i1 %tobool77, label %if.else, label %if.then78, !dbg !7286

if.then78:                                        ; preds = %if.end63
  %90 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7287
  store %struct.usb_hcd* %90, %struct.usb_hcd** %secondary_hcd, align 8, !dbg !7288
  br label %if.end80, !dbg !7289

if.else:                                          ; preds = %if.end63
  %91 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7290
  %shared_hcd79 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %91, i32 0, i32 1, !dbg !7291
  %92 = load %struct.usb_hcd*, %struct.usb_hcd** %shared_hcd79, align 8, !dbg !7291
  store %struct.usb_hcd* %92, %struct.usb_hcd** %secondary_hcd, align 8, !dbg !7292
  br label %if.end80

if.end80:                                         ; preds = %if.else, %if.then78
  %93 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7293
  %primary_hcd = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %93, i32 0, i32 25, !dbg !7294
  %94 = load %struct.usb_hcd*, %struct.usb_hcd** %primary_hcd, align 8, !dbg !7294
  %call81 = call i32 @xhci_init(%struct.usb_hcd* %94) #11, !dbg !7295
  store i32 %call81, i32* %retval1, align 4, !dbg !7296
  %95 = load i32, i32* %retval1, align 4, !dbg !7297
  %tobool82 = icmp ne i32 %95, 0, !dbg !7297
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !7299

if.then83:                                        ; preds = %if.end80
  %96 = load i32, i32* %retval1, align 4, !dbg !7300
  store i32 %96, i32* %retval, align 4, !dbg !7301
  br label %return, !dbg !7301

if.end84:                                         ; preds = %if.end80
  store i8 1, i8* %comp_timer_running, align 1, !dbg !7302
  %97 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7303
  %primary_hcd85 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %97, i32 0, i32 25, !dbg !7304
  %98 = load %struct.usb_hcd*, %struct.usb_hcd** %primary_hcd85, align 8, !dbg !7304
  %call86 = call i32 @xhci_run(%struct.usb_hcd* %98) #11, !dbg !7305
  store i32 %call86, i32* %retval1, align 4, !dbg !7306
  %99 = load i32, i32* %retval1, align 4, !dbg !7307
  %tobool87 = icmp ne i32 %99, 0, !dbg !7307
  br i1 %tobool87, label %if.end90, label %if.then88, !dbg !7309

if.then88:                                        ; preds = %if.end84
  %100 = load %struct.usb_hcd*, %struct.usb_hcd** %secondary_hcd, align 8, !dbg !7310
  %call89 = call i32 @xhci_run(%struct.usb_hcd* %100) #11, !dbg !7312
  store i32 %call89, i32* %retval1, align 4, !dbg !7313
  br label %if.end90, !dbg !7314

if.end90:                                         ; preds = %if.then88, %if.end84
  %101 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7315
  %state91 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %101, i32 0, i32 27, !dbg !7316
  store i32 4, i32* %state91, align 8, !dbg !7317
  %102 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7318
  %shared_hcd92 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %102, i32 0, i32 1, !dbg !7319
  %103 = load %struct.usb_hcd*, %struct.usb_hcd** %shared_hcd92, align 8, !dbg !7319
  %state93 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %103, i32 0, i32 27, !dbg !7320
  store i32 4, i32* %state93, align 8, !dbg !7321
  br label %done, !dbg !7322

if.end94:                                         ; preds = %lor.lhs.false43
  %104 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7323
  %op_regs95 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %104, i32 0, i32 3, !dbg !7324
  %105 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs95, align 8, !dbg !7324
  %command96 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %105, i32 0, i32 0, !dbg !7325
  %106 = bitcast i32* %command96 to i8*, !dbg !7326
  %call97 = call i32 @readl(i8* %106) #11, !dbg !7327
  store i32 %call97, i32* %command, align 4, !dbg !7328
  %107 = load i32, i32* %command, align 4, !dbg !7329
  %or98 = or i32 %107, 1, !dbg !7329
  store i32 %or98, i32* %command, align 4, !dbg !7329
  %108 = load i32, i32* %command, align 4, !dbg !7330
  %109 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7331
  %op_regs99 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %109, i32 0, i32 3, !dbg !7332
  %110 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs99, align 8, !dbg !7332
  %command100 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %110, i32 0, i32 0, !dbg !7333
  %111 = bitcast i32* %command100 to i8*, !dbg !7334
  call void @writel(i32 %108, i8* %111) #11, !dbg !7335
  %112 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7336
  %op_regs101 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %112, i32 0, i32 3, !dbg !7337
  %113 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs101, align 8, !dbg !7337
  %status102 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %113, i32 0, i32 1, !dbg !7338
  %114 = bitcast i32* %status102 to i8*, !dbg !7339
  %call103 = call i32 @xhci_handshake(i8* %114, i32 1, i32 0, i32 250000) #11, !dbg !7340
  %115 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7341
  %lock104 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %115, i32 0, i32 12, !dbg !7342
  store %struct.spinlock* %lock104, %struct.spinlock** %lock.addr.i137, align 8
  call void @arch_local_irq_enable() #13, !dbg !7343
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !7344, !srcloc !6387
  %116 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i137, align 8, !dbg !7345
  %117 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %116, i32 0, i32 0, !dbg !7345
  %rlock.i138 = bitcast %union.anon.2* %117 to %struct.raw_spinlock*, !dbg !7345
  %118 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7346
  %call105 = call i32 @xhci_dbc_resume(%struct.xhci_hcd* %118) #11, !dbg !7347
  br label %done, !dbg !7347

done:                                             ; preds = %if.end94, %if.end90
  call void @llvm.dbg.label(metadata !7348), !dbg !7349
  %119 = load i32, i32* %retval1, align 4, !dbg !7350
  %cmp106 = icmp eq i32 %119, 0, !dbg !7352
  br i1 %cmp106, label %if.then107, label %if.end112, !dbg !7353

if.then107:                                       ; preds = %done
  %120 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7354
  %call108 = call zeroext i1 @xhci_pending_portevent(%struct.xhci_hcd* %120) #11, !dbg !7357
  br i1 %call108, label %if.then109, label %if.end111, !dbg !7358

if.then109:                                       ; preds = %if.then107
  %121 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7359
  %shared_hcd110 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %121, i32 0, i32 1, !dbg !7361
  %122 = load %struct.usb_hcd*, %struct.usb_hcd** %shared_hcd110, align 8, !dbg !7361
  call void @usb_hcd_resume_root_hub(%struct.usb_hcd* %122) #11, !dbg !7362
  %123 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7363
  call void @usb_hcd_resume_root_hub(%struct.usb_hcd* %123) #11, !dbg !7364
  br label %if.end111, !dbg !7365

if.end111:                                        ; preds = %if.then109, %if.then107
  br label %if.end112, !dbg !7366

if.end112:                                        ; preds = %if.end111, %done
  %124 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7367
  %quirks113 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %124, i32 0, i32 50, !dbg !7369
  %125 = load i64, i64* %quirks113, align 8, !dbg !7369
  %and114 = and i64 %125, 16384, !dbg !7370
  %tobool115 = icmp ne i64 %and114, 0, !dbg !7370
  br i1 %tobool115, label %land.lhs.true116, label %if.end119, !dbg !7371

land.lhs.true116:                                 ; preds = %if.end112
  %126 = load i8, i8* %comp_timer_running, align 1, !dbg !7372
  %tobool117 = trunc i8 %126 to i1, !dbg !7372
  br i1 %tobool117, label %if.end119, label %if.then118, !dbg !7373

if.then118:                                       ; preds = %land.lhs.true116
  %127 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7374
  call void @compliance_mode_recovery_timer_init(%struct.xhci_hcd* %127) #11, !dbg !7375
  br label %if.end119, !dbg !7375

if.end119:                                        ; preds = %if.then118, %land.lhs.true116, %if.end112
  %128 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7376
  %quirks120 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %128, i32 0, i32 50, !dbg !7378
  %129 = load i64, i64* %quirks120, align 8, !dbg !7378
  %and121 = and i64 %129, 268435456, !dbg !7379
  %tobool122 = icmp ne i64 %and121, 0, !dbg !7379
  br i1 %tobool122, label %if.then123, label %if.end126, !dbg !7380

if.then123:                                       ; preds = %if.end119
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7381, metadata !DIExpression()), !dbg !7383
  %130 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7383
  %self124 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %130, i32 0, i32 0, !dbg !7383
  %controller125 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self124, i32 0, i32 0, !dbg !7383
  %131 = load %struct.device*, %struct.device** %controller125, align 8, !dbg !7383
  %132 = bitcast %struct.device* %131 to i8*, !dbg !7383
  store i8* %132, i8** %__mptr, align 8, !dbg !7383
  br label %do.body, !dbg !7383

do.body:                                          ; preds = %if.then123
  br label %do.end, !dbg !7384

do.end:                                           ; preds = %do.body
  %133 = load i8*, i8** %__mptr, align 8, !dbg !7383
  %add.ptr = getelementptr i8, i8* %133, i64 -176, !dbg !7383
  %134 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !7383
  store %struct.pci_dev* %134, %struct.pci_dev** %tmp, align 8, !dbg !7384
  %135 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !7383
  call void @usb_asmedia_modifyflowcontrol(%struct.pci_dev* %135) #11, !dbg !7386
  br label %if.end126, !dbg !7386

if.end126:                                        ; preds = %do.end, %if.end119
  %136 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7387
  %shared_hcd127 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %136, i32 0, i32 1, !dbg !7388
  %137 = load %struct.usb_hcd*, %struct.usb_hcd** %shared_hcd127, align 8, !dbg !7388
  %flags128 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %137, i32 0, i32 12, !dbg !7389
  call void @set_bit(i64 2, i64* %flags128) #11, !dbg !7390
  %138 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7391
  %shared_hcd129 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %138, i32 0, i32 1, !dbg !7392
  %139 = load %struct.usb_hcd*, %struct.usb_hcd** %shared_hcd129, align 8, !dbg !7392
  call void @usb_hcd_poll_rh_status(%struct.usb_hcd* %139) #11, !dbg !7393
  %140 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7394
  %flags130 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %140, i32 0, i32 12, !dbg !7395
  call void @set_bit(i64 2, i64* %flags130) #11, !dbg !7396
  %141 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7397
  call void @usb_hcd_poll_rh_status(%struct.usb_hcd* %141) #11, !dbg !7398
  %142 = load i32, i32* %retval1, align 4, !dbg !7399
  store i32 %142, i32* %retval, align 4, !dbg !7400
  br label %return, !dbg !7400

return:                                           ; preds = %if.end126, %if.then83, %if.then62, %if.then31, %if.then18, %if.then
  %143 = load i32, i32* %retval, align 4, !dbg !7401
  ret i32 %143, !dbg !7401
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #1 !dbg !7402 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7403, metadata !DIExpression()), !dbg !7405
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7407, metadata !DIExpression()), !dbg !7408
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !6835, metadata !DIExpression()), !dbg !7409
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6842, metadata !DIExpression()), !dbg !7411
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7412, metadata !DIExpression()), !dbg !7413
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7414, metadata !DIExpression()), !dbg !7415
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7416
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7417
  %div = sdiv i64 %1, 64, !dbg !7417
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7418
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7416
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7419
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7420
  %conv.i = trunc i64 %4 to i32, !dbg !7420
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !7421
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7422
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7422
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !7422
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7423
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7424
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7425
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #8, !dbg !7427
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7428

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7429
  %12 = bitcast i64* %11 to i8*, !dbg !7429
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7429
  %shr.i = ashr i64 %13, 3, !dbg !7429
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7429
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7431
  %and.i = and i64 %14, 7, !dbg !7431
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7431
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7431
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #8, !dbg !7432, !srcloc !7433
  br label %arch_set_bit.exit, !dbg !7434

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7435
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7437
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #8, !dbg !7438, !srcloc !7439
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_restore_registers(%struct.xhci_hcd* %xhci) #1 !dbg !7441 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !7442, metadata !DIExpression()), !dbg !7443
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7444
  %s3 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 49, !dbg !7445
  %command = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s3, i32 0, i32 0, !dbg !7446
  %1 = load i32, i32* %command, align 8, !dbg !7446
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7447
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %2, i32 0, i32 3, !dbg !7448
  %3 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !7448
  %command1 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %3, i32 0, i32 0, !dbg !7449
  %4 = bitcast i32* %command1 to i8*, !dbg !7450
  call void @writel(i32 %1, i8* %4) #11, !dbg !7451
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7452
  %s32 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 49, !dbg !7453
  %dev_nt = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s32, i32 0, i32 1, !dbg !7454
  %6 = load i32, i32* %dev_nt, align 4, !dbg !7454
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7455
  %op_regs3 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 3, !dbg !7456
  %8 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs3, align 8, !dbg !7456
  %dev_notification = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %8, i32 0, i32 5, !dbg !7457
  %9 = bitcast i32* %dev_notification to i8*, !dbg !7458
  call void @writel(i32 %6, i8* %9) #11, !dbg !7459
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7460
  %11 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7461
  %s34 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %11, i32 0, i32 49, !dbg !7462
  %dcbaa_ptr = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s34, i32 0, i32 2, !dbg !7463
  %12 = load i64, i64* %dcbaa_ptr, align 8, !dbg !7463
  %13 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7464
  %op_regs5 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %13, i32 0, i32 3, !dbg !7465
  %14 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs5, align 8, !dbg !7465
  %dcbaa_ptr6 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %14, i32 0, i32 8, !dbg !7466
  call void @xhci_write_64(%struct.xhci_hcd* %10, i64 %12, i64* %dcbaa_ptr6) #11, !dbg !7467
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7468
  %s37 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %15, i32 0, i32 49, !dbg !7469
  %config_reg = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s37, i32 0, i32 3, !dbg !7470
  %16 = load i32, i32* %config_reg, align 8, !dbg !7470
  %17 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7471
  %op_regs8 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %17, i32 0, i32 3, !dbg !7472
  %18 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs8, align 8, !dbg !7472
  %config_reg9 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %18, i32 0, i32 9, !dbg !7473
  %19 = bitcast i32* %config_reg9 to i8*, !dbg !7474
  call void @writel(i32 %16, i8* %19) #11, !dbg !7475
  %20 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7476
  %s310 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %20, i32 0, i32 49, !dbg !7477
  %erst_size = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s310, i32 0, i32 6, !dbg !7478
  %21 = load i32, i32* %erst_size, align 4, !dbg !7478
  %22 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7479
  %ir_set = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %22, i32 0, i32 6, !dbg !7480
  %23 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set, align 8, !dbg !7480
  %erst_size11 = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %23, i32 0, i32 2, !dbg !7481
  %24 = bitcast i32* %erst_size11 to i8*, !dbg !7482
  call void @writel(i32 %21, i8* %24) #11, !dbg !7483
  %25 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7484
  %26 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7485
  %s312 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %26, i32 0, i32 49, !dbg !7486
  %erst_base = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s312, i32 0, i32 7, !dbg !7487
  %27 = load i64, i64* %erst_base, align 8, !dbg !7487
  %28 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7488
  %ir_set13 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %28, i32 0, i32 6, !dbg !7489
  %29 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set13, align 8, !dbg !7489
  %erst_base14 = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %29, i32 0, i32 4, !dbg !7490
  call void @xhci_write_64(%struct.xhci_hcd* %25, i64 %27, i64* %erst_base14) #11, !dbg !7491
  %30 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7492
  %31 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7493
  %s315 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %31, i32 0, i32 49, !dbg !7494
  %erst_dequeue = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s315, i32 0, i32 8, !dbg !7495
  %32 = load i64, i64* %erst_dequeue, align 8, !dbg !7495
  %33 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7496
  %ir_set16 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %33, i32 0, i32 6, !dbg !7497
  %34 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set16, align 8, !dbg !7497
  %erst_dequeue17 = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %34, i32 0, i32 5, !dbg !7498
  call void @xhci_write_64(%struct.xhci_hcd* %30, i64 %32, i64* %erst_dequeue17) #11, !dbg !7499
  %35 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7500
  %s318 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %35, i32 0, i32 49, !dbg !7501
  %irq_pending = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s318, i32 0, i32 4, !dbg !7502
  %36 = load i32, i32* %irq_pending, align 4, !dbg !7502
  %37 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7503
  %ir_set19 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %37, i32 0, i32 6, !dbg !7504
  %38 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set19, align 8, !dbg !7504
  %irq_pending20 = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %38, i32 0, i32 0, !dbg !7505
  %39 = bitcast i32* %irq_pending20 to i8*, !dbg !7506
  call void @writel(i32 %36, i8* %39) #11, !dbg !7507
  %40 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7508
  %s321 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %40, i32 0, i32 49, !dbg !7509
  %irq_control = getelementptr inbounds %struct.s3_save, %struct.s3_save* %s321, i32 0, i32 5, !dbg !7510
  %41 = load i32, i32* %irq_control, align 8, !dbg !7510
  %42 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7511
  %ir_set22 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %42, i32 0, i32 6, !dbg !7512
  %43 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set22, align 8, !dbg !7512
  %irq_control23 = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %43, i32 0, i32 1, !dbg !7513
  %44 = bitcast i32* %irq_control23 to i8*, !dbg !7514
  call void @writel(i32 %41, i8* %44) #11, !dbg !7515
  ret void, !dbg !7516
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_set_cmd_ring_deq(%struct.xhci_hcd* %xhci) #1 !dbg !7517 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %val_64 = alloca i64, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !7518, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.declare(metadata i64* %val_64, metadata !7520, metadata !DIExpression()), !dbg !7521
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7522
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7523
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %1, i32 0, i32 3, !dbg !7524
  %2 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !7524
  %cmd_ring = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %2, i32 0, i32 6, !dbg !7525
  %call = call i64 @xhci_read_64(%struct.xhci_hcd* %0, i64* %cmd_ring) #11, !dbg !7526
  store i64 %call, i64* %val_64, align 8, !dbg !7527
  %3 = load i64, i64* %val_64, align 8, !dbg !7528
  %and = and i64 %3, 63, !dbg !7529
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7530
  %cmd_ring1 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %4, i32 0, i32 28, !dbg !7531
  %5 = load %struct.xhci_ring*, %struct.xhci_ring** %cmd_ring1, align 8, !dbg !7531
  %deq_seg = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %5, i32 0, i32 5, !dbg !7532
  %6 = load %struct.xhci_segment*, %struct.xhci_segment** %deq_seg, align 8, !dbg !7532
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7533
  %cmd_ring2 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 28, !dbg !7534
  %8 = load %struct.xhci_ring*, %struct.xhci_ring** %cmd_ring2, align 8, !dbg !7534
  %dequeue = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %8, i32 0, i32 4, !dbg !7535
  %9 = load %union.xhci_trb*, %union.xhci_trb** %dequeue, align 8, !dbg !7535
  %call3 = call i64 @xhci_trb_virt_to_dma(%struct.xhci_segment* %6, %union.xhci_trb* %9) #11, !dbg !7536
  %and4 = and i64 %call3, -64, !dbg !7537
  %or = or i64 %and, %and4, !dbg !7538
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7539
  %cmd_ring5 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %10, i32 0, i32 28, !dbg !7540
  %11 = load %struct.xhci_ring*, %struct.xhci_ring** %cmd_ring5, align 8, !dbg !7540
  %cycle_state = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %11, i32 0, i32 7, !dbg !7541
  %12 = load i32, i32* %cycle_state, align 8, !dbg !7541
  %conv = zext i32 %12 to i64, !dbg !7539
  %or6 = or i64 %or, %conv, !dbg !7542
  store i64 %or6, i64* %val_64, align 8, !dbg !7543
  %13 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7544
  %14 = load i64, i64* %val_64, align 8, !dbg !7545
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %13, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.44, i64 0, i64 0), i64 %14) #11, !dbg !7546
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7547
  %16 = load i64, i64* %val_64, align 8, !dbg !7548
  %17 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7549
  %op_regs7 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %17, i32 0, i32 3, !dbg !7550
  %18 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs7, align 8, !dbg !7550
  %cmd_ring8 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %18, i32 0, i32 6, !dbg !7551
  call void @xhci_write_64(%struct.xhci_hcd* %15, i64 %16, i64* %cmd_ring8) #11, !dbg !7552
  ret void, !dbg !7553
}

; Function Attrs: noredzone
declare dso_local void @usb_root_hub_lost_power(%struct.usb_device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_zero_64b_regs(%struct.xhci_hcd* %xhci) #1 !dbg !7554 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %dev = alloca %struct.device*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %val = alloca i64, align 8
  %ir = alloca %struct.xhci_intr_reg*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !7555, metadata !DIExpression()), !dbg !7556
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !7557, metadata !DIExpression()), !dbg !7558
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7559
  %call = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %0) #11, !dbg !7560
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call, i32 0, i32 0, !dbg !7561
  %sysdev = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 1, !dbg !7562
  %1 = load %struct.device*, %struct.device** %sysdev, align 8, !dbg !7562
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !7558
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7563, metadata !DIExpression()), !dbg !7564
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7565, metadata !DIExpression()), !dbg !7566
  call void @llvm.dbg.declare(metadata i64* %val, metadata !7567, metadata !DIExpression()), !dbg !7568
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7569
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %2, i32 0, i32 50, !dbg !7571
  %3 = load i64, i64* %quirks, align 8, !dbg !7571
  %and = and i64 %3, 4294967296, !dbg !7572
  %tobool = icmp ne i64 %and, 0, !dbg !7572
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7573

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev, align 8, !dbg !7574
  %call1 = call zeroext i1 @device_iommu_mapped(%struct.device* %4) #11, !dbg !7575
  br i1 %call1, label %if.end, label %if.then, !dbg !7576

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end61, !dbg !7577

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7578
  %call2 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %5) #11, !dbg !7578
  %self3 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call2, i32 0, i32 0, !dbg !7578
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self3, i32 0, i32 0, !dbg !7578
  %6 = load %struct.device*, %struct.device** %controller, align 8, !dbg !7578
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %6, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.45, i64 0, i64 0)) #12, !dbg !7578
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7579
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 3, !dbg !7580
  %8 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !7580
  %command = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %8, i32 0, i32 0, !dbg !7581
  %9 = bitcast i32* %command to i8*, !dbg !7582
  %call4 = call i32 @readl(i8* %9) #11, !dbg !7583
  %conv = zext i32 %call4 to i64, !dbg !7583
  store i64 %conv, i64* %val, align 8, !dbg !7584
  %10 = load i64, i64* %val, align 8, !dbg !7585
  %and5 = and i64 %10, -9, !dbg !7585
  store i64 %and5, i64* %val, align 8, !dbg !7585
  %11 = load i64, i64* %val, align 8, !dbg !7586
  %conv6 = trunc i64 %11 to i32, !dbg !7586
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7587
  %op_regs7 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %12, i32 0, i32 3, !dbg !7588
  %13 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs7, align 8, !dbg !7588
  %command8 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %13, i32 0, i32 0, !dbg !7589
  %14 = bitcast i32* %command8 to i8*, !dbg !7590
  call void @writel(i32 %conv6, i8* %14) #11, !dbg !7591
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7592
  %op_regs9 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %15, i32 0, i32 3, !dbg !7593
  %16 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs9, align 8, !dbg !7593
  %status = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %16, i32 0, i32 1, !dbg !7594
  %17 = bitcast i32* %status to i8*, !dbg !7595
  %call10 = call i32 @readl(i8* %17) #11, !dbg !7596
  %conv11 = zext i32 %call10 to i64, !dbg !7596
  store i64 %conv11, i64* %val, align 8, !dbg !7597
  %18 = load i64, i64* %val, align 8, !dbg !7598
  %or = or i64 %18, 4, !dbg !7598
  store i64 %or, i64* %val, align 8, !dbg !7598
  %19 = load i64, i64* %val, align 8, !dbg !7599
  %conv12 = trunc i64 %19 to i32, !dbg !7599
  %20 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7600
  %op_regs13 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %20, i32 0, i32 3, !dbg !7601
  %21 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs13, align 8, !dbg !7601
  %status14 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %21, i32 0, i32 1, !dbg !7602
  %22 = bitcast i32* %status14 to i8*, !dbg !7603
  call void @writel(i32 %conv12, i8* %22) #11, !dbg !7604
  %23 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7605
  %24 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7606
  %op_regs15 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %24, i32 0, i32 3, !dbg !7607
  %25 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs15, align 8, !dbg !7607
  %dcbaa_ptr = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %25, i32 0, i32 8, !dbg !7608
  %call16 = call i64 @xhci_read_64(%struct.xhci_hcd* %23, i64* %dcbaa_ptr) #11, !dbg !7609
  store i64 %call16, i64* %val, align 8, !dbg !7610
  %26 = load i64, i64* %val, align 8, !dbg !7611
  %shr = lshr i64 %26, 16, !dbg !7611
  %shr17 = lshr i64 %shr, 16, !dbg !7611
  %conv18 = trunc i64 %shr17 to i32, !dbg !7611
  %tobool19 = icmp ne i32 %conv18, 0, !dbg !7611
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !7613

if.then20:                                        ; preds = %if.end
  %27 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7614
  %28 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7615
  %op_regs21 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %28, i32 0, i32 3, !dbg !7616
  %29 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs21, align 8, !dbg !7616
  %dcbaa_ptr22 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %29, i32 0, i32 8, !dbg !7617
  call void @xhci_write_64(%struct.xhci_hcd* %27, i64 0, i64* %dcbaa_ptr22) #11, !dbg !7618
  br label %if.end23, !dbg !7618

if.end23:                                         ; preds = %if.then20, %if.end
  %30 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7619
  %31 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7620
  %op_regs24 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %31, i32 0, i32 3, !dbg !7621
  %32 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs24, align 8, !dbg !7621
  %cmd_ring = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %32, i32 0, i32 6, !dbg !7622
  %call25 = call i64 @xhci_read_64(%struct.xhci_hcd* %30, i64* %cmd_ring) #11, !dbg !7623
  store i64 %call25, i64* %val, align 8, !dbg !7624
  %33 = load i64, i64* %val, align 8, !dbg !7625
  %shr26 = lshr i64 %33, 16, !dbg !7625
  %shr27 = lshr i64 %shr26, 16, !dbg !7625
  %conv28 = trunc i64 %shr27 to i32, !dbg !7625
  %tobool29 = icmp ne i32 %conv28, 0, !dbg !7625
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !7627

if.then30:                                        ; preds = %if.end23
  %34 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7628
  %35 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7629
  %op_regs31 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %35, i32 0, i32 3, !dbg !7630
  %36 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs31, align 8, !dbg !7630
  %cmd_ring32 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %36, i32 0, i32 6, !dbg !7631
  call void @xhci_write_64(%struct.xhci_hcd* %34, i64 0, i64* %cmd_ring32) #11, !dbg !7632
  br label %if.end33, !dbg !7632

if.end33:                                         ; preds = %if.then30, %if.end23
  store i32 0, i32* %i, align 4, !dbg !7633
  br label %for.cond, !dbg !7635

for.cond:                                         ; preds = %for.inc, %if.end33
  %37 = load i32, i32* %i, align 4, !dbg !7636
  %38 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7638
  %hcs_params1 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %38, i32 0, i32 7, !dbg !7638
  %39 = load i32, i32* %hcs_params1, align 8, !dbg !7638
  %shr34 = lshr i32 %39, 8, !dbg !7638
  %and35 = and i32 %shr34, 2047, !dbg !7638
  %cmp = icmp ult i32 %37, %and35, !dbg !7639
  br i1 %cmp, label %for.body, label %for.end, !dbg !7640

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.xhci_intr_reg** %ir, metadata !7641, metadata !DIExpression()), !dbg !7643
  %40 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7644
  %run_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %40, i32 0, i32 4, !dbg !7645
  %41 = load %struct.xhci_run_regs*, %struct.xhci_run_regs** %run_regs, align 8, !dbg !7645
  %ir_set = getelementptr inbounds %struct.xhci_run_regs, %struct.xhci_run_regs* %41, i32 0, i32 2, !dbg !7646
  %42 = load i32, i32* %i, align 4, !dbg !7647
  %idxprom = sext i32 %42 to i64, !dbg !7644
  %arrayidx = getelementptr [128 x %struct.xhci_intr_reg], [128 x %struct.xhci_intr_reg]* %ir_set, i64 0, i64 %idxprom, !dbg !7644
  store %struct.xhci_intr_reg* %arrayidx, %struct.xhci_intr_reg** %ir, align 8, !dbg !7648
  %43 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7649
  %44 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir, align 8, !dbg !7650
  %erst_base = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %44, i32 0, i32 4, !dbg !7651
  %call37 = call i64 @xhci_read_64(%struct.xhci_hcd* %43, i64* %erst_base) #11, !dbg !7652
  store i64 %call37, i64* %val, align 8, !dbg !7653
  %45 = load i64, i64* %val, align 8, !dbg !7654
  %shr38 = lshr i64 %45, 16, !dbg !7654
  %shr39 = lshr i64 %shr38, 16, !dbg !7654
  %conv40 = trunc i64 %shr39 to i32, !dbg !7654
  %tobool41 = icmp ne i32 %conv40, 0, !dbg !7654
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !7656

if.then42:                                        ; preds = %for.body
  %46 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7657
  %47 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir, align 8, !dbg !7658
  %erst_base43 = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %47, i32 0, i32 4, !dbg !7659
  call void @xhci_write_64(%struct.xhci_hcd* %46, i64 0, i64* %erst_base43) #11, !dbg !7660
  br label %if.end44, !dbg !7660

if.end44:                                         ; preds = %if.then42, %for.body
  %48 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7661
  %49 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir, align 8, !dbg !7662
  %erst_dequeue = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %49, i32 0, i32 5, !dbg !7663
  %call45 = call i64 @xhci_read_64(%struct.xhci_hcd* %48, i64* %erst_dequeue) #11, !dbg !7664
  store i64 %call45, i64* %val, align 8, !dbg !7665
  %50 = load i64, i64* %val, align 8, !dbg !7666
  %shr46 = lshr i64 %50, 16, !dbg !7666
  %shr47 = lshr i64 %shr46, 16, !dbg !7666
  %conv48 = trunc i64 %shr47 to i32, !dbg !7666
  %tobool49 = icmp ne i32 %conv48, 0, !dbg !7666
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !7668

if.then50:                                        ; preds = %if.end44
  %51 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7669
  %52 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir, align 8, !dbg !7670
  %erst_dequeue51 = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %52, i32 0, i32 5, !dbg !7671
  call void @xhci_write_64(%struct.xhci_hcd* %51, i64 0, i64* %erst_dequeue51) #11, !dbg !7672
  br label %if.end52, !dbg !7672

if.end52:                                         ; preds = %if.then50, %if.end44
  br label %for.inc, !dbg !7673

for.inc:                                          ; preds = %if.end52
  %53 = load i32, i32* %i, align 4, !dbg !7674
  %inc = add i32 %53, 1, !dbg !7674
  store i32 %inc, i32* %i, align 4, !dbg !7674
  br label %for.cond, !dbg !7675, !llvm.loop !7676

for.end:                                          ; preds = %for.cond
  %54 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7678
  %op_regs53 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %54, i32 0, i32 3, !dbg !7679
  %55 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs53, align 8, !dbg !7679
  %status54 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %55, i32 0, i32 1, !dbg !7680
  %56 = bitcast i32* %status54 to i8*, !dbg !7681
  %call55 = call i32 @xhci_handshake(i8* %56, i32 4, i32 4, i32 16000) #11, !dbg !7682
  store i32 %call55, i32* %err, align 4, !dbg !7683
  %57 = load i32, i32* %err, align 4, !dbg !7684
  %tobool56 = icmp ne i32 %57, 0, !dbg !7684
  br i1 %tobool56, label %if.end61, label %if.then57, !dbg !7686

if.then57:                                        ; preds = %for.end
  %58 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7687
  %call58 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %58) #11, !dbg !7687
  %self59 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call58, i32 0, i32 0, !dbg !7687
  %controller60 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self59, i32 0, i32 0, !dbg !7687
  %59 = load %struct.device*, %struct.device** %controller60, align 8, !dbg !7687
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %59, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i64 0, i64 0)) #12, !dbg !7687
  br label %if.end61, !dbg !7687

if.end61:                                         ; preds = %if.then, %if.then57, %for.end
  ret void, !dbg !7688
}

; Function Attrs: noredzone
declare dso_local void @xhci_mem_cleanup(%struct.xhci_hcd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_debugfs_exit(%struct.xhci_hcd* %xhci) #1 !dbg !7689 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !7690, metadata !DIExpression()), !dbg !7691
  ret void, !dbg !7692
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_init(%struct.usb_hcd* %hcd) #1 !dbg !7693 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !7694
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %retval1 = alloca i32, align 4
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !7697, metadata !DIExpression()), !dbg !7698
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !7699, metadata !DIExpression()), !dbg !7700
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !7701
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !7702
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !7700
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !7703, metadata !DIExpression()), !dbg !7704
  store i32 0, i32* %retval1, align 4, !dbg !7704
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !7705
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %1, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0)) #11, !dbg !7706
  br label %do.body, !dbg !7707

do.body:                                          ; preds = %entry
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !7708
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %2, i32 0, i32 12, !dbg !7708
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7709
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !7710
  %rlock.i = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !7710
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !7708
  %lock3 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 12, !dbg !7708
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !7708
  %rlock = bitcast %union.anon.2* %6 to %struct.raw_spinlock*, !dbg !7708
  %7 = bitcast %struct.spinlock* %lock3 to i8*, !dbg !7708
  %8 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !7708
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 1 %8, i64 0, i1 false), !dbg !7708
  br label %do.end, !dbg !7708

do.end:                                           ; preds = %do.body
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !7711
  %hci_version = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %9, i32 0, i32 14, !dbg !7713
  %10 = load i16, i16* %hci_version, align 2, !dbg !7713
  %conv = zext i16 %10 to i32, !dbg !7711
  %cmp = icmp eq i32 %conv, 149, !dbg !7714
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7715

land.lhs.true:                                    ; preds = %do.end
  %11 = load i32, i32* @link_quirk, align 4, !dbg !7716
  %tobool = icmp ne i32 %11, 0, !dbg !7716
  br i1 %tobool, label %if.then, label %if.else, !dbg !7717

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !7718
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %12, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.48, i64 0, i64 0)) #11, !dbg !7720
  %13 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !7721
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %13, i32 0, i32 50, !dbg !7722
  %14 = load i64, i64* %quirks, align 8, !dbg !7723
  %or = or i64 %14, 1, !dbg !7723
  store i64 %or, i64* %quirks, align 8, !dbg !7723
  br label %if.end, !dbg !7724

if.else:                                          ; preds = %land.lhs.true, %do.end
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !7725
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %15, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.49, i64 0, i64 0)) #11, !dbg !7727
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !7728
  %call5 = call i32 @xhci_mem_init(%struct.xhci_hcd* %16, i32 3264) #11, !dbg !7729
  store i32 %call5, i32* %retval1, align 4, !dbg !7730
  %17 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !7731
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %17, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50, i64 0, i64 0)) #11, !dbg !7732
  %call6 = call zeroext i1 @xhci_compliance_mode_recovery_timer_quirk_check() #11, !dbg !7733
  br i1 %call6, label %if.then7, label %if.end10, !dbg !7735

if.then7:                                         ; preds = %if.end
  %18 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !7736
  %quirks8 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %18, i32 0, i32 50, !dbg !7738
  %19 = load i64, i64* %quirks8, align 8, !dbg !7739
  %or9 = or i64 %19, 16384, !dbg !7739
  store i64 %or9, i64* %quirks8, align 8, !dbg !7739
  %20 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !7740
  call void @compliance_mode_recovery_timer_init(%struct.xhci_hcd* %20) #11, !dbg !7741
  br label %if.end10, !dbg !7742

if.end10:                                         ; preds = %if.then7, %if.end
  %21 = load i32, i32* %retval1, align 4, !dbg !7743
  ret i32 %21, !dbg !7744
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_dbc_resume(%struct.xhci_hcd* %xhci) #1 !dbg !7745 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !7746, metadata !DIExpression()), !dbg !7747
  ret i32 0, !dbg !7748
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @xhci_pending_portevent(%struct.xhci_hcd* %xhci) #1 !dbg !7749 {
entry:
  %retval = alloca i1, align 1
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %ports = alloca %struct.xhci_port**, align 8
  %port_index = alloca i32, align 4
  %status = alloca i32, align 4
  %portsc = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !7752, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.declare(metadata %struct.xhci_port*** %ports, metadata !7754, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.declare(metadata i32* %port_index, metadata !7756, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7758, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.declare(metadata i32* %portsc, metadata !7760, metadata !DIExpression()), !dbg !7761
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7762
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 3, !dbg !7763
  %1 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !7763
  %status1 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %1, i32 0, i32 1, !dbg !7764
  %2 = bitcast i32* %status1 to i8*, !dbg !7765
  %call = call i32 @readl(i8* %2) #11, !dbg !7766
  store i32 %call, i32* %status, align 4, !dbg !7767
  %3 = load i32, i32* %status, align 4, !dbg !7768
  %and = and i32 %3, 8, !dbg !7770
  %tobool = icmp ne i32 %and, 0, !dbg !7770
  br i1 %tobool, label %if.then, label %if.end, !dbg !7771

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !7772
  br label %return, !dbg !7772

if.end:                                           ; preds = %entry
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7773
  %usb2_rhub = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %4, i32 0, i32 54, !dbg !7774
  %num_ports = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb2_rhub, i32 0, i32 1, !dbg !7775
  %5 = load i32, i32* %num_ports, align 8, !dbg !7775
  store i32 %5, i32* %port_index, align 4, !dbg !7776
  %6 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7777
  %usb2_rhub2 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %6, i32 0, i32 54, !dbg !7778
  %ports3 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb2_rhub2, i32 0, i32 0, !dbg !7779
  %7 = load %struct.xhci_port**, %struct.xhci_port*** %ports3, align 8, !dbg !7779
  store %struct.xhci_port** %7, %struct.xhci_port*** %ports, align 8, !dbg !7780
  br label %while.cond, !dbg !7781

while.cond:                                       ; preds = %if.end10, %if.end
  %8 = load i32, i32* %port_index, align 4, !dbg !7782
  %dec = add i32 %8, -1, !dbg !7782
  store i32 %dec, i32* %port_index, align 4, !dbg !7782
  %tobool4 = icmp ne i32 %8, 0, !dbg !7781
  br i1 %tobool4, label %while.body, label %while.end, !dbg !7781

while.body:                                       ; preds = %while.cond
  %9 = load %struct.xhci_port**, %struct.xhci_port*** %ports, align 8, !dbg !7783
  %10 = load i32, i32* %port_index, align 4, !dbg !7785
  %idxprom = sext i32 %10 to i64, !dbg !7783
  %arrayidx = getelementptr %struct.xhci_port*, %struct.xhci_port** %9, i64 %idxprom, !dbg !7783
  %11 = load %struct.xhci_port*, %struct.xhci_port** %arrayidx, align 8, !dbg !7783
  %addr = getelementptr inbounds %struct.xhci_port, %struct.xhci_port* %11, i32 0, i32 0, !dbg !7786
  %12 = load i32*, i32** %addr, align 8, !dbg !7786
  %13 = bitcast i32* %12 to i8*, !dbg !7783
  %call5 = call i32 @readl(i8* %13) #11, !dbg !7787
  store i32 %call5, i32* %portsc, align 4, !dbg !7788
  %14 = load i32, i32* %portsc, align 4, !dbg !7789
  %and6 = and i32 %14, 16646144, !dbg !7791
  %tobool7 = icmp ne i32 %and6, 0, !dbg !7791
  br i1 %tobool7, label %if.then9, label %lor.lhs.false, !dbg !7792

lor.lhs.false:                                    ; preds = %while.body
  %15 = load i32, i32* %portsc, align 4, !dbg !7793
  %and8 = and i32 %15, 480, !dbg !7794
  %cmp = icmp eq i32 %and8, 480, !dbg !7795
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !7796

if.then9:                                         ; preds = %lor.lhs.false, %while.body
  store i1 true, i1* %retval, align 1, !dbg !7797
  br label %return, !dbg !7797

if.end10:                                         ; preds = %lor.lhs.false
  br label %while.cond, !dbg !7781, !llvm.loop !7798

while.end:                                        ; preds = %while.cond
  %16 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7800
  %usb3_rhub = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %16, i32 0, i32 55, !dbg !7801
  %num_ports11 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb3_rhub, i32 0, i32 1, !dbg !7802
  %17 = load i32, i32* %num_ports11, align 8, !dbg !7802
  store i32 %17, i32* %port_index, align 4, !dbg !7803
  %18 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7804
  %usb3_rhub12 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %18, i32 0, i32 55, !dbg !7805
  %ports13 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb3_rhub12, i32 0, i32 0, !dbg !7806
  %19 = load %struct.xhci_port**, %struct.xhci_port*** %ports13, align 8, !dbg !7806
  store %struct.xhci_port** %19, %struct.xhci_port*** %ports, align 8, !dbg !7807
  br label %while.cond14, !dbg !7808

while.cond14:                                     ; preds = %if.end28, %while.end
  %20 = load i32, i32* %port_index, align 4, !dbg !7809
  %dec15 = add i32 %20, -1, !dbg !7809
  store i32 %dec15, i32* %port_index, align 4, !dbg !7809
  %tobool16 = icmp ne i32 %20, 0, !dbg !7808
  br i1 %tobool16, label %while.body17, label %while.end29, !dbg !7808

while.body17:                                     ; preds = %while.cond14
  %21 = load %struct.xhci_port**, %struct.xhci_port*** %ports, align 8, !dbg !7810
  %22 = load i32, i32* %port_index, align 4, !dbg !7812
  %idxprom18 = sext i32 %22 to i64, !dbg !7810
  %arrayidx19 = getelementptr %struct.xhci_port*, %struct.xhci_port** %21, i64 %idxprom18, !dbg !7810
  %23 = load %struct.xhci_port*, %struct.xhci_port** %arrayidx19, align 8, !dbg !7810
  %addr20 = getelementptr inbounds %struct.xhci_port, %struct.xhci_port* %23, i32 0, i32 0, !dbg !7813
  %24 = load i32*, i32** %addr20, align 8, !dbg !7813
  %25 = bitcast i32* %24 to i8*, !dbg !7810
  %call21 = call i32 @readl(i8* %25) #11, !dbg !7814
  store i32 %call21, i32* %portsc, align 4, !dbg !7815
  %26 = load i32, i32* %portsc, align 4, !dbg !7816
  %and22 = and i32 %26, 16646144, !dbg !7818
  %tobool23 = icmp ne i32 %and22, 0, !dbg !7818
  br i1 %tobool23, label %if.then27, label %lor.lhs.false24, !dbg !7819

lor.lhs.false24:                                  ; preds = %while.body17
  %27 = load i32, i32* %portsc, align 4, !dbg !7820
  %and25 = and i32 %27, 480, !dbg !7821
  %cmp26 = icmp eq i32 %and25, 480, !dbg !7822
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !7823

if.then27:                                        ; preds = %lor.lhs.false24, %while.body17
  store i1 true, i1* %retval, align 1, !dbg !7824
  br label %return, !dbg !7824

if.end28:                                         ; preds = %lor.lhs.false24
  br label %while.cond14, !dbg !7808, !llvm.loop !7825

while.end29:                                      ; preds = %while.cond14
  store i1 false, i1* %retval, align 1, !dbg !7827
  br label %return, !dbg !7827

return:                                           ; preds = %while.end29, %if.then27, %if.then9, %if.then
  %28 = load i1, i1* %retval, align 1, !dbg !7828
  ret i1 %28, !dbg !7828
}

; Function Attrs: noredzone
declare dso_local void @usb_hcd_resume_root_hub(%struct.usb_hcd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @compliance_mode_recovery_timer_init(%struct.xhci_hcd* %xhci) #1 !dbg !7829 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7830, metadata !DIExpression()), !dbg !7835
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !7837, metadata !DIExpression()), !dbg !7838
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7839
  %port_status_u0 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 62, !dbg !7840
  store i32 0, i32* %port_status_u0, align 8, !dbg !7841
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7842
  %comp_mode_recovery_timer = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %1, i32 0, i32 61, !dbg !7842
  call void @init_timer_key(%struct.timer_list* %comp_mode_recovery_timer, void (%struct.timer_list*)* @compliance_mode_recovery, i32 0, i8* null, %struct.lock_class_key* null) #11, !dbg !7842
  %2 = load volatile i64, i64* @jiffies, align 8, !dbg !7843
  store i32 2000, i32* %m.addr.i, align 4
  %3 = load i32, i32* %m.addr.i, align 4, !dbg !7844
  %4 = call i1 @llvm.is.constant.i32(i32 %3) #8, !dbg !7846
  br i1 %4, label %if.then.i, label %if.else.i, !dbg !7847

if.then.i:                                        ; preds = %entry
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !7848
  %cmp.i = icmp slt i32 %5, 0, !dbg !7851
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7852

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !7853
  br label %msecs_to_jiffies.exit, !dbg !7853

if.end.i:                                         ; preds = %if.then.i
  %6 = load i32, i32* %m.addr.i, align 4, !dbg !7854
  %call.i = call i64 @_msecs_to_jiffies(i32 %6) #13, !dbg !7855
  store i64 %call.i, i64* %retval.i, align 8, !dbg !7856
  br label %msecs_to_jiffies.exit, !dbg !7856

if.else.i:                                        ; preds = %entry
  %7 = load i32, i32* %m.addr.i, align 4, !dbg !7857
  %call2.i = call i64 @__msecs_to_jiffies(i32 %7) #13, !dbg !7859
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !7860
  br label %msecs_to_jiffies.exit, !dbg !7860

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %8 = load i64, i64* %retval.i, align 8, !dbg !7861
  %add = add i64 %2, %8, !dbg !7862
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7863
  %comp_mode_recovery_timer1 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %9, i32 0, i32 61, !dbg !7864
  %expires = getelementptr inbounds %struct.timer_list, %struct.timer_list* %comp_mode_recovery_timer1, i32 0, i32 1, !dbg !7865
  store i64 %add, i64* %expires, align 8, !dbg !7866
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7867
  %comp_mode_recovery_timer2 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %10, i32 0, i32 61, !dbg !7868
  call void @add_timer(%struct.timer_list* %comp_mode_recovery_timer2) #11, !dbg !7869
  %11 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7870
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %11, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.56, i64 0, i64 0)) #11, !dbg !7871
  ret void, !dbg !7872
}

; Function Attrs: noredzone
declare dso_local void @usb_hcd_poll_rh_status(%struct.usb_hcd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc) #1 !dbg !7873 {
entry:
  %desc.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  %index = alloca i32, align 4
  store %struct.usb_endpoint_descriptor* %desc, %struct.usb_endpoint_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %desc.addr, metadata !7877, metadata !DIExpression()), !dbg !7878
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7879, metadata !DIExpression()), !dbg !7880
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !7881
  %call = call i32 @usb_endpoint_xfer_control(%struct.usb_endpoint_descriptor* %0) #11, !dbg !7883
  %tobool = icmp ne i32 %call, 0, !dbg !7883
  br i1 %tobool, label %if.then, label %if.else, !dbg !7884

if.then:                                          ; preds = %entry
  %1 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !7885
  %call1 = call i32 @usb_endpoint_num(%struct.usb_endpoint_descriptor* %1) #11, !dbg !7886
  %mul = mul i32 %call1, 2, !dbg !7887
  store i32 %mul, i32* %index, align 4, !dbg !7888
  br label %if.end, !dbg !7889

if.else:                                          ; preds = %entry
  %2 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !7890
  %call2 = call i32 @usb_endpoint_num(%struct.usb_endpoint_descriptor* %2) #11, !dbg !7891
  %mul3 = mul i32 %call2, 2, !dbg !7892
  %3 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !7893
  %call4 = call i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %3) #11, !dbg !7894
  %tobool5 = icmp ne i32 %call4, 0, !dbg !7894
  %4 = zext i1 %tobool5 to i64, !dbg !7894
  %cond = select i1 %tobool5, i32 1, i32 0, !dbg !7894
  %add = add i32 %mul3, %cond, !dbg !7895
  %sub = sub i32 %add, 1, !dbg !7896
  store i32 %sub, i32* %index, align 4, !dbg !7897
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %index, align 4, !dbg !7898
  ret i32 %5, !dbg !7899
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_xfer_control(%struct.usb_endpoint_descriptor* %epd) #1 !dbg !7900 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !7905, metadata !DIExpression()), !dbg !7906
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !7907
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3, !dbg !7908
  %1 = load i8, i8* %bmAttributes, align 1, !dbg !7908
  %conv = zext i8 %1 to i32, !dbg !7907
  %and = and i32 %conv, 3, !dbg !7909
  %cmp = icmp eq i32 %and, 0, !dbg !7910
  %conv1 = zext i1 %cmp to i32, !dbg !7910
  ret i32 %conv1, !dbg !7911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_num(%struct.usb_endpoint_descriptor* %epd) #1 !dbg !7912 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !7913, metadata !DIExpression()), !dbg !7914
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !7915
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 2, !dbg !7916
  %1 = load i8, i8* %bEndpointAddress, align 1, !dbg !7916
  %conv = zext i8 %1 to i32, !dbg !7915
  %and = and i32 %conv, 15, !dbg !7917
  ret i32 %and, !dbg !7918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %epd) #1 !dbg !7919 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !7920, metadata !DIExpression()), !dbg !7921
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !7922
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 2, !dbg !7923
  %1 = load i8, i8* %bEndpointAddress, align 1, !dbg !7923
  %conv = zext i8 %1 to i32, !dbg !7922
  %and = and i32 %conv, 128, !dbg !7924
  %cmp = icmp eq i32 %and, 128, !dbg !7925
  %conv1 = zext i1 %cmp to i32, !dbg !7925
  ret i32 %conv1, !dbg !7926
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xhci_get_endpoint_address(i32 %ep_index) #1 !dbg !7927 {
entry:
  %ep_index.addr = alloca i32, align 4
  %number = alloca i32, align 4
  %direction = alloca i32, align 4
  store i32 %ep_index, i32* %ep_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep_index.addr, metadata !7930, metadata !DIExpression()), !dbg !7931
  call void @llvm.dbg.declare(metadata i32* %number, metadata !7932, metadata !DIExpression()), !dbg !7933
  %0 = load i32, i32* %ep_index.addr, align 4, !dbg !7934
  %add = add i32 %0, 2, !dbg !7934
  %sub = sub i32 %add, 1, !dbg !7934
  %div = udiv i32 %sub, 2, !dbg !7934
  store i32 %div, i32* %number, align 4, !dbg !7933
  call void @llvm.dbg.declare(metadata i32* %direction, metadata !7935, metadata !DIExpression()), !dbg !7936
  %1 = load i32, i32* %ep_index.addr, align 4, !dbg !7937
  %rem = urem i32 %1, 2, !dbg !7938
  %tobool = icmp ne i32 %rem, 0, !dbg !7937
  %2 = zext i1 %tobool to i64, !dbg !7937
  %cond = select i1 %tobool, i32 0, i32 128, !dbg !7937
  store i32 %cond, i32* %direction, align 4, !dbg !7936
  %3 = load i32, i32* %direction, align 4, !dbg !7939
  %4 = load i32, i32* %number, align 4, !dbg !7940
  %or = or i32 %3, %4, !dbg !7941
  ret i32 %or, !dbg !7942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xhci_last_valid_endpoint(i32 %added_ctxs) #1 !dbg !7943 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !7946, metadata !DIExpression()), !dbg !7950
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !7952, metadata !DIExpression()), !dbg !7953
  %added_ctxs.addr = alloca i32, align 4
  store i32 %added_ctxs, i32* %added_ctxs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %added_ctxs.addr, metadata !7954, metadata !DIExpression()), !dbg !7955
  %0 = load i32, i32* %added_ctxs.addr, align 4, !dbg !7956
  store i32 %0, i32* %x.addr.i, align 4
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !7957
  %2 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %1, i32 -1) #7, !dbg !7958, !srcloc !7959
  store i32 %2, i32* %r.i, align 4, !dbg !7958
  %3 = load i32, i32* %r.i, align 4, !dbg !7960
  %add.i = add i32 %3, 1, !dbg !7961
  %sub = sub i32 %add.i, 1, !dbg !7962
  ret i32 %sub, !dbg !7963
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xhci_update_tt_active_eps(%struct.xhci_hcd* %xhci, %struct.xhci_virt_device* %virt_dev, i32 %old_active_eps) #1 !dbg !7964 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %virt_dev.addr = alloca %struct.xhci_virt_device*, align 8
  %old_active_eps.addr = alloca i32, align 4
  %rh_bw_info = alloca %struct.xhci_root_port_bw_info*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !7967, metadata !DIExpression()), !dbg !7968
  store %struct.xhci_virt_device* %virt_dev, %struct.xhci_virt_device** %virt_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev.addr, metadata !7969, metadata !DIExpression()), !dbg !7970
  store i32 %old_active_eps, i32* %old_active_eps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %old_active_eps.addr, metadata !7971, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.declare(metadata %struct.xhci_root_port_bw_info** %rh_bw_info, metadata !7973, metadata !DIExpression()), !dbg !7974
  %0 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !7975
  %tt_info = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %0, i32 0, i32 7, !dbg !7977
  %1 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info, align 8, !dbg !7977
  %tobool = icmp ne %struct.xhci_tt_bw_info* %1, null, !dbg !7975
  br i1 %tobool, label %if.end, label %if.then, !dbg !7978

if.then:                                          ; preds = %entry
  br label %if.end21, !dbg !7979

if.end:                                           ; preds = %entry
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !7980
  %rh_bw = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %2, i32 0, i32 42, !dbg !7981
  %3 = load %struct.xhci_root_port_bw_info*, %struct.xhci_root_port_bw_info** %rh_bw, align 8, !dbg !7981
  %4 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !7982
  %real_port = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %4, i32 0, i32 5, !dbg !7983
  %5 = load i8, i8* %real_port, align 1, !dbg !7983
  %conv = zext i8 %5 to i32, !dbg !7982
  %sub = sub i32 %conv, 1, !dbg !7984
  %idxprom = sext i32 %sub to i64, !dbg !7980
  %arrayidx = getelementptr %struct.xhci_root_port_bw_info, %struct.xhci_root_port_bw_info* %3, i64 %idxprom, !dbg !7980
  store %struct.xhci_root_port_bw_info* %arrayidx, %struct.xhci_root_port_bw_info** %rh_bw_info, align 8, !dbg !7985
  %6 = load i32, i32* %old_active_eps.addr, align 4, !dbg !7986
  %cmp = icmp eq i32 %6, 0, !dbg !7988
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7989

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !7990
  %tt_info2 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %7, i32 0, i32 7, !dbg !7991
  %8 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info2, align 8, !dbg !7991
  %active_eps = getelementptr inbounds %struct.xhci_tt_bw_info, %struct.xhci_tt_bw_info* %8, i32 0, i32 4, !dbg !7992
  %9 = load i32, i32* %active_eps, align 8, !dbg !7992
  %cmp3 = icmp ne i32 %9, 0, !dbg !7993
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !7994

if.then5:                                         ; preds = %land.lhs.true
  %10 = load %struct.xhci_root_port_bw_info*, %struct.xhci_root_port_bw_info** %rh_bw_info, align 8, !dbg !7995
  %num_active_tts = getelementptr inbounds %struct.xhci_root_port_bw_info, %struct.xhci_root_port_bw_info* %10, i32 0, i32 1, !dbg !7997
  %11 = load i32, i32* %num_active_tts, align 8, !dbg !7998
  %add = add i32 %11, 1, !dbg !7998
  store i32 %add, i32* %num_active_tts, align 8, !dbg !7998
  %12 = load %struct.xhci_root_port_bw_info*, %struct.xhci_root_port_bw_info** %rh_bw_info, align 8, !dbg !7999
  %bw_table = getelementptr inbounds %struct.xhci_root_port_bw_info, %struct.xhci_root_port_bw_info* %12, i32 0, i32 2, !dbg !8000
  %bw_used = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %bw_table, i32 0, i32 2, !dbg !8001
  %13 = load i32, i32* %bw_used, align 8, !dbg !8002
  %add6 = add i32 %13, 125, !dbg !8002
  store i32 %add6, i32* %bw_used, align 8, !dbg !8002
  br label %if.end21, !dbg !8003

if.else:                                          ; preds = %land.lhs.true, %if.end
  %14 = load i32, i32* %old_active_eps.addr, align 4, !dbg !8004
  %cmp7 = icmp ne i32 %14, 0, !dbg !8006
  br i1 %cmp7, label %land.lhs.true9, label %if.end20, !dbg !8007

land.lhs.true9:                                   ; preds = %if.else
  %15 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !8008
  %tt_info10 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %15, i32 0, i32 7, !dbg !8009
  %16 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info10, align 8, !dbg !8009
  %active_eps11 = getelementptr inbounds %struct.xhci_tt_bw_info, %struct.xhci_tt_bw_info* %16, i32 0, i32 4, !dbg !8010
  %17 = load i32, i32* %active_eps11, align 8, !dbg !8010
  %cmp12 = icmp eq i32 %17, 0, !dbg !8011
  br i1 %cmp12, label %if.then14, label %if.end20, !dbg !8012

if.then14:                                        ; preds = %land.lhs.true9
  %18 = load %struct.xhci_root_port_bw_info*, %struct.xhci_root_port_bw_info** %rh_bw_info, align 8, !dbg !8013
  %num_active_tts15 = getelementptr inbounds %struct.xhci_root_port_bw_info, %struct.xhci_root_port_bw_info* %18, i32 0, i32 1, !dbg !8015
  %19 = load i32, i32* %num_active_tts15, align 8, !dbg !8016
  %sub16 = sub i32 %19, 1, !dbg !8016
  store i32 %sub16, i32* %num_active_tts15, align 8, !dbg !8016
  %20 = load %struct.xhci_root_port_bw_info*, %struct.xhci_root_port_bw_info** %rh_bw_info, align 8, !dbg !8017
  %bw_table17 = getelementptr inbounds %struct.xhci_root_port_bw_info, %struct.xhci_root_port_bw_info* %20, i32 0, i32 2, !dbg !8018
  %bw_used18 = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %bw_table17, i32 0, i32 2, !dbg !8019
  %21 = load i32, i32* %bw_used18, align 8, !dbg !8020
  %sub19 = sub i32 %21, 125, !dbg !8020
  store i32 %sub19, i32* %bw_used18, align 8, !dbg !8020
  br label %if.end20, !dbg !8021

if.end20:                                         ; preds = %if.then14, %land.lhs.true9, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.then, %if.end20, %if.then5
  ret void, !dbg !8022
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xhci_cleanup_stalled_ring(%struct.xhci_hcd* %xhci, i32 %slot_id, i32 %ep_index, i32 %stream_id, %struct.xhci_td* %td) #1 !dbg !8023 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %slot_id.addr = alloca i32, align 4
  %ep_index.addr = alloca i32, align 4
  %stream_id.addr = alloca i32, align 4
  %td.addr = alloca %struct.xhci_td*, align 8
  %deq_state = alloca %struct.xhci_dequeue_state, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !8037, metadata !DIExpression()), !dbg !8038
  store i32 %slot_id, i32* %slot_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot_id.addr, metadata !8039, metadata !DIExpression()), !dbg !8040
  store i32 %ep_index, i32* %ep_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep_index.addr, metadata !8041, metadata !DIExpression()), !dbg !8042
  store i32 %stream_id, i32* %stream_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stream_id.addr, metadata !8043, metadata !DIExpression()), !dbg !8044
  store %struct.xhci_td* %td, %struct.xhci_td** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_td** %td.addr, metadata !8045, metadata !DIExpression()), !dbg !8046
  call void @llvm.dbg.declare(metadata %struct.xhci_dequeue_state* %deq_state, metadata !8047, metadata !DIExpression()), !dbg !8054
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8055
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %0, void (%struct.va_format*)* @trace_xhci_dbg_reset_ep, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.21, i64 0, i64 0)) #11, !dbg !8056
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8057
  %2 = load i32, i32* %slot_id.addr, align 4, !dbg !8058
  %3 = load i32, i32* %ep_index.addr, align 4, !dbg !8059
  %4 = load i32, i32* %stream_id.addr, align 4, !dbg !8060
  %5 = load %struct.xhci_td*, %struct.xhci_td** %td.addr, align 8, !dbg !8061
  call void @xhci_find_new_dequeue_state(%struct.xhci_hcd* %1, i32 %2, i32 %3, i32 %4, %struct.xhci_td* %5, %struct.xhci_dequeue_state* %deq_state) #11, !dbg !8062
  %new_deq_ptr = getelementptr inbounds %struct.xhci_dequeue_state, %struct.xhci_dequeue_state* %deq_state, i32 0, i32 1, !dbg !8063
  %6 = load %union.xhci_trb*, %union.xhci_trb** %new_deq_ptr, align 8, !dbg !8063
  %tobool = icmp ne %union.xhci_trb* %6, null, !dbg !8065
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8066

lor.lhs.false:                                    ; preds = %entry
  %new_deq_seg = getelementptr inbounds %struct.xhci_dequeue_state, %struct.xhci_dequeue_state* %deq_state, i32 0, i32 0, !dbg !8067
  %7 = load %struct.xhci_segment*, %struct.xhci_segment** %new_deq_seg, align 8, !dbg !8067
  %tobool1 = icmp ne %struct.xhci_segment* %7, null, !dbg !8068
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8069

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end4, !dbg !8070

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8071
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %8, i32 0, i32 50, !dbg !8073
  %9 = load i64, i64* %quirks, align 8, !dbg !8073
  %and = and i64 %9, 2, !dbg !8074
  %tobool2 = icmp ne i64 %and, 0, !dbg !8074
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !8075

if.then3:                                         ; preds = %if.end
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8076
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %10, void (%struct.va_format*)* @trace_xhci_dbg_reset_ep, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0)) #11, !dbg !8078
  %11 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8079
  %12 = load i32, i32* %slot_id.addr, align 4, !dbg !8080
  %13 = load i32, i32* %ep_index.addr, align 4, !dbg !8081
  call void @xhci_queue_new_dequeue_state(%struct.xhci_hcd* %11, i32 %12, i32 %13, %struct.xhci_dequeue_state* %deq_state) #11, !dbg !8082
  br label %if.end4, !dbg !8083

if.else:                                          ; preds = %if.end
  %14 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8084
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %14, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.23, i64 0, i64 0)) #11, !dbg !8086
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8087
  %16 = load i32, i32* %slot_id.addr, align 4, !dbg !8088
  %17 = load i32, i32* %ep_index.addr, align 4, !dbg !8089
  call void @xhci_setup_input_ctx_for_quirk(%struct.xhci_hcd* %15, i32 %16, i32 %17, %struct.xhci_dequeue_state* %deq_state) #11, !dbg !8090
  br label %if.end4

if.end4:                                          ; preds = %if.then, %if.else, %if.then3
  ret void, !dbg !8091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_dbg_reset_ep(%struct.va_format* %vaf) #1 !dbg !8092 {
entry:
  %vaf.addr = alloca %struct.va_format*, align 8
  store %struct.va_format* %vaf, %struct.va_format** %vaf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.va_format** %vaf.addr, metadata !8093, metadata !DIExpression()), !dbg !8094
  ret void, !dbg !8094
}

; Function Attrs: noredzone
declare dso_local void @xhci_find_new_dequeue_state(%struct.xhci_hcd*, i32, i32, i32, %struct.xhci_td*, %struct.xhci_dequeue_state*) #3

; Function Attrs: noredzone
declare dso_local void @xhci_queue_new_dequeue_state(%struct.xhci_hcd*, i32, i32, %struct.xhci_dequeue_state*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_setup_input_ctx_for_quirk(%struct.xhci_hcd* %xhci, i32 %slot_id, i32 %ep_index, %struct.xhci_dequeue_state* %deq_state) #1 !dbg !8095 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %slot_id.addr = alloca i32, align 4
  %ep_index.addr = alloca i32, align 4
  %deq_state.addr = alloca %struct.xhci_dequeue_state*, align 8
  %ctrl_ctx = alloca %struct.xhci_input_control_ctx*, align 8
  %in_ctx = alloca %struct.xhci_container_ctx*, align 8
  %ep_ctx = alloca %struct.xhci_ep_ctx*, align 8
  %added_ctxs = alloca i32, align 4
  %addr = alloca i64, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !8099, metadata !DIExpression()), !dbg !8100
  store i32 %slot_id, i32* %slot_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot_id.addr, metadata !8101, metadata !DIExpression()), !dbg !8102
  store i32 %ep_index, i32* %ep_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep_index.addr, metadata !8103, metadata !DIExpression()), !dbg !8104
  store %struct.xhci_dequeue_state* %deq_state, %struct.xhci_dequeue_state** %deq_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_dequeue_state** %deq_state.addr, metadata !8105, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx, metadata !8107, metadata !DIExpression()), !dbg !8115
  call void @llvm.dbg.declare(metadata %struct.xhci_container_ctx** %in_ctx, metadata !8116, metadata !DIExpression()), !dbg !8117
  call void @llvm.dbg.declare(metadata %struct.xhci_ep_ctx** %ep_ctx, metadata !8118, metadata !DIExpression()), !dbg !8128
  call void @llvm.dbg.declare(metadata i32* %added_ctxs, metadata !8129, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !8131, metadata !DIExpression()), !dbg !8132
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8133
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 41, !dbg !8134
  %1 = load i32, i32* %slot_id.addr, align 4, !dbg !8135
  %idxprom = zext i32 %1 to i64, !dbg !8133
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !8133
  %2 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !8133
  %in_ctx1 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %2, i32 0, i32 2, !dbg !8136
  %3 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx1, align 8, !dbg !8136
  store %struct.xhci_container_ctx* %3, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !8137
  %4 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !8138
  %call = call %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx* %4) #11, !dbg !8139
  store %struct.xhci_input_control_ctx* %call, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !8140
  %5 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !8141
  %tobool = icmp ne %struct.xhci_input_control_ctx* %5, null, !dbg !8141
  br i1 %tobool, label %if.end, label %if.then, !dbg !8143

if.then:                                          ; preds = %entry
  %6 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8144
  %call2 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %6) #11, !dbg !8144
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call2, i32 0, i32 0, !dbg !8144
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !8144
  %7 = load %struct.device*, %struct.device** %controller, align 8, !dbg !8144
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %7, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.xhci_setup_input_ctx_for_quirk, i64 0, i64 0)) #12, !dbg !8144
  br label %return, !dbg !8146

if.end:                                           ; preds = %entry
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8147
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8148
  %devs3 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %9, i32 0, i32 41, !dbg !8149
  %10 = load i32, i32* %slot_id.addr, align 4, !dbg !8150
  %idxprom4 = zext i32 %10 to i64, !dbg !8148
  %arrayidx5 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs3, i64 0, i64 %idxprom4, !dbg !8148
  %11 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx5, align 8, !dbg !8148
  %in_ctx6 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %11, i32 0, i32 2, !dbg !8151
  %12 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx6, align 8, !dbg !8151
  %13 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8152
  %devs7 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %13, i32 0, i32 41, !dbg !8153
  %14 = load i32, i32* %slot_id.addr, align 4, !dbg !8154
  %idxprom8 = zext i32 %14 to i64, !dbg !8152
  %arrayidx9 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs7, i64 0, i64 %idxprom8, !dbg !8152
  %15 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx9, align 8, !dbg !8152
  %out_ctx = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %15, i32 0, i32 1, !dbg !8155
  %16 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx, align 8, !dbg !8155
  %17 = load i32, i32* %ep_index.addr, align 4, !dbg !8156
  call void @xhci_endpoint_copy(%struct.xhci_hcd* %8, %struct.xhci_container_ctx* %12, %struct.xhci_container_ctx* %16, i32 %17) #11, !dbg !8157
  %18 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8158
  %19 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !8159
  %20 = load i32, i32* %ep_index.addr, align 4, !dbg !8160
  %call10 = call %struct.xhci_ep_ctx* @xhci_get_ep_ctx(%struct.xhci_hcd* %18, %struct.xhci_container_ctx* %19, i32 %20) #11, !dbg !8161
  store %struct.xhci_ep_ctx* %call10, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !8162
  %21 = load %struct.xhci_dequeue_state*, %struct.xhci_dequeue_state** %deq_state.addr, align 8, !dbg !8163
  %new_deq_seg = getelementptr inbounds %struct.xhci_dequeue_state, %struct.xhci_dequeue_state* %21, i32 0, i32 0, !dbg !8164
  %22 = load %struct.xhci_segment*, %struct.xhci_segment** %new_deq_seg, align 8, !dbg !8164
  %23 = load %struct.xhci_dequeue_state*, %struct.xhci_dequeue_state** %deq_state.addr, align 8, !dbg !8165
  %new_deq_ptr = getelementptr inbounds %struct.xhci_dequeue_state, %struct.xhci_dequeue_state* %23, i32 0, i32 1, !dbg !8166
  %24 = load %union.xhci_trb*, %union.xhci_trb** %new_deq_ptr, align 8, !dbg !8166
  %call11 = call i64 @xhci_trb_virt_to_dma(%struct.xhci_segment* %22, %union.xhci_trb* %24) #11, !dbg !8167
  store i64 %call11, i64* %addr, align 8, !dbg !8168
  %25 = load i64, i64* %addr, align 8, !dbg !8169
  %cmp = icmp eq i64 %25, 0, !dbg !8171
  br i1 %cmp, label %if.then12, label %if.end21, !dbg !8172

if.then12:                                        ; preds = %if.end
  %26 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8173
  %call13 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %26) #11, !dbg !8173
  %self14 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call13, i32 0, i32 0, !dbg !8173
  %controller15 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self14, i32 0, i32 0, !dbg !8173
  %27 = load %struct.device*, %struct.device** %controller15, align 8, !dbg !8173
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %27, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.60, i64 0, i64 0)) #12, !dbg !8173
  %28 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8175
  %call16 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %28) #11, !dbg !8175
  %self17 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call16, i32 0, i32 0, !dbg !8175
  %controller18 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self17, i32 0, i32 0, !dbg !8175
  %29 = load %struct.device*, %struct.device** %controller18, align 8, !dbg !8175
  %30 = load %struct.xhci_dequeue_state*, %struct.xhci_dequeue_state** %deq_state.addr, align 8, !dbg !8175
  %new_deq_seg19 = getelementptr inbounds %struct.xhci_dequeue_state, %struct.xhci_dequeue_state* %30, i32 0, i32 0, !dbg !8175
  %31 = load %struct.xhci_segment*, %struct.xhci_segment** %new_deq_seg19, align 8, !dbg !8175
  %32 = load %struct.xhci_dequeue_state*, %struct.xhci_dequeue_state** %deq_state.addr, align 8, !dbg !8175
  %new_deq_ptr20 = getelementptr inbounds %struct.xhci_dequeue_state, %struct.xhci_dequeue_state* %32, i32 0, i32 1, !dbg !8175
  %33 = load %union.xhci_trb*, %union.xhci_trb** %new_deq_ptr20, align 8, !dbg !8175
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %29, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.61, i64 0, i64 0), %struct.xhci_segment* %31, %union.xhci_trb* %33) #12, !dbg !8175
  br label %return, !dbg !8176

if.end21:                                         ; preds = %if.end
  %34 = load i64, i64* %addr, align 8, !dbg !8177
  %35 = load %struct.xhci_dequeue_state*, %struct.xhci_dequeue_state** %deq_state.addr, align 8, !dbg !8177
  %new_cycle_state = getelementptr inbounds %struct.xhci_dequeue_state, %struct.xhci_dequeue_state* %35, i32 0, i32 2, !dbg !8177
  %36 = load i32, i32* %new_cycle_state, align 8, !dbg !8177
  %conv = sext i32 %36 to i64, !dbg !8177
  %or = or i64 %34, %conv, !dbg !8177
  %37 = load %struct.xhci_ep_ctx*, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !8178
  %deq = getelementptr inbounds %struct.xhci_ep_ctx, %struct.xhci_ep_ctx* %37, i32 0, i32 2, !dbg !8179
  store i64 %or, i64* %deq, align 8, !dbg !8180
  %38 = load i32, i32* %ep_index.addr, align 4, !dbg !8181
  %call22 = call i32 @xhci_get_endpoint_flag_from_index(i32 %38) #11, !dbg !8182
  store i32 %call22, i32* %added_ctxs, align 4, !dbg !8183
  %39 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8184
  %40 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8185
  %devs23 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %40, i32 0, i32 41, !dbg !8186
  %41 = load i32, i32* %slot_id.addr, align 4, !dbg !8187
  %idxprom24 = zext i32 %41 to i64, !dbg !8185
  %arrayidx25 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs23, i64 0, i64 %idxprom24, !dbg !8185
  %42 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx25, align 8, !dbg !8185
  %in_ctx26 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %42, i32 0, i32 2, !dbg !8188
  %43 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx26, align 8, !dbg !8188
  %44 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8189
  %devs27 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %44, i32 0, i32 41, !dbg !8190
  %45 = load i32, i32* %slot_id.addr, align 4, !dbg !8191
  %idxprom28 = zext i32 %45 to i64, !dbg !8189
  %arrayidx29 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs27, i64 0, i64 %idxprom28, !dbg !8189
  %46 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx29, align 8, !dbg !8189
  %out_ctx30 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %46, i32 0, i32 1, !dbg !8192
  %47 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx30, align 8, !dbg !8192
  %48 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !8193
  %49 = load i32, i32* %added_ctxs, align 4, !dbg !8194
  %50 = load i32, i32* %added_ctxs, align 4, !dbg !8195
  call void @xhci_setup_input_ctx_for_config_ep(%struct.xhci_hcd* %39, %struct.xhci_container_ctx* %43, %struct.xhci_container_ctx* %47, %struct.xhci_input_control_ctx* %48, i32 %49, i32 %50) #11, !dbg !8196
  br label %return, !dbg !8197

return:                                           ; preds = %if.end21, %if.then12, %if.then
  ret void, !dbg !8197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xhci_free_device_endpoint_resources(%struct.xhci_hcd* %xhci, %struct.xhci_virt_device* %virt_dev, i1 zeroext %drop_control_ep) #1 !dbg !8198 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %virt_dev.addr = alloca %struct.xhci_virt_device*, align 8
  %drop_control_ep.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %num_dropped_eps = alloca i32, align 4
  %drop_flags = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !8201, metadata !DIExpression()), !dbg !8202
  store %struct.xhci_virt_device* %virt_dev, %struct.xhci_virt_device** %virt_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev.addr, metadata !8203, metadata !DIExpression()), !dbg !8204
  %frombool = zext i1 %drop_control_ep to i8
  store i8 %frombool, i8* %drop_control_ep.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %drop_control_ep.addr, metadata !8205, metadata !DIExpression()), !dbg !8206
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8207, metadata !DIExpression()), !dbg !8208
  call void @llvm.dbg.declare(metadata i32* %num_dropped_eps, metadata !8209, metadata !DIExpression()), !dbg !8210
  store i32 0, i32* %num_dropped_eps, align 4, !dbg !8210
  call void @llvm.dbg.declare(metadata i32* %drop_flags, metadata !8211, metadata !DIExpression()), !dbg !8212
  store i32 0, i32* %drop_flags, align 4, !dbg !8212
  %0 = load i8, i8* %drop_control_ep.addr, align 1, !dbg !8213
  %tobool = trunc i8 %0 to i1, !dbg !8213
  %1 = zext i1 %tobool to i64, !dbg !8213
  %cond = select i1 %tobool, i32 0, i32 1, !dbg !8213
  store i32 %cond, i32* %i, align 4, !dbg !8215
  br label %for.cond, !dbg !8216

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !8217
  %cmp = icmp slt i32 %2, 31, !dbg !8219
  br i1 %cmp, label %for.body, label %for.end, !dbg !8220

for.body:                                         ; preds = %for.cond
  %3 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !8221
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %3, i32 0, i32 3, !dbg !8224
  %4 = load i32, i32* %i, align 4, !dbg !8225
  %idxprom = sext i32 %4 to i64, !dbg !8221
  %arrayidx = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom, !dbg !8221
  %ring = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx, i32 0, i32 0, !dbg !8226
  %5 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !8226
  %tobool1 = icmp ne %struct.xhci_ring* %5, null, !dbg !8221
  br i1 %tobool1, label %if.then, label %if.end, !dbg !8227

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !8228
  %shl = shl i32 1, %6, !dbg !8230
  %7 = load i32, i32* %drop_flags, align 4, !dbg !8231
  %or = or i32 %7, %shl, !dbg !8231
  store i32 %or, i32* %drop_flags, align 4, !dbg !8231
  %8 = load i32, i32* %num_dropped_eps, align 4, !dbg !8232
  %inc = add i32 %8, 1, !dbg !8232
  store i32 %inc, i32* %num_dropped_eps, align 4, !dbg !8232
  br label %if.end, !dbg !8233

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !8234

for.inc:                                          ; preds = %if.end
  %9 = load i32, i32* %i, align 4, !dbg !8235
  %inc2 = add i32 %9, 1, !dbg !8235
  store i32 %inc2, i32* %i, align 4, !dbg !8235
  br label %for.cond, !dbg !8236, !llvm.loop !8237

for.end:                                          ; preds = %for.cond
  %10 = load i32, i32* %num_dropped_eps, align 4, !dbg !8239
  %11 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8240
  %num_active_eps = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %11, i32 0, i32 51, !dbg !8241
  %12 = load i32, i32* %num_active_eps, align 8, !dbg !8242
  %sub = sub i32 %12, %10, !dbg !8242
  store i32 %sub, i32* %num_active_eps, align 8, !dbg !8242
  %13 = load i32, i32* %num_dropped_eps, align 4, !dbg !8243
  %tobool3 = icmp ne i32 %13, 0, !dbg !8243
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !8245

if.then4:                                         ; preds = %for.end
  %14 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8246
  %15 = load i32, i32* %num_dropped_eps, align 4, !dbg !8247
  %16 = load i32, i32* %drop_flags, align 4, !dbg !8248
  %17 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8249
  %num_active_eps5 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %17, i32 0, i32 51, !dbg !8250
  %18 = load i32, i32* %num_active_eps5, align 8, !dbg !8250
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %14, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.24, i64 0, i64 0), i32 %15, i32 %16, i32 %18) #11, !dbg !8251
  br label %if.end6, !dbg !8251

if.end6:                                          ; preds = %if.then4, %for.end
  ret void, !dbg !8252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xhci_disable_slot(%struct.xhci_hcd* %xhci, i32 %slot_id) #1 !dbg !8253 {
entry:
  %lock.addr.i44 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i44, metadata !6665, metadata !DIExpression()), !dbg !8256
  %flags.addr.i45 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i45, metadata !6671, metadata !DIExpression()), !dbg !8260
  %tmp.i46 = alloca i32, align 4
  %tmp8.i47 = alloca i32, align 4
  %lock.addr.i39 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i39, metadata !6665, metadata !DIExpression()), !dbg !8261
  %flags.addr.i40 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i40, metadata !6671, metadata !DIExpression()), !dbg !8265
  %tmp.i41 = alloca i32, align 4
  %tmp8.i42 = alloca i32, align 4
  %lock.addr.i37 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i37, metadata !6665, metadata !DIExpression()), !dbg !8266
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !8268
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !8269
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %slot_id.addr = alloca i32, align 4
  %command = alloca %struct.xhci_command*, align 8
  %flags = alloca i64, align 8
  %state = alloca i32, align 4
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !8276, metadata !DIExpression()), !dbg !8277
  store i32 %slot_id, i32* %slot_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot_id.addr, metadata !8278, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %command, metadata !8280, metadata !DIExpression()), !dbg !8281
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8282, metadata !DIExpression()), !dbg !8283
  call void @llvm.dbg.declare(metadata i32* %state, metadata !8284, metadata !DIExpression()), !dbg !8285
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8286, metadata !DIExpression()), !dbg !8287
  store i32 0, i32* %ret, align 4, !dbg !8287
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8288
  %call = call %struct.xhci_command* @xhci_alloc_command(%struct.xhci_hcd* %0, i1 zeroext false, i32 3264) #11, !dbg !8289
  store %struct.xhci_command* %call, %struct.xhci_command** %command, align 8, !dbg !8290
  %1 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !8291
  %tobool = icmp ne %struct.xhci_command* %1, null, !dbg !8291
  br i1 %tobool, label %if.end, label %if.then, !dbg !8293

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8294
  br label %return, !dbg !8294

if.end:                                           ; preds = %entry
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8295
  %3 = load i32, i32* %slot_id.addr, align 4, !dbg !8296
  call void @xhci_debugfs_remove_slot(%struct.xhci_hcd* %2, i32 %3) #11, !dbg !8297
  br label %do.body, !dbg !8298

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !8299

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8300, metadata !DIExpression()), !dbg !8302
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8303, metadata !DIExpression()), !dbg !8302
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8302
  %conv = zext i1 %cmp to i32, !dbg !8302
  store i32 1, i32* %tmp, align 4, !dbg !8302
  %4 = load i32, i32* %tmp, align 4, !dbg !8302
  br label %do.body2, !dbg !8304

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8305

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8306

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8308, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8312, metadata !DIExpression()), !dbg !8311
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8311
  %conv8 = zext i1 %cmp7 to i32, !dbg !8311
  store i32 1, i32* %tmp9, align 4, !dbg !8311
  %5 = load i32, i32* %tmp9, align 4, !dbg !8311
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !8313
  store i64 %call10, i64* %flags, align 8, !dbg !8313
  br label %do.end, !dbg !8313

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !8306

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !8305

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8314, !srcloc !8315
  br label %do.body13, !dbg !8314

do.body13:                                        ; preds = %do.body12
  %6 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8316
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %6, i32 0, i32 12, !dbg !8316
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8317
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !8318
  %rlock.i = bitcast %union.anon.2* %8 to %struct.raw_spinlock*, !dbg !8318
  br label %do.end15, !dbg !8316

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !8314

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !8305

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8304

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !8299

do.end19:                                         ; preds = %do.end18
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8319
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %9, i32 0, i32 3, !dbg !8320
  %10 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !8320
  %status = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %10, i32 0, i32 1, !dbg !8321
  %11 = bitcast i32* %status to i8*, !dbg !8322
  %call20 = call i32 @readl(i8* %11) #11, !dbg !8323
  store i32 %call20, i32* %state, align 4, !dbg !8324
  %12 = load i32, i32* %state, align 4, !dbg !8325
  %cmp21 = icmp eq i32 %12, -1, !dbg !8326
  br i1 %cmp21, label %if.then28, label %lor.lhs.false, !dbg !8327

lor.lhs.false:                                    ; preds = %do.end19
  %13 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8328
  %xhc_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %13, i32 0, i32 47, !dbg !8329
  %14 = load i32, i32* %xhc_state, align 8, !dbg !8329
  %and = and i32 %14, 1, !dbg !8330
  %tobool23 = icmp ne i32 %and, 0, !dbg !8330
  br i1 %tobool23, label %if.then28, label %lor.lhs.false24, !dbg !8331

lor.lhs.false24:                                  ; preds = %lor.lhs.false
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8332
  %xhc_state25 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %15, i32 0, i32 47, !dbg !8333
  %16 = load i32, i32* %xhc_state25, align 8, !dbg !8333
  %and26 = and i32 %16, 2, !dbg !8334
  %tobool27 = icmp ne i32 %and26, 0, !dbg !8334
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !8335

if.then28:                                        ; preds = %lor.lhs.false24, %lor.lhs.false, %do.end19
  %17 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8336
  %lock29 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %17, i32 0, i32 12, !dbg !8337
  %18 = load i64, i64* %flags, align 8, !dbg !8338
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i39, align 8
  store i64 %18, i64* %flags.addr.i40, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !8339
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !8339
  store i32 1, i32* %tmp.i41, align 4, !dbg !8339
  %19 = load i32, i32* %tmp.i41, align 4, !dbg !8339
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !8340
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !8340
  store i32 1, i32* %tmp8.i42, align 4, !dbg !8340
  %20 = load i32, i32* %tmp8.i42, align 4, !dbg !8340
  %21 = load i64, i64* %flags.addr.i40, align 8, !dbg !8341
  call void @arch_local_irq_restore(i64 %21) #13, !dbg !8341
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8342, !srcloc !6814
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i39, align 8, !dbg !8343
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !8343
  %rlock.i43 = bitcast %union.anon.2* %23 to %struct.raw_spinlock*, !dbg !8343
  %24 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !8344
  %25 = bitcast %struct.xhci_command* %24 to i8*, !dbg !8344
  call void @kfree(i8* %25) #11, !dbg !8345
  store i32 -19, i32* %retval, align 4, !dbg !8346
  br label %return, !dbg !8346

if.end30:                                         ; preds = %lor.lhs.false24
  %26 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8347
  %27 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !8348
  %28 = load i32, i32* %slot_id.addr, align 4, !dbg !8349
  %call31 = call i32 @xhci_queue_slot_control(%struct.xhci_hcd* %26, %struct.xhci_command* %27, i32 10, i32 %28) #11, !dbg !8350
  store i32 %call31, i32* %ret, align 4, !dbg !8351
  %29 = load i32, i32* %ret, align 4, !dbg !8352
  %tobool32 = icmp ne i32 %29, 0, !dbg !8352
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !8353

if.then33:                                        ; preds = %if.end30
  %30 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8354
  %lock34 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %30, i32 0, i32 12, !dbg !8355
  %31 = load i64, i64* %flags, align 8, !dbg !8356
  store %struct.spinlock* %lock34, %struct.spinlock** %lock.addr.i44, align 8
  store i64 %31, i64* %flags.addr.i45, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !8357
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !8357
  store i32 1, i32* %tmp.i46, align 4, !dbg !8357
  %32 = load i32, i32* %tmp.i46, align 4, !dbg !8357
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !8358
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !8358
  store i32 1, i32* %tmp8.i47, align 4, !dbg !8358
  %33 = load i32, i32* %tmp8.i47, align 4, !dbg !8358
  %34 = load i64, i64* %flags.addr.i45, align 8, !dbg !8359
  call void @arch_local_irq_restore(i64 %34) #13, !dbg !8359
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8360, !srcloc !6814
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i44, align 8, !dbg !8361
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !8361
  %rlock.i48 = bitcast %union.anon.2* %36 to %struct.raw_spinlock*, !dbg !8361
  %37 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !8362
  %38 = bitcast %struct.xhci_command* %37 to i8*, !dbg !8362
  call void @kfree(i8* %38) #11, !dbg !8363
  %39 = load i32, i32* %ret, align 4, !dbg !8364
  store i32 %39, i32* %retval, align 4, !dbg !8365
  br label %return, !dbg !8365

if.end35:                                         ; preds = %if.end30
  %40 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8366
  call void @xhci_ring_cmd_db(%struct.xhci_hcd* %40) #11, !dbg !8367
  %41 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8368
  %lock36 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %41, i32 0, i32 12, !dbg !8369
  %42 = load i64, i64* %flags, align 8, !dbg !8370
  store %struct.spinlock* %lock36, %struct.spinlock** %lock.addr.i37, align 8
  store i64 %42, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !8371
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !8371
  store i32 1, i32* %tmp.i, align 4, !dbg !8371
  %43 = load i32, i32* %tmp.i, align 4, !dbg !8371
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !8372
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !8372
  store i32 1, i32* %tmp8.i, align 4, !dbg !8372
  %44 = load i32, i32* %tmp8.i, align 4, !dbg !8372
  %45 = load i64, i64* %flags.addr.i, align 8, !dbg !8373
  call void @arch_local_irq_restore(i64 %45) #13, !dbg !8373
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8374, !srcloc !6814
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i37, align 8, !dbg !8375
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !8375
  %rlock.i38 = bitcast %union.anon.2* %47 to %struct.raw_spinlock*, !dbg !8375
  %48 = load i32, i32* %ret, align 4, !dbg !8376
  store i32 %48, i32* %retval, align 4, !dbg !8377
  br label %return, !dbg !8377

return:                                           ; preds = %if.end35, %if.then33, %if.then28, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !8378
  ret i32 %49, !dbg !8378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_debugfs_remove_slot(%struct.xhci_hcd* %x, i32 %s) #1 !dbg !8379 {
entry:
  %x.addr = alloca %struct.xhci_hcd*, align 8
  %s.addr = alloca i32, align 4
  store %struct.xhci_hcd* %x, %struct.xhci_hcd** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %x.addr, metadata !8382, metadata !DIExpression()), !dbg !8383
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !8384, metadata !DIExpression()), !dbg !8385
  ret void, !dbg !8386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #1 !dbg !8387 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !8391, metadata !DIExpression()), !dbg !8392
  %call = call i64 @arch_local_save_flags() #11, !dbg !8393
  store i64 %call, i64* %f, align 8, !dbg !8394
  call void @arch_local_irq_disable() #11, !dbg !8395
  %0 = load i64, i64* %f, align 8, !dbg !8396
  ret i64 %0, !dbg !8397
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @xhci_queue_slot_control(%struct.xhci_hcd*, %struct.xhci_command*, i32, i32) #3

; Function Attrs: noredzone
declare dso_local void @xhci_ring_cmd_db(%struct.xhci_hcd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xhci_alloc_dev(%struct.usb_hcd* %hcd, %struct.usb_device* %udev) #1 !dbg !8398 {
entry:
  %lock.addr.i107 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i107, metadata !6665, metadata !DIExpression()), !dbg !8399
  %flags.addr.i108 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i108, metadata !6671, metadata !DIExpression()), !dbg !8403
  %tmp.i109 = alloca i32, align 4
  %tmp8.i110 = alloca i32, align 4
  %lock.addr.i102 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i102, metadata !6665, metadata !DIExpression()), !dbg !8404
  %flags.addr.i103 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i103, metadata !6671, metadata !DIExpression()), !dbg !8408
  %tmp.i104 = alloca i32, align 4
  %tmp8.i105 = alloca i32, align 4
  %lock.addr.i100 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i100, metadata !6673, metadata !DIExpression()), !dbg !8409
  %lock.addr.i95 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i95, metadata !6665, metadata !DIExpression()), !dbg !8416
  %flags.addr.i96 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i96, metadata !6671, metadata !DIExpression()), !dbg !8418
  %tmp.i97 = alloca i32, align 4
  %tmp8.i98 = alloca i32, align 4
  %lock.addr.i93 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i93, metadata !6665, metadata !DIExpression()), !dbg !8419
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !8423
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !8424
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %vdev = alloca %struct.xhci_virt_device*, align 8
  %slot_ctx = alloca %struct.xhci_slot_ctx*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %slot_id = alloca i32, align 4
  %command = alloca %struct.xhci_command*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__dummy43 = alloca i64, align 8
  %__dummy244 = alloca i64, align 8
  %tmp47 = alloca i32, align 4
  %__dummy51 = alloca i64, align 8
  %__dummy252 = alloca i64, align 8
  %tmp55 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !8431, metadata !DIExpression()), !dbg !8432
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !8433, metadata !DIExpression()), !dbg !8434
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !8435, metadata !DIExpression()), !dbg !8436
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8437
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !8438
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !8436
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %vdev, metadata !8439, metadata !DIExpression()), !dbg !8440
  call void @llvm.dbg.declare(metadata %struct.xhci_slot_ctx** %slot_ctx, metadata !8441, metadata !DIExpression()), !dbg !8450
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8451, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8453, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.declare(metadata i32* %slot_id, metadata !8455, metadata !DIExpression()), !dbg !8456
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %command, metadata !8457, metadata !DIExpression()), !dbg !8458
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8459
  %call1 = call %struct.xhci_command* @xhci_alloc_command(%struct.xhci_hcd* %1, i1 zeroext true, i32 3264) #11, !dbg !8460
  store %struct.xhci_command* %call1, %struct.xhci_command** %command, align 8, !dbg !8461
  %2 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !8462
  %tobool = icmp ne %struct.xhci_command* %2, null, !dbg !8462
  br i1 %tobool, label %if.end, label %if.then, !dbg !8464

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8465
  br label %return, !dbg !8465

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !8466

do.body:                                          ; preds = %if.end
  br label %do.body2, !dbg !8467

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8468, metadata !DIExpression()), !dbg !8470
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8471, metadata !DIExpression()), !dbg !8470
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !8470
  %conv = zext i1 %cmp to i32, !dbg !8470
  store i32 1, i32* %tmp, align 4, !dbg !8470
  %3 = load i32, i32* %tmp, align 4, !dbg !8470
  br label %do.body3, !dbg !8472

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8473

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !8474

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !8476, metadata !DIExpression()), !dbg !8479
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !8480, metadata !DIExpression()), !dbg !8479
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !8479
  %conv9 = zext i1 %cmp8 to i32, !dbg !8479
  store i32 1, i32* %tmp10, align 4, !dbg !8479
  %4 = load i32, i32* %tmp10, align 4, !dbg !8479
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !8481
  store i64 %call11, i64* %flags, align 8, !dbg !8481
  br label %do.end, !dbg !8481

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !8474

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !8473

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8482, !srcloc !8483
  br label %do.body14, !dbg !8482

do.body14:                                        ; preds = %do.body13
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8484
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 12, !dbg !8484
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8485
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !8486
  %rlock.i = bitcast %union.anon.2* %7 to %struct.raw_spinlock*, !dbg !8486
  br label %do.end16, !dbg !8484

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !8482

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !8473

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !8472

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !8467

do.end20:                                         ; preds = %do.end19
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8487
  %9 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !8488
  %call21 = call i32 @xhci_queue_slot_control(%struct.xhci_hcd* %8, %struct.xhci_command* %9, i32 9, i32 0) #11, !dbg !8489
  store i32 %call21, i32* %ret, align 4, !dbg !8490
  %10 = load i32, i32* %ret, align 4, !dbg !8491
  %tobool22 = icmp ne i32 %10, 0, !dbg !8491
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !8492

if.then23:                                        ; preds = %do.end20
  %11 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8493
  %lock24 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %11, i32 0, i32 12, !dbg !8494
  %12 = load i64, i64* %flags, align 8, !dbg !8495
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i93, align 8
  store i64 %12, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !8496
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !8496
  store i32 1, i32* %tmp.i, align 4, !dbg !8496
  %13 = load i32, i32* %tmp.i, align 4, !dbg !8496
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !8497
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !8497
  store i32 1, i32* %tmp8.i, align 4, !dbg !8497
  %14 = load i32, i32* %tmp8.i, align 4, !dbg !8497
  %15 = load i64, i64* %flags.addr.i, align 8, !dbg !8498
  call void @arch_local_irq_restore(i64 %15) #13, !dbg !8498
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8499, !srcloc !6814
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i93, align 8, !dbg !8500
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !8500
  %rlock.i94 = bitcast %union.anon.2* %17 to %struct.raw_spinlock*, !dbg !8500
  %18 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8501
  %19 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !8502
  call void @xhci_free_command(%struct.xhci_hcd* %18, %struct.xhci_command* %19) #11, !dbg !8503
  store i32 0, i32* %retval, align 4, !dbg !8504
  br label %return, !dbg !8504

if.end25:                                         ; preds = %do.end20
  %20 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8505
  call void @xhci_ring_cmd_db(%struct.xhci_hcd* %20) #11, !dbg !8506
  %21 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8507
  %lock26 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %21, i32 0, i32 12, !dbg !8508
  %22 = load i64, i64* %flags, align 8, !dbg !8509
  store %struct.spinlock* %lock26, %struct.spinlock** %lock.addr.i95, align 8
  store i64 %22, i64* %flags.addr.i96, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !8510
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !8510
  store i32 1, i32* %tmp.i97, align 4, !dbg !8510
  %23 = load i32, i32* %tmp.i97, align 4, !dbg !8510
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !8511
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !8511
  store i32 1, i32* %tmp8.i98, align 4, !dbg !8511
  %24 = load i32, i32* %tmp8.i98, align 4, !dbg !8511
  %25 = load i64, i64* %flags.addr.i96, align 8, !dbg !8512
  call void @arch_local_irq_restore(i64 %25) #13, !dbg !8512
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8513, !srcloc !6814
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i95, align 8, !dbg !8514
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !8514
  %rlock.i99 = bitcast %union.anon.2* %27 to %struct.raw_spinlock*, !dbg !8514
  %28 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !8515
  %completion = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %28, i32 0, i32 3, !dbg !8516
  %29 = load %struct.completion*, %struct.completion** %completion, align 8, !dbg !8516
  call void @wait_for_completion(%struct.completion* %29) #11, !dbg !8517
  %30 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !8518
  %slot_id27 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %30, i32 0, i32 2, !dbg !8519
  %31 = load i32, i32* %slot_id27, align 4, !dbg !8519
  store i32 %31, i32* %slot_id, align 4, !dbg !8520
  %32 = load i32, i32* %slot_id, align 4, !dbg !8521
  %tobool28 = icmp ne i32 %32, 0, !dbg !8521
  br i1 %tobool28, label %lor.lhs.false, label %if.then31, !dbg !8523

lor.lhs.false:                                    ; preds = %if.end25
  %33 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !8524
  %status = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %33, i32 0, i32 1, !dbg !8525
  %34 = load i32, i32* %status, align 8, !dbg !8525
  %cmp29 = icmp ne i32 %34, 1, !dbg !8526
  br i1 %cmp29, label %if.then31, label %if.end37, !dbg !8527

if.then31:                                        ; preds = %lor.lhs.false, %if.end25
  %35 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8528
  %call32 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %35) #11, !dbg !8528
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call32, i32 0, i32 0, !dbg !8528
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !8528
  %36 = load %struct.device*, %struct.device** %controller, align 8, !dbg !8528
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %36, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.25, i64 0, i64 0)) #12, !dbg !8528
  %37 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8530
  %call33 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %37) #11, !dbg !8530
  %self34 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call33, i32 0, i32 0, !dbg !8530
  %controller35 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self34, i32 0, i32 0, !dbg !8530
  %38 = load %struct.device*, %struct.device** %controller35, align 8, !dbg !8530
  %39 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8530
  %cap_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %39, i32 0, i32 2, !dbg !8530
  %40 = load %struct.xhci_cap_regs*, %struct.xhci_cap_regs** %cap_regs, align 8, !dbg !8530
  %hcs_params1 = getelementptr inbounds %struct.xhci_cap_regs, %struct.xhci_cap_regs* %40, i32 0, i32 1, !dbg !8530
  %41 = bitcast i32* %hcs_params1 to i8*, !dbg !8530
  %call36 = call i32 @readl(i8* %41) #11, !dbg !8530
  %shr = lshr i32 %call36, 0, !dbg !8530
  %and = and i32 %shr, 255, !dbg !8530
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %38, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.26, i64 0, i64 0), i32 %and) #12, !dbg !8530
  %42 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8531
  %43 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !8532
  call void @xhci_free_command(%struct.xhci_hcd* %42, %struct.xhci_command* %43) #11, !dbg !8533
  store i32 0, i32* %retval, align 4, !dbg !8534
  br label %return, !dbg !8534

if.end37:                                         ; preds = %lor.lhs.false
  %44 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8535
  %45 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !8536
  call void @xhci_free_command(%struct.xhci_hcd* %44, %struct.xhci_command* %45) #11, !dbg !8537
  %46 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8538
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %46, i32 0, i32 50, !dbg !8539
  %47 = load i64, i64* %quirks, align 8, !dbg !8539
  %and38 = and i64 %47, 32, !dbg !8540
  %tobool39 = icmp ne i64 %and38, 0, !dbg !8540
  br i1 %tobool39, label %if.then40, label %if.end77, !dbg !8541

if.then40:                                        ; preds = %if.end37
  br label %do.body41, !dbg !8542

do.body41:                                        ; preds = %if.then40
  br label %do.body42, !dbg !8543

do.body42:                                        ; preds = %do.body41
  call void @llvm.dbg.declare(metadata i64* %__dummy43, metadata !8544, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.declare(metadata i64* %__dummy244, metadata !8547, metadata !DIExpression()), !dbg !8546
  %cmp45 = icmp eq i64* %__dummy43, %__dummy244, !dbg !8546
  %conv46 = zext i1 %cmp45 to i32, !dbg !8546
  store i32 1, i32* %tmp47, align 4, !dbg !8546
  %48 = load i32, i32* %tmp47, align 4, !dbg !8546
  br label %do.body48, !dbg !8548

do.body48:                                        ; preds = %do.body42
  br label %do.body49, !dbg !8549

do.body49:                                        ; preds = %do.body48
  br label %do.body50, !dbg !8550

do.body50:                                        ; preds = %do.body49
  call void @llvm.dbg.declare(metadata i64* %__dummy51, metadata !8552, metadata !DIExpression()), !dbg !8555
  call void @llvm.dbg.declare(metadata i64* %__dummy252, metadata !8556, metadata !DIExpression()), !dbg !8555
  %cmp53 = icmp eq i64* %__dummy51, %__dummy252, !dbg !8555
  %conv54 = zext i1 %cmp53 to i32, !dbg !8555
  store i32 1, i32* %tmp55, align 4, !dbg !8555
  %49 = load i32, i32* %tmp55, align 4, !dbg !8555
  %call56 = call i64 @arch_local_irq_save() #11, !dbg !8557
  store i64 %call56, i64* %flags, align 8, !dbg !8557
  br label %do.end57, !dbg !8557

do.end57:                                         ; preds = %do.body50
  br label %do.end58, !dbg !8550

do.end58:                                         ; preds = %do.end57
  br label %do.body59, !dbg !8549

do.body59:                                        ; preds = %do.end58
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8558, !srcloc !8559
  br label %do.body60, !dbg !8558

do.body60:                                        ; preds = %do.body59
  %50 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8560
  %lock61 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %50, i32 0, i32 12, !dbg !8560
  store %struct.spinlock* %lock61, %struct.spinlock** %lock.addr.i100, align 8
  %51 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i100, align 8, !dbg !8561
  %52 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %51, i32 0, i32 0, !dbg !8562
  %rlock.i101 = bitcast %union.anon.2* %52 to %struct.raw_spinlock*, !dbg !8562
  br label %do.end63, !dbg !8560

do.end63:                                         ; preds = %do.body60
  br label %do.end64, !dbg !8558

do.end64:                                         ; preds = %do.end63
  br label %do.end65, !dbg !8549

do.end65:                                         ; preds = %do.end64
  br label %do.end66, !dbg !8548

do.end66:                                         ; preds = %do.end65
  br label %do.end67, !dbg !8543

do.end67:                                         ; preds = %do.end66
  %53 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8563
  %call68 = call i32 @xhci_reserve_host_control_ep_resources(%struct.xhci_hcd* %53) #11, !dbg !8564
  store i32 %call68, i32* %ret, align 4, !dbg !8565
  %54 = load i32, i32* %ret, align 4, !dbg !8566
  %tobool69 = icmp ne i32 %54, 0, !dbg !8566
  br i1 %tobool69, label %if.then70, label %if.end75, !dbg !8567

if.then70:                                        ; preds = %do.end67
  %55 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8568
  %lock71 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %55, i32 0, i32 12, !dbg !8569
  %56 = load i64, i64* %flags, align 8, !dbg !8570
  store %struct.spinlock* %lock71, %struct.spinlock** %lock.addr.i102, align 8
  store i64 %56, i64* %flags.addr.i103, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !8571
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !8571
  store i32 1, i32* %tmp.i104, align 4, !dbg !8571
  %57 = load i32, i32* %tmp.i104, align 4, !dbg !8571
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !8572
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !8572
  store i32 1, i32* %tmp8.i105, align 4, !dbg !8572
  %58 = load i32, i32* %tmp8.i105, align 4, !dbg !8572
  %59 = load i64, i64* %flags.addr.i103, align 8, !dbg !8573
  call void @arch_local_irq_restore(i64 %59) #13, !dbg !8573
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8574, !srcloc !6814
  %60 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i102, align 8, !dbg !8575
  %61 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %60, i32 0, i32 0, !dbg !8575
  %rlock.i106 = bitcast %union.anon.2* %61 to %struct.raw_spinlock*, !dbg !8575
  %62 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8576
  %call72 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %62) #11, !dbg !8576
  %self73 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call72, i32 0, i32 0, !dbg !8576
  %controller74 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self73, i32 0, i32 0, !dbg !8576
  %63 = load %struct.device*, %struct.device** %controller74, align 8, !dbg !8576
  %64 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8576
  %num_active_eps = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %64, i32 0, i32 51, !dbg !8576
  %65 = load i32, i32* %num_active_eps, align 8, !dbg !8576
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %63, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.27, i64 0, i64 0), i32 %65) #12, !dbg !8576
  br label %disable_slot, !dbg !8577

if.end75:                                         ; preds = %do.end67
  %66 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8578
  %lock76 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %66, i32 0, i32 12, !dbg !8579
  %67 = load i64, i64* %flags, align 8, !dbg !8580
  store %struct.spinlock* %lock76, %struct.spinlock** %lock.addr.i107, align 8
  store i64 %67, i64* %flags.addr.i108, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !8581
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !8581
  store i32 1, i32* %tmp.i109, align 4, !dbg !8581
  %68 = load i32, i32* %tmp.i109, align 4, !dbg !8581
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !8582
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !8582
  store i32 1, i32* %tmp8.i110, align 4, !dbg !8582
  %69 = load i32, i32* %tmp8.i110, align 4, !dbg !8582
  %70 = load i64, i64* %flags.addr.i108, align 8, !dbg !8583
  call void @arch_local_irq_restore(i64 %70) #13, !dbg !8583
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !8584, !srcloc !6814
  %71 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i107, align 8, !dbg !8585
  %72 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %71, i32 0, i32 0, !dbg !8585
  %rlock.i111 = bitcast %union.anon.2* %72 to %struct.raw_spinlock*, !dbg !8585
  br label %if.end77, !dbg !8586

if.end77:                                         ; preds = %if.end75, %if.end37
  %73 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8587
  %74 = load i32, i32* %slot_id, align 4, !dbg !8589
  %75 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !8590
  %call78 = call i32 @xhci_alloc_virt_device(%struct.xhci_hcd* %73, i32 %74, %struct.usb_device* %75, i32 3072) #11, !dbg !8591
  %tobool79 = icmp ne i32 %call78, 0, !dbg !8591
  br i1 %tobool79, label %if.end84, label %if.then80, !dbg !8592

if.then80:                                        ; preds = %if.end77
  %76 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8593
  %call81 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %76) #11, !dbg !8593
  %self82 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call81, i32 0, i32 0, !dbg !8593
  %controller83 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self82, i32 0, i32 0, !dbg !8593
  %77 = load %struct.device*, %struct.device** %controller83, align 8, !dbg !8593
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %77, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.28, i64 0, i64 0)) #12, !dbg !8593
  br label %disable_slot, !dbg !8595

if.end84:                                         ; preds = %if.end77
  %78 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8596
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %78, i32 0, i32 41, !dbg !8597
  %79 = load i32, i32* %slot_id, align 4, !dbg !8598
  %idxprom = sext i32 %79 to i64, !dbg !8596
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !8596
  %80 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !8596
  store %struct.xhci_virt_device* %80, %struct.xhci_virt_device** %vdev, align 8, !dbg !8599
  %81 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8600
  %82 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !8601
  %out_ctx = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %82, i32 0, i32 1, !dbg !8602
  %83 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx, align 8, !dbg !8602
  %call85 = call %struct.xhci_slot_ctx* @xhci_get_slot_ctx(%struct.xhci_hcd* %81, %struct.xhci_container_ctx* %83) #11, !dbg !8603
  store %struct.xhci_slot_ctx* %call85, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !8604
  %84 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !8605
  call void @trace_xhci_alloc_dev(%struct.xhci_slot_ctx* %84) #11, !dbg !8606
  %85 = load i32, i32* %slot_id, align 4, !dbg !8607
  %86 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !8608
  %slot_id86 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %86, i32 0, i32 44, !dbg !8609
  store i32 %85, i32* %slot_id86, align 8, !dbg !8610
  %87 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8611
  %88 = load i32, i32* %slot_id, align 4, !dbg !8612
  call void @xhci_debugfs_create_slot(%struct.xhci_hcd* %87, i32 %88) #11, !dbg !8613
  store i32 1, i32* %retval, align 4, !dbg !8614
  br label %return, !dbg !8614

disable_slot:                                     ; preds = %if.then80, %if.then70
  call void @llvm.dbg.label(metadata !8615), !dbg !8616
  %89 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8617
  %90 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !8618
  %slot_id87 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %90, i32 0, i32 44, !dbg !8619
  %91 = load i32, i32* %slot_id87, align 8, !dbg !8619
  %call88 = call i32 @xhci_disable_slot(%struct.xhci_hcd* %89, i32 %91) #11, !dbg !8620
  store i32 %call88, i32* %ret, align 4, !dbg !8621
  %92 = load i32, i32* %ret, align 4, !dbg !8622
  %tobool89 = icmp ne i32 %92, 0, !dbg !8622
  br i1 %tobool89, label %if.then90, label %if.end92, !dbg !8624

if.then90:                                        ; preds = %disable_slot
  %93 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8625
  %94 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !8626
  %slot_id91 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %94, i32 0, i32 44, !dbg !8627
  %95 = load i32, i32* %slot_id91, align 8, !dbg !8627
  call void @xhci_free_virt_device(%struct.xhci_hcd* %93, i32 %95) #11, !dbg !8628
  br label %if.end92, !dbg !8628

if.end92:                                         ; preds = %if.then90, %disable_slot
  store i32 0, i32* %retval, align 4, !dbg !8629
  br label %return, !dbg !8629

return:                                           ; preds = %if.end92, %if.end84, %if.then31, %if.then23, %if.then
  %96 = load i32, i32* %retval, align 4, !dbg !8630
  ret i32 %96, !dbg !8630
}

; Function Attrs: noredzone
declare dso_local void @wait_for_completion(%struct.completion*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_reserve_host_control_ep_resources(%struct.xhci_hcd* %xhci) #1 !dbg !8631 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !8632, metadata !DIExpression()), !dbg !8633
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8634
  %num_active_eps = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 51, !dbg !8636
  %1 = load i32, i32* %num_active_eps, align 8, !dbg !8636
  %add = add i32 %1, 1, !dbg !8637
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8638
  %limit_active_eps = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %2, i32 0, i32 52, !dbg !8639
  %3 = load i32, i32* %limit_active_eps, align 4, !dbg !8639
  %cmp = icmp ugt i32 %add, %3, !dbg !8640
  br i1 %cmp, label %if.then, label %if.end, !dbg !8641

if.then:                                          ; preds = %entry
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8642
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8644
  %num_active_eps1 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 51, !dbg !8645
  %6 = load i32, i32* %num_active_eps1, align 8, !dbg !8645
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8646
  %limit_active_eps2 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 52, !dbg !8647
  %8 = load i32, i32* %limit_active_eps2, align 4, !dbg !8647
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %4, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.62, i64 0, i64 0), i32 %6, i32 %8) #11, !dbg !8648
  store i32 -12, i32* %retval, align 4, !dbg !8649
  br label %return, !dbg !8649

if.end:                                           ; preds = %entry
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8650
  %num_active_eps3 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %9, i32 0, i32 51, !dbg !8651
  %10 = load i32, i32* %num_active_eps3, align 8, !dbg !8652
  %add4 = add i32 %10, 1, !dbg !8652
  store i32 %add4, i32* %num_active_eps3, align 8, !dbg !8652
  %11 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8653
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !8654
  %num_active_eps5 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %12, i32 0, i32 51, !dbg !8655
  %13 = load i32, i32* %num_active_eps5, align 8, !dbg !8655
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %11, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.63, i64 0, i64 0), i32 %13) #11, !dbg !8656
  store i32 0, i32* %retval, align 4, !dbg !8657
  br label %return, !dbg !8657

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !8658
  ret i32 %14, !dbg !8658
}

; Function Attrs: noredzone
declare dso_local i32 @xhci_alloc_virt_device(%struct.xhci_hcd*, i32, %struct.usb_device*, i32) #3

; Function Attrs: noredzone
declare dso_local %struct.xhci_slot_ctx* @xhci_get_slot_ctx(%struct.xhci_hcd*, %struct.xhci_container_ctx*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_alloc_dev(%struct.xhci_slot_ctx* %ctx) #1 !dbg !8659 {
entry:
  %ctx.addr = alloca %struct.xhci_slot_ctx*, align 8
  store %struct.xhci_slot_ctx* %ctx, %struct.xhci_slot_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_slot_ctx** %ctx.addr, metadata !8662, metadata !DIExpression()), !dbg !8663
  ret void, !dbg !8663
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_debugfs_create_slot(%struct.xhci_hcd* %x, i32 %s) #1 !dbg !8664 {
entry:
  %x.addr = alloca %struct.xhci_hcd*, align 8
  %s.addr = alloca i32, align 4
  store %struct.xhci_hcd* %x, %struct.xhci_hcd** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %x.addr, metadata !8665, metadata !DIExpression()), !dbg !8666
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !8667, metadata !DIExpression()), !dbg !8668
  ret void, !dbg !8669
}

; Function Attrs: noredzone
declare dso_local void @xhci_free_virt_device(%struct.xhci_hcd*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xhci_find_raw_port_number(%struct.usb_hcd* %hcd, i32 %port1) #1 !dbg !8670 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %port1.addr = alloca i32, align 4
  %rhub = alloca %struct.xhci_hub*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !8671, metadata !DIExpression()), !dbg !8672
  store i32 %port1, i32* %port1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port1.addr, metadata !8673, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.declare(metadata %struct.xhci_hub** %rhub, metadata !8675, metadata !DIExpression()), !dbg !8676
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8677
  %call = call %struct.xhci_hub* @xhci_get_rhub(%struct.usb_hcd* %0) #11, !dbg !8678
  store %struct.xhci_hub* %call, %struct.xhci_hub** %rhub, align 8, !dbg !8679
  %1 = load %struct.xhci_hub*, %struct.xhci_hub** %rhub, align 8, !dbg !8680
  %ports = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %1, i32 0, i32 0, !dbg !8681
  %2 = load %struct.xhci_port**, %struct.xhci_port*** %ports, align 8, !dbg !8681
  %3 = load i32, i32* %port1.addr, align 4, !dbg !8682
  %sub = sub i32 %3, 1, !dbg !8683
  %idxprom = sext i32 %sub to i64, !dbg !8680
  %arrayidx = getelementptr %struct.xhci_port*, %struct.xhci_port** %2, i64 %idxprom, !dbg !8680
  %4 = load %struct.xhci_port*, %struct.xhci_port** %arrayidx, align 8, !dbg !8680
  %hw_portnum = getelementptr inbounds %struct.xhci_port, %struct.xhci_port* %4, i32 0, i32 1, !dbg !8684
  %5 = load i32, i32* %hw_portnum, align 8, !dbg !8684
  %add = add i32 %5, 1, !dbg !8685
  ret i32 %add, !dbg !8686
}

; Function Attrs: noredzone
declare dso_local %struct.xhci_hub* @xhci_get_rhub(%struct.usb_hcd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @xhci_gen_setup(%struct.usb_hcd* %hcd, void (%struct.device*, %struct.xhci_hcd*)* %get_quirks) #1 !dbg !5601 {
entry:
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %get_quirks.addr = alloca void (%struct.device*, %struct.xhci_hcd*)*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %dev = alloca %struct.device*, align 8
  %minor_rev = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !8687, metadata !DIExpression()), !dbg !8688
  store void (%struct.device*, %struct.xhci_hcd*)* %get_quirks, void (%struct.device*, %struct.xhci_hcd*)** %get_quirks.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.device*, %struct.xhci_hcd*)** %get_quirks.addr, metadata !8689, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !8691, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !8693, metadata !DIExpression()), !dbg !8694
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8695
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %0, i32 0, i32 0, !dbg !8696
  %sysdev = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 1, !dbg !8697
  %1 = load %struct.device*, %struct.device** %sysdev, align 8, !dbg !8697
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !8694
  call void @llvm.dbg.declare(metadata i32* %minor_rev, metadata !8698, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8700, metadata !DIExpression()), !dbg !8701
  %2 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8702
  %self2 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %2, i32 0, i32 0, !dbg !8703
  %sg_tablesize = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self2, i32 0, i32 7, !dbg !8704
  store i32 -1, i32* %sg_tablesize, align 4, !dbg !8705
  %3 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8706
  %self3 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %3, i32 0, i32 0, !dbg !8707
  %no_sg_constraint = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self3, i32 0, i32 6, !dbg !8708
  %bf.load = load i8, i8* %no_sg_constraint, align 2, !dbg !8709
  %bf.clear = and i8 %bf.load, -9, !dbg !8709
  %bf.set = or i8 %bf.clear, 8, !dbg !8709
  store i8 %bf.set, i8* %no_sg_constraint, align 2, !dbg !8709
  %4 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8710
  %self4 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %4, i32 0, i32 0, !dbg !8711
  %no_stop_on_short = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self4, i32 0, i32 6, !dbg !8712
  %bf.load5 = load i8, i8* %no_stop_on_short, align 2, !dbg !8713
  %bf.clear6 = and i8 %bf.load5, -5, !dbg !8713
  %bf.set7 = or i8 %bf.clear6, 4, !dbg !8713
  store i8 %bf.set7, i8* %no_stop_on_short, align 2, !dbg !8713
  %5 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8714
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %5) #11, !dbg !8715
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !8716
  %6 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8717
  %call8 = call i32 @usb_hcd_is_primary_hcd(%struct.usb_hcd* %6) #11, !dbg !8719
  %tobool = icmp ne i32 %call8, 0, !dbg !8719
  br i1 %tobool, label %if.then, label %if.else, !dbg !8720

if.then:                                          ; preds = %entry
  %7 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8721
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8723
  %main_hcd = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %8, i32 0, i32 0, !dbg !8724
  store %struct.usb_hcd* %7, %struct.usb_hcd** %main_hcd, align 8, !dbg !8725
  %9 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8726
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8727
  %usb2_rhub = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %10, i32 0, i32 54, !dbg !8728
  %hcd9 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb2_rhub, i32 0, i32 2, !dbg !8729
  store %struct.usb_hcd* %9, %struct.usb_hcd** %hcd9, align 8, !dbg !8730
  %11 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8731
  %speed = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %11, i32 0, i32 3, !dbg !8732
  store i32 32, i32* %speed, align 8, !dbg !8733
  %12 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8734
  %self10 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %12, i32 0, i32 0, !dbg !8735
  %root_hub = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self10, i32 0, i32 11, !dbg !8736
  %13 = load %struct.usb_device*, %struct.usb_device** %root_hub, align 8, !dbg !8736
  %speed11 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %13, i32 0, i32 4, !dbg !8737
  store i32 3, i32* %speed11, align 4, !dbg !8738
  %14 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8739
  %has_tt = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %14, i32 0, i32 14, !dbg !8740
  %bf.load12 = load i16, i16* %has_tt, align 4, !dbg !8741
  %bf.clear13 = and i16 %bf.load12, -129, !dbg !8741
  %bf.set14 = or i16 %bf.clear13, 128, !dbg !8741
  store i16 %bf.set14, i16* %has_tt, align 4, !dbg !8741
  br label %if.end39, !dbg !8742

if.else:                                          ; preds = %entry
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8743
  %usb3_rhub = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %15, i32 0, i32 55, !dbg !8746
  %min_rev = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb3_rhub, i32 0, i32 5, !dbg !8747
  %16 = load i8, i8* %min_rev, align 1, !dbg !8747
  %conv = zext i8 %16 to i32, !dbg !8743
  %cmp = icmp eq i32 %conv, 1, !dbg !8748
  br i1 %cmp, label %if.then16, label %if.else17, !dbg !8749

if.then16:                                        ; preds = %if.else
  store i32 1, i32* %minor_rev, align 4, !dbg !8750
  br label %if.end, !dbg !8751

if.else17:                                        ; preds = %if.else
  %17 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8752
  %usb3_rhub18 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %17, i32 0, i32 55, !dbg !8753
  %min_rev19 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb3_rhub18, i32 0, i32 5, !dbg !8754
  %18 = load i8, i8* %min_rev19, align 1, !dbg !8754
  %conv20 = zext i8 %18 to i32, !dbg !8752
  %div = sdiv i32 %conv20, 16, !dbg !8755
  store i32 %div, i32* %minor_rev, align 4, !dbg !8756
  br label %if.end

if.end:                                           ; preds = %if.else17, %if.then16
  %19 = load i32, i32* %minor_rev, align 4, !dbg !8757
  switch i32 %19, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb29
  ], !dbg !8758

sw.bb:                                            ; preds = %if.end
  %20 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8759
  %speed21 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %20, i32 0, i32 3, !dbg !8761
  store i32 96, i32* %speed21, align 8, !dbg !8762
  %21 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8763
  %self22 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %21, i32 0, i32 0, !dbg !8764
  %root_hub23 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self22, i32 0, i32 11, !dbg !8765
  %22 = load %struct.usb_device*, %struct.usb_device** %root_hub23, align 8, !dbg !8765
  %speed24 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %22, i32 0, i32 4, !dbg !8766
  store i32 6, i32* %speed24, align 4, !dbg !8767
  %23 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8768
  %self25 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %23, i32 0, i32 0, !dbg !8769
  %root_hub26 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self25, i32 0, i32 11, !dbg !8770
  %24 = load %struct.usb_device*, %struct.usb_device** %root_hub26, align 8, !dbg !8770
  %rx_lanes = getelementptr inbounds %struct.usb_device, %struct.usb_device* %24, i32 0, i32 5, !dbg !8771
  store i32 2, i32* %rx_lanes, align 8, !dbg !8772
  %25 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8773
  %self27 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %25, i32 0, i32 0, !dbg !8774
  %root_hub28 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self27, i32 0, i32 11, !dbg !8775
  %26 = load %struct.usb_device*, %struct.usb_device** %root_hub28, align 8, !dbg !8775
  %tx_lanes = getelementptr inbounds %struct.usb_device, %struct.usb_device* %26, i32 0, i32 6, !dbg !8776
  store i32 2, i32* %tx_lanes, align 4, !dbg !8777
  br label %sw.epilog, !dbg !8778

sw.bb29:                                          ; preds = %if.end
  %27 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8779
  %speed30 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %27, i32 0, i32 3, !dbg !8780
  store i32 80, i32* %speed30, align 8, !dbg !8781
  %28 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8782
  %self31 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %28, i32 0, i32 0, !dbg !8783
  %root_hub32 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self31, i32 0, i32 11, !dbg !8784
  %29 = load %struct.usb_device*, %struct.usb_device** %root_hub32, align 8, !dbg !8784
  %speed33 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %29, i32 0, i32 4, !dbg !8785
  store i32 6, i32* %speed33, align 4, !dbg !8786
  br label %sw.epilog, !dbg !8787

sw.epilog:                                        ; preds = %if.end, %sw.bb29, %sw.bb
  %30 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8788
  %call34 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %30) #11, !dbg !8788
  %self35 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call34, i32 0, i32 0, !dbg !8788
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self35, i32 0, i32 0, !dbg !8788
  %31 = load %struct.device*, %struct.device** %controller, align 8, !dbg !8788
  %32 = load i32, i32* %minor_rev, align 4, !dbg !8788
  %33 = load i32, i32* %minor_rev, align 4, !dbg !8788
  %tobool36 = icmp ne i32 %33, 0, !dbg !8788
  %34 = zext i1 %tobool36 to i64, !dbg !8788
  %cond = select i1 %tobool36, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.31, i64 0, i64 0), !dbg !8788
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %31, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.29, i64 0, i64 0), i32 %32, i8* %cond) #12, !dbg !8788
  %35 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8789
  %36 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8790
  %usb3_rhub37 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %36, i32 0, i32 55, !dbg !8791
  %hcd38 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb3_rhub37, i32 0, i32 2, !dbg !8792
  store %struct.usb_hcd* %35, %struct.usb_hcd** %hcd38, align 8, !dbg !8793
  store i32 0, i32* %retval, align 4, !dbg !8794
  br label %return, !dbg !8794

if.end39:                                         ; preds = %if.then
  br label %do.body, !dbg !8795

do.body:                                          ; preds = %if.end39
  %37 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8796
  %mutex = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %37, i32 0, i32 39, !dbg !8796
  call void @__mutex_init(%struct.mutex* %mutex, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i64 0, i64 0), %struct.lock_class_key* @xhci_gen_setup.__key) #11, !dbg !8796
  br label %do.end, !dbg !8796

do.end:                                           ; preds = %do.body
  %38 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8798
  %regs = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %38, i32 0, i32 16, !dbg !8799
  %39 = load i8*, i8** %regs, align 8, !dbg !8799
  %40 = bitcast i8* %39 to %struct.xhci_cap_regs*, !dbg !8798
  %41 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8800
  %cap_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %41, i32 0, i32 2, !dbg !8801
  store %struct.xhci_cap_regs* %40, %struct.xhci_cap_regs** %cap_regs, align 8, !dbg !8802
  %42 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8803
  %regs40 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %42, i32 0, i32 16, !dbg !8804
  %43 = load i8*, i8** %regs40, align 8, !dbg !8804
  %44 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8805
  %cap_regs41 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %44, i32 0, i32 2, !dbg !8805
  %45 = load %struct.xhci_cap_regs*, %struct.xhci_cap_regs** %cap_regs41, align 8, !dbg !8805
  %hc_capbase = getelementptr inbounds %struct.xhci_cap_regs, %struct.xhci_cap_regs* %45, i32 0, i32 0, !dbg !8805
  %46 = bitcast i32* %hc_capbase to i8*, !dbg !8805
  %call42 = call i32 @readl(i8* %46) #11, !dbg !8805
  %shr = lshr i32 %call42, 0, !dbg !8805
  %and = and i32 %shr, 255, !dbg !8805
  %idx.ext = zext i32 %and to i64, !dbg !8806
  %add.ptr = getelementptr i8, i8* %43, i64 %idx.ext, !dbg !8806
  %47 = bitcast i8* %add.ptr to %struct.xhci_op_regs*, !dbg !8803
  %48 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8807
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %48, i32 0, i32 3, !dbg !8808
  store %struct.xhci_op_regs* %47, %struct.xhci_op_regs** %op_regs, align 8, !dbg !8809
  %49 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8810
  %regs43 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %49, i32 0, i32 16, !dbg !8811
  %50 = load i8*, i8** %regs43, align 8, !dbg !8811
  %51 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8812
  %cap_regs44 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %51, i32 0, i32 2, !dbg !8813
  %52 = load %struct.xhci_cap_regs*, %struct.xhci_cap_regs** %cap_regs44, align 8, !dbg !8813
  %run_regs_off = getelementptr inbounds %struct.xhci_cap_regs, %struct.xhci_cap_regs* %52, i32 0, i32 6, !dbg !8814
  %53 = bitcast i32* %run_regs_off to i8*, !dbg !8815
  %call45 = call i32 @readl(i8* %53) #11, !dbg !8816
  %and46 = and i32 %call45, -32, !dbg !8817
  %idx.ext47 = zext i32 %and46 to i64, !dbg !8818
  %add.ptr48 = getelementptr i8, i8* %50, i64 %idx.ext47, !dbg !8818
  %54 = bitcast i8* %add.ptr48 to %struct.xhci_run_regs*, !dbg !8810
  %55 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8819
  %run_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %55, i32 0, i32 4, !dbg !8820
  store %struct.xhci_run_regs* %54, %struct.xhci_run_regs** %run_regs, align 8, !dbg !8821
  %56 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8822
  %cap_regs49 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %56, i32 0, i32 2, !dbg !8823
  %57 = load %struct.xhci_cap_regs*, %struct.xhci_cap_regs** %cap_regs49, align 8, !dbg !8823
  %hcs_params1 = getelementptr inbounds %struct.xhci_cap_regs, %struct.xhci_cap_regs* %57, i32 0, i32 1, !dbg !8824
  %58 = bitcast i32* %hcs_params1 to i8*, !dbg !8825
  %call50 = call i32 @readl(i8* %58) #11, !dbg !8826
  %59 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8827
  %hcs_params151 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %59, i32 0, i32 7, !dbg !8828
  store i32 %call50, i32* %hcs_params151, align 8, !dbg !8829
  %60 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8830
  %cap_regs52 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %60, i32 0, i32 2, !dbg !8831
  %61 = load %struct.xhci_cap_regs*, %struct.xhci_cap_regs** %cap_regs52, align 8, !dbg !8831
  %hcs_params2 = getelementptr inbounds %struct.xhci_cap_regs, %struct.xhci_cap_regs* %61, i32 0, i32 2, !dbg !8832
  %62 = bitcast i32* %hcs_params2 to i8*, !dbg !8833
  %call53 = call i32 @readl(i8* %62) #11, !dbg !8834
  %63 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8835
  %hcs_params254 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %63, i32 0, i32 8, !dbg !8836
  store i32 %call53, i32* %hcs_params254, align 4, !dbg !8837
  %64 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8838
  %cap_regs55 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %64, i32 0, i32 2, !dbg !8839
  %65 = load %struct.xhci_cap_regs*, %struct.xhci_cap_regs** %cap_regs55, align 8, !dbg !8839
  %hcs_params3 = getelementptr inbounds %struct.xhci_cap_regs, %struct.xhci_cap_regs* %65, i32 0, i32 3, !dbg !8840
  %66 = bitcast i32* %hcs_params3 to i8*, !dbg !8841
  %call56 = call i32 @readl(i8* %66) #11, !dbg !8842
  %67 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8843
  %hcs_params357 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %67, i32 0, i32 9, !dbg !8844
  store i32 %call56, i32* %hcs_params357, align 8, !dbg !8845
  %68 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8846
  %cap_regs58 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %68, i32 0, i32 2, !dbg !8847
  %69 = load %struct.xhci_cap_regs*, %struct.xhci_cap_regs** %cap_regs58, align 8, !dbg !8847
  %hc_capbase59 = getelementptr inbounds %struct.xhci_cap_regs, %struct.xhci_cap_regs* %69, i32 0, i32 0, !dbg !8848
  %70 = bitcast i32* %hc_capbase59 to i8*, !dbg !8849
  %call60 = call i32 @readl(i8* %70) #11, !dbg !8850
  %71 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8851
  %hcc_params = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %71, i32 0, i32 10, !dbg !8852
  store i32 %call60, i32* %hcc_params, align 4, !dbg !8853
  %72 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8854
  %hcc_params61 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %72, i32 0, i32 10, !dbg !8854
  %73 = load i32, i32* %hcc_params61, align 4, !dbg !8854
  %shr62 = lshr i32 %73, 16, !dbg !8854
  %and63 = and i32 %shr62, 65535, !dbg !8854
  %conv64 = trunc i32 %and63 to i16, !dbg !8854
  %74 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8855
  %hci_version = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %74, i32 0, i32 14, !dbg !8856
  store i16 %conv64, i16* %hci_version, align 2, !dbg !8857
  %75 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8858
  %cap_regs65 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %75, i32 0, i32 2, !dbg !8859
  %76 = load %struct.xhci_cap_regs*, %struct.xhci_cap_regs** %cap_regs65, align 8, !dbg !8859
  %hcc_params66 = getelementptr inbounds %struct.xhci_cap_regs, %struct.xhci_cap_regs* %76, i32 0, i32 4, !dbg !8860
  %77 = bitcast i32* %hcc_params66 to i8*, !dbg !8861
  %call67 = call i32 @readl(i8* %77) #11, !dbg !8862
  %78 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8863
  %hcc_params68 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %78, i32 0, i32 10, !dbg !8864
  store i32 %call67, i32* %hcc_params68, align 4, !dbg !8865
  %79 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8866
  %hci_version69 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %79, i32 0, i32 14, !dbg !8868
  %80 = load i16, i16* %hci_version69, align 2, !dbg !8868
  %conv70 = zext i16 %80 to i32, !dbg !8866
  %cmp71 = icmp sgt i32 %conv70, 256, !dbg !8869
  br i1 %cmp71, label %if.then73, label %if.end77, !dbg !8870

if.then73:                                        ; preds = %do.end
  %81 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8871
  %cap_regs74 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %81, i32 0, i32 2, !dbg !8872
  %82 = load %struct.xhci_cap_regs*, %struct.xhci_cap_regs** %cap_regs74, align 8, !dbg !8872
  %hcc_params2 = getelementptr inbounds %struct.xhci_cap_regs, %struct.xhci_cap_regs* %82, i32 0, i32 7, !dbg !8873
  %83 = bitcast i32* %hcc_params2 to i8*, !dbg !8874
  %call75 = call i32 @readl(i8* %83) #11, !dbg !8875
  %84 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8876
  %hcc_params276 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %84, i32 0, i32 11, !dbg !8877
  store i32 %call75, i32* %hcc_params276, align 8, !dbg !8878
  br label %if.end77, !dbg !8876

if.end77:                                         ; preds = %if.then73, %do.end
  %85 = load i64, i64* @quirks, align 8, !dbg !8879
  %86 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8880
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %86, i32 0, i32 50, !dbg !8881
  %87 = load i64, i64* %quirks, align 8, !dbg !8882
  %or = or i64 %87, %85, !dbg !8882
  store i64 %or, i64* %quirks, align 8, !dbg !8882
  %88 = load void (%struct.device*, %struct.xhci_hcd*)*, void (%struct.device*, %struct.xhci_hcd*)** %get_quirks.addr, align 8, !dbg !8883
  %89 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8884
  %90 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8885
  call void %88(%struct.device* %89, %struct.xhci_hcd* %90) #11, !dbg !8883
  %91 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8886
  %hci_version78 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %91, i32 0, i32 14, !dbg !8888
  %92 = load i16, i16* %hci_version78, align 2, !dbg !8888
  %conv79 = zext i16 %92 to i32, !dbg !8886
  %cmp80 = icmp sgt i32 %conv79, 150, !dbg !8889
  br i1 %cmp80, label %if.then82, label %if.end85, !dbg !8890

if.then82:                                        ; preds = %if.end77
  %93 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8891
  %quirks83 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %93, i32 0, i32 50, !dbg !8892
  %94 = load i64, i64* %quirks83, align 8, !dbg !8893
  %or84 = or i64 %94, 16, !dbg !8893
  store i64 %or84, i64* %quirks83, align 8, !dbg !8893
  br label %if.end85, !dbg !8891

if.end85:                                         ; preds = %if.then82, %if.end77
  %95 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8894
  %call86 = call i32 @xhci_halt(%struct.xhci_hcd* %95) #11, !dbg !8895
  store i32 %call86, i32* %retval1, align 4, !dbg !8896
  %96 = load i32, i32* %retval1, align 4, !dbg !8897
  %tobool87 = icmp ne i32 %96, 0, !dbg !8897
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !8899

if.then88:                                        ; preds = %if.end85
  %97 = load i32, i32* %retval1, align 4, !dbg !8900
  store i32 %97, i32* %retval, align 4, !dbg !8901
  br label %return, !dbg !8901

if.end89:                                         ; preds = %if.end85
  %98 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8902
  call void @xhci_zero_64b_regs(%struct.xhci_hcd* %98) #11, !dbg !8903
  %99 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8904
  %call90 = call i32 @xhci_reset(%struct.xhci_hcd* %99) #11, !dbg !8905
  store i32 %call90, i32* %retval1, align 4, !dbg !8906
  %100 = load i32, i32* %retval1, align 4, !dbg !8907
  %tobool91 = icmp ne i32 %100, 0, !dbg !8907
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !8909

if.then92:                                        ; preds = %if.end89
  %101 = load i32, i32* %retval1, align 4, !dbg !8910
  store i32 %101, i32* %retval, align 4, !dbg !8911
  br label %return, !dbg !8911

if.end93:                                         ; preds = %if.end89
  %102 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8912
  %quirks94 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %102, i32 0, i32 50, !dbg !8914
  %103 = load i64, i64* %quirks94, align 8, !dbg !8914
  %and95 = and i64 %103, 8388608, !dbg !8915
  %tobool96 = icmp ne i64 %and95, 0, !dbg !8915
  br i1 %tobool96, label %if.then97, label %if.end102, !dbg !8916

if.then97:                                        ; preds = %if.end93
  %104 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8917
  %hcc_params98 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %104, i32 0, i32 10, !dbg !8918
  %105 = load i32, i32* %hcc_params98, align 4, !dbg !8919
  %conv99 = zext i32 %105 to i64, !dbg !8919
  %and100 = and i64 %conv99, -2, !dbg !8919
  %conv101 = trunc i64 %and100 to i32, !dbg !8919
  store i32 %conv101, i32* %hcc_params98, align 4, !dbg !8919
  br label %if.end102, !dbg !8917

if.end102:                                        ; preds = %if.then97, %if.end93
  %106 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8920
  %hcc_params103 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %106, i32 0, i32 10, !dbg !8920
  %107 = load i32, i32* %hcc_params103, align 4, !dbg !8920
  %and104 = and i32 %107, 1, !dbg !8920
  %tobool105 = icmp ne i32 %and104, 0, !dbg !8920
  br i1 %tobool105, label %land.lhs.true, label %if.else110, !dbg !8922

land.lhs.true:                                    ; preds = %if.end102
  %108 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8923
  %call106 = call i32 @dma_set_mask(%struct.device* %108, i64 -1) #11, !dbg !8924
  %tobool107 = icmp ne i32 %call106, 0, !dbg !8924
  br i1 %tobool107, label %if.else110, label %if.then108, !dbg !8925

if.then108:                                       ; preds = %land.lhs.true
  %109 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8926
  %call109 = call i32 @dma_set_coherent_mask(%struct.device* %109, i64 -1) #11, !dbg !8928
  br label %if.end116, !dbg !8929

if.else110:                                       ; preds = %land.lhs.true, %if.end102
  %110 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8930
  %call111 = call i32 @dma_set_mask(%struct.device* %110, i64 4294967295) #11, !dbg !8932
  store i32 %call111, i32* %retval1, align 4, !dbg !8933
  %111 = load i32, i32* %retval1, align 4, !dbg !8934
  %tobool112 = icmp ne i32 %111, 0, !dbg !8934
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !8936

if.then113:                                       ; preds = %if.else110
  %112 = load i32, i32* %retval1, align 4, !dbg !8937
  store i32 %112, i32* %retval, align 4, !dbg !8938
  br label %return, !dbg !8938

if.end114:                                        ; preds = %if.else110
  %113 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8939
  %call115 = call i32 @dma_set_coherent_mask(%struct.device* %113, i64 4294967295) #11, !dbg !8940
  br label %if.end116

if.end116:                                        ; preds = %if.end114, %if.then108
  %114 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8941
  %call117 = call i32 @xhci_init(%struct.usb_hcd* %114) #11, !dbg !8942
  store i32 %call117, i32* %retval1, align 4, !dbg !8943
  %115 = load i32, i32* %retval1, align 4, !dbg !8944
  %tobool118 = icmp ne i32 %115, 0, !dbg !8944
  br i1 %tobool118, label %if.then119, label %if.end120, !dbg !8946

if.then119:                                       ; preds = %if.end116
  %116 = load i32, i32* %retval1, align 4, !dbg !8947
  store i32 %116, i32* %retval, align 4, !dbg !8948
  br label %return, !dbg !8948

if.end120:                                        ; preds = %if.end116
  %117 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8949
  %call121 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %117) #11, !dbg !8949
  %self122 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call121, i32 0, i32 0, !dbg !8949
  %controller123 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self122, i32 0, i32 0, !dbg !8949
  %118 = load %struct.device*, %struct.device** %controller123, align 8, !dbg !8949
  %119 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8949
  %hcc_params124 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %119, i32 0, i32 10, !dbg !8949
  %120 = load i32, i32* %hcc_params124, align 4, !dbg !8949
  %121 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8949
  %hci_version125 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %121, i32 0, i32 14, !dbg !8949
  %122 = load i16, i16* %hci_version125, align 2, !dbg !8949
  %conv126 = zext i16 %122 to i32, !dbg !8949
  %123 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !8949
  %quirks127 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %123, i32 0, i32 50, !dbg !8949
  %124 = load i64, i64* %quirks127, align 8, !dbg !8949
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %118, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33, i64 0, i64 0), i32 %120, i32 %conv126, i64 %124) #12, !dbg !8949
  store i32 0, i32* %retval, align 4, !dbg !8950
  br label %return, !dbg !8950

return:                                           ; preds = %if.end120, %if.then119, %if.then113, %if.then92, %if.then88, %sw.epilog
  %125 = load i32, i32* %retval, align 4, !dbg !8951
  ret i32 %125, !dbg !8951
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #5

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noredzone
declare dso_local i32 @dma_set_mask(%struct.device*, i64) #3

; Function Attrs: noredzone
declare dso_local i32 @dma_set_coherent_mask(%struct.device*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @xhci_init_driver(%struct.hc_driver* %drv, %struct.xhci_driver_overrides* %over) #1 !dbg !8952 {
entry:
  %drv.addr = alloca %struct.hc_driver*, align 8
  %over.addr = alloca %struct.xhci_driver_overrides*, align 8
  store %struct.hc_driver* %drv, %struct.hc_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hc_driver** %drv.addr, metadata !8963, metadata !DIExpression()), !dbg !8964
  store %struct.xhci_driver_overrides* %over, %struct.xhci_driver_overrides** %over.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_driver_overrides** %over.addr, metadata !8965, metadata !DIExpression()), !dbg !8966
  br label %do.body, !dbg !8967

do.body:                                          ; preds = %entry
  %0 = load %struct.xhci_driver_overrides*, %struct.xhci_driver_overrides** %over.addr, align 8, !dbg !8968
  %tobool = icmp ne %struct.xhci_driver_overrides* %0, null, !dbg !8968
  %lnot = xor i1 %tobool, true, !dbg !8968
  %lnot1 = xor i1 %lnot, true, !dbg !8968
  %lnot2 = xor i1 %lnot1, true, !dbg !8968
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8968
  %conv = sext i32 %lnot.ext to i64, !dbg !8968
  %tobool3 = icmp ne i64 %conv, 0, !dbg !8968
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8971

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !8968

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !8972

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !8974

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !8972

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34, i64 0, i64 0), i32 5377, i32 0, i64 12) #8, !dbg !8976, !srcloc !8978
  br label %do.end7, !dbg !8976

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !8972

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 268) #8, !dbg !8979, !srcloc !8982
  unreachable, !dbg !8983

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !8972

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !8972

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !8971

do.end11:                                         ; preds = %if.end
  %1 = load %struct.hc_driver*, %struct.hc_driver** %drv.addr, align 8, !dbg !8984
  %2 = bitcast %struct.hc_driver* %1 to i8*, !dbg !8985
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 bitcast (%struct.hc_driver* @xhci_hc_driver to i8*), i64 360, i1 false), !dbg !8985
  %3 = load %struct.xhci_driver_overrides*, %struct.xhci_driver_overrides** %over.addr, align 8, !dbg !8986
  %tobool12 = icmp ne %struct.xhci_driver_overrides* %3, null, !dbg !8986
  br i1 %tobool12, label %if.then13, label %if.end24, !dbg !8988

if.then13:                                        ; preds = %do.end11
  %4 = load %struct.xhci_driver_overrides*, %struct.xhci_driver_overrides** %over.addr, align 8, !dbg !8989
  %extra_priv_size = getelementptr inbounds %struct.xhci_driver_overrides, %struct.xhci_driver_overrides* %4, i32 0, i32 0, !dbg !8991
  %5 = load i64, i64* %extra_priv_size, align 8, !dbg !8991
  %6 = load %struct.hc_driver*, %struct.hc_driver** %drv.addr, align 8, !dbg !8992
  %hcd_priv_size = getelementptr inbounds %struct.hc_driver, %struct.hc_driver* %6, i32 0, i32 2, !dbg !8993
  %7 = load i64, i64* %hcd_priv_size, align 8, !dbg !8994
  %add = add i64 %7, %5, !dbg !8994
  store i64 %add, i64* %hcd_priv_size, align 8, !dbg !8994
  %8 = load %struct.xhci_driver_overrides*, %struct.xhci_driver_overrides** %over.addr, align 8, !dbg !8995
  %reset = getelementptr inbounds %struct.xhci_driver_overrides, %struct.xhci_driver_overrides* %8, i32 0, i32 1, !dbg !8997
  %9 = load i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)** %reset, align 8, !dbg !8997
  %tobool14 = icmp ne i32 (%struct.usb_hcd*)* %9, null, !dbg !8995
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !8998

if.then15:                                        ; preds = %if.then13
  %10 = load %struct.xhci_driver_overrides*, %struct.xhci_driver_overrides** %over.addr, align 8, !dbg !8999
  %reset16 = getelementptr inbounds %struct.xhci_driver_overrides, %struct.xhci_driver_overrides* %10, i32 0, i32 1, !dbg !9000
  %11 = load i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)** %reset16, align 8, !dbg !9000
  %12 = load %struct.hc_driver*, %struct.hc_driver** %drv.addr, align 8, !dbg !9001
  %reset17 = getelementptr inbounds %struct.hc_driver, %struct.hc_driver* %12, i32 0, i32 5, !dbg !9002
  store i32 (%struct.usb_hcd*)* %11, i32 (%struct.usb_hcd*)** %reset17, align 8, !dbg !9003
  br label %if.end18, !dbg !9001

if.end18:                                         ; preds = %if.then15, %if.then13
  %13 = load %struct.xhci_driver_overrides*, %struct.xhci_driver_overrides** %over.addr, align 8, !dbg !9004
  %start = getelementptr inbounds %struct.xhci_driver_overrides, %struct.xhci_driver_overrides* %13, i32 0, i32 2, !dbg !9006
  %14 = load i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)** %start, align 8, !dbg !9006
  %tobool19 = icmp ne i32 (%struct.usb_hcd*)* %14, null, !dbg !9004
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !9007

if.then20:                                        ; preds = %if.end18
  %15 = load %struct.xhci_driver_overrides*, %struct.xhci_driver_overrides** %over.addr, align 8, !dbg !9008
  %start21 = getelementptr inbounds %struct.xhci_driver_overrides, %struct.xhci_driver_overrides* %15, i32 0, i32 2, !dbg !9009
  %16 = load i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)** %start21, align 8, !dbg !9009
  %17 = load %struct.hc_driver*, %struct.hc_driver** %drv.addr, align 8, !dbg !9010
  %start22 = getelementptr inbounds %struct.hc_driver, %struct.hc_driver* %17, i32 0, i32 6, !dbg !9011
  store i32 (%struct.usb_hcd*)* %16, i32 (%struct.usb_hcd*)** %start22, align 8, !dbg !9012
  br label %if.end23, !dbg !9010

if.end23:                                         ; preds = %if.then20, %if.end18
  br label %if.end24, !dbg !9013

if.end24:                                         ; preds = %if.end23, %do.end11
  ret void, !dbg !9014
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @xhci_hcd_fini() #0 section ".exit.text" !dbg !9015 {
entry:
  call void @xhci_debugfs_remove_root() #12, !dbg !9016
  ret void, !dbg !9017
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_hcd_init() #0 section ".init.text" !dbg !9018 {
entry:
  %retval = alloca i32, align 4
  br label %do.body, !dbg !9021

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9022

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !9024

do.body1:                                         ; preds = %do.end
  br label %do.end2, !dbg !9025

do.end2:                                          ; preds = %do.body1
  br label %do.body3, !dbg !9027

do.body3:                                         ; preds = %do.end2
  br label %do.end4, !dbg !9028

do.end4:                                          ; preds = %do.body3
  br label %do.body5, !dbg !9030

do.body5:                                         ; preds = %do.end4
  br label %do.end6, !dbg !9031

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !9033

do.body7:                                         ; preds = %do.end6
  br label %do.end8, !dbg !9034

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !9036

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !9037

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !9039

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !9040

do.end12:                                         ; preds = %do.body11
  br label %do.body13, !dbg !9042

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !9043

do.end14:                                         ; preds = %do.body13
  br label %do.body15, !dbg !9045

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !9046

do.end16:                                         ; preds = %do.body15
  %call = call i32 @usb_disabled() #11, !dbg !9048
  %tobool = icmp ne i32 %call, 0, !dbg !9048
  br i1 %tobool, label %if.then, label %if.end, !dbg !9050

if.then:                                          ; preds = %do.end16
  store i32 -19, i32* %retval, align 4, !dbg !9051
  br label %return, !dbg !9051

if.end:                                           ; preds = %do.end16
  call void @xhci_debugfs_create_root() #12, !dbg !9052
  store i32 0, i32* %retval, align 4, !dbg !9053
  br label %return, !dbg !9053

return:                                           ; preds = %if.end, %if.then
  %0 = load i32, i32* %retval, align 4, !dbg !9054
  ret i32 %0, !dbg !9054
}

; Function Attrs: noredzone
declare dso_local i8* @free_irq(i32, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_setup_msix(%struct.xhci_hcd* %xhci) #1 !dbg !9055 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %hcd = alloca %struct.usb_hcd*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %__UNIQUE_ID___x255 = alloca i32, align 4
  %__UNIQUE_ID___y256 = alloca i32, align 4
  %tmp1 = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !9056, metadata !DIExpression()), !dbg !9057
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9058, metadata !DIExpression()), !dbg !9059
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9060, metadata !DIExpression()), !dbg !9061
  store i32 0, i32* %ret, align 4, !dbg !9061
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd, metadata !9062, metadata !DIExpression()), !dbg !9063
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9064
  %call = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %0) #11, !dbg !9065
  store %struct.usb_hcd* %call, %struct.usb_hcd** %hcd, align 8, !dbg !9063
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !9066, metadata !DIExpression()), !dbg !9067
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9068, metadata !DIExpression()), !dbg !9070
  %1 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !9070
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %1, i32 0, i32 0, !dbg !9070
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !9070
  %2 = load %struct.device*, %struct.device** %controller, align 8, !dbg !9070
  %3 = bitcast %struct.device* %2 to i8*, !dbg !9070
  store i8* %3, i8** %__mptr, align 8, !dbg !9070
  br label %do.body, !dbg !9070

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9071

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !9070
  %add.ptr = getelementptr i8, i8* %4, i64 -176, !dbg !9070
  %5 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !9070
  store %struct.pci_dev* %5, %struct.pci_dev** %tmp, align 8, !dbg !9071
  %6 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !9070
  store %struct.pci_dev* %6, %struct.pci_dev** %pdev, align 8, !dbg !9067
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x255, metadata !9073, metadata !DIExpression()), !dbg !9075
  store i32 2, i32* %__UNIQUE_ID___x255, align 4, !dbg !9075
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y256, metadata !9076, metadata !DIExpression()), !dbg !9075
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9075
  %hcs_params1 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 7, !dbg !9075
  %8 = load i32, i32* %hcs_params1, align 8, !dbg !9075
  %shr = lshr i32 %8, 8, !dbg !9075
  %and = and i32 %shr, 2047, !dbg !9075
  store i32 %and, i32* %__UNIQUE_ID___y256, align 4, !dbg !9075
  %9 = load i32, i32* %__UNIQUE_ID___x255, align 4, !dbg !9075
  %10 = load i32, i32* %__UNIQUE_ID___y256, align 4, !dbg !9075
  %cmp = icmp ult i32 %9, %10, !dbg !9075
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9075

cond.true:                                        ; preds = %do.end
  %11 = load i32, i32* %__UNIQUE_ID___x255, align 4, !dbg !9075
  br label %cond.end, !dbg !9075

cond.false:                                       ; preds = %do.end
  %12 = load i32, i32* %__UNIQUE_ID___y256, align 4, !dbg !9075
  br label %cond.end, !dbg !9075

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %11, %cond.true ], [ %12, %cond.false ], !dbg !9075
  store i32 %cond, i32* %tmp1, align 4, !dbg !9075
  %13 = load i32, i32* %tmp1, align 4, !dbg !9075
  %14 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9077
  %msix_count = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %14, i32 0, i32 23, !dbg !9078
  store i32 %13, i32* %msix_count, align 4, !dbg !9079
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9080
  %16 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9081
  %msix_count2 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %16, i32 0, i32 23, !dbg !9082
  %17 = load i32, i32* %msix_count2, align 4, !dbg !9082
  %18 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9083
  %msix_count3 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %18, i32 0, i32 23, !dbg !9084
  %19 = load i32, i32* %msix_count3, align 4, !dbg !9084
  %call4 = call i32 @pci_alloc_irq_vectors(%struct.pci_dev* %15, i32 %17, i32 %19, i32 4) #11, !dbg !9085
  store i32 %call4, i32* %ret, align 4, !dbg !9086
  %20 = load i32, i32* %ret, align 4, !dbg !9087
  %cmp5 = icmp slt i32 %20, 0, !dbg !9089
  br i1 %cmp5, label %if.then, label %if.end, !dbg !9090

if.then:                                          ; preds = %cond.end
  %21 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9091
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %21, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0)) #11, !dbg !9093
  %22 = load i32, i32* %ret, align 4, !dbg !9094
  store i32 %22, i32* %retval, align 4, !dbg !9095
  br label %return, !dbg !9095

if.end:                                           ; preds = %cond.end
  store i32 0, i32* %i, align 4, !dbg !9096
  br label %for.cond, !dbg !9098

for.cond:                                         ; preds = %for.inc, %if.end
  %23 = load i32, i32* %i, align 4, !dbg !9099
  %24 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9101
  %msix_count6 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %24, i32 0, i32 23, !dbg !9102
  %25 = load i32, i32* %msix_count6, align 4, !dbg !9102
  %cmp7 = icmp slt i32 %23, %25, !dbg !9103
  br i1 %cmp7, label %for.body, label %for.end, !dbg !9104

for.body:                                         ; preds = %for.cond
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9105
  %27 = load i32, i32* %i, align 4, !dbg !9107
  %call8 = call i32 @pci_irq_vector(%struct.pci_dev* %26, i32 %27) #11, !dbg !9108
  %28 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9109
  %call9 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %28) #11, !dbg !9110
  %29 = bitcast %struct.usb_hcd* %call9 to i8*, !dbg !9110
  %call10 = call i32 @request_irq(i32 %call8, i32 (i32, i8*)* @xhci_msi_irq, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i64 0, i64 0), i8* %29) #11, !dbg !9111
  store i32 %call10, i32* %ret, align 4, !dbg !9112
  %30 = load i32, i32* %ret, align 4, !dbg !9113
  %tobool = icmp ne i32 %30, 0, !dbg !9113
  br i1 %tobool, label %if.then11, label %if.end12, !dbg !9115

if.then11:                                        ; preds = %for.body
  br label %disable_msix, !dbg !9116

if.end12:                                         ; preds = %for.body
  br label %for.inc, !dbg !9117

for.inc:                                          ; preds = %if.end12
  %31 = load i32, i32* %i, align 4, !dbg !9118
  %inc = add i32 %31, 1, !dbg !9118
  store i32 %inc, i32* %i, align 4, !dbg !9118
  br label %for.cond, !dbg !9119, !llvm.loop !9120

for.end:                                          ; preds = %for.cond
  %32 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !9122
  %msix_enabled = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %32, i32 0, i32 14, !dbg !9123
  %bf.load = load i16, i16* %msix_enabled, align 4, !dbg !9124
  %bf.clear = and i16 %bf.load, -5, !dbg !9124
  %bf.set = or i16 %bf.clear, 4, !dbg !9124
  store i16 %bf.set, i16* %msix_enabled, align 4, !dbg !9124
  %33 = load i32, i32* %ret, align 4, !dbg !9125
  store i32 %33, i32* %retval, align 4, !dbg !9126
  br label %return, !dbg !9126

disable_msix:                                     ; preds = %if.then11
  call void @llvm.dbg.label(metadata !9127), !dbg !9128
  %34 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9129
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %34, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.41, i64 0, i64 0)) #11, !dbg !9130
  br label %while.cond, !dbg !9131

while.cond:                                       ; preds = %while.body, %disable_msix
  %35 = load i32, i32* %i, align 4, !dbg !9132
  %dec = add i32 %35, -1, !dbg !9132
  store i32 %dec, i32* %i, align 4, !dbg !9132
  %cmp13 = icmp sge i32 %dec, 0, !dbg !9133
  br i1 %cmp13, label %while.body, label %while.end, !dbg !9131

while.body:                                       ; preds = %while.cond
  %36 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9134
  %37 = load i32, i32* %i, align 4, !dbg !9135
  %call14 = call i32 @pci_irq_vector(%struct.pci_dev* %36, i32 %37) #11, !dbg !9136
  %38 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9137
  %call15 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %38) #11, !dbg !9138
  %39 = bitcast %struct.usb_hcd* %call15 to i8*, !dbg !9138
  %call16 = call i8* @free_irq(i32 %call14, i8* %39) #11, !dbg !9139
  br label %while.cond, !dbg !9131, !llvm.loop !9140

while.end:                                        ; preds = %while.cond
  %40 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9142
  call void @pci_free_irq_vectors(%struct.pci_dev* %40) #11, !dbg !9143
  %41 = load i32, i32* %ret, align 4, !dbg !9144
  store i32 %41, i32* %retval, align 4, !dbg !9145
  br label %return, !dbg !9145

return:                                           ; preds = %while.end, %for.end, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !9146
  ret i32 %42, !dbg !9146
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_setup_msi(%struct.xhci_hcd* %xhci) #1 !dbg !9147 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %ret = alloca i32, align 4
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !9148, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9150, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !9152, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9154, metadata !DIExpression()), !dbg !9156
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9156
  %call = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %0) #11, !dbg !9156
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call, i32 0, i32 0, !dbg !9156
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !9156
  %1 = load %struct.device*, %struct.device** %controller, align 8, !dbg !9156
  %2 = bitcast %struct.device* %1 to i8*, !dbg !9156
  store i8* %2, i8** %__mptr, align 8, !dbg !9156
  br label %do.body, !dbg !9156

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9157

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9156
  %add.ptr = getelementptr i8, i8* %3, i64 -176, !dbg !9156
  %4 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !9156
  store %struct.pci_dev* %4, %struct.pci_dev** %tmp, align 8, !dbg !9157
  %5 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !9156
  store %struct.pci_dev* %5, %struct.pci_dev** %pdev, align 8, !dbg !9153
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9159
  %call1 = call i32 @pci_alloc_irq_vectors(%struct.pci_dev* %6, i32 1, i32 1, i32 2) #11, !dbg !9160
  store i32 %call1, i32* %ret, align 4, !dbg !9161
  %7 = load i32, i32* %ret, align 4, !dbg !9162
  %cmp = icmp slt i32 %7, 0, !dbg !9164
  br i1 %cmp, label %if.then, label %if.end, !dbg !9165

if.then:                                          ; preds = %do.end
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9166
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %8, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i64 0, i64 0)) #11, !dbg !9168
  %9 = load i32, i32* %ret, align 4, !dbg !9169
  store i32 %9, i32* %retval, align 4, !dbg !9170
  br label %return, !dbg !9170

if.end:                                           ; preds = %do.end
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9171
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 43, !dbg !9172
  %11 = load i32, i32* %irq, align 4, !dbg !9172
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9173
  %call2 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %12) #11, !dbg !9174
  %13 = bitcast %struct.usb_hcd* %call2 to i8*, !dbg !9174
  %call3 = call i32 @request_irq(i32 %11, i32 (i32, i8*)* @xhci_msi_irq, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i64 0, i64 0), i8* %13) #11, !dbg !9175
  store i32 %call3, i32* %ret, align 4, !dbg !9176
  %14 = load i32, i32* %ret, align 4, !dbg !9177
  %tobool = icmp ne i32 %14, 0, !dbg !9177
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !9179

if.then4:                                         ; preds = %if.end
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9180
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %15, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i64 0, i64 0)) #11, !dbg !9182
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !9183
  call void @pci_free_irq_vectors(%struct.pci_dev* %16) #11, !dbg !9184
  br label %if.end5, !dbg !9185

if.end5:                                          ; preds = %if.then4, %if.end
  %17 = load i32, i32* %ret, align 4, !dbg !9186
  store i32 %17, i32* %retval, align 4, !dbg !9187
  br label %return, !dbg !9187

return:                                           ; preds = %if.end5, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !9188
  ret i32 %18, !dbg !9188
}

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #1 !dbg !9189 {
entry:
  %irq.addr = alloca i32, align 4
  %handler.addr = alloca i32 (i32, i8*)*, align 8
  %flags.addr = alloca i64, align 8
  %name.addr = alloca i8*, align 8
  %dev.addr = alloca i8*, align 8
  store i32 %irq, i32* %irq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %irq.addr, metadata !9196, metadata !DIExpression()), !dbg !9197
  store i32 (i32, i8*)* %handler, i32 (i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %handler.addr, metadata !9198, metadata !DIExpression()), !dbg !9199
  store i64 %flags, i64* %flags.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr, metadata !9200, metadata !DIExpression()), !dbg !9201
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9202, metadata !DIExpression()), !dbg !9203
  store i8* %dev, i8** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dev.addr, metadata !9204, metadata !DIExpression()), !dbg !9205
  %0 = load i32, i32* %irq.addr, align 4, !dbg !9206
  %1 = load i32 (i32, i8*)*, i32 (i32, i8*)** %handler.addr, align 8, !dbg !9207
  %2 = load i64, i64* %flags.addr, align 8, !dbg !9208
  %3 = load i8*, i8** %name.addr, align 8, !dbg !9209
  %4 = load i8*, i8** %dev.addr, align 8, !dbg !9210
  %call = call i32 @request_threaded_irq(i32 %0, i32 (i32, i8*)* %1, i32 (i32, i8*)* null, i64 %2, i8* %3, i8* %4) #11, !dbg !9211
  ret i32 %call, !dbg !9212
}

; Function Attrs: noredzone
declare dso_local i32 @usb_hcd_irq(i32, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pci_alloc_irq_vectors(%struct.pci_dev* %dev, i32 %min_vecs, i32 %max_vecs, i32 %flags) #1 !dbg !9213 {
entry:
  %dev.addr = alloca %struct.pci_dev*, align 8
  %min_vecs.addr = alloca i32, align 4
  %max_vecs.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  store %struct.pci_dev* %dev, %struct.pci_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %dev.addr, metadata !9216, metadata !DIExpression()), !dbg !9217
  store i32 %min_vecs, i32* %min_vecs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min_vecs.addr, metadata !9218, metadata !DIExpression()), !dbg !9219
  store i32 %max_vecs, i32* %max_vecs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_vecs.addr, metadata !9220, metadata !DIExpression()), !dbg !9221
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9222, metadata !DIExpression()), !dbg !9223
  %0 = load %struct.pci_dev*, %struct.pci_dev** %dev.addr, align 8, !dbg !9224
  %1 = load i32, i32* %min_vecs.addr, align 4, !dbg !9225
  %2 = load i32, i32* %max_vecs.addr, align 4, !dbg !9226
  %3 = load i32, i32* %flags.addr, align 4, !dbg !9227
  %call = call i32 @pci_alloc_irq_vectors_affinity(%struct.pci_dev* %0, i32 %1, i32 %2, i32 %3, %struct.irq_affinity* null) #11, !dbg !9228
  ret i32 %call, !dbg !9229
}

; Function Attrs: noredzone
declare dso_local i32 @pci_irq_vector(%struct.pci_dev*, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @xhci_msi_irq(i32, i8*) #3

; Function Attrs: noredzone
declare dso_local void @pci_free_irq_vectors(%struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local i32 @pci_alloc_irq_vectors_affinity(%struct.pci_dev*, i32, i32, i32, %struct.irq_affinity*) #3

; Function Attrs: noredzone
declare dso_local i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @lo_hi_readq(i8* %addr) #1 !dbg !9230 {
entry:
  %addr.addr = alloca i8*, align 8
  %p = alloca i32*, align 8
  %low = alloca i32, align 4
  %high = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9234, metadata !DIExpression()), !dbg !9235
  call void @llvm.dbg.declare(metadata i32** %p, metadata !9236, metadata !DIExpression()), !dbg !9240
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !9241
  %1 = bitcast i8* %0 to i32*, !dbg !9241
  store i32* %1, i32** %p, align 8, !dbg !9240
  call void @llvm.dbg.declare(metadata i32* %low, metadata !9242, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.declare(metadata i32* %high, metadata !9244, metadata !DIExpression()), !dbg !9245
  %2 = load i32*, i32** %p, align 8, !dbg !9246
  %3 = bitcast i32* %2 to i8*, !dbg !9246
  %call = call i32 @readl(i8* %3) #11, !dbg !9247
  store i32 %call, i32* %low, align 4, !dbg !9248
  %4 = load i32*, i32** %p, align 8, !dbg !9249
  %add.ptr = getelementptr i32, i32* %4, i64 1, !dbg !9250
  %5 = bitcast i32* %add.ptr to i8*, !dbg !9249
  %call1 = call i32 @readl(i8* %5) #11, !dbg !9251
  store i32 %call1, i32* %high, align 4, !dbg !9252
  %6 = load i32, i32* %low, align 4, !dbg !9253
  %conv = zext i32 %6 to i64, !dbg !9253
  %7 = load i32, i32* %high, align 4, !dbg !9254
  %conv2 = zext i32 %7 to i64, !dbg !9255
  %shl = shl i64 %conv2, 32, !dbg !9256
  %add = add i64 %conv, %shl, !dbg !9257
  ret i64 %add, !dbg !9258
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #1 !dbg !9259 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9260, metadata !DIExpression()), !dbg !9262
  %0 = load i64, i64* %__edi, align 8, !dbg !9262
  store i64 %0, i64* %__edi, align 8, !dbg !9262
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9263, metadata !DIExpression()), !dbg !9262
  %1 = load i64, i64* %__esi, align 8, !dbg !9262
  store i64 %1, i64* %__esi, align 8, !dbg !9262
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9264, metadata !DIExpression()), !dbg !9262
  %2 = load i64, i64* %__edx, align 8, !dbg !9262
  store i64 %2, i64* %__edx, align 8, !dbg !9262
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9265, metadata !DIExpression()), !dbg !9262
  %3 = load i64, i64* %__ecx, align 8, !dbg !9262
  store i64 %3, i64* %__ecx, align 8, !dbg !9262
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9266, metadata !DIExpression()), !dbg !9262
  %4 = load i64, i64* %__eax, align 8, !dbg !9262
  store i64 %4, i64* %__eax, align 8, !dbg !9262
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !9262
  %6 = call i64 @llvm.read_register.i64(metadata !5648), !dbg !9262
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #8, !dbg !9262, !srcloc !9267
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9262
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9262
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9262
  call void @llvm.write_register.i64(metadata !5648, i64 %asmresult1), !dbg !9262
  ret void, !dbg !9268
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #7

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #1 !dbg !9269 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9270, metadata !DIExpression()), !dbg !9272
  %0 = load i64, i64* %__edi, align 8, !dbg !9272
  store i64 %0, i64* %__edi, align 8, !dbg !9272
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9273, metadata !DIExpression()), !dbg !9272
  %1 = load i64, i64* %__esi, align 8, !dbg !9272
  store i64 %1, i64* %__esi, align 8, !dbg !9272
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9274, metadata !DIExpression()), !dbg !9272
  %2 = load i64, i64* %__edx, align 8, !dbg !9272
  store i64 %2, i64* %__edx, align 8, !dbg !9272
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9275, metadata !DIExpression()), !dbg !9272
  %3 = load i64, i64* %__ecx, align 8, !dbg !9272
  store i64 %3, i64* %__ecx, align 8, !dbg !9272
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9276, metadata !DIExpression()), !dbg !9272
  %4 = load i64, i64* %__eax, align 8, !dbg !9272
  store i64 %4, i64* %__eax, align 8, !dbg !9272
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !9272
  %6 = call i64 @llvm.read_register.i64(metadata !5648), !dbg !9272
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #8, !dbg !9272, !srcloc !9277
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9272
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9272
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9272
  call void @llvm.write_register.i64(metadata !5648, i64 %asmresult1), !dbg !9272
  ret void, !dbg !9278
}

; Function Attrs: noredzone
declare dso_local i32 @xhci_port_state_to_neutral(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #1 !dbg !9279 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !9283, metadata !DIExpression()), !dbg !9284
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !9285, metadata !DIExpression()), !dbg !9286
  ret i1 true, !dbg !9287
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #1 !dbg !9288 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9292, metadata !DIExpression()), !dbg !9293
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9294, metadata !DIExpression()), !dbg !9295
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !9296, metadata !DIExpression()), !dbg !9297
  ret void, !dbg !9298
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noredzone
declare dso_local void @synchronize_irq(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_write_64(%struct.xhci_hcd* %xhci, i64 %val, i64* %regs) #1 !dbg !9299 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %val.addr = alloca i64, align 8
  %regs.addr = alloca i64*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !9302, metadata !DIExpression()), !dbg !9303
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !9304, metadata !DIExpression()), !dbg !9305
  store i64* %regs, i64** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %regs.addr, metadata !9306, metadata !DIExpression()), !dbg !9307
  %0 = load i64, i64* %val.addr, align 8, !dbg !9308
  %1 = load i64*, i64** %regs.addr, align 8, !dbg !9309
  %2 = bitcast i64* %1 to i8*, !dbg !9309
  call void @lo_hi_writeq(i64 %0, i8* %2) #11, !dbg !9310
  ret void, !dbg !9311
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @lo_hi_writeq(i64 %val, i8* %addr) #1 !dbg !9312 {
entry:
  %val.addr = alloca i64, align 8
  %addr.addr = alloca i8*, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !9315, metadata !DIExpression()), !dbg !9316
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !9317, metadata !DIExpression()), !dbg !9318
  %0 = load i64, i64* %val.addr, align 8, !dbg !9319
  %conv = trunc i64 %0 to i32, !dbg !9319
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !9320
  call void @writel(i32 %conv, i8* %1) #11, !dbg !9321
  %2 = load i64, i64* %val.addr, align 8, !dbg !9322
  %shr = lshr i64 %2, 32, !dbg !9323
  %conv1 = trunc i64 %shr to i32, !dbg !9322
  %3 = load i8*, i8** %addr.addr, align 8, !dbg !9324
  %add.ptr = getelementptr i8, i8* %3, i64 4, !dbg !9325
  call void @writel(i32 %conv1, i8* %add.ptr) #11, !dbg !9326
  ret void, !dbg !9327
}

; Function Attrs: noredzone
declare dso_local i64 @xhci_trb_virt_to_dma(%struct.xhci_segment*, %union.xhci_trb*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @device_iommu_mapped(%struct.device* %dev) #1 !dbg !9328 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9331, metadata !DIExpression()), !dbg !9332
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9333
  %iommu_group = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 32, !dbg !9334
  %1 = load %struct.iommu_group*, %struct.iommu_group** %iommu_group, align 8, !dbg !9334
  %cmp = icmp ne %struct.iommu_group* %1, null, !dbg !9335
  ret i1 %cmp, !dbg !9336
}

; Function Attrs: noredzone
declare dso_local i32 @xhci_mem_init(%struct.xhci_hcd*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @xhci_compliance_mode_recovery_timer_quirk_check() #1 !dbg !9337 {
entry:
  %retval = alloca i1, align 1
  %dmi_product_name = alloca i8*, align 8
  %dmi_sys_vendor = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %dmi_product_name, metadata !9338, metadata !DIExpression()), !dbg !9339
  call void @llvm.dbg.declare(metadata i8** %dmi_sys_vendor, metadata !9340, metadata !DIExpression()), !dbg !9341
  %call = call i8* @dmi_get_system_info(i32 7) #11, !dbg !9342
  store i8* %call, i8** %dmi_product_name, align 8, !dbg !9343
  %call1 = call i8* @dmi_get_system_info(i32 6) #11, !dbg !9344
  store i8* %call1, i8** %dmi_sys_vendor, align 8, !dbg !9345
  %0 = load i8*, i8** %dmi_product_name, align 8, !dbg !9346
  %tobool = icmp ne i8* %0, null, !dbg !9346
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9348

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %dmi_sys_vendor, align 8, !dbg !9349
  %tobool2 = icmp ne i8* %1, null, !dbg !9349
  br i1 %tobool2, label %if.end, label %if.then, !dbg !9350

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !9351
  br label %return, !dbg !9351

if.end:                                           ; preds = %lor.lhs.false
  %2 = load i8*, i8** %dmi_sys_vendor, align 8, !dbg !9352
  %call3 = call i8* @strstr(i8* %2, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.51, i64 0, i64 0)) #11, !dbg !9354
  %tobool4 = icmp ne i8* %call3, null, !dbg !9354
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !9355

if.then5:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !9356
  br label %return, !dbg !9356

if.end6:                                          ; preds = %if.end
  %3 = load i8*, i8** %dmi_product_name, align 8, !dbg !9357
  %call7 = call i8* @strstr(i8* %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i64 0, i64 0)) #11, !dbg !9359
  %tobool8 = icmp ne i8* %call7, null, !dbg !9359
  br i1 %tobool8, label %if.then18, label %lor.lhs.false9, !dbg !9360

lor.lhs.false9:                                   ; preds = %if.end6
  %4 = load i8*, i8** %dmi_product_name, align 8, !dbg !9361
  %call10 = call i8* @strstr(i8* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i64 0, i64 0)) #11, !dbg !9362
  %tobool11 = icmp ne i8* %call10, null, !dbg !9362
  br i1 %tobool11, label %if.then18, label %lor.lhs.false12, !dbg !9363

lor.lhs.false12:                                  ; preds = %lor.lhs.false9
  %5 = load i8*, i8** %dmi_product_name, align 8, !dbg !9364
  %call13 = call i8* @strstr(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i64 0, i64 0)) #11, !dbg !9365
  %tobool14 = icmp ne i8* %call13, null, !dbg !9365
  br i1 %tobool14, label %if.then18, label %lor.lhs.false15, !dbg !9366

lor.lhs.false15:                                  ; preds = %lor.lhs.false12
  %6 = load i8*, i8** %dmi_product_name, align 8, !dbg !9367
  %call16 = call i8* @strstr(i8* %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i64 0, i64 0)) #11, !dbg !9368
  %tobool17 = icmp ne i8* %call16, null, !dbg !9368
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !9369

if.then18:                                        ; preds = %lor.lhs.false15, %lor.lhs.false12, %lor.lhs.false9, %if.end6
  store i1 true, i1* %retval, align 1, !dbg !9370
  br label %return, !dbg !9370

if.end19:                                         ; preds = %lor.lhs.false15
  store i1 false, i1* %retval, align 1, !dbg !9371
  br label %return, !dbg !9371

return:                                           ; preds = %if.end19, %if.then18, %if.then5, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !9372
  ret i1 %7, !dbg !9372
}

; Function Attrs: noredzone
declare dso_local i8* @dmi_get_system_info(i32) #3

; Function Attrs: noredzone
declare dso_local i8* @strstr(i8*, i8*) #3

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @compliance_mode_recovery(%struct.timer_list* %t) #1 !dbg !9373 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !7830, metadata !DIExpression()), !dbg !9374
  %t.addr = alloca %struct.timer_list*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %hcd = alloca %struct.usb_hcd*, align 8
  %rhub = alloca %struct.xhci_hub*, align 8
  %temp = alloca i32, align 4
  %i = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.xhci_hcd*, align 8
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !9377, metadata !DIExpression()), !dbg !9378
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !9379, metadata !DIExpression()), !dbg !9380
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd, metadata !9381, metadata !DIExpression()), !dbg !9382
  call void @llvm.dbg.declare(metadata %struct.xhci_hub** %rhub, metadata !9383, metadata !DIExpression()), !dbg !9384
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !9385, metadata !DIExpression()), !dbg !9386
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9387, metadata !DIExpression()), !dbg !9388
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9389, metadata !DIExpression()), !dbg !9391
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !9391
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !9391
  store i8* %1, i8** %__mptr, align 8, !dbg !9391
  br label %do.body, !dbg !9391

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9392

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9391
  %add.ptr = getelementptr i8, i8* %2, i64 -6232, !dbg !9391
  %3 = bitcast i8* %add.ptr to %struct.xhci_hcd*, !dbg !9391
  store %struct.xhci_hcd* %3, %struct.xhci_hcd** %tmp, align 8, !dbg !9392
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %tmp, align 8, !dbg !9391
  store %struct.xhci_hcd* %4, %struct.xhci_hcd** %xhci, align 8, !dbg !9394
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9395
  %usb3_rhub = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 55, !dbg !9396
  store %struct.xhci_hub* %usb3_rhub, %struct.xhci_hub** %rhub, align 8, !dbg !9397
  store i32 0, i32* %i, align 4, !dbg !9398
  br label %for.cond, !dbg !9400

for.cond:                                         ; preds = %for.inc, %do.end
  %6 = load i32, i32* %i, align 4, !dbg !9401
  %7 = load %struct.xhci_hub*, %struct.xhci_hub** %rhub, align 8, !dbg !9403
  %num_ports = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %7, i32 0, i32 1, !dbg !9404
  %8 = load i32, i32* %num_ports, align 8, !dbg !9404
  %cmp = icmp ult i32 %6, %8, !dbg !9405
  br i1 %cmp, label %for.body, label %for.end, !dbg !9406

for.body:                                         ; preds = %for.cond
  %9 = load %struct.xhci_hub*, %struct.xhci_hub** %rhub, align 8, !dbg !9407
  %ports = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %9, i32 0, i32 0, !dbg !9409
  %10 = load %struct.xhci_port**, %struct.xhci_port*** %ports, align 8, !dbg !9409
  %11 = load i32, i32* %i, align 4, !dbg !9410
  %idxprom = sext i32 %11 to i64, !dbg !9407
  %arrayidx = getelementptr %struct.xhci_port*, %struct.xhci_port** %10, i64 %idxprom, !dbg !9407
  %12 = load %struct.xhci_port*, %struct.xhci_port** %arrayidx, align 8, !dbg !9407
  %addr = getelementptr inbounds %struct.xhci_port, %struct.xhci_port* %12, i32 0, i32 0, !dbg !9411
  %13 = load i32*, i32** %addr, align 8, !dbg !9411
  %14 = bitcast i32* %13 to i8*, !dbg !9407
  %call = call i32 @readl(i8* %14) #11, !dbg !9412
  store i32 %call, i32* %temp, align 4, !dbg !9413
  %15 = load i32, i32* %temp, align 4, !dbg !9414
  %and = and i32 %15, 480, !dbg !9416
  %cmp1 = icmp eq i32 %and, 320, !dbg !9417
  br i1 %cmp1, label %if.then, label %if.end4, !dbg !9418

if.then:                                          ; preds = %for.body
  %16 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9419
  %17 = load i32, i32* %i, align 4, !dbg !9421
  %add = add i32 %17, 1, !dbg !9422
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %16, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.57, i64 0, i64 0), i32 %add) #11, !dbg !9423
  %18 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9424
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %18, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.58, i64 0, i64 0)) #11, !dbg !9425
  %19 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9426
  %shared_hcd = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %19, i32 0, i32 1, !dbg !9427
  %20 = load %struct.usb_hcd*, %struct.usb_hcd** %shared_hcd, align 8, !dbg !9427
  store %struct.usb_hcd* %20, %struct.usb_hcd** %hcd, align 8, !dbg !9428
  %21 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !9429
  %state = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %21, i32 0, i32 27, !dbg !9431
  %22 = load i32, i32* %state, align 8, !dbg !9431
  %cmp2 = icmp eq i32 %22, 4, !dbg !9432
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !9433

if.then3:                                         ; preds = %if.then
  %23 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !9434
  call void @usb_hcd_resume_root_hub(%struct.usb_hcd* %23) #11, !dbg !9435
  br label %if.end, !dbg !9435

if.end:                                           ; preds = %if.then3, %if.then
  %24 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !9436
  call void @usb_hcd_poll_rh_status(%struct.usb_hcd* %24) #11, !dbg !9437
  br label %if.end4, !dbg !9438

if.end4:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !9439

for.inc:                                          ; preds = %if.end4
  %25 = load i32, i32* %i, align 4, !dbg !9440
  %inc = add i32 %25, 1, !dbg !9440
  store i32 %inc, i32* %i, align 4, !dbg !9440
  br label %for.cond, !dbg !9441, !llvm.loop !9442

for.end:                                          ; preds = %for.cond
  %26 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9444
  %port_status_u0 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %26, i32 0, i32 62, !dbg !9445
  %27 = load i32, i32* %port_status_u0, align 8, !dbg !9445
  %28 = load %struct.xhci_hub*, %struct.xhci_hub** %rhub, align 8, !dbg !9446
  %num_ports5 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %28, i32 0, i32 1, !dbg !9447
  %29 = load i32, i32* %num_ports5, align 8, !dbg !9447
  %shl = shl i32 1, %29, !dbg !9448
  %sub = sub i32 %shl, 1, !dbg !9449
  %cmp6 = icmp ne i32 %27, %sub, !dbg !9450
  br i1 %cmp6, label %if.then7, label %if.end11, !dbg !9451

if.then7:                                         ; preds = %for.end
  %30 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9452
  %comp_mode_recovery_timer = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %30, i32 0, i32 61, !dbg !9453
  %31 = load volatile i64, i64* @jiffies, align 8, !dbg !9454
  store i32 2000, i32* %m.addr.i, align 4
  %32 = load i32, i32* %m.addr.i, align 4, !dbg !9455
  %33 = call i1 @llvm.is.constant.i32(i32 %32) #8, !dbg !9456
  br i1 %33, label %if.then.i, label %if.else.i, !dbg !9457

if.then.i:                                        ; preds = %if.then7
  %34 = load i32, i32* %m.addr.i, align 4, !dbg !9458
  %cmp.i = icmp slt i32 %34, 0, !dbg !9459
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9460

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !9461
  br label %msecs_to_jiffies.exit, !dbg !9461

if.end.i:                                         ; preds = %if.then.i
  %35 = load i32, i32* %m.addr.i, align 4, !dbg !9462
  %call.i = call i64 @_msecs_to_jiffies(i32 %35) #13, !dbg !9463
  store i64 %call.i, i64* %retval.i, align 8, !dbg !9464
  br label %msecs_to_jiffies.exit, !dbg !9464

if.else.i:                                        ; preds = %if.then7
  %36 = load i32, i32* %m.addr.i, align 4, !dbg !9465
  %call2.i = call i64 @__msecs_to_jiffies(i32 %36) #13, !dbg !9466
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !9467
  br label %msecs_to_jiffies.exit, !dbg !9467

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %37 = load i64, i64* %retval.i, align 8, !dbg !9468
  %add9 = add i64 %31, %37, !dbg !9469
  %call10 = call i32 @mod_timer(%struct.timer_list* %comp_mode_recovery_timer, i64 %add9) #11, !dbg !9470
  br label %if.end11, !dbg !9470

if.end11:                                         ; preds = %msecs_to_jiffies.exit, %for.end
  ret void, !dbg !9471
}

; Function Attrs: noredzone
declare dso_local void @add_timer(%struct.timer_list*) #3

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #1 !dbg !9472 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !9473, metadata !DIExpression()), !dbg !9474
  %0 = load i32, i32* %m.addr, align 4, !dbg !9475
  %conv = zext i32 %0 to i64, !dbg !9475
  %add = add i64 %conv, 4, !dbg !9476
  %sub = sub i64 %add, 1, !dbg !9477
  %div = sdiv i64 %sub, 4, !dbg !9478
  ret i64 %div, !dbg !9479
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #3

; Function Attrs: noredzone
declare dso_local %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx*) #3

; Function Attrs: noredzone
declare dso_local void @xhci_endpoint_copy(%struct.xhci_hcd*, %struct.xhci_container_ctx*, %struct.xhci_container_ctx*, i32) #3

; Function Attrs: noredzone
declare dso_local %struct.xhci_ep_ctx* @xhci_get_ep_ctx(%struct.xhci_hcd*, %struct.xhci_container_ctx*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_get_endpoint_flag_from_index(i32 %ep_index) #1 !dbg !9480 {
entry:
  %ep_index.addr = alloca i32, align 4
  store i32 %ep_index, i32* %ep_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep_index.addr, metadata !9481, metadata !DIExpression()), !dbg !9482
  %0 = load i32, i32* %ep_index.addr, align 4, !dbg !9483
  %add = add i32 %0, 1, !dbg !9484
  %shl = shl i32 1, %add, !dbg !9485
  ret i32 %shl, !dbg !9486
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_setup_input_ctx_for_config_ep(%struct.xhci_hcd* %xhci, %struct.xhci_container_ctx* %in_ctx, %struct.xhci_container_ctx* %out_ctx, %struct.xhci_input_control_ctx* %ctrl_ctx, i32 %add_flags, i32 %drop_flags) #1 !dbg !9487 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %in_ctx.addr = alloca %struct.xhci_container_ctx*, align 8
  %out_ctx.addr = alloca %struct.xhci_container_ctx*, align 8
  %ctrl_ctx.addr = alloca %struct.xhci_input_control_ctx*, align 8
  %add_flags.addr = alloca i32, align 4
  %drop_flags.addr = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !9490, metadata !DIExpression()), !dbg !9491
  store %struct.xhci_container_ctx* %in_ctx, %struct.xhci_container_ctx** %in_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_container_ctx** %in_ctx.addr, metadata !9492, metadata !DIExpression()), !dbg !9493
  store %struct.xhci_container_ctx* %out_ctx, %struct.xhci_container_ctx** %out_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_container_ctx** %out_ctx.addr, metadata !9494, metadata !DIExpression()), !dbg !9495
  store %struct.xhci_input_control_ctx* %ctrl_ctx, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx.addr, metadata !9496, metadata !DIExpression()), !dbg !9497
  store i32 %add_flags, i32* %add_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %add_flags.addr, metadata !9498, metadata !DIExpression()), !dbg !9499
  store i32 %drop_flags, i32* %drop_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %drop_flags.addr, metadata !9500, metadata !DIExpression()), !dbg !9501
  %0 = load i32, i32* %add_flags.addr, align 4, !dbg !9502
  %1 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8, !dbg !9503
  %add_flags1 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %1, i32 0, i32 1, !dbg !9504
  store i32 %0, i32* %add_flags1, align 4, !dbg !9505
  %2 = load i32, i32* %drop_flags.addr, align 4, !dbg !9506
  %3 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8, !dbg !9507
  %drop_flags2 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %3, i32 0, i32 0, !dbg !9508
  store i32 %2, i32* %drop_flags2, align 4, !dbg !9509
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !9510
  %5 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx.addr, align 8, !dbg !9511
  %6 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx.addr, align 8, !dbg !9512
  call void @xhci_slot_copy(%struct.xhci_hcd* %4, %struct.xhci_container_ctx* %5, %struct.xhci_container_ctx* %6) #11, !dbg !9513
  %7 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8, !dbg !9514
  %add_flags3 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %7, i32 0, i32 1, !dbg !9515
  %8 = load i32, i32* %add_flags3, align 4, !dbg !9516
  %or = or i32 %8, 1, !dbg !9516
  store i32 %or, i32* %add_flags3, align 4, !dbg !9516
  ret void, !dbg !9517
}

; Function Attrs: noredzone
declare dso_local void @xhci_slot_copy(%struct.xhci_hcd*, %struct.xhci_container_ctx*, %struct.xhci_container_ctx*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #1 !dbg !9518 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !9519, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9522, metadata !DIExpression()), !dbg !9521
  %0 = load i64, i64* %__edi, align 8, !dbg !9521
  store i64 %0, i64* %__edi, align 8, !dbg !9521
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9523, metadata !DIExpression()), !dbg !9521
  %1 = load i64, i64* %__esi, align 8, !dbg !9521
  store i64 %1, i64* %__esi, align 8, !dbg !9521
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9524, metadata !DIExpression()), !dbg !9521
  %2 = load i64, i64* %__edx, align 8, !dbg !9521
  store i64 %2, i64* %__edx, align 8, !dbg !9521
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9525, metadata !DIExpression()), !dbg !9521
  %3 = load i64, i64* %__ecx, align 8, !dbg !9521
  store i64 %3, i64* %__ecx, align 8, !dbg !9521
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9526, metadata !DIExpression()), !dbg !9521
  %4 = load i64, i64* %__eax, align 8, !dbg !9521
  store i64 %4, i64* %__eax, align 8, !dbg !9521
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !9521
  %6 = call i64 @llvm.read_register.i64(metadata !5648), !dbg !9527
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #8, !dbg !9527, !srcloc !9530
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !9527
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !9527
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9527
  call void @llvm.write_register.i64(metadata !5648, i64 %asmresult1), !dbg !9527
  %8 = load i64, i64* %__eax, align 8, !dbg !9527
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !9531, metadata !DIExpression()), !dbg !9533
  store i64 -1, i64* %__mask, align 8, !dbg !9533
  %9 = load i64, i64* %__mask, align 8, !dbg !9533
  store i64 %9, i64* %tmp, align 8, !dbg !9533
  %10 = load i64, i64* %tmp, align 8, !dbg !9533
  %and = and i64 %8, %10, !dbg !9527
  store i64 %and, i64* %__ret, align 8, !dbg !9527
  %11 = load i64, i64* %__ret, align 8, !dbg !9521
  store i64 %11, i64* %tmp2, align 8, !dbg !9534
  %12 = load i64, i64* %tmp2, align 8, !dbg !9521
  ret i64 %12, !dbg !9535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #1 !dbg !9536 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !9537, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !9539, metadata !DIExpression()), !dbg !9541
  %0 = load i64, i64* %__edi, align 8, !dbg !9541
  store i64 %0, i64* %__edi, align 8, !dbg !9541
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !9542, metadata !DIExpression()), !dbg !9541
  %1 = load i64, i64* %__esi, align 8, !dbg !9541
  store i64 %1, i64* %__esi, align 8, !dbg !9541
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !9543, metadata !DIExpression()), !dbg !9541
  %2 = load i64, i64* %__edx, align 8, !dbg !9541
  store i64 %2, i64* %__edx, align 8, !dbg !9541
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !9544, metadata !DIExpression()), !dbg !9541
  %3 = load i64, i64* %__ecx, align 8, !dbg !9541
  store i64 %3, i64* %__ecx, align 8, !dbg !9541
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !9545, metadata !DIExpression()), !dbg !9541
  %4 = load i64, i64* %__eax, align 8, !dbg !9541
  store i64 %4, i64* %__eax, align 8, !dbg !9541
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !9541
  %6 = call i64 @llvm.read_register.i64(metadata !5648), !dbg !9541
  %7 = load i64, i64* %f.addr, align 8, !dbg !9541
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #8, !dbg !9541, !srcloc !9546
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !9541
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !9541
  store i64 %asmresult, i64* %__eax, align 8, !dbg !9541
  call void @llvm.write_register.i64(metadata !5648, i64 %asmresult1), !dbg !9541
  ret void, !dbg !9547
}

; Function Attrs: noredzone
declare dso_local i32 @xhci_irq(%struct.usb_hcd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_stop(%struct.usb_hcd* %hcd) #1 !dbg !9548 {
entry:
  %lock.addr.i31 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i31, metadata !6333, metadata !DIExpression()), !dbg !9549
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6340, metadata !DIExpression()), !dbg !9551
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %temp = alloca i32, align 4
  %xhci = alloca %struct.xhci_hcd*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !9553, metadata !DIExpression()), !dbg !9554
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !9555, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !9557, metadata !DIExpression()), !dbg !9558
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !9559
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !9560
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !9558
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9561
  %mutex = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %1, i32 0, i32 39, !dbg !9562
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !9563
  %2 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !9564
  %call1 = call i32 @usb_hcd_is_primary_hcd(%struct.usb_hcd* %2) #11, !dbg !9566
  %tobool = icmp ne i32 %call1, 0, !dbg !9566
  br i1 %tobool, label %if.end, label %if.then, !dbg !9567

if.then:                                          ; preds = %entry
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9568
  %mutex2 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %3, i32 0, i32 39, !dbg !9570
  call void @mutex_unlock(%struct.mutex* %mutex2) #11, !dbg !9571
  br label %return, !dbg !9572

if.end:                                           ; preds = %entry
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9573
  call void @xhci_dbc_exit(%struct.xhci_hcd* %4) #11, !dbg !9574
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9575
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 12, !dbg !9576
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #13, !dbg !9577
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9578, !srcloc !6368
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9579
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !9579
  %rlock.i = bitcast %union.anon.2* %7 to %struct.raw_spinlock*, !dbg !9579
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9580
  %xhc_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %8, i32 0, i32 47, !dbg !9581
  %9 = load i32, i32* %xhc_state, align 8, !dbg !9582
  %or = or i32 %9, 2, !dbg !9582
  store i32 %or, i32* %xhc_state, align 8, !dbg !9582
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9583
  %cmd_ring_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %10, i32 0, i32 29, !dbg !9584
  store i32 4, i32* %cmd_ring_state, align 8, !dbg !9585
  %11 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9586
  %call3 = call i32 @xhci_halt(%struct.xhci_hcd* %11) #11, !dbg !9587
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9588
  %call4 = call i32 @xhci_reset(%struct.xhci_hcd* %12) #11, !dbg !9589
  %13 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9590
  %lock5 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %13, i32 0, i32 12, !dbg !9591
  store %struct.spinlock* %lock5, %struct.spinlock** %lock.addr.i31, align 8
  call void @arch_local_irq_enable() #13, !dbg !9592
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9593, !srcloc !6387
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i31, align 8, !dbg !9594
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !9594
  %rlock.i32 = bitcast %union.anon.2* %15 to %struct.raw_spinlock*, !dbg !9594
  %16 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9595
  call void @xhci_cleanup_msix(%struct.xhci_hcd* %16) #11, !dbg !9596
  %17 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9597
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %17, i32 0, i32 50, !dbg !9599
  %18 = load i64, i64* %quirks, align 8, !dbg !9599
  %and = and i64 %18, 16384, !dbg !9600
  %tobool6 = icmp ne i64 %and, 0, !dbg !9600
  br i1 %tobool6, label %land.lhs.true, label %if.end11, !dbg !9601

land.lhs.true:                                    ; preds = %if.end
  %19 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9602
  %call7 = call i32 @xhci_all_ports_seen_u0(%struct.xhci_hcd* %19) #11, !dbg !9603
  %tobool8 = icmp ne i32 %call7, 0, !dbg !9603
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !9604

if.then9:                                         ; preds = %land.lhs.true
  %20 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9605
  %comp_mode_recovery_timer = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %20, i32 0, i32 61, !dbg !9605
  %call10 = call i32 @del_timer(%struct.timer_list* %comp_mode_recovery_timer) #11, !dbg !9605
  %21 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9607
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %21, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.xhci_stop, i64 0, i64 0)) #11, !dbg !9608
  br label %if.end11, !dbg !9609

if.end11:                                         ; preds = %if.then9, %land.lhs.true, %if.end
  %22 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9610
  %quirks12 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %22, i32 0, i32 50, !dbg !9612
  %23 = load i64, i64* %quirks12, align 8, !dbg !9612
  %and13 = and i64 %23, 8, !dbg !9613
  %tobool14 = icmp ne i64 %and13, 0, !dbg !9613
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !9614

if.then15:                                        ; preds = %if.end11
  call void @usb_amd_dev_put() #11, !dbg !9615
  br label %if.end16, !dbg !9615

if.end16:                                         ; preds = %if.then15, %if.end11
  %24 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9616
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %24, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.66, i64 0, i64 0)) #11, !dbg !9617
  %25 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9618
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %25, i32 0, i32 3, !dbg !9619
  %26 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !9619
  %status = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %26, i32 0, i32 1, !dbg !9620
  %27 = bitcast i32* %status to i8*, !dbg !9621
  %call17 = call i32 @readl(i8* %27) #11, !dbg !9622
  store i32 %call17, i32* %temp, align 4, !dbg !9623
  %28 = load i32, i32* %temp, align 4, !dbg !9624
  %and18 = and i32 %28, -8192, !dbg !9625
  %or19 = or i32 %and18, 8, !dbg !9626
  %29 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9627
  %op_regs20 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %29, i32 0, i32 3, !dbg !9628
  %30 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs20, align 8, !dbg !9628
  %status21 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %30, i32 0, i32 1, !dbg !9629
  %31 = bitcast i32* %status21 to i8*, !dbg !9630
  call void @writel(i32 %or19, i8* %31) #11, !dbg !9631
  %32 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9632
  %ir_set = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %32, i32 0, i32 6, !dbg !9633
  %33 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set, align 8, !dbg !9633
  %irq_pending = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %33, i32 0, i32 0, !dbg !9634
  %34 = bitcast i32* %irq_pending to i8*, !dbg !9635
  %call22 = call i32 @readl(i8* %34) #11, !dbg !9636
  store i32 %call22, i32* %temp, align 4, !dbg !9637
  %35 = load i32, i32* %temp, align 4, !dbg !9638
  %and23 = and i32 %35, -2, !dbg !9638
  %and24 = and i32 %and23, -3, !dbg !9638
  %36 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9639
  %ir_set25 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %36, i32 0, i32 6, !dbg !9640
  %37 = load %struct.xhci_intr_reg*, %struct.xhci_intr_reg** %ir_set25, align 8, !dbg !9640
  %irq_pending26 = getelementptr inbounds %struct.xhci_intr_reg, %struct.xhci_intr_reg* %37, i32 0, i32 0, !dbg !9641
  %38 = bitcast i32* %irq_pending26 to i8*, !dbg !9642
  call void @writel(i32 %and24, i8* %38) #11, !dbg !9643
  %39 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9644
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %39, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0)) #11, !dbg !9645
  %40 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9646
  call void @xhci_mem_cleanup(%struct.xhci_hcd* %40) #11, !dbg !9647
  %41 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9648
  call void @xhci_debugfs_exit(%struct.xhci_hcd* %41) #11, !dbg !9649
  %42 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9650
  %43 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9651
  %op_regs27 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %43, i32 0, i32 3, !dbg !9652
  %44 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs27, align 8, !dbg !9652
  %status28 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %44, i32 0, i32 1, !dbg !9653
  %45 = bitcast i32* %status28 to i8*, !dbg !9654
  %call29 = call i32 @readl(i8* %45) #11, !dbg !9655
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %42, void (%struct.va_format*)* @trace_xhci_dbg_init, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.68, i64 0, i64 0), i32 %call29) #11, !dbg !9656
  %46 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9657
  %mutex30 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %46, i32 0, i32 39, !dbg !9658
  call void @mutex_unlock(%struct.mutex* %mutex30) #11, !dbg !9659
  br label %return, !dbg !9660

return:                                           ; preds = %if.end16, %if.then
  ret void, !dbg !9660
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_get_frame(%struct.usb_hcd* %hcd) #1 !dbg !9661 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !9662, metadata !DIExpression()), !dbg !9663
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !9664, metadata !DIExpression()), !dbg !9665
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !9666
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !9667
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !9665
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9668
  %run_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %1, i32 0, i32 4, !dbg !9669
  %2 = load %struct.xhci_run_regs*, %struct.xhci_run_regs** %run_regs, align 8, !dbg !9669
  %microframe_index = getelementptr inbounds %struct.xhci_run_regs, %struct.xhci_run_regs* %2, i32 0, i32 0, !dbg !9670
  %3 = bitcast i32* %microframe_index to i8*, !dbg !9671
  %call1 = call i32 @readl(i8* %3) #11, !dbg !9672
  %shr = lshr i32 %call1, 3, !dbg !9673
  ret i32 %shr, !dbg !9674
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_urb_enqueue(%struct.usb_hcd* %hcd, %struct.urb* %urb, i32 %mem_flags) #1 !dbg !9675 {
entry:
  %lock.addr.i126 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i126, metadata !6665, metadata !DIExpression()), !dbg !9676
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !9678
  %tmp.i127 = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !9679
  %pfo_val__.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %pfo_val__.i, metadata !9686, metadata !DIExpression()), !dbg !9690
  %tmp.i = alloca i32, align 4
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %mem_flags.addr = alloca i32, align 4
  %xhci = alloca %struct.xhci_hcd*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %slot_id = alloca i32, align 4
  %ep_index = alloca i32, align 4
  %ep_state = alloca i32*, align 8
  %urb_priv = alloca %struct.urb_priv*, align 8
  %num_tds = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy80 = alloca i64, align 8
  %__dummy281 = alloca i64, align 8
  %tmp84 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !9695, metadata !DIExpression()), !dbg !9696
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !9697, metadata !DIExpression()), !dbg !9698
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !9699, metadata !DIExpression()), !dbg !9700
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !9701, metadata !DIExpression()), !dbg !9702
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !9703
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !9704
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !9702
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9705, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9707, metadata !DIExpression()), !dbg !9708
  store i32 0, i32* %ret, align 4, !dbg !9708
  call void @llvm.dbg.declare(metadata i32* %slot_id, metadata !9709, metadata !DIExpression()), !dbg !9710
  call void @llvm.dbg.declare(metadata i32* %ep_index, metadata !9711, metadata !DIExpression()), !dbg !9712
  call void @llvm.dbg.declare(metadata i32** %ep_state, metadata !9713, metadata !DIExpression()), !dbg !9714
  call void @llvm.dbg.declare(metadata %struct.urb_priv** %urb_priv, metadata !9715, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.declare(metadata i32* %num_tds, metadata !9724, metadata !DIExpression()), !dbg !9725
  %1 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9726
  %tobool = icmp ne %struct.urb* %1, null, !dbg !9726
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9728

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !9729
  %3 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9730
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %3, i32 0, i32 8, !dbg !9731
  %4 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !9731
  %5 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9732
  %ep = getelementptr inbounds %struct.urb, %struct.urb* %5, i32 0, i32 9, !dbg !9733
  %6 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !9733
  %call1 = call i32 @xhci_check_args(%struct.usb_hcd* %2, %struct.usb_device* %4, %struct.usb_host_endpoint* %6, i32 1, i1 zeroext true, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.xhci_urb_enqueue, i64 0, i64 0)) #11, !dbg !9734
  %cmp = icmp sle i32 %call1, 0, !dbg !9735
  br i1 %cmp, label %if.then, label %if.end, !dbg !9736

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !9737
  br label %return, !dbg !9737

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9738
  %dev2 = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 8, !dbg !9739
  %8 = load %struct.usb_device*, %struct.usb_device** %dev2, align 8, !dbg !9739
  %slot_id3 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %8, i32 0, i32 44, !dbg !9740
  %9 = load i32, i32* %slot_id3, align 8, !dbg !9740
  store i32 %9, i32* %slot_id, align 4, !dbg !9741
  %10 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9742
  %ep4 = getelementptr inbounds %struct.urb, %struct.urb* %10, i32 0, i32 9, !dbg !9743
  %11 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep4, align 8, !dbg !9743
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %11, i32 0, i32 0, !dbg !9744
  %call5 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !9745
  store i32 %call5, i32* %ep_index, align 4, !dbg !9746
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9747
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %12, i32 0, i32 41, !dbg !9748
  %13 = load i32, i32* %slot_id, align 4, !dbg !9749
  %idxprom = zext i32 %13 to i64, !dbg !9747
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !9747
  %14 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !9747
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %14, i32 0, i32 3, !dbg !9750
  %15 = load i32, i32* %ep_index, align 4, !dbg !9751
  %idxprom6 = zext i32 %15 to i64, !dbg !9747
  %arrayidx7 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom6, !dbg !9747
  %ep_state8 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx7, i32 0, i32 3, !dbg !9752
  store i32* %ep_state8, i32** %ep_state, align 8, !dbg !9753
  %16 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !9754
  %flags9 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %16, i32 0, i32 12, !dbg !9754
  %17 = load i64, i64* %flags9, align 8, !dbg !9754
  %and = and i64 %17, 1, !dbg !9754
  %tobool10 = icmp ne i64 %and, 0, !dbg !9754
  br i1 %tobool10, label %if.end17, label %if.then11, !dbg !9755

if.then11:                                        ; preds = %if.end
  %18 = call i32 asm "movl $1, $0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count) #7, !dbg !9690, !srcloc !9756
  store i32 %18, i32* %pfo_val__.i, align 4, !dbg !9690
  %19 = load i32, i32* %pfo_val__.i, align 4, !dbg !9690
  %conv.i = zext i32 %19 to i64, !dbg !9690
  store i32 %19, i32* %tmp.i, align 4, !dbg !9690
  %20 = load i32, i32* %tmp.i, align 4, !dbg !9690
  %and.i = and i32 %20, 2147483647, !dbg !9757
  %conv = sext i32 %and.i to i64, !dbg !9758
  %and13 = and i64 %conv, 16776960, !dbg !9758
  %tobool14 = icmp ne i64 %and13, 0, !dbg !9758
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !9759

if.then15:                                        ; preds = %if.then11
  br label %if.end16, !dbg !9760

if.end16:                                         ; preds = %if.then15, %if.then11
  store i32 -108, i32* %retval, align 4, !dbg !9761
  br label %return, !dbg !9761

if.end17:                                         ; preds = %if.end
  %21 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9762
  %devs18 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %21, i32 0, i32 41, !dbg !9764
  %22 = load i32, i32* %slot_id, align 4, !dbg !9765
  %idxprom19 = zext i32 %22 to i64, !dbg !9762
  %arrayidx20 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs18, i64 0, i64 %idxprom19, !dbg !9762
  %23 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx20, align 8, !dbg !9762
  %flags21 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %23, i32 0, i32 8, !dbg !9766
  %24 = load i64, i64* %flags21, align 8, !dbg !9766
  %and22 = and i64 %24, 1, !dbg !9767
  %tobool23 = icmp ne i64 %and22, 0, !dbg !9767
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !9768

if.then24:                                        ; preds = %if.end17
  store i32 -19, i32* %retval, align 4, !dbg !9769
  br label %return, !dbg !9769

if.end25:                                         ; preds = %if.end17
  %25 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9771
  %ep26 = getelementptr inbounds %struct.urb, %struct.urb* %25, i32 0, i32 9, !dbg !9773
  %26 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep26, align 8, !dbg !9773
  %desc27 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %26, i32 0, i32 0, !dbg !9774
  %call28 = call i32 @usb_endpoint_xfer_isoc(%struct.usb_endpoint_descriptor* %desc27) #11, !dbg !9775
  %tobool29 = icmp ne i32 %call28, 0, !dbg !9775
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !9776

if.then30:                                        ; preds = %if.end25
  %27 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9777
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %27, i32 0, i32 24, !dbg !9778
  %28 = load i32, i32* %number_of_packets, align 4, !dbg !9778
  store i32 %28, i32* %num_tds, align 4, !dbg !9779
  br label %if.end49, !dbg !9780

if.else:                                          ; preds = %if.end25
  %29 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9781
  %ep31 = getelementptr inbounds %struct.urb, %struct.urb* %29, i32 0, i32 9, !dbg !9783
  %30 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep31, align 8, !dbg !9783
  %desc32 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %30, i32 0, i32 0, !dbg !9784
  %call33 = call i32 @usb_endpoint_is_bulk_out(%struct.usb_endpoint_descriptor* %desc32) #11, !dbg !9785
  %tobool34 = icmp ne i32 %call33, 0, !dbg !9785
  br i1 %tobool34, label %land.lhs.true, label %if.else47, !dbg !9786

land.lhs.true:                                    ; preds = %if.else
  %31 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9787
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %31, i32 0, i32 19, !dbg !9788
  %32 = load i32, i32* %transfer_buffer_length, align 8, !dbg !9788
  %cmp35 = icmp ugt i32 %32, 0, !dbg !9789
  br i1 %cmp35, label %land.lhs.true37, label %if.else47, !dbg !9790

land.lhs.true37:                                  ; preds = %land.lhs.true
  %33 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9791
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %33, i32 0, i32 13, !dbg !9792
  %34 = load i32, i32* %transfer_flags, align 4, !dbg !9792
  %and38 = and i32 %34, 64, !dbg !9793
  %tobool39 = icmp ne i32 %and38, 0, !dbg !9793
  br i1 %tobool39, label %land.lhs.true40, label %if.else47, !dbg !9794

land.lhs.true40:                                  ; preds = %land.lhs.true37
  %35 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9795
  %transfer_buffer_length41 = getelementptr inbounds %struct.urb, %struct.urb* %35, i32 0, i32 19, !dbg !9796
  %36 = load i32, i32* %transfer_buffer_length41, align 8, !dbg !9796
  %37 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9797
  %ep42 = getelementptr inbounds %struct.urb, %struct.urb* %37, i32 0, i32 9, !dbg !9798
  %38 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep42, align 8, !dbg !9798
  %desc43 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %38, i32 0, i32 0, !dbg !9799
  %call44 = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc43) #11, !dbg !9800
  %rem = urem i32 %36, %call44, !dbg !9801
  %tobool45 = icmp ne i32 %rem, 0, !dbg !9801
  br i1 %tobool45, label %if.else47, label %if.then46, !dbg !9802

if.then46:                                        ; preds = %land.lhs.true40
  store i32 2, i32* %num_tds, align 4, !dbg !9803
  br label %if.end48, !dbg !9804

if.else47:                                        ; preds = %land.lhs.true40, %land.lhs.true37, %land.lhs.true, %if.else
  store i32 1, i32* %num_tds, align 4, !dbg !9805
  br label %if.end48

if.end48:                                         ; preds = %if.else47, %if.then46
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then30
  %39 = load i32, i32* %num_tds, align 4, !dbg !9806
  %conv50 = sext i32 %39 to i64, !dbg !9806
  %call51 = call i64 @__ab_c_size(i64 %conv50, i64 80, i64 8) #11, !dbg !9806
  %40 = load i32, i32* %mem_flags.addr, align 4, !dbg !9807
  %call52 = call i8* @kzalloc(i64 %call51, i32 %40) #11, !dbg !9808
  %41 = bitcast i8* %call52 to %struct.urb_priv*, !dbg !9808
  store %struct.urb_priv* %41, %struct.urb_priv** %urb_priv, align 8, !dbg !9809
  %42 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !9810
  %tobool53 = icmp ne %struct.urb_priv* %42, null, !dbg !9810
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !9812

if.then54:                                        ; preds = %if.end49
  store i32 -12, i32* %retval, align 4, !dbg !9813
  br label %return, !dbg !9813

if.end55:                                         ; preds = %if.end49
  %43 = load i32, i32* %num_tds, align 4, !dbg !9814
  %44 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !9815
  %num_tds56 = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %44, i32 0, i32 0, !dbg !9816
  store i32 %43, i32* %num_tds56, align 8, !dbg !9817
  %45 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !9818
  %num_tds_done = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %45, i32 0, i32 1, !dbg !9819
  store i32 0, i32* %num_tds_done, align 4, !dbg !9820
  %46 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !9821
  %47 = bitcast %struct.urb_priv* %46 to i8*, !dbg !9821
  %48 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9822
  %hcpriv = getelementptr inbounds %struct.urb, %struct.urb* %48, i32 0, i32 2, !dbg !9823
  store i8* %47, i8** %hcpriv, align 8, !dbg !9824
  %49 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9825
  call void @trace_xhci_urb_enqueue(%struct.urb* %49) #11, !dbg !9826
  %50 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9827
  %ep57 = getelementptr inbounds %struct.urb, %struct.urb* %50, i32 0, i32 9, !dbg !9829
  %51 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep57, align 8, !dbg !9829
  %desc58 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %51, i32 0, i32 0, !dbg !9830
  %call59 = call i32 @usb_endpoint_xfer_control(%struct.usb_endpoint_descriptor* %desc58) #11, !dbg !9831
  %tobool60 = icmp ne i32 %call59, 0, !dbg !9831
  br i1 %tobool60, label %if.then61, label %if.end73, !dbg !9832

if.then61:                                        ; preds = %if.end55
  %52 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9833
  %dev62 = getelementptr inbounds %struct.urb, %struct.urb* %52, i32 0, i32 8, !dbg !9836
  %53 = load %struct.usb_device*, %struct.usb_device** %dev62, align 8, !dbg !9836
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %53, i32 0, i32 4, !dbg !9837
  %54 = load i32, i32* %speed, align 4, !dbg !9837
  %cmp63 = icmp eq i32 %54, 2, !dbg !9838
  br i1 %cmp63, label %if.then65, label %if.end72, !dbg !9839

if.then65:                                        ; preds = %if.then61
  %55 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9840
  %56 = load i32, i32* %slot_id, align 4, !dbg !9842
  %57 = load i32, i32* %ep_index, align 4, !dbg !9843
  %58 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9844
  %call66 = call i32 @xhci_check_maxpacket(%struct.xhci_hcd* %55, i32 %56, i32 %57, %struct.urb* %58) #11, !dbg !9845
  store i32 %call66, i32* %ret, align 4, !dbg !9846
  %59 = load i32, i32* %ret, align 4, !dbg !9847
  %cmp67 = icmp slt i32 %59, 0, !dbg !9849
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !9850

if.then69:                                        ; preds = %if.then65
  %60 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !9851
  call void @xhci_urb_free_priv(%struct.urb_priv* %60) #11, !dbg !9853
  %61 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9854
  %hcpriv70 = getelementptr inbounds %struct.urb, %struct.urb* %61, i32 0, i32 2, !dbg !9855
  store i8* null, i8** %hcpriv70, align 8, !dbg !9856
  %62 = load i32, i32* %ret, align 4, !dbg !9857
  store i32 %62, i32* %retval, align 4, !dbg !9858
  br label %return, !dbg !9858

if.end71:                                         ; preds = %if.then65
  br label %if.end72, !dbg !9859

if.end72:                                         ; preds = %if.end71, %if.then61
  br label %if.end73, !dbg !9860

if.end73:                                         ; preds = %if.end72, %if.end55
  br label %do.body, !dbg !9861

do.body:                                          ; preds = %if.end73
  br label %do.body74, !dbg !9862

do.body74:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9863, metadata !DIExpression()), !dbg !9865
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9866, metadata !DIExpression()), !dbg !9865
  %cmp75 = icmp eq i64* %__dummy, %__dummy2, !dbg !9865
  %conv76 = zext i1 %cmp75 to i32, !dbg !9865
  store i32 1, i32* %tmp, align 4, !dbg !9865
  %63 = load i32, i32* %tmp, align 4, !dbg !9865
  br label %do.body77, !dbg !9867

do.body77:                                        ; preds = %do.body74
  br label %do.body78, !dbg !9868

do.body78:                                        ; preds = %do.body77
  br label %do.body79, !dbg !9869

do.body79:                                        ; preds = %do.body78
  call void @llvm.dbg.declare(metadata i64* %__dummy80, metadata !9871, metadata !DIExpression()), !dbg !9874
  call void @llvm.dbg.declare(metadata i64* %__dummy281, metadata !9875, metadata !DIExpression()), !dbg !9874
  %cmp82 = icmp eq i64* %__dummy80, %__dummy281, !dbg !9874
  %conv83 = zext i1 %cmp82 to i32, !dbg !9874
  store i32 1, i32* %tmp84, align 4, !dbg !9874
  %64 = load i32, i32* %tmp84, align 4, !dbg !9874
  %call85 = call i64 @arch_local_irq_save() #11, !dbg !9876
  store i64 %call85, i64* %flags, align 8, !dbg !9876
  br label %do.end, !dbg !9876

do.end:                                           ; preds = %do.body79
  br label %do.end86, !dbg !9869

do.end86:                                         ; preds = %do.end
  br label %do.body87, !dbg !9868

do.body87:                                        ; preds = %do.end86
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9877, !srcloc !9878
  br label %do.body88, !dbg !9877

do.body88:                                        ; preds = %do.body87
  %65 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9879
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %65, i32 0, i32 12, !dbg !9879
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %66 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9880
  %67 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %66, i32 0, i32 0, !dbg !9881
  %rlock.i = bitcast %union.anon.2* %67 to %struct.raw_spinlock*, !dbg !9881
  br label %do.end90, !dbg !9879

do.end90:                                         ; preds = %do.body88
  br label %do.end91, !dbg !9877

do.end91:                                         ; preds = %do.end90
  br label %do.end92, !dbg !9868

do.end92:                                         ; preds = %do.end91
  br label %do.end93, !dbg !9867

do.end93:                                         ; preds = %do.end92
  br label %do.end94, !dbg !9862

do.end94:                                         ; preds = %do.end93
  %68 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9882
  %xhc_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %68, i32 0, i32 47, !dbg !9884
  %69 = load i32, i32* %xhc_state, align 8, !dbg !9884
  %and95 = and i32 %69, 1, !dbg !9885
  %tobool96 = icmp ne i32 %and95, 0, !dbg !9885
  br i1 %tobool96, label %if.then97, label %if.end98, !dbg !9886

if.then97:                                        ; preds = %do.end94
  store i32 -108, i32* %ret, align 4, !dbg !9887
  br label %free_priv, !dbg !9889

if.end98:                                         ; preds = %do.end94
  %70 = load i32*, i32** %ep_state, align 8, !dbg !9890
  %71 = load i32, i32* %70, align 4, !dbg !9892
  %and99 = and i32 %71, 40, !dbg !9893
  %tobool100 = icmp ne i32 %and99, 0, !dbg !9893
  br i1 %tobool100, label %if.then101, label %if.end103, !dbg !9894

if.then101:                                       ; preds = %if.end98
  %72 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9895
  %call102 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %72) #11, !dbg !9895
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call102, i32 0, i32 0, !dbg !9895
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !9895
  %73 = load %struct.device*, %struct.device** %controller, align 8, !dbg !9895
  %74 = load i32*, i32** %ep_state, align 8, !dbg !9895
  %75 = load i32, i32* %74, align 4, !dbg !9895
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %73, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.69, i64 0, i64 0), i32 %75) #12, !dbg !9895
  store i32 -22, i32* %ret, align 4, !dbg !9897
  br label %free_priv, !dbg !9898

if.end103:                                        ; preds = %if.end98
  %76 = load i32*, i32** %ep_state, align 8, !dbg !9899
  %77 = load i32, i32* %76, align 4, !dbg !9901
  %and104 = and i32 %77, 128, !dbg !9902
  %tobool105 = icmp ne i32 %and104, 0, !dbg !9902
  br i1 %tobool105, label %if.then106, label %if.end110, !dbg !9903

if.then106:                                       ; preds = %if.end103
  %78 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9904
  %call107 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %78) #11, !dbg !9904
  %self108 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call107, i32 0, i32 0, !dbg !9904
  %controller109 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self108, i32 0, i32 0, !dbg !9904
  %79 = load %struct.device*, %struct.device** %controller109, align 8, !dbg !9904
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %79, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.70, i64 0, i64 0)) #12, !dbg !9904
  store i32 -22, i32* %ret, align 4, !dbg !9906
  br label %free_priv, !dbg !9907

if.end110:                                        ; preds = %if.end103
  %80 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9908
  %ep111 = getelementptr inbounds %struct.urb, %struct.urb* %80, i32 0, i32 9, !dbg !9909
  %81 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep111, align 8, !dbg !9909
  %desc112 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %81, i32 0, i32 0, !dbg !9910
  %call113 = call i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %desc112) #11, !dbg !9911
  switch i32 %call113, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb115
    i32 3, label %sw.bb117
    i32 1, label %sw.bb119
  ], !dbg !9912

sw.bb:                                            ; preds = %if.end110
  %82 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9913
  %83 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9915
  %84 = load i32, i32* %slot_id, align 4, !dbg !9916
  %85 = load i32, i32* %ep_index, align 4, !dbg !9917
  %call114 = call i32 @xhci_queue_ctrl_tx(%struct.xhci_hcd* %82, i32 2592, %struct.urb* %83, i32 %84, i32 %85) #11, !dbg !9918
  store i32 %call114, i32* %ret, align 4, !dbg !9919
  br label %sw.epilog, !dbg !9920

sw.bb115:                                         ; preds = %if.end110
  %86 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9921
  %87 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9922
  %88 = load i32, i32* %slot_id, align 4, !dbg !9923
  %89 = load i32, i32* %ep_index, align 4, !dbg !9924
  %call116 = call i32 @xhci_queue_bulk_tx(%struct.xhci_hcd* %86, i32 2592, %struct.urb* %87, i32 %88, i32 %89) #11, !dbg !9925
  store i32 %call116, i32* %ret, align 4, !dbg !9926
  br label %sw.epilog, !dbg !9927

sw.bb117:                                         ; preds = %if.end110
  %90 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9928
  %91 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9929
  %92 = load i32, i32* %slot_id, align 4, !dbg !9930
  %93 = load i32, i32* %ep_index, align 4, !dbg !9931
  %call118 = call i32 @xhci_queue_intr_tx(%struct.xhci_hcd* %90, i32 2592, %struct.urb* %91, i32 %92, i32 %93) #11, !dbg !9932
  store i32 %call118, i32* %ret, align 4, !dbg !9933
  br label %sw.epilog, !dbg !9934

sw.bb119:                                         ; preds = %if.end110
  %94 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9935
  %95 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9936
  %96 = load i32, i32* %slot_id, align 4, !dbg !9937
  %97 = load i32, i32* %ep_index, align 4, !dbg !9938
  %call120 = call i32 @xhci_queue_isoc_tx_prepare(%struct.xhci_hcd* %94, i32 2592, %struct.urb* %95, i32 %96, i32 %97) #11, !dbg !9939
  store i32 %call120, i32* %ret, align 4, !dbg !9940
  br label %sw.epilog, !dbg !9941

sw.epilog:                                        ; preds = %sw.bb119, %if.end110, %sw.bb117, %sw.bb115, %sw.bb
  %98 = load i32, i32* %ret, align 4, !dbg !9942
  %tobool121 = icmp ne i32 %98, 0, !dbg !9942
  br i1 %tobool121, label %if.then122, label %if.end124, !dbg !9944

if.then122:                                       ; preds = %sw.epilog
  br label %free_priv, !dbg !9945

free_priv:                                        ; preds = %if.then122, %if.then106, %if.then101, %if.then97
  call void @llvm.dbg.label(metadata !9946), !dbg !9948
  %99 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !9949
  call void @xhci_urb_free_priv(%struct.urb_priv* %99) #11, !dbg !9950
  %100 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !9951
  %hcpriv123 = getelementptr inbounds %struct.urb, %struct.urb* %100, i32 0, i32 2, !dbg !9952
  store i8* null, i8** %hcpriv123, align 8, !dbg !9953
  br label %if.end124, !dbg !9954

if.end124:                                        ; preds = %free_priv, %sw.epilog
  %101 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !9955
  %lock125 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %101, i32 0, i32 12, !dbg !9956
  %102 = load i64, i64* %flags, align 8, !dbg !9957
  store %struct.spinlock* %lock125, %struct.spinlock** %lock.addr.i126, align 8
  store i64 %102, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !9958
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !9958
  store i32 1, i32* %tmp.i127, align 4, !dbg !9958
  %103 = load i32, i32* %tmp.i127, align 4, !dbg !9958
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !9959
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !9959
  store i32 1, i32* %tmp8.i, align 4, !dbg !9959
  %104 = load i32, i32* %tmp8.i, align 4, !dbg !9959
  %105 = load i64, i64* %flags.addr.i, align 8, !dbg !9960
  call void @arch_local_irq_restore(i64 %105) #13, !dbg !9960
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9961, !srcloc !6814
  %106 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i126, align 8, !dbg !9962
  %107 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %106, i32 0, i32 0, !dbg !9962
  %rlock.i128 = bitcast %union.anon.2* %107 to %struct.raw_spinlock*, !dbg !9962
  %108 = load i32, i32* %ret, align 4, !dbg !9963
  store i32 %108, i32* %retval, align 4, !dbg !9964
  br label %return, !dbg !9964

return:                                           ; preds = %if.end124, %if.then69, %if.then54, %if.then24, %if.end16, %if.then
  %109 = load i32, i32* %retval, align 4, !dbg !9965
  ret i32 %109, !dbg !9965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_urb_dequeue(%struct.usb_hcd* %hcd, %struct.urb* %urb, i32 %status) #1 !dbg !9966 {
entry:
  %lock.addr.i137 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i137, metadata !6665, metadata !DIExpression()), !dbg !9967
  %flags.addr.i138 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i138, metadata !6671, metadata !DIExpression()), !dbg !9969
  %tmp.i139 = alloca i32, align 4
  %tmp8.i140 = alloca i32, align 4
  %lock.addr.i135 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i135, metadata !6665, metadata !DIExpression()), !dbg !9970
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !9972
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !9973
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %status.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca i32, align 4
  %xhci = alloca %struct.xhci_hcd*, align 8
  %urb_priv = alloca %struct.urb_priv*, align 8
  %td = alloca %struct.xhci_td*, align 8
  %ep_index = alloca i32, align 4
  %ep_ring = alloca %struct.xhci_ring*, align 8
  %ep = alloca %struct.xhci_virt_ep*, align 8
  %command = alloca %struct.xhci_command*, align 8
  %vdev = alloca %struct.xhci_virt_device*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !9980, metadata !DIExpression()), !dbg !9981
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !9982, metadata !DIExpression()), !dbg !9983
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !9984, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9986, metadata !DIExpression()), !dbg !9987
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9988, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9990, metadata !DIExpression()), !dbg !9991
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !9992, metadata !DIExpression()), !dbg !9993
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !9994, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.declare(metadata %struct.urb_priv** %urb_priv, metadata !9996, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.declare(metadata %struct.xhci_td** %td, metadata !9998, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.declare(metadata i32* %ep_index, metadata !10000, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.declare(metadata %struct.xhci_ring** %ep_ring, metadata !10002, metadata !DIExpression()), !dbg !10003
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_ep** %ep, metadata !10004, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %command, metadata !10006, metadata !DIExpression()), !dbg !10007
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %vdev, metadata !10008, metadata !DIExpression()), !dbg !10009
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !10010
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !10011
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !10012
  br label %do.body, !dbg !10013

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10014

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10015, metadata !DIExpression()), !dbg !10017
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10018, metadata !DIExpression()), !dbg !10017
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10017
  %conv = zext i1 %cmp to i32, !dbg !10017
  store i32 1, i32* %tmp, align 4, !dbg !10017
  %1 = load i32, i32* %tmp, align 4, !dbg !10017
  br label %do.body2, !dbg !10019

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10020

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10021

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10023, metadata !DIExpression()), !dbg !10026
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10027, metadata !DIExpression()), !dbg !10026
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10026
  %conv8 = zext i1 %cmp7 to i32, !dbg !10026
  store i32 1, i32* %tmp9, align 4, !dbg !10026
  %2 = load i32, i32* %tmp9, align 4, !dbg !10026
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !10028
  store i64 %call10, i64* %flags, align 8, !dbg !10028
  br label %do.end, !dbg !10028

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !10021

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !10020

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10029, !srcloc !10030
  br label %do.body13, !dbg !10029

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10031
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %3, i32 0, i32 12, !dbg !10031
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10032
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !10033
  %rlock.i = bitcast %union.anon.2* %5 to %struct.raw_spinlock*, !dbg !10033
  br label %do.end15, !dbg !10031

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !10029

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10020

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10019

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !10014

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10034
  call void @trace_xhci_urb_dequeue(%struct.urb* %6) #11, !dbg !10035
  %7 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !10036
  %8 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10037
  %9 = load i32, i32* %status.addr, align 4, !dbg !10038
  %call20 = call i32 @usb_hcd_check_unlink_urb(%struct.usb_hcd* %7, %struct.urb* %8, i32 %9) #11, !dbg !10039
  store i32 %call20, i32* %ret, align 4, !dbg !10040
  %10 = load i32, i32* %ret, align 4, !dbg !10041
  %tobool = icmp ne i32 %10, 0, !dbg !10041
  br i1 %tobool, label %if.then, label %if.end, !dbg !10043

if.then:                                          ; preds = %do.end19
  br label %done, !dbg !10044

if.end:                                           ; preds = %do.end19
  %11 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10045
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %11, i32 0, i32 41, !dbg !10046
  %12 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10047
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %12, i32 0, i32 8, !dbg !10048
  %13 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !10048
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %13, i32 0, i32 44, !dbg !10049
  %14 = load i32, i32* %slot_id, align 8, !dbg !10049
  %idxprom = sext i32 %14 to i64, !dbg !10045
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !10045
  %15 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !10045
  store %struct.xhci_virt_device* %15, %struct.xhci_virt_device** %vdev, align 8, !dbg !10050
  %16 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10051
  %hcpriv = getelementptr inbounds %struct.urb, %struct.urb* %16, i32 0, i32 2, !dbg !10052
  %17 = load i8*, i8** %hcpriv, align 8, !dbg !10052
  %18 = bitcast i8* %17 to %struct.urb_priv*, !dbg !10051
  store %struct.urb_priv* %18, %struct.urb_priv** %urb_priv, align 8, !dbg !10053
  %19 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !10054
  %tobool21 = icmp ne %struct.xhci_virt_device* %19, null, !dbg !10054
  br i1 %tobool21, label %lor.lhs.false, label %if.then23, !dbg !10056

lor.lhs.false:                                    ; preds = %if.end
  %20 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10057
  %tobool22 = icmp ne %struct.urb_priv* %20, null, !dbg !10057
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !10058

if.then23:                                        ; preds = %lor.lhs.false, %if.end
  br label %err_giveback, !dbg !10059

if.end24:                                         ; preds = %lor.lhs.false
  %21 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10060
  %ep25 = getelementptr inbounds %struct.urb, %struct.urb* %21, i32 0, i32 9, !dbg !10061
  %22 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep25, align 8, !dbg !10061
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %22, i32 0, i32 0, !dbg !10062
  %call26 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !10063
  store i32 %call26, i32* %ep_index, align 4, !dbg !10064
  %23 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !10065
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %23, i32 0, i32 3, !dbg !10066
  %24 = load i32, i32* %ep_index, align 4, !dbg !10067
  %idxprom27 = zext i32 %24 to i64, !dbg !10065
  %arrayidx28 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom27, !dbg !10065
  store %struct.xhci_virt_ep* %arrayidx28, %struct.xhci_virt_ep** %ep, align 8, !dbg !10068
  %25 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10069
  %26 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10070
  %call29 = call %struct.xhci_ring* @xhci_urb_to_transfer_ring(%struct.xhci_hcd* %25, %struct.urb* %26) #11, !dbg !10071
  store %struct.xhci_ring* %call29, %struct.xhci_ring** %ep_ring, align 8, !dbg !10072
  %27 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10073
  %tobool30 = icmp ne %struct.xhci_virt_ep* %27, null, !dbg !10073
  br i1 %tobool30, label %lor.lhs.false31, label %if.then33, !dbg !10075

lor.lhs.false31:                                  ; preds = %if.end24
  %28 = load %struct.xhci_ring*, %struct.xhci_ring** %ep_ring, align 8, !dbg !10076
  %tobool32 = icmp ne %struct.xhci_ring* %28, null, !dbg !10076
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !10077

if.then33:                                        ; preds = %lor.lhs.false31, %if.end24
  br label %err_giveback, !dbg !10078

if.end34:                                         ; preds = %lor.lhs.false31
  %29 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10079
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %29, i32 0, i32 3, !dbg !10080
  %30 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !10080
  %status35 = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %30, i32 0, i32 1, !dbg !10081
  %31 = bitcast i32* %status35 to i8*, !dbg !10082
  %call36 = call i32 @readl(i8* %31) #11, !dbg !10083
  store i32 %call36, i32* %temp, align 4, !dbg !10084
  %32 = load i32, i32* %temp, align 4, !dbg !10085
  %cmp37 = icmp eq i32 %32, -1, !dbg !10087
  br i1 %cmp37, label %if.then41, label %lor.lhs.false39, !dbg !10088

lor.lhs.false39:                                  ; preds = %if.end34
  %33 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10089
  %xhc_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %33, i32 0, i32 47, !dbg !10090
  %34 = load i32, i32* %xhc_state, align 8, !dbg !10090
  %and = and i32 %34, 1, !dbg !10091
  %tobool40 = icmp ne i32 %and, 0, !dbg !10091
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !10092

if.then41:                                        ; preds = %lor.lhs.false39, %if.end34
  %35 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10093
  call void @xhci_hc_died(%struct.xhci_hcd* %35) #11, !dbg !10095
  br label %done, !dbg !10096

if.end42:                                         ; preds = %lor.lhs.false39
  %36 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10097
  %td43 = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %36, i32 0, i32 2, !dbg !10099
  %arrayidx44 = getelementptr [0 x %struct.xhci_td], [0 x %struct.xhci_td]* %td43, i64 0, i64 0, !dbg !10097
  %37 = load %struct.xhci_ring*, %struct.xhci_ring** %ep_ring, align 8, !dbg !10100
  %call45 = call zeroext i1 @td_on_ring(%struct.xhci_td* %arrayidx44, %struct.xhci_ring* %37) #11, !dbg !10101
  br i1 %call45, label %if.end58, label %if.then46, !dbg !10102

if.then46:                                        ; preds = %if.end42
  %38 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10103
  %call47 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %38) #11, !dbg !10103
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call47, i32 0, i32 0, !dbg !10103
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !10103
  %39 = load %struct.device*, %struct.device** %controller, align 8, !dbg !10103
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %39, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.101, i64 0, i64 0)) #12, !dbg !10103
  %40 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10105
  %num_tds_done = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %40, i32 0, i32 1, !dbg !10107
  %41 = load i32, i32* %num_tds_done, align 4, !dbg !10107
  store i32 %41, i32* %i, align 4, !dbg !10108
  br label %for.cond, !dbg !10109

for.cond:                                         ; preds = %for.inc, %if.then46
  %42 = load i32, i32* %i, align 4, !dbg !10110
  %43 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10112
  %num_tds = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %43, i32 0, i32 0, !dbg !10113
  %44 = load i32, i32* %num_tds, align 8, !dbg !10113
  %cmp48 = icmp slt i32 %42, %44, !dbg !10114
  br i1 %cmp48, label %for.body, label %for.end, !dbg !10115

for.body:                                         ; preds = %for.cond
  %45 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10116
  %td50 = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %45, i32 0, i32 2, !dbg !10118
  %46 = load i32, i32* %i, align 4, !dbg !10119
  %idxprom51 = sext i32 %46 to i64, !dbg !10116
  %arrayidx52 = getelementptr [0 x %struct.xhci_td], [0 x %struct.xhci_td]* %td50, i64 0, i64 %idxprom51, !dbg !10116
  store %struct.xhci_td* %arrayidx52, %struct.xhci_td** %td, align 8, !dbg !10120
  %47 = load %struct.xhci_td*, %struct.xhci_td** %td, align 8, !dbg !10121
  %cancelled_td_list = getelementptr inbounds %struct.xhci_td, %struct.xhci_td* %47, i32 0, i32 1, !dbg !10123
  %call53 = call i32 @list_empty(%struct.list_head* %cancelled_td_list) #11, !dbg !10124
  %tobool54 = icmp ne i32 %call53, 0, !dbg !10124
  br i1 %tobool54, label %if.end57, label %if.then55, !dbg !10125

if.then55:                                        ; preds = %for.body
  %48 = load %struct.xhci_td*, %struct.xhci_td** %td, align 8, !dbg !10126
  %cancelled_td_list56 = getelementptr inbounds %struct.xhci_td, %struct.xhci_td* %48, i32 0, i32 1, !dbg !10127
  call void @list_del_init(%struct.list_head* %cancelled_td_list56) #11, !dbg !10128
  br label %if.end57, !dbg !10128

if.end57:                                         ; preds = %if.then55, %for.body
  br label %for.inc, !dbg !10129

for.inc:                                          ; preds = %if.end57
  %49 = load i32, i32* %i, align 4, !dbg !10130
  %inc = add i32 %49, 1, !dbg !10130
  store i32 %inc, i32* %i, align 4, !dbg !10130
  br label %for.cond, !dbg !10131, !llvm.loop !10132

for.end:                                          ; preds = %for.cond
  br label %err_giveback, !dbg !10134

if.end58:                                         ; preds = %if.end42
  %50 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10135
  %xhc_state59 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %50, i32 0, i32 47, !dbg !10137
  %51 = load i32, i32* %xhc_state59, align 8, !dbg !10137
  %and60 = and i32 %51, 2, !dbg !10138
  %tobool61 = icmp ne i32 %and60, 0, !dbg !10138
  br i1 %tobool61, label %if.then62, label %if.end86, !dbg !10139

if.then62:                                        ; preds = %if.end58
  %52 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10140
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %52, void (%struct.va_format*)* @trace_xhci_dbg_cancel_urb, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.102, i64 0, i64 0)) #11, !dbg !10142
  %53 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10143
  %num_tds_done63 = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %53, i32 0, i32 1, !dbg !10145
  %54 = load i32, i32* %num_tds_done63, align 4, !dbg !10145
  store i32 %54, i32* %i, align 4, !dbg !10146
  br label %for.cond64, !dbg !10147

for.cond64:                                       ; preds = %for.inc83, %if.then62
  %55 = load i32, i32* %i, align 4, !dbg !10148
  %56 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10150
  %num_tds65 = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %56, i32 0, i32 0, !dbg !10151
  %57 = load i32, i32* %num_tds65, align 8, !dbg !10151
  %cmp66 = icmp slt i32 %55, %57, !dbg !10152
  br i1 %cmp66, label %for.body68, label %for.end85, !dbg !10153

for.body68:                                       ; preds = %for.cond64
  %58 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10154
  %td69 = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %58, i32 0, i32 2, !dbg !10156
  %59 = load i32, i32* %i, align 4, !dbg !10157
  %idxprom70 = sext i32 %59 to i64, !dbg !10154
  %arrayidx71 = getelementptr [0 x %struct.xhci_td], [0 x %struct.xhci_td]* %td69, i64 0, i64 %idxprom70, !dbg !10154
  store %struct.xhci_td* %arrayidx71, %struct.xhci_td** %td, align 8, !dbg !10158
  %60 = load %struct.xhci_td*, %struct.xhci_td** %td, align 8, !dbg !10159
  %td_list = getelementptr inbounds %struct.xhci_td, %struct.xhci_td* %60, i32 0, i32 0, !dbg !10161
  %call72 = call i32 @list_empty(%struct.list_head* %td_list) #11, !dbg !10162
  %tobool73 = icmp ne i32 %call72, 0, !dbg !10162
  br i1 %tobool73, label %if.end76, label %if.then74, !dbg !10163

if.then74:                                        ; preds = %for.body68
  %61 = load %struct.xhci_td*, %struct.xhci_td** %td, align 8, !dbg !10164
  %td_list75 = getelementptr inbounds %struct.xhci_td, %struct.xhci_td* %61, i32 0, i32 0, !dbg !10165
  call void @list_del_init(%struct.list_head* %td_list75) #11, !dbg !10166
  br label %if.end76, !dbg !10166

if.end76:                                         ; preds = %if.then74, %for.body68
  %62 = load %struct.xhci_td*, %struct.xhci_td** %td, align 8, !dbg !10167
  %cancelled_td_list77 = getelementptr inbounds %struct.xhci_td, %struct.xhci_td* %62, i32 0, i32 1, !dbg !10169
  %call78 = call i32 @list_empty(%struct.list_head* %cancelled_td_list77) #11, !dbg !10170
  %tobool79 = icmp ne i32 %call78, 0, !dbg !10170
  br i1 %tobool79, label %if.end82, label %if.then80, !dbg !10171

if.then80:                                        ; preds = %if.end76
  %63 = load %struct.xhci_td*, %struct.xhci_td** %td, align 8, !dbg !10172
  %cancelled_td_list81 = getelementptr inbounds %struct.xhci_td, %struct.xhci_td* %63, i32 0, i32 1, !dbg !10173
  call void @list_del_init(%struct.list_head* %cancelled_td_list81) #11, !dbg !10174
  br label %if.end82, !dbg !10174

if.end82:                                         ; preds = %if.then80, %if.end76
  br label %for.inc83, !dbg !10175

for.inc83:                                        ; preds = %if.end82
  %64 = load i32, i32* %i, align 4, !dbg !10176
  %inc84 = add i32 %64, 1, !dbg !10176
  store i32 %inc84, i32* %i, align 4, !dbg !10176
  br label %for.cond64, !dbg !10177, !llvm.loop !10178

for.end85:                                        ; preds = %for.cond64
  br label %err_giveback, !dbg !10180

if.end86:                                         ; preds = %if.end58
  %65 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10181
  %num_tds_done87 = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %65, i32 0, i32 1, !dbg !10182
  %66 = load i32, i32* %num_tds_done87, align 4, !dbg !10182
  store i32 %66, i32* %i, align 4, !dbg !10183
  %67 = load i32, i32* %i, align 4, !dbg !10184
  %68 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10186
  %num_tds88 = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %68, i32 0, i32 0, !dbg !10187
  %69 = load i32, i32* %num_tds88, align 8, !dbg !10187
  %cmp89 = icmp slt i32 %67, %69, !dbg !10188
  br i1 %cmp89, label %if.then91, label %if.end103, !dbg !10189

if.then91:                                        ; preds = %if.end86
  %70 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10190
  %71 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10191
  %72 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10192
  %dev92 = getelementptr inbounds %struct.urb, %struct.urb* %72, i32 0, i32 8, !dbg !10193
  %73 = load %struct.usb_device*, %struct.usb_device** %dev92, align 8, !dbg !10193
  %devpath = getelementptr inbounds %struct.usb_device, %struct.usb_device* %73, i32 0, i32 1, !dbg !10194
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %devpath, i64 0, i64 0, !dbg !10192
  %74 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10195
  %ep93 = getelementptr inbounds %struct.urb, %struct.urb* %74, i32 0, i32 9, !dbg !10196
  %75 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep93, align 8, !dbg !10196
  %desc94 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %75, i32 0, i32 0, !dbg !10197
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc94, i32 0, i32 2, !dbg !10198
  %76 = load i8, i8* %bEndpointAddress, align 2, !dbg !10198
  %conv95 = zext i8 %76 to i32, !dbg !10195
  %77 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10199
  %td96 = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %77, i32 0, i32 2, !dbg !10200
  %78 = load i32, i32* %i, align 4, !dbg !10201
  %idxprom97 = sext i32 %78 to i64, !dbg !10199
  %arrayidx98 = getelementptr [0 x %struct.xhci_td], [0 x %struct.xhci_td]* %td96, i64 0, i64 %idxprom97, !dbg !10199
  %start_seg = getelementptr inbounds %struct.xhci_td, %struct.xhci_td* %arrayidx98, i32 0, i32 3, !dbg !10202
  %79 = load %struct.xhci_segment*, %struct.xhci_segment** %start_seg, align 8, !dbg !10202
  %80 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10203
  %td99 = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %80, i32 0, i32 2, !dbg !10204
  %81 = load i32, i32* %i, align 4, !dbg !10205
  %idxprom100 = sext i32 %81 to i64, !dbg !10203
  %arrayidx101 = getelementptr [0 x %struct.xhci_td], [0 x %struct.xhci_td]* %td99, i64 0, i64 %idxprom100, !dbg !10203
  %first_trb = getelementptr inbounds %struct.xhci_td, %struct.xhci_td* %arrayidx101, i32 0, i32 4, !dbg !10206
  %82 = load %union.xhci_trb*, %union.xhci_trb** %first_trb, align 8, !dbg !10206
  %call102 = call i64 @xhci_trb_virt_to_dma(%struct.xhci_segment* %79, %union.xhci_trb* %82) #11, !dbg !10207
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %70, void (%struct.va_format*)* @trace_xhci_dbg_cancel_urb, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.103, i64 0, i64 0), %struct.urb* %71, i8* %arraydecay, i32 %conv95, i64 %call102) #11, !dbg !10208
  br label %if.end103, !dbg !10208

if.end103:                                        ; preds = %if.then91, %if.end86
  br label %for.cond104, !dbg !10209

for.cond104:                                      ; preds = %for.inc114, %if.end103
  %83 = load i32, i32* %i, align 4, !dbg !10210
  %84 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10213
  %num_tds105 = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %84, i32 0, i32 0, !dbg !10214
  %85 = load i32, i32* %num_tds105, align 8, !dbg !10214
  %cmp106 = icmp slt i32 %83, %85, !dbg !10215
  br i1 %cmp106, label %for.body108, label %for.end116, !dbg !10216

for.body108:                                      ; preds = %for.cond104
  %86 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10217
  %td109 = getelementptr inbounds %struct.urb_priv, %struct.urb_priv* %86, i32 0, i32 2, !dbg !10219
  %87 = load i32, i32* %i, align 4, !dbg !10220
  %idxprom110 = sext i32 %87 to i64, !dbg !10217
  %arrayidx111 = getelementptr [0 x %struct.xhci_td], [0 x %struct.xhci_td]* %td109, i64 0, i64 %idxprom110, !dbg !10217
  store %struct.xhci_td* %arrayidx111, %struct.xhci_td** %td, align 8, !dbg !10221
  %88 = load %struct.xhci_td*, %struct.xhci_td** %td, align 8, !dbg !10222
  %cancelled_td_list112 = getelementptr inbounds %struct.xhci_td, %struct.xhci_td* %88, i32 0, i32 1, !dbg !10223
  %89 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10224
  %cancelled_td_list113 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %89, i32 0, i32 4, !dbg !10225
  call void @list_add_tail(%struct.list_head* %cancelled_td_list112, %struct.list_head* %cancelled_td_list113) #11, !dbg !10226
  br label %for.inc114, !dbg !10227

for.inc114:                                       ; preds = %for.body108
  %90 = load i32, i32* %i, align 4, !dbg !10228
  %inc115 = add i32 %90, 1, !dbg !10228
  store i32 %inc115, i32* %i, align 4, !dbg !10228
  br label %for.cond104, !dbg !10229, !llvm.loop !10230

for.end116:                                       ; preds = %for.cond104
  %91 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10232
  %ep_state = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %91, i32 0, i32 3, !dbg !10234
  %92 = load i32, i32* %ep_state, align 8, !dbg !10234
  %and117 = and i32 %92, 4, !dbg !10235
  %tobool118 = icmp ne i32 %and117, 0, !dbg !10235
  br i1 %tobool118, label %if.end129, label %if.then119, !dbg !10236

if.then119:                                       ; preds = %for.end116
  %93 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10237
  %call120 = call %struct.xhci_command* @xhci_alloc_command(%struct.xhci_hcd* %93, i1 zeroext false, i32 2592) #11, !dbg !10239
  store %struct.xhci_command* %call120, %struct.xhci_command** %command, align 8, !dbg !10240
  %94 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !10241
  %tobool121 = icmp ne %struct.xhci_command* %94, null, !dbg !10241
  br i1 %tobool121, label %if.end123, label %if.then122, !dbg !10243

if.then122:                                       ; preds = %if.then119
  store i32 -12, i32* %ret, align 4, !dbg !10244
  br label %done, !dbg !10246

if.end123:                                        ; preds = %if.then119
  %95 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10247
  %ep_state124 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %95, i32 0, i32 3, !dbg !10248
  %96 = load i32, i32* %ep_state124, align 8, !dbg !10249
  %or = or i32 %96, 4, !dbg !10249
  store i32 %or, i32* %ep_state124, align 8, !dbg !10249
  %97 = load volatile i64, i64* @jiffies, align 8, !dbg !10250
  %add = add i64 %97, 1250, !dbg !10251
  %98 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10252
  %stop_cmd_timer = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %98, i32 0, i32 5, !dbg !10253
  %expires = getelementptr inbounds %struct.timer_list, %struct.timer_list* %stop_cmd_timer, i32 0, i32 1, !dbg !10254
  store i64 %add, i64* %expires, align 8, !dbg !10255
  %99 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10256
  %stop_cmd_timer125 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %99, i32 0, i32 5, !dbg !10257
  call void @add_timer(%struct.timer_list* %stop_cmd_timer125) #11, !dbg !10258
  %100 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10259
  %101 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !10260
  %102 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10261
  %dev126 = getelementptr inbounds %struct.urb, %struct.urb* %102, i32 0, i32 8, !dbg !10262
  %103 = load %struct.usb_device*, %struct.usb_device** %dev126, align 8, !dbg !10262
  %slot_id127 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %103, i32 0, i32 44, !dbg !10263
  %104 = load i32, i32* %slot_id127, align 8, !dbg !10263
  %105 = load i32, i32* %ep_index, align 4, !dbg !10264
  %call128 = call i32 @xhci_queue_stop_endpoint(%struct.xhci_hcd* %100, %struct.xhci_command* %101, i32 %104, i32 %105, i32 0) #11, !dbg !10265
  %106 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10266
  call void @xhci_ring_cmd_db(%struct.xhci_hcd* %106) #11, !dbg !10267
  br label %if.end129, !dbg !10268

if.end129:                                        ; preds = %if.end123, %for.end116
  br label %done, !dbg !10269

done:                                             ; preds = %if.end129, %if.then122, %if.then41, %if.then
  call void @llvm.dbg.label(metadata !10270), !dbg !10271
  %107 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10272
  %lock130 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %107, i32 0, i32 12, !dbg !10273
  %108 = load i64, i64* %flags, align 8, !dbg !10274
  store %struct.spinlock* %lock130, %struct.spinlock** %lock.addr.i137, align 8
  store i64 %108, i64* %flags.addr.i138, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !10275
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !10275
  store i32 1, i32* %tmp.i139, align 4, !dbg !10275
  %109 = load i32, i32* %tmp.i139, align 4, !dbg !10275
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !10276
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !10276
  store i32 1, i32* %tmp8.i140, align 4, !dbg !10276
  %110 = load i32, i32* %tmp8.i140, align 4, !dbg !10276
  %111 = load i64, i64* %flags.addr.i138, align 8, !dbg !10277
  call void @arch_local_irq_restore(i64 %111) #13, !dbg !10277
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10278, !srcloc !6814
  %112 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i137, align 8, !dbg !10279
  %113 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %112, i32 0, i32 0, !dbg !10279
  %rlock.i141 = bitcast %union.anon.2* %113 to %struct.raw_spinlock*, !dbg !10279
  %114 = load i32, i32* %ret, align 4, !dbg !10280
  store i32 %114, i32* %retval, align 4, !dbg !10281
  br label %return, !dbg !10281

err_giveback:                                     ; preds = %for.end85, %for.end, %if.then33, %if.then23
  call void @llvm.dbg.label(metadata !10282), !dbg !10283
  %115 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10284
  %tobool131 = icmp ne %struct.urb_priv* %115, null, !dbg !10284
  br i1 %tobool131, label %if.then132, label %if.end133, !dbg !10286

if.then132:                                       ; preds = %err_giveback
  %116 = load %struct.urb_priv*, %struct.urb_priv** %urb_priv, align 8, !dbg !10287
  call void @xhci_urb_free_priv(%struct.urb_priv* %116) #11, !dbg !10288
  br label %if.end133, !dbg !10288

if.end133:                                        ; preds = %if.then132, %err_giveback
  %117 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !10289
  %118 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10290
  call void @usb_hcd_unlink_urb_from_ep(%struct.usb_hcd* %117, %struct.urb* %118) #11, !dbg !10291
  %119 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10292
  %lock134 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %119, i32 0, i32 12, !dbg !10293
  %120 = load i64, i64* %flags, align 8, !dbg !10294
  store %struct.spinlock* %lock134, %struct.spinlock** %lock.addr.i135, align 8
  store i64 %120, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !10295
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !10295
  store i32 1, i32* %tmp.i, align 4, !dbg !10295
  %121 = load i32, i32* %tmp.i, align 4, !dbg !10295
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !10296
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !10296
  store i32 1, i32* %tmp8.i, align 4, !dbg !10296
  %122 = load i32, i32* %tmp8.i, align 4, !dbg !10296
  %123 = load i64, i64* %flags.addr.i, align 8, !dbg !10297
  call void @arch_local_irq_restore(i64 %123) #13, !dbg !10297
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10298, !srcloc !6814
  %124 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i135, align 8, !dbg !10299
  %125 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %124, i32 0, i32 0, !dbg !10299
  %rlock.i136 = bitcast %union.anon.2* %125 to %struct.raw_spinlock*, !dbg !10299
  %126 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !10300
  %127 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10301
  call void @usb_hcd_giveback_urb(%struct.usb_hcd* %126, %struct.urb* %127, i32 -108) #11, !dbg !10302
  %128 = load i32, i32* %ret, align 4, !dbg !10303
  store i32 %128, i32* %retval, align 4, !dbg !10304
  br label %return, !dbg !10304

return:                                           ; preds = %if.end133, %done
  %129 = load i32, i32* %retval, align 4, !dbg !10305
  ret i32 %129, !dbg !10305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_map_urb_for_dma(%struct.usb_hcd* %hcd, %struct.urb* %urb, i32 %mem_flags) #1 !dbg !10306 {
entry:
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %mem_flags.addr = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !10307, metadata !DIExpression()), !dbg !10308
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !10309, metadata !DIExpression()), !dbg !10310
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !10311, metadata !DIExpression()), !dbg !10312
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10313
  %call = call zeroext i1 @xhci_urb_suitable_for_idt(%struct.urb* %0) #11, !dbg !10315
  br i1 %call, label %if.then, label %if.end, !dbg !10316

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10317
  br label %return, !dbg !10317

if.end:                                           ; preds = %entry
  %1 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !10318
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !10319
  %3 = load i32, i32* %mem_flags.addr, align 4, !dbg !10320
  %call1 = call i32 @usb_hcd_map_urb_for_dma(%struct.usb_hcd* %1, %struct.urb* %2, i32 %3) #11, !dbg !10321
  store i32 %call1, i32* %retval, align 4, !dbg !10322
  br label %return, !dbg !10322

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !10323
  ret i32 %4, !dbg !10323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_endpoint_disable(%struct.usb_hcd* %hcd, %struct.usb_host_endpoint* %host_ep) #1 !dbg !10324 {
entry:
  %lock.addr.i44 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i44, metadata !6665, metadata !DIExpression()), !dbg !10325
  %flags.addr.i45 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i45, metadata !6671, metadata !DIExpression()), !dbg !10329
  %tmp.i46 = alloca i32, align 4
  %tmp8.i47 = alloca i32, align 4
  %lock.addr.i42 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i42, metadata !6665, metadata !DIExpression()), !dbg !10330
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !10332
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !10333
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %host_ep.addr = alloca %struct.usb_host_endpoint*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %vdev = alloca %struct.xhci_virt_device*, align 8
  %ep = alloca %struct.xhci_virt_ep*, align 8
  %udev = alloca %struct.usb_device*, align 8
  %flags = alloca i64, align 8
  %ep_index = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !10340, metadata !DIExpression()), !dbg !10341
  store %struct.usb_host_endpoint* %host_ep, %struct.usb_host_endpoint** %host_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %host_ep.addr, metadata !10342, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !10344, metadata !DIExpression()), !dbg !10345
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %vdev, metadata !10346, metadata !DIExpression()), !dbg !10347
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_ep** %ep, metadata !10348, metadata !DIExpression()), !dbg !10349
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !10350, metadata !DIExpression()), !dbg !10351
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10352, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.declare(metadata i32* %ep_index, metadata !10354, metadata !DIExpression()), !dbg !10355
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !10356
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !10357
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !10358
  br label %rescan, !dbg !10359

rescan:                                           ; preds = %if.then32, %entry
  call void @llvm.dbg.label(metadata !10360), !dbg !10361
  br label %do.body, !dbg !10362

do.body:                                          ; preds = %rescan
  br label %do.body1, !dbg !10363

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10364, metadata !DIExpression()), !dbg !10366
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10367, metadata !DIExpression()), !dbg !10366
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10366
  %conv = zext i1 %cmp to i32, !dbg !10366
  store i32 1, i32* %tmp, align 4, !dbg !10366
  %1 = load i32, i32* %tmp, align 4, !dbg !10366
  br label %do.body2, !dbg !10368

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10369

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10370

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10372, metadata !DIExpression()), !dbg !10375
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10376, metadata !DIExpression()), !dbg !10375
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10375
  %conv8 = zext i1 %cmp7 to i32, !dbg !10375
  store i32 1, i32* %tmp9, align 4, !dbg !10375
  %2 = load i32, i32* %tmp9, align 4, !dbg !10375
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !10377
  store i64 %call10, i64* %flags, align 8, !dbg !10377
  br label %do.end, !dbg !10377

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !10370

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !10369

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10378, !srcloc !10379
  br label %do.body13, !dbg !10378

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10380
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %3, i32 0, i32 12, !dbg !10380
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10381
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !10382
  %rlock.i = bitcast %union.anon.2* %5 to %struct.raw_spinlock*, !dbg !10382
  br label %do.end15, !dbg !10380

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !10378

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10369

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10368

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !10363

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %host_ep.addr, align 8, !dbg !10383
  %hcpriv = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %6, i32 0, i32 5, !dbg !10384
  %7 = load i8*, i8** %hcpriv, align 8, !dbg !10384
  %8 = bitcast i8* %7 to %struct.usb_device*, !dbg !10385
  store %struct.usb_device* %8, %struct.usb_device** %udev, align 8, !dbg !10386
  %9 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !10387
  %tobool = icmp ne %struct.usb_device* %9, null, !dbg !10387
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !10389

lor.lhs.false:                                    ; preds = %do.end19
  %10 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !10390
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %10, i32 0, i32 44, !dbg !10391
  %11 = load i32, i32* %slot_id, align 8, !dbg !10391
  %tobool20 = icmp ne i32 %11, 0, !dbg !10390
  br i1 %tobool20, label %if.end, label %if.then, !dbg !10392

if.then:                                          ; preds = %lor.lhs.false, %do.end19
  br label %done, !dbg !10393

if.end:                                           ; preds = %lor.lhs.false
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10394
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %12, i32 0, i32 41, !dbg !10395
  %13 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !10396
  %slot_id21 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %13, i32 0, i32 44, !dbg !10397
  %14 = load i32, i32* %slot_id21, align 8, !dbg !10397
  %idxprom = sext i32 %14 to i64, !dbg !10394
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !10394
  %15 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !10394
  store %struct.xhci_virt_device* %15, %struct.xhci_virt_device** %vdev, align 8, !dbg !10398
  %16 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !10399
  %tobool22 = icmp ne %struct.xhci_virt_device* %16, null, !dbg !10399
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !10401

if.then23:                                        ; preds = %if.end
  br label %done, !dbg !10402

if.end24:                                         ; preds = %if.end
  %17 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %host_ep.addr, align 8, !dbg !10403
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %17, i32 0, i32 0, !dbg !10404
  %call25 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !10405
  store i32 %call25, i32* %ep_index, align 4, !dbg !10406
  %18 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !10407
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %18, i32 0, i32 3, !dbg !10408
  %19 = load i32, i32* %ep_index, align 4, !dbg !10409
  %idxprom26 = zext i32 %19 to i64, !dbg !10407
  %arrayidx27 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom26, !dbg !10407
  store %struct.xhci_virt_ep* %arrayidx27, %struct.xhci_virt_ep** %ep, align 8, !dbg !10410
  %20 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10411
  %tobool28 = icmp ne %struct.xhci_virt_ep* %20, null, !dbg !10411
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !10413

if.then29:                                        ; preds = %if.end24
  br label %done, !dbg !10414

if.end30:                                         ; preds = %if.end24
  %21 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10415
  %ep_state = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %21, i32 0, i32 3, !dbg !10416
  %22 = load i32, i32* %ep_state, align 8, !dbg !10416
  %and = and i32 %22, 256, !dbg !10417
  %tobool31 = icmp ne i32 %and, 0, !dbg !10417
  br i1 %tobool31, label %if.then32, label %if.end35, !dbg !10418

if.then32:                                        ; preds = %if.end30
  %23 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10419
  %lock33 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %23, i32 0, i32 12, !dbg !10420
  %24 = load i64, i64* %flags, align 8, !dbg !10421
  store %struct.spinlock* %lock33, %struct.spinlock** %lock.addr.i44, align 8
  store i64 %24, i64* %flags.addr.i45, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !10422
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !10422
  store i32 1, i32* %tmp.i46, align 4, !dbg !10422
  %25 = load i32, i32* %tmp.i46, align 4, !dbg !10422
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !10423
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !10423
  store i32 1, i32* %tmp8.i47, align 4, !dbg !10423
  %26 = load i32, i32* %tmp8.i47, align 4, !dbg !10423
  %27 = load i64, i64* %flags.addr.i45, align 8, !dbg !10424
  call void @arch_local_irq_restore(i64 %27) #13, !dbg !10424
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10425, !srcloc !6814
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i44, align 8, !dbg !10426
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !10426
  %rlock.i48 = bitcast %union.anon.2* %29 to %struct.raw_spinlock*, !dbg !10426
  %call34 = call i64 @schedule_timeout_uninterruptible(i64 1) #11, !dbg !10427
  br label %rescan, !dbg !10428

if.end35:                                         ; preds = %if.end30
  %30 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10429
  %ep_state36 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %30, i32 0, i32 3, !dbg !10431
  %31 = load i32, i32* %ep_state36, align 8, !dbg !10431
  %tobool37 = icmp ne i32 %31, 0, !dbg !10429
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !10432

if.then38:                                        ; preds = %if.end35
  br label %if.end39, !dbg !10433

if.end39:                                         ; preds = %if.then38, %if.end35
  br label %done, !dbg !10431

done:                                             ; preds = %if.end39, %if.then29, %if.then23, %if.then
  call void @llvm.dbg.label(metadata !10434), !dbg !10435
  %32 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %host_ep.addr, align 8, !dbg !10436
  %hcpriv40 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %32, i32 0, i32 5, !dbg !10437
  store i8* null, i8** %hcpriv40, align 8, !dbg !10438
  %33 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10439
  %lock41 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %33, i32 0, i32 12, !dbg !10440
  %34 = load i64, i64* %flags, align 8, !dbg !10441
  store %struct.spinlock* %lock41, %struct.spinlock** %lock.addr.i42, align 8
  store i64 %34, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !10442
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !10442
  store i32 1, i32* %tmp.i, align 4, !dbg !10442
  %35 = load i32, i32* %tmp.i, align 4, !dbg !10442
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !10443
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !10443
  store i32 1, i32* %tmp8.i, align 4, !dbg !10443
  %36 = load i32, i32* %tmp8.i, align 4, !dbg !10443
  %37 = load i64, i64* %flags.addr.i, align 8, !dbg !10444
  call void @arch_local_irq_restore(i64 %37) #13, !dbg !10444
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10445, !srcloc !6814
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i42, align 8, !dbg !10446
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !10446
  %rlock.i43 = bitcast %union.anon.2* %39 to %struct.raw_spinlock*, !dbg !10446
  ret void, !dbg !10447
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_endpoint_reset(%struct.usb_hcd* %hcd, %struct.usb_host_endpoint* %host_ep) #1 !dbg !10448 {
entry:
  %lock.addr.i142 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i142, metadata !6665, metadata !DIExpression()), !dbg !10449
  %flags.addr.i143 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i143, metadata !6671, metadata !DIExpression()), !dbg !10453
  %tmp.i144 = alloca i32, align 4
  %tmp8.i145 = alloca i32, align 4
  %lock.addr.i140 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i140, metadata !6673, metadata !DIExpression()), !dbg !10454
  %lock.addr.i135 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i135, metadata !6665, metadata !DIExpression()), !dbg !10461
  %flags.addr.i136 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i136, metadata !6671, metadata !DIExpression()), !dbg !10463
  %tmp.i137 = alloca i32, align 4
  %tmp8.i138 = alloca i32, align 4
  %lock.addr.i130 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i130, metadata !6665, metadata !DIExpression()), !dbg !10464
  %flags.addr.i131 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i131, metadata !6671, metadata !DIExpression()), !dbg !10468
  %tmp.i132 = alloca i32, align 4
  %tmp8.i133 = alloca i32, align 4
  %lock.addr.i125 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i125, metadata !6665, metadata !DIExpression()), !dbg !10469
  %flags.addr.i126 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i126, metadata !6671, metadata !DIExpression()), !dbg !10473
  %tmp.i127 = alloca i32, align 4
  %tmp8.i128 = alloca i32, align 4
  %lock.addr.i123 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i123, metadata !6665, metadata !DIExpression()), !dbg !10474
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !10476
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !10477
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %host_ep.addr = alloca %struct.usb_host_endpoint*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %udev = alloca %struct.usb_device*, align 8
  %vdev = alloca %struct.xhci_virt_device*, align 8
  %ep = alloca %struct.xhci_virt_ep*, align 8
  %ctrl_ctx = alloca %struct.xhci_input_control_ctx*, align 8
  %stop_cmd = alloca %struct.xhci_command*, align 8
  %cfg_cmd = alloca %struct.xhci_command*, align 8
  %ep_index = alloca i32, align 4
  %flags = alloca i64, align 8
  %ep_flag = alloca i32, align 4
  %err = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy46 = alloca i64, align 8
  %__dummy247 = alloca i64, align 8
  %tmp50 = alloca i32, align 4
  %__dummy77 = alloca i64, align 8
  %__dummy278 = alloca i64, align 8
  %tmp81 = alloca i32, align 4
  %__dummy85 = alloca i64, align 8
  %__dummy286 = alloca i64, align 8
  %tmp89 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !10484, metadata !DIExpression()), !dbg !10485
  store %struct.usb_host_endpoint* %host_ep, %struct.usb_host_endpoint** %host_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %host_ep.addr, metadata !10486, metadata !DIExpression()), !dbg !10487
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !10488, metadata !DIExpression()), !dbg !10489
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !10490, metadata !DIExpression()), !dbg !10491
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %vdev, metadata !10492, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_ep** %ep, metadata !10494, metadata !DIExpression()), !dbg !10495
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx, metadata !10496, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %stop_cmd, metadata !10498, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %cfg_cmd, metadata !10500, metadata !DIExpression()), !dbg !10501
  call void @llvm.dbg.declare(metadata i32* %ep_index, metadata !10502, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10504, metadata !DIExpression()), !dbg !10505
  call void @llvm.dbg.declare(metadata i32* %ep_flag, metadata !10506, metadata !DIExpression()), !dbg !10507
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10508, metadata !DIExpression()), !dbg !10509
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !10510
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !10511
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !10512
  %1 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %host_ep.addr, align 8, !dbg !10513
  %hcpriv = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %1, i32 0, i32 5, !dbg !10515
  %2 = load i8*, i8** %hcpriv, align 8, !dbg !10515
  %tobool = icmp ne i8* %2, null, !dbg !10513
  br i1 %tobool, label %if.end, label %if.then, !dbg !10516

if.then:                                          ; preds = %entry
  br label %if.end122, !dbg !10517

if.end:                                           ; preds = %entry
  %3 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %host_ep.addr, align 8, !dbg !10518
  %hcpriv1 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %3, i32 0, i32 5, !dbg !10519
  %4 = load i8*, i8** %hcpriv1, align 8, !dbg !10519
  %5 = bitcast i8* %4 to %struct.usb_device*, !dbg !10520
  store %struct.usb_device* %5, %struct.usb_device** %udev, align 8, !dbg !10521
  %6 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10522
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %6, i32 0, i32 41, !dbg !10523
  %7 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !10524
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 44, !dbg !10525
  %8 = load i32, i32* %slot_id, align 8, !dbg !10525
  %idxprom = sext i32 %8 to i64, !dbg !10522
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !10522
  %9 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !10522
  store %struct.xhci_virt_device* %9, %struct.xhci_virt_device** %vdev, align 8, !dbg !10526
  %10 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !10527
  %slot_id2 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %10, i32 0, i32 44, !dbg !10529
  %11 = load i32, i32* %slot_id2, align 8, !dbg !10529
  %tobool3 = icmp ne i32 %11, 0, !dbg !10527
  br i1 %tobool3, label %lor.lhs.false, label %if.then5, !dbg !10530

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !10531
  %tobool4 = icmp ne %struct.xhci_virt_device* %12, null, !dbg !10531
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !10532

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  br label %if.end122, !dbg !10533

if.end6:                                          ; preds = %lor.lhs.false
  %13 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %host_ep.addr, align 8, !dbg !10534
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %13, i32 0, i32 0, !dbg !10535
  %call7 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !10536
  store i32 %call7, i32* %ep_index, align 4, !dbg !10537
  %14 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !10538
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %14, i32 0, i32 3, !dbg !10539
  %15 = load i32, i32* %ep_index, align 4, !dbg !10540
  %idxprom8 = zext i32 %15 to i64, !dbg !10538
  %arrayidx9 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom8, !dbg !10538
  store %struct.xhci_virt_ep* %arrayidx9, %struct.xhci_virt_ep** %ep, align 8, !dbg !10541
  %16 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10542
  %tobool10 = icmp ne %struct.xhci_virt_ep* %16, null, !dbg !10542
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !10544

if.then11:                                        ; preds = %if.end6
  br label %if.end122, !dbg !10545

if.end12:                                         ; preds = %if.end6
  %17 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10546
  %ep_state = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %17, i32 0, i32 3, !dbg !10548
  %18 = load i32, i32* %ep_state, align 8, !dbg !10548
  %and = and i32 %18, 64, !dbg !10549
  %tobool13 = icmp ne i32 %and, 0, !dbg !10549
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !10550

if.then14:                                        ; preds = %if.end12
  %19 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10551
  %ep_state15 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %19, i32 0, i32 3, !dbg !10553
  %20 = load i32, i32* %ep_state15, align 8, !dbg !10554
  %and16 = and i32 %20, -65, !dbg !10554
  store i32 %and16, i32* %ep_state15, align 8, !dbg !10554
  br label %if.end122, !dbg !10555

if.end17:                                         ; preds = %if.end12
  %21 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %host_ep.addr, align 8, !dbg !10556
  %desc18 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %21, i32 0, i32 0, !dbg !10558
  %call19 = call i32 @usb_endpoint_xfer_control(%struct.usb_endpoint_descriptor* %desc18) #11, !dbg !10559
  %tobool20 = icmp ne i32 %call19, 0, !dbg !10559
  br i1 %tobool20, label %if.then25, label %lor.lhs.false21, !dbg !10560

lor.lhs.false21:                                  ; preds = %if.end17
  %22 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %host_ep.addr, align 8, !dbg !10561
  %desc22 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %22, i32 0, i32 0, !dbg !10562
  %call23 = call i32 @usb_endpoint_xfer_isoc(%struct.usb_endpoint_descriptor* %desc22) #11, !dbg !10563
  %tobool24 = icmp ne i32 %call23, 0, !dbg !10563
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !10564

if.then25:                                        ; preds = %lor.lhs.false21, %if.end17
  br label %if.end122, !dbg !10565

if.end26:                                         ; preds = %lor.lhs.false21
  %23 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %host_ep.addr, align 8, !dbg !10566
  %desc27 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %23, i32 0, i32 0, !dbg !10567
  %call28 = call i32 @xhci_get_endpoint_flag(%struct.usb_endpoint_descriptor* %desc27) #11, !dbg !10568
  store i32 %call28, i32* %ep_flag, align 4, !dbg !10569
  %24 = load i32, i32* %ep_flag, align 4, !dbg !10570
  %cmp = icmp eq i32 %24, 1, !dbg !10572
  br i1 %cmp, label %if.then31, label %lor.lhs.false29, !dbg !10573

lor.lhs.false29:                                  ; preds = %if.end26
  %25 = load i32, i32* %ep_flag, align 4, !dbg !10574
  %cmp30 = icmp eq i32 %25, 2, !dbg !10575
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !10576

if.then31:                                        ; preds = %lor.lhs.false29, %if.end26
  br label %if.end122, !dbg !10577

if.end32:                                         ; preds = %lor.lhs.false29
  %26 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10578
  %call33 = call %struct.xhci_command* @xhci_alloc_command(%struct.xhci_hcd* %26, i1 zeroext true, i32 2048) #11, !dbg !10579
  store %struct.xhci_command* %call33, %struct.xhci_command** %stop_cmd, align 8, !dbg !10580
  %27 = load %struct.xhci_command*, %struct.xhci_command** %stop_cmd, align 8, !dbg !10581
  %tobool34 = icmp ne %struct.xhci_command* %27, null, !dbg !10581
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !10583

if.then35:                                        ; preds = %if.end32
  br label %if.end122, !dbg !10584

if.end36:                                         ; preds = %if.end32
  %28 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10585
  %call37 = call %struct.xhci_command* @xhci_alloc_command_with_ctx(%struct.xhci_hcd* %28, i1 zeroext true, i32 2048) #11, !dbg !10586
  store %struct.xhci_command* %call37, %struct.xhci_command** %cfg_cmd, align 8, !dbg !10587
  %29 = load %struct.xhci_command*, %struct.xhci_command** %cfg_cmd, align 8, !dbg !10588
  %tobool38 = icmp ne %struct.xhci_command* %29, null, !dbg !10588
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !10590

if.then39:                                        ; preds = %if.end36
  br label %cleanup, !dbg !10591

if.end40:                                         ; preds = %if.end36
  br label %do.body, !dbg !10592

do.body:                                          ; preds = %if.end40
  br label %do.body41, !dbg !10593

do.body41:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10594, metadata !DIExpression()), !dbg !10596
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10597, metadata !DIExpression()), !dbg !10596
  %cmp42 = icmp eq i64* %__dummy, %__dummy2, !dbg !10596
  %conv = zext i1 %cmp42 to i32, !dbg !10596
  store i32 1, i32* %tmp, align 4, !dbg !10596
  %30 = load i32, i32* %tmp, align 4, !dbg !10596
  br label %do.body43, !dbg !10598

do.body43:                                        ; preds = %do.body41
  br label %do.body44, !dbg !10599

do.body44:                                        ; preds = %do.body43
  br label %do.body45, !dbg !10600

do.body45:                                        ; preds = %do.body44
  call void @llvm.dbg.declare(metadata i64* %__dummy46, metadata !10602, metadata !DIExpression()), !dbg !10605
  call void @llvm.dbg.declare(metadata i64* %__dummy247, metadata !10606, metadata !DIExpression()), !dbg !10605
  %cmp48 = icmp eq i64* %__dummy46, %__dummy247, !dbg !10605
  %conv49 = zext i1 %cmp48 to i32, !dbg !10605
  store i32 1, i32* %tmp50, align 4, !dbg !10605
  %31 = load i32, i32* %tmp50, align 4, !dbg !10605
  %call51 = call i64 @arch_local_irq_save() #11, !dbg !10607
  store i64 %call51, i64* %flags, align 8, !dbg !10607
  br label %do.end, !dbg !10607

do.end:                                           ; preds = %do.body45
  br label %do.end52, !dbg !10600

do.end52:                                         ; preds = %do.end
  br label %do.body53, !dbg !10599

do.body53:                                        ; preds = %do.end52
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10608, !srcloc !10609
  br label %do.body54, !dbg !10608

do.body54:                                        ; preds = %do.body53
  %32 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10610
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %32, i32 0, i32 12, !dbg !10610
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10611
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !10612
  %rlock.i = bitcast %union.anon.2* %34 to %struct.raw_spinlock*, !dbg !10612
  br label %do.end56, !dbg !10610

do.end56:                                         ; preds = %do.body54
  br label %do.end57, !dbg !10608

do.end57:                                         ; preds = %do.end56
  br label %do.end58, !dbg !10599

do.end58:                                         ; preds = %do.end57
  br label %do.end59, !dbg !10598

do.end59:                                         ; preds = %do.end58
  br label %do.end60, !dbg !10593

do.end60:                                         ; preds = %do.end59
  %35 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10613
  %ep_state61 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %35, i32 0, i32 3, !dbg !10614
  %36 = load i32, i32* %ep_state61, align 8, !dbg !10615
  %or = or i32 %36, 128, !dbg !10615
  store i32 %or, i32* %ep_state61, align 8, !dbg !10615
  %37 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10616
  %ring = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %37, i32 0, i32 0, !dbg !10617
  %38 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !10617
  %td_list = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %38, i32 0, i32 6, !dbg !10618
  %call62 = call i32 @list_empty(%struct.list_head* %td_list) #11, !dbg !10619
  %tobool63 = icmp ne i32 %call62, 0, !dbg !10619
  br i1 %tobool63, label %if.end66, label %if.then64, !dbg !10620

if.then64:                                        ; preds = %do.end60
  %39 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !10621
  %dev = getelementptr inbounds %struct.usb_device, %struct.usb_device* %39, i32 0, i32 14, !dbg !10621
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.104, i64 0, i64 0)) #12, !dbg !10621
  %40 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10622
  %lock65 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %40, i32 0, i32 12, !dbg !10623
  %41 = load i64, i64* %flags, align 8, !dbg !10624
  store %struct.spinlock* %lock65, %struct.spinlock** %lock.addr.i125, align 8
  store i64 %41, i64* %flags.addr.i126, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !10625
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !10625
  store i32 1, i32* %tmp.i127, align 4, !dbg !10625
  %42 = load i32, i32* %tmp.i127, align 4, !dbg !10625
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !10626
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !10626
  store i32 1, i32* %tmp8.i128, align 4, !dbg !10626
  %43 = load i32, i32* %tmp8.i128, align 4, !dbg !10626
  %44 = load i64, i64* %flags.addr.i126, align 8, !dbg !10627
  call void @arch_local_irq_restore(i64 %44) #13, !dbg !10627
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10628, !srcloc !6814
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i125, align 8, !dbg !10629
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !10629
  %rlock.i129 = bitcast %union.anon.2* %46 to %struct.raw_spinlock*, !dbg !10629
  %47 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10630
  %48 = load %struct.xhci_command*, %struct.xhci_command** %cfg_cmd, align 8, !dbg !10631
  call void @xhci_free_command(%struct.xhci_hcd* %47, %struct.xhci_command* %48) #11, !dbg !10632
  br label %cleanup, !dbg !10633

if.end66:                                         ; preds = %do.end60
  %49 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10634
  %50 = load %struct.xhci_command*, %struct.xhci_command** %stop_cmd, align 8, !dbg !10635
  %51 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !10636
  %slot_id67 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %51, i32 0, i32 44, !dbg !10637
  %52 = load i32, i32* %slot_id67, align 8, !dbg !10637
  %53 = load i32, i32* %ep_index, align 4, !dbg !10638
  %call68 = call i32 @xhci_queue_stop_endpoint(%struct.xhci_hcd* %49, %struct.xhci_command* %50, i32 %52, i32 %53, i32 0) #11, !dbg !10639
  store i32 %call68, i32* %err, align 4, !dbg !10640
  %54 = load i32, i32* %err, align 4, !dbg !10641
  %cmp69 = icmp slt i32 %54, 0, !dbg !10642
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !10643

if.then71:                                        ; preds = %if.end66
  %55 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10644
  %lock72 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %55, i32 0, i32 12, !dbg !10645
  %56 = load i64, i64* %flags, align 8, !dbg !10646
  store %struct.spinlock* %lock72, %struct.spinlock** %lock.addr.i130, align 8
  store i64 %56, i64* %flags.addr.i131, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !10647
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !10647
  store i32 1, i32* %tmp.i132, align 4, !dbg !10647
  %57 = load i32, i32* %tmp.i132, align 4, !dbg !10647
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !10648
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !10648
  store i32 1, i32* %tmp8.i133, align 4, !dbg !10648
  %58 = load i32, i32* %tmp8.i133, align 4, !dbg !10648
  %59 = load i64, i64* %flags.addr.i131, align 8, !dbg !10649
  call void @arch_local_irq_restore(i64 %59) #13, !dbg !10649
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10650, !srcloc !6814
  %60 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i130, align 8, !dbg !10651
  %61 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %60, i32 0, i32 0, !dbg !10651
  %rlock.i134 = bitcast %union.anon.2* %61 to %struct.raw_spinlock*, !dbg !10651
  %62 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10652
  %63 = load %struct.xhci_command*, %struct.xhci_command** %cfg_cmd, align 8, !dbg !10653
  call void @xhci_free_command(%struct.xhci_hcd* %62, %struct.xhci_command* %63) #11, !dbg !10654
  br label %cleanup, !dbg !10655

if.end73:                                         ; preds = %if.end66
  %64 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10656
  call void @xhci_ring_cmd_db(%struct.xhci_hcd* %64) #11, !dbg !10657
  %65 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10658
  %lock74 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %65, i32 0, i32 12, !dbg !10659
  %66 = load i64, i64* %flags, align 8, !dbg !10660
  store %struct.spinlock* %lock74, %struct.spinlock** %lock.addr.i135, align 8
  store i64 %66, i64* %flags.addr.i136, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !10661
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !10661
  store i32 1, i32* %tmp.i137, align 4, !dbg !10661
  %67 = load i32, i32* %tmp.i137, align 4, !dbg !10661
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !10662
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !10662
  store i32 1, i32* %tmp8.i138, align 4, !dbg !10662
  %68 = load i32, i32* %tmp8.i138, align 4, !dbg !10662
  %69 = load i64, i64* %flags.addr.i136, align 8, !dbg !10663
  call void @arch_local_irq_restore(i64 %69) #13, !dbg !10663
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10664, !srcloc !6814
  %70 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i135, align 8, !dbg !10665
  %71 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %70, i32 0, i32 0, !dbg !10665
  %rlock.i139 = bitcast %union.anon.2* %71 to %struct.raw_spinlock*, !dbg !10665
  %72 = load %struct.xhci_command*, %struct.xhci_command** %stop_cmd, align 8, !dbg !10666
  %completion = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %72, i32 0, i32 3, !dbg !10667
  %73 = load %struct.completion*, %struct.completion** %completion, align 8, !dbg !10667
  call void @wait_for_completion(%struct.completion* %73) #11, !dbg !10668
  br label %do.body75, !dbg !10669

do.body75:                                        ; preds = %if.end73
  br label %do.body76, !dbg !10670

do.body76:                                        ; preds = %do.body75
  call void @llvm.dbg.declare(metadata i64* %__dummy77, metadata !10671, metadata !DIExpression()), !dbg !10673
  call void @llvm.dbg.declare(metadata i64* %__dummy278, metadata !10674, metadata !DIExpression()), !dbg !10673
  %cmp79 = icmp eq i64* %__dummy77, %__dummy278, !dbg !10673
  %conv80 = zext i1 %cmp79 to i32, !dbg !10673
  store i32 1, i32* %tmp81, align 4, !dbg !10673
  %74 = load i32, i32* %tmp81, align 4, !dbg !10673
  br label %do.body82, !dbg !10675

do.body82:                                        ; preds = %do.body76
  br label %do.body83, !dbg !10676

do.body83:                                        ; preds = %do.body82
  br label %do.body84, !dbg !10677

do.body84:                                        ; preds = %do.body83
  call void @llvm.dbg.declare(metadata i64* %__dummy85, metadata !10679, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.declare(metadata i64* %__dummy286, metadata !10683, metadata !DIExpression()), !dbg !10682
  %cmp87 = icmp eq i64* %__dummy85, %__dummy286, !dbg !10682
  %conv88 = zext i1 %cmp87 to i32, !dbg !10682
  store i32 1, i32* %tmp89, align 4, !dbg !10682
  %75 = load i32, i32* %tmp89, align 4, !dbg !10682
  %call90 = call i64 @arch_local_irq_save() #11, !dbg !10684
  store i64 %call90, i64* %flags, align 8, !dbg !10684
  br label %do.end91, !dbg !10684

do.end91:                                         ; preds = %do.body84
  br label %do.end92, !dbg !10677

do.end92:                                         ; preds = %do.end91
  br label %do.body93, !dbg !10676

do.body93:                                        ; preds = %do.end92
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10685, !srcloc !10686
  br label %do.body94, !dbg !10685

do.body94:                                        ; preds = %do.body93
  %76 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10687
  %lock95 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %76, i32 0, i32 12, !dbg !10687
  store %struct.spinlock* %lock95, %struct.spinlock** %lock.addr.i140, align 8
  %77 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i140, align 8, !dbg !10688
  %78 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %77, i32 0, i32 0, !dbg !10689
  %rlock.i141 = bitcast %union.anon.2* %78 to %struct.raw_spinlock*, !dbg !10689
  br label %do.end97, !dbg !10687

do.end97:                                         ; preds = %do.body94
  br label %do.end98, !dbg !10685

do.end98:                                         ; preds = %do.end97
  br label %do.end99, !dbg !10676

do.end99:                                         ; preds = %do.end98
  br label %do.end100, !dbg !10675

do.end100:                                        ; preds = %do.end99
  br label %do.end101, !dbg !10670

do.end101:                                        ; preds = %do.end100
  %79 = load %struct.xhci_command*, %struct.xhci_command** %cfg_cmd, align 8, !dbg !10690
  %in_ctx = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %79, i32 0, i32 0, !dbg !10691
  %80 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !10691
  %call102 = call %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx* %80) #11, !dbg !10692
  store %struct.xhci_input_control_ctx* %call102, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !10693
  %81 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10694
  %82 = load %struct.xhci_command*, %struct.xhci_command** %cfg_cmd, align 8, !dbg !10695
  %in_ctx103 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %82, i32 0, i32 0, !dbg !10696
  %83 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx103, align 8, !dbg !10696
  %84 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !10697
  %out_ctx = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %84, i32 0, i32 1, !dbg !10698
  %85 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx, align 8, !dbg !10698
  %86 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !10699
  %87 = load i32, i32* %ep_flag, align 4, !dbg !10700
  %88 = load i32, i32* %ep_flag, align 4, !dbg !10701
  call void @xhci_setup_input_ctx_for_config_ep(%struct.xhci_hcd* %81, %struct.xhci_container_ctx* %83, %struct.xhci_container_ctx* %85, %struct.xhci_input_control_ctx* %86, i32 %87, i32 %88) #11, !dbg !10702
  %89 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10703
  %90 = load %struct.xhci_command*, %struct.xhci_command** %cfg_cmd, align 8, !dbg !10704
  %in_ctx104 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %90, i32 0, i32 0, !dbg !10705
  %91 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx104, align 8, !dbg !10705
  %92 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !10706
  %out_ctx105 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %92, i32 0, i32 1, !dbg !10707
  %93 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx105, align 8, !dbg !10707
  %94 = load i32, i32* %ep_index, align 4, !dbg !10708
  call void @xhci_endpoint_copy(%struct.xhci_hcd* %89, %struct.xhci_container_ctx* %91, %struct.xhci_container_ctx* %93, i32 %94) #11, !dbg !10709
  %95 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10710
  %96 = load %struct.xhci_command*, %struct.xhci_command** %cfg_cmd, align 8, !dbg !10711
  %97 = load %struct.xhci_command*, %struct.xhci_command** %cfg_cmd, align 8, !dbg !10712
  %in_ctx106 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %97, i32 0, i32 0, !dbg !10713
  %98 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx106, align 8, !dbg !10713
  %dma = getelementptr inbounds %struct.xhci_container_ctx, %struct.xhci_container_ctx* %98, i32 0, i32 3, !dbg !10714
  %99 = load i64, i64* %dma, align 8, !dbg !10714
  %100 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !10715
  %slot_id107 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %100, i32 0, i32 44, !dbg !10716
  %101 = load i32, i32* %slot_id107, align 8, !dbg !10716
  %call108 = call i32 @xhci_queue_configure_endpoint(%struct.xhci_hcd* %95, %struct.xhci_command* %96, i64 %99, i32 %101, i1 zeroext false) #11, !dbg !10717
  store i32 %call108, i32* %err, align 4, !dbg !10718
  %102 = load i32, i32* %err, align 4, !dbg !10719
  %cmp109 = icmp slt i32 %102, 0, !dbg !10720
  br i1 %cmp109, label %if.then111, label %if.end113, !dbg !10721

if.then111:                                       ; preds = %do.end101
  %103 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10722
  %lock112 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %103, i32 0, i32 12, !dbg !10723
  %104 = load i64, i64* %flags, align 8, !dbg !10724
  store %struct.spinlock* %lock112, %struct.spinlock** %lock.addr.i142, align 8
  store i64 %104, i64* %flags.addr.i143, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !10725
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !10725
  store i32 1, i32* %tmp.i144, align 4, !dbg !10725
  %105 = load i32, i32* %tmp.i144, align 4, !dbg !10725
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !10726
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !10726
  store i32 1, i32* %tmp8.i145, align 4, !dbg !10726
  %106 = load i32, i32* %tmp8.i145, align 4, !dbg !10726
  %107 = load i64, i64* %flags.addr.i143, align 8, !dbg !10727
  call void @arch_local_irq_restore(i64 %107) #13, !dbg !10727
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10728, !srcloc !6814
  %108 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i142, align 8, !dbg !10729
  %109 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %108, i32 0, i32 0, !dbg !10729
  %rlock.i146 = bitcast %union.anon.2* %109 to %struct.raw_spinlock*, !dbg !10729
  %110 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10730
  %111 = load %struct.xhci_command*, %struct.xhci_command** %cfg_cmd, align 8, !dbg !10731
  call void @xhci_free_command(%struct.xhci_hcd* %110, %struct.xhci_command* %111) #11, !dbg !10732
  br label %cleanup, !dbg !10733

if.end113:                                        ; preds = %do.end101
  %112 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10734
  call void @xhci_ring_cmd_db(%struct.xhci_hcd* %112) #11, !dbg !10735
  %113 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10736
  %lock114 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %113, i32 0, i32 12, !dbg !10737
  %114 = load i64, i64* %flags, align 8, !dbg !10738
  store %struct.spinlock* %lock114, %struct.spinlock** %lock.addr.i123, align 8
  store i64 %114, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !10739
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !10739
  store i32 1, i32* %tmp.i, align 4, !dbg !10739
  %115 = load i32, i32* %tmp.i, align 4, !dbg !10739
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !10740
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !10740
  store i32 1, i32* %tmp8.i, align 4, !dbg !10740
  %116 = load i32, i32* %tmp8.i, align 4, !dbg !10740
  %117 = load i64, i64* %flags.addr.i, align 8, !dbg !10741
  call void @arch_local_irq_restore(i64 %117) #13, !dbg !10741
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10742, !srcloc !6814
  %118 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i123, align 8, !dbg !10743
  %119 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %118, i32 0, i32 0, !dbg !10743
  %rlock.i124 = bitcast %union.anon.2* %119 to %struct.raw_spinlock*, !dbg !10743
  %120 = load %struct.xhci_command*, %struct.xhci_command** %cfg_cmd, align 8, !dbg !10744
  %completion115 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %120, i32 0, i32 3, !dbg !10745
  %121 = load %struct.completion*, %struct.completion** %completion115, align 8, !dbg !10745
  call void @wait_for_completion(%struct.completion* %121) #11, !dbg !10746
  %122 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10747
  %123 = load %struct.xhci_command*, %struct.xhci_command** %cfg_cmd, align 8, !dbg !10748
  call void @xhci_free_command(%struct.xhci_hcd* %122, %struct.xhci_command* %123) #11, !dbg !10749
  br label %cleanup, !dbg !10749

cleanup:                                          ; preds = %if.end113, %if.then111, %if.then71, %if.then64, %if.then39
  call void @llvm.dbg.label(metadata !10750), !dbg !10751
  %124 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10752
  %125 = load %struct.xhci_command*, %struct.xhci_command** %stop_cmd, align 8, !dbg !10753
  call void @xhci_free_command(%struct.xhci_hcd* %124, %struct.xhci_command* %125) #11, !dbg !10754
  %126 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10755
  %ep_state116 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %126, i32 0, i32 3, !dbg !10757
  %127 = load i32, i32* %ep_state116, align 8, !dbg !10757
  %and117 = and i32 %127, 128, !dbg !10758
  %tobool118 = icmp ne i32 %and117, 0, !dbg !10758
  br i1 %tobool118, label %if.then119, label %if.end122, !dbg !10759

if.then119:                                       ; preds = %cleanup
  %128 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !10760
  %ep_state120 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %128, i32 0, i32 3, !dbg !10761
  %129 = load i32, i32* %ep_state120, align 8, !dbg !10762
  %and121 = and i32 %129, -129, !dbg !10762
  store i32 %and121, i32* %ep_state120, align 8, !dbg !10762
  br label %if.end122, !dbg !10760

if.end122:                                        ; preds = %if.then, %if.then5, %if.then11, %if.then14, %if.then25, %if.then31, %if.then35, %if.then119, %cleanup
  ret void, !dbg !10763
}

; Function Attrs: noredzone
declare dso_local i32 @xhci_hub_status_data(%struct.usb_hcd*, i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @xhci_hub_control(%struct.usb_hcd*, i16 zeroext, i16 zeroext, i16 zeroext, i8*, i16 zeroext) #3

; Function Attrs: noredzone
declare dso_local i32 @xhci_bus_suspend(%struct.usb_hcd*) #3

; Function Attrs: noredzone
declare dso_local i32 @xhci_bus_resume(%struct.usb_hcd*) #3

; Function Attrs: noredzone
declare dso_local i64 @xhci_get_resuming_ports(%struct.usb_hcd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_clear_tt_buffer_complete(%struct.usb_hcd* %hcd, %struct.usb_host_endpoint* %ep) #1 !dbg !10764 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !6665, metadata !DIExpression()), !dbg !10765
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !10767
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !10768
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ep.addr = alloca %struct.usb_host_endpoint*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %udev = alloca %struct.usb_device*, align 8
  %slot_id = alloca i32, align 4
  %ep_index = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !10775, metadata !DIExpression()), !dbg !10776
  store %struct.usb_host_endpoint* %ep, %struct.usb_host_endpoint** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep.addr, metadata !10777, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !10779, metadata !DIExpression()), !dbg !10780
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev, metadata !10781, metadata !DIExpression()), !dbg !10782
  call void @llvm.dbg.declare(metadata i32* %slot_id, metadata !10783, metadata !DIExpression()), !dbg !10784
  call void @llvm.dbg.declare(metadata i32* %ep_index, metadata !10785, metadata !DIExpression()), !dbg !10786
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10787, metadata !DIExpression()), !dbg !10788
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !10789
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !10790
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !10791
  br label %do.body, !dbg !10792

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10793

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10794, metadata !DIExpression()), !dbg !10796
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10797, metadata !DIExpression()), !dbg !10796
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !10796
  %conv = zext i1 %cmp to i32, !dbg !10796
  store i32 1, i32* %tmp, align 4, !dbg !10796
  %1 = load i32, i32* %tmp, align 4, !dbg !10796
  br label %do.body2, !dbg !10798

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !10799

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !10800

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !10802, metadata !DIExpression()), !dbg !10805
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !10806, metadata !DIExpression()), !dbg !10805
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !10805
  %conv8 = zext i1 %cmp7 to i32, !dbg !10805
  store i32 1, i32* %tmp9, align 4, !dbg !10805
  %2 = load i32, i32* %tmp9, align 4, !dbg !10805
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !10807
  store i64 %call10, i64* %flags, align 8, !dbg !10807
  br label %do.end, !dbg !10807

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !10800

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !10799

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10808, !srcloc !10809
  br label %do.body13, !dbg !10808

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10810
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %3, i32 0, i32 12, !dbg !10810
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10811
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !10812
  %rlock.i = bitcast %union.anon.2* %5 to %struct.raw_spinlock*, !dbg !10812
  br label %do.end15, !dbg !10810

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !10808

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !10799

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10798

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !10793

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !10813
  %hcpriv = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %6, i32 0, i32 5, !dbg !10814
  %7 = load i8*, i8** %hcpriv, align 8, !dbg !10814
  %8 = bitcast i8* %7 to %struct.usb_device*, !dbg !10815
  store %struct.usb_device* %8, %struct.usb_device** %udev, align 8, !dbg !10816
  %9 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !10817
  %slot_id20 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %9, i32 0, i32 44, !dbg !10818
  %10 = load i32, i32* %slot_id20, align 8, !dbg !10818
  store i32 %10, i32* %slot_id, align 4, !dbg !10819
  %11 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !10820
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %11, i32 0, i32 0, !dbg !10821
  %call21 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !10822
  store i32 %call21, i32* %ep_index, align 4, !dbg !10823
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10824
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %12, i32 0, i32 41, !dbg !10825
  %13 = load i32, i32* %slot_id, align 4, !dbg !10826
  %idxprom = zext i32 %13 to i64, !dbg !10824
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !10824
  %14 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !10824
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %14, i32 0, i32 3, !dbg !10827
  %15 = load i32, i32* %ep_index, align 4, !dbg !10828
  %idxprom22 = zext i32 %15 to i64, !dbg !10824
  %arrayidx23 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom22, !dbg !10824
  %ep_state = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx23, i32 0, i32 3, !dbg !10829
  %16 = load i32, i32* %ep_state, align 8, !dbg !10830
  %and = and i32 %16, -257, !dbg !10830
  store i32 %and, i32* %ep_state, align 8, !dbg !10830
  %17 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10831
  %18 = load i32, i32* %slot_id, align 4, !dbg !10832
  %19 = load i32, i32* %ep_index, align 4, !dbg !10833
  call void @xhci_ring_doorbell_for_active_rings(%struct.xhci_hcd* %17, i32 %18, i32 %19) #11, !dbg !10834
  %20 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10835
  %lock24 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %20, i32 0, i32 12, !dbg !10836
  %21 = load i64, i64* %flags, align 8, !dbg !10837
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %21, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !10838
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !10838
  store i32 1, i32* %tmp.i, align 4, !dbg !10838
  %22 = load i32, i32* %tmp.i, align 4, !dbg !10838
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !10839
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !10839
  store i32 1, i32* %tmp8.i, align 4, !dbg !10839
  %23 = load i32, i32* %tmp8.i, align 4, !dbg !10839
  %24 = load i64, i64* %flags.addr.i, align 8, !dbg !10840
  call void @arch_local_irq_restore(i64 %24) #13, !dbg !10840
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10841, !srcloc !6814
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !10842
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !10842
  %rlock.i26 = bitcast %union.anon.2* %26 to %struct.raw_spinlock*, !dbg !10842
  ret void, !dbg !10843
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_free_dev(%struct.usb_hcd* %hcd, %struct.usb_device* %udev) #1 !dbg !10844 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %virt_dev = alloca %struct.xhci_virt_device*, align 8
  %slot_ctx = alloca %struct.xhci_slot_ctx*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !10845, metadata !DIExpression()), !dbg !10846
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !10847, metadata !DIExpression()), !dbg !10848
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !10849, metadata !DIExpression()), !dbg !10850
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !10851
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !10852
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !10850
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev, metadata !10853, metadata !DIExpression()), !dbg !10854
  call void @llvm.dbg.declare(metadata %struct.xhci_slot_ctx** %slot_ctx, metadata !10855, metadata !DIExpression()), !dbg !10856
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10857, metadata !DIExpression()), !dbg !10858
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10859, metadata !DIExpression()), !dbg !10860
  %1 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !10861
  %2 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !10862
  %call1 = call i32 @xhci_check_args(%struct.usb_hcd* %1, %struct.usb_device* %2, %struct.usb_host_endpoint* null, i32 0, i1 zeroext true, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.xhci_free_dev, i64 0, i64 0)) #11, !dbg !10863
  store i32 %call1, i32* %ret, align 4, !dbg !10864
  %3 = load i32, i32* %ret, align 4, !dbg !10865
  %cmp = icmp sle i32 %3, 0, !dbg !10867
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10868

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !10869
  %cmp2 = icmp ne i32 %4, -19, !dbg !10870
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10871

if.then:                                          ; preds = %land.lhs.true
  br label %if.end16, !dbg !10872

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10873
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 41, !dbg !10874
  %6 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !10875
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 44, !dbg !10876
  %7 = load i32, i32* %slot_id, align 8, !dbg !10876
  %idxprom = sext i32 %7 to i64, !dbg !10873
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !10873
  %8 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !10873
  store %struct.xhci_virt_device* %8, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !10877
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10878
  %10 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !10879
  %out_ctx = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %10, i32 0, i32 1, !dbg !10880
  %11 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx, align 8, !dbg !10880
  %call3 = call %struct.xhci_slot_ctx* @xhci_get_slot_ctx(%struct.xhci_hcd* %9, %struct.xhci_container_ctx* %11) #11, !dbg !10881
  store %struct.xhci_slot_ctx* %call3, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !10882
  %12 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !10883
  call void @trace_xhci_free_dev(%struct.xhci_slot_ctx* %12) #11, !dbg !10884
  store i32 0, i32* %i, align 4, !dbg !10885
  br label %for.cond, !dbg !10887

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %i, align 4, !dbg !10888
  %cmp4 = icmp slt i32 %13, 31, !dbg !10890
  br i1 %cmp4, label %for.body, label %for.end, !dbg !10891

for.body:                                         ; preds = %for.cond
  %14 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !10892
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %14, i32 0, i32 3, !dbg !10894
  %15 = load i32, i32* %i, align 4, !dbg !10895
  %idxprom5 = sext i32 %15 to i64, !dbg !10892
  %arrayidx6 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom5, !dbg !10892
  %ep_state = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx6, i32 0, i32 3, !dbg !10896
  %16 = load i32, i32* %ep_state, align 8, !dbg !10897
  %and = and i32 %16, -5, !dbg !10897
  store i32 %and, i32* %ep_state, align 8, !dbg !10897
  %17 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !10898
  %eps7 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %17, i32 0, i32 3, !dbg !10898
  %18 = load i32, i32* %i, align 4, !dbg !10898
  %idxprom8 = sext i32 %18 to i64, !dbg !10898
  %arrayidx9 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps7, i64 0, i64 %idxprom8, !dbg !10898
  %stop_cmd_timer = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx9, i32 0, i32 5, !dbg !10898
  %call10 = call i32 @del_timer(%struct.timer_list* %stop_cmd_timer) #11, !dbg !10898
  br label %for.inc, !dbg !10899

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !10900
  %inc = add i32 %19, 1, !dbg !10900
  store i32 %inc, i32* %i, align 4, !dbg !10900
  br label %for.cond, !dbg !10901, !llvm.loop !10902

for.end:                                          ; preds = %for.cond
  %20 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !10904
  %udev11 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %20, i32 0, i32 0, !dbg !10905
  store %struct.usb_device* null, %struct.usb_device** %udev11, align 8, !dbg !10906
  %21 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10907
  %22 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !10908
  %slot_id12 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %22, i32 0, i32 44, !dbg !10909
  %23 = load i32, i32* %slot_id12, align 8, !dbg !10909
  %call13 = call i32 @xhci_disable_slot(%struct.xhci_hcd* %21, i32 %23) #11, !dbg !10910
  store i32 %call13, i32* %ret, align 4, !dbg !10911
  %24 = load i32, i32* %ret, align 4, !dbg !10912
  %tobool = icmp ne i32 %24, 0, !dbg !10912
  br i1 %tobool, label %if.then14, label %if.end16, !dbg !10914

if.then14:                                        ; preds = %for.end
  %25 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10915
  %26 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !10916
  %slot_id15 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %26, i32 0, i32 44, !dbg !10917
  %27 = load i32, i32* %slot_id15, align 8, !dbg !10917
  call void @xhci_free_virt_device(%struct.xhci_hcd* %25, i32 %27) #11, !dbg !10918
  br label %if.end16, !dbg !10918

if.end16:                                         ; preds = %if.then, %if.then14, %for.end
  ret void, !dbg !10919
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_alloc_streams(%struct.usb_hcd* %hcd, %struct.usb_device* %udev, %struct.usb_host_endpoint** %eps, i32 %num_eps, i32 %num_streams, i32 %mem_flags) #1 !dbg !10920 {
entry:
  %lock.addr.i214 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i214, metadata !6665, metadata !DIExpression()), !dbg !10921
  %flags.addr.i215 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i215, metadata !6671, metadata !DIExpression()), !dbg !10923
  %tmp.i216 = alloca i32, align 4
  %tmp8.i217 = alloca i32, align 4
  %lock.addr.i212 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i212, metadata !6673, metadata !DIExpression()), !dbg !10924
  %lock.addr.i207 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i207, metadata !6665, metadata !DIExpression()), !dbg !10931
  %flags.addr.i208 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i208, metadata !6671, metadata !DIExpression()), !dbg !10933
  %tmp.i209 = alloca i32, align 4
  %tmp8.i210 = alloca i32, align 4
  %lock.addr.i202 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i202, metadata !6665, metadata !DIExpression()), !dbg !10934
  %flags.addr.i203 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i203, metadata !6671, metadata !DIExpression()), !dbg !10938
  %tmp.i204 = alloca i32, align 4
  %tmp8.i205 = alloca i32, align 4
  %lock.addr.i200 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i200, metadata !6665, metadata !DIExpression()), !dbg !10939
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !10943
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !10944
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %eps.addr = alloca %struct.usb_host_endpoint**, align 8
  %num_eps.addr = alloca i32, align 4
  %num_streams.addr = alloca i32, align 4
  %mem_flags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %xhci = alloca %struct.xhci_hcd*, align 8
  %vdev = alloca %struct.xhci_virt_device*, align 8
  %config_cmd = alloca %struct.xhci_command*, align 8
  %ctrl_ctx = alloca %struct.xhci_input_control_ctx*, align 8
  %ep_index = alloca i32, align 4
  %num_stream_ctxs = alloca i32, align 4
  %max_packet = alloca i32, align 4
  %flags = alloca i64, align 8
  %changed_ep_bitmask = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy20 = alloca i64, align 8
  %__dummy221 = alloca i64, align 8
  %tmp24 = alloca i32, align 4
  %ep_ctx = alloca %struct.xhci_ep_ctx*, align 8
  %__dummy111 = alloca i64, align 8
  %__dummy2112 = alloca i64, align 8
  %tmp115 = alloca i32, align 4
  %__dummy119 = alloca i64, align 8
  %__dummy2120 = alloca i64, align 8
  %tmp123 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !10951, metadata !DIExpression()), !dbg !10952
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !10953, metadata !DIExpression()), !dbg !10954
  store %struct.usb_host_endpoint** %eps, %struct.usb_host_endpoint*** %eps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint*** %eps.addr, metadata !10955, metadata !DIExpression()), !dbg !10956
  store i32 %num_eps, i32* %num_eps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_eps.addr, metadata !10957, metadata !DIExpression()), !dbg !10958
  store i32 %num_streams, i32* %num_streams.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_streams.addr, metadata !10959, metadata !DIExpression()), !dbg !10960
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !10961, metadata !DIExpression()), !dbg !10962
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10963, metadata !DIExpression()), !dbg !10964
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10965, metadata !DIExpression()), !dbg !10966
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !10967, metadata !DIExpression()), !dbg !10968
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %vdev, metadata !10969, metadata !DIExpression()), !dbg !10970
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %config_cmd, metadata !10971, metadata !DIExpression()), !dbg !10972
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx, metadata !10973, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.declare(metadata i32* %ep_index, metadata !10975, metadata !DIExpression()), !dbg !10976
  call void @llvm.dbg.declare(metadata i32* %num_stream_ctxs, metadata !10977, metadata !DIExpression()), !dbg !10978
  call void @llvm.dbg.declare(metadata i32* %max_packet, metadata !10979, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10981, metadata !DIExpression()), !dbg !10982
  call void @llvm.dbg.declare(metadata i32* %changed_ep_bitmask, metadata !10983, metadata !DIExpression()), !dbg !10984
  store i32 0, i32* %changed_ep_bitmask, align 4, !dbg !10984
  %0 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !10985
  %tobool = icmp ne %struct.usb_host_endpoint** %0, null, !dbg !10985
  br i1 %tobool, label %if.end, label %if.then, !dbg !10987

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10988
  br label %return, !dbg !10988

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %num_streams.addr, align 4, !dbg !10989
  %add = add i32 %1, 1, !dbg !10989
  store i32 %add, i32* %num_streams.addr, align 4, !dbg !10989
  %2 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !10990
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %2) #11, !dbg !10991
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !10992
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10993
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %3, i32 0, i32 50, !dbg !10995
  %4 = load i64, i64* %quirks, align 8, !dbg !10995
  %and = and i64 %4, 524288, !dbg !10996
  %tobool1 = icmp ne i64 %and, 0, !dbg !10996
  br i1 %tobool1, label %if.then4, label %lor.lhs.false, !dbg !10997

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !10998
  %hcc_params = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 10, !dbg !10998
  %6 = load i32, i32* %hcc_params, align 4, !dbg !10998
  %shr = lshr i32 %6, 12, !dbg !10998
  %and2 = and i32 %shr, 15, !dbg !10998
  %add3 = add i32 %and2, 1, !dbg !10998
  %shl = shl i32 1, %add3, !dbg !10998
  %cmp = icmp slt i32 %shl, 4, !dbg !10999
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !11000

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -38, i32* %retval, align 4, !dbg !11001
  br label %return, !dbg !11001

if.end5:                                          ; preds = %lor.lhs.false
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11003
  %8 = load i32, i32* %mem_flags.addr, align 4, !dbg !11004
  %call6 = call %struct.xhci_command* @xhci_alloc_command_with_ctx(%struct.xhci_hcd* %7, i1 zeroext true, i32 %8) #11, !dbg !11005
  store %struct.xhci_command* %call6, %struct.xhci_command** %config_cmd, align 8, !dbg !11006
  %9 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !11007
  %tobool7 = icmp ne %struct.xhci_command* %9, null, !dbg !11007
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !11009

if.then8:                                         ; preds = %if.end5
  store i32 -12, i32* %retval, align 4, !dbg !11010
  br label %return, !dbg !11010

if.end9:                                          ; preds = %if.end5
  %10 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !11011
  %in_ctx = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %10, i32 0, i32 0, !dbg !11012
  %11 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !11012
  %call10 = call %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx* %11) #11, !dbg !11013
  store %struct.xhci_input_control_ctx* %call10, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11014
  %12 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11015
  %tobool11 = icmp ne %struct.xhci_input_control_ctx* %12, null, !dbg !11015
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !11017

if.then12:                                        ; preds = %if.end9
  %13 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11018
  %call13 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %13) #11, !dbg !11018
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call13, i32 0, i32 0, !dbg !11018
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !11018
  %14 = load %struct.device*, %struct.device** %controller, align 8, !dbg !11018
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %14, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.xhci_alloc_streams, i64 0, i64 0)) #12, !dbg !11018
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11020
  %16 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !11021
  call void @xhci_free_command(%struct.xhci_hcd* %15, %struct.xhci_command* %16) #11, !dbg !11022
  store i32 -12, i32* %retval, align 4, !dbg !11023
  br label %return, !dbg !11023

if.end14:                                         ; preds = %if.end9
  br label %do.body, !dbg !11024

do.body:                                          ; preds = %if.end14
  br label %do.body15, !dbg !11025

do.body15:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11026, metadata !DIExpression()), !dbg !11028
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11029, metadata !DIExpression()), !dbg !11028
  %cmp16 = icmp eq i64* %__dummy, %__dummy2, !dbg !11028
  %conv = zext i1 %cmp16 to i32, !dbg !11028
  store i32 1, i32* %tmp, align 4, !dbg !11028
  %17 = load i32, i32* %tmp, align 4, !dbg !11028
  br label %do.body17, !dbg !11030

do.body17:                                        ; preds = %do.body15
  br label %do.body18, !dbg !11031

do.body18:                                        ; preds = %do.body17
  br label %do.body19, !dbg !11032

do.body19:                                        ; preds = %do.body18
  call void @llvm.dbg.declare(metadata i64* %__dummy20, metadata !11034, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.declare(metadata i64* %__dummy221, metadata !11038, metadata !DIExpression()), !dbg !11037
  %cmp22 = icmp eq i64* %__dummy20, %__dummy221, !dbg !11037
  %conv23 = zext i1 %cmp22 to i32, !dbg !11037
  store i32 1, i32* %tmp24, align 4, !dbg !11037
  %18 = load i32, i32* %tmp24, align 4, !dbg !11037
  %call25 = call i64 @arch_local_irq_save() #11, !dbg !11039
  store i64 %call25, i64* %flags, align 8, !dbg !11039
  br label %do.end, !dbg !11039

do.end:                                           ; preds = %do.body19
  br label %do.end26, !dbg !11032

do.end26:                                         ; preds = %do.end
  br label %do.body27, !dbg !11031

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11040, !srcloc !11041
  br label %do.body28, !dbg !11040

do.body28:                                        ; preds = %do.body27
  %19 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11042
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %19, i32 0, i32 12, !dbg !11042
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11043
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !11044
  %rlock.i = bitcast %union.anon.2* %21 to %struct.raw_spinlock*, !dbg !11044
  br label %do.end30, !dbg !11042

do.end30:                                         ; preds = %do.body28
  br label %do.end31, !dbg !11040

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !11031

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !11030

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !11025

do.end34:                                         ; preds = %do.end33
  %22 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11045
  %23 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11046
  %24 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !11047
  %25 = load i32, i32* %num_eps.addr, align 4, !dbg !11048
  %call35 = call i32 @xhci_calculate_streams_and_bitmask(%struct.xhci_hcd* %22, %struct.usb_device* %23, %struct.usb_host_endpoint** %24, i32 %25, i32* %num_streams.addr, i32* %changed_ep_bitmask) #11, !dbg !11049
  store i32 %call35, i32* %ret, align 4, !dbg !11050
  %26 = load i32, i32* %ret, align 4, !dbg !11051
  %cmp36 = icmp slt i32 %26, 0, !dbg !11052
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !11053

if.then38:                                        ; preds = %do.end34
  %27 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11054
  %28 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !11055
  call void @xhci_free_command(%struct.xhci_hcd* %27, %struct.xhci_command* %28) #11, !dbg !11056
  %29 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11057
  %lock39 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %29, i32 0, i32 12, !dbg !11058
  %30 = load i64, i64* %flags, align 8, !dbg !11059
  store %struct.spinlock* %lock39, %struct.spinlock** %lock.addr.i200, align 8
  store i64 %30, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !11060
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !11060
  store i32 1, i32* %tmp.i, align 4, !dbg !11060
  %31 = load i32, i32* %tmp.i, align 4, !dbg !11060
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !11061
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !11061
  store i32 1, i32* %tmp8.i, align 4, !dbg !11061
  %32 = load i32, i32* %tmp8.i, align 4, !dbg !11061
  %33 = load i64, i64* %flags.addr.i, align 8, !dbg !11062
  call void @arch_local_irq_restore(i64 %33) #13, !dbg !11062
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11063, !srcloc !6814
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i200, align 8, !dbg !11064
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !11064
  %rlock.i201 = bitcast %union.anon.2* %35 to %struct.raw_spinlock*, !dbg !11064
  %36 = load i32, i32* %ret, align 4, !dbg !11065
  store i32 %36, i32* %retval, align 4, !dbg !11066
  br label %return, !dbg !11066

if.end40:                                         ; preds = %do.end34
  %37 = load i32, i32* %num_streams.addr, align 4, !dbg !11067
  %cmp41 = icmp ule i32 %37, 1, !dbg !11068
  br i1 %cmp41, label %if.then43, label %if.end48, !dbg !11069

if.then43:                                        ; preds = %if.end40
  %38 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11070
  %call44 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %38) #11, !dbg !11070
  %self45 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call44, i32 0, i32 0, !dbg !11070
  %controller46 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self45, i32 0, i32 0, !dbg !11070
  %39 = load %struct.device*, %struct.device** %controller46, align 8, !dbg !11070
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %39, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.105, i64 0, i64 0)) #12, !dbg !11070
  %40 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11071
  %41 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !11072
  call void @xhci_free_command(%struct.xhci_hcd* %40, %struct.xhci_command* %41) #11, !dbg !11073
  %42 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11074
  %lock47 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %42, i32 0, i32 12, !dbg !11075
  %43 = load i64, i64* %flags, align 8, !dbg !11076
  store %struct.spinlock* %lock47, %struct.spinlock** %lock.addr.i202, align 8
  store i64 %43, i64* %flags.addr.i203, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !11077
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !11077
  store i32 1, i32* %tmp.i204, align 4, !dbg !11077
  %44 = load i32, i32* %tmp.i204, align 4, !dbg !11077
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !11078
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !11078
  store i32 1, i32* %tmp8.i205, align 4, !dbg !11078
  %45 = load i32, i32* %tmp8.i205, align 4, !dbg !11078
  %46 = load i64, i64* %flags.addr.i203, align 8, !dbg !11079
  call void @arch_local_irq_restore(i64 %46) #13, !dbg !11079
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11080, !srcloc !6814
  %47 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i202, align 8, !dbg !11081
  %48 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %47, i32 0, i32 0, !dbg !11081
  %rlock.i206 = bitcast %union.anon.2* %48 to %struct.raw_spinlock*, !dbg !11081
  store i32 -22, i32* %retval, align 4, !dbg !11082
  br label %return, !dbg !11082

if.end48:                                         ; preds = %if.end40
  %49 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11083
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %49, i32 0, i32 41, !dbg !11084
  %50 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11085
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %50, i32 0, i32 44, !dbg !11086
  %51 = load i32, i32* %slot_id, align 8, !dbg !11086
  %idxprom = sext i32 %51 to i64, !dbg !11083
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !11083
  %52 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !11083
  store %struct.xhci_virt_device* %52, %struct.xhci_virt_device** %vdev, align 8, !dbg !11087
  store i32 0, i32* %i, align 4, !dbg !11088
  br label %for.cond, !dbg !11090

for.cond:                                         ; preds = %for.inc, %if.end48
  %53 = load i32, i32* %i, align 4, !dbg !11091
  %54 = load i32, i32* %num_eps.addr, align 4, !dbg !11093
  %cmp49 = icmp ult i32 %53, %54, !dbg !11094
  br i1 %cmp49, label %for.body, label %for.end, !dbg !11095

for.body:                                         ; preds = %for.cond
  %55 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !11096
  %56 = load i32, i32* %i, align 4, !dbg !11098
  %idxprom51 = sext i32 %56 to i64, !dbg !11096
  %arrayidx52 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %55, i64 %idxprom51, !dbg !11096
  %57 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx52, align 8, !dbg !11096
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %57, i32 0, i32 0, !dbg !11099
  %call53 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !11100
  store i32 %call53, i32* %ep_index, align 4, !dbg !11101
  %58 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11102
  %eps54 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %58, i32 0, i32 3, !dbg !11103
  %59 = load i32, i32* %ep_index, align 4, !dbg !11104
  %idxprom55 = zext i32 %59 to i64, !dbg !11102
  %arrayidx56 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps54, i64 0, i64 %idxprom55, !dbg !11102
  %ep_state = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx56, i32 0, i32 3, !dbg !11105
  %60 = load i32, i32* %ep_state, align 8, !dbg !11106
  %or = or i32 %60, 8, !dbg !11106
  store i32 %or, i32* %ep_state, align 8, !dbg !11106
  br label %for.inc, !dbg !11107

for.inc:                                          ; preds = %for.body
  %61 = load i32, i32* %i, align 4, !dbg !11108
  %inc = add i32 %61, 1, !dbg !11108
  store i32 %inc, i32* %i, align 4, !dbg !11108
  br label %for.cond, !dbg !11109, !llvm.loop !11110

for.end:                                          ; preds = %for.cond
  %62 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11112
  %lock57 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %62, i32 0, i32 12, !dbg !11113
  %63 = load i64, i64* %flags, align 8, !dbg !11114
  store %struct.spinlock* %lock57, %struct.spinlock** %lock.addr.i207, align 8
  store i64 %63, i64* %flags.addr.i208, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !11115
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !11115
  store i32 1, i32* %tmp.i209, align 4, !dbg !11115
  %64 = load i32, i32* %tmp.i209, align 4, !dbg !11115
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !11116
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !11116
  store i32 1, i32* %tmp8.i210, align 4, !dbg !11116
  %65 = load i32, i32* %tmp8.i210, align 4, !dbg !11116
  %66 = load i64, i64* %flags.addr.i208, align 8, !dbg !11117
  call void @arch_local_irq_restore(i64 %66) #13, !dbg !11117
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11118, !srcloc !6814
  %67 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i207, align 8, !dbg !11119
  %68 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %67, i32 0, i32 0, !dbg !11119
  %rlock.i211 = bitcast %union.anon.2* %68 to %struct.raw_spinlock*, !dbg !11119
  %69 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11120
  call void @xhci_calculate_streams_entries(%struct.xhci_hcd* %69, i32* %num_streams.addr, i32* %num_stream_ctxs) #11, !dbg !11121
  store i32 0, i32* %i, align 4, !dbg !11122
  br label %for.cond58, !dbg !11124

for.cond58:                                       ; preds = %for.inc81, %for.end
  %70 = load i32, i32* %i, align 4, !dbg !11125
  %71 = load i32, i32* %num_eps.addr, align 4, !dbg !11127
  %cmp59 = icmp ult i32 %70, %71, !dbg !11128
  br i1 %cmp59, label %for.body61, label %for.end83, !dbg !11129

for.body61:                                       ; preds = %for.cond58
  %72 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !11130
  %73 = load i32, i32* %i, align 4, !dbg !11132
  %idxprom62 = sext i32 %73 to i64, !dbg !11130
  %arrayidx63 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %72, i64 %idxprom62, !dbg !11130
  %74 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx63, align 8, !dbg !11130
  %desc64 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %74, i32 0, i32 0, !dbg !11133
  %call65 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc64) #11, !dbg !11134
  store i32 %call65, i32* %ep_index, align 4, !dbg !11135
  %75 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !11136
  %76 = load i32, i32* %i, align 4, !dbg !11137
  %idxprom66 = sext i32 %76 to i64, !dbg !11136
  %arrayidx67 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %75, i64 %idxprom66, !dbg !11136
  %77 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx67, align 8, !dbg !11136
  %desc68 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %77, i32 0, i32 0, !dbg !11138
  %call69 = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc68) #11, !dbg !11139
  store i32 %call69, i32* %max_packet, align 4, !dbg !11140
  %78 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11141
  %79 = load i32, i32* %num_stream_ctxs, align 4, !dbg !11142
  %80 = load i32, i32* %num_streams.addr, align 4, !dbg !11143
  %81 = load i32, i32* %max_packet, align 4, !dbg !11144
  %82 = load i32, i32* %mem_flags.addr, align 4, !dbg !11145
  %call70 = call %struct.xhci_stream_info* @xhci_alloc_stream_info(%struct.xhci_hcd* %78, i32 %79, i32 %80, i32 %81, i32 %82) #11, !dbg !11146
  %83 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11147
  %eps71 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %83, i32 0, i32 3, !dbg !11148
  %84 = load i32, i32* %ep_index, align 4, !dbg !11149
  %idxprom72 = zext i32 %84 to i64, !dbg !11147
  %arrayidx73 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps71, i64 0, i64 %idxprom72, !dbg !11147
  %stream_info = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx73, i32 0, i32 1, !dbg !11150
  store %struct.xhci_stream_info* %call70, %struct.xhci_stream_info** %stream_info, align 8, !dbg !11151
  %85 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11152
  %eps74 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %85, i32 0, i32 3, !dbg !11154
  %86 = load i32, i32* %ep_index, align 4, !dbg !11155
  %idxprom75 = zext i32 %86 to i64, !dbg !11152
  %arrayidx76 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps74, i64 0, i64 %idxprom75, !dbg !11152
  %stream_info77 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx76, i32 0, i32 1, !dbg !11156
  %87 = load %struct.xhci_stream_info*, %struct.xhci_stream_info** %stream_info77, align 8, !dbg !11156
  %tobool78 = icmp ne %struct.xhci_stream_info* %87, null, !dbg !11152
  br i1 %tobool78, label %if.end80, label %if.then79, !dbg !11157

if.then79:                                        ; preds = %for.body61
  br label %cleanup, !dbg !11158

if.end80:                                         ; preds = %for.body61
  br label %for.inc81, !dbg !11159

for.inc81:                                        ; preds = %if.end80
  %88 = load i32, i32* %i, align 4, !dbg !11160
  %inc82 = add i32 %88, 1, !dbg !11160
  store i32 %inc82, i32* %i, align 4, !dbg !11160
  br label %for.cond58, !dbg !11161, !llvm.loop !11162

for.end83:                                        ; preds = %for.cond58
  store i32 0, i32* %i, align 4, !dbg !11164
  br label %for.cond84, !dbg !11166

for.cond84:                                       ; preds = %for.inc99, %for.end83
  %89 = load i32, i32* %i, align 4, !dbg !11167
  %90 = load i32, i32* %num_eps.addr, align 4, !dbg !11169
  %cmp85 = icmp ult i32 %89, %90, !dbg !11170
  br i1 %cmp85, label %for.body87, label %for.end101, !dbg !11171

for.body87:                                       ; preds = %for.cond84
  call void @llvm.dbg.declare(metadata %struct.xhci_ep_ctx** %ep_ctx, metadata !11172, metadata !DIExpression()), !dbg !11174
  %91 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !11175
  %92 = load i32, i32* %i, align 4, !dbg !11176
  %idxprom88 = sext i32 %92 to i64, !dbg !11175
  %arrayidx89 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %91, i64 %idxprom88, !dbg !11175
  %93 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx89, align 8, !dbg !11175
  %desc90 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %93, i32 0, i32 0, !dbg !11177
  %call91 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc90) #11, !dbg !11178
  store i32 %call91, i32* %ep_index, align 4, !dbg !11179
  %94 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11180
  %95 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !11181
  %in_ctx92 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %95, i32 0, i32 0, !dbg !11182
  %96 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx92, align 8, !dbg !11182
  %97 = load i32, i32* %ep_index, align 4, !dbg !11183
  %call93 = call %struct.xhci_ep_ctx* @xhci_get_ep_ctx(%struct.xhci_hcd* %94, %struct.xhci_container_ctx* %96, i32 %97) #11, !dbg !11184
  store %struct.xhci_ep_ctx* %call93, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !11185
  %98 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11186
  %99 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !11187
  %in_ctx94 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %99, i32 0, i32 0, !dbg !11188
  %100 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx94, align 8, !dbg !11188
  %101 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11189
  %out_ctx = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %101, i32 0, i32 1, !dbg !11190
  %102 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx, align 8, !dbg !11190
  %103 = load i32, i32* %ep_index, align 4, !dbg !11191
  call void @xhci_endpoint_copy(%struct.xhci_hcd* %98, %struct.xhci_container_ctx* %100, %struct.xhci_container_ctx* %102, i32 %103) #11, !dbg !11192
  %104 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11193
  %105 = load %struct.xhci_ep_ctx*, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !11194
  %106 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11195
  %eps95 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %106, i32 0, i32 3, !dbg !11196
  %107 = load i32, i32* %ep_index, align 4, !dbg !11197
  %idxprom96 = zext i32 %107 to i64, !dbg !11195
  %arrayidx97 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps95, i64 0, i64 %idxprom96, !dbg !11195
  %stream_info98 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx97, i32 0, i32 1, !dbg !11198
  %108 = load %struct.xhci_stream_info*, %struct.xhci_stream_info** %stream_info98, align 8, !dbg !11198
  call void @xhci_setup_streams_ep_input_ctx(%struct.xhci_hcd* %104, %struct.xhci_ep_ctx* %105, %struct.xhci_stream_info* %108) #11, !dbg !11199
  br label %for.inc99, !dbg !11200

for.inc99:                                        ; preds = %for.body87
  %109 = load i32, i32* %i, align 4, !dbg !11201
  %inc100 = add i32 %109, 1, !dbg !11201
  store i32 %inc100, i32* %i, align 4, !dbg !11201
  br label %for.cond84, !dbg !11202, !llvm.loop !11203

for.end101:                                       ; preds = %for.cond84
  %110 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11205
  %111 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !11206
  %in_ctx102 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %111, i32 0, i32 0, !dbg !11207
  %112 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx102, align 8, !dbg !11207
  %113 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11208
  %out_ctx103 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %113, i32 0, i32 1, !dbg !11209
  %114 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx103, align 8, !dbg !11209
  %115 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11210
  %116 = load i32, i32* %changed_ep_bitmask, align 4, !dbg !11211
  %117 = load i32, i32* %changed_ep_bitmask, align 4, !dbg !11212
  call void @xhci_setup_input_ctx_for_config_ep(%struct.xhci_hcd* %110, %struct.xhci_container_ctx* %112, %struct.xhci_container_ctx* %114, %struct.xhci_input_control_ctx* %115, i32 %116, i32 %117) #11, !dbg !11213
  %118 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11214
  %119 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11215
  %120 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !11216
  %call104 = call i32 @xhci_configure_endpoint(%struct.xhci_hcd* %118, %struct.usb_device* %119, %struct.xhci_command* %120, i1 zeroext false, i1 zeroext false) #11, !dbg !11217
  store i32 %call104, i32* %ret, align 4, !dbg !11218
  %121 = load i32, i32* %ret, align 4, !dbg !11219
  %cmp105 = icmp slt i32 %121, 0, !dbg !11221
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !11222

if.then107:                                       ; preds = %for.end101
  br label %cleanup, !dbg !11223

if.end108:                                        ; preds = %for.end101
  br label %do.body109, !dbg !11224

do.body109:                                       ; preds = %if.end108
  br label %do.body110, !dbg !11225

do.body110:                                       ; preds = %do.body109
  call void @llvm.dbg.declare(metadata i64* %__dummy111, metadata !11226, metadata !DIExpression()), !dbg !11228
  call void @llvm.dbg.declare(metadata i64* %__dummy2112, metadata !11229, metadata !DIExpression()), !dbg !11228
  %cmp113 = icmp eq i64* %__dummy111, %__dummy2112, !dbg !11228
  %conv114 = zext i1 %cmp113 to i32, !dbg !11228
  store i32 1, i32* %tmp115, align 4, !dbg !11228
  %122 = load i32, i32* %tmp115, align 4, !dbg !11228
  br label %do.body116, !dbg !11230

do.body116:                                       ; preds = %do.body110
  br label %do.body117, !dbg !11231

do.body117:                                       ; preds = %do.body116
  br label %do.body118, !dbg !11232

do.body118:                                       ; preds = %do.body117
  call void @llvm.dbg.declare(metadata i64* %__dummy119, metadata !11234, metadata !DIExpression()), !dbg !11237
  call void @llvm.dbg.declare(metadata i64* %__dummy2120, metadata !11238, metadata !DIExpression()), !dbg !11237
  %cmp121 = icmp eq i64* %__dummy119, %__dummy2120, !dbg !11237
  %conv122 = zext i1 %cmp121 to i32, !dbg !11237
  store i32 1, i32* %tmp123, align 4, !dbg !11237
  %123 = load i32, i32* %tmp123, align 4, !dbg !11237
  %call124 = call i64 @arch_local_irq_save() #11, !dbg !11239
  store i64 %call124, i64* %flags, align 8, !dbg !11239
  br label %do.end125, !dbg !11239

do.end125:                                        ; preds = %do.body118
  br label %do.end126, !dbg !11232

do.end126:                                        ; preds = %do.end125
  br label %do.body127, !dbg !11231

do.body127:                                       ; preds = %do.end126
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11240, !srcloc !11241
  br label %do.body128, !dbg !11240

do.body128:                                       ; preds = %do.body127
  %124 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11242
  %lock129 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %124, i32 0, i32 12, !dbg !11242
  store %struct.spinlock* %lock129, %struct.spinlock** %lock.addr.i212, align 8
  %125 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i212, align 8, !dbg !11243
  %126 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %125, i32 0, i32 0, !dbg !11244
  %rlock.i213 = bitcast %union.anon.2* %126 to %struct.raw_spinlock*, !dbg !11244
  br label %do.end131, !dbg !11242

do.end131:                                        ; preds = %do.body128
  br label %do.end132, !dbg !11240

do.end132:                                        ; preds = %do.end131
  br label %do.end133, !dbg !11231

do.end133:                                        ; preds = %do.end132
  br label %do.end134, !dbg !11230

do.end134:                                        ; preds = %do.end133
  br label %do.end135, !dbg !11225

do.end135:                                        ; preds = %do.end134
  store i32 0, i32* %i, align 4, !dbg !11245
  br label %for.cond136, !dbg !11247

for.cond136:                                      ; preds = %for.inc154, %do.end135
  %127 = load i32, i32* %i, align 4, !dbg !11248
  %128 = load i32, i32* %num_eps.addr, align 4, !dbg !11250
  %cmp137 = icmp ult i32 %127, %128, !dbg !11251
  br i1 %cmp137, label %for.body139, label %for.end156, !dbg !11252

for.body139:                                      ; preds = %for.cond136
  %129 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !11253
  %130 = load i32, i32* %i, align 4, !dbg !11255
  %idxprom140 = sext i32 %130 to i64, !dbg !11253
  %arrayidx141 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %129, i64 %idxprom140, !dbg !11253
  %131 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx141, align 8, !dbg !11253
  %desc142 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %131, i32 0, i32 0, !dbg !11256
  %call143 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc142) #11, !dbg !11257
  store i32 %call143, i32* %ep_index, align 4, !dbg !11258
  %132 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11259
  %eps144 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %132, i32 0, i32 3, !dbg !11260
  %133 = load i32, i32* %ep_index, align 4, !dbg !11261
  %idxprom145 = zext i32 %133 to i64, !dbg !11259
  %arrayidx146 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps144, i64 0, i64 %idxprom145, !dbg !11259
  %ep_state147 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx146, i32 0, i32 3, !dbg !11262
  %134 = load i32, i32* %ep_state147, align 8, !dbg !11263
  %and148 = and i32 %134, -9, !dbg !11263
  store i32 %and148, i32* %ep_state147, align 8, !dbg !11263
  %135 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11264
  %eps149 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %135, i32 0, i32 3, !dbg !11265
  %136 = load i32, i32* %ep_index, align 4, !dbg !11266
  %idxprom150 = zext i32 %136 to i64, !dbg !11264
  %arrayidx151 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps149, i64 0, i64 %idxprom150, !dbg !11264
  %ep_state152 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx151, i32 0, i32 3, !dbg !11267
  %137 = load i32, i32* %ep_state152, align 8, !dbg !11268
  %or153 = or i32 %137, 16, !dbg !11268
  store i32 %or153, i32* %ep_state152, align 8, !dbg !11268
  br label %for.inc154, !dbg !11269

for.inc154:                                       ; preds = %for.body139
  %138 = load i32, i32* %i, align 4, !dbg !11270
  %inc155 = add i32 %138, 1, !dbg !11270
  store i32 %inc155, i32* %i, align 4, !dbg !11270
  br label %for.cond136, !dbg !11271, !llvm.loop !11272

for.end156:                                       ; preds = %for.cond136
  %139 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11274
  %140 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !11275
  call void @xhci_free_command(%struct.xhci_hcd* %139, %struct.xhci_command* %140) #11, !dbg !11276
  %141 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11277
  %lock157 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %141, i32 0, i32 12, !dbg !11278
  %142 = load i64, i64* %flags, align 8, !dbg !11279
  store %struct.spinlock* %lock157, %struct.spinlock** %lock.addr.i214, align 8
  store i64 %142, i64* %flags.addr.i215, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !11280
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !11280
  store i32 1, i32* %tmp.i216, align 4, !dbg !11280
  %143 = load i32, i32* %tmp.i216, align 4, !dbg !11280
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !11281
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !11281
  store i32 1, i32* %tmp8.i217, align 4, !dbg !11281
  %144 = load i32, i32* %tmp8.i217, align 4, !dbg !11281
  %145 = load i64, i64* %flags.addr.i215, align 8, !dbg !11282
  call void @arch_local_irq_restore(i64 %145) #13, !dbg !11282
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11283, !srcloc !6814
  %146 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i214, align 8, !dbg !11284
  %147 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %146, i32 0, i32 0, !dbg !11284
  %rlock.i218 = bitcast %union.anon.2* %147 to %struct.raw_spinlock*, !dbg !11284
  store i32 0, i32* %i, align 4, !dbg !11285
  br label %for.cond158, !dbg !11287

for.cond158:                                      ; preds = %for.inc166, %for.end156
  %148 = load i32, i32* %i, align 4, !dbg !11288
  %149 = load i32, i32* %num_eps.addr, align 4, !dbg !11290
  %cmp159 = icmp ult i32 %148, %149, !dbg !11291
  br i1 %cmp159, label %for.body161, label %for.end168, !dbg !11292

for.body161:                                      ; preds = %for.cond158
  %150 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !11293
  %151 = load i32, i32* %i, align 4, !dbg !11295
  %idxprom162 = sext i32 %151 to i64, !dbg !11293
  %arrayidx163 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %150, i64 %idxprom162, !dbg !11293
  %152 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx163, align 8, !dbg !11293
  %desc164 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %152, i32 0, i32 0, !dbg !11296
  %call165 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc164) #11, !dbg !11297
  store i32 %call165, i32* %ep_index, align 4, !dbg !11298
  %153 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11299
  %154 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11300
  %155 = load i32, i32* %ep_index, align 4, !dbg !11301
  call void @xhci_debugfs_create_stream_files(%struct.xhci_hcd* %153, %struct.xhci_virt_device* %154, i32 %155) #11, !dbg !11302
  br label %for.inc166, !dbg !11303

for.inc166:                                       ; preds = %for.body161
  %156 = load i32, i32* %i, align 4, !dbg !11304
  %inc167 = add i32 %156, 1, !dbg !11304
  store i32 %inc167, i32* %i, align 4, !dbg !11304
  br label %for.cond158, !dbg !11305, !llvm.loop !11306

for.end168:                                       ; preds = %for.cond158
  %157 = load i32, i32* %num_streams.addr, align 4, !dbg !11308
  %sub = sub i32 %157, 1, !dbg !11309
  store i32 %sub, i32* %retval, align 4, !dbg !11310
  br label %return, !dbg !11310

cleanup:                                          ; preds = %if.then107, %if.then79
  call void @llvm.dbg.label(metadata !11311), !dbg !11312
  store i32 0, i32* %i, align 4, !dbg !11313
  br label %for.cond169, !dbg !11315

for.cond169:                                      ; preds = %for.inc197, %cleanup
  %158 = load i32, i32* %i, align 4, !dbg !11316
  %159 = load i32, i32* %num_eps.addr, align 4, !dbg !11318
  %cmp170 = icmp ult i32 %158, %159, !dbg !11319
  br i1 %cmp170, label %for.body172, label %for.end199, !dbg !11320

for.body172:                                      ; preds = %for.cond169
  %160 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !11321
  %161 = load i32, i32* %i, align 4, !dbg !11323
  %idxprom173 = sext i32 %161 to i64, !dbg !11321
  %arrayidx174 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %160, i64 %idxprom173, !dbg !11321
  %162 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx174, align 8, !dbg !11321
  %desc175 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %162, i32 0, i32 0, !dbg !11324
  %call176 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc175) #11, !dbg !11325
  store i32 %call176, i32* %ep_index, align 4, !dbg !11326
  %163 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11327
  %164 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11328
  %eps177 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %164, i32 0, i32 3, !dbg !11329
  %165 = load i32, i32* %ep_index, align 4, !dbg !11330
  %idxprom178 = zext i32 %165 to i64, !dbg !11328
  %arrayidx179 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps177, i64 0, i64 %idxprom178, !dbg !11328
  %stream_info180 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx179, i32 0, i32 1, !dbg !11331
  %166 = load %struct.xhci_stream_info*, %struct.xhci_stream_info** %stream_info180, align 8, !dbg !11331
  call void @xhci_free_stream_info(%struct.xhci_hcd* %163, %struct.xhci_stream_info* %166) #11, !dbg !11332
  %167 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11333
  %eps181 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %167, i32 0, i32 3, !dbg !11334
  %168 = load i32, i32* %ep_index, align 4, !dbg !11335
  %idxprom182 = zext i32 %168 to i64, !dbg !11333
  %arrayidx183 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps181, i64 0, i64 %idxprom182, !dbg !11333
  %stream_info184 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx183, i32 0, i32 1, !dbg !11336
  store %struct.xhci_stream_info* null, %struct.xhci_stream_info** %stream_info184, align 8, !dbg !11337
  %169 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11338
  %eps185 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %169, i32 0, i32 3, !dbg !11339
  %170 = load i32, i32* %ep_index, align 4, !dbg !11340
  %idxprom186 = zext i32 %170 to i64, !dbg !11338
  %arrayidx187 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps185, i64 0, i64 %idxprom186, !dbg !11338
  %ep_state188 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx187, i32 0, i32 3, !dbg !11341
  %171 = load i32, i32* %ep_state188, align 8, !dbg !11342
  %and189 = and i32 %171, -9, !dbg !11342
  store i32 %and189, i32* %ep_state188, align 8, !dbg !11342
  %172 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11343
  %eps190 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %172, i32 0, i32 3, !dbg !11344
  %173 = load i32, i32* %ep_index, align 4, !dbg !11345
  %idxprom191 = zext i32 %173 to i64, !dbg !11343
  %arrayidx192 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps190, i64 0, i64 %idxprom191, !dbg !11343
  %ep_state193 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx192, i32 0, i32 3, !dbg !11346
  %174 = load i32, i32* %ep_state193, align 8, !dbg !11347
  %and194 = and i32 %174, -17, !dbg !11347
  store i32 %and194, i32* %ep_state193, align 8, !dbg !11347
  %175 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11348
  %176 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11349
  %177 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !11350
  %178 = load i32, i32* %i, align 4, !dbg !11351
  %idxprom195 = sext i32 %178 to i64, !dbg !11350
  %arrayidx196 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %177, i64 %idxprom195, !dbg !11350
  %179 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx196, align 8, !dbg !11350
  call void @xhci_endpoint_zero(%struct.xhci_hcd* %175, %struct.xhci_virt_device* %176, %struct.usb_host_endpoint* %179) #11, !dbg !11352
  br label %for.inc197, !dbg !11353

for.inc197:                                       ; preds = %for.body172
  %180 = load i32, i32* %i, align 4, !dbg !11354
  %inc198 = add i32 %180, 1, !dbg !11354
  store i32 %inc198, i32* %i, align 4, !dbg !11354
  br label %for.cond169, !dbg !11355, !llvm.loop !11356

for.end199:                                       ; preds = %for.cond169
  %181 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11358
  %182 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !11359
  call void @xhci_free_command(%struct.xhci_hcd* %181, %struct.xhci_command* %182) #11, !dbg !11360
  store i32 -12, i32* %retval, align 4, !dbg !11361
  br label %return, !dbg !11361

return:                                           ; preds = %for.end199, %for.end168, %if.then43, %if.then38, %if.then12, %if.then8, %if.then4, %if.then
  %183 = load i32, i32* %retval, align 4, !dbg !11362
  ret i32 %183, !dbg !11362
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_free_streams(%struct.usb_hcd* %hcd, %struct.usb_device* %udev, %struct.usb_host_endpoint** %eps, i32 %num_eps, i32 %mem_flags) #1 !dbg !11363 {
entry:
  %lock.addr.i134 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i134, metadata !6673, metadata !DIExpression()), !dbg !11364
  %lock.addr.i129 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i129, metadata !6665, metadata !DIExpression()), !dbg !11371
  %flags.addr.i130 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i130, metadata !6671, metadata !DIExpression()), !dbg !11373
  %tmp.i131 = alloca i32, align 4
  %tmp8.i132 = alloca i32, align 4
  %lock.addr.i124 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i124, metadata !6665, metadata !DIExpression()), !dbg !11374
  %flags.addr.i125 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i125, metadata !6671, metadata !DIExpression()), !dbg !11378
  %tmp.i126 = alloca i32, align 4
  %tmp8.i127 = alloca i32, align 4
  %lock.addr.i119 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i119, metadata !6665, metadata !DIExpression()), !dbg !11379
  %flags.addr.i120 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i120, metadata !6671, metadata !DIExpression()), !dbg !11383
  %tmp.i121 = alloca i32, align 4
  %tmp8.i122 = alloca i32, align 4
  %lock.addr.i117 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i117, metadata !6665, metadata !DIExpression()), !dbg !11384
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !11386
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !11387
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %eps.addr = alloca %struct.usb_host_endpoint**, align 8
  %num_eps.addr = alloca i32, align 4
  %mem_flags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %xhci = alloca %struct.xhci_hcd*, align 8
  %vdev = alloca %struct.xhci_virt_device*, align 8
  %command = alloca %struct.xhci_command*, align 8
  %ctrl_ctx = alloca %struct.xhci_input_control_ctx*, align 8
  %ep_index = alloca i32, align 4
  %flags = alloca i64, align 8
  %changed_ep_bitmask = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %ep_ctx = alloca %struct.xhci_ep_ctx*, align 8
  %__dummy63 = alloca i64, align 8
  %__dummy264 = alloca i64, align 8
  %tmp67 = alloca i32, align 4
  %__dummy71 = alloca i64, align 8
  %__dummy272 = alloca i64, align 8
  %tmp75 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !11394, metadata !DIExpression()), !dbg !11395
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !11396, metadata !DIExpression()), !dbg !11397
  store %struct.usb_host_endpoint** %eps, %struct.usb_host_endpoint*** %eps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint*** %eps.addr, metadata !11398, metadata !DIExpression()), !dbg !11399
  store i32 %num_eps, i32* %num_eps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_eps.addr, metadata !11400, metadata !DIExpression()), !dbg !11401
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !11402, metadata !DIExpression()), !dbg !11403
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11404, metadata !DIExpression()), !dbg !11405
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11406, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !11408, metadata !DIExpression()), !dbg !11409
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %vdev, metadata !11410, metadata !DIExpression()), !dbg !11411
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %command, metadata !11412, metadata !DIExpression()), !dbg !11413
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx, metadata !11414, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.declare(metadata i32* %ep_index, metadata !11416, metadata !DIExpression()), !dbg !11417
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11418, metadata !DIExpression()), !dbg !11419
  call void @llvm.dbg.declare(metadata i32* %changed_ep_bitmask, metadata !11420, metadata !DIExpression()), !dbg !11421
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !11422
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !11423
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !11424
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11425
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %1, i32 0, i32 41, !dbg !11426
  %2 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11427
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %2, i32 0, i32 44, !dbg !11428
  %3 = load i32, i32* %slot_id, align 8, !dbg !11428
  %idxprom = sext i32 %3 to i64, !dbg !11425
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !11425
  %4 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !11425
  store %struct.xhci_virt_device* %4, %struct.xhci_virt_device** %vdev, align 8, !dbg !11429
  br label %do.body, !dbg !11430

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11431

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11432, metadata !DIExpression()), !dbg !11434
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11435, metadata !DIExpression()), !dbg !11434
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11434
  %conv = zext i1 %cmp to i32, !dbg !11434
  store i32 1, i32* %tmp, align 4, !dbg !11434
  %5 = load i32, i32* %tmp, align 4, !dbg !11434
  br label %do.body2, !dbg !11436

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !11437

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !11438

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !11440, metadata !DIExpression()), !dbg !11443
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !11444, metadata !DIExpression()), !dbg !11443
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !11443
  %conv8 = zext i1 %cmp7 to i32, !dbg !11443
  store i32 1, i32* %tmp9, align 4, !dbg !11443
  %6 = load i32, i32* %tmp9, align 4, !dbg !11443
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !11445
  store i64 %call10, i64* %flags, align 8, !dbg !11445
  br label %do.end, !dbg !11445

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !11438

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !11437

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11446, !srcloc !11447
  br label %do.body13, !dbg !11446

do.body13:                                        ; preds = %do.body12
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11448
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 12, !dbg !11448
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11449
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !11450
  %rlock.i = bitcast %union.anon.2* %9 to %struct.raw_spinlock*, !dbg !11450
  br label %do.end15, !dbg !11448

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !11446

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !11437

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !11436

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !11431

do.end19:                                         ; preds = %do.end18
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11451
  %11 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11452
  %12 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !11453
  %13 = load i32, i32* %num_eps.addr, align 4, !dbg !11454
  %call20 = call i32 @xhci_calculate_no_streams_bitmask(%struct.xhci_hcd* %10, %struct.usb_device* %11, %struct.usb_host_endpoint** %12, i32 %13) #11, !dbg !11455
  store i32 %call20, i32* %changed_ep_bitmask, align 4, !dbg !11456
  %14 = load i32, i32* %changed_ep_bitmask, align 4, !dbg !11457
  %cmp21 = icmp eq i32 %14, 0, !dbg !11458
  br i1 %cmp21, label %if.then, label %if.end, !dbg !11459

if.then:                                          ; preds = %do.end19
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11460
  %lock23 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %15, i32 0, i32 12, !dbg !11461
  %16 = load i64, i64* %flags, align 8, !dbg !11462
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i119, align 8
  store i64 %16, i64* %flags.addr.i120, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !11463
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !11463
  store i32 1, i32* %tmp.i121, align 4, !dbg !11463
  %17 = load i32, i32* %tmp.i121, align 4, !dbg !11463
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !11464
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !11464
  store i32 1, i32* %tmp8.i122, align 4, !dbg !11464
  %18 = load i32, i32* %tmp8.i122, align 4, !dbg !11464
  %19 = load i64, i64* %flags.addr.i120, align 8, !dbg !11465
  call void @arch_local_irq_restore(i64 %19) #13, !dbg !11465
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11466, !srcloc !6814
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i119, align 8, !dbg !11467
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !11467
  %rlock.i123 = bitcast %union.anon.2* %21 to %struct.raw_spinlock*, !dbg !11467
  store i32 -22, i32* %retval, align 4, !dbg !11468
  br label %return, !dbg !11468

if.end:                                           ; preds = %do.end19
  %22 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !11469
  %arrayidx24 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %22, i64 0, !dbg !11469
  %23 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx24, align 8, !dbg !11469
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %23, i32 0, i32 0, !dbg !11470
  %call25 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !11471
  store i32 %call25, i32* %ep_index, align 4, !dbg !11472
  %24 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11473
  %eps26 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %24, i32 0, i32 3, !dbg !11474
  %25 = load i32, i32* %ep_index, align 4, !dbg !11475
  %idxprom27 = zext i32 %25 to i64, !dbg !11473
  %arrayidx28 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps26, i64 0, i64 %idxprom27, !dbg !11473
  %stream_info = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx28, i32 0, i32 1, !dbg !11476
  %26 = load %struct.xhci_stream_info*, %struct.xhci_stream_info** %stream_info, align 8, !dbg !11476
  %free_streams_command = getelementptr inbounds %struct.xhci_stream_info, %struct.xhci_stream_info* %26, i32 0, i32 6, !dbg !11477
  %27 = load %struct.xhci_command*, %struct.xhci_command** %free_streams_command, align 8, !dbg !11477
  store %struct.xhci_command* %27, %struct.xhci_command** %command, align 8, !dbg !11478
  %28 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !11479
  %in_ctx = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %28, i32 0, i32 0, !dbg !11480
  %29 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !11480
  %call29 = call %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx* %29) #11, !dbg !11481
  store %struct.xhci_input_control_ctx* %call29, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11482
  %30 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11483
  %tobool = icmp ne %struct.xhci_input_control_ctx* %30, null, !dbg !11483
  br i1 %tobool, label %if.end33, label %if.then30, !dbg !11484

if.then30:                                        ; preds = %if.end
  %31 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11485
  %lock31 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %31, i32 0, i32 12, !dbg !11486
  %32 = load i64, i64* %flags, align 8, !dbg !11487
  store %struct.spinlock* %lock31, %struct.spinlock** %lock.addr.i124, align 8
  store i64 %32, i64* %flags.addr.i125, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !11488
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !11488
  store i32 1, i32* %tmp.i126, align 4, !dbg !11488
  %33 = load i32, i32* %tmp.i126, align 4, !dbg !11488
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !11489
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !11489
  store i32 1, i32* %tmp8.i127, align 4, !dbg !11489
  %34 = load i32, i32* %tmp8.i127, align 4, !dbg !11489
  %35 = load i64, i64* %flags.addr.i125, align 8, !dbg !11490
  call void @arch_local_irq_restore(i64 %35) #13, !dbg !11490
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11491, !srcloc !6814
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i124, align 8, !dbg !11492
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !11492
  %rlock.i128 = bitcast %union.anon.2* %37 to %struct.raw_spinlock*, !dbg !11492
  %38 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11493
  %call32 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %38) #11, !dbg !11493
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call32, i32 0, i32 0, !dbg !11493
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !11493
  %39 = load %struct.device*, %struct.device** %controller, align 8, !dbg !11493
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %39, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.xhci_free_streams, i64 0, i64 0)) #12, !dbg !11493
  store i32 -22, i32* %retval, align 4, !dbg !11494
  br label %return, !dbg !11494

if.end33:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !11495
  br label %for.cond, !dbg !11497

for.cond:                                         ; preds = %for.inc, %if.end33
  %40 = load i32, i32* %i, align 4, !dbg !11498
  %41 = load i32, i32* %num_eps.addr, align 4, !dbg !11500
  %cmp34 = icmp ult i32 %40, %41, !dbg !11501
  br i1 %cmp34, label %for.body, label %for.end, !dbg !11502

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.xhci_ep_ctx** %ep_ctx, metadata !11503, metadata !DIExpression()), !dbg !11505
  %42 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !11506
  %43 = load i32, i32* %i, align 4, !dbg !11507
  %idxprom36 = sext i32 %43 to i64, !dbg !11506
  %arrayidx37 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %42, i64 %idxprom36, !dbg !11506
  %44 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx37, align 8, !dbg !11506
  %desc38 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %44, i32 0, i32 0, !dbg !11508
  %call39 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc38) #11, !dbg !11509
  store i32 %call39, i32* %ep_index, align 4, !dbg !11510
  %45 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11511
  %46 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !11512
  %in_ctx40 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %46, i32 0, i32 0, !dbg !11513
  %47 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx40, align 8, !dbg !11513
  %48 = load i32, i32* %ep_index, align 4, !dbg !11514
  %call41 = call %struct.xhci_ep_ctx* @xhci_get_ep_ctx(%struct.xhci_hcd* %45, %struct.xhci_container_ctx* %47, i32 %48) #11, !dbg !11515
  store %struct.xhci_ep_ctx* %call41, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !11516
  %49 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11517
  %devs42 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %49, i32 0, i32 41, !dbg !11518
  %50 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11519
  %slot_id43 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %50, i32 0, i32 44, !dbg !11520
  %51 = load i32, i32* %slot_id43, align 8, !dbg !11520
  %idxprom44 = sext i32 %51 to i64, !dbg !11517
  %arrayidx45 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs42, i64 0, i64 %idxprom44, !dbg !11517
  %52 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx45, align 8, !dbg !11517
  %eps46 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %52, i32 0, i32 3, !dbg !11521
  %53 = load i32, i32* %ep_index, align 4, !dbg !11522
  %idxprom47 = zext i32 %53 to i64, !dbg !11517
  %arrayidx48 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps46, i64 0, i64 %idxprom47, !dbg !11517
  %ep_state = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx48, i32 0, i32 3, !dbg !11523
  %54 = load i32, i32* %ep_state, align 8, !dbg !11524
  %or = or i32 %54, 32, !dbg !11524
  store i32 %or, i32* %ep_state, align 8, !dbg !11524
  %55 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11525
  %56 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !11526
  %in_ctx49 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %56, i32 0, i32 0, !dbg !11527
  %57 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx49, align 8, !dbg !11527
  %58 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11528
  %out_ctx = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %58, i32 0, i32 1, !dbg !11529
  %59 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx, align 8, !dbg !11529
  %60 = load i32, i32* %ep_index, align 4, !dbg !11530
  call void @xhci_endpoint_copy(%struct.xhci_hcd* %55, %struct.xhci_container_ctx* %57, %struct.xhci_container_ctx* %59, i32 %60) #11, !dbg !11531
  %61 = load %struct.xhci_ep_ctx*, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !11532
  %62 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11533
  %eps50 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %62, i32 0, i32 3, !dbg !11534
  %63 = load i32, i32* %ep_index, align 4, !dbg !11535
  %idxprom51 = zext i32 %63 to i64, !dbg !11533
  %arrayidx52 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps50, i64 0, i64 %idxprom51, !dbg !11533
  call void @xhci_setup_no_streams_ep_input_ctx(%struct.xhci_ep_ctx* %61, %struct.xhci_virt_ep* %arrayidx52) #11, !dbg !11536
  br label %for.inc, !dbg !11537

for.inc:                                          ; preds = %for.body
  %64 = load i32, i32* %i, align 4, !dbg !11538
  %inc = add i32 %64, 1, !dbg !11538
  store i32 %inc, i32* %i, align 4, !dbg !11538
  br label %for.cond, !dbg !11539, !llvm.loop !11540

for.end:                                          ; preds = %for.cond
  %65 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11542
  %66 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !11543
  %in_ctx53 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %66, i32 0, i32 0, !dbg !11544
  %67 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx53, align 8, !dbg !11544
  %68 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11545
  %out_ctx54 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %68, i32 0, i32 1, !dbg !11546
  %69 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx54, align 8, !dbg !11546
  %70 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11547
  %71 = load i32, i32* %changed_ep_bitmask, align 4, !dbg !11548
  %72 = load i32, i32* %changed_ep_bitmask, align 4, !dbg !11549
  call void @xhci_setup_input_ctx_for_config_ep(%struct.xhci_hcd* %65, %struct.xhci_container_ctx* %67, %struct.xhci_container_ctx* %69, %struct.xhci_input_control_ctx* %70, i32 %71, i32 %72) #11, !dbg !11550
  %73 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11551
  %lock55 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %73, i32 0, i32 12, !dbg !11552
  %74 = load i64, i64* %flags, align 8, !dbg !11553
  store %struct.spinlock* %lock55, %struct.spinlock** %lock.addr.i129, align 8
  store i64 %74, i64* %flags.addr.i130, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !11554
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !11554
  store i32 1, i32* %tmp.i131, align 4, !dbg !11554
  %75 = load i32, i32* %tmp.i131, align 4, !dbg !11554
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !11555
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !11555
  store i32 1, i32* %tmp8.i132, align 4, !dbg !11555
  %76 = load i32, i32* %tmp8.i132, align 4, !dbg !11555
  %77 = load i64, i64* %flags.addr.i130, align 8, !dbg !11556
  call void @arch_local_irq_restore(i64 %77) #13, !dbg !11556
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11557, !srcloc !6814
  %78 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i129, align 8, !dbg !11558
  %79 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %78, i32 0, i32 0, !dbg !11558
  %rlock.i133 = bitcast %union.anon.2* %79 to %struct.raw_spinlock*, !dbg !11558
  %80 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11559
  %81 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11560
  %82 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !11561
  %call56 = call i32 @xhci_configure_endpoint(%struct.xhci_hcd* %80, %struct.usb_device* %81, %struct.xhci_command* %82, i1 zeroext false, i1 zeroext true) #11, !dbg !11562
  store i32 %call56, i32* %ret, align 4, !dbg !11563
  %83 = load i32, i32* %ret, align 4, !dbg !11564
  %cmp57 = icmp slt i32 %83, 0, !dbg !11566
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !11567

if.then59:                                        ; preds = %for.end
  %84 = load i32, i32* %ret, align 4, !dbg !11568
  store i32 %84, i32* %retval, align 4, !dbg !11569
  br label %return, !dbg !11569

if.end60:                                         ; preds = %for.end
  br label %do.body61, !dbg !11570

do.body61:                                        ; preds = %if.end60
  br label %do.body62, !dbg !11571

do.body62:                                        ; preds = %do.body61
  call void @llvm.dbg.declare(metadata i64* %__dummy63, metadata !11572, metadata !DIExpression()), !dbg !11574
  call void @llvm.dbg.declare(metadata i64* %__dummy264, metadata !11575, metadata !DIExpression()), !dbg !11574
  %cmp65 = icmp eq i64* %__dummy63, %__dummy264, !dbg !11574
  %conv66 = zext i1 %cmp65 to i32, !dbg !11574
  store i32 1, i32* %tmp67, align 4, !dbg !11574
  %85 = load i32, i32* %tmp67, align 4, !dbg !11574
  br label %do.body68, !dbg !11576

do.body68:                                        ; preds = %do.body62
  br label %do.body69, !dbg !11577

do.body69:                                        ; preds = %do.body68
  br label %do.body70, !dbg !11578

do.body70:                                        ; preds = %do.body69
  call void @llvm.dbg.declare(metadata i64* %__dummy71, metadata !11580, metadata !DIExpression()), !dbg !11583
  call void @llvm.dbg.declare(metadata i64* %__dummy272, metadata !11584, metadata !DIExpression()), !dbg !11583
  %cmp73 = icmp eq i64* %__dummy71, %__dummy272, !dbg !11583
  %conv74 = zext i1 %cmp73 to i32, !dbg !11583
  store i32 1, i32* %tmp75, align 4, !dbg !11583
  %86 = load i32, i32* %tmp75, align 4, !dbg !11583
  %call76 = call i64 @arch_local_irq_save() #11, !dbg !11585
  store i64 %call76, i64* %flags, align 8, !dbg !11585
  br label %do.end77, !dbg !11585

do.end77:                                         ; preds = %do.body70
  br label %do.end78, !dbg !11578

do.end78:                                         ; preds = %do.end77
  br label %do.body79, !dbg !11577

do.body79:                                        ; preds = %do.end78
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11586, !srcloc !11587
  br label %do.body80, !dbg !11586

do.body80:                                        ; preds = %do.body79
  %87 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11588
  %lock81 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %87, i32 0, i32 12, !dbg !11588
  store %struct.spinlock* %lock81, %struct.spinlock** %lock.addr.i134, align 8
  %88 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i134, align 8, !dbg !11589
  %89 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %88, i32 0, i32 0, !dbg !11590
  %rlock.i135 = bitcast %union.anon.2* %89 to %struct.raw_spinlock*, !dbg !11590
  br label %do.end83, !dbg !11588

do.end83:                                         ; preds = %do.body80
  br label %do.end84, !dbg !11586

do.end84:                                         ; preds = %do.end83
  br label %do.end85, !dbg !11577

do.end85:                                         ; preds = %do.end84
  br label %do.end86, !dbg !11576

do.end86:                                         ; preds = %do.end85
  br label %do.end87, !dbg !11571

do.end87:                                         ; preds = %do.end86
  store i32 0, i32* %i, align 4, !dbg !11591
  br label %for.cond88, !dbg !11593

for.cond88:                                       ; preds = %for.inc113, %do.end87
  %90 = load i32, i32* %i, align 4, !dbg !11594
  %91 = load i32, i32* %num_eps.addr, align 4, !dbg !11596
  %cmp89 = icmp ult i32 %90, %91, !dbg !11597
  br i1 %cmp89, label %for.body91, label %for.end115, !dbg !11598

for.body91:                                       ; preds = %for.cond88
  %92 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !11599
  %93 = load i32, i32* %i, align 4, !dbg !11601
  %idxprom92 = sext i32 %93 to i64, !dbg !11599
  %arrayidx93 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %92, i64 %idxprom92, !dbg !11599
  %94 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx93, align 8, !dbg !11599
  %desc94 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %94, i32 0, i32 0, !dbg !11602
  %call95 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc94) #11, !dbg !11603
  store i32 %call95, i32* %ep_index, align 4, !dbg !11604
  %95 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11605
  %96 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11606
  %eps96 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %96, i32 0, i32 3, !dbg !11607
  %97 = load i32, i32* %ep_index, align 4, !dbg !11608
  %idxprom97 = zext i32 %97 to i64, !dbg !11606
  %arrayidx98 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps96, i64 0, i64 %idxprom97, !dbg !11606
  %stream_info99 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx98, i32 0, i32 1, !dbg !11609
  %98 = load %struct.xhci_stream_info*, %struct.xhci_stream_info** %stream_info99, align 8, !dbg !11609
  call void @xhci_free_stream_info(%struct.xhci_hcd* %95, %struct.xhci_stream_info* %98) #11, !dbg !11610
  %99 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11611
  %eps100 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %99, i32 0, i32 3, !dbg !11612
  %100 = load i32, i32* %ep_index, align 4, !dbg !11613
  %idxprom101 = zext i32 %100 to i64, !dbg !11611
  %arrayidx102 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps100, i64 0, i64 %idxprom101, !dbg !11611
  %stream_info103 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx102, i32 0, i32 1, !dbg !11614
  store %struct.xhci_stream_info* null, %struct.xhci_stream_info** %stream_info103, align 8, !dbg !11615
  %101 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11616
  %eps104 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %101, i32 0, i32 3, !dbg !11617
  %102 = load i32, i32* %ep_index, align 4, !dbg !11618
  %idxprom105 = zext i32 %102 to i64, !dbg !11616
  %arrayidx106 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps104, i64 0, i64 %idxprom105, !dbg !11616
  %ep_state107 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx106, i32 0, i32 3, !dbg !11619
  %103 = load i32, i32* %ep_state107, align 8, !dbg !11620
  %and = and i32 %103, -33, !dbg !11620
  store i32 %and, i32* %ep_state107, align 8, !dbg !11620
  %104 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !11621
  %eps108 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %104, i32 0, i32 3, !dbg !11622
  %105 = load i32, i32* %ep_index, align 4, !dbg !11623
  %idxprom109 = zext i32 %105 to i64, !dbg !11621
  %arrayidx110 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps108, i64 0, i64 %idxprom109, !dbg !11621
  %ep_state111 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx110, i32 0, i32 3, !dbg !11624
  %106 = load i32, i32* %ep_state111, align 8, !dbg !11625
  %and112 = and i32 %106, -17, !dbg !11625
  store i32 %and112, i32* %ep_state111, align 8, !dbg !11625
  br label %for.inc113, !dbg !11626

for.inc113:                                       ; preds = %for.body91
  %107 = load i32, i32* %i, align 4, !dbg !11627
  %inc114 = add i32 %107, 1, !dbg !11627
  store i32 %inc114, i32* %i, align 4, !dbg !11627
  br label %for.cond88, !dbg !11628, !llvm.loop !11629

for.end115:                                       ; preds = %for.cond88
  %108 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11631
  %lock116 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %108, i32 0, i32 12, !dbg !11632
  %109 = load i64, i64* %flags, align 8, !dbg !11633
  store %struct.spinlock* %lock116, %struct.spinlock** %lock.addr.i117, align 8
  store i64 %109, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !11634
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !11634
  store i32 1, i32* %tmp.i, align 4, !dbg !11634
  %110 = load i32, i32* %tmp.i, align 4, !dbg !11634
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !11635
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !11635
  store i32 1, i32* %tmp8.i, align 4, !dbg !11635
  %111 = load i32, i32* %tmp8.i, align 4, !dbg !11635
  %112 = load i64, i64* %flags.addr.i, align 8, !dbg !11636
  call void @arch_local_irq_restore(i64 %112) #13, !dbg !11636
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11637, !srcloc !6814
  %113 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i117, align 8, !dbg !11638
  %114 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %113, i32 0, i32 0, !dbg !11638
  %rlock.i118 = bitcast %union.anon.2* %114 to %struct.raw_spinlock*, !dbg !11638
  store i32 0, i32* %retval, align 4, !dbg !11639
  br label %return, !dbg !11639

return:                                           ; preds = %for.end115, %if.then59, %if.then30, %if.then
  %115 = load i32, i32* %retval, align 4, !dbg !11640
  ret i32 %115, !dbg !11640
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_add_endpoint(%struct.usb_hcd* %hcd, %struct.usb_device* %udev, %struct.usb_host_endpoint* %ep) #1 !dbg !11641 {
entry:
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %ep.addr = alloca %struct.usb_host_endpoint*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %in_ctx = alloca %struct.xhci_container_ctx*, align 8
  %ep_index = alloca i32, align 4
  %ctrl_ctx = alloca %struct.xhci_input_control_ctx*, align 8
  %ep_ctx = alloca %struct.xhci_ep_ctx*, align 8
  %added_ctxs = alloca i32, align 4
  %new_add_flags = alloca i32, align 4
  %new_drop_flags = alloca i32, align 4
  %virt_dev = alloca %struct.xhci_virt_device*, align 8
  %ret = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !11642, metadata !DIExpression()), !dbg !11643
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !11644, metadata !DIExpression()), !dbg !11645
  store %struct.usb_host_endpoint* %ep, %struct.usb_host_endpoint** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep.addr, metadata !11646, metadata !DIExpression()), !dbg !11647
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !11648, metadata !DIExpression()), !dbg !11649
  call void @llvm.dbg.declare(metadata %struct.xhci_container_ctx** %in_ctx, metadata !11650, metadata !DIExpression()), !dbg !11651
  call void @llvm.dbg.declare(metadata i32* %ep_index, metadata !11652, metadata !DIExpression()), !dbg !11653
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx, metadata !11654, metadata !DIExpression()), !dbg !11655
  call void @llvm.dbg.declare(metadata %struct.xhci_ep_ctx** %ep_ctx, metadata !11656, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.declare(metadata i32* %added_ctxs, metadata !11658, metadata !DIExpression()), !dbg !11659
  call void @llvm.dbg.declare(metadata i32* %new_add_flags, metadata !11660, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.declare(metadata i32* %new_drop_flags, metadata !11662, metadata !DIExpression()), !dbg !11663
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev, metadata !11664, metadata !DIExpression()), !dbg !11665
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11666, metadata !DIExpression()), !dbg !11667
  store i32 0, i32* %ret, align 4, !dbg !11667
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !11668
  %1 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11669
  %2 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11670
  %call = call i32 @xhci_check_args(%struct.usb_hcd* %0, %struct.usb_device* %1, %struct.usb_host_endpoint* %2, i32 1, i1 zeroext true, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.xhci_add_endpoint, i64 0, i64 0)) #11, !dbg !11671
  store i32 %call, i32* %ret, align 4, !dbg !11672
  %3 = load i32, i32* %ret, align 4, !dbg !11673
  %cmp = icmp sle i32 %3, 0, !dbg !11675
  br i1 %cmp, label %if.then, label %if.end, !dbg !11676

if.then:                                          ; preds = %entry
  %4 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11677
  %hcpriv = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %4, i32 0, i32 5, !dbg !11679
  store i8* null, i8** %hcpriv, align 8, !dbg !11680
  %5 = load i32, i32* %ret, align 4, !dbg !11681
  store i32 %5, i32* %retval, align 4, !dbg !11682
  br label %return, !dbg !11682

if.end:                                           ; preds = %entry
  %6 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !11683
  %call1 = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %6) #11, !dbg !11684
  store %struct.xhci_hcd* %call1, %struct.xhci_hcd** %xhci, align 8, !dbg !11685
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11686
  %xhc_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 47, !dbg !11688
  %8 = load i32, i32* %xhc_state, align 8, !dbg !11688
  %and = and i32 %8, 1, !dbg !11689
  %tobool = icmp ne i32 %and, 0, !dbg !11689
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !11690

if.then2:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !11691
  br label %return, !dbg !11691

if.end3:                                          ; preds = %if.end
  %9 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11692
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %9, i32 0, i32 0, !dbg !11693
  %call4 = call i32 @xhci_get_endpoint_flag(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !11694
  store i32 %call4, i32* %added_ctxs, align 4, !dbg !11695
  %10 = load i32, i32* %added_ctxs, align 4, !dbg !11696
  %cmp5 = icmp eq i32 %10, 1, !dbg !11698
  br i1 %cmp5, label %if.then7, label %lor.lhs.false, !dbg !11699

lor.lhs.false:                                    ; preds = %if.end3
  %11 = load i32, i32* %added_ctxs, align 4, !dbg !11700
  %cmp6 = icmp eq i32 %11, 2, !dbg !11701
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11702

if.then7:                                         ; preds = %lor.lhs.false, %if.end3
  store i32 0, i32* %retval, align 4, !dbg !11703
  br label %return, !dbg !11703

if.end8:                                          ; preds = %lor.lhs.false
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11705
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %12, i32 0, i32 41, !dbg !11706
  %13 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11707
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %13, i32 0, i32 44, !dbg !11708
  %14 = load i32, i32* %slot_id, align 8, !dbg !11708
  %idxprom = sext i32 %14 to i64, !dbg !11705
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !11705
  %15 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !11705
  store %struct.xhci_virt_device* %15, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !11709
  %16 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !11710
  %in_ctx9 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %16, i32 0, i32 2, !dbg !11711
  %17 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx9, align 8, !dbg !11711
  store %struct.xhci_container_ctx* %17, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !11712
  %18 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !11713
  %call10 = call %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx* %18) #11, !dbg !11714
  store %struct.xhci_input_control_ctx* %call10, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11715
  %19 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11716
  %tobool11 = icmp ne %struct.xhci_input_control_ctx* %19, null, !dbg !11716
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !11718

if.then12:                                        ; preds = %if.end8
  %20 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11719
  %call13 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %20) #11, !dbg !11719
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call13, i32 0, i32 0, !dbg !11719
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !11719
  %21 = load %struct.device*, %struct.device** %controller, align 8, !dbg !11719
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %21, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.xhci_add_endpoint, i64 0, i64 0)) #12, !dbg !11719
  store i32 0, i32* %retval, align 4, !dbg !11721
  br label %return, !dbg !11721

if.end14:                                         ; preds = %if.end8
  %22 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11722
  %desc15 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %22, i32 0, i32 0, !dbg !11723
  %call16 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc15) #11, !dbg !11724
  store i32 %call16, i32* %ep_index, align 4, !dbg !11725
  %23 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !11726
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %23, i32 0, i32 3, !dbg !11728
  %24 = load i32, i32* %ep_index, align 4, !dbg !11729
  %idxprom17 = zext i32 %24 to i64, !dbg !11726
  %arrayidx18 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom17, !dbg !11726
  %ring = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx18, i32 0, i32 0, !dbg !11730
  %25 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !11730
  %tobool19 = icmp ne %struct.xhci_ring* %25, null, !dbg !11726
  br i1 %tobool19, label %land.lhs.true, label %if.end27, !dbg !11731

land.lhs.true:                                    ; preds = %if.end14
  %26 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11732
  %drop_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %26, i32 0, i32 0, !dbg !11732
  %27 = load i32, i32* %drop_flags, align 4, !dbg !11732
  %28 = load i32, i32* %added_ctxs, align 4, !dbg !11733
  %and20 = and i32 %27, %28, !dbg !11734
  %tobool21 = icmp ne i32 %and20, 0, !dbg !11734
  br i1 %tobool21, label %if.end27, label %if.then22, !dbg !11735

if.then22:                                        ; preds = %land.lhs.true
  %29 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11736
  %call23 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %29) #11, !dbg !11736
  %self24 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call23, i32 0, i32 0, !dbg !11736
  %controller25 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self24, i32 0, i32 0, !dbg !11736
  %30 = load %struct.device*, %struct.device** %controller25, align 8, !dbg !11736
  %31 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11736
  %desc26 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %31, i32 0, i32 0, !dbg !11736
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc26, i32 0, i32 2, !dbg !11736
  %32 = load i8, i8* %bEndpointAddress, align 2, !dbg !11736
  %conv = zext i8 %32 to i32, !dbg !11736
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %30, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.113, i64 0, i64 0), i32 %conv) #12, !dbg !11736
  store i32 -22, i32* %retval, align 4, !dbg !11738
  br label %return, !dbg !11738

if.end27:                                         ; preds = %land.lhs.true, %if.end14
  %33 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11739
  %add_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %33, i32 0, i32 1, !dbg !11739
  %34 = load i32, i32* %add_flags, align 4, !dbg !11739
  %35 = load i32, i32* %added_ctxs, align 4, !dbg !11741
  %and28 = and i32 %34, %35, !dbg !11742
  %tobool29 = icmp ne i32 %and28, 0, !dbg !11742
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !11743

if.then30:                                        ; preds = %if.end27
  %36 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11744
  %call31 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %36) #11, !dbg !11744
  %self32 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call31, i32 0, i32 0, !dbg !11744
  %controller33 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self32, i32 0, i32 0, !dbg !11744
  %37 = load %struct.device*, %struct.device** %controller33, align 8, !dbg !11744
  %38 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11744
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %37, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.xhci_add_endpoint, i64 0, i64 0), %struct.usb_host_endpoint* %38) #12, !dbg !11744
  store i32 0, i32* %retval, align 4, !dbg !11746
  br label %return, !dbg !11746

if.end34:                                         ; preds = %if.end27
  %39 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11747
  %40 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !11749
  %41 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11750
  %42 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11751
  %call35 = call i32 @xhci_endpoint_init(%struct.xhci_hcd* %39, %struct.xhci_virt_device* %40, %struct.usb_device* %41, %struct.usb_host_endpoint* %42, i32 3072) #11, !dbg !11752
  %cmp36 = icmp slt i32 %call35, 0, !dbg !11753
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !11754

if.then38:                                        ; preds = %if.end34
  store i32 -12, i32* %retval, align 4, !dbg !11755
  br label %return, !dbg !11755

if.end39:                                         ; preds = %if.end34
  %43 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11757
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %43, i32 0, i32 50, !dbg !11759
  %44 = load i64, i64* %quirks, align 8, !dbg !11759
  %and40 = and i64 %44, 2097152, !dbg !11760
  %tobool41 = icmp ne i64 %and40, 0, !dbg !11760
  br i1 %tobool41, label %if.then42, label %if.end55, !dbg !11761

if.then42:                                        ; preds = %if.end39
  %45 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !11762
  %46 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11764
  %47 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11765
  %call43 = call i32 @xhci_mtk_add_ep_quirk(%struct.usb_hcd* %45, %struct.usb_device* %46, %struct.usb_host_endpoint* %47) #11, !dbg !11766
  store i32 %call43, i32* %ret, align 4, !dbg !11767
  %48 = load i32, i32* %ret, align 4, !dbg !11768
  %cmp44 = icmp slt i32 %48, 0, !dbg !11770
  br i1 %cmp44, label %if.then46, label %if.end54, !dbg !11771

if.then46:                                        ; preds = %if.then42
  %49 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11772
  %50 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !11774
  %eps47 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %50, i32 0, i32 3, !dbg !11775
  %51 = load i32, i32* %ep_index, align 4, !dbg !11776
  %idxprom48 = zext i32 %51 to i64, !dbg !11774
  %arrayidx49 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps47, i64 0, i64 %idxprom48, !dbg !11774
  %new_ring = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx49, i32 0, i32 2, !dbg !11777
  %52 = load %struct.xhci_ring*, %struct.xhci_ring** %new_ring, align 8, !dbg !11777
  call void @xhci_ring_free(%struct.xhci_hcd* %49, %struct.xhci_ring* %52) #11, !dbg !11778
  %53 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !11779
  %eps50 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %53, i32 0, i32 3, !dbg !11780
  %54 = load i32, i32* %ep_index, align 4, !dbg !11781
  %idxprom51 = zext i32 %54 to i64, !dbg !11779
  %arrayidx52 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps50, i64 0, i64 %idxprom51, !dbg !11779
  %new_ring53 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx52, i32 0, i32 2, !dbg !11782
  store %struct.xhci_ring* null, %struct.xhci_ring** %new_ring53, align 8, !dbg !11783
  %55 = load i32, i32* %ret, align 4, !dbg !11784
  store i32 %55, i32* %retval, align 4, !dbg !11785
  br label %return, !dbg !11785

if.end54:                                         ; preds = %if.then42
  br label %if.end55, !dbg !11786

if.end55:                                         ; preds = %if.end54, %if.end39
  %56 = load i32, i32* %added_ctxs, align 4, !dbg !11787
  %57 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11788
  %add_flags56 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %57, i32 0, i32 1, !dbg !11789
  %58 = load i32, i32* %add_flags56, align 4, !dbg !11790
  %or = or i32 %58, %56, !dbg !11790
  store i32 %or, i32* %add_flags56, align 4, !dbg !11790
  %59 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11791
  %add_flags57 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %59, i32 0, i32 1, !dbg !11791
  %60 = load i32, i32* %add_flags57, align 4, !dbg !11791
  store i32 %60, i32* %new_add_flags, align 4, !dbg !11792
  %61 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11793
  %drop_flags58 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %61, i32 0, i32 0, !dbg !11793
  %62 = load i32, i32* %drop_flags58, align 4, !dbg !11793
  store i32 %62, i32* %new_drop_flags, align 4, !dbg !11794
  %63 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11795
  %64 = bitcast %struct.usb_device* %63 to i8*, !dbg !11795
  %65 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11796
  %hcpriv59 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %65, i32 0, i32 5, !dbg !11797
  store i8* %64, i8** %hcpriv59, align 8, !dbg !11798
  %66 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11799
  %67 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !11800
  %in_ctx60 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %67, i32 0, i32 2, !dbg !11801
  %68 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx60, align 8, !dbg !11801
  %69 = load i32, i32* %ep_index, align 4, !dbg !11802
  %call61 = call %struct.xhci_ep_ctx* @xhci_get_ep_ctx(%struct.xhci_hcd* %66, %struct.xhci_container_ctx* %68, i32 %69) #11, !dbg !11803
  store %struct.xhci_ep_ctx* %call61, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !11804
  %70 = load %struct.xhci_ep_ctx*, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !11805
  call void @trace_xhci_add_endpoint(%struct.xhci_ep_ctx* %70) #11, !dbg !11806
  store i32 0, i32* %retval, align 4, !dbg !11807
  br label %return, !dbg !11807

return:                                           ; preds = %if.end55, %if.then46, %if.then38, %if.then30, %if.then22, %if.then12, %if.then7, %if.then2, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !11808
  ret i32 %71, !dbg !11808
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_drop_endpoint(%struct.usb_hcd* %hcd, %struct.usb_device* %udev, %struct.usb_host_endpoint* %ep) #1 !dbg !11809 {
entry:
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %ep.addr = alloca %struct.usb_host_endpoint*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %in_ctx = alloca %struct.xhci_container_ctx*, align 8
  %out_ctx = alloca %struct.xhci_container_ctx*, align 8
  %ctrl_ctx = alloca %struct.xhci_input_control_ctx*, align 8
  %ep_index = alloca i32, align 4
  %ep_ctx = alloca %struct.xhci_ep_ctx*, align 8
  %drop_flag = alloca i32, align 4
  %new_add_flags = alloca i32, align 4
  %new_drop_flags = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !11810, metadata !DIExpression()), !dbg !11811
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !11812, metadata !DIExpression()), !dbg !11813
  store %struct.usb_host_endpoint* %ep, %struct.usb_host_endpoint** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep.addr, metadata !11814, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !11816, metadata !DIExpression()), !dbg !11817
  call void @llvm.dbg.declare(metadata %struct.xhci_container_ctx** %in_ctx, metadata !11818, metadata !DIExpression()), !dbg !11819
  call void @llvm.dbg.declare(metadata %struct.xhci_container_ctx** %out_ctx, metadata !11820, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx, metadata !11822, metadata !DIExpression()), !dbg !11823
  call void @llvm.dbg.declare(metadata i32* %ep_index, metadata !11824, metadata !DIExpression()), !dbg !11825
  call void @llvm.dbg.declare(metadata %struct.xhci_ep_ctx** %ep_ctx, metadata !11826, metadata !DIExpression()), !dbg !11827
  call void @llvm.dbg.declare(metadata i32* %drop_flag, metadata !11828, metadata !DIExpression()), !dbg !11829
  call void @llvm.dbg.declare(metadata i32* %new_add_flags, metadata !11830, metadata !DIExpression()), !dbg !11831
  call void @llvm.dbg.declare(metadata i32* %new_drop_flags, metadata !11832, metadata !DIExpression()), !dbg !11833
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11834, metadata !DIExpression()), !dbg !11835
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !11836
  %1 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11837
  %2 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11838
  %call = call i32 @xhci_check_args(%struct.usb_hcd* %0, %struct.usb_device* %1, %struct.usb_host_endpoint* %2, i32 1, i1 zeroext true, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.xhci_drop_endpoint, i64 0, i64 0)) #11, !dbg !11839
  store i32 %call, i32* %ret, align 4, !dbg !11840
  %3 = load i32, i32* %ret, align 4, !dbg !11841
  %cmp = icmp sle i32 %3, 0, !dbg !11843
  br i1 %cmp, label %if.then, label %if.end, !dbg !11844

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !11845
  store i32 %4, i32* %retval, align 4, !dbg !11846
  br label %return, !dbg !11846

if.end:                                           ; preds = %entry
  %5 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !11847
  %call1 = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %5) #11, !dbg !11848
  store %struct.xhci_hcd* %call1, %struct.xhci_hcd** %xhci, align 8, !dbg !11849
  %6 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11850
  %xhc_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %6, i32 0, i32 47, !dbg !11852
  %7 = load i32, i32* %xhc_state, align 8, !dbg !11852
  %and = and i32 %7, 1, !dbg !11853
  %tobool = icmp ne i32 %and, 0, !dbg !11853
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !11854

if.then2:                                         ; preds = %if.end
  store i32 -19, i32* %retval, align 4, !dbg !11855
  br label %return, !dbg !11855

if.end3:                                          ; preds = %if.end
  %8 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11856
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %8, i32 0, i32 0, !dbg !11857
  %call4 = call i32 @xhci_get_endpoint_flag(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !11858
  store i32 %call4, i32* %drop_flag, align 4, !dbg !11859
  %9 = load i32, i32* %drop_flag, align 4, !dbg !11860
  %cmp5 = icmp eq i32 %9, 1, !dbg !11862
  br i1 %cmp5, label %if.then7, label %lor.lhs.false, !dbg !11863

lor.lhs.false:                                    ; preds = %if.end3
  %10 = load i32, i32* %drop_flag, align 4, !dbg !11864
  %cmp6 = icmp eq i32 %10, 2, !dbg !11865
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11866

if.then7:                                         ; preds = %lor.lhs.false, %if.end3
  store i32 0, i32* %retval, align 4, !dbg !11867
  br label %return, !dbg !11867

if.end8:                                          ; preds = %lor.lhs.false
  %11 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11869
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %11, i32 0, i32 41, !dbg !11870
  %12 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11871
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 44, !dbg !11872
  %13 = load i32, i32* %slot_id, align 8, !dbg !11872
  %idxprom = sext i32 %13 to i64, !dbg !11869
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !11869
  %14 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !11869
  %in_ctx9 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %14, i32 0, i32 2, !dbg !11873
  %15 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx9, align 8, !dbg !11873
  store %struct.xhci_container_ctx* %15, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !11874
  %16 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11875
  %devs10 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %16, i32 0, i32 41, !dbg !11876
  %17 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11877
  %slot_id11 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %17, i32 0, i32 44, !dbg !11878
  %18 = load i32, i32* %slot_id11, align 8, !dbg !11878
  %idxprom12 = sext i32 %18 to i64, !dbg !11875
  %arrayidx13 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs10, i64 0, i64 %idxprom12, !dbg !11875
  %19 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx13, align 8, !dbg !11875
  %out_ctx14 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %19, i32 0, i32 1, !dbg !11879
  %20 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx14, align 8, !dbg !11879
  store %struct.xhci_container_ctx* %20, %struct.xhci_container_ctx** %out_ctx, align 8, !dbg !11880
  %21 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !11881
  %call15 = call %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx* %21) #11, !dbg !11882
  store %struct.xhci_input_control_ctx* %call15, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11883
  %22 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11884
  %tobool16 = icmp ne %struct.xhci_input_control_ctx* %22, null, !dbg !11884
  br i1 %tobool16, label %if.end19, label %if.then17, !dbg !11886

if.then17:                                        ; preds = %if.end8
  %23 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11887
  %call18 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %23) #11, !dbg !11887
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call18, i32 0, i32 0, !dbg !11887
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !11887
  %24 = load %struct.device*, %struct.device** %controller, align 8, !dbg !11887
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %24, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.xhci_drop_endpoint, i64 0, i64 0)) #12, !dbg !11887
  store i32 0, i32* %retval, align 4, !dbg !11889
  br label %return, !dbg !11889

if.end19:                                         ; preds = %if.end8
  %25 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11890
  %desc20 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %25, i32 0, i32 0, !dbg !11891
  %call21 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc20) #11, !dbg !11892
  store i32 %call21, i32* %ep_index, align 4, !dbg !11893
  %26 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11894
  %27 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx, align 8, !dbg !11895
  %28 = load i32, i32* %ep_index, align 4, !dbg !11896
  %call22 = call %struct.xhci_ep_ctx* @xhci_get_ep_ctx(%struct.xhci_hcd* %26, %struct.xhci_container_ctx* %27, i32 %28) #11, !dbg !11897
  store %struct.xhci_ep_ctx* %call22, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !11898
  %29 = load %struct.xhci_ep_ctx*, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !11899
  %ep_info = getelementptr inbounds %struct.xhci_ep_ctx, %struct.xhci_ep_ctx* %29, i32 0, i32 0, !dbg !11899
  %30 = load i32, i32* %ep_info, align 8, !dbg !11899
  %and23 = and i32 %30, 7, !dbg !11899
  %cmp24 = icmp eq i32 %and23, 0, !dbg !11901
  br i1 %cmp24, label %if.then30, label %lor.lhs.false25, !dbg !11902

lor.lhs.false25:                                  ; preds = %if.end19
  %31 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11903
  %drop_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %31, i32 0, i32 0, !dbg !11903
  %32 = load i32, i32* %drop_flags, align 4, !dbg !11903
  %33 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11904
  %desc26 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %33, i32 0, i32 0, !dbg !11905
  %call27 = call i32 @xhci_get_endpoint_flag(%struct.usb_endpoint_descriptor* %desc26) #11, !dbg !11906
  %and28 = and i32 %32, %call27, !dbg !11907
  %tobool29 = icmp ne i32 %and28, 0, !dbg !11907
  br i1 %tobool29, label %if.then30, label %if.end43, !dbg !11908

if.then30:                                        ; preds = %lor.lhs.false25, %if.end19
  %34 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11909
  %devs31 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %34, i32 0, i32 41, !dbg !11912
  %35 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11913
  %slot_id32 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %35, i32 0, i32 44, !dbg !11914
  %36 = load i32, i32* %slot_id32, align 8, !dbg !11914
  %idxprom33 = sext i32 %36 to i64, !dbg !11909
  %arrayidx34 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs31, i64 0, i64 %idxprom33, !dbg !11909
  %37 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx34, align 8, !dbg !11909
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %37, i32 0, i32 3, !dbg !11915
  %38 = load i32, i32* %ep_index, align 4, !dbg !11916
  %idxprom35 = zext i32 %38 to i64, !dbg !11909
  %arrayidx36 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom35, !dbg !11909
  %ring = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx36, i32 0, i32 0, !dbg !11917
  %39 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !11917
  %cmp37 = icmp ne %struct.xhci_ring* %39, null, !dbg !11918
  br i1 %cmp37, label %if.then38, label %if.end42, !dbg !11919

if.then38:                                        ; preds = %if.then30
  %40 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11920
  %call39 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %40) #11, !dbg !11920
  %self40 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call39, i32 0, i32 0, !dbg !11920
  %controller41 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self40, i32 0, i32 0, !dbg !11920
  %41 = load %struct.device*, %struct.device** %controller41, align 8, !dbg !11920
  %42 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11920
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %41, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.xhci_drop_endpoint, i64 0, i64 0), %struct.usb_host_endpoint* %42) #12, !dbg !11920
  br label %if.end42, !dbg !11920

if.end42:                                         ; preds = %if.then38, %if.then30
  store i32 0, i32* %retval, align 4, !dbg !11921
  br label %return, !dbg !11921

if.end43:                                         ; preds = %lor.lhs.false25
  %43 = load i32, i32* %drop_flag, align 4, !dbg !11922
  %44 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11923
  %drop_flags44 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %44, i32 0, i32 0, !dbg !11924
  %45 = load i32, i32* %drop_flags44, align 4, !dbg !11925
  %or = or i32 %45, %43, !dbg !11925
  store i32 %or, i32* %drop_flags44, align 4, !dbg !11925
  %46 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11926
  %drop_flags45 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %46, i32 0, i32 0, !dbg !11926
  %47 = load i32, i32* %drop_flags45, align 4, !dbg !11926
  store i32 %47, i32* %new_drop_flags, align 4, !dbg !11927
  %48 = load i32, i32* %drop_flag, align 4, !dbg !11928
  %neg = xor i32 %48, -1, !dbg !11928
  %49 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11929
  %add_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %49, i32 0, i32 1, !dbg !11930
  %50 = load i32, i32* %add_flags, align 4, !dbg !11931
  %and46 = and i32 %50, %neg, !dbg !11931
  store i32 %and46, i32* %add_flags, align 4, !dbg !11931
  %51 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !11932
  %add_flags47 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %51, i32 0, i32 1, !dbg !11932
  %52 = load i32, i32* %add_flags47, align 4, !dbg !11932
  store i32 %52, i32* %new_add_flags, align 4, !dbg !11933
  %53 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11934
  %54 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11935
  %devs48 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %54, i32 0, i32 41, !dbg !11936
  %55 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11937
  %slot_id49 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %55, i32 0, i32 44, !dbg !11938
  %56 = load i32, i32* %slot_id49, align 8, !dbg !11938
  %idxprom50 = sext i32 %56 to i64, !dbg !11935
  %arrayidx51 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs48, i64 0, i64 %idxprom50, !dbg !11935
  %57 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx51, align 8, !dbg !11935
  %58 = load i32, i32* %ep_index, align 4, !dbg !11939
  call void @xhci_debugfs_remove_endpoint(%struct.xhci_hcd* %53, %struct.xhci_virt_device* %57, i32 %58) #11, !dbg !11940
  %59 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11941
  %60 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11942
  %devs52 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %60, i32 0, i32 41, !dbg !11943
  %61 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11944
  %slot_id53 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %61, i32 0, i32 44, !dbg !11945
  %62 = load i32, i32* %slot_id53, align 8, !dbg !11945
  %idxprom54 = sext i32 %62 to i64, !dbg !11942
  %arrayidx55 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs52, i64 0, i64 %idxprom54, !dbg !11942
  %63 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx55, align 8, !dbg !11942
  %64 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11946
  call void @xhci_endpoint_zero(%struct.xhci_hcd* %59, %struct.xhci_virt_device* %63, %struct.usb_host_endpoint* %64) #11, !dbg !11947
  %65 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11948
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %65, i32 0, i32 50, !dbg !11950
  %66 = load i64, i64* %quirks, align 8, !dbg !11950
  %and56 = and i64 %66, 2097152, !dbg !11951
  %tobool57 = icmp ne i64 %and56, 0, !dbg !11951
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !11952

if.then58:                                        ; preds = %if.end43
  %67 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !11953
  %68 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11954
  %69 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !11955
  call void @xhci_mtk_drop_ep_quirk(%struct.usb_hcd* %67, %struct.usb_device* %68, %struct.usb_host_endpoint* %69) #11, !dbg !11956
  br label %if.end59, !dbg !11956

if.end59:                                         ; preds = %if.then58, %if.end43
  store i32 0, i32* %retval, align 4, !dbg !11957
  br label %return, !dbg !11957

return:                                           ; preds = %if.end59, %if.end42, %if.then17, %if.then7, %if.then2, %if.then
  %70 = load i32, i32* %retval, align 4, !dbg !11958
  ret i32 %70, !dbg !11958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_check_bandwidth(%struct.usb_hcd* %hcd, %struct.usb_device* %udev) #1 !dbg !11959 {
entry:
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %xhci = alloca %struct.xhci_hcd*, align 8
  %virt_dev = alloca %struct.xhci_virt_device*, align 8
  %ctrl_ctx = alloca %struct.xhci_input_control_ctx*, align 8
  %slot_ctx = alloca %struct.xhci_slot_ctx*, align 8
  %command = alloca %struct.xhci_command*, align 8
  %le32 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !11960, metadata !DIExpression()), !dbg !11961
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !11962, metadata !DIExpression()), !dbg !11963
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11964, metadata !DIExpression()), !dbg !11965
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11966, metadata !DIExpression()), !dbg !11967
  store i32 0, i32* %ret, align 4, !dbg !11967
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !11968, metadata !DIExpression()), !dbg !11969
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev, metadata !11970, metadata !DIExpression()), !dbg !11971
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx, metadata !11972, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.declare(metadata %struct.xhci_slot_ctx** %slot_ctx, metadata !11974, metadata !DIExpression()), !dbg !11975
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %command, metadata !11976, metadata !DIExpression()), !dbg !11977
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !11978
  %1 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11979
  %call = call i32 @xhci_check_args(%struct.usb_hcd* %0, %struct.usb_device* %1, %struct.usb_host_endpoint* null, i32 0, i1 zeroext true, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.xhci_check_bandwidth, i64 0, i64 0)) #11, !dbg !11980
  store i32 %call, i32* %ret, align 4, !dbg !11981
  %2 = load i32, i32* %ret, align 4, !dbg !11982
  %cmp = icmp sle i32 %2, 0, !dbg !11984
  br i1 %cmp, label %if.then, label %if.end, !dbg !11985

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !11986
  store i32 %3, i32* %retval, align 4, !dbg !11987
  br label %return, !dbg !11987

if.end:                                           ; preds = %entry
  %4 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !11988
  %call1 = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %4) #11, !dbg !11989
  store %struct.xhci_hcd* %call1, %struct.xhci_hcd** %xhci, align 8, !dbg !11990
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11991
  %xhc_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 47, !dbg !11993
  %6 = load i32, i32* %xhc_state, align 8, !dbg !11993
  %and = and i32 %6, 1, !dbg !11994
  %tobool = icmp ne i32 %and, 0, !dbg !11994
  br i1 %tobool, label %if.then5, label %lor.lhs.false, !dbg !11995

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !11996
  %xhc_state2 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 47, !dbg !11997
  %8 = load i32, i32* %xhc_state2, align 8, !dbg !11997
  %and3 = and i32 %8, 4, !dbg !11998
  %tobool4 = icmp ne i32 %and3, 0, !dbg !11998
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !11999

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  store i32 -19, i32* %retval, align 4, !dbg !12000
  br label %return, !dbg !12000

if.end6:                                          ; preds = %lor.lhs.false
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12001
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %9, i32 0, i32 41, !dbg !12002
  %10 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12003
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %10, i32 0, i32 44, !dbg !12004
  %11 = load i32, i32* %slot_id, align 8, !dbg !12004
  %idxprom = sext i32 %11 to i64, !dbg !12001
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !12001
  %12 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !12001
  store %struct.xhci_virt_device* %12, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12005
  %13 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12006
  %call7 = call %struct.xhci_command* @xhci_alloc_command(%struct.xhci_hcd* %13, i1 zeroext true, i32 3264) #11, !dbg !12007
  store %struct.xhci_command* %call7, %struct.xhci_command** %command, align 8, !dbg !12008
  %14 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !12009
  %tobool8 = icmp ne %struct.xhci_command* %14, null, !dbg !12009
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !12011

if.then9:                                         ; preds = %if.end6
  store i32 -12, i32* %retval, align 4, !dbg !12012
  br label %return, !dbg !12012

if.end10:                                         ; preds = %if.end6
  %15 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12013
  %in_ctx = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %15, i32 0, i32 2, !dbg !12014
  %16 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !12014
  %17 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !12015
  %in_ctx11 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %17, i32 0, i32 0, !dbg !12016
  store %struct.xhci_container_ctx* %16, %struct.xhci_container_ctx** %in_ctx11, align 8, !dbg !12017
  %18 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !12018
  %in_ctx12 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %18, i32 0, i32 0, !dbg !12019
  %19 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx12, align 8, !dbg !12019
  %call13 = call %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx* %19) #11, !dbg !12020
  store %struct.xhci_input_control_ctx* %call13, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !12021
  %20 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !12022
  %tobool14 = icmp ne %struct.xhci_input_control_ctx* %20, null, !dbg !12022
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !12024

if.then15:                                        ; preds = %if.end10
  %21 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12025
  %call16 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %21) #11, !dbg !12025
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call16, i32 0, i32 0, !dbg !12025
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !12025
  %22 = load %struct.device*, %struct.device** %controller, align 8, !dbg !12025
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %22, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.xhci_check_bandwidth, i64 0, i64 0)) #12, !dbg !12025
  store i32 -12, i32* %ret, align 4, !dbg !12027
  br label %command_cleanup, !dbg !12028

if.end17:                                         ; preds = %if.end10
  %23 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !12029
  %add_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %23, i32 0, i32 1, !dbg !12030
  %24 = load i32, i32* %add_flags, align 4, !dbg !12031
  %or = or i32 %24, 1, !dbg !12031
  store i32 %or, i32* %add_flags, align 4, !dbg !12031
  %25 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !12032
  %add_flags18 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %25, i32 0, i32 1, !dbg !12033
  %26 = load i32, i32* %add_flags18, align 4, !dbg !12034
  %and19 = and i32 %26, -3, !dbg !12034
  store i32 %and19, i32* %add_flags18, align 4, !dbg !12034
  %27 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !12035
  %drop_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %27, i32 0, i32 0, !dbg !12036
  %28 = load i32, i32* %drop_flags, align 4, !dbg !12037
  %and20 = and i32 %28, -4, !dbg !12037
  store i32 %and20, i32* %drop_flags, align 4, !dbg !12037
  %29 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !12038
  %add_flags21 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %29, i32 0, i32 1, !dbg !12040
  %30 = load i32, i32* %add_flags21, align 4, !dbg !12040
  %cmp22 = icmp eq i32 %30, 1, !dbg !12041
  br i1 %cmp22, label %land.lhs.true, label %if.end26, !dbg !12042

land.lhs.true:                                    ; preds = %if.end17
  %31 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !12043
  %drop_flags23 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %31, i32 0, i32 0, !dbg !12044
  %32 = load i32, i32* %drop_flags23, align 4, !dbg !12044
  %cmp24 = icmp eq i32 %32, 0, !dbg !12045
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !12046

if.then25:                                        ; preds = %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !12047
  br label %command_cleanup, !dbg !12049

if.end26:                                         ; preds = %land.lhs.true, %if.end17
  %33 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12050
  %34 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12051
  %in_ctx27 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %34, i32 0, i32 2, !dbg !12052
  %35 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx27, align 8, !dbg !12052
  %call28 = call %struct.xhci_slot_ctx* @xhci_get_slot_ctx(%struct.xhci_hcd* %33, %struct.xhci_container_ctx* %35) #11, !dbg !12053
  store %struct.xhci_slot_ctx* %call28, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !12054
  store i32 31, i32* %i, align 4, !dbg !12055
  br label %for.cond, !dbg !12057

for.cond:                                         ; preds = %for.inc, %if.end26
  %36 = load i32, i32* %i, align 4, !dbg !12058
  %cmp29 = icmp sge i32 %36, 1, !dbg !12060
  br i1 %cmp29, label %for.body, label %for.end, !dbg !12061

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %le32, metadata !12062, metadata !DIExpression()), !dbg !12064
  %37 = load i32, i32* %i, align 4, !dbg !12065
  %sh_prom = zext i32 %37 to i64, !dbg !12065
  %shl = shl i64 1, %sh_prom, !dbg !12065
  %conv = trunc i64 %shl to i32, !dbg !12065
  store i32 %conv, i32* %le32, align 4, !dbg !12064
  %38 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12066
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %38, i32 0, i32 3, !dbg !12068
  %39 = load i32, i32* %i, align 4, !dbg !12069
  %sub = sub i32 %39, 1, !dbg !12070
  %idxprom30 = sext i32 %sub to i64, !dbg !12066
  %arrayidx31 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom30, !dbg !12066
  %ring = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx31, i32 0, i32 0, !dbg !12071
  %40 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !12071
  %tobool32 = icmp ne %struct.xhci_ring* %40, null, !dbg !12066
  br i1 %tobool32, label %land.lhs.true33, label %lor.lhs.false37, !dbg !12072

land.lhs.true33:                                  ; preds = %for.body
  %41 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !12073
  %drop_flags34 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %41, i32 0, i32 0, !dbg !12074
  %42 = load i32, i32* %drop_flags34, align 4, !dbg !12074
  %43 = load i32, i32* %le32, align 4, !dbg !12075
  %and35 = and i32 %42, %43, !dbg !12076
  %tobool36 = icmp ne i32 %and35, 0, !dbg !12076
  br i1 %tobool36, label %lor.lhs.false37, label %if.then44, !dbg !12077

lor.lhs.false37:                                  ; preds = %land.lhs.true33, %for.body
  %44 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !12078
  %add_flags38 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %44, i32 0, i32 1, !dbg !12079
  %45 = load i32, i32* %add_flags38, align 4, !dbg !12079
  %46 = load i32, i32* %le32, align 4, !dbg !12080
  %and39 = and i32 %45, %46, !dbg !12081
  %tobool40 = icmp ne i32 %and39, 0, !dbg !12081
  br i1 %tobool40, label %if.then44, label %lor.lhs.false41, !dbg !12082

lor.lhs.false41:                                  ; preds = %lor.lhs.false37
  %47 = load i32, i32* %i, align 4, !dbg !12083
  %cmp42 = icmp eq i32 %47, 1, !dbg !12084
  br i1 %cmp42, label %if.then44, label %if.end49, !dbg !12085

if.then44:                                        ; preds = %lor.lhs.false41, %lor.lhs.false37, %land.lhs.true33
  %48 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !12086
  %dev_info = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %48, i32 0, i32 0, !dbg !12088
  %49 = load i32, i32* %dev_info, align 4, !dbg !12089
  %and45 = and i32 %49, 134217727, !dbg !12089
  store i32 %and45, i32* %dev_info, align 4, !dbg !12089
  %50 = load i32, i32* %i, align 4, !dbg !12090
  %shl46 = shl i32 %50, 27, !dbg !12090
  %51 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !12091
  %dev_info47 = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %51, i32 0, i32 0, !dbg !12092
  %52 = load i32, i32* %dev_info47, align 4, !dbg !12093
  %or48 = or i32 %52, %shl46, !dbg !12093
  store i32 %or48, i32* %dev_info47, align 4, !dbg !12093
  br label %for.end, !dbg !12094

if.end49:                                         ; preds = %lor.lhs.false41
  br label %for.inc, !dbg !12095

for.inc:                                          ; preds = %if.end49
  %53 = load i32, i32* %i, align 4, !dbg !12096
  %dec = add i32 %53, -1, !dbg !12096
  store i32 %dec, i32* %i, align 4, !dbg !12096
  br label %for.cond, !dbg !12097, !llvm.loop !12098

for.end:                                          ; preds = %if.then44, %for.cond
  %54 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12100
  %55 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12101
  %56 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !12102
  %call50 = call i32 @xhci_configure_endpoint(%struct.xhci_hcd* %54, %struct.usb_device* %55, %struct.xhci_command* %56, i1 zeroext false, i1 zeroext false) #11, !dbg !12103
  store i32 %call50, i32* %ret, align 4, !dbg !12104
  %57 = load i32, i32* %ret, align 4, !dbg !12105
  %tobool51 = icmp ne i32 %57, 0, !dbg !12105
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !12107

if.then52:                                        ; preds = %for.end
  br label %command_cleanup, !dbg !12108

if.end53:                                         ; preds = %for.end
  store i32 1, i32* %i, align 4, !dbg !12109
  br label %for.cond54, !dbg !12111

for.cond54:                                       ; preds = %for.inc70, %if.end53
  %58 = load i32, i32* %i, align 4, !dbg !12112
  %cmp55 = icmp slt i32 %58, 31, !dbg !12114
  br i1 %cmp55, label %for.body57, label %for.end71, !dbg !12115

for.body57:                                       ; preds = %for.cond54
  %59 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !12116
  %drop_flags58 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %59, i32 0, i32 0, !dbg !12116
  %60 = load i32, i32* %drop_flags58, align 4, !dbg !12116
  %61 = load i32, i32* %i, align 4, !dbg !12119
  %add = add i32 %61, 1, !dbg !12120
  %shl59 = shl i32 1, %add, !dbg !12121
  %and60 = and i32 %60, %shl59, !dbg !12122
  %tobool61 = icmp ne i32 %and60, 0, !dbg !12122
  br i1 %tobool61, label %land.lhs.true62, label %if.end69, !dbg !12123

land.lhs.true62:                                  ; preds = %for.body57
  %62 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !12124
  %add_flags63 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %62, i32 0, i32 1, !dbg !12124
  %63 = load i32, i32* %add_flags63, align 4, !dbg !12124
  %64 = load i32, i32* %i, align 4, !dbg !12125
  %add64 = add i32 %64, 1, !dbg !12126
  %shl65 = shl i32 1, %add64, !dbg !12127
  %and66 = and i32 %63, %shl65, !dbg !12128
  %tobool67 = icmp ne i32 %and66, 0, !dbg !12128
  br i1 %tobool67, label %if.end69, label %if.then68, !dbg !12129

if.then68:                                        ; preds = %land.lhs.true62
  %65 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12130
  %66 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12132
  %67 = load i32, i32* %i, align 4, !dbg !12133
  call void @xhci_free_endpoint_ring(%struct.xhci_hcd* %65, %struct.xhci_virt_device* %66, i32 %67) #11, !dbg !12134
  %68 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12135
  %69 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12136
  %70 = load i32, i32* %i, align 4, !dbg !12137
  call void @xhci_check_bw_drop_ep_streams(%struct.xhci_hcd* %68, %struct.xhci_virt_device* %69, i32 %70) #11, !dbg !12138
  br label %if.end69, !dbg !12139

if.end69:                                         ; preds = %if.then68, %land.lhs.true62, %for.body57
  br label %for.inc70, !dbg !12140

for.inc70:                                        ; preds = %if.end69
  %71 = load i32, i32* %i, align 4, !dbg !12141
  %inc = add i32 %71, 1, !dbg !12141
  store i32 %inc, i32* %i, align 4, !dbg !12141
  br label %for.cond54, !dbg !12142, !llvm.loop !12143

for.end71:                                        ; preds = %for.cond54
  %72 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12145
  %73 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12146
  call void @xhci_zero_in_ctx(%struct.xhci_hcd* %72, %struct.xhci_virt_device* %73) #11, !dbg !12147
  store i32 1, i32* %i, align 4, !dbg !12148
  br label %for.cond72, !dbg !12150

for.cond72:                                       ; preds = %for.inc101, %for.end71
  %74 = load i32, i32* %i, align 4, !dbg !12151
  %cmp73 = icmp slt i32 %74, 31, !dbg !12153
  br i1 %cmp73, label %for.body75, label %for.end103, !dbg !12154

for.body75:                                       ; preds = %for.cond72
  %75 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12155
  %eps76 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %75, i32 0, i32 3, !dbg !12158
  %76 = load i32, i32* %i, align 4, !dbg !12159
  %idxprom77 = sext i32 %76 to i64, !dbg !12155
  %arrayidx78 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps76, i64 0, i64 %idxprom77, !dbg !12155
  %new_ring = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx78, i32 0, i32 2, !dbg !12160
  %77 = load %struct.xhci_ring*, %struct.xhci_ring** %new_ring, align 8, !dbg !12160
  %tobool79 = icmp ne %struct.xhci_ring* %77, null, !dbg !12155
  br i1 %tobool79, label %if.end81, label %if.then80, !dbg !12161

if.then80:                                        ; preds = %for.body75
  br label %for.inc101, !dbg !12162

if.end81:                                         ; preds = %for.body75
  %78 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12163
  %eps82 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %78, i32 0, i32 3, !dbg !12165
  %79 = load i32, i32* %i, align 4, !dbg !12166
  %idxprom83 = sext i32 %79 to i64, !dbg !12163
  %arrayidx84 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps82, i64 0, i64 %idxprom83, !dbg !12163
  %ring85 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx84, i32 0, i32 0, !dbg !12167
  %80 = load %struct.xhci_ring*, %struct.xhci_ring** %ring85, align 8, !dbg !12167
  %tobool86 = icmp ne %struct.xhci_ring* %80, null, !dbg !12163
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !12168

if.then87:                                        ; preds = %if.end81
  %81 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12169
  %82 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12171
  %83 = load i32, i32* %i, align 4, !dbg !12172
  call void @xhci_free_endpoint_ring(%struct.xhci_hcd* %81, %struct.xhci_virt_device* %82, i32 %83) #11, !dbg !12173
  br label %if.end88, !dbg !12174

if.end88:                                         ; preds = %if.then87, %if.end81
  %84 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12175
  %85 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12176
  %86 = load i32, i32* %i, align 4, !dbg !12177
  call void @xhci_check_bw_drop_ep_streams(%struct.xhci_hcd* %84, %struct.xhci_virt_device* %85, i32 %86) #11, !dbg !12178
  %87 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12179
  %eps89 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %87, i32 0, i32 3, !dbg !12180
  %88 = load i32, i32* %i, align 4, !dbg !12181
  %idxprom90 = sext i32 %88 to i64, !dbg !12179
  %arrayidx91 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps89, i64 0, i64 %idxprom90, !dbg !12179
  %new_ring92 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx91, i32 0, i32 2, !dbg !12182
  %89 = load %struct.xhci_ring*, %struct.xhci_ring** %new_ring92, align 8, !dbg !12182
  %90 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12183
  %eps93 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %90, i32 0, i32 3, !dbg !12184
  %91 = load i32, i32* %i, align 4, !dbg !12185
  %idxprom94 = sext i32 %91 to i64, !dbg !12183
  %arrayidx95 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps93, i64 0, i64 %idxprom94, !dbg !12183
  %ring96 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx95, i32 0, i32 0, !dbg !12186
  store %struct.xhci_ring* %89, %struct.xhci_ring** %ring96, align 8, !dbg !12187
  %92 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12188
  %eps97 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %92, i32 0, i32 3, !dbg !12189
  %93 = load i32, i32* %i, align 4, !dbg !12190
  %idxprom98 = sext i32 %93 to i64, !dbg !12188
  %arrayidx99 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps97, i64 0, i64 %idxprom98, !dbg !12188
  %new_ring100 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx99, i32 0, i32 2, !dbg !12191
  store %struct.xhci_ring* null, %struct.xhci_ring** %new_ring100, align 8, !dbg !12192
  %94 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12193
  %95 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12194
  %96 = load i32, i32* %i, align 4, !dbg !12195
  call void @xhci_debugfs_create_endpoint(%struct.xhci_hcd* %94, %struct.xhci_virt_device* %95, i32 %96) #11, !dbg !12196
  br label %for.inc101, !dbg !12197

for.inc101:                                       ; preds = %if.end88, %if.then80
  %97 = load i32, i32* %i, align 4, !dbg !12198
  %inc102 = add i32 %97, 1, !dbg !12198
  store i32 %inc102, i32* %i, align 4, !dbg !12198
  br label %for.cond72, !dbg !12199, !llvm.loop !12200

for.end103:                                       ; preds = %for.cond72
  br label %command_cleanup, !dbg !12201

command_cleanup:                                  ; preds = %for.end103, %if.then52, %if.then25, %if.then15
  call void @llvm.dbg.label(metadata !12202), !dbg !12203
  %98 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !12204
  %completion = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %98, i32 0, i32 3, !dbg !12205
  %99 = load %struct.completion*, %struct.completion** %completion, align 8, !dbg !12205
  %100 = bitcast %struct.completion* %99 to i8*, !dbg !12204
  call void @kfree(i8* %100) #11, !dbg !12206
  %101 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !12207
  %102 = bitcast %struct.xhci_command* %101 to i8*, !dbg !12207
  call void @kfree(i8* %102) #11, !dbg !12208
  %103 = load i32, i32* %ret, align 4, !dbg !12209
  store i32 %103, i32* %retval, align 4, !dbg !12210
  br label %return, !dbg !12210

return:                                           ; preds = %command_cleanup, %if.then9, %if.then5, %if.then
  %104 = load i32, i32* %retval, align 4, !dbg !12211
  ret i32 %104, !dbg !12211
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_reset_bandwidth(%struct.usb_hcd* %hcd, %struct.usb_device* %udev) #1 !dbg !12212 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %virt_dev = alloca %struct.xhci_virt_device*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !12213, metadata !DIExpression()), !dbg !12214
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !12215, metadata !DIExpression()), !dbg !12216
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !12217, metadata !DIExpression()), !dbg !12218
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev, metadata !12219, metadata !DIExpression()), !dbg !12220
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12221, metadata !DIExpression()), !dbg !12222
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12223, metadata !DIExpression()), !dbg !12224
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !12225
  %1 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12226
  %call = call i32 @xhci_check_args(%struct.usb_hcd* %0, %struct.usb_device* %1, %struct.usb_host_endpoint* null, i32 0, i1 zeroext true, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.xhci_reset_bandwidth, i64 0, i64 0)) #11, !dbg !12227
  store i32 %call, i32* %ret, align 4, !dbg !12228
  %2 = load i32, i32* %ret, align 4, !dbg !12229
  %cmp = icmp sle i32 %2, 0, !dbg !12231
  br i1 %cmp, label %if.then, label %if.end, !dbg !12232

if.then:                                          ; preds = %entry
  br label %return, !dbg !12233

if.end:                                           ; preds = %entry
  %3 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !12234
  %call1 = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %3) #11, !dbg !12235
  store %struct.xhci_hcd* %call1, %struct.xhci_hcd** %xhci, align 8, !dbg !12236
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12237
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %4, i32 0, i32 41, !dbg !12238
  %5 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12239
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 44, !dbg !12240
  %6 = load i32, i32* %slot_id, align 8, !dbg !12240
  %idxprom = sext i32 %6 to i64, !dbg !12237
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !12237
  %7 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !12237
  store %struct.xhci_virt_device* %7, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12241
  store i32 0, i32* %i, align 4, !dbg !12242
  br label %for.cond, !dbg !12244

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !12245
  %cmp2 = icmp slt i32 %8, 31, !dbg !12247
  br i1 %cmp2, label %for.body, label %for.end, !dbg !12248

for.body:                                         ; preds = %for.cond
  %9 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12249
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %9, i32 0, i32 3, !dbg !12252
  %10 = load i32, i32* %i, align 4, !dbg !12253
  %idxprom3 = sext i32 %10 to i64, !dbg !12249
  %arrayidx4 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom3, !dbg !12249
  %new_ring = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx4, i32 0, i32 2, !dbg !12254
  %11 = load %struct.xhci_ring*, %struct.xhci_ring** %new_ring, align 8, !dbg !12254
  %tobool = icmp ne %struct.xhci_ring* %11, null, !dbg !12249
  br i1 %tobool, label %if.then5, label %if.end14, !dbg !12255

if.then5:                                         ; preds = %for.body
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12256
  %13 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12258
  %14 = load i32, i32* %i, align 4, !dbg !12259
  call void @xhci_debugfs_remove_endpoint(%struct.xhci_hcd* %12, %struct.xhci_virt_device* %13, i32 %14) #11, !dbg !12260
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12261
  %16 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12262
  %eps6 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %16, i32 0, i32 3, !dbg !12263
  %17 = load i32, i32* %i, align 4, !dbg !12264
  %idxprom7 = sext i32 %17 to i64, !dbg !12262
  %arrayidx8 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps6, i64 0, i64 %idxprom7, !dbg !12262
  %new_ring9 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx8, i32 0, i32 2, !dbg !12265
  %18 = load %struct.xhci_ring*, %struct.xhci_ring** %new_ring9, align 8, !dbg !12265
  call void @xhci_ring_free(%struct.xhci_hcd* %15, %struct.xhci_ring* %18) #11, !dbg !12266
  %19 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12267
  %eps10 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %19, i32 0, i32 3, !dbg !12268
  %20 = load i32, i32* %i, align 4, !dbg !12269
  %idxprom11 = sext i32 %20 to i64, !dbg !12267
  %arrayidx12 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps10, i64 0, i64 %idxprom11, !dbg !12267
  %new_ring13 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx12, i32 0, i32 2, !dbg !12270
  store %struct.xhci_ring* null, %struct.xhci_ring** %new_ring13, align 8, !dbg !12271
  br label %if.end14, !dbg !12272

if.end14:                                         ; preds = %if.then5, %for.body
  br label %for.inc, !dbg !12273

for.inc:                                          ; preds = %if.end14
  %21 = load i32, i32* %i, align 4, !dbg !12274
  %inc = add i32 %21, 1, !dbg !12274
  store i32 %inc, i32* %i, align 4, !dbg !12274
  br label %for.cond, !dbg !12275, !llvm.loop !12276

for.end:                                          ; preds = %for.cond
  %22 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12278
  %23 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12279
  call void @xhci_zero_in_ctx(%struct.xhci_hcd* %22, %struct.xhci_virt_device* %23) #11, !dbg !12280
  br label %return, !dbg !12281

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !12281
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_address_device(%struct.usb_hcd* %hcd, %struct.usb_device* %udev) #1 !dbg !12282 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !12283, metadata !DIExpression()), !dbg !12284
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !12285, metadata !DIExpression()), !dbg !12286
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !12287
  %1 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12288
  %call = call i32 @xhci_setup_device(%struct.usb_hcd* %0, %struct.usb_device* %1, i32 1) #11, !dbg !12289
  ret i32 %call, !dbg !12290
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_enable_device(%struct.usb_hcd* %hcd, %struct.usb_device* %udev) #1 !dbg !12291 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !12292, metadata !DIExpression()), !dbg !12293
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !12294, metadata !DIExpression()), !dbg !12295
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !12296
  %1 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12297
  %call = call i32 @xhci_setup_device(%struct.usb_hcd* %0, %struct.usb_device* %1, i32 0) #11, !dbg !12298
  ret i32 %call, !dbg !12299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_update_hub_device(%struct.usb_hcd* %hcd, %struct.usb_device* %hdev, %struct.usb_tt* %tt, i32 %mem_flags) #1 !dbg !12300 {
entry:
  %lock.addr.i94 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i94, metadata !6665, metadata !DIExpression()), !dbg !12301
  %flags.addr.i95 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i95, metadata !6671, metadata !DIExpression()), !dbg !12303
  %tmp.i96 = alloca i32, align 4
  %tmp8.i97 = alloca i32, align 4
  %lock.addr.i92 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i92, metadata !6665, metadata !DIExpression()), !dbg !12304
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !12308
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !12309
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %hdev.addr = alloca %struct.usb_device*, align 8
  %tt.addr = alloca %struct.usb_tt*, align 8
  %mem_flags.addr = alloca i32, align 4
  %xhci = alloca %struct.xhci_hcd*, align 8
  %vdev = alloca %struct.xhci_virt_device*, align 8
  %config_cmd = alloca %struct.xhci_command*, align 8
  %ctrl_ctx = alloca %struct.xhci_input_control_ctx*, align 8
  %slot_ctx = alloca %struct.xhci_slot_ctx*, align 8
  %flags = alloca i64, align 8
  %think_time = alloca i32, align 4
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy20 = alloca i64, align 8
  %__dummy221 = alloca i64, align 8
  %tmp24 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !12316, metadata !DIExpression()), !dbg !12317
  store %struct.usb_device* %hdev, %struct.usb_device** %hdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %hdev.addr, metadata !12318, metadata !DIExpression()), !dbg !12319
  store %struct.usb_tt* %tt, %struct.usb_tt** %tt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_tt** %tt.addr, metadata !12320, metadata !DIExpression()), !dbg !12321
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !12322, metadata !DIExpression()), !dbg !12323
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !12324, metadata !DIExpression()), !dbg !12325
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !12326
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !12327
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !12325
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %vdev, metadata !12328, metadata !DIExpression()), !dbg !12329
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %config_cmd, metadata !12330, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx, metadata !12332, metadata !DIExpression()), !dbg !12333
  call void @llvm.dbg.declare(metadata %struct.xhci_slot_ctx** %slot_ctx, metadata !12334, metadata !DIExpression()), !dbg !12335
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12336, metadata !DIExpression()), !dbg !12337
  call void @llvm.dbg.declare(metadata i32* %think_time, metadata !12338, metadata !DIExpression()), !dbg !12339
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12340, metadata !DIExpression()), !dbg !12341
  %1 = load %struct.usb_device*, %struct.usb_device** %hdev.addr, align 8, !dbg !12342
  %parent = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 11, !dbg !12344
  %2 = load %struct.usb_device*, %struct.usb_device** %parent, align 8, !dbg !12344
  %tobool = icmp ne %struct.usb_device* %2, null, !dbg !12342
  br i1 %tobool, label %if.end, label %if.then, !dbg !12345

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12346
  br label %return, !dbg !12346

if.end:                                           ; preds = %entry
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12347
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %3, i32 0, i32 41, !dbg !12348
  %4 = load %struct.usb_device*, %struct.usb_device** %hdev.addr, align 8, !dbg !12349
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 44, !dbg !12350
  %5 = load i32, i32* %slot_id, align 8, !dbg !12350
  %idxprom = sext i32 %5 to i64, !dbg !12347
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !12347
  %6 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !12347
  store %struct.xhci_virt_device* %6, %struct.xhci_virt_device** %vdev, align 8, !dbg !12351
  %7 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !12352
  %tobool1 = icmp ne %struct.xhci_virt_device* %7, null, !dbg !12352
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !12354

if.then2:                                         ; preds = %if.end
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12355
  %call3 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %8) #11, !dbg !12355
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call3, i32 0, i32 0, !dbg !12355
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !12355
  %9 = load %struct.device*, %struct.device** %controller, align 8, !dbg !12355
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %9, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.132, i64 0, i64 0)) #12, !dbg !12355
  store i32 -22, i32* %retval, align 4, !dbg !12357
  br label %return, !dbg !12357

if.end4:                                          ; preds = %if.end
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12358
  %11 = load i32, i32* %mem_flags.addr, align 4, !dbg !12359
  %call5 = call %struct.xhci_command* @xhci_alloc_command_with_ctx(%struct.xhci_hcd* %10, i1 zeroext true, i32 %11) #11, !dbg !12360
  store %struct.xhci_command* %call5, %struct.xhci_command** %config_cmd, align 8, !dbg !12361
  %12 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !12362
  %tobool6 = icmp ne %struct.xhci_command* %12, null, !dbg !12362
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !12364

if.then7:                                         ; preds = %if.end4
  store i32 -12, i32* %retval, align 4, !dbg !12365
  br label %return, !dbg !12365

if.end8:                                          ; preds = %if.end4
  %13 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !12366
  %in_ctx = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %13, i32 0, i32 0, !dbg !12367
  %14 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !12367
  %call9 = call %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx* %14) #11, !dbg !12368
  store %struct.xhci_input_control_ctx* %call9, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !12369
  %15 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !12370
  %tobool10 = icmp ne %struct.xhci_input_control_ctx* %15, null, !dbg !12370
  br i1 %tobool10, label %if.end15, label %if.then11, !dbg !12372

if.then11:                                        ; preds = %if.end8
  %16 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12373
  %call12 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %16) #11, !dbg !12373
  %self13 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call12, i32 0, i32 0, !dbg !12373
  %controller14 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self13, i32 0, i32 0, !dbg !12373
  %17 = load %struct.device*, %struct.device** %controller14, align 8, !dbg !12373
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %17, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.xhci_update_hub_device, i64 0, i64 0)) #12, !dbg !12373
  %18 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12375
  %19 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !12376
  call void @xhci_free_command(%struct.xhci_hcd* %18, %struct.xhci_command* %19) #11, !dbg !12377
  store i32 -12, i32* %retval, align 4, !dbg !12378
  br label %return, !dbg !12378

if.end15:                                         ; preds = %if.end8
  br label %do.body, !dbg !12379

do.body:                                          ; preds = %if.end15
  br label %do.body16, !dbg !12380

do.body16:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12381, metadata !DIExpression()), !dbg !12383
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12384, metadata !DIExpression()), !dbg !12383
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12383
  %conv = zext i1 %cmp to i32, !dbg !12383
  store i32 1, i32* %tmp, align 4, !dbg !12383
  %20 = load i32, i32* %tmp, align 4, !dbg !12383
  br label %do.body17, !dbg !12385

do.body17:                                        ; preds = %do.body16
  br label %do.body18, !dbg !12386

do.body18:                                        ; preds = %do.body17
  br label %do.body19, !dbg !12387

do.body19:                                        ; preds = %do.body18
  call void @llvm.dbg.declare(metadata i64* %__dummy20, metadata !12389, metadata !DIExpression()), !dbg !12392
  call void @llvm.dbg.declare(metadata i64* %__dummy221, metadata !12393, metadata !DIExpression()), !dbg !12392
  %cmp22 = icmp eq i64* %__dummy20, %__dummy221, !dbg !12392
  %conv23 = zext i1 %cmp22 to i32, !dbg !12392
  store i32 1, i32* %tmp24, align 4, !dbg !12392
  %21 = load i32, i32* %tmp24, align 4, !dbg !12392
  %call25 = call i64 @arch_local_irq_save() #11, !dbg !12394
  store i64 %call25, i64* %flags, align 8, !dbg !12394
  br label %do.end, !dbg !12394

do.end:                                           ; preds = %do.body19
  br label %do.end26, !dbg !12387

do.end26:                                         ; preds = %do.end
  br label %do.body27, !dbg !12386

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12395, !srcloc !12396
  br label %do.body28, !dbg !12395

do.body28:                                        ; preds = %do.body27
  %22 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12397
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %22, i32 0, i32 12, !dbg !12397
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12398
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !12399
  %rlock.i = bitcast %union.anon.2* %24 to %struct.raw_spinlock*, !dbg !12399
  br label %do.end30, !dbg !12397

do.end30:                                         ; preds = %do.body28
  br label %do.end31, !dbg !12395

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !12386

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !12385

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !12380

do.end34:                                         ; preds = %do.end33
  %25 = load %struct.usb_device*, %struct.usb_device** %hdev.addr, align 8, !dbg !12400
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %25, i32 0, i32 4, !dbg !12401
  %26 = load i32, i32* %speed, align 4, !dbg !12401
  %cmp35 = icmp eq i32 %26, 3, !dbg !12402
  br i1 %cmp35, label %land.lhs.true, label %if.end41, !dbg !12403

land.lhs.true:                                    ; preds = %do.end34
  %27 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12404
  %28 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !12405
  %29 = load %struct.usb_device*, %struct.usb_device** %hdev.addr, align 8, !dbg !12406
  %30 = load %struct.usb_tt*, %struct.usb_tt** %tt.addr, align 8, !dbg !12407
  %call37 = call i32 @xhci_alloc_tt_info(%struct.xhci_hcd* %27, %struct.xhci_virt_device* %28, %struct.usb_device* %29, %struct.usb_tt* %30, i32 2592) #11, !dbg !12408
  %tobool38 = icmp ne i32 %call37, 0, !dbg !12408
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !12409

if.then39:                                        ; preds = %land.lhs.true
  %31 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12410
  %32 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !12411
  call void @xhci_free_command(%struct.xhci_hcd* %31, %struct.xhci_command* %32) #11, !dbg !12412
  %33 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12413
  %lock40 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %33, i32 0, i32 12, !dbg !12414
  %34 = load i64, i64* %flags, align 8, !dbg !12415
  store %struct.spinlock* %lock40, %struct.spinlock** %lock.addr.i92, align 8
  store i64 %34, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !12416
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !12416
  store i32 1, i32* %tmp.i, align 4, !dbg !12416
  %35 = load i32, i32* %tmp.i, align 4, !dbg !12416
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !12417
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !12417
  store i32 1, i32* %tmp8.i, align 4, !dbg !12417
  %36 = load i32, i32* %tmp8.i, align 4, !dbg !12417
  %37 = load i64, i64* %flags.addr.i, align 8, !dbg !12418
  call void @arch_local_irq_restore(i64 %37) #13, !dbg !12418
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12419, !srcloc !6814
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i92, align 8, !dbg !12420
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !12420
  %rlock.i93 = bitcast %union.anon.2* %39 to %struct.raw_spinlock*, !dbg !12420
  store i32 -12, i32* %retval, align 4, !dbg !12421
  br label %return, !dbg !12421

if.end41:                                         ; preds = %land.lhs.true, %do.end34
  %40 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12422
  %41 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !12423
  %in_ctx42 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %41, i32 0, i32 0, !dbg !12424
  %42 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx42, align 8, !dbg !12424
  %43 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev, align 8, !dbg !12425
  %out_ctx = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %43, i32 0, i32 1, !dbg !12426
  %44 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx, align 8, !dbg !12426
  call void @xhci_slot_copy(%struct.xhci_hcd* %40, %struct.xhci_container_ctx* %42, %struct.xhci_container_ctx* %44) #11, !dbg !12427
  %45 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !12428
  %add_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %45, i32 0, i32 1, !dbg !12429
  %46 = load i32, i32* %add_flags, align 4, !dbg !12430
  %or = or i32 %46, 1, !dbg !12430
  store i32 %or, i32* %add_flags, align 4, !dbg !12430
  %47 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12431
  %48 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !12432
  %in_ctx43 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %48, i32 0, i32 0, !dbg !12433
  %49 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx43, align 8, !dbg !12433
  %call44 = call %struct.xhci_slot_ctx* @xhci_get_slot_ctx(%struct.xhci_hcd* %47, %struct.xhci_container_ctx* %49) #11, !dbg !12434
  store %struct.xhci_slot_ctx* %call44, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !12435
  %50 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !12436
  %dev_info = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %50, i32 0, i32 0, !dbg !12437
  %51 = load i32, i32* %dev_info, align 4, !dbg !12438
  %or45 = or i32 %51, 67108864, !dbg !12438
  store i32 %or45, i32* %dev_info, align 4, !dbg !12438
  %52 = load %struct.usb_tt*, %struct.usb_tt** %tt.addr, align 8, !dbg !12439
  %multi = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %52, i32 0, i32 1, !dbg !12441
  %53 = load i32, i32* %multi, align 8, !dbg !12441
  %tobool46 = icmp ne i32 %53, 0, !dbg !12439
  br i1 %tobool46, label %if.then47, label %if.else, !dbg !12442

if.then47:                                        ; preds = %if.end41
  %54 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !12443
  %dev_info48 = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %54, i32 0, i32 0, !dbg !12444
  %55 = load i32, i32* %dev_info48, align 4, !dbg !12445
  %or49 = or i32 %55, 33554432, !dbg !12445
  store i32 %or49, i32* %dev_info48, align 4, !dbg !12445
  br label %if.end56, !dbg !12443

if.else:                                          ; preds = %if.end41
  %56 = load %struct.usb_device*, %struct.usb_device** %hdev.addr, align 8, !dbg !12446
  %speed50 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %56, i32 0, i32 4, !dbg !12448
  %57 = load i32, i32* %speed50, align 4, !dbg !12448
  %cmp51 = icmp eq i32 %57, 2, !dbg !12449
  br i1 %cmp51, label %if.then53, label %if.end55, !dbg !12450

if.then53:                                        ; preds = %if.else
  %58 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !12451
  %dev_info54 = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %58, i32 0, i32 0, !dbg !12452
  %59 = load i32, i32* %dev_info54, align 4, !dbg !12453
  %and = and i32 %59, -33554433, !dbg !12453
  store i32 %and, i32* %dev_info54, align 4, !dbg !12453
  br label %if.end55, !dbg !12451

if.end55:                                         ; preds = %if.then53, %if.else
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then47
  %60 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12454
  %hci_version = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %60, i32 0, i32 14, !dbg !12456
  %61 = load i16, i16* %hci_version, align 2, !dbg !12456
  %conv57 = zext i16 %61 to i32, !dbg !12454
  %cmp58 = icmp sgt i32 %conv57, 149, !dbg !12457
  br i1 %cmp58, label %if.then60, label %if.else80, !dbg !12458

if.then60:                                        ; preds = %if.end56
  %62 = load %struct.usb_device*, %struct.usb_device** %hdev.addr, align 8, !dbg !12459
  %maxchild = getelementptr inbounds %struct.usb_device, %struct.usb_device* %62, i32 0, i32 35, !dbg !12459
  %63 = load i32, i32* %maxchild, align 8, !dbg !12459
  %and61 = and i32 %63, 255, !dbg !12459
  %shl = shl i32 %and61, 24, !dbg !12459
  %64 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !12461
  %dev_info2 = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %64, i32 0, i32 1, !dbg !12462
  %65 = load i32, i32* %dev_info2, align 4, !dbg !12463
  %or62 = or i32 %65, %shl, !dbg !12463
  store i32 %or62, i32* %dev_info2, align 4, !dbg !12463
  %66 = load %struct.usb_tt*, %struct.usb_tt** %tt.addr, align 8, !dbg !12464
  %think_time63 = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %66, i32 0, i32 2, !dbg !12465
  %67 = load i32, i32* %think_time63, align 4, !dbg !12465
  store i32 %67, i32* %think_time, align 4, !dbg !12466
  %68 = load i32, i32* %think_time, align 4, !dbg !12467
  %cmp64 = icmp ne i32 %68, 0, !dbg !12469
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !12470

if.then66:                                        ; preds = %if.then60
  %69 = load i32, i32* %think_time, align 4, !dbg !12471
  %div = udiv i32 %69, 666, !dbg !12472
  %sub = sub i32 %div, 1, !dbg !12473
  store i32 %sub, i32* %think_time, align 4, !dbg !12474
  br label %if.end67, !dbg !12475

if.end67:                                         ; preds = %if.then66, %if.then60
  %70 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12476
  %hci_version68 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %70, i32 0, i32 14, !dbg !12478
  %71 = load i16, i16* %hci_version68, align 2, !dbg !12478
  %conv69 = zext i16 %71 to i32, !dbg !12476
  %cmp70 = icmp slt i32 %conv69, 256, !dbg !12479
  br i1 %cmp70, label %if.then75, label %lor.lhs.false, !dbg !12480

lor.lhs.false:                                    ; preds = %if.end67
  %72 = load %struct.usb_device*, %struct.usb_device** %hdev.addr, align 8, !dbg !12481
  %speed72 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %72, i32 0, i32 4, !dbg !12482
  %73 = load i32, i32* %speed72, align 4, !dbg !12482
  %cmp73 = icmp eq i32 %73, 3, !dbg !12483
  br i1 %cmp73, label %if.then75, label %if.end79, !dbg !12484

if.then75:                                        ; preds = %lor.lhs.false, %if.end67
  %74 = load i32, i32* %think_time, align 4, !dbg !12485
  %and76 = and i32 %74, 3, !dbg !12485
  %shl77 = shl i32 %and76, 16, !dbg !12485
  %75 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !12486
  %tt_info = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %75, i32 0, i32 2, !dbg !12487
  %76 = load i32, i32* %tt_info, align 4, !dbg !12488
  %or78 = or i32 %76, %shl77, !dbg !12488
  store i32 %or78, i32* %tt_info, align 4, !dbg !12488
  br label %if.end79, !dbg !12486

if.end79:                                         ; preds = %if.then75, %lor.lhs.false
  br label %if.end81, !dbg !12489

if.else80:                                        ; preds = %if.end56
  br label %if.end81

if.end81:                                         ; preds = %if.else80, %if.end79
  %77 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !12490
  %dev_state = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %77, i32 0, i32 3, !dbg !12491
  store i32 0, i32* %dev_state, align 4, !dbg !12492
  %78 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12493
  %lock82 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %78, i32 0, i32 12, !dbg !12494
  %79 = load i64, i64* %flags, align 8, !dbg !12495
  store %struct.spinlock* %lock82, %struct.spinlock** %lock.addr.i94, align 8
  store i64 %79, i64* %flags.addr.i95, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !12496
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !12496
  store i32 1, i32* %tmp.i96, align 4, !dbg !12496
  %80 = load i32, i32* %tmp.i96, align 4, !dbg !12496
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !12497
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !12497
  store i32 1, i32* %tmp8.i97, align 4, !dbg !12497
  %81 = load i32, i32* %tmp8.i97, align 4, !dbg !12497
  %82 = load i64, i64* %flags.addr.i95, align 8, !dbg !12498
  call void @arch_local_irq_restore(i64 %82) #13, !dbg !12498
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12499, !srcloc !6814
  %83 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i94, align 8, !dbg !12500
  %84 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %83, i32 0, i32 0, !dbg !12500
  %rlock.i98 = bitcast %union.anon.2* %84 to %struct.raw_spinlock*, !dbg !12500
  %85 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12501
  %hci_version83 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %85, i32 0, i32 14, !dbg !12503
  %86 = load i16, i16* %hci_version83, align 2, !dbg !12503
  %conv84 = zext i16 %86 to i32, !dbg !12501
  %cmp85 = icmp sgt i32 %conv84, 149, !dbg !12504
  br i1 %cmp85, label %if.then87, label %if.else89, !dbg !12505

if.then87:                                        ; preds = %if.end81
  %87 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12506
  %88 = load %struct.usb_device*, %struct.usb_device** %hdev.addr, align 8, !dbg !12507
  %89 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !12508
  %call88 = call i32 @xhci_configure_endpoint(%struct.xhci_hcd* %87, %struct.usb_device* %88, %struct.xhci_command* %89, i1 zeroext false, i1 zeroext false) #11, !dbg !12509
  store i32 %call88, i32* %ret, align 4, !dbg !12510
  br label %if.end91, !dbg !12511

if.else89:                                        ; preds = %if.end81
  %90 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12512
  %91 = load %struct.usb_device*, %struct.usb_device** %hdev.addr, align 8, !dbg !12513
  %92 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !12514
  %call90 = call i32 @xhci_configure_endpoint(%struct.xhci_hcd* %90, %struct.usb_device* %91, %struct.xhci_command* %92, i1 zeroext true, i1 zeroext false) #11, !dbg !12515
  store i32 %call90, i32* %ret, align 4, !dbg !12516
  br label %if.end91

if.end91:                                         ; preds = %if.else89, %if.then87
  %93 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12517
  %94 = load %struct.xhci_command*, %struct.xhci_command** %config_cmd, align 8, !dbg !12518
  call void @xhci_free_command(%struct.xhci_hcd* %93, %struct.xhci_command* %94) #11, !dbg !12519
  %95 = load i32, i32* %ret, align 4, !dbg !12520
  store i32 %95, i32* %retval, align 4, !dbg !12521
  br label %return, !dbg !12521

return:                                           ; preds = %if.end91, %if.then39, %if.then11, %if.then7, %if.then2, %if.then
  %96 = load i32, i32* %retval, align 4, !dbg !12522
  ret i32 %96, !dbg !12522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_discover_or_reset_device(%struct.usb_hcd* %hcd, %struct.usb_device* %udev) #1 !dbg !12523 {
entry:
  %lock.addr.i142 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i142, metadata !6665, metadata !DIExpression()), !dbg !12524
  %flags.addr.i143 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i143, metadata !6671, metadata !DIExpression()), !dbg !12528
  %tmp.i144 = alloca i32, align 4
  %tmp8.i145 = alloca i32, align 4
  %lock.addr.i140 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i140, metadata !6673, metadata !DIExpression()), !dbg !12529
  %lock.addr.i135 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i135, metadata !6665, metadata !DIExpression()), !dbg !12536
  %flags.addr.i136 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i136, metadata !6671, metadata !DIExpression()), !dbg !12538
  %tmp.i137 = alloca i32, align 4
  %tmp8.i138 = alloca i32, align 4
  %lock.addr.i133 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i133, metadata !6665, metadata !DIExpression()), !dbg !12539
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !12543
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !12544
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %flags = alloca i64, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %slot_id = alloca i32, align 4
  %virt_dev = alloca %struct.xhci_virt_device*, align 8
  %reset_device_cmd = alloca %struct.xhci_command*, align 8
  %slot_ctx = alloca %struct.xhci_slot_ctx*, align 8
  %old_active_eps = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy33 = alloca i64, align 8
  %__dummy234 = alloca i64, align 8
  %tmp37 = alloca i32, align 4
  %__dummy69 = alloca i64, align 8
  %__dummy270 = alloca i64, align 8
  %tmp73 = alloca i32, align 4
  %__dummy77 = alloca i64, align 8
  %__dummy278 = alloca i64, align 8
  %tmp81 = alloca i32, align 4
  %ep = alloca %struct.xhci_virt_ep*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !12551, metadata !DIExpression()), !dbg !12552
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !12553, metadata !DIExpression()), !dbg !12554
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12555, metadata !DIExpression()), !dbg !12556
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12557, metadata !DIExpression()), !dbg !12558
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12559, metadata !DIExpression()), !dbg !12560
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !12561, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.declare(metadata i32* %slot_id, metadata !12563, metadata !DIExpression()), !dbg !12564
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev, metadata !12565, metadata !DIExpression()), !dbg !12566
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %reset_device_cmd, metadata !12567, metadata !DIExpression()), !dbg !12568
  call void @llvm.dbg.declare(metadata %struct.xhci_slot_ctx** %slot_ctx, metadata !12569, metadata !DIExpression()), !dbg !12570
  call void @llvm.dbg.declare(metadata i32* %old_active_eps, metadata !12571, metadata !DIExpression()), !dbg !12572
  store i32 0, i32* %old_active_eps, align 4, !dbg !12572
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !12573
  %1 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12574
  %call = call i32 @xhci_check_args(%struct.usb_hcd* %0, %struct.usb_device* %1, %struct.usb_host_endpoint* null, i32 0, i1 zeroext false, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__.xhci_discover_or_reset_device, i64 0, i64 0)) #11, !dbg !12575
  store i32 %call, i32* %ret, align 4, !dbg !12576
  %2 = load i32, i32* %ret, align 4, !dbg !12577
  %cmp = icmp sle i32 %2, 0, !dbg !12579
  br i1 %cmp, label %if.then, label %if.end, !dbg !12580

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !12581
  store i32 %3, i32* %retval, align 4, !dbg !12582
  br label %return, !dbg !12582

if.end:                                           ; preds = %entry
  %4 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !12583
  %call1 = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %4) #11, !dbg !12584
  store %struct.xhci_hcd* %call1, %struct.xhci_hcd** %xhci, align 8, !dbg !12585
  %5 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12586
  %slot_id2 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 44, !dbg !12587
  %6 = load i32, i32* %slot_id2, align 8, !dbg !12587
  store i32 %6, i32* %slot_id, align 4, !dbg !12588
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12589
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 41, !dbg !12590
  %8 = load i32, i32* %slot_id, align 4, !dbg !12591
  %idxprom = zext i32 %8 to i64, !dbg !12589
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !12589
  %9 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !12589
  store %struct.xhci_virt_device* %9, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12592
  %10 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12593
  %tobool = icmp ne %struct.xhci_virt_device* %10, null, !dbg !12593
  br i1 %tobool, label %if.end7, label %if.then3, !dbg !12595

if.then3:                                         ; preds = %if.end
  %11 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !12596
  %12 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12598
  %call4 = call i32 @xhci_alloc_dev(%struct.usb_hcd* %11, %struct.usb_device* %12) #11, !dbg !12599
  store i32 %call4, i32* %ret, align 4, !dbg !12600
  %13 = load i32, i32* %ret, align 4, !dbg !12601
  %cmp5 = icmp eq i32 %13, 1, !dbg !12603
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !12604

if.then6:                                         ; preds = %if.then3
  store i32 0, i32* %retval, align 4, !dbg !12605
  br label %return, !dbg !12605

if.else:                                          ; preds = %if.then3
  store i32 -22, i32* %retval, align 4, !dbg !12606
  br label %return, !dbg !12606

if.end7:                                          ; preds = %if.end
  %14 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12607
  %tt_info = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %14, i32 0, i32 7, !dbg !12609
  %15 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info, align 8, !dbg !12609
  %tobool8 = icmp ne %struct.xhci_tt_bw_info* %15, null, !dbg !12607
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !12610

if.then9:                                         ; preds = %if.end7
  %16 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12611
  %tt_info10 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %16, i32 0, i32 7, !dbg !12612
  %17 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info10, align 8, !dbg !12612
  %active_eps = getelementptr inbounds %struct.xhci_tt_bw_info, %struct.xhci_tt_bw_info* %17, i32 0, i32 4, !dbg !12613
  %18 = load i32, i32* %active_eps, align 8, !dbg !12613
  store i32 %18, i32* %old_active_eps, align 4, !dbg !12614
  br label %if.end11, !dbg !12615

if.end11:                                         ; preds = %if.then9, %if.end7
  %19 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12616
  %udev12 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %19, i32 0, i32 0, !dbg !12618
  %20 = load %struct.usb_device*, %struct.usb_device** %udev12, align 8, !dbg !12618
  %21 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12619
  %cmp13 = icmp ne %struct.usb_device* %20, %21, !dbg !12620
  br i1 %cmp13, label %if.then14, label %if.end19, !dbg !12621

if.then14:                                        ; preds = %if.end11
  %22 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !12622
  %23 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12624
  %call15 = call i32 @xhci_alloc_dev(%struct.usb_hcd* %22, %struct.usb_device* %23) #11, !dbg !12625
  store i32 %call15, i32* %ret, align 4, !dbg !12626
  %24 = load i32, i32* %ret, align 4, !dbg !12627
  %cmp16 = icmp eq i32 %24, 1, !dbg !12629
  br i1 %cmp16, label %if.then17, label %if.else18, !dbg !12630

if.then17:                                        ; preds = %if.then14
  store i32 0, i32* %retval, align 4, !dbg !12631
  br label %return, !dbg !12631

if.else18:                                        ; preds = %if.then14
  store i32 -22, i32* %retval, align 4, !dbg !12632
  br label %return, !dbg !12632

if.end19:                                         ; preds = %if.end11
  %25 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12633
  %26 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12634
  %out_ctx = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %26, i32 0, i32 1, !dbg !12635
  %27 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx, align 8, !dbg !12635
  %call20 = call %struct.xhci_slot_ctx* @xhci_get_slot_ctx(%struct.xhci_hcd* %25, %struct.xhci_container_ctx* %27) #11, !dbg !12636
  store %struct.xhci_slot_ctx* %call20, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !12637
  %28 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !12638
  %dev_state = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %28, i32 0, i32 3, !dbg !12638
  %29 = load i32, i32* %dev_state, align 4, !dbg !12638
  %and = and i32 %29, -134217728, !dbg !12638
  %shr = lshr i32 %and, 27, !dbg !12638
  %cmp21 = icmp eq i32 %shr, 0, !dbg !12640
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !12641

if.then22:                                        ; preds = %if.end19
  store i32 0, i32* %retval, align 4, !dbg !12642
  br label %return, !dbg !12642

if.end23:                                         ; preds = %if.end19
  %30 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !12643
  call void @trace_xhci_discover_or_reset_device(%struct.xhci_slot_ctx* %30) #11, !dbg !12644
  %31 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12645
  %call24 = call %struct.xhci_command* @xhci_alloc_command(%struct.xhci_hcd* %31, i1 zeroext true, i32 3072) #11, !dbg !12646
  store %struct.xhci_command* %call24, %struct.xhci_command** %reset_device_cmd, align 8, !dbg !12647
  %32 = load %struct.xhci_command*, %struct.xhci_command** %reset_device_cmd, align 8, !dbg !12648
  %tobool25 = icmp ne %struct.xhci_command* %32, null, !dbg !12648
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !12650

if.then26:                                        ; preds = %if.end23
  store i32 -12, i32* %retval, align 4, !dbg !12651
  br label %return, !dbg !12651

if.end27:                                         ; preds = %if.end23
  br label %do.body, !dbg !12653

do.body:                                          ; preds = %if.end27
  br label %do.body28, !dbg !12654

do.body28:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12655, metadata !DIExpression()), !dbg !12657
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12658, metadata !DIExpression()), !dbg !12657
  %cmp29 = icmp eq i64* %__dummy, %__dummy2, !dbg !12657
  %conv = zext i1 %cmp29 to i32, !dbg !12657
  store i32 1, i32* %tmp, align 4, !dbg !12657
  %33 = load i32, i32* %tmp, align 4, !dbg !12657
  br label %do.body30, !dbg !12659

do.body30:                                        ; preds = %do.body28
  br label %do.body31, !dbg !12660

do.body31:                                        ; preds = %do.body30
  br label %do.body32, !dbg !12661

do.body32:                                        ; preds = %do.body31
  call void @llvm.dbg.declare(metadata i64* %__dummy33, metadata !12663, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.declare(metadata i64* %__dummy234, metadata !12667, metadata !DIExpression()), !dbg !12666
  %cmp35 = icmp eq i64* %__dummy33, %__dummy234, !dbg !12666
  %conv36 = zext i1 %cmp35 to i32, !dbg !12666
  store i32 1, i32* %tmp37, align 4, !dbg !12666
  %34 = load i32, i32* %tmp37, align 4, !dbg !12666
  %call38 = call i64 @arch_local_irq_save() #11, !dbg !12668
  store i64 %call38, i64* %flags, align 8, !dbg !12668
  br label %do.end, !dbg !12668

do.end:                                           ; preds = %do.body32
  br label %do.end39, !dbg !12661

do.end39:                                         ; preds = %do.end
  br label %do.body40, !dbg !12660

do.body40:                                        ; preds = %do.end39
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12669, !srcloc !12670
  br label %do.body41, !dbg !12669

do.body41:                                        ; preds = %do.body40
  %35 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12671
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %35, i32 0, i32 12, !dbg !12671
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12672
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !12673
  %rlock.i = bitcast %union.anon.2* %37 to %struct.raw_spinlock*, !dbg !12673
  br label %do.end43, !dbg !12671

do.end43:                                         ; preds = %do.body41
  br label %do.end44, !dbg !12669

do.end44:                                         ; preds = %do.end43
  br label %do.end45, !dbg !12660

do.end45:                                         ; preds = %do.end44
  br label %do.end46, !dbg !12659

do.end46:                                         ; preds = %do.end45
  br label %do.end47, !dbg !12654

do.end47:                                         ; preds = %do.end46
  %38 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12674
  %39 = load %struct.xhci_command*, %struct.xhci_command** %reset_device_cmd, align 8, !dbg !12675
  %40 = load i32, i32* %slot_id, align 4, !dbg !12676
  %call48 = call i32 @xhci_queue_reset_device(%struct.xhci_hcd* %38, %struct.xhci_command* %39, i32 %40) #11, !dbg !12677
  store i32 %call48, i32* %ret, align 4, !dbg !12678
  %41 = load i32, i32* %ret, align 4, !dbg !12679
  %tobool49 = icmp ne i32 %41, 0, !dbg !12679
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !12680

if.then50:                                        ; preds = %do.end47
  %42 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12681
  %lock51 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %42, i32 0, i32 12, !dbg !12682
  %43 = load i64, i64* %flags, align 8, !dbg !12683
  store %struct.spinlock* %lock51, %struct.spinlock** %lock.addr.i133, align 8
  store i64 %43, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !12684
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !12684
  store i32 1, i32* %tmp.i, align 4, !dbg !12684
  %44 = load i32, i32* %tmp.i, align 4, !dbg !12684
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !12685
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !12685
  store i32 1, i32* %tmp8.i, align 4, !dbg !12685
  %45 = load i32, i32* %tmp8.i, align 4, !dbg !12685
  %46 = load i64, i64* %flags.addr.i, align 8, !dbg !12686
  call void @arch_local_irq_restore(i64 %46) #13, !dbg !12686
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12687, !srcloc !6814
  %47 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i133, align 8, !dbg !12688
  %48 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %47, i32 0, i32 0, !dbg !12688
  %rlock.i134 = bitcast %union.anon.2* %48 to %struct.raw_spinlock*, !dbg !12688
  br label %command_cleanup, !dbg !12689

if.end52:                                         ; preds = %do.end47
  %49 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12690
  call void @xhci_ring_cmd_db(%struct.xhci_hcd* %49) #11, !dbg !12691
  %50 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12692
  %lock53 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %50, i32 0, i32 12, !dbg !12693
  %51 = load i64, i64* %flags, align 8, !dbg !12694
  store %struct.spinlock* %lock53, %struct.spinlock** %lock.addr.i135, align 8
  store i64 %51, i64* %flags.addr.i136, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !12695
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !12695
  store i32 1, i32* %tmp.i137, align 4, !dbg !12695
  %52 = load i32, i32* %tmp.i137, align 4, !dbg !12695
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !12696
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !12696
  store i32 1, i32* %tmp8.i138, align 4, !dbg !12696
  %53 = load i32, i32* %tmp8.i138, align 4, !dbg !12696
  %54 = load i64, i64* %flags.addr.i136, align 8, !dbg !12697
  call void @arch_local_irq_restore(i64 %54) #13, !dbg !12697
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12698, !srcloc !6814
  %55 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i135, align 8, !dbg !12699
  %56 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %55, i32 0, i32 0, !dbg !12699
  %rlock.i139 = bitcast %union.anon.2* %56 to %struct.raw_spinlock*, !dbg !12699
  %57 = load %struct.xhci_command*, %struct.xhci_command** %reset_device_cmd, align 8, !dbg !12700
  %completion = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %57, i32 0, i32 3, !dbg !12701
  %58 = load %struct.completion*, %struct.completion** %completion, align 8, !dbg !12701
  call void @wait_for_completion(%struct.completion* %58) #11, !dbg !12702
  %59 = load %struct.xhci_command*, %struct.xhci_command** %reset_device_cmd, align 8, !dbg !12703
  %status = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %59, i32 0, i32 1, !dbg !12704
  %60 = load i32, i32* %status, align 8, !dbg !12704
  store i32 %60, i32* %ret, align 4, !dbg !12705
  %61 = load i32, i32* %ret, align 4, !dbg !12706
  switch i32 %61, label %sw.default [
    i32 25, label %sw.bb
    i32 24, label %sw.bb
    i32 11, label %sw.bb55
    i32 19, label %sw.bb55
    i32 1, label %sw.bb56
  ], !dbg !12707

sw.bb:                                            ; preds = %if.end52, %if.end52
  %62 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12708
  %call54 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %62) #11, !dbg !12708
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call54, i32 0, i32 0, !dbg !12708
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !12708
  %63 = load %struct.device*, %struct.device** %controller, align 8, !dbg !12708
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %63, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.133, i64 0, i64 0)) #12, !dbg !12708
  store i32 -62, i32* %ret, align 4, !dbg !12710
  br label %command_cleanup, !dbg !12711

sw.bb55:                                          ; preds = %if.end52, %if.end52
  store i32 0, i32* %ret, align 4, !dbg !12712
  br label %command_cleanup, !dbg !12713

sw.bb56:                                          ; preds = %if.end52
  br label %sw.epilog, !dbg !12714

sw.default:                                       ; preds = %if.end52
  %64 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12715
  %65 = load i32, i32* %ret, align 4, !dbg !12717
  %call57 = call i32 @xhci_is_vendor_info_code(%struct.xhci_hcd* %64, i32 %65) #11, !dbg !12718
  %tobool58 = icmp ne i32 %call57, 0, !dbg !12718
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !12719

if.then59:                                        ; preds = %sw.default
  br label %sw.epilog, !dbg !12720

if.end60:                                         ; preds = %sw.default
  %66 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12721
  %call61 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %66) #11, !dbg !12721
  %self62 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call61, i32 0, i32 0, !dbg !12721
  %controller63 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self62, i32 0, i32 0, !dbg !12721
  %67 = load %struct.device*, %struct.device** %controller63, align 8, !dbg !12721
  %68 = load i32, i32* %ret, align 4, !dbg !12721
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %67, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.134, i64 0, i64 0), i32 %68) #12, !dbg !12721
  store i32 -22, i32* %ret, align 4, !dbg !12722
  br label %command_cleanup, !dbg !12723

sw.epilog:                                        ; preds = %if.then59, %sw.bb56
  %69 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12724
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %69, i32 0, i32 50, !dbg !12725
  %70 = load i64, i64* %quirks, align 8, !dbg !12725
  %and64 = and i64 %70, 32, !dbg !12726
  %tobool65 = icmp ne i64 %and64, 0, !dbg !12726
  br i1 %tobool65, label %if.then66, label %if.end95, !dbg !12727

if.then66:                                        ; preds = %sw.epilog
  br label %do.body67, !dbg !12728

do.body67:                                        ; preds = %if.then66
  br label %do.body68, !dbg !12729

do.body68:                                        ; preds = %do.body67
  call void @llvm.dbg.declare(metadata i64* %__dummy69, metadata !12730, metadata !DIExpression()), !dbg !12732
  call void @llvm.dbg.declare(metadata i64* %__dummy270, metadata !12733, metadata !DIExpression()), !dbg !12732
  %cmp71 = icmp eq i64* %__dummy69, %__dummy270, !dbg !12732
  %conv72 = zext i1 %cmp71 to i32, !dbg !12732
  store i32 1, i32* %tmp73, align 4, !dbg !12732
  %71 = load i32, i32* %tmp73, align 4, !dbg !12732
  br label %do.body74, !dbg !12734

do.body74:                                        ; preds = %do.body68
  br label %do.body75, !dbg !12735

do.body75:                                        ; preds = %do.body74
  br label %do.body76, !dbg !12736

do.body76:                                        ; preds = %do.body75
  call void @llvm.dbg.declare(metadata i64* %__dummy77, metadata !12738, metadata !DIExpression()), !dbg !12741
  call void @llvm.dbg.declare(metadata i64* %__dummy278, metadata !12742, metadata !DIExpression()), !dbg !12741
  %cmp79 = icmp eq i64* %__dummy77, %__dummy278, !dbg !12741
  %conv80 = zext i1 %cmp79 to i32, !dbg !12741
  store i32 1, i32* %tmp81, align 4, !dbg !12741
  %72 = load i32, i32* %tmp81, align 4, !dbg !12741
  %call82 = call i64 @arch_local_irq_save() #11, !dbg !12743
  store i64 %call82, i64* %flags, align 8, !dbg !12743
  br label %do.end83, !dbg !12743

do.end83:                                         ; preds = %do.body76
  br label %do.end84, !dbg !12736

do.end84:                                         ; preds = %do.end83
  br label %do.body85, !dbg !12735

do.body85:                                        ; preds = %do.end84
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12744, !srcloc !12745
  br label %do.body86, !dbg !12744

do.body86:                                        ; preds = %do.body85
  %73 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12746
  %lock87 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %73, i32 0, i32 12, !dbg !12746
  store %struct.spinlock* %lock87, %struct.spinlock** %lock.addr.i140, align 8
  %74 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i140, align 8, !dbg !12747
  %75 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %74, i32 0, i32 0, !dbg !12748
  %rlock.i141 = bitcast %union.anon.2* %75 to %struct.raw_spinlock*, !dbg !12748
  br label %do.end89, !dbg !12746

do.end89:                                         ; preds = %do.body86
  br label %do.end90, !dbg !12744

do.end90:                                         ; preds = %do.end89
  br label %do.end91, !dbg !12735

do.end91:                                         ; preds = %do.end90
  br label %do.end92, !dbg !12734

do.end92:                                         ; preds = %do.end91
  br label %do.end93, !dbg !12729

do.end93:                                         ; preds = %do.end92
  %76 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12749
  %77 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12750
  call void @xhci_free_device_endpoint_resources(%struct.xhci_hcd* %76, %struct.xhci_virt_device* %77, i1 zeroext false) #11, !dbg !12751
  %78 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12752
  %lock94 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %78, i32 0, i32 12, !dbg !12753
  %79 = load i64, i64* %flags, align 8, !dbg !12754
  store %struct.spinlock* %lock94, %struct.spinlock** %lock.addr.i142, align 8
  store i64 %79, i64* %flags.addr.i143, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !12755
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !12755
  store i32 1, i32* %tmp.i144, align 4, !dbg !12755
  %80 = load i32, i32* %tmp.i144, align 4, !dbg !12755
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !12756
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !12756
  store i32 1, i32* %tmp8.i145, align 4, !dbg !12756
  %81 = load i32, i32* %tmp8.i145, align 4, !dbg !12756
  %82 = load i64, i64* %flags.addr.i143, align 8, !dbg !12757
  call void @arch_local_irq_restore(i64 %82) #13, !dbg !12757
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !12758, !srcloc !6814
  %83 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i142, align 8, !dbg !12759
  %84 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %83, i32 0, i32 0, !dbg !12759
  %rlock.i146 = bitcast %union.anon.2* %84 to %struct.raw_spinlock*, !dbg !12759
  br label %if.end95, !dbg !12760

if.end95:                                         ; preds = %do.end93, %sw.epilog
  store i32 1, i32* %i, align 4, !dbg !12761
  br label %for.cond, !dbg !12763

for.cond:                                         ; preds = %for.inc, %if.end95
  %85 = load i32, i32* %i, align 4, !dbg !12764
  %cmp96 = icmp slt i32 %85, 31, !dbg !12766
  br i1 %cmp96, label %for.body, label %for.end, !dbg !12767

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_ep** %ep, metadata !12768, metadata !DIExpression()), !dbg !12770
  %86 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12771
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %86, i32 0, i32 3, !dbg !12772
  %87 = load i32, i32* %i, align 4, !dbg !12773
  %idxprom98 = sext i32 %87 to i64, !dbg !12771
  %arrayidx99 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom98, !dbg !12771
  store %struct.xhci_virt_ep* %arrayidx99, %struct.xhci_virt_ep** %ep, align 8, !dbg !12770
  %88 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !12774
  %ep_state = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %88, i32 0, i32 3, !dbg !12776
  %89 = load i32, i32* %ep_state, align 8, !dbg !12776
  %and100 = and i32 %89, 16, !dbg !12777
  %tobool101 = icmp ne i32 %and100, 0, !dbg !12777
  br i1 %tobool101, label %if.then102, label %if.end110, !dbg !12778

if.then102:                                       ; preds = %for.body
  %90 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12779
  %call103 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %90) #11, !dbg !12779
  %self104 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call103, i32 0, i32 0, !dbg !12779
  %controller105 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self104, i32 0, i32 0, !dbg !12779
  %91 = load %struct.device*, %struct.device** %controller105, align 8, !dbg !12779
  %92 = load i32, i32* %i, align 4, !dbg !12779
  %call106 = call i32 @xhci_get_endpoint_address(i32 %92) #11, !dbg !12779
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %91, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.135, i64 0, i64 0), i32 %call106) #12, !dbg !12779
  %93 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12781
  %94 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !12782
  %stream_info = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %94, i32 0, i32 1, !dbg !12783
  %95 = load %struct.xhci_stream_info*, %struct.xhci_stream_info** %stream_info, align 8, !dbg !12783
  call void @xhci_free_stream_info(%struct.xhci_hcd* %93, %struct.xhci_stream_info* %95) #11, !dbg !12784
  %96 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !12785
  %stream_info107 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %96, i32 0, i32 1, !dbg !12786
  store %struct.xhci_stream_info* null, %struct.xhci_stream_info** %stream_info107, align 8, !dbg !12787
  %97 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !12788
  %ep_state108 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %97, i32 0, i32 3, !dbg !12789
  %98 = load i32, i32* %ep_state108, align 8, !dbg !12790
  %and109 = and i32 %98, -17, !dbg !12790
  store i32 %and109, i32* %ep_state108, align 8, !dbg !12790
  br label %if.end110, !dbg !12791

if.end110:                                        ; preds = %if.then102, %for.body
  %99 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !12792
  %ring = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %99, i32 0, i32 0, !dbg !12794
  %100 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !12794
  %tobool111 = icmp ne %struct.xhci_ring* %100, null, !dbg !12792
  br i1 %tobool111, label %if.then112, label %if.end113, !dbg !12795

if.then112:                                       ; preds = %if.end110
  %101 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12796
  %102 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12798
  %103 = load i32, i32* %i, align 4, !dbg !12799
  call void @xhci_debugfs_remove_endpoint(%struct.xhci_hcd* %101, %struct.xhci_virt_device* %102, i32 %103) #11, !dbg !12800
  %104 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12801
  %105 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12802
  %106 = load i32, i32* %i, align 4, !dbg !12803
  call void @xhci_free_endpoint_ring(%struct.xhci_hcd* %104, %struct.xhci_virt_device* %105, i32 %106) #11, !dbg !12804
  br label %if.end113, !dbg !12805

if.end113:                                        ; preds = %if.then112, %if.end110
  %107 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12806
  %eps114 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %107, i32 0, i32 3, !dbg !12808
  %108 = load i32, i32* %i, align 4, !dbg !12809
  %idxprom115 = sext i32 %108 to i64, !dbg !12806
  %arrayidx116 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps114, i64 0, i64 %idxprom115, !dbg !12806
  %bw_endpoint_list = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx116, i32 0, i32 11, !dbg !12810
  %call117 = call i32 @list_empty(%struct.list_head* %bw_endpoint_list) #11, !dbg !12811
  %tobool118 = icmp ne i32 %call117, 0, !dbg !12811
  br i1 %tobool118, label %if.end127, label %if.then119, !dbg !12812

if.then119:                                       ; preds = %if.end113
  %109 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12813
  %110 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12814
  %eps120 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %110, i32 0, i32 3, !dbg !12815
  %111 = load i32, i32* %i, align 4, !dbg !12816
  %idxprom121 = sext i32 %111 to i64, !dbg !12814
  %arrayidx122 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps120, i64 0, i64 %idxprom121, !dbg !12814
  %bw_info = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx122, i32 0, i32 10, !dbg !12817
  %112 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12818
  %bw_table = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %112, i32 0, i32 6, !dbg !12819
  %113 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table, align 8, !dbg !12819
  %114 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12820
  %115 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12821
  %eps123 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %115, i32 0, i32 3, !dbg !12822
  %116 = load i32, i32* %i, align 4, !dbg !12823
  %idxprom124 = sext i32 %116 to i64, !dbg !12821
  %arrayidx125 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps123, i64 0, i64 %idxprom124, !dbg !12821
  %117 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12824
  %tt_info126 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %117, i32 0, i32 7, !dbg !12825
  %118 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info126, align 8, !dbg !12825
  call void @xhci_drop_ep_from_interval_table(%struct.xhci_hcd* %109, %struct.xhci_bw_info* %bw_info, %struct.xhci_interval_bw_table* %113, %struct.usb_device* %114, %struct.xhci_virt_ep* %arrayidx125, %struct.xhci_tt_bw_info* %118) #11, !dbg !12826
  br label %if.end127, !dbg !12826

if.end127:                                        ; preds = %if.then119, %if.end113
  %119 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12827
  %eps128 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %119, i32 0, i32 3, !dbg !12828
  %120 = load i32, i32* %i, align 4, !dbg !12829
  %idxprom129 = sext i32 %120 to i64, !dbg !12827
  %arrayidx130 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps128, i64 0, i64 %idxprom129, !dbg !12827
  %bw_info131 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx130, i32 0, i32 10, !dbg !12830
  call void @xhci_clear_endpoint_bw_info(%struct.xhci_bw_info* %bw_info131) #11, !dbg !12831
  br label %for.inc, !dbg !12832

for.inc:                                          ; preds = %if.end127
  %121 = load i32, i32* %i, align 4, !dbg !12833
  %inc = add i32 %121, 1, !dbg !12833
  store i32 %inc, i32* %i, align 4, !dbg !12833
  br label %for.cond, !dbg !12834, !llvm.loop !12835

for.end:                                          ; preds = %for.cond
  %122 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12837
  %123 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12838
  %124 = load i32, i32* %old_active_eps, align 4, !dbg !12839
  call void @xhci_update_tt_active_eps(%struct.xhci_hcd* %122, %struct.xhci_virt_device* %123, i32 %124) #11, !dbg !12840
  %125 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !12841
  %flags132 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %125, i32 0, i32 8, !dbg !12842
  store i64 0, i64* %flags132, align 8, !dbg !12843
  store i32 0, i32* %ret, align 4, !dbg !12844
  br label %command_cleanup, !dbg !12845

command_cleanup:                                  ; preds = %for.end, %if.end60, %sw.bb55, %sw.bb, %if.then50
  call void @llvm.dbg.label(metadata !12846), !dbg !12847
  %126 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12848
  %127 = load %struct.xhci_command*, %struct.xhci_command** %reset_device_cmd, align 8, !dbg !12849
  call void @xhci_free_command(%struct.xhci_hcd* %126, %struct.xhci_command* %127) #11, !dbg !12850
  %128 = load i32, i32* %ret, align 4, !dbg !12851
  store i32 %128, i32* %retval, align 4, !dbg !12852
  br label %return, !dbg !12852

return:                                           ; preds = %command_cleanup, %if.then26, %if.then22, %if.else18, %if.then17, %if.else, %if.then6, %if.then
  %129 = load i32, i32* %retval, align 4, !dbg !12853
  ret i32 %129, !dbg !12853
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_update_device(%struct.usb_hcd* %hcd, %struct.usb_device* %udev) #1 !dbg !12854 {
entry:
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %portnum = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !12855, metadata !DIExpression()), !dbg !12856
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !12857, metadata !DIExpression()), !dbg !12858
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !12859, metadata !DIExpression()), !dbg !12860
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !12861
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !12862
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !12860
  call void @llvm.dbg.declare(metadata i32* %portnum, metadata !12863, metadata !DIExpression()), !dbg !12864
  %1 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12865
  %portnum1 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 24, !dbg !12866
  %2 = load i8, i8* %portnum1, align 2, !dbg !12866
  %conv = zext i8 %2 to i32, !dbg !12865
  %sub = sub i32 %conv, 1, !dbg !12867
  store i32 %sub, i32* %portnum, align 4, !dbg !12864
  %3 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !12868
  %speed = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %3, i32 0, i32 3, !dbg !12870
  %4 = load i32, i32* %speed, align 8, !dbg !12870
  %cmp = icmp sge i32 %4, 64, !dbg !12871
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12872

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12873
  %lpm_capable = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 27, !dbg !12874
  %bf.load = load i16, i16* %lpm_capable, align 1, !dbg !12874
  %bf.lshr = lshr i16 %bf.load, 6, !dbg !12874
  %bf.clear = and i16 %bf.lshr, 1, !dbg !12874
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12874
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !12873
  br i1 %tobool, label %if.end, label %if.then, !dbg !12875

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !12876
  br label %return, !dbg !12876

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12877
  %parent = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 11, !dbg !12879
  %7 = load %struct.usb_device*, %struct.usb_device** %parent, align 8, !dbg !12879
  %tobool3 = icmp ne %struct.usb_device* %7, null, !dbg !12877
  br i1 %tobool3, label %lor.lhs.false4, label %if.then12, !dbg !12880

lor.lhs.false4:                                   ; preds = %if.end
  %8 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12881
  %parent5 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %8, i32 0, i32 11, !dbg !12882
  %9 = load %struct.usb_device*, %struct.usb_device** %parent5, align 8, !dbg !12882
  %parent6 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %9, i32 0, i32 11, !dbg !12883
  %10 = load %struct.usb_device*, %struct.usb_device** %parent6, align 8, !dbg !12883
  %tobool7 = icmp ne %struct.usb_device* %10, null, !dbg !12881
  br i1 %tobool7, label %if.then12, label %lor.lhs.false8, !dbg !12884

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %11 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12885
  %descriptor = getelementptr inbounds %struct.usb_device, %struct.usb_device* %11, i32 0, i32 15, !dbg !12886
  %bDeviceClass = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor, i32 0, i32 3, !dbg !12887
  %12 = load i8, i8* %bDeviceClass, align 4, !dbg !12887
  %conv9 = zext i8 %12 to i32, !dbg !12885
  %cmp10 = icmp eq i32 %conv9, 9, !dbg !12888
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !12889

if.then12:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %if.end
  store i32 0, i32* %retval, align 4, !dbg !12890
  br label %return, !dbg !12890

if.end13:                                         ; preds = %lor.lhs.false8
  %13 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12891
  %hw_lpm_support = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %13, i32 0, i32 56, !dbg !12893
  %bf.load14 = load i8, i8* %hw_lpm_support, align 8, !dbg !12893
  %bf.clear15 = and i8 %bf.load14, 1, !dbg !12893
  %bf.cast16 = zext i8 %bf.clear15 to i32, !dbg !12893
  %cmp17 = icmp eq i32 %bf.cast16, 1, !dbg !12894
  br i1 %cmp17, label %land.lhs.true, label %if.end32, !dbg !12895

land.lhs.true:                                    ; preds = %if.end13
  %14 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12896
  %15 = load i32, i32* %portnum, align 4, !dbg !12897
  %call19 = call i32 @xhci_check_usb2_port_capability(%struct.xhci_hcd* %14, i32 %15, i32 524288) #11, !dbg !12898
  %tobool20 = icmp ne i32 %call19, 0, !dbg !12898
  br i1 %tobool20, label %if.then21, label %if.end32, !dbg !12899

if.then21:                                        ; preds = %land.lhs.true
  %16 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12900
  %usb2_hw_lpm_capable = getelementptr inbounds %struct.usb_device, %struct.usb_device* %16, i32 0, i32 27, !dbg !12902
  %bf.load22 = load i16, i16* %usb2_hw_lpm_capable, align 1, !dbg !12903
  %bf.clear23 = and i16 %bf.load22, -129, !dbg !12903
  %bf.set = or i16 %bf.clear23, 128, !dbg !12903
  store i16 %bf.set, i16* %usb2_hw_lpm_capable, align 1, !dbg !12903
  %17 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12904
  %l1_params = getelementptr inbounds %struct.usb_device, %struct.usb_device* %17, i32 0, i32 46, !dbg !12905
  %timeout = getelementptr inbounds %struct.usb2_lpm_parameters, %struct.usb2_lpm_parameters* %l1_params, i32 0, i32 1, !dbg !12906
  store i32 512, i32* %timeout, align 4, !dbg !12907
  %18 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12908
  %l1_params24 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 46, !dbg !12909
  %besl = getelementptr inbounds %struct.usb2_lpm_parameters, %struct.usb2_lpm_parameters* %l1_params24, i32 0, i32 0, !dbg !12910
  store i32 4, i32* %besl, align 8, !dbg !12911
  %19 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12912
  %20 = load i32, i32* %portnum, align 4, !dbg !12914
  %call25 = call i32 @xhci_check_usb2_port_capability(%struct.xhci_hcd* %19, i32 %20, i32 1048576) #11, !dbg !12915
  %tobool26 = icmp ne i32 %call25, 0, !dbg !12915
  br i1 %tobool26, label %if.then27, label %if.end31, !dbg !12916

if.then27:                                        ; preds = %if.then21
  %21 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !12917
  %usb2_hw_lpm_besl_capable = getelementptr inbounds %struct.usb_device, %struct.usb_device* %21, i32 0, i32 27, !dbg !12918
  %bf.load28 = load i16, i16* %usb2_hw_lpm_besl_capable, align 1, !dbg !12919
  %bf.clear29 = and i16 %bf.load28, -257, !dbg !12919
  %bf.set30 = or i16 %bf.clear29, 256, !dbg !12919
  store i16 %bf.set30, i16* %usb2_hw_lpm_besl_capable, align 1, !dbg !12919
  br label %if.end31, !dbg !12917

if.end31:                                         ; preds = %if.then27, %if.then21
  br label %if.end32, !dbg !12920

if.end32:                                         ; preds = %if.end31, %land.lhs.true, %if.end13
  store i32 0, i32* %retval, align 4, !dbg !12921
  br label %return, !dbg !12921

return:                                           ; preds = %if.end32, %if.then12, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !12922
  ret i32 %22, !dbg !12922
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_set_usb2_hardware_lpm(%struct.usb_hcd* %hcd, %struct.usb_device* %udev, i32 %enable) #1 !dbg !12923 {
entry:
  %lock.addr.i188 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i188, metadata !6665, metadata !DIExpression()), !dbg !12924
  %flags.addr.i189 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i189, metadata !6671, metadata !DIExpression()), !dbg !12930
  %tmp.i190 = alloca i32, align 4
  %tmp8.i191 = alloca i32, align 4
  %lock.addr.i186 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i186, metadata !6673, metadata !DIExpression()), !dbg !12931
  %lock.addr.i181 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i181, metadata !6665, metadata !DIExpression()), !dbg !12941
  %flags.addr.i182 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i182, metadata !6671, metadata !DIExpression()), !dbg !12943
  %tmp.i183 = alloca i32, align 4
  %tmp8.i184 = alloca i32, align 4
  %lock.addr.i179 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i179, metadata !6665, metadata !DIExpression()), !dbg !12944
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !12946
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !12947
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %enable.addr = alloca i32, align 4
  %xhci = alloca %struct.xhci_hcd*, align 8
  %ports = alloca %struct.xhci_port**, align 8
  %pm_addr = alloca i32*, align 8
  %hlpm_addr = alloca i32*, align 8
  %pm_val = alloca i32, align 4
  %hlpm_val = alloca i32, align 4
  %field = alloca i32, align 4
  %port_num = alloca i32, align 4
  %flags = alloca i64, align 8
  %hird = alloca i32, align 4
  %exit_latency = alloca i32, align 4
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy33 = alloca i64, align 8
  %__dummy234 = alloca i64, align 8
  %tmp37 = alloca i32, align 4
  %__dummy82 = alloca i64, align 8
  %__dummy283 = alloca i64, align 8
  %tmp86 = alloca i32, align 4
  %__dummy90 = alloca i64, align 8
  %__dummy291 = alloca i64, align 8
  %tmp94 = alloca i32, align 4
  %__timeout_us = alloca i64, align 8
  %__sleep_us = alloca i64, align 8
  %__timeout = alloca i64, align 8
  %tmp172 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !12954, metadata !DIExpression()), !dbg !12955
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !12956, metadata !DIExpression()), !dbg !12957
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !12958, metadata !DIExpression()), !dbg !12959
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !12960, metadata !DIExpression()), !dbg !12961
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !12962
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !12963
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !12961
  call void @llvm.dbg.declare(metadata %struct.xhci_port*** %ports, metadata !12964, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.declare(metadata i32** %pm_addr, metadata !12966, metadata !DIExpression()), !dbg !12967
  call void @llvm.dbg.declare(metadata i32** %hlpm_addr, metadata !12968, metadata !DIExpression()), !dbg !12969
  call void @llvm.dbg.declare(metadata i32* %pm_val, metadata !12970, metadata !DIExpression()), !dbg !12971
  call void @llvm.dbg.declare(metadata i32* %hlpm_val, metadata !12972, metadata !DIExpression()), !dbg !12973
  call void @llvm.dbg.declare(metadata i32* %field, metadata !12974, metadata !DIExpression()), !dbg !12975
  call void @llvm.dbg.declare(metadata i32* %port_num, metadata !12976, metadata !DIExpression()), !dbg !12977
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12978, metadata !DIExpression()), !dbg !12979
  call void @llvm.dbg.declare(metadata i32* %hird, metadata !12980, metadata !DIExpression()), !dbg !12981
  call void @llvm.dbg.declare(metadata i32* %exit_latency, metadata !12982, metadata !DIExpression()), !dbg !12983
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12984, metadata !DIExpression()), !dbg !12985
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12986
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %1, i32 0, i32 50, !dbg !12988
  %2 = load i64, i64* %quirks, align 8, !dbg !12988
  %and = and i64 %2, 536870912, !dbg !12989
  %tobool = icmp ne i64 %and, 0, !dbg !12989
  br i1 %tobool, label %if.then, label %if.end, !dbg !12990

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !12991
  br label %return, !dbg !12991

if.end:                                           ; preds = %entry
  %3 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !12992
  %speed = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %3, i32 0, i32 3, !dbg !12994
  %4 = load i32, i32* %speed, align 8, !dbg !12994
  %cmp = icmp sge i32 %4, 64, !dbg !12995
  br i1 %cmp, label %if.then7, label %lor.lhs.false, !dbg !12996

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !12997
  %hw_lpm_support = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 56, !dbg !12998
  %bf.load = load i8, i8* %hw_lpm_support, align 8, !dbg !12998
  %bf.clear = and i8 %bf.load, 1, !dbg !12998
  %bf.cast = zext i8 %bf.clear to i32, !dbg !12998
  %tobool1 = icmp ne i32 %bf.cast, 0, !dbg !12997
  br i1 %tobool1, label %lor.lhs.false2, label %if.then7, !dbg !12999

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %6 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13000
  %lpm_capable = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 27, !dbg !13001
  %bf.load3 = load i16, i16* %lpm_capable, align 1, !dbg !13001
  %bf.lshr = lshr i16 %bf.load3, 6, !dbg !13001
  %bf.clear4 = and i16 %bf.lshr, 1, !dbg !13001
  %bf.cast5 = zext i16 %bf.clear4 to i32, !dbg !13001
  %tobool6 = icmp ne i32 %bf.cast5, 0, !dbg !13000
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !13002

if.then7:                                         ; preds = %lor.lhs.false2, %lor.lhs.false, %if.end
  store i32 -1, i32* %retval, align 4, !dbg !13003
  br label %return, !dbg !13003

if.end8:                                          ; preds = %lor.lhs.false2
  %7 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13004
  %parent = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 11, !dbg !13006
  %8 = load %struct.usb_device*, %struct.usb_device** %parent, align 8, !dbg !13006
  %tobool9 = icmp ne %struct.usb_device* %8, null, !dbg !13004
  br i1 %tobool9, label %lor.lhs.false10, label %if.then17, !dbg !13007

lor.lhs.false10:                                  ; preds = %if.end8
  %9 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13008
  %parent11 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %9, i32 0, i32 11, !dbg !13009
  %10 = load %struct.usb_device*, %struct.usb_device** %parent11, align 8, !dbg !13009
  %parent12 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %10, i32 0, i32 11, !dbg !13010
  %11 = load %struct.usb_device*, %struct.usb_device** %parent12, align 8, !dbg !13010
  %tobool13 = icmp ne %struct.usb_device* %11, null, !dbg !13008
  br i1 %tobool13, label %if.then17, label %lor.lhs.false14, !dbg !13011

lor.lhs.false14:                                  ; preds = %lor.lhs.false10
  %12 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13012
  %descriptor = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 15, !dbg !13013
  %bDeviceClass = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor, i32 0, i32 3, !dbg !13014
  %13 = load i8, i8* %bDeviceClass, align 4, !dbg !13014
  %conv = zext i8 %13 to i32, !dbg !13012
  %cmp15 = icmp eq i32 %conv, 9, !dbg !13015
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !13016

if.then17:                                        ; preds = %lor.lhs.false14, %lor.lhs.false10, %if.end8
  store i32 -1, i32* %retval, align 4, !dbg !13017
  br label %return, !dbg !13017

if.end18:                                         ; preds = %lor.lhs.false14
  %14 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13018
  %usb2_hw_lpm_capable = getelementptr inbounds %struct.usb_device, %struct.usb_device* %14, i32 0, i32 27, !dbg !13020
  %bf.load19 = load i16, i16* %usb2_hw_lpm_capable, align 1, !dbg !13020
  %bf.lshr20 = lshr i16 %bf.load19, 7, !dbg !13020
  %bf.clear21 = and i16 %bf.lshr20, 1, !dbg !13020
  %bf.cast22 = zext i16 %bf.clear21 to i32, !dbg !13020
  %cmp23 = icmp ne i32 %bf.cast22, 1, !dbg !13021
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !13022

if.then25:                                        ; preds = %if.end18
  store i32 -1, i32* %retval, align 4, !dbg !13023
  br label %return, !dbg !13023

if.end26:                                         ; preds = %if.end18
  br label %do.body, !dbg !13024

do.body:                                          ; preds = %if.end26
  br label %do.body27, !dbg !13025

do.body27:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13026, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13029, metadata !DIExpression()), !dbg !13028
  %cmp28 = icmp eq i64* %__dummy, %__dummy2, !dbg !13028
  %conv29 = zext i1 %cmp28 to i32, !dbg !13028
  store i32 1, i32* %tmp, align 4, !dbg !13028
  %15 = load i32, i32* %tmp, align 4, !dbg !13028
  br label %do.body30, !dbg !13030

do.body30:                                        ; preds = %do.body27
  br label %do.body31, !dbg !13031

do.body31:                                        ; preds = %do.body30
  br label %do.body32, !dbg !13032

do.body32:                                        ; preds = %do.body31
  call void @llvm.dbg.declare(metadata i64* %__dummy33, metadata !13034, metadata !DIExpression()), !dbg !13037
  call void @llvm.dbg.declare(metadata i64* %__dummy234, metadata !13038, metadata !DIExpression()), !dbg !13037
  %cmp35 = icmp eq i64* %__dummy33, %__dummy234, !dbg !13037
  %conv36 = zext i1 %cmp35 to i32, !dbg !13037
  store i32 1, i32* %tmp37, align 4, !dbg !13037
  %16 = load i32, i32* %tmp37, align 4, !dbg !13037
  %call38 = call i64 @arch_local_irq_save() #11, !dbg !13039
  store i64 %call38, i64* %flags, align 8, !dbg !13039
  br label %do.end, !dbg !13039

do.end:                                           ; preds = %do.body32
  br label %do.end39, !dbg !13032

do.end39:                                         ; preds = %do.end
  br label %do.body40, !dbg !13031

do.body40:                                        ; preds = %do.end39
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13040, !srcloc !13041
  br label %do.body41, !dbg !13040

do.body41:                                        ; preds = %do.body40
  %17 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13042
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %17, i32 0, i32 12, !dbg !13042
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13043
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !13044
  %rlock.i = bitcast %union.anon.2* %19 to %struct.raw_spinlock*, !dbg !13044
  br label %do.end43, !dbg !13042

do.end43:                                         ; preds = %do.body41
  br label %do.end44, !dbg !13040

do.end44:                                         ; preds = %do.end43
  br label %do.end45, !dbg !13031

do.end45:                                         ; preds = %do.end44
  br label %do.end46, !dbg !13030

do.end46:                                         ; preds = %do.end45
  br label %do.end47, !dbg !13025

do.end47:                                         ; preds = %do.end46
  %20 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13045
  %usb2_rhub = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %20, i32 0, i32 54, !dbg !13046
  %ports48 = getelementptr inbounds %struct.xhci_hub, %struct.xhci_hub* %usb2_rhub, i32 0, i32 0, !dbg !13047
  %21 = load %struct.xhci_port**, %struct.xhci_port*** %ports48, align 8, !dbg !13047
  store %struct.xhci_port** %21, %struct.xhci_port*** %ports, align 8, !dbg !13048
  %22 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13049
  %portnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %22, i32 0, i32 24, !dbg !13050
  %23 = load i8, i8* %portnum, align 2, !dbg !13050
  %conv49 = zext i8 %23 to i32, !dbg !13049
  %sub = sub i32 %conv49, 1, !dbg !13051
  store i32 %sub, i32* %port_num, align 4, !dbg !13052
  %24 = load %struct.xhci_port**, %struct.xhci_port*** %ports, align 8, !dbg !13053
  %25 = load i32, i32* %port_num, align 4, !dbg !13054
  %idxprom = zext i32 %25 to i64, !dbg !13053
  %arrayidx = getelementptr %struct.xhci_port*, %struct.xhci_port** %24, i64 %idxprom, !dbg !13053
  %26 = load %struct.xhci_port*, %struct.xhci_port** %arrayidx, align 8, !dbg !13053
  %addr = getelementptr inbounds %struct.xhci_port, %struct.xhci_port* %26, i32 0, i32 0, !dbg !13055
  %27 = load i32*, i32** %addr, align 8, !dbg !13055
  %add.ptr = getelementptr i32, i32* %27, i64 1, !dbg !13056
  store i32* %add.ptr, i32** %pm_addr, align 8, !dbg !13057
  %28 = load i32*, i32** %pm_addr, align 8, !dbg !13058
  %29 = bitcast i32* %28 to i8*, !dbg !13058
  %call50 = call i32 @readl(i8* %29) #11, !dbg !13059
  store i32 %call50, i32* %pm_val, align 4, !dbg !13060
  %30 = load %struct.xhci_port**, %struct.xhci_port*** %ports, align 8, !dbg !13061
  %31 = load i32, i32* %port_num, align 4, !dbg !13062
  %idxprom51 = zext i32 %31 to i64, !dbg !13061
  %arrayidx52 = getelementptr %struct.xhci_port*, %struct.xhci_port** %30, i64 %idxprom51, !dbg !13061
  %32 = load %struct.xhci_port*, %struct.xhci_port** %arrayidx52, align 8, !dbg !13061
  %addr53 = getelementptr inbounds %struct.xhci_port, %struct.xhci_port* %32, i32 0, i32 0, !dbg !13063
  %33 = load i32*, i32** %addr53, align 8, !dbg !13063
  %add.ptr54 = getelementptr i32, i32* %33, i64 3, !dbg !13064
  store i32* %add.ptr54, i32** %hlpm_addr, align 8, !dbg !13065
  %34 = load i32, i32* %enable.addr, align 4, !dbg !13066
  %tobool55 = icmp ne i32 %34, 0, !dbg !13066
  br i1 %tobool55, label %if.then56, label %if.else121, !dbg !13067

if.then56:                                        ; preds = %do.end47
  %35 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13068
  %usb2_hw_lpm_besl_capable = getelementptr inbounds %struct.usb_device, %struct.usb_device* %35, i32 0, i32 27, !dbg !13069
  %bf.load57 = load i16, i16* %usb2_hw_lpm_besl_capable, align 1, !dbg !13069
  %bf.lshr58 = lshr i16 %bf.load57, 8, !dbg !13069
  %bf.clear59 = and i16 %bf.lshr58, 1, !dbg !13069
  %bf.cast60 = zext i16 %bf.clear59 to i32, !dbg !13069
  %tobool61 = icmp ne i32 %bf.cast60, 0, !dbg !13068
  br i1 %tobool61, label %if.then62, label %if.else109, !dbg !13070

if.then62:                                        ; preds = %if.then56
  %36 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13071
  %bos = getelementptr inbounds %struct.usb_device, %struct.usb_device* %36, i32 0, i32 17, !dbg !13071
  %37 = load %struct.usb_host_bos*, %struct.usb_host_bos** %bos, align 8, !dbg !13071
  %ext_cap = getelementptr inbounds %struct.usb_host_bos, %struct.usb_host_bos* %37, i32 0, i32 1, !dbg !13071
  %38 = load %struct.usb_ext_cap_descriptor*, %struct.usb_ext_cap_descriptor** %ext_cap, align 8, !dbg !13071
  %bmAttributes = getelementptr inbounds %struct.usb_ext_cap_descriptor, %struct.usb_ext_cap_descriptor* %38, i32 0, i32 3, !dbg !13071
  %39 = load i32, i32* %bmAttributes, align 1, !dbg !13071
  store i32 %39, i32* %field, align 4, !dbg !13072
  %40 = load i32, i32* %field, align 4, !dbg !13073
  %and63 = and i32 %40, 4, !dbg !13075
  %tobool64 = icmp ne i32 %and63, 0, !dbg !13075
  br i1 %tobool64, label %land.lhs.true, label %if.else, !dbg !13076

land.lhs.true:                                    ; preds = %if.then62
  %41 = load i32, i32* %field, align 4, !dbg !13077
  %and65 = and i32 %41, 8, !dbg !13078
  %tobool66 = icmp ne i32 %and65, 0, !dbg !13078
  br i1 %tobool66, label %if.then67, label %if.else, !dbg !13079

if.then67:                                        ; preds = %land.lhs.true
  %42 = load i32, i32* %field, align 4, !dbg !13080
  %and68 = and i32 %42, 3840, !dbg !13080
  %shr = lshr i32 %and68, 8, !dbg !13080
  store i32 %shr, i32* %hird, align 4, !dbg !13081
  br label %if.end69, !dbg !13082

if.else:                                          ; preds = %land.lhs.true, %if.then62
  %43 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13083
  %l1_params = getelementptr inbounds %struct.usb_device, %struct.usb_device* %43, i32 0, i32 46, !dbg !13084
  %besl = getelementptr inbounds %struct.usb2_lpm_parameters, %struct.usb2_lpm_parameters* %l1_params, i32 0, i32 0, !dbg !13085
  %44 = load i32, i32* %besl, align 8, !dbg !13085
  store i32 %44, i32* %hird, align 4, !dbg !13086
  br label %if.end69

if.end69:                                         ; preds = %if.else, %if.then67
  %45 = load i32, i32* %hird, align 4, !dbg !13087
  %idxprom70 = sext i32 %45 to i64, !dbg !13088
  %arrayidx71 = getelementptr [16 x i32], [16 x i32]* @xhci_besl_encoding, i64 0, i64 %idxprom70, !dbg !13088
  %46 = load i32, i32* %arrayidx71, align 4, !dbg !13088
  store i32 %46, i32* %exit_latency, align 4, !dbg !13089
  %47 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13090
  %lock72 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %47, i32 0, i32 12, !dbg !13091
  %48 = load i64, i64* %flags, align 8, !dbg !13092
  store %struct.spinlock* %lock72, %struct.spinlock** %lock.addr.i181, align 8
  store i64 %48, i64* %flags.addr.i182, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !13093
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !13093
  store i32 1, i32* %tmp.i183, align 4, !dbg !13093
  %49 = load i32, i32* %tmp.i183, align 4, !dbg !13093
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !13094
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !13094
  store i32 1, i32* %tmp8.i184, align 4, !dbg !13094
  %50 = load i32, i32* %tmp8.i184, align 4, !dbg !13094
  %51 = load i64, i64* %flags.addr.i182, align 8, !dbg !13095
  call void @arch_local_irq_restore(i64 %51) #13, !dbg !13095
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13096, !srcloc !6814
  %52 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i181, align 8, !dbg !13097
  %53 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %52, i32 0, i32 0, !dbg !13097
  %rlock.i185 = bitcast %union.anon.2* %53 to %struct.raw_spinlock*, !dbg !13097
  %54 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !13098
  %bandwidth_mutex = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %54, i32 0, i32 23, !dbg !13099
  %55 = load %struct.mutex*, %struct.mutex** %bandwidth_mutex, align 8, !dbg !13099
  call void @mutex_lock(%struct.mutex* %55) #11, !dbg !13100
  %56 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13101
  %57 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13102
  %58 = load i32, i32* %exit_latency, align 4, !dbg !13103
  %conv73 = trunc i32 %58 to i16, !dbg !13103
  %call74 = call i32 @xhci_change_max_exit_latency(%struct.xhci_hcd* %56, %struct.usb_device* %57, i16 zeroext %conv73) #11, !dbg !13104
  store i32 %call74, i32* %ret, align 4, !dbg !13105
  %59 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !13106
  %bandwidth_mutex75 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %59, i32 0, i32 23, !dbg !13107
  %60 = load %struct.mutex*, %struct.mutex** %bandwidth_mutex75, align 8, !dbg !13107
  call void @mutex_unlock(%struct.mutex* %60) #11, !dbg !13108
  %61 = load i32, i32* %ret, align 4, !dbg !13109
  %cmp76 = icmp slt i32 %61, 0, !dbg !13111
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !13112

if.then78:                                        ; preds = %if.end69
  %62 = load i32, i32* %ret, align 4, !dbg !13113
  store i32 %62, i32* %retval, align 4, !dbg !13114
  br label %return, !dbg !13114

if.end79:                                         ; preds = %if.end69
  br label %do.body80, !dbg !13115

do.body80:                                        ; preds = %if.end79
  br label %do.body81, !dbg !13116

do.body81:                                        ; preds = %do.body80
  call void @llvm.dbg.declare(metadata i64* %__dummy82, metadata !13117, metadata !DIExpression()), !dbg !13119
  call void @llvm.dbg.declare(metadata i64* %__dummy283, metadata !13120, metadata !DIExpression()), !dbg !13119
  %cmp84 = icmp eq i64* %__dummy82, %__dummy283, !dbg !13119
  %conv85 = zext i1 %cmp84 to i32, !dbg !13119
  store i32 1, i32* %tmp86, align 4, !dbg !13119
  %63 = load i32, i32* %tmp86, align 4, !dbg !13119
  br label %do.body87, !dbg !13121

do.body87:                                        ; preds = %do.body81
  br label %do.body88, !dbg !13122

do.body88:                                        ; preds = %do.body87
  br label %do.body89, !dbg !13123

do.body89:                                        ; preds = %do.body88
  call void @llvm.dbg.declare(metadata i64* %__dummy90, metadata !13125, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.declare(metadata i64* %__dummy291, metadata !13129, metadata !DIExpression()), !dbg !13128
  %cmp92 = icmp eq i64* %__dummy90, %__dummy291, !dbg !13128
  %conv93 = zext i1 %cmp92 to i32, !dbg !13128
  store i32 1, i32* %tmp94, align 4, !dbg !13128
  %64 = load i32, i32* %tmp94, align 4, !dbg !13128
  %call95 = call i64 @arch_local_irq_save() #11, !dbg !13130
  store i64 %call95, i64* %flags, align 8, !dbg !13130
  br label %do.end96, !dbg !13130

do.end96:                                         ; preds = %do.body89
  br label %do.end97, !dbg !13123

do.end97:                                         ; preds = %do.end96
  br label %do.body98, !dbg !13122

do.body98:                                        ; preds = %do.end97
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13131, !srcloc !13132
  br label %do.body99, !dbg !13131

do.body99:                                        ; preds = %do.body98
  %65 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13133
  %lock100 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %65, i32 0, i32 12, !dbg !13133
  store %struct.spinlock* %lock100, %struct.spinlock** %lock.addr.i186, align 8
  %66 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i186, align 8, !dbg !13134
  %67 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %66, i32 0, i32 0, !dbg !13135
  %rlock.i187 = bitcast %union.anon.2* %67 to %struct.raw_spinlock*, !dbg !13135
  br label %do.end102, !dbg !13133

do.end102:                                        ; preds = %do.body99
  br label %do.end103, !dbg !13131

do.end103:                                        ; preds = %do.end102
  br label %do.end104, !dbg !13122

do.end104:                                        ; preds = %do.end103
  br label %do.end105, !dbg !13121

do.end105:                                        ; preds = %do.end104
  br label %do.end106, !dbg !13116

do.end106:                                        ; preds = %do.end105
  %68 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13136
  %call107 = call i32 @xhci_calculate_usb2_hw_lpm_params(%struct.usb_device* %68) #11, !dbg !13137
  store i32 %call107, i32* %hlpm_val, align 4, !dbg !13138
  %69 = load i32, i32* %hlpm_val, align 4, !dbg !13139
  %70 = load i32*, i32** %hlpm_addr, align 8, !dbg !13140
  %71 = bitcast i32* %70 to i8*, !dbg !13140
  call void @writel(i32 %69, i8* %71) #11, !dbg !13141
  %72 = load i32*, i32** %hlpm_addr, align 8, !dbg !13142
  %73 = bitcast i32* %72 to i8*, !dbg !13142
  %call108 = call i32 @readl(i8* %73) #11, !dbg !13143
  br label %if.end111, !dbg !13144

if.else109:                                       ; preds = %if.then56
  %74 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13145
  %75 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13147
  %call110 = call i32 @xhci_calculate_hird_besl(%struct.xhci_hcd* %74, %struct.usb_device* %75) #11, !dbg !13148
  store i32 %call110, i32* %hird, align 4, !dbg !13149
  br label %if.end111

if.end111:                                        ; preds = %if.else109, %do.end106
  %76 = load i32, i32* %pm_val, align 4, !dbg !13150
  %and112 = and i32 %76, -241, !dbg !13150
  store i32 %and112, i32* %pm_val, align 4, !dbg !13150
  %77 = load i32, i32* %hird, align 4, !dbg !13151
  %and113 = and i32 %77, 15, !dbg !13151
  %shl = shl i32 %and113, 4, !dbg !13151
  %or = or i32 %shl, 8, !dbg !13152
  %78 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13153
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %78, i32 0, i32 44, !dbg !13153
  %79 = load i32, i32* %slot_id, align 8, !dbg !13153
  %and114 = and i32 %79, 255, !dbg !13153
  %shl115 = shl i32 %and114, 8, !dbg !13153
  %or116 = or i32 %or, %shl115, !dbg !13154
  %80 = load i32, i32* %pm_val, align 4, !dbg !13155
  %or117 = or i32 %80, %or116, !dbg !13155
  store i32 %or117, i32* %pm_val, align 4, !dbg !13155
  %81 = load i32, i32* %pm_val, align 4, !dbg !13156
  %82 = load i32*, i32** %pm_addr, align 8, !dbg !13157
  %83 = bitcast i32* %82 to i8*, !dbg !13157
  call void @writel(i32 %81, i8* %83) #11, !dbg !13158
  %84 = load i32*, i32** %pm_addr, align 8, !dbg !13159
  %85 = bitcast i32* %84 to i8*, !dbg !13159
  %call118 = call i32 @readl(i8* %85) #11, !dbg !13160
  store i32 %call118, i32* %pm_val, align 4, !dbg !13161
  %86 = load i32, i32* %pm_val, align 4, !dbg !13162
  %or119 = or i32 %86, 65536, !dbg !13162
  store i32 %or119, i32* %pm_val, align 4, !dbg !13162
  %87 = load i32, i32* %pm_val, align 4, !dbg !13163
  %88 = load i32*, i32** %pm_addr, align 8, !dbg !13164
  %89 = bitcast i32* %88 to i8*, !dbg !13164
  call void @writel(i32 %87, i8* %89) #11, !dbg !13165
  %90 = load i32*, i32** %pm_addr, align 8, !dbg !13166
  %91 = bitcast i32* %90 to i8*, !dbg !13166
  %call120 = call i32 @readl(i8* %91) #11, !dbg !13167
  br label %if.end177, !dbg !13168

if.else121:                                       ; preds = %do.end47
  %92 = load i32, i32* %pm_val, align 4, !dbg !13169
  %and122 = and i32 %92, -131065, !dbg !13169
  store i32 %and122, i32* %pm_val, align 4, !dbg !13169
  %93 = load i32, i32* %pm_val, align 4, !dbg !13170
  %94 = load i32*, i32** %pm_addr, align 8, !dbg !13171
  %95 = bitcast i32* %94 to i8*, !dbg !13171
  call void @writel(i32 %93, i8* %95) #11, !dbg !13172
  %96 = load i32*, i32** %pm_addr, align 8, !dbg !13173
  %97 = bitcast i32* %96 to i8*, !dbg !13173
  %call123 = call i32 @readl(i8* %97) #11, !dbg !13174
  %98 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13175
  %usb2_hw_lpm_besl_capable124 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %98, i32 0, i32 27, !dbg !13176
  %bf.load125 = load i16, i16* %usb2_hw_lpm_besl_capable124, align 1, !dbg !13176
  %bf.lshr126 = lshr i16 %bf.load125, 8, !dbg !13176
  %bf.clear127 = and i16 %bf.lshr126, 1, !dbg !13176
  %bf.cast128 = zext i16 %bf.clear127 to i32, !dbg !13176
  %tobool129 = icmp ne i32 %bf.cast128, 0, !dbg !13175
  br i1 %tobool129, label %if.then130, label %if.end176, !dbg !13177

if.then130:                                       ; preds = %if.else121
  %99 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13178
  %lock131 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %99, i32 0, i32 12, !dbg !13179
  %100 = load i64, i64* %flags, align 8, !dbg !13180
  store %struct.spinlock* %lock131, %struct.spinlock** %lock.addr.i188, align 8
  store i64 %100, i64* %flags.addr.i189, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !13181
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !13181
  store i32 1, i32* %tmp.i190, align 4, !dbg !13181
  %101 = load i32, i32* %tmp.i190, align 4, !dbg !13181
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !13182
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !13182
  store i32 1, i32* %tmp8.i191, align 4, !dbg !13182
  %102 = load i32, i32* %tmp8.i191, align 4, !dbg !13182
  %103 = load i64, i64* %flags.addr.i189, align 8, !dbg !13183
  call void @arch_local_irq_restore(i64 %103) #13, !dbg !13183
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13184, !srcloc !6814
  %104 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i188, align 8, !dbg !13185
  %105 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %104, i32 0, i32 0, !dbg !13185
  %rlock.i192 = bitcast %union.anon.2* %105 to %struct.raw_spinlock*, !dbg !13185
  %106 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !13186
  %bandwidth_mutex132 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %106, i32 0, i32 23, !dbg !13187
  %107 = load %struct.mutex*, %struct.mutex** %bandwidth_mutex132, align 8, !dbg !13187
  call void @mutex_lock(%struct.mutex* %107) #11, !dbg !13188
  %108 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13189
  %109 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13190
  %call133 = call i32 @xhci_change_max_exit_latency(%struct.xhci_hcd* %108, %struct.usb_device* %109, i16 zeroext 0) #11, !dbg !13191
  %110 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !13192
  %bandwidth_mutex134 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %110, i32 0, i32 23, !dbg !13193
  %111 = load %struct.mutex*, %struct.mutex** %bandwidth_mutex134, align 8, !dbg !13193
  call void @mutex_unlock(%struct.mutex* %111) #11, !dbg !13194
  call void @llvm.dbg.declare(metadata i64* %__timeout_us, metadata !13195, metadata !DIExpression()), !dbg !13197
  store i64 10000, i64* %__timeout_us, align 8, !dbg !13197
  call void @llvm.dbg.declare(metadata i64* %__sleep_us, metadata !13198, metadata !DIExpression()), !dbg !13197
  store i64 100, i64* %__sleep_us, align 8, !dbg !13197
  call void @llvm.dbg.declare(metadata i64* %__timeout, metadata !13199, metadata !DIExpression()), !dbg !13197
  %call135 = call i64 @ktime_get() #11, !dbg !13197
  %112 = load i64, i64* %__timeout_us, align 8, !dbg !13197
  %call136 = call i64 @ktime_add_us(i64 %call135, i64 %112) #11, !dbg !13197
  store i64 %call136, i64* %__timeout, align 8, !dbg !13197
  br label %do.body137, !dbg !13197

do.body137:                                       ; preds = %if.then130
  %113 = load i64, i64* %__sleep_us, align 8, !dbg !13200
  %cmp138 = icmp ne i64 %113, 0, !dbg !13200
  br i1 %cmp138, label %if.then140, label %if.end145, !dbg !13203

if.then140:                                       ; preds = %do.body137
  br label %do.body141, !dbg !13200

do.body141:                                       ; preds = %if.then140
  br label %do.body142, !dbg !13204

do.body142:                                       ; preds = %do.body141
  br label %do.end143, !dbg !13206

do.end143:                                        ; preds = %do.body142
  br label %do.end144, !dbg !13204

do.end144:                                        ; preds = %do.end143
  br label %if.end145, !dbg !13204

if.end145:                                        ; preds = %do.end144, %do.body137
  br label %do.end146, !dbg !13203

do.end146:                                        ; preds = %if.end145
  br label %for.cond, !dbg !13197

for.cond:                                         ; preds = %if.end171, %do.end146
  %114 = load %struct.xhci_port**, %struct.xhci_port*** %ports, align 8, !dbg !13208
  %115 = load i32, i32* %port_num, align 4, !dbg !13208
  %idxprom147 = zext i32 %115 to i64, !dbg !13208
  %arrayidx148 = getelementptr %struct.xhci_port*, %struct.xhci_port** %114, i64 %idxprom147, !dbg !13208
  %116 = load %struct.xhci_port*, %struct.xhci_port** %arrayidx148, align 8, !dbg !13208
  %addr149 = getelementptr inbounds %struct.xhci_port, %struct.xhci_port* %116, i32 0, i32 0, !dbg !13208
  %117 = load i32*, i32** %addr149, align 8, !dbg !13208
  %118 = bitcast i32* %117 to i8*, !dbg !13208
  %call150 = call i32 @readl(i8* %118) #11, !dbg !13208
  store i32 %call150, i32* %pm_val, align 4, !dbg !13208
  %119 = load i32, i32* %pm_val, align 4, !dbg !13212
  %and151 = and i32 %119, 480, !dbg !13212
  %cmp152 = icmp eq i32 %and151, 0, !dbg !13212
  br i1 %cmp152, label %if.then154, label %if.end155, !dbg !13208

if.then154:                                       ; preds = %for.cond
  br label %for.end, !dbg !13212

if.end155:                                        ; preds = %for.cond
  %120 = load i64, i64* %__timeout_us, align 8, !dbg !13214
  %tobool156 = icmp ne i64 %120, 0, !dbg !13214
  br i1 %tobool156, label %land.lhs.true157, label %if.end167, !dbg !13214

land.lhs.true157:                                 ; preds = %if.end155
  %call158 = call i64 @ktime_get() #11, !dbg !13214
  %121 = load i64, i64* %__timeout, align 8, !dbg !13214
  %call159 = call i32 @ktime_compare(i64 %call158, i64 %121) #11, !dbg !13214
  %cmp160 = icmp sgt i32 %call159, 0, !dbg !13214
  br i1 %cmp160, label %if.then162, label %if.end167, !dbg !13208

if.then162:                                       ; preds = %land.lhs.true157
  %122 = load %struct.xhci_port**, %struct.xhci_port*** %ports, align 8, !dbg !13216
  %123 = load i32, i32* %port_num, align 4, !dbg !13216
  %idxprom163 = zext i32 %123 to i64, !dbg !13216
  %arrayidx164 = getelementptr %struct.xhci_port*, %struct.xhci_port** %122, i64 %idxprom163, !dbg !13216
  %124 = load %struct.xhci_port*, %struct.xhci_port** %arrayidx164, align 8, !dbg !13216
  %addr165 = getelementptr inbounds %struct.xhci_port, %struct.xhci_port* %124, i32 0, i32 0, !dbg !13216
  %125 = load i32*, i32** %addr165, align 8, !dbg !13216
  %126 = bitcast i32* %125 to i8*, !dbg !13216
  %call166 = call i32 @readl(i8* %126) #11, !dbg !13216
  store i32 %call166, i32* %pm_val, align 4, !dbg !13216
  br label %for.end, !dbg !13216

if.end167:                                        ; preds = %land.lhs.true157, %if.end155
  %127 = load i64, i64* %__sleep_us, align 8, !dbg !13218
  %tobool168 = icmp ne i64 %127, 0, !dbg !13218
  br i1 %tobool168, label %if.then169, label %if.end171, !dbg !13208

if.then169:                                       ; preds = %if.end167
  %128 = load i64, i64* %__sleep_us, align 8, !dbg !13218
  %shr170 = lshr i64 %128, 2, !dbg !13218
  %add = add i64 %shr170, 1, !dbg !13218
  %129 = load i64, i64* %__sleep_us, align 8, !dbg !13218
  call void @usleep_range(i64 %add, i64 %129) #11, !dbg !13218
  br label %if.end171, !dbg !13218

if.end171:                                        ; preds = %if.then169, %if.end167
  br label %for.cond, !dbg !13220, !llvm.loop !13221

for.end:                                          ; preds = %if.then162, %if.then154
  %130 = load i32, i32* %pm_val, align 4, !dbg !13197
  %and173 = and i32 %130, 480, !dbg !13197
  %cmp174 = icmp eq i32 %and173, 0, !dbg !13197
  %131 = zext i1 %cmp174 to i64, !dbg !13197
  %cond = select i1 %cmp174, i32 0, i32 -110, !dbg !13197
  store i32 %cond, i32* %tmp172, align 4, !dbg !13222
  %132 = load i32, i32* %tmp172, align 4, !dbg !13197
  store i32 0, i32* %retval, align 4, !dbg !13223
  br label %return, !dbg !13223

if.end176:                                        ; preds = %if.else121
  br label %if.end177

if.end177:                                        ; preds = %if.end176, %if.end111
  %133 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13224
  %lock178 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %133, i32 0, i32 12, !dbg !13225
  %134 = load i64, i64* %flags, align 8, !dbg !13226
  store %struct.spinlock* %lock178, %struct.spinlock** %lock.addr.i179, align 8
  store i64 %134, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !13227
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !13227
  store i32 1, i32* %tmp.i, align 4, !dbg !13227
  %135 = load i32, i32* %tmp.i, align 4, !dbg !13227
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !13228
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !13228
  store i32 1, i32* %tmp8.i, align 4, !dbg !13228
  %136 = load i32, i32* %tmp8.i, align 4, !dbg !13228
  %137 = load i64, i64* %flags.addr.i, align 8, !dbg !13229
  call void @arch_local_irq_restore(i64 %137) #13, !dbg !13229
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13230, !srcloc !6814
  %138 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i179, align 8, !dbg !13231
  %139 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %138, i32 0, i32 0, !dbg !13231
  %rlock.i180 = bitcast %union.anon.2* %139 to %struct.raw_spinlock*, !dbg !13231
  store i32 0, i32* %retval, align 4, !dbg !13232
  br label %return, !dbg !13232

return:                                           ; preds = %if.end177, %for.end, %if.then78, %if.then25, %if.then17, %if.then7, %if.then
  %140 = load i32, i32* %retval, align 4, !dbg !13233
  ret i32 %140, !dbg !13233
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_enable_usb3_lpm_timeout(%struct.usb_hcd* %hcd, %struct.usb_device* %udev, i32 %state) #1 !dbg !13234 {
entry:
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %state.addr = alloca i32, align 4
  %xhci = alloca %struct.xhci_hcd*, align 8
  %hub_encoded_timeout = alloca i16, align 2
  %mel = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !13235, metadata !DIExpression()), !dbg !13236
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !13237, metadata !DIExpression()), !dbg !13238
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !13239, metadata !DIExpression()), !dbg !13240
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !13241, metadata !DIExpression()), !dbg !13242
  call void @llvm.dbg.declare(metadata i16* %hub_encoded_timeout, metadata !13243, metadata !DIExpression()), !dbg !13244
  call void @llvm.dbg.declare(metadata i32* %mel, metadata !13245, metadata !DIExpression()), !dbg !13246
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13247, metadata !DIExpression()), !dbg !13248
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !13249
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !13250
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !13251
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13252
  %tobool = icmp ne %struct.xhci_hcd* %1, null, !dbg !13252
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13254

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13255
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %2, i32 0, i32 50, !dbg !13256
  %3 = load i64, i64* %quirks, align 8, !dbg !13256
  %and = and i64 %3, 2048, !dbg !13257
  %tobool1 = icmp ne i64 %and, 0, !dbg !13257
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !13258

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13259
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %4, i32 0, i32 41, !dbg !13260
  %5 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13261
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 44, !dbg !13262
  %6 = load i32, i32* %slot_id, align 8, !dbg !13262
  %idxprom = sext i32 %6 to i64, !dbg !13259
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !13259
  %7 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !13259
  %tobool3 = icmp ne %struct.xhci_virt_device* %7, null, !dbg !13259
  br i1 %tobool3, label %if.end, label %if.then, !dbg !13263

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !13264
  br label %return, !dbg !13264

if.end:                                           ; preds = %lor.lhs.false2
  %8 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !13265
  %9 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13266
  %10 = load i32, i32* %state.addr, align 4, !dbg !13267
  %call4 = call zeroext i16 @xhci_calculate_lpm_timeout(%struct.usb_hcd* %8, %struct.usb_device* %9, i32 %10) #11, !dbg !13268
  store i16 %call4, i16* %hub_encoded_timeout, align 2, !dbg !13269
  %11 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13270
  %12 = load i32, i32* %state.addr, align 4, !dbg !13271
  %13 = load i16, i16* %hub_encoded_timeout, align 2, !dbg !13272
  %call5 = call i32 @calculate_max_exit_latency(%struct.usb_device* %11, i32 %12, i16 zeroext %13) #11, !dbg !13273
  store i32 %call5, i32* %mel, align 4, !dbg !13274
  %14 = load i32, i32* %mel, align 4, !dbg !13275
  %cmp = icmp slt i32 %14, 0, !dbg !13277
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !13278

if.then6:                                         ; preds = %if.end
  store i16 0, i16* %hub_encoded_timeout, align 2, !dbg !13279
  store i32 0, i32* %mel, align 4, !dbg !13281
  br label %if.end7, !dbg !13282

if.end7:                                          ; preds = %if.then6, %if.end
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13283
  %16 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13284
  %17 = load i32, i32* %mel, align 4, !dbg !13285
  %conv = trunc i32 %17 to i16, !dbg !13285
  %call8 = call i32 @xhci_change_max_exit_latency(%struct.xhci_hcd* %15, %struct.usb_device* %16, i16 zeroext %conv) #11, !dbg !13286
  store i32 %call8, i32* %ret, align 4, !dbg !13287
  %18 = load i32, i32* %ret, align 4, !dbg !13288
  %tobool9 = icmp ne i32 %18, 0, !dbg !13288
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !13290

if.then10:                                        ; preds = %if.end7
  %19 = load i32, i32* %ret, align 4, !dbg !13291
  store i32 %19, i32* %retval, align 4, !dbg !13292
  br label %return, !dbg !13292

if.end11:                                         ; preds = %if.end7
  %20 = load i16, i16* %hub_encoded_timeout, align 2, !dbg !13293
  %conv12 = zext i16 %20 to i32, !dbg !13293
  store i32 %conv12, i32* %retval, align 4, !dbg !13294
  br label %return, !dbg !13294

return:                                           ; preds = %if.end11, %if.then10, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !13295
  ret i32 %21, !dbg !13295
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_disable_usb3_lpm_timeout(%struct.usb_hcd* %hcd, %struct.usb_device* %udev, i32 %state) #1 !dbg !13296 {
entry:
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %state.addr = alloca i32, align 4
  %xhci = alloca %struct.xhci_hcd*, align 8
  %mel = alloca i16, align 2
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !13297, metadata !DIExpression()), !dbg !13298
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !13299, metadata !DIExpression()), !dbg !13300
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !13301, metadata !DIExpression()), !dbg !13302
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !13303, metadata !DIExpression()), !dbg !13304
  call void @llvm.dbg.declare(metadata i16* %mel, metadata !13305, metadata !DIExpression()), !dbg !13306
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !13307
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !13308
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !13309
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13310
  %tobool = icmp ne %struct.xhci_hcd* %1, null, !dbg !13310
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13312

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13313
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %2, i32 0, i32 50, !dbg !13314
  %3 = load i64, i64* %quirks, align 8, !dbg !13314
  %and = and i64 %3, 2048, !dbg !13315
  %tobool1 = icmp ne i64 %and, 0, !dbg !13315
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !13316

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13317
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %4, i32 0, i32 41, !dbg !13318
  %5 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13319
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 44, !dbg !13320
  %6 = load i32, i32* %slot_id, align 8, !dbg !13320
  %idxprom = sext i32 %6 to i64, !dbg !13317
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !13317
  %7 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !13317
  %tobool3 = icmp ne %struct.xhci_virt_device* %7, null, !dbg !13317
  br i1 %tobool3, label %if.end, label %if.then, !dbg !13321

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !13322
  br label %return, !dbg !13322

if.end:                                           ; preds = %lor.lhs.false2
  %8 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13323
  %9 = load i32, i32* %state.addr, align 4, !dbg !13324
  %call4 = call i32 @calculate_max_exit_latency(%struct.usb_device* %8, i32 %9, i16 zeroext 0) #11, !dbg !13325
  %conv = trunc i32 %call4 to i16, !dbg !13325
  store i16 %conv, i16* %mel, align 2, !dbg !13326
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13327
  %11 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13328
  %12 = load i16, i16* %mel, align 2, !dbg !13329
  %call5 = call i32 @xhci_change_max_exit_latency(%struct.xhci_hcd* %10, %struct.usb_device* %11, i16 zeroext %12) #11, !dbg !13330
  store i32 %call5, i32* %retval, align 4, !dbg !13331
  br label %return, !dbg !13331

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !13332
  ret i32 %13, !dbg !13332
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #3

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_dbc_exit(%struct.xhci_hcd* %xhci) #1 !dbg !13333 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !13334, metadata !DIExpression()), !dbg !13335
  ret void, !dbg !13336
}

; Function Attrs: noredzone
declare dso_local void @usb_amd_dev_put() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_check_args(%struct.usb_hcd* %hcd, %struct.usb_device* %udev, %struct.usb_host_endpoint* %ep, i32 %check_ep, i1 zeroext %check_virt_dev, i8* %func) #1 !dbg !13337 {
entry:
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %ep.addr = alloca %struct.usb_host_endpoint*, align 8
  %check_ep.addr = alloca i32, align 4
  %check_virt_dev.addr = alloca i8, align 1
  %func.addr = alloca i8*, align 8
  %xhci = alloca %struct.xhci_hcd*, align 8
  %virt_dev = alloca %struct.xhci_virt_device*, align 8
  %tmp = alloca i32, align 4
  %tmp7 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !13340, metadata !DIExpression()), !dbg !13341
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !13342, metadata !DIExpression()), !dbg !13343
  store %struct.usb_host_endpoint* %ep, %struct.usb_host_endpoint** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep.addr, metadata !13344, metadata !DIExpression()), !dbg !13345
  store i32 %check_ep, i32* %check_ep.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %check_ep.addr, metadata !13346, metadata !DIExpression()), !dbg !13347
  %frombool = zext i1 %check_virt_dev to i8
  store i8 %frombool, i8* %check_virt_dev.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %check_virt_dev.addr, metadata !13348, metadata !DIExpression()), !dbg !13349
  store i8* %func, i8** %func.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %func.addr, metadata !13350, metadata !DIExpression()), !dbg !13351
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !13352, metadata !DIExpression()), !dbg !13353
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev, metadata !13354, metadata !DIExpression()), !dbg !13355
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !13356
  %tobool = icmp ne %struct.usb_hcd* %0, null, !dbg !13356
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13358

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %check_ep.addr, align 4, !dbg !13359
  %tobool1 = icmp ne i32 %1, 0, !dbg !13359
  br i1 %tobool1, label %land.lhs.true, label %lor.lhs.false3, !dbg !13360

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !13361
  %tobool2 = icmp ne %struct.usb_host_endpoint* %2, null, !dbg !13361
  br i1 %tobool2, label %lor.lhs.false3, label %if.then, !dbg !13362

lor.lhs.false3:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %3 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13363
  %tobool4 = icmp ne %struct.usb_device* %3, null, !dbg !13363
  br i1 %tobool4, label %if.end, label %if.then, !dbg !13364

if.then:                                          ; preds = %lor.lhs.false3, %land.lhs.true, %entry
  store i32 0, i32* %tmp, align 4, !dbg !13365
  %4 = load i32, i32* %tmp, align 4, !dbg !13369
  store i32 -22, i32* %retval, align 4, !dbg !13370
  br label %return, !dbg !13370

if.end:                                           ; preds = %lor.lhs.false3
  %5 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13371
  %parent = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 11, !dbg !13373
  %6 = load %struct.usb_device*, %struct.usb_device** %parent, align 8, !dbg !13373
  %tobool5 = icmp ne %struct.usb_device* %6, null, !dbg !13371
  br i1 %tobool5, label %if.end8, label %if.then6, !dbg !13374

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %tmp7, align 4, !dbg !13375
  %7 = load i32, i32* %tmp7, align 4, !dbg !13379
  store i32 0, i32* %retval, align 4, !dbg !13380
  br label %return, !dbg !13380

if.end8:                                          ; preds = %if.end
  %8 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !13381
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %8) #11, !dbg !13382
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !13383
  %9 = load i8, i8* %check_virt_dev.addr, align 1, !dbg !13384
  %tobool9 = trunc i8 %9 to i1, !dbg !13384
  br i1 %tobool9, label %if.then10, label %if.end24, !dbg !13386

if.then10:                                        ; preds = %if.end8
  %10 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13387
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %10, i32 0, i32 44, !dbg !13390
  %11 = load i32, i32* %slot_id, align 8, !dbg !13390
  %tobool11 = icmp ne i32 %11, 0, !dbg !13387
  br i1 %tobool11, label %lor.lhs.false12, label %if.then15, !dbg !13391

lor.lhs.false12:                                  ; preds = %if.then10
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13392
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %12, i32 0, i32 41, !dbg !13393
  %13 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13394
  %slot_id13 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %13, i32 0, i32 44, !dbg !13395
  %14 = load i32, i32* %slot_id13, align 8, !dbg !13395
  %idxprom = sext i32 %14 to i64, !dbg !13392
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !13392
  %15 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !13392
  %tobool14 = icmp ne %struct.xhci_virt_device* %15, null, !dbg !13392
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !13396

if.then15:                                        ; preds = %lor.lhs.false12, %if.then10
  store i32 -22, i32* %retval, align 4, !dbg !13397
  br label %return, !dbg !13397

if.end16:                                         ; preds = %lor.lhs.false12
  %16 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13399
  %devs17 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %16, i32 0, i32 41, !dbg !13400
  %17 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13401
  %slot_id18 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %17, i32 0, i32 44, !dbg !13402
  %18 = load i32, i32* %slot_id18, align 8, !dbg !13402
  %idxprom19 = sext i32 %18 to i64, !dbg !13399
  %arrayidx20 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs17, i64 0, i64 %idxprom19, !dbg !13399
  %19 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx20, align 8, !dbg !13399
  store %struct.xhci_virt_device* %19, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !13403
  %20 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !13404
  %udev21 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %20, i32 0, i32 0, !dbg !13406
  %21 = load %struct.usb_device*, %struct.usb_device** %udev21, align 8, !dbg !13406
  %22 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !13407
  %cmp = icmp ne %struct.usb_device* %21, %22, !dbg !13408
  br i1 %cmp, label %if.then22, label %if.end23, !dbg !13409

if.then22:                                        ; preds = %if.end16
  store i32 -22, i32* %retval, align 4, !dbg !13410
  br label %return, !dbg !13410

if.end23:                                         ; preds = %if.end16
  br label %if.end24, !dbg !13412

if.end24:                                         ; preds = %if.end23, %if.end8
  %23 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !13413
  %xhc_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %23, i32 0, i32 47, !dbg !13415
  %24 = load i32, i32* %xhc_state, align 8, !dbg !13415
  %and = and i32 %24, 2, !dbg !13416
  %tobool25 = icmp ne i32 %and, 0, !dbg !13416
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !13417

if.then26:                                        ; preds = %if.end24
  store i32 -19, i32* %retval, align 4, !dbg !13418
  br label %return, !dbg !13418

if.end27:                                         ; preds = %if.end24
  store i32 1, i32* %retval, align 4, !dbg !13419
  br label %return, !dbg !13419

return:                                           ; preds = %if.end27, %if.then26, %if.then22, %if.then15, %if.then6, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !13420
  ret i32 %25, !dbg !13420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_xfer_isoc(%struct.usb_endpoint_descriptor* %epd) #1 !dbg !13421 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !13422, metadata !DIExpression()), !dbg !13423
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !13424
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3, !dbg !13425
  %1 = load i8, i8* %bmAttributes, align 1, !dbg !13425
  %conv = zext i8 %1 to i32, !dbg !13424
  %and = and i32 %conv, 3, !dbg !13426
  %cmp = icmp eq i32 %and, 1, !dbg !13427
  %conv1 = zext i1 %cmp to i32, !dbg !13427
  ret i32 %conv1, !dbg !13428
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_is_bulk_out(%struct.usb_endpoint_descriptor* %epd) #1 !dbg !13429 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !13430, metadata !DIExpression()), !dbg !13431
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !13432
  %call = call i32 @usb_endpoint_xfer_bulk(%struct.usb_endpoint_descriptor* %0) #11, !dbg !13433
  %tobool = icmp ne i32 %call, 0, !dbg !13433
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13434

land.rhs:                                         ; preds = %entry
  %1 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !13435
  %call1 = call i32 @usb_endpoint_dir_out(%struct.usb_endpoint_descriptor* %1) #11, !dbg !13436
  %tobool2 = icmp ne i32 %call1, 0, !dbg !13434
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !13437
  %land.ext = zext i1 %2 to i32, !dbg !13434
  ret i32 %land.ext, !dbg !13438
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %epd) #1 !dbg !13439 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !13440, metadata !DIExpression()), !dbg !13441
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !13442
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 4, !dbg !13442
  %1 = load i16, i16* %wMaxPacketSize, align 1, !dbg !13442
  %conv = zext i16 %1 to i32, !dbg !13442
  %and = and i32 %conv, 2047, !dbg !13443
  ret i32 %and, !dbg !13444
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #1 !dbg !13445 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !13448, metadata !DIExpression()), !dbg !13452
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !13458, metadata !DIExpression()), !dbg !13459
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !13460, metadata !DIExpression()), !dbg !13461
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !13462, metadata !DIExpression()), !dbg !13463
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !13464, metadata !DIExpression()), !dbg !13468
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !13470, metadata !DIExpression()), !dbg !13474
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !13476, metadata !DIExpression()), !dbg !13480
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !13485, metadata !DIExpression()), !dbg !13486
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !13487, metadata !DIExpression()), !dbg !13488
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !13489, metadata !DIExpression()), !dbg !13490
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !13491, metadata !DIExpression()), !dbg !13492
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !13493, metadata !DIExpression()), !dbg !13494
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13495, metadata !DIExpression()), !dbg !13496
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !13497, metadata !DIExpression()), !dbg !13498
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !13499, metadata !DIExpression()), !dbg !13500
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13501, metadata !DIExpression()), !dbg !13502
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13503, metadata !DIExpression()), !dbg !13504
  %0 = load i64, i64* %size.addr, align 8, !dbg !13505
  %1 = load i32, i32* %flags.addr, align 4, !dbg !13506
  %or = or i32 %1, 256, !dbg !13507
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !13508
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #8, !dbg !13509
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !13510

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13511
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !13512
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !13513

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !13514
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !13515
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !13516
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !13517
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !13494
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !13518
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !13519
  %10 = load i32, i32* %order.i.i, align 4, !dbg !13520
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !13521
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !13522
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !13523
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !13524
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !13524
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !13524
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !13524
  call void @llvm.assume(i1 %maskcond.i.i.i) #8, !dbg !13524
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !13525
  br label %kmalloc.exit, !dbg !13525

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !13526
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13527
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !13527
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !13529

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !13530
  br label %kmalloc_index.exit.i, !dbg !13530

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13531
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !13533
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !13534

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13535
  br label %kmalloc_index.exit.i, !dbg !13535

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13536
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !13538
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !13539

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13540
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !13541
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !13542

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !13543
  br label %kmalloc_index.exit.i, !dbg !13543

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13544
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !13546
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !13547

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13548
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !13549
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !13550

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !13551
  br label %kmalloc_index.exit.i, !dbg !13551

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13552
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !13554
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !13555

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !13556
  br label %kmalloc_index.exit.i, !dbg !13556

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13557
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !13559
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !13560

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !13561
  br label %kmalloc_index.exit.i, !dbg !13561

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13562
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !13564
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !13565

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !13566
  br label %kmalloc_index.exit.i, !dbg !13566

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13567
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !13569
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !13570

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !13571
  br label %kmalloc_index.exit.i, !dbg !13571

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13572
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !13574
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !13575

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !13576
  br label %kmalloc_index.exit.i, !dbg !13576

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13577
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !13579
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !13580

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !13581
  br label %kmalloc_index.exit.i, !dbg !13581

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13582
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !13584
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !13585

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !13586
  br label %kmalloc_index.exit.i, !dbg !13586

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13587
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !13589
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !13590

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !13591
  br label %kmalloc_index.exit.i, !dbg !13591

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13592
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !13594
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !13595

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !13596
  br label %kmalloc_index.exit.i, !dbg !13596

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13597
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !13599
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !13600

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !13601
  br label %kmalloc_index.exit.i, !dbg !13601

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13602
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !13604
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !13605

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !13606
  br label %kmalloc_index.exit.i, !dbg !13606

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13607
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !13609
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !13610

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !13611
  br label %kmalloc_index.exit.i, !dbg !13611

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13612
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !13614
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !13615

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !13616
  br label %kmalloc_index.exit.i, !dbg !13616

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13617
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !13619
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !13620

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !13621
  br label %kmalloc_index.exit.i, !dbg !13621

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13622
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !13624
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !13625

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !13626
  br label %kmalloc_index.exit.i, !dbg !13626

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13627
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !13629
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !13630

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !13631
  br label %kmalloc_index.exit.i, !dbg !13631

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13632
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !13634
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !13635

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !13636
  br label %kmalloc_index.exit.i, !dbg !13636

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13637
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !13639
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !13640

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !13641
  br label %kmalloc_index.exit.i, !dbg !13641

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13642
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !13644
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !13645

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !13646
  br label %kmalloc_index.exit.i, !dbg !13646

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13647
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !13649
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !13650

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !13651
  br label %kmalloc_index.exit.i, !dbg !13651

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13652
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !13654
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !13655

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !13656
  br label %kmalloc_index.exit.i, !dbg !13656

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13657
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !13659
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !13660

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !13661
  br label %kmalloc_index.exit.i, !dbg !13661

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13662
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !13664
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !13665

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !13666
  br label %kmalloc_index.exit.i, !dbg !13666

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !13667
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !13669
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !13670

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !13671
  br label %kmalloc_index.exit.i, !dbg !13671

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.71, i64 0, i64 0), i32 382, i32 0, i64 12) #8, !dbg !13672, !srcloc !13675
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 156) #8, !dbg !13676, !srcloc !13679
  unreachable, !dbg !13680

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !13681
  store i32 %45, i32* %index.i, align 4, !dbg !13682
  %46 = load i32, i32* %index.i, align 4, !dbg !13683
  %tobool.i = icmp ne i32 %46, 0, !dbg !13683
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !13685

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !13686
  br label %kmalloc.exit, !dbg !13686

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !13687
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13688
  %and.i.i = and i32 %48, 17, !dbg !13688
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !13688
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !13688
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !13688
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !13688
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !13690

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !13691
  br label %kmalloc_type.exit.i, !dbg !13691

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !13692
  %and2.i.i = and i32 %49, 1, !dbg !13693
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !13692
  %50 = zext i1 %tobool3.i.i to i64, !dbg !13692
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !13692
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !13694
  br label %kmalloc_type.exit.i, !dbg !13694

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !13695
  %idxprom.i = zext i32 %51 to i64, !dbg !13696
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !13696
  %52 = load i32, i32* %index.i, align 4, !dbg !13697
  %idxprom6.i = zext i32 %52 to i64, !dbg !13696
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !13696
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !13696
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !13698
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !13699
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13700
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13701
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !13702
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !13702
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !13702
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !13702
  call void @llvm.assume(i1 %maskcond.i.i) #8, !dbg !13702
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !13463
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !13703
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !13704
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !13705
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !13706
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !13707
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !13708
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !13709
  store i8* %62, i8** %retval.i, align 8, !dbg !13710
  br label %kmalloc.exit, !dbg !13710

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !13711
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !13712
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !13713
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !13713
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !13713
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !13713
  call void @llvm.assume(i1 %maskcond.i) #8, !dbg !13713
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !13714
  br label %kmalloc.exit, !dbg !13714

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !13715
  ret i8* %65, !dbg !13716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__ab_c_size(i64 %a, i64 %b, i64 %c) #1 !dbg !13717 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %c.addr = alloca i64, align 8
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  %__a3 = alloca i64, align 8
  %__b4 = alloca i64, align 8
  %__d5 = alloca i64*, align 8
  %tmp10 = alloca i8, align 1
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !13721, metadata !DIExpression()), !dbg !13722
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !13723, metadata !DIExpression()), !dbg !13724
  store i64 %c, i64* %c.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %c.addr, metadata !13725, metadata !DIExpression()), !dbg !13726
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !13727, metadata !DIExpression()), !dbg !13728
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !13729, metadata !DIExpression()), !dbg !13732
  %0 = load i64, i64* %a.addr, align 8, !dbg !13732
  store i64 %0, i64* %__a, align 8, !dbg !13732
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !13733, metadata !DIExpression()), !dbg !13732
  %1 = load i64, i64* %b.addr, align 8, !dbg !13732
  store i64 %1, i64* %__b, align 8, !dbg !13732
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !13734, metadata !DIExpression()), !dbg !13732
  store i64* %bytes, i64** %__d, align 8, !dbg !13732
  %cmp = icmp eq i64* %__a, %__b, !dbg !13732
  %conv = zext i1 %cmp to i32, !dbg !13732
  %2 = load i64*, i64** %__d, align 8, !dbg !13732
  %cmp1 = icmp eq i64* %__a, %2, !dbg !13732
  %conv2 = zext i1 %cmp1 to i32, !dbg !13732
  %3 = load i64, i64* %__a, align 8, !dbg !13732
  %4 = load i64, i64* %__b, align 8, !dbg !13732
  %5 = load i64*, i64** %__d, align 8, !dbg !13732
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !13732
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !13732
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !13732
  store i64 %8, i64* %5, align 8, !dbg !13732
  %frombool = zext i1 %7 to i8, !dbg !13732
  store i8 %frombool, i8* %tmp, align 1, !dbg !13732
  %9 = load i8, i8* %tmp, align 1, !dbg !13732
  %tobool = trunc i8 %9 to i1, !dbg !13732
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !13736
  br i1 %call, label %if.then, label %if.end, !dbg !13737

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !13738
  br label %return, !dbg !13738

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__a3, metadata !13739, metadata !DIExpression()), !dbg !13742
  %10 = load i64, i64* %bytes, align 8, !dbg !13742
  store i64 %10, i64* %__a3, align 8, !dbg !13742
  call void @llvm.dbg.declare(metadata i64* %__b4, metadata !13743, metadata !DIExpression()), !dbg !13742
  %11 = load i64, i64* %c.addr, align 8, !dbg !13742
  store i64 %11, i64* %__b4, align 8, !dbg !13742
  call void @llvm.dbg.declare(metadata i64** %__d5, metadata !13744, metadata !DIExpression()), !dbg !13742
  store i64* %bytes, i64** %__d5, align 8, !dbg !13742
  %cmp6 = icmp eq i64* %__a3, %__b4, !dbg !13742
  %conv7 = zext i1 %cmp6 to i32, !dbg !13742
  %12 = load i64*, i64** %__d5, align 8, !dbg !13742
  %cmp8 = icmp eq i64* %__a3, %12, !dbg !13742
  %conv9 = zext i1 %cmp8 to i32, !dbg !13742
  %13 = load i64, i64* %__a3, align 8, !dbg !13742
  %14 = load i64, i64* %__b4, align 8, !dbg !13742
  %15 = load i64*, i64** %__d5, align 8, !dbg !13742
  %16 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %13, i64 %14), !dbg !13742
  %17 = extractvalue { i64, i1 } %16, 1, !dbg !13742
  %18 = extractvalue { i64, i1 } %16, 0, !dbg !13742
  store i64 %18, i64* %15, align 8, !dbg !13742
  %frombool11 = zext i1 %17 to i8, !dbg !13742
  store i8 %frombool11, i8* %tmp10, align 1, !dbg !13742
  %19 = load i8, i8* %tmp10, align 1, !dbg !13742
  %tobool12 = trunc i8 %19 to i1, !dbg !13742
  %call13 = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool12) #11, !dbg !13745
  br i1 %call13, label %if.then14, label %if.end15, !dbg !13746

if.then14:                                        ; preds = %if.end
  store i64 -1, i64* %retval, align 8, !dbg !13747
  br label %return, !dbg !13747

if.end15:                                         ; preds = %if.end
  %20 = load i64, i64* %bytes, align 8, !dbg !13748
  store i64 %20, i64* %retval, align 8, !dbg !13749
  br label %return, !dbg !13749

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %21 = load i64, i64* %retval, align 8, !dbg !13750
  ret i64 %21, !dbg !13750
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_urb_enqueue(%struct.urb* %urb) #1 !dbg !13751 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !13752, metadata !DIExpression()), !dbg !13753
  ret void, !dbg !13753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_check_maxpacket(%struct.xhci_hcd* %xhci, i32 %slot_id, i32 %ep_index, %struct.urb* %urb) #1 !dbg !13754 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %slot_id.addr = alloca i32, align 4
  %ep_index.addr = alloca i32, align 4
  %urb.addr = alloca %struct.urb*, align 8
  %out_ctx = alloca %struct.xhci_container_ctx*, align 8
  %ctrl_ctx = alloca %struct.xhci_input_control_ctx*, align 8
  %ep_ctx = alloca %struct.xhci_ep_ctx*, align 8
  %command = alloca %struct.xhci_command*, align 8
  %max_packet_size = alloca i32, align 4
  %hw_max_packet_size = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !13757, metadata !DIExpression()), !dbg !13758
  store i32 %slot_id, i32* %slot_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot_id.addr, metadata !13759, metadata !DIExpression()), !dbg !13760
  store i32 %ep_index, i32* %ep_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep_index.addr, metadata !13761, metadata !DIExpression()), !dbg !13762
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !13763, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.declare(metadata %struct.xhci_container_ctx** %out_ctx, metadata !13765, metadata !DIExpression()), !dbg !13766
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx, metadata !13767, metadata !DIExpression()), !dbg !13768
  call void @llvm.dbg.declare(metadata %struct.xhci_ep_ctx** %ep_ctx, metadata !13769, metadata !DIExpression()), !dbg !13770
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %command, metadata !13771, metadata !DIExpression()), !dbg !13772
  call void @llvm.dbg.declare(metadata i32* %max_packet_size, metadata !13773, metadata !DIExpression()), !dbg !13774
  call void @llvm.dbg.declare(metadata i32* %hw_max_packet_size, metadata !13775, metadata !DIExpression()), !dbg !13776
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13777, metadata !DIExpression()), !dbg !13778
  store i32 0, i32* %ret, align 4, !dbg !13778
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !13779
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 41, !dbg !13780
  %1 = load i32, i32* %slot_id.addr, align 4, !dbg !13781
  %idxprom = zext i32 %1 to i64, !dbg !13779
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !13779
  %2 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !13779
  %out_ctx1 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %2, i32 0, i32 1, !dbg !13782
  %3 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx1, align 8, !dbg !13782
  store %struct.xhci_container_ctx* %3, %struct.xhci_container_ctx** %out_ctx, align 8, !dbg !13783
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !13784
  %5 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx, align 8, !dbg !13785
  %6 = load i32, i32* %ep_index.addr, align 4, !dbg !13786
  %call = call %struct.xhci_ep_ctx* @xhci_get_ep_ctx(%struct.xhci_hcd* %4, %struct.xhci_container_ctx* %5, i32 %6) #11, !dbg !13787
  store %struct.xhci_ep_ctx* %call, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !13788
  %7 = load %struct.xhci_ep_ctx*, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !13789
  %ep_info2 = getelementptr inbounds %struct.xhci_ep_ctx, %struct.xhci_ep_ctx* %7, i32 0, i32 1, !dbg !13789
  %8 = load i32, i32* %ep_info2, align 4, !dbg !13789
  %shr = lshr i32 %8, 16, !dbg !13789
  %and = and i32 %shr, 65535, !dbg !13789
  store i32 %and, i32* %hw_max_packet_size, align 4, !dbg !13790
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13791
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %9, i32 0, i32 8, !dbg !13792
  %10 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !13792
  %ep0 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %10, i32 0, i32 13, !dbg !13793
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep0, i32 0, i32 0, !dbg !13794
  %call2 = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !13795
  store i32 %call2, i32* %max_packet_size, align 4, !dbg !13796
  %11 = load i32, i32* %hw_max_packet_size, align 4, !dbg !13797
  %12 = load i32, i32* %max_packet_size, align 4, !dbg !13799
  %cmp = icmp ne i32 %11, %12, !dbg !13800
  br i1 %cmp, label %if.then, label %if.end33, !dbg !13801

if.then:                                          ; preds = %entry
  %13 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !13802
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %13, void (%struct.va_format*)* @trace_xhci_dbg_context_change, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.72, i64 0, i64 0)) #11, !dbg !13804
  %14 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !13805
  %15 = load i32, i32* %max_packet_size, align 4, !dbg !13806
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %14, void (%struct.va_format*)* @trace_xhci_dbg_context_change, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.73, i64 0, i64 0), i32 %15) #11, !dbg !13807
  %16 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !13808
  %17 = load i32, i32* %hw_max_packet_size, align 4, !dbg !13809
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %16, void (%struct.va_format*)* @trace_xhci_dbg_context_change, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.74, i64 0, i64 0), i32 %17) #11, !dbg !13810
  %18 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !13811
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %18, void (%struct.va_format*)* @trace_xhci_dbg_context_change, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.75, i64 0, i64 0)) #11, !dbg !13812
  %19 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !13813
  %call3 = call %struct.xhci_command* @xhci_alloc_command(%struct.xhci_hcd* %19, i1 zeroext true, i32 3264) #11, !dbg !13814
  store %struct.xhci_command* %call3, %struct.xhci_command** %command, align 8, !dbg !13815
  %20 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !13816
  %tobool = icmp ne %struct.xhci_command* %20, null, !dbg !13816
  br i1 %tobool, label %if.end, label %if.then4, !dbg !13818

if.then4:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !13819
  br label %return, !dbg !13819

if.end:                                           ; preds = %if.then
  %21 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !13820
  %devs5 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %21, i32 0, i32 41, !dbg !13821
  %22 = load i32, i32* %slot_id.addr, align 4, !dbg !13822
  %idxprom6 = zext i32 %22 to i64, !dbg !13820
  %arrayidx7 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs5, i64 0, i64 %idxprom6, !dbg !13820
  %23 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx7, align 8, !dbg !13820
  %in_ctx = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %23, i32 0, i32 2, !dbg !13823
  %24 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !13823
  %25 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !13824
  %in_ctx8 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %25, i32 0, i32 0, !dbg !13825
  store %struct.xhci_container_ctx* %24, %struct.xhci_container_ctx** %in_ctx8, align 8, !dbg !13826
  %26 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !13827
  %in_ctx9 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %26, i32 0, i32 0, !dbg !13828
  %27 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx9, align 8, !dbg !13828
  %call10 = call %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx* %27) #11, !dbg !13829
  store %struct.xhci_input_control_ctx* %call10, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !13830
  %28 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !13831
  %tobool11 = icmp ne %struct.xhci_input_control_ctx* %28, null, !dbg !13831
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !13833

if.then12:                                        ; preds = %if.end
  %29 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !13834
  %call13 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %29) #11, !dbg !13834
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call13, i32 0, i32 0, !dbg !13834
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !13834
  %30 = load %struct.device*, %struct.device** %controller, align 8, !dbg !13834
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %30, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.xhci_check_maxpacket, i64 0, i64 0)) #12, !dbg !13834
  store i32 -12, i32* %ret, align 4, !dbg !13836
  br label %command_cleanup, !dbg !13837

if.end14:                                         ; preds = %if.end
  %31 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !13838
  %32 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !13839
  %devs15 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %32, i32 0, i32 41, !dbg !13840
  %33 = load i32, i32* %slot_id.addr, align 4, !dbg !13841
  %idxprom16 = zext i32 %33 to i64, !dbg !13839
  %arrayidx17 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs15, i64 0, i64 %idxprom16, !dbg !13839
  %34 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx17, align 8, !dbg !13839
  %in_ctx18 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %34, i32 0, i32 2, !dbg !13842
  %35 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx18, align 8, !dbg !13842
  %36 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !13843
  %devs19 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %36, i32 0, i32 41, !dbg !13844
  %37 = load i32, i32* %slot_id.addr, align 4, !dbg !13845
  %idxprom20 = zext i32 %37 to i64, !dbg !13843
  %arrayidx21 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs19, i64 0, i64 %idxprom20, !dbg !13843
  %38 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx21, align 8, !dbg !13843
  %out_ctx22 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %38, i32 0, i32 1, !dbg !13846
  %39 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx22, align 8, !dbg !13846
  %40 = load i32, i32* %ep_index.addr, align 4, !dbg !13847
  call void @xhci_endpoint_copy(%struct.xhci_hcd* %31, %struct.xhci_container_ctx* %35, %struct.xhci_container_ctx* %39, i32 %40) #11, !dbg !13848
  %41 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !13849
  %42 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !13850
  %in_ctx23 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %42, i32 0, i32 0, !dbg !13851
  %43 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx23, align 8, !dbg !13851
  %44 = load i32, i32* %ep_index.addr, align 4, !dbg !13852
  %call24 = call %struct.xhci_ep_ctx* @xhci_get_ep_ctx(%struct.xhci_hcd* %41, %struct.xhci_container_ctx* %43, i32 %44) #11, !dbg !13853
  store %struct.xhci_ep_ctx* %call24, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !13854
  %45 = load %struct.xhci_ep_ctx*, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !13855
  %ep_info = getelementptr inbounds %struct.xhci_ep_ctx, %struct.xhci_ep_ctx* %45, i32 0, i32 0, !dbg !13856
  %46 = load i32, i32* %ep_info, align 8, !dbg !13857
  %and25 = and i32 %46, -8, !dbg !13857
  store i32 %and25, i32* %ep_info, align 8, !dbg !13857
  %47 = load %struct.xhci_ep_ctx*, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !13858
  %ep_info226 = getelementptr inbounds %struct.xhci_ep_ctx, %struct.xhci_ep_ctx* %47, i32 0, i32 1, !dbg !13859
  %48 = load i32, i32* %ep_info226, align 4, !dbg !13860
  %and27 = and i32 %48, 65535, !dbg !13860
  store i32 %and27, i32* %ep_info226, align 4, !dbg !13860
  %49 = load i32, i32* %max_packet_size, align 4, !dbg !13861
  %and28 = and i32 %49, 65535, !dbg !13861
  %shl = shl i32 %and28, 16, !dbg !13861
  %50 = load %struct.xhci_ep_ctx*, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !13862
  %ep_info229 = getelementptr inbounds %struct.xhci_ep_ctx, %struct.xhci_ep_ctx* %50, i32 0, i32 1, !dbg !13863
  %51 = load i32, i32* %ep_info229, align 4, !dbg !13864
  %or = or i32 %51, %shl, !dbg !13864
  store i32 %or, i32* %ep_info229, align 4, !dbg !13864
  %52 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !13865
  %add_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %52, i32 0, i32 1, !dbg !13866
  store i32 2, i32* %add_flags, align 4, !dbg !13867
  %53 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !13868
  %drop_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %53, i32 0, i32 0, !dbg !13869
  store i32 0, i32* %drop_flags, align 4, !dbg !13870
  %54 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !13871
  %55 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !13872
  %dev30 = getelementptr inbounds %struct.urb, %struct.urb* %55, i32 0, i32 8, !dbg !13873
  %56 = load %struct.usb_device*, %struct.usb_device** %dev30, align 8, !dbg !13873
  %57 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !13874
  %call31 = call i32 @xhci_configure_endpoint(%struct.xhci_hcd* %54, %struct.usb_device* %56, %struct.xhci_command* %57, i1 zeroext true, i1 zeroext false) #11, !dbg !13875
  store i32 %call31, i32* %ret, align 4, !dbg !13876
  %58 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !13877
  %add_flags32 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %58, i32 0, i32 1, !dbg !13878
  store i32 1, i32* %add_flags32, align 4, !dbg !13879
  br label %command_cleanup, !dbg !13877

command_cleanup:                                  ; preds = %if.end14, %if.then12
  call void @llvm.dbg.label(metadata !13880), !dbg !13881
  %59 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !13882
  %completion = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %59, i32 0, i32 3, !dbg !13883
  %60 = load %struct.completion*, %struct.completion** %completion, align 8, !dbg !13883
  %61 = bitcast %struct.completion* %60 to i8*, !dbg !13882
  call void @kfree(i8* %61) #11, !dbg !13884
  %62 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !13885
  %63 = bitcast %struct.xhci_command* %62 to i8*, !dbg !13885
  call void @kfree(i8* %63) #11, !dbg !13886
  br label %if.end33, !dbg !13887

if.end33:                                         ; preds = %command_cleanup, %entry
  %64 = load i32, i32* %ret, align 4, !dbg !13888
  store i32 %64, i32* %retval, align 4, !dbg !13889
  br label %return, !dbg !13889

return:                                           ; preds = %if.end33, %if.then4
  %65 = load i32, i32* %retval, align 4, !dbg !13890
  ret i32 %65, !dbg !13890
}

; Function Attrs: noredzone
declare dso_local void @xhci_urb_free_priv(%struct.urb_priv*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %epd) #1 !dbg !13891 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !13892, metadata !DIExpression()), !dbg !13893
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !13894
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3, !dbg !13895
  %1 = load i8, i8* %bmAttributes, align 1, !dbg !13895
  %conv = zext i8 %1 to i32, !dbg !13894
  %and = and i32 %conv, 3, !dbg !13896
  ret i32 %and, !dbg !13897
}

; Function Attrs: noredzone
declare dso_local i32 @xhci_queue_ctrl_tx(%struct.xhci_hcd*, i32, %struct.urb*, i32, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @xhci_queue_bulk_tx(%struct.xhci_hcd*, i32, %struct.urb*, i32, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @xhci_queue_intr_tx(%struct.xhci_hcd*, i32, %struct.urb*, i32, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @xhci_queue_isoc_tx_prepare(%struct.xhci_hcd*, i32, %struct.urb*, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_xfer_bulk(%struct.usb_endpoint_descriptor* %epd) #1 !dbg !13898 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !13899, metadata !DIExpression()), !dbg !13900
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !13901
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3, !dbg !13902
  %1 = load i8, i8* %bmAttributes, align 1, !dbg !13902
  %conv = zext i8 %1 to i32, !dbg !13901
  %and = and i32 %conv, 3, !dbg !13903
  %cmp = icmp eq i32 %and, 2, !dbg !13904
  %conv1 = zext i1 %cmp to i32, !dbg !13904
  ret i32 %conv1, !dbg !13905
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_dir_out(%struct.usb_endpoint_descriptor* %epd) #1 !dbg !13906 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !13907, metadata !DIExpression()), !dbg !13908
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !13909
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 2, !dbg !13910
  %1 = load i8, i8* %bEndpointAddress, align 1, !dbg !13910
  %conv = zext i8 %1 to i32, !dbg !13909
  %and = and i32 %conv, 128, !dbg !13911
  %cmp = icmp eq i32 %and, 0, !dbg !13912
  %conv1 = zext i1 %cmp to i32, !dbg !13912
  ret i32 %conv1, !dbg !13913
}

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !13914 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13918, metadata !DIExpression()), !dbg !13922
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13924, metadata !DIExpression()), !dbg !13925
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13926, metadata !DIExpression()), !dbg !13927
  %0 = load i64, i64* %size.addr, align 8, !dbg !13928
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !13930
  br i1 %1, label %if.then, label %if.end447, !dbg !13931

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !13932
  %tobool = icmp ne i64 %2, 0, !dbg !13932
  br i1 %tobool, label %if.end, label %if.then1, !dbg !13935

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !13936
  br label %return, !dbg !13936

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !13937
  %cmp = icmp ult i64 %3, 4096, !dbg !13939
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !13940

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13941
  br label %return, !dbg !13941

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub = sub i64 %4, 1, !dbg !13942
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !13942
  br i1 %5, label %cond.true, label %cond.false442, !dbg !13942

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub4 = sub i64 %6, 1, !dbg !13942
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !13942
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !13942

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub6 = sub i64 %8, 1, !dbg !13942
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !13942
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !13942

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !13942

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub9 = sub i64 %9, 1, !dbg !13942
  %and = and i64 %sub9, -9223372036854775808, !dbg !13942
  %tobool10 = icmp ne i64 %and, 0, !dbg !13942
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !13942

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !13942

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub13 = sub i64 %10, 1, !dbg !13942
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !13942
  %tobool15 = icmp ne i64 %and14, 0, !dbg !13942
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !13942

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !13942

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub18 = sub i64 %11, 1, !dbg !13942
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !13942
  %tobool20 = icmp ne i64 %and19, 0, !dbg !13942
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !13942

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !13942

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub23 = sub i64 %12, 1, !dbg !13942
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !13942
  %tobool25 = icmp ne i64 %and24, 0, !dbg !13942
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !13942

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !13942

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub28 = sub i64 %13, 1, !dbg !13942
  %and29 = and i64 %sub28, 576460752303423488, !dbg !13942
  %tobool30 = icmp ne i64 %and29, 0, !dbg !13942
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !13942

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !13942

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub33 = sub i64 %14, 1, !dbg !13942
  %and34 = and i64 %sub33, 288230376151711744, !dbg !13942
  %tobool35 = icmp ne i64 %and34, 0, !dbg !13942
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !13942

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !13942

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub38 = sub i64 %15, 1, !dbg !13942
  %and39 = and i64 %sub38, 144115188075855872, !dbg !13942
  %tobool40 = icmp ne i64 %and39, 0, !dbg !13942
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !13942

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !13942

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub43 = sub i64 %16, 1, !dbg !13942
  %and44 = and i64 %sub43, 72057594037927936, !dbg !13942
  %tobool45 = icmp ne i64 %and44, 0, !dbg !13942
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !13942

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !13942

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub48 = sub i64 %17, 1, !dbg !13942
  %and49 = and i64 %sub48, 36028797018963968, !dbg !13942
  %tobool50 = icmp ne i64 %and49, 0, !dbg !13942
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !13942

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !13942

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub53 = sub i64 %18, 1, !dbg !13942
  %and54 = and i64 %sub53, 18014398509481984, !dbg !13942
  %tobool55 = icmp ne i64 %and54, 0, !dbg !13942
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !13942

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !13942

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub58 = sub i64 %19, 1, !dbg !13942
  %and59 = and i64 %sub58, 9007199254740992, !dbg !13942
  %tobool60 = icmp ne i64 %and59, 0, !dbg !13942
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !13942

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !13942

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub63 = sub i64 %20, 1, !dbg !13942
  %and64 = and i64 %sub63, 4503599627370496, !dbg !13942
  %tobool65 = icmp ne i64 %and64, 0, !dbg !13942
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !13942

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !13942

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub68 = sub i64 %21, 1, !dbg !13942
  %and69 = and i64 %sub68, 2251799813685248, !dbg !13942
  %tobool70 = icmp ne i64 %and69, 0, !dbg !13942
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !13942

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !13942

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub73 = sub i64 %22, 1, !dbg !13942
  %and74 = and i64 %sub73, 1125899906842624, !dbg !13942
  %tobool75 = icmp ne i64 %and74, 0, !dbg !13942
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !13942

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !13942

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub78 = sub i64 %23, 1, !dbg !13942
  %and79 = and i64 %sub78, 562949953421312, !dbg !13942
  %tobool80 = icmp ne i64 %and79, 0, !dbg !13942
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !13942

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !13942

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub83 = sub i64 %24, 1, !dbg !13942
  %and84 = and i64 %sub83, 281474976710656, !dbg !13942
  %tobool85 = icmp ne i64 %and84, 0, !dbg !13942
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !13942

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !13942

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub88 = sub i64 %25, 1, !dbg !13942
  %and89 = and i64 %sub88, 140737488355328, !dbg !13942
  %tobool90 = icmp ne i64 %and89, 0, !dbg !13942
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !13942

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !13942

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub93 = sub i64 %26, 1, !dbg !13942
  %and94 = and i64 %sub93, 70368744177664, !dbg !13942
  %tobool95 = icmp ne i64 %and94, 0, !dbg !13942
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !13942

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !13942

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub98 = sub i64 %27, 1, !dbg !13942
  %and99 = and i64 %sub98, 35184372088832, !dbg !13942
  %tobool100 = icmp ne i64 %and99, 0, !dbg !13942
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !13942

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !13942

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub103 = sub i64 %28, 1, !dbg !13942
  %and104 = and i64 %sub103, 17592186044416, !dbg !13942
  %tobool105 = icmp ne i64 %and104, 0, !dbg !13942
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !13942

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !13942

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub108 = sub i64 %29, 1, !dbg !13942
  %and109 = and i64 %sub108, 8796093022208, !dbg !13942
  %tobool110 = icmp ne i64 %and109, 0, !dbg !13942
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !13942

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !13942

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub113 = sub i64 %30, 1, !dbg !13942
  %and114 = and i64 %sub113, 4398046511104, !dbg !13942
  %tobool115 = icmp ne i64 %and114, 0, !dbg !13942
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !13942

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !13942

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub118 = sub i64 %31, 1, !dbg !13942
  %and119 = and i64 %sub118, 2199023255552, !dbg !13942
  %tobool120 = icmp ne i64 %and119, 0, !dbg !13942
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !13942

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !13942

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub123 = sub i64 %32, 1, !dbg !13942
  %and124 = and i64 %sub123, 1099511627776, !dbg !13942
  %tobool125 = icmp ne i64 %and124, 0, !dbg !13942
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !13942

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !13942

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub128 = sub i64 %33, 1, !dbg !13942
  %and129 = and i64 %sub128, 549755813888, !dbg !13942
  %tobool130 = icmp ne i64 %and129, 0, !dbg !13942
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !13942

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !13942

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub133 = sub i64 %34, 1, !dbg !13942
  %and134 = and i64 %sub133, 274877906944, !dbg !13942
  %tobool135 = icmp ne i64 %and134, 0, !dbg !13942
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !13942

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !13942

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub138 = sub i64 %35, 1, !dbg !13942
  %and139 = and i64 %sub138, 137438953472, !dbg !13942
  %tobool140 = icmp ne i64 %and139, 0, !dbg !13942
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !13942

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !13942

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub143 = sub i64 %36, 1, !dbg !13942
  %and144 = and i64 %sub143, 68719476736, !dbg !13942
  %tobool145 = icmp ne i64 %and144, 0, !dbg !13942
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !13942

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !13942

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub148 = sub i64 %37, 1, !dbg !13942
  %and149 = and i64 %sub148, 34359738368, !dbg !13942
  %tobool150 = icmp ne i64 %and149, 0, !dbg !13942
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !13942

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !13942

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub153 = sub i64 %38, 1, !dbg !13942
  %and154 = and i64 %sub153, 17179869184, !dbg !13942
  %tobool155 = icmp ne i64 %and154, 0, !dbg !13942
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !13942

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !13942

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub158 = sub i64 %39, 1, !dbg !13942
  %and159 = and i64 %sub158, 8589934592, !dbg !13942
  %tobool160 = icmp ne i64 %and159, 0, !dbg !13942
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !13942

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !13942

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub163 = sub i64 %40, 1, !dbg !13942
  %and164 = and i64 %sub163, 4294967296, !dbg !13942
  %tobool165 = icmp ne i64 %and164, 0, !dbg !13942
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !13942

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !13942

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub168 = sub i64 %41, 1, !dbg !13942
  %and169 = and i64 %sub168, 2147483648, !dbg !13942
  %tobool170 = icmp ne i64 %and169, 0, !dbg !13942
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !13942

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !13942

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub173 = sub i64 %42, 1, !dbg !13942
  %and174 = and i64 %sub173, 1073741824, !dbg !13942
  %tobool175 = icmp ne i64 %and174, 0, !dbg !13942
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !13942

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !13942

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub178 = sub i64 %43, 1, !dbg !13942
  %and179 = and i64 %sub178, 536870912, !dbg !13942
  %tobool180 = icmp ne i64 %and179, 0, !dbg !13942
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !13942

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !13942

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub183 = sub i64 %44, 1, !dbg !13942
  %and184 = and i64 %sub183, 268435456, !dbg !13942
  %tobool185 = icmp ne i64 %and184, 0, !dbg !13942
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !13942

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !13942

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub188 = sub i64 %45, 1, !dbg !13942
  %and189 = and i64 %sub188, 134217728, !dbg !13942
  %tobool190 = icmp ne i64 %and189, 0, !dbg !13942
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !13942

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !13942

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub193 = sub i64 %46, 1, !dbg !13942
  %and194 = and i64 %sub193, 67108864, !dbg !13942
  %tobool195 = icmp ne i64 %and194, 0, !dbg !13942
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !13942

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !13942

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub198 = sub i64 %47, 1, !dbg !13942
  %and199 = and i64 %sub198, 33554432, !dbg !13942
  %tobool200 = icmp ne i64 %and199, 0, !dbg !13942
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !13942

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !13942

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub203 = sub i64 %48, 1, !dbg !13942
  %and204 = and i64 %sub203, 16777216, !dbg !13942
  %tobool205 = icmp ne i64 %and204, 0, !dbg !13942
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !13942

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !13942

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub208 = sub i64 %49, 1, !dbg !13942
  %and209 = and i64 %sub208, 8388608, !dbg !13942
  %tobool210 = icmp ne i64 %and209, 0, !dbg !13942
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !13942

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !13942

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub213 = sub i64 %50, 1, !dbg !13942
  %and214 = and i64 %sub213, 4194304, !dbg !13942
  %tobool215 = icmp ne i64 %and214, 0, !dbg !13942
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !13942

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !13942

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub218 = sub i64 %51, 1, !dbg !13942
  %and219 = and i64 %sub218, 2097152, !dbg !13942
  %tobool220 = icmp ne i64 %and219, 0, !dbg !13942
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !13942

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !13942

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub223 = sub i64 %52, 1, !dbg !13942
  %and224 = and i64 %sub223, 1048576, !dbg !13942
  %tobool225 = icmp ne i64 %and224, 0, !dbg !13942
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !13942

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !13942

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub228 = sub i64 %53, 1, !dbg !13942
  %and229 = and i64 %sub228, 524288, !dbg !13942
  %tobool230 = icmp ne i64 %and229, 0, !dbg !13942
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !13942

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !13942

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub233 = sub i64 %54, 1, !dbg !13942
  %and234 = and i64 %sub233, 262144, !dbg !13942
  %tobool235 = icmp ne i64 %and234, 0, !dbg !13942
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !13942

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !13942

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub238 = sub i64 %55, 1, !dbg !13942
  %and239 = and i64 %sub238, 131072, !dbg !13942
  %tobool240 = icmp ne i64 %and239, 0, !dbg !13942
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !13942

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !13942

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub243 = sub i64 %56, 1, !dbg !13942
  %and244 = and i64 %sub243, 65536, !dbg !13942
  %tobool245 = icmp ne i64 %and244, 0, !dbg !13942
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !13942

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !13942

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub248 = sub i64 %57, 1, !dbg !13942
  %and249 = and i64 %sub248, 32768, !dbg !13942
  %tobool250 = icmp ne i64 %and249, 0, !dbg !13942
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !13942

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !13942

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub253 = sub i64 %58, 1, !dbg !13942
  %and254 = and i64 %sub253, 16384, !dbg !13942
  %tobool255 = icmp ne i64 %and254, 0, !dbg !13942
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !13942

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !13942

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub258 = sub i64 %59, 1, !dbg !13942
  %and259 = and i64 %sub258, 8192, !dbg !13942
  %tobool260 = icmp ne i64 %and259, 0, !dbg !13942
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !13942

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !13942

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub263 = sub i64 %60, 1, !dbg !13942
  %and264 = and i64 %sub263, 4096, !dbg !13942
  %tobool265 = icmp ne i64 %and264, 0, !dbg !13942
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !13942

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !13942

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub268 = sub i64 %61, 1, !dbg !13942
  %and269 = and i64 %sub268, 2048, !dbg !13942
  %tobool270 = icmp ne i64 %and269, 0, !dbg !13942
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !13942

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !13942

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub273 = sub i64 %62, 1, !dbg !13942
  %and274 = and i64 %sub273, 1024, !dbg !13942
  %tobool275 = icmp ne i64 %and274, 0, !dbg !13942
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !13942

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !13942

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub278 = sub i64 %63, 1, !dbg !13942
  %and279 = and i64 %sub278, 512, !dbg !13942
  %tobool280 = icmp ne i64 %and279, 0, !dbg !13942
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !13942

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !13942

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub283 = sub i64 %64, 1, !dbg !13942
  %and284 = and i64 %sub283, 256, !dbg !13942
  %tobool285 = icmp ne i64 %and284, 0, !dbg !13942
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !13942

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !13942

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub288 = sub i64 %65, 1, !dbg !13942
  %and289 = and i64 %sub288, 128, !dbg !13942
  %tobool290 = icmp ne i64 %and289, 0, !dbg !13942
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !13942

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !13942

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub293 = sub i64 %66, 1, !dbg !13942
  %and294 = and i64 %sub293, 64, !dbg !13942
  %tobool295 = icmp ne i64 %and294, 0, !dbg !13942
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !13942

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !13942

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub298 = sub i64 %67, 1, !dbg !13942
  %and299 = and i64 %sub298, 32, !dbg !13942
  %tobool300 = icmp ne i64 %and299, 0, !dbg !13942
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !13942

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !13942

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub303 = sub i64 %68, 1, !dbg !13942
  %and304 = and i64 %sub303, 16, !dbg !13942
  %tobool305 = icmp ne i64 %and304, 0, !dbg !13942
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !13942

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !13942

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub308 = sub i64 %69, 1, !dbg !13942
  %and309 = and i64 %sub308, 8, !dbg !13942
  %tobool310 = icmp ne i64 %and309, 0, !dbg !13942
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !13942

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !13942

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub313 = sub i64 %70, 1, !dbg !13942
  %and314 = and i64 %sub313, 4, !dbg !13942
  %tobool315 = icmp ne i64 %and314, 0, !dbg !13942
  %71 = zext i1 %tobool315 to i64, !dbg !13942
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !13942
  br label %cond.end, !dbg !13942

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !13942
  br label %cond.end317, !dbg !13942

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !13942
  br label %cond.end319, !dbg !13942

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !13942
  br label %cond.end321, !dbg !13942

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !13942
  br label %cond.end323, !dbg !13942

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !13942
  br label %cond.end325, !dbg !13942

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !13942
  br label %cond.end327, !dbg !13942

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !13942
  br label %cond.end329, !dbg !13942

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !13942
  br label %cond.end331, !dbg !13942

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !13942
  br label %cond.end333, !dbg !13942

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !13942
  br label %cond.end335, !dbg !13942

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !13942
  br label %cond.end337, !dbg !13942

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !13942
  br label %cond.end339, !dbg !13942

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !13942
  br label %cond.end341, !dbg !13942

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !13942
  br label %cond.end343, !dbg !13942

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !13942
  br label %cond.end345, !dbg !13942

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !13942
  br label %cond.end347, !dbg !13942

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !13942
  br label %cond.end349, !dbg !13942

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !13942
  br label %cond.end351, !dbg !13942

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !13942
  br label %cond.end353, !dbg !13942

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !13942
  br label %cond.end355, !dbg !13942

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !13942
  br label %cond.end357, !dbg !13942

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !13942
  br label %cond.end359, !dbg !13942

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !13942
  br label %cond.end361, !dbg !13942

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !13942
  br label %cond.end363, !dbg !13942

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !13942
  br label %cond.end365, !dbg !13942

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !13942
  br label %cond.end367, !dbg !13942

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !13942
  br label %cond.end369, !dbg !13942

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !13942
  br label %cond.end371, !dbg !13942

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !13942
  br label %cond.end373, !dbg !13942

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !13942
  br label %cond.end375, !dbg !13942

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !13942
  br label %cond.end377, !dbg !13942

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !13942
  br label %cond.end379, !dbg !13942

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !13942
  br label %cond.end381, !dbg !13942

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !13942
  br label %cond.end383, !dbg !13942

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !13942
  br label %cond.end385, !dbg !13942

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !13942
  br label %cond.end387, !dbg !13942

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !13942
  br label %cond.end389, !dbg !13942

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !13942
  br label %cond.end391, !dbg !13942

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !13942
  br label %cond.end393, !dbg !13942

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !13942
  br label %cond.end395, !dbg !13942

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !13942
  br label %cond.end397, !dbg !13942

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !13942
  br label %cond.end399, !dbg !13942

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !13942
  br label %cond.end401, !dbg !13942

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !13942
  br label %cond.end403, !dbg !13942

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !13942
  br label %cond.end405, !dbg !13942

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !13942
  br label %cond.end407, !dbg !13942

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !13942
  br label %cond.end409, !dbg !13942

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !13942
  br label %cond.end411, !dbg !13942

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !13942
  br label %cond.end413, !dbg !13942

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !13942
  br label %cond.end415, !dbg !13942

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !13942
  br label %cond.end417, !dbg !13942

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !13942
  br label %cond.end419, !dbg !13942

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !13942
  br label %cond.end421, !dbg !13942

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !13942
  br label %cond.end423, !dbg !13942

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !13942
  br label %cond.end425, !dbg !13942

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !13942
  br label %cond.end427, !dbg !13942

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !13942
  br label %cond.end429, !dbg !13942

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !13942
  br label %cond.end431, !dbg !13942

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !13942
  br label %cond.end433, !dbg !13942

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !13942
  br label %cond.end435, !dbg !13942

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !13942
  br label %cond.end437, !dbg !13942

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !13942
  br label %cond.end440, !dbg !13942

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !13942

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !13942
  br label %cond.end444, !dbg !13942

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !13942
  %sub443 = sub i64 %72, 1, !dbg !13942
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !13942
  br label %cond.end444, !dbg !13942

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !13942
  %sub446 = sub i32 %cond445, 12, !dbg !13943
  %add = add i32 %sub446, 1, !dbg !13944
  store i32 %add, i32* %retval, align 4, !dbg !13945
  br label %return, !dbg !13945

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !13946
  %dec = add i64 %73, -1, !dbg !13946
  store i64 %dec, i64* %size.addr, align 8, !dbg !13946
  %74 = load i64, i64* %size.addr, align 8, !dbg !13947
  %shr = lshr i64 %74, 12, !dbg !13947
  store i64 %shr, i64* %size.addr, align 8, !dbg !13947
  %75 = load i64, i64* %size.addr, align 8, !dbg !13948
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13925
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !13949
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !13950
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #7, !dbg !13949, !srcloc !13951
  store i32 %78, i32* %bitpos.i, align 4, !dbg !13949
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !13952
  %add.i = add i32 %79, 1, !dbg !13953
  store i32 %add.i, i32* %retval, align 4, !dbg !13954
  br label %return, !dbg !13954

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !13955
  ret i32 %80, !dbg !13955
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !13956 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13918, metadata !DIExpression()), !dbg !13960
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13924, metadata !DIExpression()), !dbg !13962
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13963, metadata !DIExpression()), !dbg !13964
  %0 = load i64, i64* %n.addr, align 8, !dbg !13965
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13962
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !13966
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !13967
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #7, !dbg !13966, !srcloc !13951
  store i32 %3, i32* %bitpos.i, align 4, !dbg !13966
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !13968
  %add.i = add i32 %4, 1, !dbg !13969
  %sub = sub i32 %add.i, 1, !dbg !13970
  ret i32 %sub, !dbg !13971
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #1 !dbg !13972 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !13976, metadata !DIExpression()), !dbg !13977
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !13978, metadata !DIExpression()), !dbg !13979
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13980, metadata !DIExpression()), !dbg !13981
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13982, metadata !DIExpression()), !dbg !13983
  %0 = load i8*, i8** %object.addr, align 8, !dbg !13984
  ret i8* %0, !dbg !13985
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #1 !dbg !13986 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !13989, metadata !DIExpression()), !dbg !13990
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !13991
  %tobool = trunc i8 %0 to i1, !dbg !13991
  %lnot = xor i1 %tobool, true, !dbg !13991
  %lnot1 = xor i1 %lnot, true, !dbg !13991
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13991
  %conv = sext i32 %lnot.ext to i64, !dbg !13991
  %tobool2 = icmp ne i64 %conv, 0, !dbg !13991
  ret i1 %tobool2, !dbg !13992
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_dbg_context_change(%struct.va_format* %vaf) #1 !dbg !13993 {
entry:
  %vaf.addr = alloca %struct.va_format*, align 8
  store %struct.va_format* %vaf, %struct.va_format** %vaf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.va_format** %vaf.addr, metadata !13994, metadata !DIExpression()), !dbg !13995
  ret void, !dbg !13995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_configure_endpoint(%struct.xhci_hcd* %xhci, %struct.usb_device* %udev, %struct.xhci_command* %command, i1 zeroext %ctx_change, i1 zeroext %must_succeed) #1 !dbg !13996 {
entry:
  %lock.addr.i159 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i159, metadata !6673, metadata !DIExpression()), !dbg !13999
  %lock.addr.i154 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i154, metadata !6665, metadata !DIExpression()), !dbg !14008
  %flags.addr.i155 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i155, metadata !6671, metadata !DIExpression()), !dbg !14010
  %tmp.i156 = alloca i32, align 4
  %tmp8.i157 = alloca i32, align 4
  %lock.addr.i149 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i149, metadata !6665, metadata !DIExpression()), !dbg !14011
  %flags.addr.i150 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i150, metadata !6671, metadata !DIExpression()), !dbg !14015
  %tmp.i151 = alloca i32, align 4
  %tmp8.i152 = alloca i32, align 4
  %lock.addr.i144 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i144, metadata !6665, metadata !DIExpression()), !dbg !14016
  %flags.addr.i145 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i145, metadata !6671, metadata !DIExpression()), !dbg !14020
  %tmp.i146 = alloca i32, align 4
  %tmp8.i147 = alloca i32, align 4
  %lock.addr.i139 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i139, metadata !6665, metadata !DIExpression()), !dbg !14021
  %flags.addr.i140 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i140, metadata !6671, metadata !DIExpression()), !dbg !14025
  %tmp.i141 = alloca i32, align 4
  %tmp8.i142 = alloca i32, align 4
  %lock.addr.i134 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i134, metadata !6665, metadata !DIExpression()), !dbg !14026
  %flags.addr.i135 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i135, metadata !6671, metadata !DIExpression()), !dbg !14030
  %tmp.i136 = alloca i32, align 4
  %tmp8.i137 = alloca i32, align 4
  %lock.addr.i129 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i129, metadata !6665, metadata !DIExpression()), !dbg !14031
  %flags.addr.i130 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i130, metadata !6671, metadata !DIExpression()), !dbg !14035
  %tmp.i131 = alloca i32, align 4
  %tmp8.i132 = alloca i32, align 4
  %lock.addr.i127 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i127, metadata !6665, metadata !DIExpression()), !dbg !14036
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !14038
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !14039
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %command.addr = alloca %struct.xhci_command*, align 8
  %ctx_change.addr = alloca i8, align 1
  %must_succeed.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %ctrl_ctx = alloca %struct.xhci_input_control_ctx*, align 8
  %virt_dev = alloca %struct.xhci_virt_device*, align 8
  %slot_ctx = alloca %struct.xhci_slot_ctx*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__dummy96 = alloca i64, align 8
  %__dummy297 = alloca i64, align 8
  %tmp100 = alloca i32, align 4
  %__dummy104 = alloca i64, align 8
  %__dummy2105 = alloca i64, align 8
  %tmp108 = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !14046, metadata !DIExpression()), !dbg !14047
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !14048, metadata !DIExpression()), !dbg !14049
  store %struct.xhci_command* %command, %struct.xhci_command** %command.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %command.addr, metadata !14050, metadata !DIExpression()), !dbg !14051
  %frombool = zext i1 %ctx_change to i8
  store i8 %frombool, i8* %ctx_change.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ctx_change.addr, metadata !14052, metadata !DIExpression()), !dbg !14053
  %frombool1 = zext i1 %must_succeed to i8
  store i8 %frombool1, i8* %must_succeed.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %must_succeed.addr, metadata !14054, metadata !DIExpression()), !dbg !14055
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14056, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14058, metadata !DIExpression()), !dbg !14059
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx, metadata !14060, metadata !DIExpression()), !dbg !14061
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev, metadata !14062, metadata !DIExpression()), !dbg !14063
  call void @llvm.dbg.declare(metadata %struct.xhci_slot_ctx** %slot_ctx, metadata !14064, metadata !DIExpression()), !dbg !14065
  %0 = load %struct.xhci_command*, %struct.xhci_command** %command.addr, align 8, !dbg !14066
  %tobool = icmp ne %struct.xhci_command* %0, null, !dbg !14066
  br i1 %tobool, label %if.end, label %if.then, !dbg !14068

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !14069
  br label %return, !dbg !14069

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !14070

do.body:                                          ; preds = %if.end
  br label %do.body2, !dbg !14071

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14072, metadata !DIExpression()), !dbg !14074
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14075, metadata !DIExpression()), !dbg !14074
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14074
  %conv = zext i1 %cmp to i32, !dbg !14074
  store i32 1, i32* %tmp, align 4, !dbg !14074
  %1 = load i32, i32* %tmp, align 4, !dbg !14074
  br label %do.body3, !dbg !14076

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14077

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !14078

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !14080, metadata !DIExpression()), !dbg !14083
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !14084, metadata !DIExpression()), !dbg !14083
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !14083
  %conv9 = zext i1 %cmp8 to i32, !dbg !14083
  store i32 1, i32* %tmp10, align 4, !dbg !14083
  %2 = load i32, i32* %tmp10, align 4, !dbg !14083
  %call = call i64 @arch_local_irq_save() #11, !dbg !14085
  store i64 %call, i64* %flags, align 8, !dbg !14085
  br label %do.end, !dbg !14085

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !14078

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !14077

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14086, !srcloc !14087
  br label %do.body13, !dbg !14086

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14088
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %3, i32 0, i32 12, !dbg !14088
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14089
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !14090
  %rlock.i = bitcast %union.anon.2* %5 to %struct.raw_spinlock*, !dbg !14090
  br label %do.end15, !dbg !14088

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !14086

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !14077

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14076

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !14071

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14091
  %xhc_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %6, i32 0, i32 47, !dbg !14092
  %7 = load i32, i32* %xhc_state, align 8, !dbg !14092
  %and = and i32 %7, 1, !dbg !14093
  %tobool20 = icmp ne i32 %and, 0, !dbg !14093
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !14094

if.then21:                                        ; preds = %do.end19
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14095
  %lock22 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %8, i32 0, i32 12, !dbg !14096
  %9 = load i64, i64* %flags, align 8, !dbg !14097
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i129, align 8
  store i64 %9, i64* %flags.addr.i130, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !14098
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !14098
  store i32 1, i32* %tmp.i131, align 4, !dbg !14098
  %10 = load i32, i32* %tmp.i131, align 4, !dbg !14098
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !14099
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !14099
  store i32 1, i32* %tmp8.i132, align 4, !dbg !14099
  %11 = load i32, i32* %tmp8.i132, align 4, !dbg !14099
  %12 = load i64, i64* %flags.addr.i130, align 8, !dbg !14100
  call void @arch_local_irq_restore(i64 %12) #13, !dbg !14100
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14101, !srcloc !6814
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i129, align 8, !dbg !14102
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !14102
  %rlock.i133 = bitcast %union.anon.2* %14 to %struct.raw_spinlock*, !dbg !14102
  store i32 -108, i32* %retval, align 4, !dbg !14103
  br label %return, !dbg !14103

if.end23:                                         ; preds = %do.end19
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14104
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %15, i32 0, i32 41, !dbg !14105
  %16 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14106
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %16, i32 0, i32 44, !dbg !14107
  %17 = load i32, i32* %slot_id, align 8, !dbg !14107
  %idxprom = sext i32 %17 to i64, !dbg !14104
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !14104
  %18 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !14104
  store %struct.xhci_virt_device* %18, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !14108
  %19 = load %struct.xhci_command*, %struct.xhci_command** %command.addr, align 8, !dbg !14109
  %in_ctx = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %19, i32 0, i32 0, !dbg !14110
  %20 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !14110
  %call24 = call %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx* %20) #11, !dbg !14111
  store %struct.xhci_input_control_ctx* %call24, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14112
  %21 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14113
  %tobool25 = icmp ne %struct.xhci_input_control_ctx* %21, null, !dbg !14113
  br i1 %tobool25, label %if.end29, label %if.then26, !dbg !14114

if.then26:                                        ; preds = %if.end23
  %22 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14115
  %lock27 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %22, i32 0, i32 12, !dbg !14116
  %23 = load i64, i64* %flags, align 8, !dbg !14117
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i134, align 8
  store i64 %23, i64* %flags.addr.i135, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !14118
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !14118
  store i32 1, i32* %tmp.i136, align 4, !dbg !14118
  %24 = load i32, i32* %tmp.i136, align 4, !dbg !14118
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !14119
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !14119
  store i32 1, i32* %tmp8.i137, align 4, !dbg !14119
  %25 = load i32, i32* %tmp8.i137, align 4, !dbg !14119
  %26 = load i64, i64* %flags.addr.i135, align 8, !dbg !14120
  call void @arch_local_irq_restore(i64 %26) #13, !dbg !14120
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14121, !srcloc !6814
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i134, align 8, !dbg !14122
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !14122
  %rlock.i138 = bitcast %union.anon.2* %28 to %struct.raw_spinlock*, !dbg !14122
  %29 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14123
  %call28 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %29) #11, !dbg !14123
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call28, i32 0, i32 0, !dbg !14123
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !14123
  %30 = load %struct.device*, %struct.device** %controller, align 8, !dbg !14123
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %30, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.xhci_configure_endpoint, i64 0, i64 0)) #12, !dbg !14123
  store i32 -12, i32* %retval, align 4, !dbg !14124
  br label %return, !dbg !14124

if.end29:                                         ; preds = %if.end23
  %31 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14125
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %31, i32 0, i32 50, !dbg !14126
  %32 = load i64, i64* %quirks, align 8, !dbg !14126
  %and30 = and i64 %32, 32, !dbg !14127
  %tobool31 = icmp ne i64 %and30, 0, !dbg !14127
  br i1 %tobool31, label %land.lhs.true, label %if.end39, !dbg !14128

land.lhs.true:                                    ; preds = %if.end29
  %33 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14129
  %34 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14130
  %call32 = call i32 @xhci_reserve_host_resources(%struct.xhci_hcd* %33, %struct.xhci_input_control_ctx* %34) #11, !dbg !14131
  %tobool33 = icmp ne i32 %call32, 0, !dbg !14131
  br i1 %tobool33, label %if.then34, label %if.end39, !dbg !14132

if.then34:                                        ; preds = %land.lhs.true
  %35 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14133
  %lock35 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %35, i32 0, i32 12, !dbg !14134
  %36 = load i64, i64* %flags, align 8, !dbg !14135
  store %struct.spinlock* %lock35, %struct.spinlock** %lock.addr.i139, align 8
  store i64 %36, i64* %flags.addr.i140, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !14136
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !14136
  store i32 1, i32* %tmp.i141, align 4, !dbg !14136
  %37 = load i32, i32* %tmp.i141, align 4, !dbg !14136
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !14137
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !14137
  store i32 1, i32* %tmp8.i142, align 4, !dbg !14137
  %38 = load i32, i32* %tmp8.i142, align 4, !dbg !14137
  %39 = load i64, i64* %flags.addr.i140, align 8, !dbg !14138
  call void @arch_local_irq_restore(i64 %39) #13, !dbg !14138
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14139, !srcloc !6814
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i139, align 8, !dbg !14140
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !14140
  %rlock.i143 = bitcast %union.anon.2* %41 to %struct.raw_spinlock*, !dbg !14140
  %42 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14141
  %call36 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %42) #11, !dbg !14141
  %self37 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call36, i32 0, i32 0, !dbg !14141
  %controller38 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self37, i32 0, i32 0, !dbg !14141
  %43 = load %struct.device*, %struct.device** %controller38, align 8, !dbg !14141
  %44 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14141
  %num_active_eps = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %44, i32 0, i32 51, !dbg !14141
  %45 = load i32, i32* %num_active_eps, align 8, !dbg !14141
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %43, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.27, i64 0, i64 0), i32 %45) #12, !dbg !14141
  store i32 -12, i32* %retval, align 4, !dbg !14142
  br label %return, !dbg !14142

if.end39:                                         ; preds = %land.lhs.true, %if.end29
  %46 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14143
  %quirks40 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %46, i32 0, i32 50, !dbg !14144
  %47 = load i64, i64* %quirks40, align 8, !dbg !14144
  %and41 = and i64 %47, 256, !dbg !14145
  %tobool42 = icmp ne i64 %and41, 0, !dbg !14145
  br i1 %tobool42, label %land.lhs.true43, label %if.end57, !dbg !14146

land.lhs.true43:                                  ; preds = %if.end39
  %48 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14147
  %49 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !14148
  %50 = load %struct.xhci_command*, %struct.xhci_command** %command.addr, align 8, !dbg !14149
  %in_ctx44 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %50, i32 0, i32 0, !dbg !14150
  %51 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx44, align 8, !dbg !14150
  %call45 = call i32 @xhci_reserve_bandwidth(%struct.xhci_hcd* %48, %struct.xhci_virt_device* %49, %struct.xhci_container_ctx* %51) #11, !dbg !14151
  %tobool46 = icmp ne i32 %call45, 0, !dbg !14151
  br i1 %tobool46, label %if.then47, label %if.end57, !dbg !14152

if.then47:                                        ; preds = %land.lhs.true43
  %52 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14153
  %quirks48 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %52, i32 0, i32 50, !dbg !14155
  %53 = load i64, i64* %quirks48, align 8, !dbg !14155
  %and49 = and i64 %53, 32, !dbg !14156
  %tobool50 = icmp ne i64 %and49, 0, !dbg !14156
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !14157

if.then51:                                        ; preds = %if.then47
  %54 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14158
  %55 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14159
  call void @xhci_free_host_resources(%struct.xhci_hcd* %54, %struct.xhci_input_control_ctx* %55) #11, !dbg !14160
  br label %if.end52, !dbg !14160

if.end52:                                         ; preds = %if.then51, %if.then47
  %56 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14161
  %lock53 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %56, i32 0, i32 12, !dbg !14162
  %57 = load i64, i64* %flags, align 8, !dbg !14163
  store %struct.spinlock* %lock53, %struct.spinlock** %lock.addr.i144, align 8
  store i64 %57, i64* %flags.addr.i145, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !14164
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !14164
  store i32 1, i32* %tmp.i146, align 4, !dbg !14164
  %58 = load i32, i32* %tmp.i146, align 4, !dbg !14164
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !14165
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !14165
  store i32 1, i32* %tmp8.i147, align 4, !dbg !14165
  %59 = load i32, i32* %tmp8.i147, align 4, !dbg !14165
  %60 = load i64, i64* %flags.addr.i145, align 8, !dbg !14166
  call void @arch_local_irq_restore(i64 %60) #13, !dbg !14166
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14167, !srcloc !6814
  %61 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i144, align 8, !dbg !14168
  %62 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %61, i32 0, i32 0, !dbg !14168
  %rlock.i148 = bitcast %union.anon.2* %62 to %struct.raw_spinlock*, !dbg !14168
  %63 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14169
  %call54 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %63) #11, !dbg !14169
  %self55 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call54, i32 0, i32 0, !dbg !14169
  %controller56 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self55, i32 0, i32 0, !dbg !14169
  %64 = load %struct.device*, %struct.device** %controller56, align 8, !dbg !14169
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %64, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.76, i64 0, i64 0)) #12, !dbg !14169
  store i32 -12, i32* %retval, align 4, !dbg !14170
  br label %return, !dbg !14170

if.end57:                                         ; preds = %land.lhs.true43, %if.end39
  %65 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14171
  %66 = load %struct.xhci_command*, %struct.xhci_command** %command.addr, align 8, !dbg !14172
  %in_ctx58 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %66, i32 0, i32 0, !dbg !14173
  %67 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx58, align 8, !dbg !14173
  %call59 = call %struct.xhci_slot_ctx* @xhci_get_slot_ctx(%struct.xhci_hcd* %65, %struct.xhci_container_ctx* %67) #11, !dbg !14174
  store %struct.xhci_slot_ctx* %call59, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !14175
  %68 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14176
  call void @trace_xhci_configure_endpoint_ctrl_ctx(%struct.xhci_input_control_ctx* %68) #11, !dbg !14177
  %69 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !14178
  call void @trace_xhci_configure_endpoint(%struct.xhci_slot_ctx* %69) #11, !dbg !14179
  %70 = load i8, i8* %ctx_change.addr, align 1, !dbg !14180
  %tobool60 = trunc i8 %70 to i1, !dbg !14180
  br i1 %tobool60, label %if.else, label %if.then61, !dbg !14182

if.then61:                                        ; preds = %if.end57
  %71 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14183
  %72 = load %struct.xhci_command*, %struct.xhci_command** %command.addr, align 8, !dbg !14184
  %73 = load %struct.xhci_command*, %struct.xhci_command** %command.addr, align 8, !dbg !14185
  %in_ctx62 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %73, i32 0, i32 0, !dbg !14186
  %74 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx62, align 8, !dbg !14186
  %dma = getelementptr inbounds %struct.xhci_container_ctx, %struct.xhci_container_ctx* %74, i32 0, i32 3, !dbg !14187
  %75 = load i64, i64* %dma, align 8, !dbg !14187
  %76 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14188
  %slot_id63 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %76, i32 0, i32 44, !dbg !14189
  %77 = load i32, i32* %slot_id63, align 8, !dbg !14189
  %78 = load i8, i8* %must_succeed.addr, align 1, !dbg !14190
  %tobool64 = trunc i8 %78 to i1, !dbg !14190
  %call65 = call i32 @xhci_queue_configure_endpoint(%struct.xhci_hcd* %71, %struct.xhci_command* %72, i64 %75, i32 %77, i1 zeroext %tobool64) #11, !dbg !14191
  store i32 %call65, i32* %ret, align 4, !dbg !14192
  br label %if.end71, !dbg !14193

if.else:                                          ; preds = %if.end57
  %79 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14194
  %80 = load %struct.xhci_command*, %struct.xhci_command** %command.addr, align 8, !dbg !14195
  %81 = load %struct.xhci_command*, %struct.xhci_command** %command.addr, align 8, !dbg !14196
  %in_ctx66 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %81, i32 0, i32 0, !dbg !14197
  %82 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx66, align 8, !dbg !14197
  %dma67 = getelementptr inbounds %struct.xhci_container_ctx, %struct.xhci_container_ctx* %82, i32 0, i32 3, !dbg !14198
  %83 = load i64, i64* %dma67, align 8, !dbg !14198
  %84 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14199
  %slot_id68 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %84, i32 0, i32 44, !dbg !14200
  %85 = load i32, i32* %slot_id68, align 8, !dbg !14200
  %86 = load i8, i8* %must_succeed.addr, align 1, !dbg !14201
  %tobool69 = trunc i8 %86 to i1, !dbg !14201
  %call70 = call i32 @xhci_queue_evaluate_context(%struct.xhci_hcd* %79, %struct.xhci_command* %80, i64 %83, i32 %85, i1 zeroext %tobool69) #11, !dbg !14202
  store i32 %call70, i32* %ret, align 4, !dbg !14203
  br label %if.end71

if.end71:                                         ; preds = %if.else, %if.then61
  %87 = load i32, i32* %ret, align 4, !dbg !14204
  %cmp72 = icmp slt i32 %87, 0, !dbg !14205
  br i1 %cmp72, label %if.then74, label %if.end81, !dbg !14206

if.then74:                                        ; preds = %if.end71
  %88 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14207
  %quirks75 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %88, i32 0, i32 50, !dbg !14209
  %89 = load i64, i64* %quirks75, align 8, !dbg !14209
  %and76 = and i64 %89, 32, !dbg !14210
  %tobool77 = icmp ne i64 %and76, 0, !dbg !14210
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !14211

if.then78:                                        ; preds = %if.then74
  %90 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14212
  %91 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14213
  call void @xhci_free_host_resources(%struct.xhci_hcd* %90, %struct.xhci_input_control_ctx* %91) #11, !dbg !14214
  br label %if.end79, !dbg !14214

if.end79:                                         ; preds = %if.then78, %if.then74
  %92 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14215
  %lock80 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %92, i32 0, i32 12, !dbg !14216
  %93 = load i64, i64* %flags, align 8, !dbg !14217
  store %struct.spinlock* %lock80, %struct.spinlock** %lock.addr.i149, align 8
  store i64 %93, i64* %flags.addr.i150, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !14218
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !14218
  store i32 1, i32* %tmp.i151, align 4, !dbg !14218
  %94 = load i32, i32* %tmp.i151, align 4, !dbg !14218
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !14219
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !14219
  store i32 1, i32* %tmp8.i152, align 4, !dbg !14219
  %95 = load i32, i32* %tmp8.i152, align 4, !dbg !14219
  %96 = load i64, i64* %flags.addr.i150, align 8, !dbg !14220
  call void @arch_local_irq_restore(i64 %96) #13, !dbg !14220
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14221, !srcloc !6814
  %97 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i149, align 8, !dbg !14222
  %98 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %97, i32 0, i32 0, !dbg !14222
  %rlock.i153 = bitcast %union.anon.2* %98 to %struct.raw_spinlock*, !dbg !14222
  %99 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14223
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %99, void (%struct.va_format*)* @trace_xhci_dbg_context_change, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.77, i64 0, i64 0)) #11, !dbg !14224
  store i32 -12, i32* %retval, align 4, !dbg !14225
  br label %return, !dbg !14225

if.end81:                                         ; preds = %if.end71
  %100 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14226
  call void @xhci_ring_cmd_db(%struct.xhci_hcd* %100) #11, !dbg !14227
  %101 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14228
  %lock82 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %101, i32 0, i32 12, !dbg !14229
  %102 = load i64, i64* %flags, align 8, !dbg !14230
  store %struct.spinlock* %lock82, %struct.spinlock** %lock.addr.i154, align 8
  store i64 %102, i64* %flags.addr.i155, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !14231
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !14231
  store i32 1, i32* %tmp.i156, align 4, !dbg !14231
  %103 = load i32, i32* %tmp.i156, align 4, !dbg !14231
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !14232
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !14232
  store i32 1, i32* %tmp8.i157, align 4, !dbg !14232
  %104 = load i32, i32* %tmp8.i157, align 4, !dbg !14232
  %105 = load i64, i64* %flags.addr.i155, align 8, !dbg !14233
  call void @arch_local_irq_restore(i64 %105) #13, !dbg !14233
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14234, !srcloc !6814
  %106 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i154, align 8, !dbg !14235
  %107 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %106, i32 0, i32 0, !dbg !14235
  %rlock.i158 = bitcast %union.anon.2* %107 to %struct.raw_spinlock*, !dbg !14235
  %108 = load %struct.xhci_command*, %struct.xhci_command** %command.addr, align 8, !dbg !14236
  %completion = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %108, i32 0, i32 3, !dbg !14237
  %109 = load %struct.completion*, %struct.completion** %completion, align 8, !dbg !14237
  call void @wait_for_completion(%struct.completion* %109) #11, !dbg !14238
  %110 = load i8, i8* %ctx_change.addr, align 1, !dbg !14239
  %tobool83 = trunc i8 %110 to i1, !dbg !14239
  br i1 %tobool83, label %if.else86, label %if.then84, !dbg !14241

if.then84:                                        ; preds = %if.end81
  %111 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14242
  %112 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14243
  %113 = load %struct.xhci_command*, %struct.xhci_command** %command.addr, align 8, !dbg !14244
  %status = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %113, i32 0, i32 1, !dbg !14245
  %call85 = call i32 @xhci_configure_endpoint_result(%struct.xhci_hcd* %111, %struct.usb_device* %112, i32* %status) #11, !dbg !14246
  store i32 %call85, i32* %ret, align 4, !dbg !14247
  br label %if.end89, !dbg !14248

if.else86:                                        ; preds = %if.end81
  %114 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14249
  %115 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14250
  %116 = load %struct.xhci_command*, %struct.xhci_command** %command.addr, align 8, !dbg !14251
  %status87 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %116, i32 0, i32 1, !dbg !14252
  %call88 = call i32 @xhci_evaluate_context_result(%struct.xhci_hcd* %114, %struct.usb_device* %115, i32* %status87) #11, !dbg !14253
  store i32 %call88, i32* %ret, align 4, !dbg !14254
  br label %if.end89

if.end89:                                         ; preds = %if.else86, %if.then84
  %117 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14255
  %quirks90 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %117, i32 0, i32 50, !dbg !14256
  %118 = load i64, i64* %quirks90, align 8, !dbg !14256
  %and91 = and i64 %118, 32, !dbg !14257
  %tobool92 = icmp ne i64 %and91, 0, !dbg !14257
  br i1 %tobool92, label %if.then93, label %if.end126, !dbg !14258

if.then93:                                        ; preds = %if.end89
  br label %do.body94, !dbg !14259

do.body94:                                        ; preds = %if.then93
  br label %do.body95, !dbg !14260

do.body95:                                        ; preds = %do.body94
  call void @llvm.dbg.declare(metadata i64* %__dummy96, metadata !14261, metadata !DIExpression()), !dbg !14263
  call void @llvm.dbg.declare(metadata i64* %__dummy297, metadata !14264, metadata !DIExpression()), !dbg !14263
  %cmp98 = icmp eq i64* %__dummy96, %__dummy297, !dbg !14263
  %conv99 = zext i1 %cmp98 to i32, !dbg !14263
  store i32 1, i32* %tmp100, align 4, !dbg !14263
  %119 = load i32, i32* %tmp100, align 4, !dbg !14263
  br label %do.body101, !dbg !14265

do.body101:                                       ; preds = %do.body95
  br label %do.body102, !dbg !14266

do.body102:                                       ; preds = %do.body101
  br label %do.body103, !dbg !14267

do.body103:                                       ; preds = %do.body102
  call void @llvm.dbg.declare(metadata i64* %__dummy104, metadata !14269, metadata !DIExpression()), !dbg !14272
  call void @llvm.dbg.declare(metadata i64* %__dummy2105, metadata !14273, metadata !DIExpression()), !dbg !14272
  %cmp106 = icmp eq i64* %__dummy104, %__dummy2105, !dbg !14272
  %conv107 = zext i1 %cmp106 to i32, !dbg !14272
  store i32 1, i32* %tmp108, align 4, !dbg !14272
  %120 = load i32, i32* %tmp108, align 4, !dbg !14272
  %call109 = call i64 @arch_local_irq_save() #11, !dbg !14274
  store i64 %call109, i64* %flags, align 8, !dbg !14274
  br label %do.end110, !dbg !14274

do.end110:                                        ; preds = %do.body103
  br label %do.end111, !dbg !14267

do.end111:                                        ; preds = %do.end110
  br label %do.body112, !dbg !14266

do.body112:                                       ; preds = %do.end111
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14275, !srcloc !14276
  br label %do.body113, !dbg !14275

do.body113:                                       ; preds = %do.body112
  %121 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14277
  %lock114 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %121, i32 0, i32 12, !dbg !14277
  store %struct.spinlock* %lock114, %struct.spinlock** %lock.addr.i159, align 8
  %122 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i159, align 8, !dbg !14278
  %123 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %122, i32 0, i32 0, !dbg !14279
  %rlock.i160 = bitcast %union.anon.2* %123 to %struct.raw_spinlock*, !dbg !14279
  br label %do.end116, !dbg !14277

do.end116:                                        ; preds = %do.body113
  br label %do.end117, !dbg !14275

do.end117:                                        ; preds = %do.end116
  br label %do.end118, !dbg !14266

do.end118:                                        ; preds = %do.end117
  br label %do.end119, !dbg !14265

do.end119:                                        ; preds = %do.end118
  br label %do.end120, !dbg !14260

do.end120:                                        ; preds = %do.end119
  %124 = load i32, i32* %ret, align 4, !dbg !14280
  %tobool121 = icmp ne i32 %124, 0, !dbg !14280
  br i1 %tobool121, label %if.then122, label %if.else123, !dbg !14282

if.then122:                                       ; preds = %do.end120
  %125 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14283
  %126 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14284
  call void @xhci_free_host_resources(%struct.xhci_hcd* %125, %struct.xhci_input_control_ctx* %126) #11, !dbg !14285
  br label %if.end124, !dbg !14285

if.else123:                                       ; preds = %do.end120
  %127 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14286
  %128 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14287
  call void @xhci_finish_resource_reservation(%struct.xhci_hcd* %127, %struct.xhci_input_control_ctx* %128) #11, !dbg !14288
  br label %if.end124

if.end124:                                        ; preds = %if.else123, %if.then122
  %129 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14289
  %lock125 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %129, i32 0, i32 12, !dbg !14290
  %130 = load i64, i64* %flags, align 8, !dbg !14291
  store %struct.spinlock* %lock125, %struct.spinlock** %lock.addr.i127, align 8
  store i64 %130, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !14292
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !14292
  store i32 1, i32* %tmp.i, align 4, !dbg !14292
  %131 = load i32, i32* %tmp.i, align 4, !dbg !14292
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !14293
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !14293
  store i32 1, i32* %tmp8.i, align 4, !dbg !14293
  %132 = load i32, i32* %tmp8.i, align 4, !dbg !14293
  %133 = load i64, i64* %flags.addr.i, align 8, !dbg !14294
  call void @arch_local_irq_restore(i64 %133) #13, !dbg !14294
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !14295, !srcloc !6814
  %134 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i127, align 8, !dbg !14296
  %135 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %134, i32 0, i32 0, !dbg !14296
  %rlock.i128 = bitcast %union.anon.2* %135 to %struct.raw_spinlock*, !dbg !14296
  br label %if.end126, !dbg !14297

if.end126:                                        ; preds = %if.end124, %if.end89
  %136 = load i32, i32* %ret, align 4, !dbg !14298
  store i32 %136, i32* %retval, align 4, !dbg !14299
  br label %return, !dbg !14299

return:                                           ; preds = %if.end126, %if.end79, %if.end52, %if.then34, %if.then26, %if.then21, %if.then
  %137 = load i32, i32* %retval, align 4, !dbg !14300
  ret i32 %137, !dbg !14300
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_reserve_host_resources(%struct.xhci_hcd* %xhci, %struct.xhci_input_control_ctx* %ctrl_ctx) #1 !dbg !14301 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %ctrl_ctx.addr = alloca %struct.xhci_input_control_ctx*, align 8
  %added_eps = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !14304, metadata !DIExpression()), !dbg !14305
  store %struct.xhci_input_control_ctx* %ctrl_ctx, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx.addr, metadata !14306, metadata !DIExpression()), !dbg !14307
  call void @llvm.dbg.declare(metadata i32* %added_eps, metadata !14308, metadata !DIExpression()), !dbg !14309
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14310
  %1 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8, !dbg !14311
  %call = call i32 @xhci_count_num_new_endpoints(%struct.xhci_hcd* %0, %struct.xhci_input_control_ctx* %1) #11, !dbg !14312
  store i32 %call, i32* %added_eps, align 4, !dbg !14313
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14314
  %num_active_eps = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %2, i32 0, i32 51, !dbg !14316
  %3 = load i32, i32* %num_active_eps, align 8, !dbg !14316
  %4 = load i32, i32* %added_eps, align 4, !dbg !14317
  %add = add i32 %3, %4, !dbg !14318
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14319
  %limit_active_eps = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 52, !dbg !14320
  %6 = load i32, i32* %limit_active_eps, align 4, !dbg !14320
  %cmp = icmp ugt i32 %add, %6, !dbg !14321
  br i1 %cmp, label %if.then, label %if.end, !dbg !14322

if.then:                                          ; preds = %entry
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14323
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14325
  %num_active_eps1 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %8, i32 0, i32 51, !dbg !14326
  %9 = load i32, i32* %num_active_eps1, align 8, !dbg !14326
  %10 = load i32, i32* %added_eps, align 4, !dbg !14327
  %11 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14328
  %limit_active_eps2 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %11, i32 0, i32 52, !dbg !14329
  %12 = load i32, i32* %limit_active_eps2, align 4, !dbg !14329
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %7, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.78, i64 0, i64 0), i32 %9, i32 %10, i32 %12) #11, !dbg !14330
  store i32 -12, i32* %retval, align 4, !dbg !14331
  br label %return, !dbg !14331

if.end:                                           ; preds = %entry
  %13 = load i32, i32* %added_eps, align 4, !dbg !14332
  %14 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14333
  %num_active_eps3 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %14, i32 0, i32 51, !dbg !14334
  %15 = load i32, i32* %num_active_eps3, align 8, !dbg !14335
  %add4 = add i32 %15, %13, !dbg !14335
  store i32 %add4, i32* %num_active_eps3, align 8, !dbg !14335
  %16 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14336
  %17 = load i32, i32* %added_eps, align 4, !dbg !14337
  %18 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14338
  %num_active_eps5 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %18, i32 0, i32 51, !dbg !14339
  %19 = load i32, i32* %num_active_eps5, align 8, !dbg !14339
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %16, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.79, i64 0, i64 0), i32 %17, i32 %19) #11, !dbg !14340
  store i32 0, i32* %retval, align 4, !dbg !14341
  br label %return, !dbg !14341

return:                                           ; preds = %if.end, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !14342
  ret i32 %20, !dbg !14342
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_reserve_bandwidth(%struct.xhci_hcd* %xhci, %struct.xhci_virt_device* %virt_dev, %struct.xhci_container_ctx* %in_ctx) #1 !dbg !14343 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %virt_dev.addr = alloca %struct.xhci_virt_device*, align 8
  %in_ctx.addr = alloca %struct.xhci_container_ctx*, align 8
  %ep_bw_info = alloca [31 x %struct.xhci_bw_info], align 16
  %i = alloca i32, align 4
  %ctrl_ctx = alloca %struct.xhci_input_control_ctx*, align 8
  %old_active_eps = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !14346, metadata !DIExpression()), !dbg !14347
  store %struct.xhci_virt_device* %virt_dev, %struct.xhci_virt_device** %virt_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev.addr, metadata !14348, metadata !DIExpression()), !dbg !14349
  store %struct.xhci_container_ctx* %in_ctx, %struct.xhci_container_ctx** %in_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_container_ctx** %in_ctx.addr, metadata !14350, metadata !DIExpression()), !dbg !14351
  call void @llvm.dbg.declare(metadata [31 x %struct.xhci_bw_info]* %ep_bw_info, metadata !14352, metadata !DIExpression()), !dbg !14354
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14355, metadata !DIExpression()), !dbg !14356
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx, metadata !14357, metadata !DIExpression()), !dbg !14358
  call void @llvm.dbg.declare(metadata i32* %old_active_eps, metadata !14359, metadata !DIExpression()), !dbg !14360
  store i32 0, i32* %old_active_eps, align 4, !dbg !14360
  %0 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14361
  %tt_info = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %0, i32 0, i32 7, !dbg !14363
  %1 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info, align 8, !dbg !14363
  %tobool = icmp ne %struct.xhci_tt_bw_info* %1, null, !dbg !14361
  br i1 %tobool, label %if.then, label %if.end, !dbg !14364

if.then:                                          ; preds = %entry
  %2 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14365
  %tt_info1 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %2, i32 0, i32 7, !dbg !14366
  %3 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info1, align 8, !dbg !14366
  %active_eps = getelementptr inbounds %struct.xhci_tt_bw_info, %struct.xhci_tt_bw_info* %3, i32 0, i32 4, !dbg !14367
  %4 = load i32, i32* %active_eps, align 8, !dbg !14367
  store i32 %4, i32* %old_active_eps, align 4, !dbg !14368
  br label %if.end, !dbg !14369

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx.addr, align 8, !dbg !14370
  %call = call %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx* %5) #11, !dbg !14371
  store %struct.xhci_input_control_ctx* %call, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14372
  %6 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14373
  %tobool2 = icmp ne %struct.xhci_input_control_ctx* %6, null, !dbg !14373
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !14375

if.then3:                                         ; preds = %if.end
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14376
  %call4 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %7) #11, !dbg !14376
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call4, i32 0, i32 0, !dbg !14376
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !14376
  %8 = load %struct.device*, %struct.device** %controller, align 8, !dbg !14376
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %8, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.xhci_reserve_bandwidth, i64 0, i64 0)) #12, !dbg !14376
  store i32 -12, i32* %retval, align 4, !dbg !14378
  br label %return, !dbg !14378

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !14379
  br label %for.cond, !dbg !14381

for.cond:                                         ; preds = %for.inc, %if.end5
  %9 = load i32, i32* %i, align 4, !dbg !14382
  %cmp = icmp slt i32 %9, 31, !dbg !14384
  br i1 %cmp, label %for.body, label %for.end, !dbg !14385

for.body:                                         ; preds = %for.cond
  %10 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14386
  %add_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %10, i32 0, i32 1, !dbg !14386
  %11 = load i32, i32* %add_flags, align 4, !dbg !14386
  %12 = load i32, i32* %i, align 4, !dbg !14386
  %add = add i32 %12, 1, !dbg !14386
  %shl = shl i32 1, %add, !dbg !14386
  %and = and i32 %11, %shl, !dbg !14386
  %tobool6 = icmp ne i32 %and, 0, !dbg !14386
  br i1 %tobool6, label %if.end12, label %land.lhs.true, !dbg !14389

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14390
  %drop_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %13, i32 0, i32 0, !dbg !14390
  %14 = load i32, i32* %drop_flags, align 4, !dbg !14390
  %15 = load i32, i32* %i, align 4, !dbg !14390
  %add7 = add i32 %15, 1, !dbg !14390
  %shl8 = shl i32 1, %add7, !dbg !14390
  %and9 = and i32 %14, %shl8, !dbg !14390
  %tobool10 = icmp ne i32 %and9, 0, !dbg !14390
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !14391

if.then11:                                        ; preds = %land.lhs.true
  br label %for.inc, !dbg !14392

if.end12:                                         ; preds = %land.lhs.true, %for.body
  %16 = load i32, i32* %i, align 4, !dbg !14393
  %idxprom = sext i32 %16 to i64, !dbg !14394
  %arrayidx = getelementptr [31 x %struct.xhci_bw_info], [31 x %struct.xhci_bw_info]* %ep_bw_info, i64 0, i64 %idxprom, !dbg !14394
  %17 = bitcast %struct.xhci_bw_info* %arrayidx to i8*, !dbg !14395
  %18 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14396
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %18, i32 0, i32 3, !dbg !14397
  %19 = load i32, i32* %i, align 4, !dbg !14398
  %idxprom13 = sext i32 %19 to i64, !dbg !14396
  %arrayidx14 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom13, !dbg !14396
  %bw_info = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx14, i32 0, i32 10, !dbg !14399
  %20 = bitcast %struct.xhci_bw_info* %bw_info to i8*, !dbg !14395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 4 %20, i64 24, i1 false), !dbg !14395
  %21 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14400
  %drop_flags15 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %21, i32 0, i32 0, !dbg !14400
  %22 = load i32, i32* %drop_flags15, align 4, !dbg !14400
  %23 = load i32, i32* %i, align 4, !dbg !14400
  %add16 = add i32 %23, 1, !dbg !14400
  %shl17 = shl i32 1, %add16, !dbg !14400
  %and18 = and i32 %22, %shl17, !dbg !14400
  %tobool19 = icmp ne i32 %and18, 0, !dbg !14400
  br i1 %tobool19, label %if.then20, label %if.end29, !dbg !14402

if.then20:                                        ; preds = %if.end12
  %24 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14403
  %25 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14404
  %eps21 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %25, i32 0, i32 3, !dbg !14405
  %26 = load i32, i32* %i, align 4, !dbg !14406
  %idxprom22 = sext i32 %26 to i64, !dbg !14404
  %arrayidx23 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps21, i64 0, i64 %idxprom22, !dbg !14404
  %bw_info24 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx23, i32 0, i32 10, !dbg !14407
  %27 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14408
  %bw_table = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %27, i32 0, i32 6, !dbg !14409
  %28 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table, align 8, !dbg !14409
  %29 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14410
  %udev = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %29, i32 0, i32 0, !dbg !14411
  %30 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !14411
  %31 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14412
  %eps25 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %31, i32 0, i32 3, !dbg !14413
  %32 = load i32, i32* %i, align 4, !dbg !14414
  %idxprom26 = sext i32 %32 to i64, !dbg !14412
  %arrayidx27 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps25, i64 0, i64 %idxprom26, !dbg !14412
  %33 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14415
  %tt_info28 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %33, i32 0, i32 7, !dbg !14416
  %34 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info28, align 8, !dbg !14416
  call void @xhci_drop_ep_from_interval_table(%struct.xhci_hcd* %24, %struct.xhci_bw_info* %bw_info24, %struct.xhci_interval_bw_table* %28, %struct.usb_device* %30, %struct.xhci_virt_ep* %arrayidx27, %struct.xhci_tt_bw_info* %34) #11, !dbg !14417
  br label %if.end29, !dbg !14417

if.end29:                                         ; preds = %if.then20, %if.end12
  br label %for.inc, !dbg !14418

for.inc:                                          ; preds = %if.end29, %if.then11
  %35 = load i32, i32* %i, align 4, !dbg !14419
  %inc = add i32 %35, 1, !dbg !14419
  store i32 %inc, i32* %i, align 4, !dbg !14419
  br label %for.cond, !dbg !14420, !llvm.loop !14421

for.end:                                          ; preds = %for.cond
  %36 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14423
  %37 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14424
  %in_ctx30 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %37, i32 0, i32 2, !dbg !14425
  %38 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx30, align 8, !dbg !14425
  %39 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14426
  %40 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14427
  call void @xhci_update_bw_info(%struct.xhci_hcd* %36, %struct.xhci_container_ctx* %38, %struct.xhci_input_control_ctx* %39, %struct.xhci_virt_device* %40) #11, !dbg !14428
  store i32 0, i32* %i, align 4, !dbg !14429
  br label %for.cond31, !dbg !14431

for.cond31:                                       ; preds = %for.inc51, %for.end
  %41 = load i32, i32* %i, align 4, !dbg !14432
  %cmp32 = icmp slt i32 %41, 31, !dbg !14434
  br i1 %cmp32, label %for.body33, label %for.end53, !dbg !14435

for.body33:                                       ; preds = %for.cond31
  %42 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14436
  %add_flags34 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %42, i32 0, i32 1, !dbg !14436
  %43 = load i32, i32* %add_flags34, align 4, !dbg !14436
  %44 = load i32, i32* %i, align 4, !dbg !14436
  %add35 = add i32 %44, 1, !dbg !14436
  %shl36 = shl i32 1, %add35, !dbg !14436
  %and37 = and i32 %43, %shl36, !dbg !14436
  %tobool38 = icmp ne i32 %and37, 0, !dbg !14436
  br i1 %tobool38, label %if.then39, label %if.end50, !dbg !14439

if.then39:                                        ; preds = %for.body33
  %45 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14440
  %46 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14441
  %eps40 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %46, i32 0, i32 3, !dbg !14442
  %47 = load i32, i32* %i, align 4, !dbg !14443
  %idxprom41 = sext i32 %47 to i64, !dbg !14441
  %arrayidx42 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps40, i64 0, i64 %idxprom41, !dbg !14441
  %bw_info43 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx42, i32 0, i32 10, !dbg !14444
  %48 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14445
  %bw_table44 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %48, i32 0, i32 6, !dbg !14446
  %49 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table44, align 8, !dbg !14446
  %50 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14447
  %udev45 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %50, i32 0, i32 0, !dbg !14448
  %51 = load %struct.usb_device*, %struct.usb_device** %udev45, align 8, !dbg !14448
  %52 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14449
  %eps46 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %52, i32 0, i32 3, !dbg !14450
  %53 = load i32, i32* %i, align 4, !dbg !14451
  %idxprom47 = sext i32 %53 to i64, !dbg !14449
  %arrayidx48 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps46, i64 0, i64 %idxprom47, !dbg !14449
  %54 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14452
  %tt_info49 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %54, i32 0, i32 7, !dbg !14453
  %55 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info49, align 8, !dbg !14453
  call void @xhci_add_ep_to_interval_table(%struct.xhci_hcd* %45, %struct.xhci_bw_info* %bw_info43, %struct.xhci_interval_bw_table* %49, %struct.usb_device* %51, %struct.xhci_virt_ep* %arrayidx48, %struct.xhci_tt_bw_info* %55) #11, !dbg !14454
  br label %if.end50, !dbg !14454

if.end50:                                         ; preds = %if.then39, %for.body33
  br label %for.inc51, !dbg !14455

for.inc51:                                        ; preds = %if.end50
  %56 = load i32, i32* %i, align 4, !dbg !14456
  %inc52 = add i32 %56, 1, !dbg !14456
  store i32 %inc52, i32* %i, align 4, !dbg !14456
  br label %for.cond31, !dbg !14457, !llvm.loop !14458

for.end53:                                        ; preds = %for.cond31
  %57 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14460
  %58 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14462
  %59 = load i32, i32* %old_active_eps, align 4, !dbg !14463
  %call54 = call i32 @xhci_check_bw_table(%struct.xhci_hcd* %57, %struct.xhci_virt_device* %58, i32 %59) #11, !dbg !14464
  %tobool55 = icmp ne i32 %call54, 0, !dbg !14464
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !14465

if.then56:                                        ; preds = %for.end53
  %60 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14466
  %61 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14468
  %62 = load i32, i32* %old_active_eps, align 4, !dbg !14469
  call void @xhci_update_tt_active_eps(%struct.xhci_hcd* %60, %struct.xhci_virt_device* %61, i32 %62) #11, !dbg !14470
  store i32 0, i32* %retval, align 4, !dbg !14471
  br label %return, !dbg !14471

if.end57:                                         ; preds = %for.end53
  store i32 0, i32* %i, align 4, !dbg !14472
  br label %for.cond58, !dbg !14474

for.cond58:                                       ; preds = %for.inc114, %if.end57
  %63 = load i32, i32* %i, align 4, !dbg !14475
  %cmp59 = icmp slt i32 %63, 31, !dbg !14477
  br i1 %cmp59, label %for.body60, label %for.end116, !dbg !14478

for.body60:                                       ; preds = %for.cond58
  %64 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14479
  %add_flags61 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %64, i32 0, i32 1, !dbg !14479
  %65 = load i32, i32* %add_flags61, align 4, !dbg !14479
  %66 = load i32, i32* %i, align 4, !dbg !14479
  %add62 = add i32 %66, 1, !dbg !14479
  %shl63 = shl i32 1, %add62, !dbg !14479
  %and64 = and i32 %65, %shl63, !dbg !14479
  %tobool65 = icmp ne i32 %and64, 0, !dbg !14479
  br i1 %tobool65, label %if.end73, label %land.lhs.true66, !dbg !14482

land.lhs.true66:                                  ; preds = %for.body60
  %67 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14483
  %drop_flags67 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %67, i32 0, i32 0, !dbg !14483
  %68 = load i32, i32* %drop_flags67, align 4, !dbg !14483
  %69 = load i32, i32* %i, align 4, !dbg !14483
  %add68 = add i32 %69, 1, !dbg !14483
  %shl69 = shl i32 1, %add68, !dbg !14483
  %and70 = and i32 %68, %shl69, !dbg !14483
  %tobool71 = icmp ne i32 %and70, 0, !dbg !14483
  br i1 %tobool71, label %if.end73, label %if.then72, !dbg !14484

if.then72:                                        ; preds = %land.lhs.true66
  br label %for.inc114, !dbg !14485

if.end73:                                         ; preds = %land.lhs.true66, %for.body60
  %70 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14486
  %add_flags74 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %70, i32 0, i32 1, !dbg !14486
  %71 = load i32, i32* %add_flags74, align 4, !dbg !14486
  %72 = load i32, i32* %i, align 4, !dbg !14486
  %add75 = add i32 %72, 1, !dbg !14486
  %shl76 = shl i32 1, %add75, !dbg !14486
  %and77 = and i32 %71, %shl76, !dbg !14486
  %tobool78 = icmp ne i32 %and77, 0, !dbg !14486
  br i1 %tobool78, label %if.then79, label %if.end90, !dbg !14488

if.then79:                                        ; preds = %if.end73
  %73 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14489
  %74 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14491
  %eps80 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %74, i32 0, i32 3, !dbg !14492
  %75 = load i32, i32* %i, align 4, !dbg !14493
  %idxprom81 = sext i32 %75 to i64, !dbg !14491
  %arrayidx82 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps80, i64 0, i64 %idxprom81, !dbg !14491
  %bw_info83 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx82, i32 0, i32 10, !dbg !14494
  %76 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14495
  %bw_table84 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %76, i32 0, i32 6, !dbg !14496
  %77 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table84, align 8, !dbg !14496
  %78 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14497
  %udev85 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %78, i32 0, i32 0, !dbg !14498
  %79 = load %struct.usb_device*, %struct.usb_device** %udev85, align 8, !dbg !14498
  %80 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14499
  %eps86 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %80, i32 0, i32 3, !dbg !14500
  %81 = load i32, i32* %i, align 4, !dbg !14501
  %idxprom87 = sext i32 %81 to i64, !dbg !14499
  %arrayidx88 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps86, i64 0, i64 %idxprom87, !dbg !14499
  %82 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14502
  %tt_info89 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %82, i32 0, i32 7, !dbg !14503
  %83 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info89, align 8, !dbg !14503
  call void @xhci_drop_ep_from_interval_table(%struct.xhci_hcd* %73, %struct.xhci_bw_info* %bw_info83, %struct.xhci_interval_bw_table* %77, %struct.usb_device* %79, %struct.xhci_virt_ep* %arrayidx88, %struct.xhci_tt_bw_info* %83) #11, !dbg !14504
  br label %if.end90, !dbg !14505

if.end90:                                         ; preds = %if.then79, %if.end73
  %84 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14506
  %eps91 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %84, i32 0, i32 3, !dbg !14507
  %85 = load i32, i32* %i, align 4, !dbg !14508
  %idxprom92 = sext i32 %85 to i64, !dbg !14506
  %arrayidx93 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps91, i64 0, i64 %idxprom92, !dbg !14506
  %bw_info94 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx93, i32 0, i32 10, !dbg !14509
  %86 = bitcast %struct.xhci_bw_info* %bw_info94 to i8*, !dbg !14510
  %87 = load i32, i32* %i, align 4, !dbg !14511
  %idxprom95 = sext i32 %87 to i64, !dbg !14512
  %arrayidx96 = getelementptr [31 x %struct.xhci_bw_info], [31 x %struct.xhci_bw_info]* %ep_bw_info, i64 0, i64 %idxprom95, !dbg !14512
  %88 = bitcast %struct.xhci_bw_info* %arrayidx96 to i8*, !dbg !14510
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 8 %88, i64 24, i1 false), !dbg !14510
  %89 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !14513
  %drop_flags97 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %89, i32 0, i32 0, !dbg !14513
  %90 = load i32, i32* %drop_flags97, align 4, !dbg !14513
  %91 = load i32, i32* %i, align 4, !dbg !14513
  %add98 = add i32 %91, 1, !dbg !14513
  %shl99 = shl i32 1, %add98, !dbg !14513
  %and100 = and i32 %90, %shl99, !dbg !14513
  %tobool101 = icmp ne i32 %and100, 0, !dbg !14513
  br i1 %tobool101, label %if.then102, label %if.end113, !dbg !14515

if.then102:                                       ; preds = %if.end90
  %92 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14516
  %93 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14517
  %eps103 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %93, i32 0, i32 3, !dbg !14518
  %94 = load i32, i32* %i, align 4, !dbg !14519
  %idxprom104 = sext i32 %94 to i64, !dbg !14517
  %arrayidx105 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps103, i64 0, i64 %idxprom104, !dbg !14517
  %bw_info106 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx105, i32 0, i32 10, !dbg !14520
  %95 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14521
  %bw_table107 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %95, i32 0, i32 6, !dbg !14522
  %96 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table107, align 8, !dbg !14522
  %97 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14523
  %udev108 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %97, i32 0, i32 0, !dbg !14524
  %98 = load %struct.usb_device*, %struct.usb_device** %udev108, align 8, !dbg !14524
  %99 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14525
  %eps109 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %99, i32 0, i32 3, !dbg !14526
  %100 = load i32, i32* %i, align 4, !dbg !14527
  %idxprom110 = sext i32 %100 to i64, !dbg !14525
  %arrayidx111 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps109, i64 0, i64 %idxprom110, !dbg !14525
  %101 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !14528
  %tt_info112 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %101, i32 0, i32 7, !dbg !14529
  %102 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info112, align 8, !dbg !14529
  call void @xhci_add_ep_to_interval_table(%struct.xhci_hcd* %92, %struct.xhci_bw_info* %bw_info106, %struct.xhci_interval_bw_table* %96, %struct.usb_device* %98, %struct.xhci_virt_ep* %arrayidx111, %struct.xhci_tt_bw_info* %102) #11, !dbg !14530
  br label %if.end113, !dbg !14530

if.end113:                                        ; preds = %if.then102, %if.end90
  br label %for.inc114, !dbg !14531

for.inc114:                                       ; preds = %if.end113, %if.then72
  %103 = load i32, i32* %i, align 4, !dbg !14532
  %inc115 = add i32 %103, 1, !dbg !14532
  store i32 %inc115, i32* %i, align 4, !dbg !14532
  br label %for.cond58, !dbg !14533, !llvm.loop !14534

for.end116:                                       ; preds = %for.cond58
  store i32 -12, i32* %retval, align 4, !dbg !14536
  br label %return, !dbg !14536

return:                                           ; preds = %for.end116, %if.then56, %if.then3
  %104 = load i32, i32* %retval, align 4, !dbg !14537
  ret i32 %104, !dbg !14537
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_free_host_resources(%struct.xhci_hcd* %xhci, %struct.xhci_input_control_ctx* %ctrl_ctx) #1 !dbg !14538 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %ctrl_ctx.addr = alloca %struct.xhci_input_control_ctx*, align 8
  %num_failed_eps = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !14541, metadata !DIExpression()), !dbg !14542
  store %struct.xhci_input_control_ctx* %ctrl_ctx, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx.addr, metadata !14543, metadata !DIExpression()), !dbg !14544
  call void @llvm.dbg.declare(metadata i32* %num_failed_eps, metadata !14545, metadata !DIExpression()), !dbg !14546
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14547
  %1 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8, !dbg !14548
  %call = call i32 @xhci_count_num_new_endpoints(%struct.xhci_hcd* %0, %struct.xhci_input_control_ctx* %1) #11, !dbg !14549
  store i32 %call, i32* %num_failed_eps, align 4, !dbg !14550
  %2 = load i32, i32* %num_failed_eps, align 4, !dbg !14551
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14552
  %num_active_eps = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %3, i32 0, i32 51, !dbg !14553
  %4 = load i32, i32* %num_active_eps, align 8, !dbg !14554
  %sub = sub i32 %4, %2, !dbg !14554
  store i32 %sub, i32* %num_active_eps, align 8, !dbg !14554
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14555
  %6 = load i32, i32* %num_failed_eps, align 4, !dbg !14556
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14557
  %num_active_eps1 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 51, !dbg !14558
  %8 = load i32, i32* %num_active_eps1, align 8, !dbg !14558
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %5, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.85, i64 0, i64 0), i32 %6, i32 %8) #11, !dbg !14559
  ret void, !dbg !14560
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_configure_endpoint_ctrl_ctx(%struct.xhci_input_control_ctx* %ctrl_ctx) #1 !dbg !14561 {
entry:
  %ctrl_ctx.addr = alloca %struct.xhci_input_control_ctx*, align 8
  store %struct.xhci_input_control_ctx* %ctrl_ctx, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx.addr, metadata !14564, metadata !DIExpression()), !dbg !14565
  ret void, !dbg !14565
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_configure_endpoint(%struct.xhci_slot_ctx* %ctx) #1 !dbg !14566 {
entry:
  %ctx.addr = alloca %struct.xhci_slot_ctx*, align 8
  store %struct.xhci_slot_ctx* %ctx, %struct.xhci_slot_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_slot_ctx** %ctx.addr, metadata !14567, metadata !DIExpression()), !dbg !14568
  ret void, !dbg !14568
}

; Function Attrs: noredzone
declare dso_local i32 @xhci_queue_configure_endpoint(%struct.xhci_hcd*, %struct.xhci_command*, i64, i32, i1 zeroext) #3

; Function Attrs: noredzone
declare dso_local i32 @xhci_queue_evaluate_context(%struct.xhci_hcd*, %struct.xhci_command*, i64, i32, i1 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_configure_endpoint_result(%struct.xhci_hcd* %xhci, %struct.usb_device* %udev, i32* %cmd_status) #1 !dbg !14569 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %cmd_status.addr = alloca i32*, align 8
  %ret = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !14572, metadata !DIExpression()), !dbg !14573
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !14574, metadata !DIExpression()), !dbg !14575
  store i32* %cmd_status, i32** %cmd_status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %cmd_status.addr, metadata !14576, metadata !DIExpression()), !dbg !14577
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14578, metadata !DIExpression()), !dbg !14579
  %0 = load i32*, i32** %cmd_status.addr, align 8, !dbg !14580
  %1 = load i32, i32* %0, align 4, !dbg !14581
  switch i32 %1, label %sw.default [
    i32 25, label %sw.bb
    i32 24, label %sw.bb
    i32 7, label %sw.bb1
    i32 8, label %sw.bb2
    i32 35, label %sw.bb2
    i32 5, label %sw.bb4
    i32 22, label %sw.bb6
    i32 1, label %sw.bb8
  ], !dbg !14582

sw.bb:                                            ; preds = %entry, %entry
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14583
  %call = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %2) #11, !dbg !14583
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call, i32 0, i32 0, !dbg !14583
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !14583
  %3 = load %struct.device*, %struct.device** %controller, align 8, !dbg !14583
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.86, i64 0, i64 0)) #12, !dbg !14583
  store i32 -62, i32* %ret, align 4, !dbg !14585
  br label %sw.epilog, !dbg !14586

sw.bb1:                                           ; preds = %entry
  %4 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14587
  %dev = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 14, !dbg !14587
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.87, i64 0, i64 0)) #12, !dbg !14587
  store i32 -12, i32* %ret, align 4, !dbg !14588
  br label %sw.epilog, !dbg !14589

sw.bb2:                                           ; preds = %entry, %entry
  %5 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14590
  %dev3 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 14, !dbg !14590
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.88, i64 0, i64 0)) #12, !dbg !14590
  store i32 -28, i32* %ret, align 4, !dbg !14591
  br label %sw.epilog, !dbg !14592

sw.bb4:                                           ; preds = %entry
  %6 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14593
  %dev5 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 14, !dbg !14593
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev5, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.89, i64 0, i64 0)) #12, !dbg !14593
  store i32 -22, i32* %ret, align 4, !dbg !14594
  br label %sw.epilog, !dbg !14595

sw.bb6:                                           ; preds = %entry
  %7 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14596
  %dev7 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 14, !dbg !14596
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev7, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.90, i64 0, i64 0)) #12, !dbg !14596
  store i32 -19, i32* %ret, align 4, !dbg !14597
  br label %sw.epilog, !dbg !14598

sw.bb8:                                           ; preds = %entry
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14599
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %8, void (%struct.va_format*)* @trace_xhci_dbg_context_change, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.91, i64 0, i64 0)) #11, !dbg !14600
  store i32 0, i32* %ret, align 4, !dbg !14601
  br label %sw.epilog, !dbg !14602

sw.default:                                       ; preds = %entry
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14603
  %call9 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %9) #11, !dbg !14603
  %self10 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call9, i32 0, i32 0, !dbg !14603
  %controller11 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self10, i32 0, i32 0, !dbg !14603
  %10 = load %struct.device*, %struct.device** %controller11, align 8, !dbg !14603
  %11 = load i32*, i32** %cmd_status.addr, align 8, !dbg !14603
  %12 = load i32, i32* %11, align 4, !dbg !14603
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %10, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.92, i64 0, i64 0), i32 %12) #12, !dbg !14603
  store i32 -22, i32* %ret, align 4, !dbg !14604
  br label %sw.epilog, !dbg !14605

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb1, %sw.bb
  %13 = load i32, i32* %ret, align 4, !dbg !14606
  ret i32 %13, !dbg !14607
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_evaluate_context_result(%struct.xhci_hcd* %xhci, %struct.usb_device* %udev, i32* %cmd_status) #1 !dbg !14608 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %cmd_status.addr = alloca i32*, align 8
  %ret = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !14609, metadata !DIExpression()), !dbg !14610
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !14611, metadata !DIExpression()), !dbg !14612
  store i32* %cmd_status, i32** %cmd_status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %cmd_status.addr, metadata !14613, metadata !DIExpression()), !dbg !14614
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14615, metadata !DIExpression()), !dbg !14616
  %0 = load i32*, i32** %cmd_status.addr, align 8, !dbg !14617
  %1 = load i32, i32* %0, align 4, !dbg !14618
  switch i32 %1, label %sw.default [
    i32 25, label %sw.bb
    i32 24, label %sw.bb
    i32 17, label %sw.bb1
    i32 11, label %sw.bb2
    i32 19, label %sw.bb4
    i32 22, label %sw.bb6
    i32 29, label %sw.bb8
    i32 1, label %sw.bb10
  ], !dbg !14619

sw.bb:                                            ; preds = %entry, %entry
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14620
  %call = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %2) #11, !dbg !14620
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call, i32 0, i32 0, !dbg !14620
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !14620
  %3 = load %struct.device*, %struct.device** %controller, align 8, !dbg !14620
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.93, i64 0, i64 0)) #12, !dbg !14620
  store i32 -62, i32* %ret, align 4, !dbg !14622
  br label %sw.epilog, !dbg !14623

sw.bb1:                                           ; preds = %entry
  %4 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14624
  %dev = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 14, !dbg !14624
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.94, i64 0, i64 0)) #12, !dbg !14624
  store i32 -22, i32* %ret, align 4, !dbg !14625
  br label %sw.epilog, !dbg !14626

sw.bb2:                                           ; preds = %entry
  %5 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14627
  %dev3 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 14, !dbg !14627
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.95, i64 0, i64 0)) #12, !dbg !14627
  store i32 -22, i32* %ret, align 4, !dbg !14628
  br label %sw.epilog, !dbg !14629

sw.bb4:                                           ; preds = %entry
  %6 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14630
  %dev5 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 14, !dbg !14630
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.96, i64 0, i64 0)) #12, !dbg !14630
  store i32 -22, i32* %ret, align 4, !dbg !14631
  br label %sw.epilog, !dbg !14632

sw.bb6:                                           ; preds = %entry
  %7 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14633
  %dev7 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 14, !dbg !14633
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev7, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.97, i64 0, i64 0)) #12, !dbg !14633
  store i32 -19, i32* %ret, align 4, !dbg !14634
  br label %sw.epilog, !dbg !14635

sw.bb8:                                           ; preds = %entry
  %8 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14636
  %dev9 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %8, i32 0, i32 14, !dbg !14636
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev9, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.98, i64 0, i64 0)) #12, !dbg !14636
  store i32 -22, i32* %ret, align 4, !dbg !14637
  br label %sw.epilog, !dbg !14638

sw.bb10:                                          ; preds = %entry
  %9 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14639
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %9, void (%struct.va_format*)* @trace_xhci_dbg_context_change, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.99, i64 0, i64 0)) #11, !dbg !14640
  store i32 0, i32* %ret, align 4, !dbg !14641
  br label %sw.epilog, !dbg !14642

sw.default:                                       ; preds = %entry
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14643
  %call11 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %10) #11, !dbg !14643
  %self12 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call11, i32 0, i32 0, !dbg !14643
  %controller13 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self12, i32 0, i32 0, !dbg !14643
  %11 = load %struct.device*, %struct.device** %controller13, align 8, !dbg !14643
  %12 = load i32*, i32** %cmd_status.addr, align 8, !dbg !14643
  %13 = load i32, i32* %12, align 4, !dbg !14643
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %11, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.92, i64 0, i64 0), i32 %13) #12, !dbg !14643
  store i32 -22, i32* %ret, align 4, !dbg !14644
  br label %sw.epilog, !dbg !14645

sw.epilog:                                        ; preds = %sw.default, %sw.bb10, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb1, %sw.bb
  %14 = load i32, i32* %ret, align 4, !dbg !14646
  ret i32 %14, !dbg !14647
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_finish_resource_reservation(%struct.xhci_hcd* %xhci, %struct.xhci_input_control_ctx* %ctrl_ctx) #1 !dbg !14648 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %ctrl_ctx.addr = alloca %struct.xhci_input_control_ctx*, align 8
  %num_dropped_eps = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !14649, metadata !DIExpression()), !dbg !14650
  store %struct.xhci_input_control_ctx* %ctrl_ctx, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx.addr, metadata !14651, metadata !DIExpression()), !dbg !14652
  call void @llvm.dbg.declare(metadata i32* %num_dropped_eps, metadata !14653, metadata !DIExpression()), !dbg !14654
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14655
  %1 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8, !dbg !14656
  %call = call i32 @xhci_count_num_dropped_endpoints(%struct.xhci_hcd* %0, %struct.xhci_input_control_ctx* %1) #11, !dbg !14657
  store i32 %call, i32* %num_dropped_eps, align 4, !dbg !14658
  %2 = load i32, i32* %num_dropped_eps, align 4, !dbg !14659
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14660
  %num_active_eps = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %3, i32 0, i32 51, !dbg !14661
  %4 = load i32, i32* %num_active_eps, align 8, !dbg !14662
  %sub = sub i32 %4, %2, !dbg !14662
  store i32 %sub, i32* %num_active_eps, align 8, !dbg !14662
  %5 = load i32, i32* %num_dropped_eps, align 4, !dbg !14663
  %tobool = icmp ne i32 %5, 0, !dbg !14663
  br i1 %tobool, label %if.then, label %if.end, !dbg !14665

if.then:                                          ; preds = %entry
  %6 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14666
  %7 = load i32, i32* %num_dropped_eps, align 4, !dbg !14667
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14668
  %num_active_eps1 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %8, i32 0, i32 51, !dbg !14669
  %9 = load i32, i32* %num_active_eps1, align 8, !dbg !14669
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %6, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.100, i64 0, i64 0), i32 %7, i32 %9) #11, !dbg !14670
  br label %if.end, !dbg !14670

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_count_num_new_endpoints(%struct.xhci_hcd* %xhci, %struct.xhci_input_control_ctx* %ctrl_ctx) #1 !dbg !14672 {
entry:
  %w.addr.i608 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i608, metadata !14675, metadata !DIExpression()), !dbg !14678
  %res.i609 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i609, metadata !14680, metadata !DIExpression()), !dbg !14681
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !14675, metadata !DIExpression()), !dbg !14682
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !14680, metadata !DIExpression()), !dbg !14684
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %ctrl_ctx.addr = alloca %struct.xhci_input_control_ctx*, align 8
  %valid_add_flags = alloca i32, align 4
  %valid_drop_flags = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !14685, metadata !DIExpression()), !dbg !14686
  store %struct.xhci_input_control_ctx* %ctrl_ctx, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx.addr, metadata !14687, metadata !DIExpression()), !dbg !14688
  call void @llvm.dbg.declare(metadata i32* %valid_add_flags, metadata !14689, metadata !DIExpression()), !dbg !14690
  call void @llvm.dbg.declare(metadata i32* %valid_drop_flags, metadata !14691, metadata !DIExpression()), !dbg !14692
  %0 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8, !dbg !14693
  %add_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %0, i32 0, i32 1, !dbg !14693
  %1 = load i32, i32* %add_flags, align 4, !dbg !14693
  %shr = lshr i32 %1, 2, !dbg !14694
  store i32 %shr, i32* %valid_add_flags, align 4, !dbg !14695
  %2 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8, !dbg !14696
  %drop_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %2, i32 0, i32 0, !dbg !14696
  %3 = load i32, i32* %drop_flags, align 4, !dbg !14696
  %shr1 = lshr i32 %3, 2, !dbg !14697
  store i32 %shr1, i32* %valid_drop_flags, align 4, !dbg !14698
  %4 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !14699
  br i1 %5, label %cond.true, label %cond.false, !dbg !14699

cond.true:                                        ; preds = %entry
  %6 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %conv = zext i32 %6 to i64, !dbg !14699
  %and = and i64 %conv, 1, !dbg !14699
  %tobool = icmp ne i64 %and, 0, !dbg !14699
  %lnot = xor i1 %tobool, true, !dbg !14699
  %lnot2 = xor i1 %lnot, true, !dbg !14699
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !14699
  %7 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %conv3 = zext i32 %7 to i64, !dbg !14699
  %and4 = and i64 %conv3, 2, !dbg !14699
  %tobool5 = icmp ne i64 %and4, 0, !dbg !14699
  %lnot6 = xor i1 %tobool5, true, !dbg !14699
  %lnot8 = xor i1 %lnot6, true, !dbg !14699
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !14699
  %add = add i32 %lnot.ext, %lnot.ext9, !dbg !14699
  %8 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %conv10 = zext i32 %8 to i64, !dbg !14699
  %and11 = and i64 %conv10, 4, !dbg !14699
  %tobool12 = icmp ne i64 %and11, 0, !dbg !14699
  %lnot13 = xor i1 %tobool12, true, !dbg !14699
  %lnot15 = xor i1 %lnot13, true, !dbg !14699
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !14699
  %add17 = add i32 %add, %lnot.ext16, !dbg !14699
  %9 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %conv18 = zext i32 %9 to i64, !dbg !14699
  %and19 = and i64 %conv18, 8, !dbg !14699
  %tobool20 = icmp ne i64 %and19, 0, !dbg !14699
  %lnot21 = xor i1 %tobool20, true, !dbg !14699
  %lnot23 = xor i1 %lnot21, true, !dbg !14699
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !14699
  %add25 = add i32 %add17, %lnot.ext24, !dbg !14699
  %10 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %conv26 = zext i32 %10 to i64, !dbg !14699
  %and27 = and i64 %conv26, 16, !dbg !14699
  %tobool28 = icmp ne i64 %and27, 0, !dbg !14699
  %lnot29 = xor i1 %tobool28, true, !dbg !14699
  %lnot31 = xor i1 %lnot29, true, !dbg !14699
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !14699
  %add33 = add i32 %add25, %lnot.ext32, !dbg !14699
  %11 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %conv34 = zext i32 %11 to i64, !dbg !14699
  %and35 = and i64 %conv34, 32, !dbg !14699
  %tobool36 = icmp ne i64 %and35, 0, !dbg !14699
  %lnot37 = xor i1 %tobool36, true, !dbg !14699
  %lnot39 = xor i1 %lnot37, true, !dbg !14699
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !14699
  %add41 = add i32 %add33, %lnot.ext40, !dbg !14699
  %12 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %conv42 = zext i32 %12 to i64, !dbg !14699
  %and43 = and i64 %conv42, 64, !dbg !14699
  %tobool44 = icmp ne i64 %and43, 0, !dbg !14699
  %lnot45 = xor i1 %tobool44, true, !dbg !14699
  %lnot47 = xor i1 %lnot45, true, !dbg !14699
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !14699
  %add49 = add i32 %add41, %lnot.ext48, !dbg !14699
  %13 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %conv50 = zext i32 %13 to i64, !dbg !14699
  %and51 = and i64 %conv50, 128, !dbg !14699
  %tobool52 = icmp ne i64 %and51, 0, !dbg !14699
  %lnot53 = xor i1 %tobool52, true, !dbg !14699
  %lnot55 = xor i1 %lnot53, true, !dbg !14699
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !14699
  %add57 = add i32 %add49, %lnot.ext56, !dbg !14699
  %14 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr58 = lshr i32 %14, 8, !dbg !14699
  %conv59 = zext i32 %shr58 to i64, !dbg !14699
  %and60 = and i64 %conv59, 1, !dbg !14699
  %tobool61 = icmp ne i64 %and60, 0, !dbg !14699
  %lnot62 = xor i1 %tobool61, true, !dbg !14699
  %lnot64 = xor i1 %lnot62, true, !dbg !14699
  %lnot.ext65 = zext i1 %lnot64 to i32, !dbg !14699
  %15 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr66 = lshr i32 %15, 8, !dbg !14699
  %conv67 = zext i32 %shr66 to i64, !dbg !14699
  %and68 = and i64 %conv67, 2, !dbg !14699
  %tobool69 = icmp ne i64 %and68, 0, !dbg !14699
  %lnot70 = xor i1 %tobool69, true, !dbg !14699
  %lnot72 = xor i1 %lnot70, true, !dbg !14699
  %lnot.ext73 = zext i1 %lnot72 to i32, !dbg !14699
  %add74 = add i32 %lnot.ext65, %lnot.ext73, !dbg !14699
  %16 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr75 = lshr i32 %16, 8, !dbg !14699
  %conv76 = zext i32 %shr75 to i64, !dbg !14699
  %and77 = and i64 %conv76, 4, !dbg !14699
  %tobool78 = icmp ne i64 %and77, 0, !dbg !14699
  %lnot79 = xor i1 %tobool78, true, !dbg !14699
  %lnot81 = xor i1 %lnot79, true, !dbg !14699
  %lnot.ext82 = zext i1 %lnot81 to i32, !dbg !14699
  %add83 = add i32 %add74, %lnot.ext82, !dbg !14699
  %17 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr84 = lshr i32 %17, 8, !dbg !14699
  %conv85 = zext i32 %shr84 to i64, !dbg !14699
  %and86 = and i64 %conv85, 8, !dbg !14699
  %tobool87 = icmp ne i64 %and86, 0, !dbg !14699
  %lnot88 = xor i1 %tobool87, true, !dbg !14699
  %lnot90 = xor i1 %lnot88, true, !dbg !14699
  %lnot.ext91 = zext i1 %lnot90 to i32, !dbg !14699
  %add92 = add i32 %add83, %lnot.ext91, !dbg !14699
  %18 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr93 = lshr i32 %18, 8, !dbg !14699
  %conv94 = zext i32 %shr93 to i64, !dbg !14699
  %and95 = and i64 %conv94, 16, !dbg !14699
  %tobool96 = icmp ne i64 %and95, 0, !dbg !14699
  %lnot97 = xor i1 %tobool96, true, !dbg !14699
  %lnot99 = xor i1 %lnot97, true, !dbg !14699
  %lnot.ext100 = zext i1 %lnot99 to i32, !dbg !14699
  %add101 = add i32 %add92, %lnot.ext100, !dbg !14699
  %19 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr102 = lshr i32 %19, 8, !dbg !14699
  %conv103 = zext i32 %shr102 to i64, !dbg !14699
  %and104 = and i64 %conv103, 32, !dbg !14699
  %tobool105 = icmp ne i64 %and104, 0, !dbg !14699
  %lnot106 = xor i1 %tobool105, true, !dbg !14699
  %lnot108 = xor i1 %lnot106, true, !dbg !14699
  %lnot.ext109 = zext i1 %lnot108 to i32, !dbg !14699
  %add110 = add i32 %add101, %lnot.ext109, !dbg !14699
  %20 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr111 = lshr i32 %20, 8, !dbg !14699
  %conv112 = zext i32 %shr111 to i64, !dbg !14699
  %and113 = and i64 %conv112, 64, !dbg !14699
  %tobool114 = icmp ne i64 %and113, 0, !dbg !14699
  %lnot115 = xor i1 %tobool114, true, !dbg !14699
  %lnot117 = xor i1 %lnot115, true, !dbg !14699
  %lnot.ext118 = zext i1 %lnot117 to i32, !dbg !14699
  %add119 = add i32 %add110, %lnot.ext118, !dbg !14699
  %21 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr120 = lshr i32 %21, 8, !dbg !14699
  %conv121 = zext i32 %shr120 to i64, !dbg !14699
  %and122 = and i64 %conv121, 128, !dbg !14699
  %tobool123 = icmp ne i64 %and122, 0, !dbg !14699
  %lnot124 = xor i1 %tobool123, true, !dbg !14699
  %lnot126 = xor i1 %lnot124, true, !dbg !14699
  %lnot.ext127 = zext i1 %lnot126 to i32, !dbg !14699
  %add128 = add i32 %add119, %lnot.ext127, !dbg !14699
  %add129 = add i32 %add57, %add128, !dbg !14699
  %22 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr130 = lshr i32 %22, 16, !dbg !14699
  %conv131 = zext i32 %shr130 to i64, !dbg !14699
  %and132 = and i64 %conv131, 1, !dbg !14699
  %tobool133 = icmp ne i64 %and132, 0, !dbg !14699
  %lnot134 = xor i1 %tobool133, true, !dbg !14699
  %lnot136 = xor i1 %lnot134, true, !dbg !14699
  %lnot.ext137 = zext i1 %lnot136 to i32, !dbg !14699
  %23 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr138 = lshr i32 %23, 16, !dbg !14699
  %conv139 = zext i32 %shr138 to i64, !dbg !14699
  %and140 = and i64 %conv139, 2, !dbg !14699
  %tobool141 = icmp ne i64 %and140, 0, !dbg !14699
  %lnot142 = xor i1 %tobool141, true, !dbg !14699
  %lnot144 = xor i1 %lnot142, true, !dbg !14699
  %lnot.ext145 = zext i1 %lnot144 to i32, !dbg !14699
  %add146 = add i32 %lnot.ext137, %lnot.ext145, !dbg !14699
  %24 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr147 = lshr i32 %24, 16, !dbg !14699
  %conv148 = zext i32 %shr147 to i64, !dbg !14699
  %and149 = and i64 %conv148, 4, !dbg !14699
  %tobool150 = icmp ne i64 %and149, 0, !dbg !14699
  %lnot151 = xor i1 %tobool150, true, !dbg !14699
  %lnot153 = xor i1 %lnot151, true, !dbg !14699
  %lnot.ext154 = zext i1 %lnot153 to i32, !dbg !14699
  %add155 = add i32 %add146, %lnot.ext154, !dbg !14699
  %25 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr156 = lshr i32 %25, 16, !dbg !14699
  %conv157 = zext i32 %shr156 to i64, !dbg !14699
  %and158 = and i64 %conv157, 8, !dbg !14699
  %tobool159 = icmp ne i64 %and158, 0, !dbg !14699
  %lnot160 = xor i1 %tobool159, true, !dbg !14699
  %lnot162 = xor i1 %lnot160, true, !dbg !14699
  %lnot.ext163 = zext i1 %lnot162 to i32, !dbg !14699
  %add164 = add i32 %add155, %lnot.ext163, !dbg !14699
  %26 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr165 = lshr i32 %26, 16, !dbg !14699
  %conv166 = zext i32 %shr165 to i64, !dbg !14699
  %and167 = and i64 %conv166, 16, !dbg !14699
  %tobool168 = icmp ne i64 %and167, 0, !dbg !14699
  %lnot169 = xor i1 %tobool168, true, !dbg !14699
  %lnot171 = xor i1 %lnot169, true, !dbg !14699
  %lnot.ext172 = zext i1 %lnot171 to i32, !dbg !14699
  %add173 = add i32 %add164, %lnot.ext172, !dbg !14699
  %27 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr174 = lshr i32 %27, 16, !dbg !14699
  %conv175 = zext i32 %shr174 to i64, !dbg !14699
  %and176 = and i64 %conv175, 32, !dbg !14699
  %tobool177 = icmp ne i64 %and176, 0, !dbg !14699
  %lnot178 = xor i1 %tobool177, true, !dbg !14699
  %lnot180 = xor i1 %lnot178, true, !dbg !14699
  %lnot.ext181 = zext i1 %lnot180 to i32, !dbg !14699
  %add182 = add i32 %add173, %lnot.ext181, !dbg !14699
  %28 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr183 = lshr i32 %28, 16, !dbg !14699
  %conv184 = zext i32 %shr183 to i64, !dbg !14699
  %and185 = and i64 %conv184, 64, !dbg !14699
  %tobool186 = icmp ne i64 %and185, 0, !dbg !14699
  %lnot187 = xor i1 %tobool186, true, !dbg !14699
  %lnot189 = xor i1 %lnot187, true, !dbg !14699
  %lnot.ext190 = zext i1 %lnot189 to i32, !dbg !14699
  %add191 = add i32 %add182, %lnot.ext190, !dbg !14699
  %29 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr192 = lshr i32 %29, 16, !dbg !14699
  %conv193 = zext i32 %shr192 to i64, !dbg !14699
  %and194 = and i64 %conv193, 128, !dbg !14699
  %tobool195 = icmp ne i64 %and194, 0, !dbg !14699
  %lnot196 = xor i1 %tobool195, true, !dbg !14699
  %lnot198 = xor i1 %lnot196, true, !dbg !14699
  %lnot.ext199 = zext i1 %lnot198 to i32, !dbg !14699
  %add200 = add i32 %add191, %lnot.ext199, !dbg !14699
  %30 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr201 = lshr i32 %30, 16, !dbg !14699
  %shr202 = lshr i32 %shr201, 8, !dbg !14699
  %conv203 = zext i32 %shr202 to i64, !dbg !14699
  %and204 = and i64 %conv203, 1, !dbg !14699
  %tobool205 = icmp ne i64 %and204, 0, !dbg !14699
  %lnot206 = xor i1 %tobool205, true, !dbg !14699
  %lnot208 = xor i1 %lnot206, true, !dbg !14699
  %lnot.ext209 = zext i1 %lnot208 to i32, !dbg !14699
  %31 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr210 = lshr i32 %31, 16, !dbg !14699
  %shr211 = lshr i32 %shr210, 8, !dbg !14699
  %conv212 = zext i32 %shr211 to i64, !dbg !14699
  %and213 = and i64 %conv212, 2, !dbg !14699
  %tobool214 = icmp ne i64 %and213, 0, !dbg !14699
  %lnot215 = xor i1 %tobool214, true, !dbg !14699
  %lnot217 = xor i1 %lnot215, true, !dbg !14699
  %lnot.ext218 = zext i1 %lnot217 to i32, !dbg !14699
  %add219 = add i32 %lnot.ext209, %lnot.ext218, !dbg !14699
  %32 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr220 = lshr i32 %32, 16, !dbg !14699
  %shr221 = lshr i32 %shr220, 8, !dbg !14699
  %conv222 = zext i32 %shr221 to i64, !dbg !14699
  %and223 = and i64 %conv222, 4, !dbg !14699
  %tobool224 = icmp ne i64 %and223, 0, !dbg !14699
  %lnot225 = xor i1 %tobool224, true, !dbg !14699
  %lnot227 = xor i1 %lnot225, true, !dbg !14699
  %lnot.ext228 = zext i1 %lnot227 to i32, !dbg !14699
  %add229 = add i32 %add219, %lnot.ext228, !dbg !14699
  %33 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr230 = lshr i32 %33, 16, !dbg !14699
  %shr231 = lshr i32 %shr230, 8, !dbg !14699
  %conv232 = zext i32 %shr231 to i64, !dbg !14699
  %and233 = and i64 %conv232, 8, !dbg !14699
  %tobool234 = icmp ne i64 %and233, 0, !dbg !14699
  %lnot235 = xor i1 %tobool234, true, !dbg !14699
  %lnot237 = xor i1 %lnot235, true, !dbg !14699
  %lnot.ext238 = zext i1 %lnot237 to i32, !dbg !14699
  %add239 = add i32 %add229, %lnot.ext238, !dbg !14699
  %34 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr240 = lshr i32 %34, 16, !dbg !14699
  %shr241 = lshr i32 %shr240, 8, !dbg !14699
  %conv242 = zext i32 %shr241 to i64, !dbg !14699
  %and243 = and i64 %conv242, 16, !dbg !14699
  %tobool244 = icmp ne i64 %and243, 0, !dbg !14699
  %lnot245 = xor i1 %tobool244, true, !dbg !14699
  %lnot247 = xor i1 %lnot245, true, !dbg !14699
  %lnot.ext248 = zext i1 %lnot247 to i32, !dbg !14699
  %add249 = add i32 %add239, %lnot.ext248, !dbg !14699
  %35 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr250 = lshr i32 %35, 16, !dbg !14699
  %shr251 = lshr i32 %shr250, 8, !dbg !14699
  %conv252 = zext i32 %shr251 to i64, !dbg !14699
  %and253 = and i64 %conv252, 32, !dbg !14699
  %tobool254 = icmp ne i64 %and253, 0, !dbg !14699
  %lnot255 = xor i1 %tobool254, true, !dbg !14699
  %lnot257 = xor i1 %lnot255, true, !dbg !14699
  %lnot.ext258 = zext i1 %lnot257 to i32, !dbg !14699
  %add259 = add i32 %add249, %lnot.ext258, !dbg !14699
  %36 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr260 = lshr i32 %36, 16, !dbg !14699
  %shr261 = lshr i32 %shr260, 8, !dbg !14699
  %conv262 = zext i32 %shr261 to i64, !dbg !14699
  %and263 = and i64 %conv262, 64, !dbg !14699
  %tobool264 = icmp ne i64 %and263, 0, !dbg !14699
  %lnot265 = xor i1 %tobool264, true, !dbg !14699
  %lnot267 = xor i1 %lnot265, true, !dbg !14699
  %lnot.ext268 = zext i1 %lnot267 to i32, !dbg !14699
  %add269 = add i32 %add259, %lnot.ext268, !dbg !14699
  %37 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  %shr270 = lshr i32 %37, 16, !dbg !14699
  %shr271 = lshr i32 %shr270, 8, !dbg !14699
  %conv272 = zext i32 %shr271 to i64, !dbg !14699
  %and273 = and i64 %conv272, 128, !dbg !14699
  %tobool274 = icmp ne i64 %and273, 0, !dbg !14699
  %lnot275 = xor i1 %tobool274, true, !dbg !14699
  %lnot277 = xor i1 %lnot275, true, !dbg !14699
  %lnot.ext278 = zext i1 %lnot277 to i32, !dbg !14699
  %add279 = add i32 %add269, %lnot.ext278, !dbg !14699
  %add280 = add i32 %add200, %add279, !dbg !14699
  %add281 = add i32 %add129, %add280, !dbg !14699
  br label %cond.end, !dbg !14699

cond.false:                                       ; preds = %entry
  %38 = load i32, i32* %valid_add_flags, align 4, !dbg !14699
  store i32 %38, i32* %w.addr.i, align 4
  %39 = load i32, i32* %w.addr.i, align 4, !dbg !14700
  %40 = call i32 asm "# ALT: oldnstr\0A661:\0A\09call __sw_hweight32\0A662:\0A# ALT: padding\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 4*32+23)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A# ALT: replacement 1\0A6641:\0A\09popcntl $1, $0\0A6651:\0A.popsection\0A", "={ax},{di},~{dirflag},~{fpsr},~{flags}"(i32 %39) #15, !dbg !14701, !srcloc !14702
  store i32 %40, i32* %res.i, align 4, !dbg !14701
  %41 = load i32, i32* %res.i, align 4, !dbg !14703
  br label %cond.end, !dbg !14699

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add281, %cond.true ], [ %41, %cond.false ], !dbg !14699
  %42 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %43 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and282 = and i32 %42, %43, !dbg !14704
  %44 = call i1 @llvm.is.constant.i32(i32 %and282), !dbg !14704
  br i1 %44, label %cond.true283, label %cond.false603, !dbg !14704

cond.true283:                                     ; preds = %cond.end
  %45 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %46 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and284 = and i32 %45, %46, !dbg !14704
  %conv285 = zext i32 %and284 to i64, !dbg !14704
  %and286 = and i64 %conv285, 1, !dbg !14704
  %tobool287 = icmp ne i64 %and286, 0, !dbg !14704
  %lnot288 = xor i1 %tobool287, true, !dbg !14704
  %lnot290 = xor i1 %lnot288, true, !dbg !14704
  %lnot.ext291 = zext i1 %lnot290 to i32, !dbg !14704
  %47 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %48 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and292 = and i32 %47, %48, !dbg !14704
  %conv293 = zext i32 %and292 to i64, !dbg !14704
  %and294 = and i64 %conv293, 2, !dbg !14704
  %tobool295 = icmp ne i64 %and294, 0, !dbg !14704
  %lnot296 = xor i1 %tobool295, true, !dbg !14704
  %lnot298 = xor i1 %lnot296, true, !dbg !14704
  %lnot.ext299 = zext i1 %lnot298 to i32, !dbg !14704
  %add300 = add i32 %lnot.ext291, %lnot.ext299, !dbg !14704
  %49 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %50 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and301 = and i32 %49, %50, !dbg !14704
  %conv302 = zext i32 %and301 to i64, !dbg !14704
  %and303 = and i64 %conv302, 4, !dbg !14704
  %tobool304 = icmp ne i64 %and303, 0, !dbg !14704
  %lnot305 = xor i1 %tobool304, true, !dbg !14704
  %lnot307 = xor i1 %lnot305, true, !dbg !14704
  %lnot.ext308 = zext i1 %lnot307 to i32, !dbg !14704
  %add309 = add i32 %add300, %lnot.ext308, !dbg !14704
  %51 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %52 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and310 = and i32 %51, %52, !dbg !14704
  %conv311 = zext i32 %and310 to i64, !dbg !14704
  %and312 = and i64 %conv311, 8, !dbg !14704
  %tobool313 = icmp ne i64 %and312, 0, !dbg !14704
  %lnot314 = xor i1 %tobool313, true, !dbg !14704
  %lnot316 = xor i1 %lnot314, true, !dbg !14704
  %lnot.ext317 = zext i1 %lnot316 to i32, !dbg !14704
  %add318 = add i32 %add309, %lnot.ext317, !dbg !14704
  %53 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %54 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and319 = and i32 %53, %54, !dbg !14704
  %conv320 = zext i32 %and319 to i64, !dbg !14704
  %and321 = and i64 %conv320, 16, !dbg !14704
  %tobool322 = icmp ne i64 %and321, 0, !dbg !14704
  %lnot323 = xor i1 %tobool322, true, !dbg !14704
  %lnot325 = xor i1 %lnot323, true, !dbg !14704
  %lnot.ext326 = zext i1 %lnot325 to i32, !dbg !14704
  %add327 = add i32 %add318, %lnot.ext326, !dbg !14704
  %55 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %56 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and328 = and i32 %55, %56, !dbg !14704
  %conv329 = zext i32 %and328 to i64, !dbg !14704
  %and330 = and i64 %conv329, 32, !dbg !14704
  %tobool331 = icmp ne i64 %and330, 0, !dbg !14704
  %lnot332 = xor i1 %tobool331, true, !dbg !14704
  %lnot334 = xor i1 %lnot332, true, !dbg !14704
  %lnot.ext335 = zext i1 %lnot334 to i32, !dbg !14704
  %add336 = add i32 %add327, %lnot.ext335, !dbg !14704
  %57 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %58 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and337 = and i32 %57, %58, !dbg !14704
  %conv338 = zext i32 %and337 to i64, !dbg !14704
  %and339 = and i64 %conv338, 64, !dbg !14704
  %tobool340 = icmp ne i64 %and339, 0, !dbg !14704
  %lnot341 = xor i1 %tobool340, true, !dbg !14704
  %lnot343 = xor i1 %lnot341, true, !dbg !14704
  %lnot.ext344 = zext i1 %lnot343 to i32, !dbg !14704
  %add345 = add i32 %add336, %lnot.ext344, !dbg !14704
  %59 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %60 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and346 = and i32 %59, %60, !dbg !14704
  %conv347 = zext i32 %and346 to i64, !dbg !14704
  %and348 = and i64 %conv347, 128, !dbg !14704
  %tobool349 = icmp ne i64 %and348, 0, !dbg !14704
  %lnot350 = xor i1 %tobool349, true, !dbg !14704
  %lnot352 = xor i1 %lnot350, true, !dbg !14704
  %lnot.ext353 = zext i1 %lnot352 to i32, !dbg !14704
  %add354 = add i32 %add345, %lnot.ext353, !dbg !14704
  %61 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %62 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and355 = and i32 %61, %62, !dbg !14704
  %shr356 = lshr i32 %and355, 8, !dbg !14704
  %conv357 = zext i32 %shr356 to i64, !dbg !14704
  %and358 = and i64 %conv357, 1, !dbg !14704
  %tobool359 = icmp ne i64 %and358, 0, !dbg !14704
  %lnot360 = xor i1 %tobool359, true, !dbg !14704
  %lnot362 = xor i1 %lnot360, true, !dbg !14704
  %lnot.ext363 = zext i1 %lnot362 to i32, !dbg !14704
  %63 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %64 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and364 = and i32 %63, %64, !dbg !14704
  %shr365 = lshr i32 %and364, 8, !dbg !14704
  %conv366 = zext i32 %shr365 to i64, !dbg !14704
  %and367 = and i64 %conv366, 2, !dbg !14704
  %tobool368 = icmp ne i64 %and367, 0, !dbg !14704
  %lnot369 = xor i1 %tobool368, true, !dbg !14704
  %lnot371 = xor i1 %lnot369, true, !dbg !14704
  %lnot.ext372 = zext i1 %lnot371 to i32, !dbg !14704
  %add373 = add i32 %lnot.ext363, %lnot.ext372, !dbg !14704
  %65 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %66 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and374 = and i32 %65, %66, !dbg !14704
  %shr375 = lshr i32 %and374, 8, !dbg !14704
  %conv376 = zext i32 %shr375 to i64, !dbg !14704
  %and377 = and i64 %conv376, 4, !dbg !14704
  %tobool378 = icmp ne i64 %and377, 0, !dbg !14704
  %lnot379 = xor i1 %tobool378, true, !dbg !14704
  %lnot381 = xor i1 %lnot379, true, !dbg !14704
  %lnot.ext382 = zext i1 %lnot381 to i32, !dbg !14704
  %add383 = add i32 %add373, %lnot.ext382, !dbg !14704
  %67 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %68 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and384 = and i32 %67, %68, !dbg !14704
  %shr385 = lshr i32 %and384, 8, !dbg !14704
  %conv386 = zext i32 %shr385 to i64, !dbg !14704
  %and387 = and i64 %conv386, 8, !dbg !14704
  %tobool388 = icmp ne i64 %and387, 0, !dbg !14704
  %lnot389 = xor i1 %tobool388, true, !dbg !14704
  %lnot391 = xor i1 %lnot389, true, !dbg !14704
  %lnot.ext392 = zext i1 %lnot391 to i32, !dbg !14704
  %add393 = add i32 %add383, %lnot.ext392, !dbg !14704
  %69 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %70 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and394 = and i32 %69, %70, !dbg !14704
  %shr395 = lshr i32 %and394, 8, !dbg !14704
  %conv396 = zext i32 %shr395 to i64, !dbg !14704
  %and397 = and i64 %conv396, 16, !dbg !14704
  %tobool398 = icmp ne i64 %and397, 0, !dbg !14704
  %lnot399 = xor i1 %tobool398, true, !dbg !14704
  %lnot401 = xor i1 %lnot399, true, !dbg !14704
  %lnot.ext402 = zext i1 %lnot401 to i32, !dbg !14704
  %add403 = add i32 %add393, %lnot.ext402, !dbg !14704
  %71 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %72 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and404 = and i32 %71, %72, !dbg !14704
  %shr405 = lshr i32 %and404, 8, !dbg !14704
  %conv406 = zext i32 %shr405 to i64, !dbg !14704
  %and407 = and i64 %conv406, 32, !dbg !14704
  %tobool408 = icmp ne i64 %and407, 0, !dbg !14704
  %lnot409 = xor i1 %tobool408, true, !dbg !14704
  %lnot411 = xor i1 %lnot409, true, !dbg !14704
  %lnot.ext412 = zext i1 %lnot411 to i32, !dbg !14704
  %add413 = add i32 %add403, %lnot.ext412, !dbg !14704
  %73 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %74 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and414 = and i32 %73, %74, !dbg !14704
  %shr415 = lshr i32 %and414, 8, !dbg !14704
  %conv416 = zext i32 %shr415 to i64, !dbg !14704
  %and417 = and i64 %conv416, 64, !dbg !14704
  %tobool418 = icmp ne i64 %and417, 0, !dbg !14704
  %lnot419 = xor i1 %tobool418, true, !dbg !14704
  %lnot421 = xor i1 %lnot419, true, !dbg !14704
  %lnot.ext422 = zext i1 %lnot421 to i32, !dbg !14704
  %add423 = add i32 %add413, %lnot.ext422, !dbg !14704
  %75 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %76 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and424 = and i32 %75, %76, !dbg !14704
  %shr425 = lshr i32 %and424, 8, !dbg !14704
  %conv426 = zext i32 %shr425 to i64, !dbg !14704
  %and427 = and i64 %conv426, 128, !dbg !14704
  %tobool428 = icmp ne i64 %and427, 0, !dbg !14704
  %lnot429 = xor i1 %tobool428, true, !dbg !14704
  %lnot431 = xor i1 %lnot429, true, !dbg !14704
  %lnot.ext432 = zext i1 %lnot431 to i32, !dbg !14704
  %add433 = add i32 %add423, %lnot.ext432, !dbg !14704
  %add434 = add i32 %add354, %add433, !dbg !14704
  %77 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %78 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and435 = and i32 %77, %78, !dbg !14704
  %shr436 = lshr i32 %and435, 16, !dbg !14704
  %conv437 = zext i32 %shr436 to i64, !dbg !14704
  %and438 = and i64 %conv437, 1, !dbg !14704
  %tobool439 = icmp ne i64 %and438, 0, !dbg !14704
  %lnot440 = xor i1 %tobool439, true, !dbg !14704
  %lnot442 = xor i1 %lnot440, true, !dbg !14704
  %lnot.ext443 = zext i1 %lnot442 to i32, !dbg !14704
  %79 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %80 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and444 = and i32 %79, %80, !dbg !14704
  %shr445 = lshr i32 %and444, 16, !dbg !14704
  %conv446 = zext i32 %shr445 to i64, !dbg !14704
  %and447 = and i64 %conv446, 2, !dbg !14704
  %tobool448 = icmp ne i64 %and447, 0, !dbg !14704
  %lnot449 = xor i1 %tobool448, true, !dbg !14704
  %lnot451 = xor i1 %lnot449, true, !dbg !14704
  %lnot.ext452 = zext i1 %lnot451 to i32, !dbg !14704
  %add453 = add i32 %lnot.ext443, %lnot.ext452, !dbg !14704
  %81 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %82 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and454 = and i32 %81, %82, !dbg !14704
  %shr455 = lshr i32 %and454, 16, !dbg !14704
  %conv456 = zext i32 %shr455 to i64, !dbg !14704
  %and457 = and i64 %conv456, 4, !dbg !14704
  %tobool458 = icmp ne i64 %and457, 0, !dbg !14704
  %lnot459 = xor i1 %tobool458, true, !dbg !14704
  %lnot461 = xor i1 %lnot459, true, !dbg !14704
  %lnot.ext462 = zext i1 %lnot461 to i32, !dbg !14704
  %add463 = add i32 %add453, %lnot.ext462, !dbg !14704
  %83 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %84 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and464 = and i32 %83, %84, !dbg !14704
  %shr465 = lshr i32 %and464, 16, !dbg !14704
  %conv466 = zext i32 %shr465 to i64, !dbg !14704
  %and467 = and i64 %conv466, 8, !dbg !14704
  %tobool468 = icmp ne i64 %and467, 0, !dbg !14704
  %lnot469 = xor i1 %tobool468, true, !dbg !14704
  %lnot471 = xor i1 %lnot469, true, !dbg !14704
  %lnot.ext472 = zext i1 %lnot471 to i32, !dbg !14704
  %add473 = add i32 %add463, %lnot.ext472, !dbg !14704
  %85 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %86 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and474 = and i32 %85, %86, !dbg !14704
  %shr475 = lshr i32 %and474, 16, !dbg !14704
  %conv476 = zext i32 %shr475 to i64, !dbg !14704
  %and477 = and i64 %conv476, 16, !dbg !14704
  %tobool478 = icmp ne i64 %and477, 0, !dbg !14704
  %lnot479 = xor i1 %tobool478, true, !dbg !14704
  %lnot481 = xor i1 %lnot479, true, !dbg !14704
  %lnot.ext482 = zext i1 %lnot481 to i32, !dbg !14704
  %add483 = add i32 %add473, %lnot.ext482, !dbg !14704
  %87 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %88 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and484 = and i32 %87, %88, !dbg !14704
  %shr485 = lshr i32 %and484, 16, !dbg !14704
  %conv486 = zext i32 %shr485 to i64, !dbg !14704
  %and487 = and i64 %conv486, 32, !dbg !14704
  %tobool488 = icmp ne i64 %and487, 0, !dbg !14704
  %lnot489 = xor i1 %tobool488, true, !dbg !14704
  %lnot491 = xor i1 %lnot489, true, !dbg !14704
  %lnot.ext492 = zext i1 %lnot491 to i32, !dbg !14704
  %add493 = add i32 %add483, %lnot.ext492, !dbg !14704
  %89 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %90 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and494 = and i32 %89, %90, !dbg !14704
  %shr495 = lshr i32 %and494, 16, !dbg !14704
  %conv496 = zext i32 %shr495 to i64, !dbg !14704
  %and497 = and i64 %conv496, 64, !dbg !14704
  %tobool498 = icmp ne i64 %and497, 0, !dbg !14704
  %lnot499 = xor i1 %tobool498, true, !dbg !14704
  %lnot501 = xor i1 %lnot499, true, !dbg !14704
  %lnot.ext502 = zext i1 %lnot501 to i32, !dbg !14704
  %add503 = add i32 %add493, %lnot.ext502, !dbg !14704
  %91 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %92 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and504 = and i32 %91, %92, !dbg !14704
  %shr505 = lshr i32 %and504, 16, !dbg !14704
  %conv506 = zext i32 %shr505 to i64, !dbg !14704
  %and507 = and i64 %conv506, 128, !dbg !14704
  %tobool508 = icmp ne i64 %and507, 0, !dbg !14704
  %lnot509 = xor i1 %tobool508, true, !dbg !14704
  %lnot511 = xor i1 %lnot509, true, !dbg !14704
  %lnot.ext512 = zext i1 %lnot511 to i32, !dbg !14704
  %add513 = add i32 %add503, %lnot.ext512, !dbg !14704
  %93 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %94 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and514 = and i32 %93, %94, !dbg !14704
  %shr515 = lshr i32 %and514, 16, !dbg !14704
  %shr516 = lshr i32 %shr515, 8, !dbg !14704
  %conv517 = zext i32 %shr516 to i64, !dbg !14704
  %and518 = and i64 %conv517, 1, !dbg !14704
  %tobool519 = icmp ne i64 %and518, 0, !dbg !14704
  %lnot520 = xor i1 %tobool519, true, !dbg !14704
  %lnot522 = xor i1 %lnot520, true, !dbg !14704
  %lnot.ext523 = zext i1 %lnot522 to i32, !dbg !14704
  %95 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %96 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and524 = and i32 %95, %96, !dbg !14704
  %shr525 = lshr i32 %and524, 16, !dbg !14704
  %shr526 = lshr i32 %shr525, 8, !dbg !14704
  %conv527 = zext i32 %shr526 to i64, !dbg !14704
  %and528 = and i64 %conv527, 2, !dbg !14704
  %tobool529 = icmp ne i64 %and528, 0, !dbg !14704
  %lnot530 = xor i1 %tobool529, true, !dbg !14704
  %lnot532 = xor i1 %lnot530, true, !dbg !14704
  %lnot.ext533 = zext i1 %lnot532 to i32, !dbg !14704
  %add534 = add i32 %lnot.ext523, %lnot.ext533, !dbg !14704
  %97 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %98 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and535 = and i32 %97, %98, !dbg !14704
  %shr536 = lshr i32 %and535, 16, !dbg !14704
  %shr537 = lshr i32 %shr536, 8, !dbg !14704
  %conv538 = zext i32 %shr537 to i64, !dbg !14704
  %and539 = and i64 %conv538, 4, !dbg !14704
  %tobool540 = icmp ne i64 %and539, 0, !dbg !14704
  %lnot541 = xor i1 %tobool540, true, !dbg !14704
  %lnot543 = xor i1 %lnot541, true, !dbg !14704
  %lnot.ext544 = zext i1 %lnot543 to i32, !dbg !14704
  %add545 = add i32 %add534, %lnot.ext544, !dbg !14704
  %99 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %100 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and546 = and i32 %99, %100, !dbg !14704
  %shr547 = lshr i32 %and546, 16, !dbg !14704
  %shr548 = lshr i32 %shr547, 8, !dbg !14704
  %conv549 = zext i32 %shr548 to i64, !dbg !14704
  %and550 = and i64 %conv549, 8, !dbg !14704
  %tobool551 = icmp ne i64 %and550, 0, !dbg !14704
  %lnot552 = xor i1 %tobool551, true, !dbg !14704
  %lnot554 = xor i1 %lnot552, true, !dbg !14704
  %lnot.ext555 = zext i1 %lnot554 to i32, !dbg !14704
  %add556 = add i32 %add545, %lnot.ext555, !dbg !14704
  %101 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %102 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and557 = and i32 %101, %102, !dbg !14704
  %shr558 = lshr i32 %and557, 16, !dbg !14704
  %shr559 = lshr i32 %shr558, 8, !dbg !14704
  %conv560 = zext i32 %shr559 to i64, !dbg !14704
  %and561 = and i64 %conv560, 16, !dbg !14704
  %tobool562 = icmp ne i64 %and561, 0, !dbg !14704
  %lnot563 = xor i1 %tobool562, true, !dbg !14704
  %lnot565 = xor i1 %lnot563, true, !dbg !14704
  %lnot.ext566 = zext i1 %lnot565 to i32, !dbg !14704
  %add567 = add i32 %add556, %lnot.ext566, !dbg !14704
  %103 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %104 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and568 = and i32 %103, %104, !dbg !14704
  %shr569 = lshr i32 %and568, 16, !dbg !14704
  %shr570 = lshr i32 %shr569, 8, !dbg !14704
  %conv571 = zext i32 %shr570 to i64, !dbg !14704
  %and572 = and i64 %conv571, 32, !dbg !14704
  %tobool573 = icmp ne i64 %and572, 0, !dbg !14704
  %lnot574 = xor i1 %tobool573, true, !dbg !14704
  %lnot576 = xor i1 %lnot574, true, !dbg !14704
  %lnot.ext577 = zext i1 %lnot576 to i32, !dbg !14704
  %add578 = add i32 %add567, %lnot.ext577, !dbg !14704
  %105 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %106 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and579 = and i32 %105, %106, !dbg !14704
  %shr580 = lshr i32 %and579, 16, !dbg !14704
  %shr581 = lshr i32 %shr580, 8, !dbg !14704
  %conv582 = zext i32 %shr581 to i64, !dbg !14704
  %and583 = and i64 %conv582, 64, !dbg !14704
  %tobool584 = icmp ne i64 %and583, 0, !dbg !14704
  %lnot585 = xor i1 %tobool584, true, !dbg !14704
  %lnot587 = xor i1 %lnot585, true, !dbg !14704
  %lnot.ext588 = zext i1 %lnot587 to i32, !dbg !14704
  %add589 = add i32 %add578, %lnot.ext588, !dbg !14704
  %107 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %108 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and590 = and i32 %107, %108, !dbg !14704
  %shr591 = lshr i32 %and590, 16, !dbg !14704
  %shr592 = lshr i32 %shr591, 8, !dbg !14704
  %conv593 = zext i32 %shr592 to i64, !dbg !14704
  %and594 = and i64 %conv593, 128, !dbg !14704
  %tobool595 = icmp ne i64 %and594, 0, !dbg !14704
  %lnot596 = xor i1 %tobool595, true, !dbg !14704
  %lnot598 = xor i1 %lnot596, true, !dbg !14704
  %lnot.ext599 = zext i1 %lnot598 to i32, !dbg !14704
  %add600 = add i32 %add589, %lnot.ext599, !dbg !14704
  %add601 = add i32 %add513, %add600, !dbg !14704
  %add602 = add i32 %add434, %add601, !dbg !14704
  br label %cond.end606, !dbg !14704

cond.false603:                                    ; preds = %cond.end
  %109 = load i32, i32* %valid_add_flags, align 4, !dbg !14704
  %110 = load i32, i32* %valid_drop_flags, align 4, !dbg !14704
  %and604 = and i32 %109, %110, !dbg !14704
  store i32 %and604, i32* %w.addr.i608, align 4
  %111 = load i32, i32* %w.addr.i608, align 4, !dbg !14705
  %112 = call i32 asm "# ALT: oldnstr\0A661:\0A\09call __sw_hweight32\0A662:\0A# ALT: padding\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 4*32+23)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A# ALT: replacement 1\0A6641:\0A\09popcntl $1, $0\0A6651:\0A.popsection\0A", "={ax},{di},~{dirflag},~{fpsr},~{flags}"(i32 %111) #15, !dbg !14706, !srcloc !14702
  store i32 %112, i32* %res.i609, align 4, !dbg !14706
  %113 = load i32, i32* %res.i609, align 4, !dbg !14707
  br label %cond.end606, !dbg !14704

cond.end606:                                      ; preds = %cond.false603, %cond.true283
  %cond607 = phi i32 [ %add602, %cond.true283 ], [ %113, %cond.false603 ], !dbg !14704
  %sub = sub i32 %cond, %cond607, !dbg !14708
  ret i32 %sub, !dbg !14709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_drop_ep_from_interval_table(%struct.xhci_hcd* %xhci, %struct.xhci_bw_info* %ep_bw, %struct.xhci_interval_bw_table* %bw_table, %struct.usb_device* %udev, %struct.xhci_virt_ep* %virt_ep, %struct.xhci_tt_bw_info* %tt_info) #1 !dbg !14710 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %ep_bw.addr = alloca %struct.xhci_bw_info*, align 8
  %bw_table.addr = alloca %struct.xhci_interval_bw_table*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %virt_ep.addr = alloca %struct.xhci_virt_ep*, align 8
  %tt_info.addr = alloca %struct.xhci_tt_bw_info*, align 8
  %interval_bw = alloca %struct.xhci_interval_bw*, align 8
  %normalized_interval = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !14714, metadata !DIExpression()), !dbg !14715
  store %struct.xhci_bw_info* %ep_bw, %struct.xhci_bw_info** %ep_bw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_bw_info** %ep_bw.addr, metadata !14716, metadata !DIExpression()), !dbg !14717
  store %struct.xhci_interval_bw_table* %bw_table, %struct.xhci_interval_bw_table** %bw_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_interval_bw_table** %bw_table.addr, metadata !14718, metadata !DIExpression()), !dbg !14719
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !14720, metadata !DIExpression()), !dbg !14721
  store %struct.xhci_virt_ep* %virt_ep, %struct.xhci_virt_ep** %virt_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_ep** %virt_ep.addr, metadata !14722, metadata !DIExpression()), !dbg !14723
  store %struct.xhci_tt_bw_info* %tt_info, %struct.xhci_tt_bw_info** %tt_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_tt_bw_info** %tt_info.addr, metadata !14724, metadata !DIExpression()), !dbg !14725
  call void @llvm.dbg.declare(metadata %struct.xhci_interval_bw** %interval_bw, metadata !14726, metadata !DIExpression()), !dbg !14728
  call void @llvm.dbg.declare(metadata i32* %normalized_interval, metadata !14729, metadata !DIExpression()), !dbg !14730
  %0 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14731
  %type = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %0, i32 0, i32 5, !dbg !14733
  %1 = load i32, i32* %type, align 4, !dbg !14733
  %call = call zeroext i1 @xhci_is_async_ep(i32 %1) #11, !dbg !14734
  br i1 %call, label %if.then, label %if.end, !dbg !14735

if.then:                                          ; preds = %entry
  br label %return, !dbg !14736

if.end:                                           ; preds = %entry
  %2 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14737
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %2, i32 0, i32 4, !dbg !14739
  %3 = load i32, i32* %speed, align 4, !dbg !14739
  %cmp = icmp uge i32 %3, 5, !dbg !14740
  br i1 %cmp, label %if.then1, label %if.end15, !dbg !14741

if.then1:                                         ; preds = %if.end
  %4 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14742
  %type2 = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %4, i32 0, i32 5, !dbg !14745
  %5 = load i32, i32* %type2, align 4, !dbg !14745
  %call3 = call zeroext i1 @xhci_is_sync_in_ep(i32 %5) #11, !dbg !14746
  br i1 %call3, label %if.then4, label %if.else, !dbg !14747

if.then4:                                         ; preds = %if.then1
  %6 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14748
  %call5 = call i32 @xhci_get_ss_bw_consumed(%struct.xhci_bw_info* %6) #11, !dbg !14749
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14750
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 41, !dbg !14751
  %8 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14752
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %8, i32 0, i32 44, !dbg !14753
  %9 = load i32, i32* %slot_id, align 8, !dbg !14753
  %idxprom = sext i32 %9 to i64, !dbg !14750
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !14750
  %10 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !14750
  %bw_table6 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %10, i32 0, i32 6, !dbg !14754
  %11 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table6, align 8, !dbg !14754
  %ss_bw_in = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %11, i32 0, i32 3, !dbg !14755
  %12 = load i32, i32* %ss_bw_in, align 4, !dbg !14756
  %sub = sub i32 %12, %call5, !dbg !14756
  store i32 %sub, i32* %ss_bw_in, align 4, !dbg !14756
  br label %if.end14, !dbg !14750

if.else:                                          ; preds = %if.then1
  %13 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14757
  %call7 = call i32 @xhci_get_ss_bw_consumed(%struct.xhci_bw_info* %13) #11, !dbg !14758
  %14 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14759
  %devs8 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %14, i32 0, i32 41, !dbg !14760
  %15 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14761
  %slot_id9 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %15, i32 0, i32 44, !dbg !14762
  %16 = load i32, i32* %slot_id9, align 8, !dbg !14762
  %idxprom10 = sext i32 %16 to i64, !dbg !14759
  %arrayidx11 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs8, i64 0, i64 %idxprom10, !dbg !14759
  %17 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx11, align 8, !dbg !14759
  %bw_table12 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %17, i32 0, i32 6, !dbg !14763
  %18 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table12, align 8, !dbg !14763
  %ss_bw_out = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %18, i32 0, i32 4, !dbg !14764
  %19 = load i32, i32* %ss_bw_out, align 8, !dbg !14765
  %sub13 = sub i32 %19, %call7, !dbg !14765
  store i32 %sub13, i32* %ss_bw_out, align 8, !dbg !14765
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then4
  br label %return, !dbg !14766

if.end15:                                         ; preds = %if.end
  %20 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %virt_ep.addr, align 8, !dbg !14767
  %bw_endpoint_list = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %20, i32 0, i32 11, !dbg !14769
  %call16 = call i32 @list_empty(%struct.list_head* %bw_endpoint_list) #11, !dbg !14770
  %tobool = icmp ne i32 %call16, 0, !dbg !14770
  br i1 %tobool, label %if.then17, label %if.end18, !dbg !14771

if.then17:                                        ; preds = %if.end15
  br label %return, !dbg !14772

if.end18:                                         ; preds = %if.end15
  %21 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14773
  %speed19 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %21, i32 0, i32 4, !dbg !14775
  %22 = load i32, i32* %speed19, align 4, !dbg !14775
  %cmp20 = icmp eq i32 %22, 3, !dbg !14776
  br i1 %cmp20, label %if.then21, label %if.else22, !dbg !14777

if.then21:                                        ; preds = %if.end18
  %23 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14778
  %ep_interval = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %23, i32 0, i32 0, !dbg !14779
  %24 = load i32, i32* %ep_interval, align 4, !dbg !14779
  store i32 %24, i32* %normalized_interval, align 4, !dbg !14780
  br label %if.end25, !dbg !14781

if.else22:                                        ; preds = %if.end18
  %25 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14782
  %ep_interval23 = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %25, i32 0, i32 0, !dbg !14783
  %26 = load i32, i32* %ep_interval23, align 4, !dbg !14783
  %sub24 = sub i32 %26, 3, !dbg !14784
  store i32 %sub24, i32* %normalized_interval, align 4, !dbg !14785
  br label %if.end25

if.end25:                                         ; preds = %if.else22, %if.then21
  %27 = load i32, i32* %normalized_interval, align 4, !dbg !14786
  %cmp26 = icmp eq i32 %27, 0, !dbg !14788
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !14789

if.then27:                                        ; preds = %if.end25
  %28 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14790
  %max_esit_payload = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %28, i32 0, i32 4, !dbg !14791
  %29 = load i32, i32* %max_esit_payload, align 4, !dbg !14791
  %30 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table.addr, align 8, !dbg !14792
  %interval0_esit_payload = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %30, i32 0, i32 0, !dbg !14793
  %31 = load i32, i32* %interval0_esit_payload, align 8, !dbg !14794
  %sub28 = sub i32 %31, %29, !dbg !14794
  store i32 %sub28, i32* %interval0_esit_payload, align 8, !dbg !14794
  br label %if.end29, !dbg !14792

if.end29:                                         ; preds = %if.then27, %if.end25
  %32 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table.addr, align 8, !dbg !14795
  %interval_bw30 = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %32, i32 0, i32 1, !dbg !14796
  %33 = load i32, i32* %normalized_interval, align 4, !dbg !14797
  %idxprom31 = sext i32 %33 to i64, !dbg !14795
  %arrayidx32 = getelementptr [16 x %struct.xhci_interval_bw], [16 x %struct.xhci_interval_bw]* %interval_bw30, i64 0, i64 %idxprom31, !dbg !14795
  store %struct.xhci_interval_bw* %arrayidx32, %struct.xhci_interval_bw** %interval_bw, align 8, !dbg !14798
  %34 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14799
  %num_packets = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %34, i32 0, i32 2, !dbg !14800
  %35 = load i32, i32* %num_packets, align 4, !dbg !14800
  %36 = load %struct.xhci_interval_bw*, %struct.xhci_interval_bw** %interval_bw, align 8, !dbg !14801
  %num_packets33 = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %36, i32 0, i32 0, !dbg !14802
  %37 = load i32, i32* %num_packets33, align 8, !dbg !14803
  %sub34 = sub i32 %37, %35, !dbg !14803
  store i32 %sub34, i32* %num_packets33, align 8, !dbg !14803
  %38 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14804
  %speed35 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %38, i32 0, i32 4, !dbg !14805
  %39 = load i32, i32* %speed35, align 4, !dbg !14805
  switch i32 %39, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb38
    i32 3, label %sw.bb42
    i32 5, label %sw.bb46
    i32 6, label %sw.bb46
    i32 0, label %sw.bb46
    i32 4, label %sw.bb46
  ], !dbg !14806

sw.bb:                                            ; preds = %if.end29
  %40 = load %struct.xhci_interval_bw*, %struct.xhci_interval_bw** %interval_bw, align 8, !dbg !14807
  %overhead = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %40, i32 0, i32 2, !dbg !14809
  %arrayidx36 = getelementptr [3 x i32], [3 x i32]* %overhead, i64 0, i64 0, !dbg !14807
  %41 = load i32, i32* %arrayidx36, align 8, !dbg !14810
  %sub37 = sub i32 %41, 1, !dbg !14810
  store i32 %sub37, i32* %arrayidx36, align 8, !dbg !14810
  br label %sw.epilog, !dbg !14811

sw.bb38:                                          ; preds = %if.end29
  %42 = load %struct.xhci_interval_bw*, %struct.xhci_interval_bw** %interval_bw, align 8, !dbg !14812
  %overhead39 = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %42, i32 0, i32 2, !dbg !14813
  %arrayidx40 = getelementptr [3 x i32], [3 x i32]* %overhead39, i64 0, i64 1, !dbg !14812
  %43 = load i32, i32* %arrayidx40, align 4, !dbg !14814
  %sub41 = sub i32 %43, 1, !dbg !14814
  store i32 %sub41, i32* %arrayidx40, align 4, !dbg !14814
  br label %sw.epilog, !dbg !14815

sw.bb42:                                          ; preds = %if.end29
  %44 = load %struct.xhci_interval_bw*, %struct.xhci_interval_bw** %interval_bw, align 8, !dbg !14816
  %overhead43 = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %44, i32 0, i32 2, !dbg !14817
  %arrayidx44 = getelementptr [3 x i32], [3 x i32]* %overhead43, i64 0, i64 2, !dbg !14816
  %45 = load i32, i32* %arrayidx44, align 8, !dbg !14818
  %sub45 = sub i32 %45, 1, !dbg !14818
  store i32 %sub45, i32* %arrayidx44, align 8, !dbg !14818
  br label %sw.epilog, !dbg !14819

sw.bb46:                                          ; preds = %if.end29, %if.end29, %if.end29, %if.end29
  br label %return, !dbg !14820

sw.epilog:                                        ; preds = %if.end29, %sw.bb42, %sw.bb38, %sw.bb
  %46 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info.addr, align 8, !dbg !14821
  %tobool47 = icmp ne %struct.xhci_tt_bw_info* %46, null, !dbg !14821
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !14823

if.then48:                                        ; preds = %sw.epilog
  %47 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info.addr, align 8, !dbg !14824
  %active_eps = getelementptr inbounds %struct.xhci_tt_bw_info, %struct.xhci_tt_bw_info* %47, i32 0, i32 4, !dbg !14825
  %48 = load i32, i32* %active_eps, align 8, !dbg !14826
  %sub49 = sub i32 %48, 1, !dbg !14826
  store i32 %sub49, i32* %active_eps, align 8, !dbg !14826
  br label %if.end50, !dbg !14824

if.end50:                                         ; preds = %if.then48, %sw.epilog
  %49 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %virt_ep.addr, align 8, !dbg !14827
  %bw_endpoint_list51 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %49, i32 0, i32 11, !dbg !14828
  call void @list_del_init(%struct.list_head* %bw_endpoint_list51) #11, !dbg !14829
  br label %return, !dbg !14830

return:                                           ; preds = %if.end50, %sw.bb46, %if.then17, %if.end14, %if.then
  ret void, !dbg !14830
}

; Function Attrs: noredzone
declare dso_local void @xhci_update_bw_info(%struct.xhci_hcd*, %struct.xhci_container_ctx*, %struct.xhci_input_control_ctx*, %struct.xhci_virt_device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_add_ep_to_interval_table(%struct.xhci_hcd* %xhci, %struct.xhci_bw_info* %ep_bw, %struct.xhci_interval_bw_table* %bw_table, %struct.usb_device* %udev, %struct.xhci_virt_ep* %virt_ep, %struct.xhci_tt_bw_info* %tt_info) #1 !dbg !14831 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %ep_bw.addr = alloca %struct.xhci_bw_info*, align 8
  %bw_table.addr = alloca %struct.xhci_interval_bw_table*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %virt_ep.addr = alloca %struct.xhci_virt_ep*, align 8
  %tt_info.addr = alloca %struct.xhci_tt_bw_info*, align 8
  %interval_bw = alloca %struct.xhci_interval_bw*, align 8
  %smaller_ep = alloca %struct.xhci_virt_ep*, align 8
  %normalized_interval = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.xhci_virt_ep*, align 8
  %__mptr54 = alloca i8*, align 8
  %tmp59 = alloca %struct.xhci_virt_ep*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !14832, metadata !DIExpression()), !dbg !14833
  store %struct.xhci_bw_info* %ep_bw, %struct.xhci_bw_info** %ep_bw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_bw_info** %ep_bw.addr, metadata !14834, metadata !DIExpression()), !dbg !14835
  store %struct.xhci_interval_bw_table* %bw_table, %struct.xhci_interval_bw_table** %bw_table.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_interval_bw_table** %bw_table.addr, metadata !14836, metadata !DIExpression()), !dbg !14837
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !14838, metadata !DIExpression()), !dbg !14839
  store %struct.xhci_virt_ep* %virt_ep, %struct.xhci_virt_ep** %virt_ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_ep** %virt_ep.addr, metadata !14840, metadata !DIExpression()), !dbg !14841
  store %struct.xhci_tt_bw_info* %tt_info, %struct.xhci_tt_bw_info** %tt_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_tt_bw_info** %tt_info.addr, metadata !14842, metadata !DIExpression()), !dbg !14843
  call void @llvm.dbg.declare(metadata %struct.xhci_interval_bw** %interval_bw, metadata !14844, metadata !DIExpression()), !dbg !14845
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_ep** %smaller_ep, metadata !14846, metadata !DIExpression()), !dbg !14847
  call void @llvm.dbg.declare(metadata i32* %normalized_interval, metadata !14848, metadata !DIExpression()), !dbg !14849
  %0 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14850
  %type = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %0, i32 0, i32 5, !dbg !14852
  %1 = load i32, i32* %type, align 4, !dbg !14852
  %call = call zeroext i1 @xhci_is_async_ep(i32 %1) #11, !dbg !14853
  br i1 %call, label %if.then, label %if.end, !dbg !14854

if.then:                                          ; preds = %entry
  br label %return, !dbg !14855

if.end:                                           ; preds = %entry
  %2 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14856
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %2, i32 0, i32 4, !dbg !14858
  %3 = load i32, i32* %speed, align 4, !dbg !14858
  %cmp = icmp eq i32 %3, 5, !dbg !14859
  br i1 %cmp, label %if.then1, label %if.end15, !dbg !14860

if.then1:                                         ; preds = %if.end
  %4 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14861
  %type2 = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %4, i32 0, i32 5, !dbg !14864
  %5 = load i32, i32* %type2, align 4, !dbg !14864
  %call3 = call zeroext i1 @xhci_is_sync_in_ep(i32 %5) #11, !dbg !14865
  br i1 %call3, label %if.then4, label %if.else, !dbg !14866

if.then4:                                         ; preds = %if.then1
  %6 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14867
  %call5 = call i32 @xhci_get_ss_bw_consumed(%struct.xhci_bw_info* %6) #11, !dbg !14868
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14869
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %7, i32 0, i32 41, !dbg !14870
  %8 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14871
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %8, i32 0, i32 44, !dbg !14872
  %9 = load i32, i32* %slot_id, align 8, !dbg !14872
  %idxprom = sext i32 %9 to i64, !dbg !14869
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !14869
  %10 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !14869
  %bw_table6 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %10, i32 0, i32 6, !dbg !14873
  %11 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table6, align 8, !dbg !14873
  %ss_bw_in = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %11, i32 0, i32 3, !dbg !14874
  %12 = load i32, i32* %ss_bw_in, align 4, !dbg !14875
  %add = add i32 %12, %call5, !dbg !14875
  store i32 %add, i32* %ss_bw_in, align 4, !dbg !14875
  br label %if.end14, !dbg !14869

if.else:                                          ; preds = %if.then1
  %13 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14876
  %call7 = call i32 @xhci_get_ss_bw_consumed(%struct.xhci_bw_info* %13) #11, !dbg !14877
  %14 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !14878
  %devs8 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %14, i32 0, i32 41, !dbg !14879
  %15 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14880
  %slot_id9 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %15, i32 0, i32 44, !dbg !14881
  %16 = load i32, i32* %slot_id9, align 8, !dbg !14881
  %idxprom10 = sext i32 %16 to i64, !dbg !14878
  %arrayidx11 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs8, i64 0, i64 %idxprom10, !dbg !14878
  %17 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx11, align 8, !dbg !14878
  %bw_table12 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %17, i32 0, i32 6, !dbg !14882
  %18 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table12, align 8, !dbg !14882
  %ss_bw_out = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %18, i32 0, i32 4, !dbg !14883
  %19 = load i32, i32* %ss_bw_out, align 8, !dbg !14884
  %add13 = add i32 %19, %call7, !dbg !14884
  store i32 %add13, i32* %ss_bw_out, align 8, !dbg !14884
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then4
  br label %return, !dbg !14885

if.end15:                                         ; preds = %if.end
  %20 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14886
  %speed16 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %20, i32 0, i32 4, !dbg !14888
  %21 = load i32, i32* %speed16, align 4, !dbg !14888
  %cmp17 = icmp eq i32 %21, 3, !dbg !14889
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !14890

if.then18:                                        ; preds = %if.end15
  %22 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14891
  %ep_interval = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %22, i32 0, i32 0, !dbg !14892
  %23 = load i32, i32* %ep_interval, align 4, !dbg !14892
  store i32 %23, i32* %normalized_interval, align 4, !dbg !14893
  br label %if.end21, !dbg !14894

if.else19:                                        ; preds = %if.end15
  %24 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14895
  %ep_interval20 = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %24, i32 0, i32 0, !dbg !14896
  %25 = load i32, i32* %ep_interval20, align 4, !dbg !14896
  %sub = sub i32 %25, 3, !dbg !14897
  store i32 %sub, i32* %normalized_interval, align 4, !dbg !14898
  br label %if.end21

if.end21:                                         ; preds = %if.else19, %if.then18
  %26 = load i32, i32* %normalized_interval, align 4, !dbg !14899
  %cmp22 = icmp eq i32 %26, 0, !dbg !14901
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !14902

if.then23:                                        ; preds = %if.end21
  %27 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14903
  %max_esit_payload = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %27, i32 0, i32 4, !dbg !14904
  %28 = load i32, i32* %max_esit_payload, align 4, !dbg !14904
  %29 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table.addr, align 8, !dbg !14905
  %interval0_esit_payload = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %29, i32 0, i32 0, !dbg !14906
  %30 = load i32, i32* %interval0_esit_payload, align 8, !dbg !14907
  %add24 = add i32 %30, %28, !dbg !14907
  store i32 %add24, i32* %interval0_esit_payload, align 8, !dbg !14907
  br label %if.end25, !dbg !14905

if.end25:                                         ; preds = %if.then23, %if.end21
  %31 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table.addr, align 8, !dbg !14908
  %interval_bw26 = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %31, i32 0, i32 1, !dbg !14909
  %32 = load i32, i32* %normalized_interval, align 4, !dbg !14910
  %idxprom27 = sext i32 %32 to i64, !dbg !14908
  %arrayidx28 = getelementptr [16 x %struct.xhci_interval_bw], [16 x %struct.xhci_interval_bw]* %interval_bw26, i64 0, i64 %idxprom27, !dbg !14908
  store %struct.xhci_interval_bw* %arrayidx28, %struct.xhci_interval_bw** %interval_bw, align 8, !dbg !14911
  %33 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14912
  %num_packets = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %33, i32 0, i32 2, !dbg !14913
  %34 = load i32, i32* %num_packets, align 4, !dbg !14913
  %35 = load %struct.xhci_interval_bw*, %struct.xhci_interval_bw** %interval_bw, align 8, !dbg !14914
  %num_packets29 = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %35, i32 0, i32 0, !dbg !14915
  %36 = load i32, i32* %num_packets29, align 8, !dbg !14916
  %add30 = add i32 %36, %34, !dbg !14916
  store i32 %add30, i32* %num_packets29, align 8, !dbg !14916
  %37 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !14917
  %speed31 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %37, i32 0, i32 4, !dbg !14918
  %38 = load i32, i32* %speed31, align 4, !dbg !14918
  switch i32 %38, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb34
    i32 3, label %sw.bb38
    i32 5, label %sw.bb42
    i32 6, label %sw.bb42
    i32 0, label %sw.bb42
    i32 4, label %sw.bb42
  ], !dbg !14919

sw.bb:                                            ; preds = %if.end25
  %39 = load %struct.xhci_interval_bw*, %struct.xhci_interval_bw** %interval_bw, align 8, !dbg !14920
  %overhead = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %39, i32 0, i32 2, !dbg !14922
  %arrayidx32 = getelementptr [3 x i32], [3 x i32]* %overhead, i64 0, i64 0, !dbg !14920
  %40 = load i32, i32* %arrayidx32, align 8, !dbg !14923
  %add33 = add i32 %40, 1, !dbg !14923
  store i32 %add33, i32* %arrayidx32, align 8, !dbg !14923
  br label %sw.epilog, !dbg !14924

sw.bb34:                                          ; preds = %if.end25
  %41 = load %struct.xhci_interval_bw*, %struct.xhci_interval_bw** %interval_bw, align 8, !dbg !14925
  %overhead35 = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %41, i32 0, i32 2, !dbg !14926
  %arrayidx36 = getelementptr [3 x i32], [3 x i32]* %overhead35, i64 0, i64 1, !dbg !14925
  %42 = load i32, i32* %arrayidx36, align 4, !dbg !14927
  %add37 = add i32 %42, 1, !dbg !14927
  store i32 %add37, i32* %arrayidx36, align 4, !dbg !14927
  br label %sw.epilog, !dbg !14928

sw.bb38:                                          ; preds = %if.end25
  %43 = load %struct.xhci_interval_bw*, %struct.xhci_interval_bw** %interval_bw, align 8, !dbg !14929
  %overhead39 = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %43, i32 0, i32 2, !dbg !14930
  %arrayidx40 = getelementptr [3 x i32], [3 x i32]* %overhead39, i64 0, i64 2, !dbg !14929
  %44 = load i32, i32* %arrayidx40, align 8, !dbg !14931
  %add41 = add i32 %44, 1, !dbg !14931
  store i32 %add41, i32* %arrayidx40, align 8, !dbg !14931
  br label %sw.epilog, !dbg !14932

sw.bb42:                                          ; preds = %if.end25, %if.end25, %if.end25, %if.end25
  br label %return, !dbg !14933

sw.epilog:                                        ; preds = %if.end25, %sw.bb38, %sw.bb34, %sw.bb
  %45 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info.addr, align 8, !dbg !14934
  %tobool = icmp ne %struct.xhci_tt_bw_info* %45, null, !dbg !14934
  br i1 %tobool, label %if.then43, label %if.end45, !dbg !14936

if.then43:                                        ; preds = %sw.epilog
  %46 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info.addr, align 8, !dbg !14937
  %active_eps = getelementptr inbounds %struct.xhci_tt_bw_info, %struct.xhci_tt_bw_info* %46, i32 0, i32 4, !dbg !14938
  %47 = load i32, i32* %active_eps, align 8, !dbg !14939
  %add44 = add i32 %47, 1, !dbg !14939
  store i32 %add44, i32* %active_eps, align 8, !dbg !14939
  br label %if.end45, !dbg !14937

if.end45:                                         ; preds = %if.then43, %sw.epilog
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14940, metadata !DIExpression()), !dbg !14943
  %48 = load %struct.xhci_interval_bw*, %struct.xhci_interval_bw** %interval_bw, align 8, !dbg !14943
  %endpoints = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %48, i32 0, i32 1, !dbg !14943
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %endpoints, i32 0, i32 0, !dbg !14943
  %49 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14943
  %50 = bitcast %struct.list_head* %49 to i8*, !dbg !14943
  store i8* %50, i8** %__mptr, align 8, !dbg !14943
  br label %do.body, !dbg !14943

do.body:                                          ; preds = %if.end45
  br label %do.end, !dbg !14944

do.end:                                           ; preds = %do.body
  %51 = load i8*, i8** %__mptr, align 8, !dbg !14943
  %add.ptr = getelementptr i8, i8* %51, i64 -144, !dbg !14943
  %52 = bitcast i8* %add.ptr to %struct.xhci_virt_ep*, !dbg !14943
  store %struct.xhci_virt_ep* %52, %struct.xhci_virt_ep** %tmp, align 8, !dbg !14944
  %53 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %tmp, align 8, !dbg !14943
  store %struct.xhci_virt_ep* %53, %struct.xhci_virt_ep** %smaller_ep, align 8, !dbg !14946
  br label %for.cond, !dbg !14946

for.cond:                                         ; preds = %do.end58, %do.end
  %54 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %smaller_ep, align 8, !dbg !14947
  %bw_endpoint_list = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %54, i32 0, i32 11, !dbg !14947
  %55 = load %struct.xhci_interval_bw*, %struct.xhci_interval_bw** %interval_bw, align 8, !dbg !14947
  %endpoints46 = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %55, i32 0, i32 1, !dbg !14947
  %cmp47 = icmp eq %struct.list_head* %bw_endpoint_list, %endpoints46, !dbg !14947
  %lnot = xor i1 %cmp47, true, !dbg !14947
  br i1 %lnot, label %for.body, label %for.end, !dbg !14946

for.body:                                         ; preds = %for.cond
  %56 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !14949
  %max_packet_size = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %56, i32 0, i32 3, !dbg !14952
  %57 = load i32, i32* %max_packet_size, align 4, !dbg !14952
  %58 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %smaller_ep, align 8, !dbg !14953
  %bw_info = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %58, i32 0, i32 10, !dbg !14954
  %max_packet_size48 = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %bw_info, i32 0, i32 3, !dbg !14955
  %59 = load i32, i32* %max_packet_size48, align 4, !dbg !14955
  %cmp49 = icmp uge i32 %57, %59, !dbg !14956
  br i1 %cmp49, label %if.then50, label %if.end53, !dbg !14957

if.then50:                                        ; preds = %for.body
  %60 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %virt_ep.addr, align 8, !dbg !14958
  %bw_endpoint_list51 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %60, i32 0, i32 11, !dbg !14960
  %61 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %smaller_ep, align 8, !dbg !14961
  %bw_endpoint_list52 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %61, i32 0, i32 11, !dbg !14962
  call void @list_add_tail(%struct.list_head* %bw_endpoint_list51, %struct.list_head* %bw_endpoint_list52) #11, !dbg !14963
  br label %return, !dbg !14964

if.end53:                                         ; preds = %for.body
  br label %for.inc, !dbg !14965

for.inc:                                          ; preds = %if.end53
  call void @llvm.dbg.declare(metadata i8** %__mptr54, metadata !14966, metadata !DIExpression()), !dbg !14968
  %62 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %smaller_ep, align 8, !dbg !14968
  %bw_endpoint_list55 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %62, i32 0, i32 11, !dbg !14968
  %next56 = getelementptr inbounds %struct.list_head, %struct.list_head* %bw_endpoint_list55, i32 0, i32 0, !dbg !14968
  %63 = load %struct.list_head*, %struct.list_head** %next56, align 8, !dbg !14968
  %64 = bitcast %struct.list_head* %63 to i8*, !dbg !14968
  store i8* %64, i8** %__mptr54, align 8, !dbg !14968
  br label %do.body57, !dbg !14968

do.body57:                                        ; preds = %for.inc
  br label %do.end58, !dbg !14969

do.end58:                                         ; preds = %do.body57
  %65 = load i8*, i8** %__mptr54, align 8, !dbg !14968
  %add.ptr60 = getelementptr i8, i8* %65, i64 -144, !dbg !14968
  %66 = bitcast i8* %add.ptr60 to %struct.xhci_virt_ep*, !dbg !14968
  store %struct.xhci_virt_ep* %66, %struct.xhci_virt_ep** %tmp59, align 8, !dbg !14969
  %67 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %tmp59, align 8, !dbg !14968
  store %struct.xhci_virt_ep* %67, %struct.xhci_virt_ep** %smaller_ep, align 8, !dbg !14947
  br label %for.cond, !dbg !14947, !llvm.loop !14971

for.end:                                          ; preds = %for.cond
  %68 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %virt_ep.addr, align 8, !dbg !14973
  %bw_endpoint_list61 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %68, i32 0, i32 11, !dbg !14974
  %69 = load %struct.xhci_interval_bw*, %struct.xhci_interval_bw** %interval_bw, align 8, !dbg !14975
  %endpoints62 = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %69, i32 0, i32 1, !dbg !14976
  call void @list_add_tail(%struct.list_head* %bw_endpoint_list61, %struct.list_head* %endpoints62) #11, !dbg !14977
  br label %return, !dbg !14978

return:                                           ; preds = %for.end, %if.then50, %sw.bb42, %if.end14, %if.then
  ret void, !dbg !14978
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_check_bw_table(%struct.xhci_hcd* %xhci, %struct.xhci_virt_device* %virt_dev, i32 %old_active_eps) #1 !dbg !14979 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %virt_dev.addr = alloca %struct.xhci_virt_device*, align 8
  %old_active_eps.addr = alloca i32, align 4
  %bw_reserved = alloca i32, align 4
  %max_bandwidth = alloca i32, align 4
  %bw_used = alloca i32, align 4
  %block_size = alloca i32, align 4
  %bw_table = alloca %struct.xhci_interval_bw_table*, align 8
  %packet_size = alloca i32, align 4
  %overhead = alloca i32, align 4
  %packets_transmitted = alloca i32, align 4
  %packets_remaining = alloca i32, align 4
  %i = alloca i32, align 4
  %bw_added = alloca i32, align 4
  %largest_mps = alloca i32, align 4
  %interval_overhead = alloca i32, align 4
  %virt_ep = alloca %struct.xhci_virt_ep*, align 8
  %ep_entry = alloca %struct.list_head*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.xhci_virt_ep*, align 8
  %port_index = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !14982, metadata !DIExpression()), !dbg !14983
  store %struct.xhci_virt_device* %virt_dev, %struct.xhci_virt_device** %virt_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev.addr, metadata !14984, metadata !DIExpression()), !dbg !14985
  store i32 %old_active_eps, i32* %old_active_eps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %old_active_eps.addr, metadata !14986, metadata !DIExpression()), !dbg !14987
  call void @llvm.dbg.declare(metadata i32* %bw_reserved, metadata !14988, metadata !DIExpression()), !dbg !14989
  call void @llvm.dbg.declare(metadata i32* %max_bandwidth, metadata !14990, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.declare(metadata i32* %bw_used, metadata !14992, metadata !DIExpression()), !dbg !14993
  call void @llvm.dbg.declare(metadata i32* %block_size, metadata !14994, metadata !DIExpression()), !dbg !14995
  call void @llvm.dbg.declare(metadata %struct.xhci_interval_bw_table** %bw_table, metadata !14996, metadata !DIExpression()), !dbg !14997
  call void @llvm.dbg.declare(metadata i32* %packet_size, metadata !14998, metadata !DIExpression()), !dbg !14999
  store i32 0, i32* %packet_size, align 4, !dbg !14999
  call void @llvm.dbg.declare(metadata i32* %overhead, metadata !15000, metadata !DIExpression()), !dbg !15001
  store i32 0, i32* %overhead, align 4, !dbg !15001
  call void @llvm.dbg.declare(metadata i32* %packets_transmitted, metadata !15002, metadata !DIExpression()), !dbg !15003
  store i32 0, i32* %packets_transmitted, align 4, !dbg !15003
  call void @llvm.dbg.declare(metadata i32* %packets_remaining, metadata !15004, metadata !DIExpression()), !dbg !15005
  store i32 0, i32* %packets_remaining, align 4, !dbg !15005
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15006, metadata !DIExpression()), !dbg !15007
  %0 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15008
  %udev = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %0, i32 0, i32 0, !dbg !15010
  %1 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !15010
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 4, !dbg !15011
  %2 = load i32, i32* %speed, align 4, !dbg !15011
  %cmp = icmp uge i32 %2, 5, !dbg !15012
  br i1 %cmp, label %if.then, label %if.end, !dbg !15013

if.then:                                          ; preds = %entry
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15014
  %4 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15015
  %call = call i32 @xhci_check_ss_bw(%struct.xhci_hcd* %3, %struct.xhci_virt_device* %4) #11, !dbg !15016
  store i32 %call, i32* %retval, align 4, !dbg !15017
  br label %return, !dbg !15017

if.end:                                           ; preds = %entry
  %5 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15018
  %udev1 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %5, i32 0, i32 0, !dbg !15020
  %6 = load %struct.usb_device*, %struct.usb_device** %udev1, align 8, !dbg !15020
  %speed2 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 4, !dbg !15021
  %7 = load i32, i32* %speed2, align 4, !dbg !15021
  %cmp3 = icmp eq i32 %7, 3, !dbg !15022
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !15023

if.then4:                                         ; preds = %if.end
  store i32 1607, i32* %max_bandwidth, align 4, !dbg !15024
  %8 = load i32, i32* %max_bandwidth, align 4, !dbg !15026
  %mul = mul i32 20, %8, !dbg !15026
  %add = add i32 %mul, 100, !dbg !15026
  %sub = sub i32 %add, 1, !dbg !15026
  %div = udiv i32 %sub, 100, !dbg !15026
  store i32 %div, i32* %bw_reserved, align 4, !dbg !15027
  br label %if.end9, !dbg !15028

if.else:                                          ; preds = %if.end
  store i32 1285, i32* %max_bandwidth, align 4, !dbg !15029
  %9 = load i32, i32* %max_bandwidth, align 4, !dbg !15031
  %mul5 = mul i32 10, %9, !dbg !15031
  %add6 = add i32 %mul5, 100, !dbg !15031
  %sub7 = sub i32 %add6, 1, !dbg !15031
  %div8 = udiv i32 %sub7, 100, !dbg !15031
  store i32 %div8, i32* %bw_reserved, align 4, !dbg !15032
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then4
  %10 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15033
  %bw_table10 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %10, i32 0, i32 6, !dbg !15034
  %11 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table10, align 8, !dbg !15034
  store %struct.xhci_interval_bw_table* %11, %struct.xhci_interval_bw_table** %bw_table, align 8, !dbg !15035
  %12 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15036
  %udev11 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %12, i32 0, i32 0, !dbg !15037
  %13 = load %struct.usb_device*, %struct.usb_device** %udev11, align 8, !dbg !15037
  %call12 = call i32 @xhci_get_block_size(%struct.usb_device* %13) #11, !dbg !15038
  store i32 %call12, i32* %block_size, align 4, !dbg !15039
  %14 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15040
  %tt_info = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %14, i32 0, i32 7, !dbg !15042
  %15 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info, align 8, !dbg !15042
  %tobool = icmp ne %struct.xhci_tt_bw_info* %15, null, !dbg !15040
  br i1 %tobool, label %if.then13, label %if.else21, !dbg !15043

if.then13:                                        ; preds = %if.end9
  %16 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15044
  %17 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15046
  %real_port = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %17, i32 0, i32 5, !dbg !15047
  %18 = load i8, i8* %real_port, align 1, !dbg !15047
  %conv = zext i8 %18 to i32, !dbg !15046
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %16, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.80, i64 0, i64 0), i32 %conv) #11, !dbg !15048
  %19 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15049
  %20 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15051
  %21 = load i32, i32* %old_active_eps.addr, align 4, !dbg !15052
  %call14 = call i32 @xhci_check_tt_bw_table(%struct.xhci_hcd* %19, %struct.xhci_virt_device* %20, i32 %21) #11, !dbg !15053
  %tobool15 = icmp ne i32 %call14, 0, !dbg !15053
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !15054

if.then16:                                        ; preds = %if.then13
  %22 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15055
  %call17 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %22) #11, !dbg !15055
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call17, i32 0, i32 0, !dbg !15055
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !15055
  %23 = load %struct.device*, %struct.device** %controller, align 8, !dbg !15055
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %23, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.81, i64 0, i64 0)) #12, !dbg !15055
  store i32 -12, i32* %retval, align 4, !dbg !15057
  br label %return, !dbg !15057

if.end18:                                         ; preds = %if.then13
  %24 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15058
  %25 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15059
  %tt_info19 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %25, i32 0, i32 7, !dbg !15060
  %26 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info19, align 8, !dbg !15060
  %slot_id = getelementptr inbounds %struct.xhci_tt_bw_info, %struct.xhci_tt_bw_info* %26, i32 0, i32 1, !dbg !15061
  %27 = load i32, i32* %slot_id, align 8, !dbg !15061
  %28 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15062
  %tt_info20 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %28, i32 0, i32 7, !dbg !15063
  %29 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info20, align 8, !dbg !15063
  %ttport = getelementptr inbounds %struct.xhci_tt_bw_info, %struct.xhci_tt_bw_info* %29, i32 0, i32 2, !dbg !15064
  %30 = load i32, i32* %ttport, align 4, !dbg !15064
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %24, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.82, i64 0, i64 0), i32 %27, i32 %30) #11, !dbg !15065
  br label %if.end24, !dbg !15066

if.else21:                                        ; preds = %if.end9
  %31 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15067
  %32 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15069
  %real_port22 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %32, i32 0, i32 5, !dbg !15070
  %33 = load i8, i8* %real_port22, align 1, !dbg !15070
  %conv23 = zext i8 %33 to i32, !dbg !15069
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %31, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.80, i64 0, i64 0), i32 %conv23) #11, !dbg !15071
  br label %if.end24

if.end24:                                         ; preds = %if.else21, %if.end18
  %34 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table, align 8, !dbg !15072
  %interval0_esit_payload = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %34, i32 0, i32 0, !dbg !15072
  %35 = load i32, i32* %interval0_esit_payload, align 8, !dbg !15072
  %36 = load i32, i32* %block_size, align 4, !dbg !15072
  %add25 = add i32 %35, %36, !dbg !15072
  %sub26 = sub i32 %add25, 1, !dbg !15072
  %37 = load i32, i32* %block_size, align 4, !dbg !15072
  %div27 = udiv i32 %sub26, %37, !dbg !15072
  %38 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table, align 8, !dbg !15073
  %interval_bw = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %38, i32 0, i32 1, !dbg !15074
  %arrayidx = getelementptr [16 x %struct.xhci_interval_bw], [16 x %struct.xhci_interval_bw]* %interval_bw, i64 0, i64 0, !dbg !15073
  %num_packets = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %arrayidx, i32 0, i32 0, !dbg !15075
  %39 = load i32, i32* %num_packets, align 8, !dbg !15075
  %40 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table, align 8, !dbg !15076
  %interval_bw28 = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %40, i32 0, i32 1, !dbg !15077
  %arrayidx29 = getelementptr [16 x %struct.xhci_interval_bw], [16 x %struct.xhci_interval_bw]* %interval_bw28, i64 0, i64 0, !dbg !15076
  %call30 = call i32 @xhci_get_largest_overhead(%struct.xhci_interval_bw* %arrayidx29) #11, !dbg !15078
  %mul31 = mul i32 %39, %call30, !dbg !15079
  %add32 = add i32 %div27, %mul31, !dbg !15080
  store i32 %add32, i32* %bw_used, align 4, !dbg !15081
  store i32 1, i32* %i, align 4, !dbg !15082
  br label %for.cond, !dbg !15084

for.cond:                                         ; preds = %for.inc, %if.end24
  %41 = load i32, i32* %i, align 4, !dbg !15085
  %cmp33 = icmp ult i32 %41, 16, !dbg !15087
  br i1 %cmp33, label %for.body, label %for.end, !dbg !15088

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %bw_added, metadata !15089, metadata !DIExpression()), !dbg !15091
  call void @llvm.dbg.declare(metadata i32* %largest_mps, metadata !15092, metadata !DIExpression()), !dbg !15093
  call void @llvm.dbg.declare(metadata i32* %interval_overhead, metadata !15094, metadata !DIExpression()), !dbg !15095
  %42 = load i32, i32* %packets_remaining, align 4, !dbg !15096
  %mul35 = mul i32 2, %42, !dbg !15097
  %43 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table, align 8, !dbg !15098
  %interval_bw36 = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %43, i32 0, i32 1, !dbg !15099
  %44 = load i32, i32* %i, align 4, !dbg !15100
  %idxprom = zext i32 %44 to i64, !dbg !15098
  %arrayidx37 = getelementptr [16 x %struct.xhci_interval_bw], [16 x %struct.xhci_interval_bw]* %interval_bw36, i64 0, i64 %idxprom, !dbg !15098
  %num_packets38 = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %arrayidx37, i32 0, i32 0, !dbg !15101
  %45 = load i32, i32* %num_packets38, align 8, !dbg !15101
  %add39 = add i32 %mul35, %45, !dbg !15102
  store i32 %add39, i32* %packets_remaining, align 4, !dbg !15103
  %46 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table, align 8, !dbg !15104
  %interval_bw40 = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %46, i32 0, i32 1, !dbg !15106
  %47 = load i32, i32* %i, align 4, !dbg !15107
  %idxprom41 = zext i32 %47 to i64, !dbg !15104
  %arrayidx42 = getelementptr [16 x %struct.xhci_interval_bw], [16 x %struct.xhci_interval_bw]* %interval_bw40, i64 0, i64 %idxprom41, !dbg !15104
  %endpoints = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %arrayidx42, i32 0, i32 1, !dbg !15108
  %call43 = call i32 @list_empty(%struct.list_head* %endpoints) #11, !dbg !15109
  %tobool44 = icmp ne i32 %call43, 0, !dbg !15109
  br i1 %tobool44, label %if.then45, label %if.else46, !dbg !15110

if.then45:                                        ; preds = %for.body
  store i32 0, i32* %largest_mps, align 4, !dbg !15111
  br label %if.end54, !dbg !15112

if.else46:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_ep** %virt_ep, metadata !15113, metadata !DIExpression()), !dbg !15115
  call void @llvm.dbg.declare(metadata %struct.list_head** %ep_entry, metadata !15116, metadata !DIExpression()), !dbg !15117
  %48 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table, align 8, !dbg !15118
  %interval_bw47 = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %48, i32 0, i32 1, !dbg !15119
  %49 = load i32, i32* %i, align 4, !dbg !15120
  %idxprom48 = zext i32 %49 to i64, !dbg !15118
  %arrayidx49 = getelementptr [16 x %struct.xhci_interval_bw], [16 x %struct.xhci_interval_bw]* %interval_bw47, i64 0, i64 %idxprom48, !dbg !15118
  %endpoints50 = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %arrayidx49, i32 0, i32 1, !dbg !15121
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %endpoints50, i32 0, i32 0, !dbg !15122
  %50 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15122
  store %struct.list_head* %50, %struct.list_head** %ep_entry, align 8, !dbg !15123
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15124, metadata !DIExpression()), !dbg !15126
  %51 = load %struct.list_head*, %struct.list_head** %ep_entry, align 8, !dbg !15126
  %52 = bitcast %struct.list_head* %51 to i8*, !dbg !15126
  store i8* %52, i8** %__mptr, align 8, !dbg !15126
  br label %do.body, !dbg !15126

do.body:                                          ; preds = %if.else46
  br label %do.end, !dbg !15127

do.end:                                           ; preds = %do.body
  %53 = load i8*, i8** %__mptr, align 8, !dbg !15126
  %add.ptr = getelementptr i8, i8* %53, i64 -144, !dbg !15126
  %54 = bitcast i8* %add.ptr to %struct.xhci_virt_ep*, !dbg !15126
  store %struct.xhci_virt_ep* %54, %struct.xhci_virt_ep** %tmp, align 8, !dbg !15127
  %55 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %tmp, align 8, !dbg !15126
  store %struct.xhci_virt_ep* %55, %struct.xhci_virt_ep** %virt_ep, align 8, !dbg !15129
  %56 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %virt_ep, align 8, !dbg !15130
  %bw_info = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %56, i32 0, i32 10, !dbg !15130
  %max_packet_size = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %bw_info, i32 0, i32 3, !dbg !15130
  %57 = load i32, i32* %max_packet_size, align 4, !dbg !15130
  %58 = load i32, i32* %block_size, align 4, !dbg !15130
  %add51 = add i32 %57, %58, !dbg !15130
  %sub52 = sub i32 %add51, 1, !dbg !15130
  %59 = load i32, i32* %block_size, align 4, !dbg !15130
  %div53 = udiv i32 %sub52, %59, !dbg !15130
  store i32 %div53, i32* %largest_mps, align 4, !dbg !15131
  br label %if.end54

if.end54:                                         ; preds = %do.end, %if.then45
  %60 = load i32, i32* %largest_mps, align 4, !dbg !15132
  %61 = load i32, i32* %packet_size, align 4, !dbg !15134
  %cmp55 = icmp ugt i32 %60, %61, !dbg !15135
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !15136

if.then57:                                        ; preds = %if.end54
  %62 = load i32, i32* %largest_mps, align 4, !dbg !15137
  store i32 %62, i32* %packet_size, align 4, !dbg !15138
  br label %if.end58, !dbg !15139

if.end58:                                         ; preds = %if.then57, %if.end54
  %63 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table, align 8, !dbg !15140
  %interval_bw59 = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %63, i32 0, i32 1, !dbg !15141
  %64 = load i32, i32* %i, align 4, !dbg !15142
  %idxprom60 = zext i32 %64 to i64, !dbg !15140
  %arrayidx61 = getelementptr [16 x %struct.xhci_interval_bw], [16 x %struct.xhci_interval_bw]* %interval_bw59, i64 0, i64 %idxprom60, !dbg !15140
  %call62 = call i32 @xhci_get_largest_overhead(%struct.xhci_interval_bw* %arrayidx61) #11, !dbg !15143
  store i32 %call62, i32* %interval_overhead, align 4, !dbg !15144
  %65 = load i32, i32* %interval_overhead, align 4, !dbg !15145
  %66 = load i32, i32* %overhead, align 4, !dbg !15147
  %cmp63 = icmp ugt i32 %65, %66, !dbg !15148
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !15149

if.then65:                                        ; preds = %if.end58
  %67 = load i32, i32* %interval_overhead, align 4, !dbg !15150
  store i32 %67, i32* %overhead, align 4, !dbg !15151
  br label %if.end66, !dbg !15152

if.end66:                                         ; preds = %if.then65, %if.end58
  %68 = load i32, i32* %packets_remaining, align 4, !dbg !15153
  %69 = load i32, i32* %i, align 4, !dbg !15154
  %add67 = add i32 %69, 1, !dbg !15155
  %shr = lshr i32 %68, %add67, !dbg !15156
  store i32 %shr, i32* %packets_transmitted, align 4, !dbg !15157
  %70 = load i32, i32* %packets_transmitted, align 4, !dbg !15158
  %71 = load i32, i32* %overhead, align 4, !dbg !15159
  %72 = load i32, i32* %packet_size, align 4, !dbg !15160
  %add68 = add i32 %71, %72, !dbg !15161
  %mul69 = mul i32 %70, %add68, !dbg !15162
  store i32 %mul69, i32* %bw_added, align 4, !dbg !15163
  %73 = load i32, i32* %packets_remaining, align 4, !dbg !15164
  %74 = load i32, i32* %i, align 4, !dbg !15165
  %add70 = add i32 %74, 1, !dbg !15166
  %shl = shl i32 1, %add70, !dbg !15167
  %rem = urem i32 %73, %shl, !dbg !15168
  store i32 %rem, i32* %packets_remaining, align 4, !dbg !15169
  %75 = load i32, i32* %packets_remaining, align 4, !dbg !15170
  %cmp71 = icmp eq i32 %75, 0, !dbg !15172
  br i1 %cmp71, label %if.then73, label %if.else74, !dbg !15173

if.then73:                                        ; preds = %if.end66
  store i32 0, i32* %packet_size, align 4, !dbg !15174
  store i32 0, i32* %overhead, align 4, !dbg !15176
  br label %if.end79, !dbg !15177

if.else74:                                        ; preds = %if.end66
  %76 = load i32, i32* %packets_transmitted, align 4, !dbg !15178
  %cmp75 = icmp ugt i32 %76, 0, !dbg !15180
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !15181

if.then77:                                        ; preds = %if.else74
  %77 = load i32, i32* %largest_mps, align 4, !dbg !15182
  store i32 %77, i32* %packet_size, align 4, !dbg !15184
  %78 = load i32, i32* %interval_overhead, align 4, !dbg !15185
  store i32 %78, i32* %overhead, align 4, !dbg !15186
  br label %if.end78, !dbg !15187

if.end78:                                         ; preds = %if.then77, %if.else74
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.then73
  %79 = load i32, i32* %bw_added, align 4, !dbg !15188
  %80 = load i32, i32* %bw_used, align 4, !dbg !15189
  %add80 = add i32 %80, %79, !dbg !15189
  store i32 %add80, i32* %bw_used, align 4, !dbg !15189
  %81 = load i32, i32* %bw_used, align 4, !dbg !15190
  %82 = load i32, i32* %max_bandwidth, align 4, !dbg !15192
  %cmp81 = icmp ugt i32 %81, %82, !dbg !15193
  br i1 %cmp81, label %if.then83, label %if.end87, !dbg !15194

if.then83:                                        ; preds = %if.end79
  %83 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15195
  %call84 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %83) #11, !dbg !15195
  %self85 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call84, i32 0, i32 0, !dbg !15195
  %controller86 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self85, i32 0, i32 0, !dbg !15195
  %84 = load %struct.device*, %struct.device** %controller86, align 8, !dbg !15195
  %85 = load i32, i32* %bw_used, align 4, !dbg !15195
  %86 = load i32, i32* %max_bandwidth, align 4, !dbg !15195
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %84, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.83, i64 0, i64 0), i32 %85, i32 %86) #12, !dbg !15195
  store i32 -12, i32* %retval, align 4, !dbg !15197
  br label %return, !dbg !15197

if.end87:                                         ; preds = %if.end79
  br label %for.inc, !dbg !15198

for.inc:                                          ; preds = %if.end87
  %87 = load i32, i32* %i, align 4, !dbg !15199
  %inc = add i32 %87, 1, !dbg !15199
  store i32 %inc, i32* %i, align 4, !dbg !15199
  br label %for.cond, !dbg !15200, !llvm.loop !15201

for.end:                                          ; preds = %for.cond
  %88 = load i32, i32* %packets_remaining, align 4, !dbg !15203
  %cmp88 = icmp ugt i32 %88, 0, !dbg !15205
  br i1 %cmp88, label %if.then90, label %if.end93, !dbg !15206

if.then90:                                        ; preds = %for.end
  %89 = load i32, i32* %overhead, align 4, !dbg !15207
  %90 = load i32, i32* %packet_size, align 4, !dbg !15208
  %add91 = add i32 %89, %90, !dbg !15209
  %91 = load i32, i32* %bw_used, align 4, !dbg !15210
  %add92 = add i32 %91, %add91, !dbg !15210
  store i32 %add92, i32* %bw_used, align 4, !dbg !15210
  br label %if.end93, !dbg !15211

if.end93:                                         ; preds = %if.then90, %for.end
  %92 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15212
  %tt_info94 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %92, i32 0, i32 7, !dbg !15214
  %93 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info94, align 8, !dbg !15214
  %tobool95 = icmp ne %struct.xhci_tt_bw_info* %93, null, !dbg !15212
  br i1 %tobool95, label %if.end108, label %land.lhs.true, !dbg !15215

land.lhs.true:                                    ; preds = %if.end93
  %94 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15216
  %udev96 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %94, i32 0, i32 0, !dbg !15217
  %95 = load %struct.usb_device*, %struct.usb_device** %udev96, align 8, !dbg !15217
  %speed97 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %95, i32 0, i32 4, !dbg !15218
  %96 = load i32, i32* %speed97, align 4, !dbg !15218
  %cmp98 = icmp eq i32 %96, 3, !dbg !15219
  br i1 %cmp98, label %if.then100, label %if.end108, !dbg !15220

if.then100:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %port_index, metadata !15221, metadata !DIExpression()), !dbg !15223
  %97 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15224
  %real_port101 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %97, i32 0, i32 5, !dbg !15225
  %98 = load i8, i8* %real_port101, align 1, !dbg !15225
  %conv102 = zext i8 %98 to i32, !dbg !15224
  %sub103 = sub i32 %conv102, 1, !dbg !15226
  store i32 %sub103, i32* %port_index, align 4, !dbg !15223
  %99 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15227
  %rh_bw = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %99, i32 0, i32 42, !dbg !15228
  %100 = load %struct.xhci_root_port_bw_info*, %struct.xhci_root_port_bw_info** %rh_bw, align 8, !dbg !15228
  %101 = load i32, i32* %port_index, align 4, !dbg !15229
  %idxprom104 = zext i32 %101 to i64, !dbg !15227
  %arrayidx105 = getelementptr %struct.xhci_root_port_bw_info, %struct.xhci_root_port_bw_info* %100, i64 %idxprom104, !dbg !15227
  %num_active_tts = getelementptr inbounds %struct.xhci_root_port_bw_info, %struct.xhci_root_port_bw_info* %arrayidx105, i32 0, i32 1, !dbg !15230
  %102 = load i32, i32* %num_active_tts, align 8, !dbg !15230
  %mul106 = mul i32 125, %102, !dbg !15231
  %103 = load i32, i32* %bw_used, align 4, !dbg !15232
  %add107 = add i32 %103, %mul106, !dbg !15232
  store i32 %add107, i32* %bw_used, align 4, !dbg !15232
  br label %if.end108, !dbg !15233

if.end108:                                        ; preds = %if.then100, %land.lhs.true, %if.end93
  %104 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15234
  %105 = load i32, i32* %bw_used, align 4, !dbg !15235
  %106 = load i32, i32* %max_bandwidth, align 4, !dbg !15236
  %107 = load i32, i32* %bw_reserved, align 4, !dbg !15237
  %108 = load i32, i32* %max_bandwidth, align 4, !dbg !15238
  %109 = load i32, i32* %bw_used, align 4, !dbg !15239
  %sub109 = sub i32 %108, %109, !dbg !15240
  %110 = load i32, i32* %bw_reserved, align 4, !dbg !15241
  %sub110 = sub i32 %sub109, %110, !dbg !15242
  %mul111 = mul i32 %sub110, 100, !dbg !15243
  %111 = load i32, i32* %max_bandwidth, align 4, !dbg !15244
  %div112 = udiv i32 %mul111, %111, !dbg !15245
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %104, void (%struct.va_format*)* @trace_xhci_dbg_quirks, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.84, i64 0, i64 0), i32 %105, i32 %106, i32 %107, i32 %div112) #11, !dbg !15246
  %112 = load i32, i32* %bw_reserved, align 4, !dbg !15247
  %113 = load i32, i32* %bw_used, align 4, !dbg !15248
  %add113 = add i32 %113, %112, !dbg !15248
  store i32 %add113, i32* %bw_used, align 4, !dbg !15248
  %114 = load i32, i32* %bw_used, align 4, !dbg !15249
  %115 = load i32, i32* %max_bandwidth, align 4, !dbg !15251
  %cmp114 = icmp ugt i32 %114, %115, !dbg !15252
  br i1 %cmp114, label %if.then116, label %if.end120, !dbg !15253

if.then116:                                       ; preds = %if.end108
  %116 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15254
  %call117 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %116) #11, !dbg !15254
  %self118 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call117, i32 0, i32 0, !dbg !15254
  %controller119 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self118, i32 0, i32 0, !dbg !15254
  %117 = load %struct.device*, %struct.device** %controller119, align 8, !dbg !15254
  %118 = load i32, i32* %bw_used, align 4, !dbg !15254
  %119 = load i32, i32* %max_bandwidth, align 4, !dbg !15254
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %117, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.83, i64 0, i64 0), i32 %118, i32 %119) #12, !dbg !15254
  store i32 -12, i32* %retval, align 4, !dbg !15256
  br label %return, !dbg !15256

if.end120:                                        ; preds = %if.end108
  %120 = load i32, i32* %bw_used, align 4, !dbg !15257
  %121 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table, align 8, !dbg !15258
  %bw_used121 = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %121, i32 0, i32 2, !dbg !15259
  store i32 %120, i32* %bw_used121, align 8, !dbg !15260
  store i32 0, i32* %retval, align 4, !dbg !15261
  br label %return, !dbg !15261

return:                                           ; preds = %if.end120, %if.then116, %if.then83, %if.then16, %if.then
  %122 = load i32, i32* %retval, align 4, !dbg !15262
  ret i32 %122, !dbg !15262
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @xhci_is_async_ep(i32 %ep_type) #1 !dbg !15263 {
entry:
  %ep_type.addr = alloca i32, align 4
  store i32 %ep_type, i32* %ep_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep_type.addr, metadata !15266, metadata !DIExpression()), !dbg !15267
  %0 = load i32, i32* %ep_type.addr, align 4, !dbg !15268
  %cmp = icmp ne i32 %0, 1, !dbg !15269
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !15270

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %ep_type.addr, align 4, !dbg !15271
  %cmp1 = icmp ne i32 %1, 3, !dbg !15272
  br i1 %cmp1, label %land.lhs.true2, label %land.end, !dbg !15273

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i32, i32* %ep_type.addr, align 4, !dbg !15274
  %cmp3 = icmp ne i32 %2, 5, !dbg !15275
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !15276

land.rhs:                                         ; preds = %land.lhs.true2
  %3 = load i32, i32* %ep_type.addr, align 4, !dbg !15277
  %cmp4 = icmp ne i32 %3, 7, !dbg !15278
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true2, %land.lhs.true, %entry
  %4 = phi i1 [ false, %land.lhs.true2 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !15279
  ret i1 %4, !dbg !15280
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @xhci_is_sync_in_ep(i32 %ep_type) #1 !dbg !15281 {
entry:
  %ep_type.addr = alloca i32, align 4
  store i32 %ep_type, i32* %ep_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep_type.addr, metadata !15282, metadata !DIExpression()), !dbg !15283
  %0 = load i32, i32* %ep_type.addr, align 4, !dbg !15284
  %cmp = icmp eq i32 %0, 5, !dbg !15285
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !15286

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %ep_type.addr, align 4, !dbg !15287
  %cmp1 = icmp eq i32 %1, 7, !dbg !15288
  br label %lor.end, !dbg !15286

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !15289
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_get_ss_bw_consumed(%struct.xhci_bw_info* %ep_bw) #1 !dbg !15290 {
entry:
  %retval = alloca i32, align 4
  %ep_bw.addr = alloca %struct.xhci_bw_info*, align 8
  %mps = alloca i32, align 4
  store %struct.xhci_bw_info* %ep_bw, %struct.xhci_bw_info** %ep_bw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_bw_info** %ep_bw.addr, metadata !15293, metadata !DIExpression()), !dbg !15294
  call void @llvm.dbg.declare(metadata i32* %mps, metadata !15295, metadata !DIExpression()), !dbg !15296
  %0 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !15297
  %max_packet_size = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %0, i32 0, i32 3, !dbg !15297
  %1 = load i32, i32* %max_packet_size, align 4, !dbg !15297
  %add = add i32 %1, 16, !dbg !15297
  %sub = sub i32 %add, 1, !dbg !15297
  %div = udiv i32 %sub, 16, !dbg !15297
  store i32 %div, i32* %mps, align 4, !dbg !15296
  %2 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !15298
  %ep_interval = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %2, i32 0, i32 0, !dbg !15300
  %3 = load i32, i32* %ep_interval, align 4, !dbg !15300
  %cmp = icmp eq i32 %3, 0, !dbg !15301
  br i1 %cmp, label %if.then, label %if.end, !dbg !15302

if.then:                                          ; preds = %entry
  %4 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !15303
  %mult = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %4, i32 0, i32 1, !dbg !15304
  %5 = load i32, i32* %mult, align 4, !dbg !15304
  %6 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !15305
  %num_packets = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %6, i32 0, i32 2, !dbg !15306
  %7 = load i32, i32* %num_packets, align 4, !dbg !15306
  %mul = mul i32 %5, %7, !dbg !15307
  %8 = load i32, i32* %mps, align 4, !dbg !15308
  %add1 = add i32 8, %8, !dbg !15309
  %mul2 = mul i32 %mul, %add1, !dbg !15310
  %add3 = add i32 32, %mul2, !dbg !15311
  store i32 %add3, i32* %retval, align 4, !dbg !15312
  br label %return, !dbg !15312

if.end:                                           ; preds = %entry
  %9 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !15313
  %mult4 = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %9, i32 0, i32 1, !dbg !15313
  %10 = load i32, i32* %mult4, align 4, !dbg !15313
  %11 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !15313
  %num_packets5 = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %11, i32 0, i32 2, !dbg !15313
  %12 = load i32, i32* %num_packets5, align 4, !dbg !15313
  %mul6 = mul i32 %10, %12, !dbg !15313
  %13 = load i32, i32* %mps, align 4, !dbg !15313
  %add7 = add i32 8, %13, !dbg !15313
  %add8 = add i32 %add7, 32, !dbg !15313
  %mul9 = mul i32 %mul6, %add8, !dbg !15313
  %14 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !15313
  %ep_interval10 = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %14, i32 0, i32 0, !dbg !15313
  %15 = load i32, i32* %ep_interval10, align 4, !dbg !15313
  %shl = shl i32 1, %15, !dbg !15313
  %add11 = add i32 %mul9, %shl, !dbg !15313
  %sub12 = sub i32 %add11, 1, !dbg !15313
  %16 = load %struct.xhci_bw_info*, %struct.xhci_bw_info** %ep_bw.addr, align 8, !dbg !15313
  %ep_interval13 = getelementptr inbounds %struct.xhci_bw_info, %struct.xhci_bw_info* %16, i32 0, i32 0, !dbg !15313
  %17 = load i32, i32* %ep_interval13, align 4, !dbg !15313
  %shl14 = shl i32 1, %17, !dbg !15313
  %div15 = udiv i32 %sub12, %shl14, !dbg !15313
  store i32 %div15, i32* %retval, align 4, !dbg !15314
  br label %return, !dbg !15314

return:                                           ; preds = %if.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !15315
  ret i32 %18, !dbg !15315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #1 !dbg !15316 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !15322, metadata !DIExpression()), !dbg !15323
  br label %do.body, !dbg !15324

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15326

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !15324
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !15324
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15324
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !15326
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !15324
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !15328
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !15329
  %conv = zext i1 %cmp to i32, !dbg !15329
  ret i32 %conv, !dbg !15330
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #1 !dbg !15331 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !15334, metadata !DIExpression()), !dbg !15335
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15336
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !15337
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15338
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #11, !dbg !15339
  ret void, !dbg !15340
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #1 !dbg !15341 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !15342, metadata !DIExpression()), !dbg !15343
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15344
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !15346
  br i1 %call, label %if.end, label %if.then, !dbg !15347

if.then:                                          ; preds = %entry
  br label %return, !dbg !15348

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15349
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !15350
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !15350
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !15351
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !15352
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15352
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !15353
  br label %return, !dbg !15354

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !15354
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #1 !dbg !15355 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !15356, metadata !DIExpression()), !dbg !15357
  br label %do.body, !dbg !15358

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !15359

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !15361

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !15359

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !15363
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !15363
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !15363
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !15363
  br label %do.end3, !dbg !15363

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !15359

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !15365
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !15366
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !15367
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !15368
  ret void, !dbg !15369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #1 !dbg !15370 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !15373, metadata !DIExpression()), !dbg !15374
  ret i1 true, !dbg !15375
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #1 !dbg !15376 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15379, metadata !DIExpression()), !dbg !15380
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15381, metadata !DIExpression()), !dbg !15382
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15383
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15384
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !15385
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !15386
  br label %do.body, !dbg !15387

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !15388

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !15390

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !15388

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15392
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15392
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !15392
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !15392
  br label %do.end5, !dbg !15392

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !15388

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !15394
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #1 !dbg !15395 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !15396, metadata !DIExpression()), !dbg !15397
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !15398, metadata !DIExpression()), !dbg !15399
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15400
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !15401
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !15402
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !15402
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !15403
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !15404
  ret void, !dbg !15405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #1 !dbg !15406 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !15409, metadata !DIExpression()), !dbg !15410
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15411, metadata !DIExpression()), !dbg !15412
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15413, metadata !DIExpression()), !dbg !15414
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15415
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15417
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15418
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !15419
  br i1 %call, label %if.end, label %if.then, !dbg !15420

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !15421

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15422
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15423
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !15424
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !15425
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !15426
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15427
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !15428
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !15429
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15430
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15431
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !15432
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !15433
  br label %do.body, !dbg !15434

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !15435

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !15437

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !15435

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !15439
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !15439
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !15439
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !15439
  br label %do.end7, !dbg !15439

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !15435

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !15441
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #1 !dbg !15442 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !15445, metadata !DIExpression()), !dbg !15446
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !15447, metadata !DIExpression()), !dbg !15448
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !15449, metadata !DIExpression()), !dbg !15450
  ret i1 true, !dbg !15451
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_check_ss_bw(%struct.xhci_hcd* %xhci, %struct.xhci_virt_device* %virt_dev) #1 !dbg !15452 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %virt_dev.addr = alloca %struct.xhci_virt_device*, align 8
  %bw_reserved = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !15455, metadata !DIExpression()), !dbg !15456
  store %struct.xhci_virt_device* %virt_dev, %struct.xhci_virt_device** %virt_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev.addr, metadata !15457, metadata !DIExpression()), !dbg !15458
  call void @llvm.dbg.declare(metadata i32* %bw_reserved, metadata !15459, metadata !DIExpression()), !dbg !15460
  store i32 391, i32* %bw_reserved, align 4, !dbg !15461
  %0 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15462
  %bw_table = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %0, i32 0, i32 6, !dbg !15464
  %1 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table, align 8, !dbg !15464
  %ss_bw_in = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %1, i32 0, i32 3, !dbg !15465
  %2 = load i32, i32* %ss_bw_in, align 4, !dbg !15465
  %3 = load i32, i32* %bw_reserved, align 4, !dbg !15466
  %sub = sub i32 3906, %3, !dbg !15467
  %cmp = icmp ugt i32 %2, %sub, !dbg !15468
  br i1 %cmp, label %if.then, label %if.end, !dbg !15469

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !15470
  br label %return, !dbg !15470

if.end:                                           ; preds = %entry
  store i32 391, i32* %bw_reserved, align 4, !dbg !15471
  %4 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15472
  %bw_table1 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %4, i32 0, i32 6, !dbg !15474
  %5 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table1, align 8, !dbg !15474
  %ss_bw_out = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %5, i32 0, i32 4, !dbg !15475
  %6 = load i32, i32* %ss_bw_out, align 8, !dbg !15475
  %7 = load i32, i32* %bw_reserved, align 4, !dbg !15476
  %sub2 = sub i32 3906, %7, !dbg !15477
  %cmp3 = icmp ugt i32 %6, %sub2, !dbg !15478
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !15479

if.then4:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !15480
  br label %return, !dbg !15480

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15481
  br label %return, !dbg !15481

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !15482
  ret i32 %8, !dbg !15482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_get_block_size(%struct.usb_device* %udev) #1 !dbg !15483 {
entry:
  %retval = alloca i32, align 4
  %udev.addr = alloca %struct.usb_device*, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !15486, metadata !DIExpression()), !dbg !15487
  %0 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !15488
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 4, !dbg !15489
  %1 = load i32, i32* %speed, align 4, !dbg !15489
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb1
    i32 5, label %sw.bb2
    i32 6, label %sw.bb2
    i32 0, label %sw.bb3
    i32 4, label %sw.bb3
  ], !dbg !15490

sw.bb:                                            ; preds = %entry, %entry
  store i32 1, i32* %retval, align 4, !dbg !15491
  br label %return, !dbg !15491

sw.bb1:                                           ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !15493
  br label %return, !dbg !15493

sw.bb2:                                           ; preds = %entry, %entry
  store i32 16, i32* %retval, align 4, !dbg !15494
  br label %return, !dbg !15494

sw.bb3:                                           ; preds = %entry, %entry
  br label %sw.default, !dbg !15494

sw.default:                                       ; preds = %entry, %sw.bb3
  store i32 1, i32* %retval, align 4, !dbg !15495
  br label %return, !dbg !15495

return:                                           ; preds = %sw.default, %sw.bb2, %sw.bb1, %sw.bb
  %2 = load i32, i32* %retval, align 4, !dbg !15496
  ret i32 %2, !dbg !15496
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_check_tt_bw_table(%struct.xhci_hcd* %xhci, %struct.xhci_virt_device* %virt_dev, i32 %old_active_eps) #1 !dbg !15497 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %virt_dev.addr = alloca %struct.xhci_virt_device*, align 8
  %old_active_eps.addr = alloca i32, align 4
  %bw_table = alloca %struct.xhci_interval_bw_table*, align 8
  %tt_info = alloca %struct.xhci_tt_bw_info*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !15498, metadata !DIExpression()), !dbg !15499
  store %struct.xhci_virt_device* %virt_dev, %struct.xhci_virt_device** %virt_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev.addr, metadata !15500, metadata !DIExpression()), !dbg !15501
  store i32 %old_active_eps, i32* %old_active_eps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %old_active_eps.addr, metadata !15502, metadata !DIExpression()), !dbg !15503
  call void @llvm.dbg.declare(metadata %struct.xhci_interval_bw_table** %bw_table, metadata !15504, metadata !DIExpression()), !dbg !15505
  call void @llvm.dbg.declare(metadata %struct.xhci_tt_bw_info** %tt_info, metadata !15506, metadata !DIExpression()), !dbg !15507
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15508
  %rh_bw = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 42, !dbg !15509
  %1 = load %struct.xhci_root_port_bw_info*, %struct.xhci_root_port_bw_info** %rh_bw, align 8, !dbg !15509
  %2 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15510
  %real_port = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %2, i32 0, i32 5, !dbg !15511
  %3 = load i8, i8* %real_port, align 1, !dbg !15511
  %conv = zext i8 %3 to i32, !dbg !15510
  %sub = sub i32 %conv, 1, !dbg !15512
  %idxprom = sext i32 %sub to i64, !dbg !15508
  %arrayidx = getelementptr %struct.xhci_root_port_bw_info, %struct.xhci_root_port_bw_info* %1, i64 %idxprom, !dbg !15508
  %bw_table1 = getelementptr inbounds %struct.xhci_root_port_bw_info, %struct.xhci_root_port_bw_info* %arrayidx, i32 0, i32 2, !dbg !15513
  store %struct.xhci_interval_bw_table* %bw_table1, %struct.xhci_interval_bw_table** %bw_table, align 8, !dbg !15514
  %4 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !15515
  %tt_info2 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %4, i32 0, i32 7, !dbg !15516
  %5 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info2, align 8, !dbg !15516
  store %struct.xhci_tt_bw_info* %5, %struct.xhci_tt_bw_info** %tt_info, align 8, !dbg !15517
  %6 = load i32, i32* %old_active_eps.addr, align 4, !dbg !15518
  %tobool = icmp ne i32 %6, 0, !dbg !15518
  br i1 %tobool, label %if.then, label %if.end, !dbg !15520

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15521
  br label %return, !dbg !15521

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %old_active_eps.addr, align 4, !dbg !15522
  %cmp = icmp eq i32 %7, 0, !dbg !15524
  br i1 %cmp, label %land.lhs.true, label %if.end11, !dbg !15525

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.xhci_tt_bw_info*, %struct.xhci_tt_bw_info** %tt_info, align 8, !dbg !15526
  %active_eps = getelementptr inbounds %struct.xhci_tt_bw_info, %struct.xhci_tt_bw_info* %8, i32 0, i32 4, !dbg !15527
  %9 = load i32, i32* %active_eps, align 8, !dbg !15527
  %cmp4 = icmp ne i32 %9, 0, !dbg !15528
  br i1 %cmp4, label %if.then6, label %if.end11, !dbg !15529

if.then6:                                         ; preds = %land.lhs.true
  %10 = load %struct.xhci_interval_bw_table*, %struct.xhci_interval_bw_table** %bw_table, align 8, !dbg !15530
  %bw_used = getelementptr inbounds %struct.xhci_interval_bw_table, %struct.xhci_interval_bw_table* %10, i32 0, i32 2, !dbg !15533
  %11 = load i32, i32* %bw_used, align 8, !dbg !15533
  %add = add i32 %11, 125, !dbg !15534
  %cmp7 = icmp ugt i32 %add, 1607, !dbg !15535
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !15536

if.then9:                                         ; preds = %if.then6
  store i32 -12, i32* %retval, align 4, !dbg !15537
  br label %return, !dbg !15537

if.end10:                                         ; preds = %if.then6
  store i32 0, i32* %retval, align 4, !dbg !15538
  br label %return, !dbg !15538

if.end11:                                         ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !15539
  br label %return, !dbg !15539

return:                                           ; preds = %if.end11, %if.end10, %if.then9, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !15540
  ret i32 %12, !dbg !15540
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_get_largest_overhead(%struct.xhci_interval_bw* %interval_bw) #1 !dbg !15541 {
entry:
  %retval = alloca i32, align 4
  %interval_bw.addr = alloca %struct.xhci_interval_bw*, align 8
  store %struct.xhci_interval_bw* %interval_bw, %struct.xhci_interval_bw** %interval_bw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_interval_bw** %interval_bw.addr, metadata !15544, metadata !DIExpression()), !dbg !15545
  %0 = load %struct.xhci_interval_bw*, %struct.xhci_interval_bw** %interval_bw.addr, align 8, !dbg !15546
  %overhead = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %0, i32 0, i32 2, !dbg !15548
  %arrayidx = getelementptr [3 x i32], [3 x i32]* %overhead, i64 0, i64 0, !dbg !15546
  %1 = load i32, i32* %arrayidx, align 8, !dbg !15546
  %tobool = icmp ne i32 %1, 0, !dbg !15546
  br i1 %tobool, label %if.then, label %if.end, !dbg !15549

if.then:                                          ; preds = %entry
  store i32 128, i32* %retval, align 4, !dbg !15550
  br label %return, !dbg !15550

if.end:                                           ; preds = %entry
  %2 = load %struct.xhci_interval_bw*, %struct.xhci_interval_bw** %interval_bw.addr, align 8, !dbg !15551
  %overhead1 = getelementptr inbounds %struct.xhci_interval_bw, %struct.xhci_interval_bw* %2, i32 0, i32 2, !dbg !15553
  %arrayidx2 = getelementptr [3 x i32], [3 x i32]* %overhead1, i64 0, i64 1, !dbg !15551
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !15551
  %tobool3 = icmp ne i32 %3, 0, !dbg !15551
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !15554

if.then4:                                         ; preds = %if.end
  store i32 20, i32* %retval, align 4, !dbg !15555
  br label %return, !dbg !15555

if.end5:                                          ; preds = %if.end
  store i32 26, i32* %retval, align 4, !dbg !15556
  br label %return, !dbg !15556

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !15557
  ret i32 %4, !dbg !15557
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_count_num_dropped_endpoints(%struct.xhci_hcd* %xhci, %struct.xhci_input_control_ctx* %ctrl_ctx) #1 !dbg !15558 {
entry:
  %w.addr.i608 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i608, metadata !14675, metadata !DIExpression()), !dbg !15561
  %res.i609 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i609, metadata !14680, metadata !DIExpression()), !dbg !15563
  %w.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr.i, metadata !14675, metadata !DIExpression()), !dbg !15564
  %res.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %res.i, metadata !14680, metadata !DIExpression()), !dbg !15566
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %ctrl_ctx.addr = alloca %struct.xhci_input_control_ctx*, align 8
  %valid_add_flags = alloca i32, align 4
  %valid_drop_flags = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !15567, metadata !DIExpression()), !dbg !15568
  store %struct.xhci_input_control_ctx* %ctrl_ctx, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx.addr, metadata !15569, metadata !DIExpression()), !dbg !15570
  call void @llvm.dbg.declare(metadata i32* %valid_add_flags, metadata !15571, metadata !DIExpression()), !dbg !15572
  call void @llvm.dbg.declare(metadata i32* %valid_drop_flags, metadata !15573, metadata !DIExpression()), !dbg !15574
  %0 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8, !dbg !15575
  %add_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %0, i32 0, i32 1, !dbg !15575
  %1 = load i32, i32* %add_flags, align 4, !dbg !15575
  %shr = lshr i32 %1, 2, !dbg !15576
  store i32 %shr, i32* %valid_add_flags, align 4, !dbg !15577
  %2 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8, !dbg !15578
  %drop_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %2, i32 0, i32 0, !dbg !15578
  %3 = load i32, i32* %drop_flags, align 4, !dbg !15578
  %shr1 = lshr i32 %3, 2, !dbg !15579
  store i32 %shr1, i32* %valid_drop_flags, align 4, !dbg !15580
  %4 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !15581
  br i1 %5, label %cond.true, label %cond.false, !dbg !15581

cond.true:                                        ; preds = %entry
  %6 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %conv = zext i32 %6 to i64, !dbg !15581
  %and = and i64 %conv, 1, !dbg !15581
  %tobool = icmp ne i64 %and, 0, !dbg !15581
  %lnot = xor i1 %tobool, true, !dbg !15581
  %lnot2 = xor i1 %lnot, true, !dbg !15581
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !15581
  %7 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %conv3 = zext i32 %7 to i64, !dbg !15581
  %and4 = and i64 %conv3, 2, !dbg !15581
  %tobool5 = icmp ne i64 %and4, 0, !dbg !15581
  %lnot6 = xor i1 %tobool5, true, !dbg !15581
  %lnot8 = xor i1 %lnot6, true, !dbg !15581
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !15581
  %add = add i32 %lnot.ext, %lnot.ext9, !dbg !15581
  %8 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %conv10 = zext i32 %8 to i64, !dbg !15581
  %and11 = and i64 %conv10, 4, !dbg !15581
  %tobool12 = icmp ne i64 %and11, 0, !dbg !15581
  %lnot13 = xor i1 %tobool12, true, !dbg !15581
  %lnot15 = xor i1 %lnot13, true, !dbg !15581
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !15581
  %add17 = add i32 %add, %lnot.ext16, !dbg !15581
  %9 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %conv18 = zext i32 %9 to i64, !dbg !15581
  %and19 = and i64 %conv18, 8, !dbg !15581
  %tobool20 = icmp ne i64 %and19, 0, !dbg !15581
  %lnot21 = xor i1 %tobool20, true, !dbg !15581
  %lnot23 = xor i1 %lnot21, true, !dbg !15581
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !15581
  %add25 = add i32 %add17, %lnot.ext24, !dbg !15581
  %10 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %conv26 = zext i32 %10 to i64, !dbg !15581
  %and27 = and i64 %conv26, 16, !dbg !15581
  %tobool28 = icmp ne i64 %and27, 0, !dbg !15581
  %lnot29 = xor i1 %tobool28, true, !dbg !15581
  %lnot31 = xor i1 %lnot29, true, !dbg !15581
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !15581
  %add33 = add i32 %add25, %lnot.ext32, !dbg !15581
  %11 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %conv34 = zext i32 %11 to i64, !dbg !15581
  %and35 = and i64 %conv34, 32, !dbg !15581
  %tobool36 = icmp ne i64 %and35, 0, !dbg !15581
  %lnot37 = xor i1 %tobool36, true, !dbg !15581
  %lnot39 = xor i1 %lnot37, true, !dbg !15581
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !15581
  %add41 = add i32 %add33, %lnot.ext40, !dbg !15581
  %12 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %conv42 = zext i32 %12 to i64, !dbg !15581
  %and43 = and i64 %conv42, 64, !dbg !15581
  %tobool44 = icmp ne i64 %and43, 0, !dbg !15581
  %lnot45 = xor i1 %tobool44, true, !dbg !15581
  %lnot47 = xor i1 %lnot45, true, !dbg !15581
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !15581
  %add49 = add i32 %add41, %lnot.ext48, !dbg !15581
  %13 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %conv50 = zext i32 %13 to i64, !dbg !15581
  %and51 = and i64 %conv50, 128, !dbg !15581
  %tobool52 = icmp ne i64 %and51, 0, !dbg !15581
  %lnot53 = xor i1 %tobool52, true, !dbg !15581
  %lnot55 = xor i1 %lnot53, true, !dbg !15581
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !15581
  %add57 = add i32 %add49, %lnot.ext56, !dbg !15581
  %14 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr58 = lshr i32 %14, 8, !dbg !15581
  %conv59 = zext i32 %shr58 to i64, !dbg !15581
  %and60 = and i64 %conv59, 1, !dbg !15581
  %tobool61 = icmp ne i64 %and60, 0, !dbg !15581
  %lnot62 = xor i1 %tobool61, true, !dbg !15581
  %lnot64 = xor i1 %lnot62, true, !dbg !15581
  %lnot.ext65 = zext i1 %lnot64 to i32, !dbg !15581
  %15 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr66 = lshr i32 %15, 8, !dbg !15581
  %conv67 = zext i32 %shr66 to i64, !dbg !15581
  %and68 = and i64 %conv67, 2, !dbg !15581
  %tobool69 = icmp ne i64 %and68, 0, !dbg !15581
  %lnot70 = xor i1 %tobool69, true, !dbg !15581
  %lnot72 = xor i1 %lnot70, true, !dbg !15581
  %lnot.ext73 = zext i1 %lnot72 to i32, !dbg !15581
  %add74 = add i32 %lnot.ext65, %lnot.ext73, !dbg !15581
  %16 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr75 = lshr i32 %16, 8, !dbg !15581
  %conv76 = zext i32 %shr75 to i64, !dbg !15581
  %and77 = and i64 %conv76, 4, !dbg !15581
  %tobool78 = icmp ne i64 %and77, 0, !dbg !15581
  %lnot79 = xor i1 %tobool78, true, !dbg !15581
  %lnot81 = xor i1 %lnot79, true, !dbg !15581
  %lnot.ext82 = zext i1 %lnot81 to i32, !dbg !15581
  %add83 = add i32 %add74, %lnot.ext82, !dbg !15581
  %17 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr84 = lshr i32 %17, 8, !dbg !15581
  %conv85 = zext i32 %shr84 to i64, !dbg !15581
  %and86 = and i64 %conv85, 8, !dbg !15581
  %tobool87 = icmp ne i64 %and86, 0, !dbg !15581
  %lnot88 = xor i1 %tobool87, true, !dbg !15581
  %lnot90 = xor i1 %lnot88, true, !dbg !15581
  %lnot.ext91 = zext i1 %lnot90 to i32, !dbg !15581
  %add92 = add i32 %add83, %lnot.ext91, !dbg !15581
  %18 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr93 = lshr i32 %18, 8, !dbg !15581
  %conv94 = zext i32 %shr93 to i64, !dbg !15581
  %and95 = and i64 %conv94, 16, !dbg !15581
  %tobool96 = icmp ne i64 %and95, 0, !dbg !15581
  %lnot97 = xor i1 %tobool96, true, !dbg !15581
  %lnot99 = xor i1 %lnot97, true, !dbg !15581
  %lnot.ext100 = zext i1 %lnot99 to i32, !dbg !15581
  %add101 = add i32 %add92, %lnot.ext100, !dbg !15581
  %19 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr102 = lshr i32 %19, 8, !dbg !15581
  %conv103 = zext i32 %shr102 to i64, !dbg !15581
  %and104 = and i64 %conv103, 32, !dbg !15581
  %tobool105 = icmp ne i64 %and104, 0, !dbg !15581
  %lnot106 = xor i1 %tobool105, true, !dbg !15581
  %lnot108 = xor i1 %lnot106, true, !dbg !15581
  %lnot.ext109 = zext i1 %lnot108 to i32, !dbg !15581
  %add110 = add i32 %add101, %lnot.ext109, !dbg !15581
  %20 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr111 = lshr i32 %20, 8, !dbg !15581
  %conv112 = zext i32 %shr111 to i64, !dbg !15581
  %and113 = and i64 %conv112, 64, !dbg !15581
  %tobool114 = icmp ne i64 %and113, 0, !dbg !15581
  %lnot115 = xor i1 %tobool114, true, !dbg !15581
  %lnot117 = xor i1 %lnot115, true, !dbg !15581
  %lnot.ext118 = zext i1 %lnot117 to i32, !dbg !15581
  %add119 = add i32 %add110, %lnot.ext118, !dbg !15581
  %21 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr120 = lshr i32 %21, 8, !dbg !15581
  %conv121 = zext i32 %shr120 to i64, !dbg !15581
  %and122 = and i64 %conv121, 128, !dbg !15581
  %tobool123 = icmp ne i64 %and122, 0, !dbg !15581
  %lnot124 = xor i1 %tobool123, true, !dbg !15581
  %lnot126 = xor i1 %lnot124, true, !dbg !15581
  %lnot.ext127 = zext i1 %lnot126 to i32, !dbg !15581
  %add128 = add i32 %add119, %lnot.ext127, !dbg !15581
  %add129 = add i32 %add57, %add128, !dbg !15581
  %22 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr130 = lshr i32 %22, 16, !dbg !15581
  %conv131 = zext i32 %shr130 to i64, !dbg !15581
  %and132 = and i64 %conv131, 1, !dbg !15581
  %tobool133 = icmp ne i64 %and132, 0, !dbg !15581
  %lnot134 = xor i1 %tobool133, true, !dbg !15581
  %lnot136 = xor i1 %lnot134, true, !dbg !15581
  %lnot.ext137 = zext i1 %lnot136 to i32, !dbg !15581
  %23 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr138 = lshr i32 %23, 16, !dbg !15581
  %conv139 = zext i32 %shr138 to i64, !dbg !15581
  %and140 = and i64 %conv139, 2, !dbg !15581
  %tobool141 = icmp ne i64 %and140, 0, !dbg !15581
  %lnot142 = xor i1 %tobool141, true, !dbg !15581
  %lnot144 = xor i1 %lnot142, true, !dbg !15581
  %lnot.ext145 = zext i1 %lnot144 to i32, !dbg !15581
  %add146 = add i32 %lnot.ext137, %lnot.ext145, !dbg !15581
  %24 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr147 = lshr i32 %24, 16, !dbg !15581
  %conv148 = zext i32 %shr147 to i64, !dbg !15581
  %and149 = and i64 %conv148, 4, !dbg !15581
  %tobool150 = icmp ne i64 %and149, 0, !dbg !15581
  %lnot151 = xor i1 %tobool150, true, !dbg !15581
  %lnot153 = xor i1 %lnot151, true, !dbg !15581
  %lnot.ext154 = zext i1 %lnot153 to i32, !dbg !15581
  %add155 = add i32 %add146, %lnot.ext154, !dbg !15581
  %25 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr156 = lshr i32 %25, 16, !dbg !15581
  %conv157 = zext i32 %shr156 to i64, !dbg !15581
  %and158 = and i64 %conv157, 8, !dbg !15581
  %tobool159 = icmp ne i64 %and158, 0, !dbg !15581
  %lnot160 = xor i1 %tobool159, true, !dbg !15581
  %lnot162 = xor i1 %lnot160, true, !dbg !15581
  %lnot.ext163 = zext i1 %lnot162 to i32, !dbg !15581
  %add164 = add i32 %add155, %lnot.ext163, !dbg !15581
  %26 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr165 = lshr i32 %26, 16, !dbg !15581
  %conv166 = zext i32 %shr165 to i64, !dbg !15581
  %and167 = and i64 %conv166, 16, !dbg !15581
  %tobool168 = icmp ne i64 %and167, 0, !dbg !15581
  %lnot169 = xor i1 %tobool168, true, !dbg !15581
  %lnot171 = xor i1 %lnot169, true, !dbg !15581
  %lnot.ext172 = zext i1 %lnot171 to i32, !dbg !15581
  %add173 = add i32 %add164, %lnot.ext172, !dbg !15581
  %27 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr174 = lshr i32 %27, 16, !dbg !15581
  %conv175 = zext i32 %shr174 to i64, !dbg !15581
  %and176 = and i64 %conv175, 32, !dbg !15581
  %tobool177 = icmp ne i64 %and176, 0, !dbg !15581
  %lnot178 = xor i1 %tobool177, true, !dbg !15581
  %lnot180 = xor i1 %lnot178, true, !dbg !15581
  %lnot.ext181 = zext i1 %lnot180 to i32, !dbg !15581
  %add182 = add i32 %add173, %lnot.ext181, !dbg !15581
  %28 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr183 = lshr i32 %28, 16, !dbg !15581
  %conv184 = zext i32 %shr183 to i64, !dbg !15581
  %and185 = and i64 %conv184, 64, !dbg !15581
  %tobool186 = icmp ne i64 %and185, 0, !dbg !15581
  %lnot187 = xor i1 %tobool186, true, !dbg !15581
  %lnot189 = xor i1 %lnot187, true, !dbg !15581
  %lnot.ext190 = zext i1 %lnot189 to i32, !dbg !15581
  %add191 = add i32 %add182, %lnot.ext190, !dbg !15581
  %29 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr192 = lshr i32 %29, 16, !dbg !15581
  %conv193 = zext i32 %shr192 to i64, !dbg !15581
  %and194 = and i64 %conv193, 128, !dbg !15581
  %tobool195 = icmp ne i64 %and194, 0, !dbg !15581
  %lnot196 = xor i1 %tobool195, true, !dbg !15581
  %lnot198 = xor i1 %lnot196, true, !dbg !15581
  %lnot.ext199 = zext i1 %lnot198 to i32, !dbg !15581
  %add200 = add i32 %add191, %lnot.ext199, !dbg !15581
  %30 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr201 = lshr i32 %30, 16, !dbg !15581
  %shr202 = lshr i32 %shr201, 8, !dbg !15581
  %conv203 = zext i32 %shr202 to i64, !dbg !15581
  %and204 = and i64 %conv203, 1, !dbg !15581
  %tobool205 = icmp ne i64 %and204, 0, !dbg !15581
  %lnot206 = xor i1 %tobool205, true, !dbg !15581
  %lnot208 = xor i1 %lnot206, true, !dbg !15581
  %lnot.ext209 = zext i1 %lnot208 to i32, !dbg !15581
  %31 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr210 = lshr i32 %31, 16, !dbg !15581
  %shr211 = lshr i32 %shr210, 8, !dbg !15581
  %conv212 = zext i32 %shr211 to i64, !dbg !15581
  %and213 = and i64 %conv212, 2, !dbg !15581
  %tobool214 = icmp ne i64 %and213, 0, !dbg !15581
  %lnot215 = xor i1 %tobool214, true, !dbg !15581
  %lnot217 = xor i1 %lnot215, true, !dbg !15581
  %lnot.ext218 = zext i1 %lnot217 to i32, !dbg !15581
  %add219 = add i32 %lnot.ext209, %lnot.ext218, !dbg !15581
  %32 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr220 = lshr i32 %32, 16, !dbg !15581
  %shr221 = lshr i32 %shr220, 8, !dbg !15581
  %conv222 = zext i32 %shr221 to i64, !dbg !15581
  %and223 = and i64 %conv222, 4, !dbg !15581
  %tobool224 = icmp ne i64 %and223, 0, !dbg !15581
  %lnot225 = xor i1 %tobool224, true, !dbg !15581
  %lnot227 = xor i1 %lnot225, true, !dbg !15581
  %lnot.ext228 = zext i1 %lnot227 to i32, !dbg !15581
  %add229 = add i32 %add219, %lnot.ext228, !dbg !15581
  %33 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr230 = lshr i32 %33, 16, !dbg !15581
  %shr231 = lshr i32 %shr230, 8, !dbg !15581
  %conv232 = zext i32 %shr231 to i64, !dbg !15581
  %and233 = and i64 %conv232, 8, !dbg !15581
  %tobool234 = icmp ne i64 %and233, 0, !dbg !15581
  %lnot235 = xor i1 %tobool234, true, !dbg !15581
  %lnot237 = xor i1 %lnot235, true, !dbg !15581
  %lnot.ext238 = zext i1 %lnot237 to i32, !dbg !15581
  %add239 = add i32 %add229, %lnot.ext238, !dbg !15581
  %34 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr240 = lshr i32 %34, 16, !dbg !15581
  %shr241 = lshr i32 %shr240, 8, !dbg !15581
  %conv242 = zext i32 %shr241 to i64, !dbg !15581
  %and243 = and i64 %conv242, 16, !dbg !15581
  %tobool244 = icmp ne i64 %and243, 0, !dbg !15581
  %lnot245 = xor i1 %tobool244, true, !dbg !15581
  %lnot247 = xor i1 %lnot245, true, !dbg !15581
  %lnot.ext248 = zext i1 %lnot247 to i32, !dbg !15581
  %add249 = add i32 %add239, %lnot.ext248, !dbg !15581
  %35 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr250 = lshr i32 %35, 16, !dbg !15581
  %shr251 = lshr i32 %shr250, 8, !dbg !15581
  %conv252 = zext i32 %shr251 to i64, !dbg !15581
  %and253 = and i64 %conv252, 32, !dbg !15581
  %tobool254 = icmp ne i64 %and253, 0, !dbg !15581
  %lnot255 = xor i1 %tobool254, true, !dbg !15581
  %lnot257 = xor i1 %lnot255, true, !dbg !15581
  %lnot.ext258 = zext i1 %lnot257 to i32, !dbg !15581
  %add259 = add i32 %add249, %lnot.ext258, !dbg !15581
  %36 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr260 = lshr i32 %36, 16, !dbg !15581
  %shr261 = lshr i32 %shr260, 8, !dbg !15581
  %conv262 = zext i32 %shr261 to i64, !dbg !15581
  %and263 = and i64 %conv262, 64, !dbg !15581
  %tobool264 = icmp ne i64 %and263, 0, !dbg !15581
  %lnot265 = xor i1 %tobool264, true, !dbg !15581
  %lnot267 = xor i1 %lnot265, true, !dbg !15581
  %lnot.ext268 = zext i1 %lnot267 to i32, !dbg !15581
  %add269 = add i32 %add259, %lnot.ext268, !dbg !15581
  %37 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  %shr270 = lshr i32 %37, 16, !dbg !15581
  %shr271 = lshr i32 %shr270, 8, !dbg !15581
  %conv272 = zext i32 %shr271 to i64, !dbg !15581
  %and273 = and i64 %conv272, 128, !dbg !15581
  %tobool274 = icmp ne i64 %and273, 0, !dbg !15581
  %lnot275 = xor i1 %tobool274, true, !dbg !15581
  %lnot277 = xor i1 %lnot275, true, !dbg !15581
  %lnot.ext278 = zext i1 %lnot277 to i32, !dbg !15581
  %add279 = add i32 %add269, %lnot.ext278, !dbg !15581
  %add280 = add i32 %add200, %add279, !dbg !15581
  %add281 = add i32 %add129, %add280, !dbg !15581
  br label %cond.end, !dbg !15581

cond.false:                                       ; preds = %entry
  %38 = load i32, i32* %valid_drop_flags, align 4, !dbg !15581
  store i32 %38, i32* %w.addr.i, align 4
  %39 = load i32, i32* %w.addr.i, align 4, !dbg !15582
  %40 = call i32 asm "# ALT: oldnstr\0A661:\0A\09call __sw_hweight32\0A662:\0A# ALT: padding\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 4*32+23)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A# ALT: replacement 1\0A6641:\0A\09popcntl $1, $0\0A6651:\0A.popsection\0A", "={ax},{di},~{dirflag},~{fpsr},~{flags}"(i32 %39) #15, !dbg !15583, !srcloc !14702
  store i32 %40, i32* %res.i, align 4, !dbg !15583
  %41 = load i32, i32* %res.i, align 4, !dbg !15584
  br label %cond.end, !dbg !15581

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add281, %cond.true ], [ %41, %cond.false ], !dbg !15581
  %42 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %43 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and282 = and i32 %42, %43, !dbg !15585
  %44 = call i1 @llvm.is.constant.i32(i32 %and282), !dbg !15585
  br i1 %44, label %cond.true283, label %cond.false603, !dbg !15585

cond.true283:                                     ; preds = %cond.end
  %45 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %46 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and284 = and i32 %45, %46, !dbg !15585
  %conv285 = zext i32 %and284 to i64, !dbg !15585
  %and286 = and i64 %conv285, 1, !dbg !15585
  %tobool287 = icmp ne i64 %and286, 0, !dbg !15585
  %lnot288 = xor i1 %tobool287, true, !dbg !15585
  %lnot290 = xor i1 %lnot288, true, !dbg !15585
  %lnot.ext291 = zext i1 %lnot290 to i32, !dbg !15585
  %47 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %48 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and292 = and i32 %47, %48, !dbg !15585
  %conv293 = zext i32 %and292 to i64, !dbg !15585
  %and294 = and i64 %conv293, 2, !dbg !15585
  %tobool295 = icmp ne i64 %and294, 0, !dbg !15585
  %lnot296 = xor i1 %tobool295, true, !dbg !15585
  %lnot298 = xor i1 %lnot296, true, !dbg !15585
  %lnot.ext299 = zext i1 %lnot298 to i32, !dbg !15585
  %add300 = add i32 %lnot.ext291, %lnot.ext299, !dbg !15585
  %49 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %50 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and301 = and i32 %49, %50, !dbg !15585
  %conv302 = zext i32 %and301 to i64, !dbg !15585
  %and303 = and i64 %conv302, 4, !dbg !15585
  %tobool304 = icmp ne i64 %and303, 0, !dbg !15585
  %lnot305 = xor i1 %tobool304, true, !dbg !15585
  %lnot307 = xor i1 %lnot305, true, !dbg !15585
  %lnot.ext308 = zext i1 %lnot307 to i32, !dbg !15585
  %add309 = add i32 %add300, %lnot.ext308, !dbg !15585
  %51 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %52 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and310 = and i32 %51, %52, !dbg !15585
  %conv311 = zext i32 %and310 to i64, !dbg !15585
  %and312 = and i64 %conv311, 8, !dbg !15585
  %tobool313 = icmp ne i64 %and312, 0, !dbg !15585
  %lnot314 = xor i1 %tobool313, true, !dbg !15585
  %lnot316 = xor i1 %lnot314, true, !dbg !15585
  %lnot.ext317 = zext i1 %lnot316 to i32, !dbg !15585
  %add318 = add i32 %add309, %lnot.ext317, !dbg !15585
  %53 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %54 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and319 = and i32 %53, %54, !dbg !15585
  %conv320 = zext i32 %and319 to i64, !dbg !15585
  %and321 = and i64 %conv320, 16, !dbg !15585
  %tobool322 = icmp ne i64 %and321, 0, !dbg !15585
  %lnot323 = xor i1 %tobool322, true, !dbg !15585
  %lnot325 = xor i1 %lnot323, true, !dbg !15585
  %lnot.ext326 = zext i1 %lnot325 to i32, !dbg !15585
  %add327 = add i32 %add318, %lnot.ext326, !dbg !15585
  %55 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %56 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and328 = and i32 %55, %56, !dbg !15585
  %conv329 = zext i32 %and328 to i64, !dbg !15585
  %and330 = and i64 %conv329, 32, !dbg !15585
  %tobool331 = icmp ne i64 %and330, 0, !dbg !15585
  %lnot332 = xor i1 %tobool331, true, !dbg !15585
  %lnot334 = xor i1 %lnot332, true, !dbg !15585
  %lnot.ext335 = zext i1 %lnot334 to i32, !dbg !15585
  %add336 = add i32 %add327, %lnot.ext335, !dbg !15585
  %57 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %58 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and337 = and i32 %57, %58, !dbg !15585
  %conv338 = zext i32 %and337 to i64, !dbg !15585
  %and339 = and i64 %conv338, 64, !dbg !15585
  %tobool340 = icmp ne i64 %and339, 0, !dbg !15585
  %lnot341 = xor i1 %tobool340, true, !dbg !15585
  %lnot343 = xor i1 %lnot341, true, !dbg !15585
  %lnot.ext344 = zext i1 %lnot343 to i32, !dbg !15585
  %add345 = add i32 %add336, %lnot.ext344, !dbg !15585
  %59 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %60 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and346 = and i32 %59, %60, !dbg !15585
  %conv347 = zext i32 %and346 to i64, !dbg !15585
  %and348 = and i64 %conv347, 128, !dbg !15585
  %tobool349 = icmp ne i64 %and348, 0, !dbg !15585
  %lnot350 = xor i1 %tobool349, true, !dbg !15585
  %lnot352 = xor i1 %lnot350, true, !dbg !15585
  %lnot.ext353 = zext i1 %lnot352 to i32, !dbg !15585
  %add354 = add i32 %add345, %lnot.ext353, !dbg !15585
  %61 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %62 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and355 = and i32 %61, %62, !dbg !15585
  %shr356 = lshr i32 %and355, 8, !dbg !15585
  %conv357 = zext i32 %shr356 to i64, !dbg !15585
  %and358 = and i64 %conv357, 1, !dbg !15585
  %tobool359 = icmp ne i64 %and358, 0, !dbg !15585
  %lnot360 = xor i1 %tobool359, true, !dbg !15585
  %lnot362 = xor i1 %lnot360, true, !dbg !15585
  %lnot.ext363 = zext i1 %lnot362 to i32, !dbg !15585
  %63 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %64 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and364 = and i32 %63, %64, !dbg !15585
  %shr365 = lshr i32 %and364, 8, !dbg !15585
  %conv366 = zext i32 %shr365 to i64, !dbg !15585
  %and367 = and i64 %conv366, 2, !dbg !15585
  %tobool368 = icmp ne i64 %and367, 0, !dbg !15585
  %lnot369 = xor i1 %tobool368, true, !dbg !15585
  %lnot371 = xor i1 %lnot369, true, !dbg !15585
  %lnot.ext372 = zext i1 %lnot371 to i32, !dbg !15585
  %add373 = add i32 %lnot.ext363, %lnot.ext372, !dbg !15585
  %65 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %66 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and374 = and i32 %65, %66, !dbg !15585
  %shr375 = lshr i32 %and374, 8, !dbg !15585
  %conv376 = zext i32 %shr375 to i64, !dbg !15585
  %and377 = and i64 %conv376, 4, !dbg !15585
  %tobool378 = icmp ne i64 %and377, 0, !dbg !15585
  %lnot379 = xor i1 %tobool378, true, !dbg !15585
  %lnot381 = xor i1 %lnot379, true, !dbg !15585
  %lnot.ext382 = zext i1 %lnot381 to i32, !dbg !15585
  %add383 = add i32 %add373, %lnot.ext382, !dbg !15585
  %67 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %68 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and384 = and i32 %67, %68, !dbg !15585
  %shr385 = lshr i32 %and384, 8, !dbg !15585
  %conv386 = zext i32 %shr385 to i64, !dbg !15585
  %and387 = and i64 %conv386, 8, !dbg !15585
  %tobool388 = icmp ne i64 %and387, 0, !dbg !15585
  %lnot389 = xor i1 %tobool388, true, !dbg !15585
  %lnot391 = xor i1 %lnot389, true, !dbg !15585
  %lnot.ext392 = zext i1 %lnot391 to i32, !dbg !15585
  %add393 = add i32 %add383, %lnot.ext392, !dbg !15585
  %69 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %70 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and394 = and i32 %69, %70, !dbg !15585
  %shr395 = lshr i32 %and394, 8, !dbg !15585
  %conv396 = zext i32 %shr395 to i64, !dbg !15585
  %and397 = and i64 %conv396, 16, !dbg !15585
  %tobool398 = icmp ne i64 %and397, 0, !dbg !15585
  %lnot399 = xor i1 %tobool398, true, !dbg !15585
  %lnot401 = xor i1 %lnot399, true, !dbg !15585
  %lnot.ext402 = zext i1 %lnot401 to i32, !dbg !15585
  %add403 = add i32 %add393, %lnot.ext402, !dbg !15585
  %71 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %72 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and404 = and i32 %71, %72, !dbg !15585
  %shr405 = lshr i32 %and404, 8, !dbg !15585
  %conv406 = zext i32 %shr405 to i64, !dbg !15585
  %and407 = and i64 %conv406, 32, !dbg !15585
  %tobool408 = icmp ne i64 %and407, 0, !dbg !15585
  %lnot409 = xor i1 %tobool408, true, !dbg !15585
  %lnot411 = xor i1 %lnot409, true, !dbg !15585
  %lnot.ext412 = zext i1 %lnot411 to i32, !dbg !15585
  %add413 = add i32 %add403, %lnot.ext412, !dbg !15585
  %73 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %74 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and414 = and i32 %73, %74, !dbg !15585
  %shr415 = lshr i32 %and414, 8, !dbg !15585
  %conv416 = zext i32 %shr415 to i64, !dbg !15585
  %and417 = and i64 %conv416, 64, !dbg !15585
  %tobool418 = icmp ne i64 %and417, 0, !dbg !15585
  %lnot419 = xor i1 %tobool418, true, !dbg !15585
  %lnot421 = xor i1 %lnot419, true, !dbg !15585
  %lnot.ext422 = zext i1 %lnot421 to i32, !dbg !15585
  %add423 = add i32 %add413, %lnot.ext422, !dbg !15585
  %75 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %76 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and424 = and i32 %75, %76, !dbg !15585
  %shr425 = lshr i32 %and424, 8, !dbg !15585
  %conv426 = zext i32 %shr425 to i64, !dbg !15585
  %and427 = and i64 %conv426, 128, !dbg !15585
  %tobool428 = icmp ne i64 %and427, 0, !dbg !15585
  %lnot429 = xor i1 %tobool428, true, !dbg !15585
  %lnot431 = xor i1 %lnot429, true, !dbg !15585
  %lnot.ext432 = zext i1 %lnot431 to i32, !dbg !15585
  %add433 = add i32 %add423, %lnot.ext432, !dbg !15585
  %add434 = add i32 %add354, %add433, !dbg !15585
  %77 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %78 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and435 = and i32 %77, %78, !dbg !15585
  %shr436 = lshr i32 %and435, 16, !dbg !15585
  %conv437 = zext i32 %shr436 to i64, !dbg !15585
  %and438 = and i64 %conv437, 1, !dbg !15585
  %tobool439 = icmp ne i64 %and438, 0, !dbg !15585
  %lnot440 = xor i1 %tobool439, true, !dbg !15585
  %lnot442 = xor i1 %lnot440, true, !dbg !15585
  %lnot.ext443 = zext i1 %lnot442 to i32, !dbg !15585
  %79 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %80 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and444 = and i32 %79, %80, !dbg !15585
  %shr445 = lshr i32 %and444, 16, !dbg !15585
  %conv446 = zext i32 %shr445 to i64, !dbg !15585
  %and447 = and i64 %conv446, 2, !dbg !15585
  %tobool448 = icmp ne i64 %and447, 0, !dbg !15585
  %lnot449 = xor i1 %tobool448, true, !dbg !15585
  %lnot451 = xor i1 %lnot449, true, !dbg !15585
  %lnot.ext452 = zext i1 %lnot451 to i32, !dbg !15585
  %add453 = add i32 %lnot.ext443, %lnot.ext452, !dbg !15585
  %81 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %82 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and454 = and i32 %81, %82, !dbg !15585
  %shr455 = lshr i32 %and454, 16, !dbg !15585
  %conv456 = zext i32 %shr455 to i64, !dbg !15585
  %and457 = and i64 %conv456, 4, !dbg !15585
  %tobool458 = icmp ne i64 %and457, 0, !dbg !15585
  %lnot459 = xor i1 %tobool458, true, !dbg !15585
  %lnot461 = xor i1 %lnot459, true, !dbg !15585
  %lnot.ext462 = zext i1 %lnot461 to i32, !dbg !15585
  %add463 = add i32 %add453, %lnot.ext462, !dbg !15585
  %83 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %84 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and464 = and i32 %83, %84, !dbg !15585
  %shr465 = lshr i32 %and464, 16, !dbg !15585
  %conv466 = zext i32 %shr465 to i64, !dbg !15585
  %and467 = and i64 %conv466, 8, !dbg !15585
  %tobool468 = icmp ne i64 %and467, 0, !dbg !15585
  %lnot469 = xor i1 %tobool468, true, !dbg !15585
  %lnot471 = xor i1 %lnot469, true, !dbg !15585
  %lnot.ext472 = zext i1 %lnot471 to i32, !dbg !15585
  %add473 = add i32 %add463, %lnot.ext472, !dbg !15585
  %85 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %86 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and474 = and i32 %85, %86, !dbg !15585
  %shr475 = lshr i32 %and474, 16, !dbg !15585
  %conv476 = zext i32 %shr475 to i64, !dbg !15585
  %and477 = and i64 %conv476, 16, !dbg !15585
  %tobool478 = icmp ne i64 %and477, 0, !dbg !15585
  %lnot479 = xor i1 %tobool478, true, !dbg !15585
  %lnot481 = xor i1 %lnot479, true, !dbg !15585
  %lnot.ext482 = zext i1 %lnot481 to i32, !dbg !15585
  %add483 = add i32 %add473, %lnot.ext482, !dbg !15585
  %87 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %88 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and484 = and i32 %87, %88, !dbg !15585
  %shr485 = lshr i32 %and484, 16, !dbg !15585
  %conv486 = zext i32 %shr485 to i64, !dbg !15585
  %and487 = and i64 %conv486, 32, !dbg !15585
  %tobool488 = icmp ne i64 %and487, 0, !dbg !15585
  %lnot489 = xor i1 %tobool488, true, !dbg !15585
  %lnot491 = xor i1 %lnot489, true, !dbg !15585
  %lnot.ext492 = zext i1 %lnot491 to i32, !dbg !15585
  %add493 = add i32 %add483, %lnot.ext492, !dbg !15585
  %89 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %90 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and494 = and i32 %89, %90, !dbg !15585
  %shr495 = lshr i32 %and494, 16, !dbg !15585
  %conv496 = zext i32 %shr495 to i64, !dbg !15585
  %and497 = and i64 %conv496, 64, !dbg !15585
  %tobool498 = icmp ne i64 %and497, 0, !dbg !15585
  %lnot499 = xor i1 %tobool498, true, !dbg !15585
  %lnot501 = xor i1 %lnot499, true, !dbg !15585
  %lnot.ext502 = zext i1 %lnot501 to i32, !dbg !15585
  %add503 = add i32 %add493, %lnot.ext502, !dbg !15585
  %91 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %92 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and504 = and i32 %91, %92, !dbg !15585
  %shr505 = lshr i32 %and504, 16, !dbg !15585
  %conv506 = zext i32 %shr505 to i64, !dbg !15585
  %and507 = and i64 %conv506, 128, !dbg !15585
  %tobool508 = icmp ne i64 %and507, 0, !dbg !15585
  %lnot509 = xor i1 %tobool508, true, !dbg !15585
  %lnot511 = xor i1 %lnot509, true, !dbg !15585
  %lnot.ext512 = zext i1 %lnot511 to i32, !dbg !15585
  %add513 = add i32 %add503, %lnot.ext512, !dbg !15585
  %93 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %94 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and514 = and i32 %93, %94, !dbg !15585
  %shr515 = lshr i32 %and514, 16, !dbg !15585
  %shr516 = lshr i32 %shr515, 8, !dbg !15585
  %conv517 = zext i32 %shr516 to i64, !dbg !15585
  %and518 = and i64 %conv517, 1, !dbg !15585
  %tobool519 = icmp ne i64 %and518, 0, !dbg !15585
  %lnot520 = xor i1 %tobool519, true, !dbg !15585
  %lnot522 = xor i1 %lnot520, true, !dbg !15585
  %lnot.ext523 = zext i1 %lnot522 to i32, !dbg !15585
  %95 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %96 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and524 = and i32 %95, %96, !dbg !15585
  %shr525 = lshr i32 %and524, 16, !dbg !15585
  %shr526 = lshr i32 %shr525, 8, !dbg !15585
  %conv527 = zext i32 %shr526 to i64, !dbg !15585
  %and528 = and i64 %conv527, 2, !dbg !15585
  %tobool529 = icmp ne i64 %and528, 0, !dbg !15585
  %lnot530 = xor i1 %tobool529, true, !dbg !15585
  %lnot532 = xor i1 %lnot530, true, !dbg !15585
  %lnot.ext533 = zext i1 %lnot532 to i32, !dbg !15585
  %add534 = add i32 %lnot.ext523, %lnot.ext533, !dbg !15585
  %97 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %98 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and535 = and i32 %97, %98, !dbg !15585
  %shr536 = lshr i32 %and535, 16, !dbg !15585
  %shr537 = lshr i32 %shr536, 8, !dbg !15585
  %conv538 = zext i32 %shr537 to i64, !dbg !15585
  %and539 = and i64 %conv538, 4, !dbg !15585
  %tobool540 = icmp ne i64 %and539, 0, !dbg !15585
  %lnot541 = xor i1 %tobool540, true, !dbg !15585
  %lnot543 = xor i1 %lnot541, true, !dbg !15585
  %lnot.ext544 = zext i1 %lnot543 to i32, !dbg !15585
  %add545 = add i32 %add534, %lnot.ext544, !dbg !15585
  %99 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %100 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and546 = and i32 %99, %100, !dbg !15585
  %shr547 = lshr i32 %and546, 16, !dbg !15585
  %shr548 = lshr i32 %shr547, 8, !dbg !15585
  %conv549 = zext i32 %shr548 to i64, !dbg !15585
  %and550 = and i64 %conv549, 8, !dbg !15585
  %tobool551 = icmp ne i64 %and550, 0, !dbg !15585
  %lnot552 = xor i1 %tobool551, true, !dbg !15585
  %lnot554 = xor i1 %lnot552, true, !dbg !15585
  %lnot.ext555 = zext i1 %lnot554 to i32, !dbg !15585
  %add556 = add i32 %add545, %lnot.ext555, !dbg !15585
  %101 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %102 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and557 = and i32 %101, %102, !dbg !15585
  %shr558 = lshr i32 %and557, 16, !dbg !15585
  %shr559 = lshr i32 %shr558, 8, !dbg !15585
  %conv560 = zext i32 %shr559 to i64, !dbg !15585
  %and561 = and i64 %conv560, 16, !dbg !15585
  %tobool562 = icmp ne i64 %and561, 0, !dbg !15585
  %lnot563 = xor i1 %tobool562, true, !dbg !15585
  %lnot565 = xor i1 %lnot563, true, !dbg !15585
  %lnot.ext566 = zext i1 %lnot565 to i32, !dbg !15585
  %add567 = add i32 %add556, %lnot.ext566, !dbg !15585
  %103 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %104 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and568 = and i32 %103, %104, !dbg !15585
  %shr569 = lshr i32 %and568, 16, !dbg !15585
  %shr570 = lshr i32 %shr569, 8, !dbg !15585
  %conv571 = zext i32 %shr570 to i64, !dbg !15585
  %and572 = and i64 %conv571, 32, !dbg !15585
  %tobool573 = icmp ne i64 %and572, 0, !dbg !15585
  %lnot574 = xor i1 %tobool573, true, !dbg !15585
  %lnot576 = xor i1 %lnot574, true, !dbg !15585
  %lnot.ext577 = zext i1 %lnot576 to i32, !dbg !15585
  %add578 = add i32 %add567, %lnot.ext577, !dbg !15585
  %105 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %106 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and579 = and i32 %105, %106, !dbg !15585
  %shr580 = lshr i32 %and579, 16, !dbg !15585
  %shr581 = lshr i32 %shr580, 8, !dbg !15585
  %conv582 = zext i32 %shr581 to i64, !dbg !15585
  %and583 = and i64 %conv582, 64, !dbg !15585
  %tobool584 = icmp ne i64 %and583, 0, !dbg !15585
  %lnot585 = xor i1 %tobool584, true, !dbg !15585
  %lnot587 = xor i1 %lnot585, true, !dbg !15585
  %lnot.ext588 = zext i1 %lnot587 to i32, !dbg !15585
  %add589 = add i32 %add578, %lnot.ext588, !dbg !15585
  %107 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %108 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and590 = and i32 %107, %108, !dbg !15585
  %shr591 = lshr i32 %and590, 16, !dbg !15585
  %shr592 = lshr i32 %shr591, 8, !dbg !15585
  %conv593 = zext i32 %shr592 to i64, !dbg !15585
  %and594 = and i64 %conv593, 128, !dbg !15585
  %tobool595 = icmp ne i64 %and594, 0, !dbg !15585
  %lnot596 = xor i1 %tobool595, true, !dbg !15585
  %lnot598 = xor i1 %lnot596, true, !dbg !15585
  %lnot.ext599 = zext i1 %lnot598 to i32, !dbg !15585
  %add600 = add i32 %add589, %lnot.ext599, !dbg !15585
  %add601 = add i32 %add513, %add600, !dbg !15585
  %add602 = add i32 %add434, %add601, !dbg !15585
  br label %cond.end606, !dbg !15585

cond.false603:                                    ; preds = %cond.end
  %109 = load i32, i32* %valid_add_flags, align 4, !dbg !15585
  %110 = load i32, i32* %valid_drop_flags, align 4, !dbg !15585
  %and604 = and i32 %109, %110, !dbg !15585
  store i32 %and604, i32* %w.addr.i608, align 4
  %111 = load i32, i32* %w.addr.i608, align 4, !dbg !15586
  %112 = call i32 asm "# ALT: oldnstr\0A661:\0A\09call __sw_hweight32\0A662:\0A# ALT: padding\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 4*32+23)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A# ALT: replacement 1\0A6641:\0A\09popcntl $1, $0\0A6651:\0A.popsection\0A", "={ax},{di},~{dirflag},~{fpsr},~{flags}"(i32 %111) #15, !dbg !15587, !srcloc !14702
  store i32 %112, i32* %res.i609, align 4, !dbg !15587
  %113 = load i32, i32* %res.i609, align 4, !dbg !15588
  br label %cond.end606, !dbg !15585

cond.end606:                                      ; preds = %cond.false603, %cond.true283
  %cond607 = phi i32 [ %add602, %cond.true283 ], [ %113, %cond.false603 ], !dbg !15585
  %sub = sub i32 %cond, %cond607, !dbg !15589
  ret i32 %sub, !dbg !15590
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_urb_dequeue(%struct.urb* %urb) #1 !dbg !15591 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !15592, metadata !DIExpression()), !dbg !15593
  ret void, !dbg !15593
}

; Function Attrs: noredzone
declare dso_local i32 @usb_hcd_check_unlink_urb(%struct.usb_hcd*, %struct.urb*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.xhci_ring* @xhci_urb_to_transfer_ring(%struct.xhci_hcd* %xhci, %struct.urb* %urb) #1 !dbg !15594 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !15597, metadata !DIExpression()), !dbg !15598
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !15599, metadata !DIExpression()), !dbg !15600
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15601
  %1 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15602
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %1, i32 0, i32 8, !dbg !15603
  %2 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !15603
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %2, i32 0, i32 44, !dbg !15604
  %3 = load i32, i32* %slot_id, align 8, !dbg !15604
  %4 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15605
  %ep = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 9, !dbg !15606
  %5 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !15606
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %5, i32 0, i32 0, !dbg !15607
  %call = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !15608
  %6 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15609
  %stream_id = getelementptr inbounds %struct.urb, %struct.urb* %6, i32 0, i32 11, !dbg !15610
  %7 = load i32, i32* %stream_id, align 4, !dbg !15610
  %call1 = call %struct.xhci_ring* @xhci_triad_to_transfer_ring(%struct.xhci_hcd* %0, i32 %3, i32 %call, i32 %7) #11, !dbg !15611
  ret %struct.xhci_ring* %call1, !dbg !15612
}

; Function Attrs: noredzone
declare dso_local void @xhci_hc_died(%struct.xhci_hcd*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @td_on_ring(%struct.xhci_td* %td, %struct.xhci_ring* %ring) #1 !dbg !15613 {
entry:
  %retval = alloca i1, align 1
  %td.addr = alloca %struct.xhci_td*, align 8
  %ring.addr = alloca %struct.xhci_ring*, align 8
  %seg = alloca %struct.xhci_segment*, align 8
  store %struct.xhci_td* %td, %struct.xhci_td** %td.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_td** %td.addr, metadata !15616, metadata !DIExpression()), !dbg !15617
  store %struct.xhci_ring* %ring, %struct.xhci_ring** %ring.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_ring** %ring.addr, metadata !15618, metadata !DIExpression()), !dbg !15619
  call void @llvm.dbg.declare(metadata %struct.xhci_segment** %seg, metadata !15620, metadata !DIExpression()), !dbg !15621
  %0 = load %struct.xhci_ring*, %struct.xhci_ring** %ring.addr, align 8, !dbg !15622
  %first_seg = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %0, i32 0, i32 0, !dbg !15623
  %1 = load %struct.xhci_segment*, %struct.xhci_segment** %first_seg, align 8, !dbg !15623
  store %struct.xhci_segment* %1, %struct.xhci_segment** %seg, align 8, !dbg !15621
  %2 = load %struct.xhci_td*, %struct.xhci_td** %td.addr, align 8, !dbg !15624
  %tobool = icmp ne %struct.xhci_td* %2, null, !dbg !15624
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !15626

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.xhci_td*, %struct.xhci_td** %td.addr, align 8, !dbg !15627
  %start_seg = getelementptr inbounds %struct.xhci_td, %struct.xhci_td* %3, i32 0, i32 3, !dbg !15628
  %4 = load %struct.xhci_segment*, %struct.xhci_segment** %start_seg, align 8, !dbg !15628
  %tobool1 = icmp ne %struct.xhci_segment* %4, null, !dbg !15627
  br i1 %tobool1, label %if.end, label %if.then, !dbg !15629

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !15630
  br label %return, !dbg !15630

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !15631

do.body:                                          ; preds = %land.end, %if.end
  %5 = load %struct.xhci_segment*, %struct.xhci_segment** %seg, align 8, !dbg !15632
  %6 = load %struct.xhci_td*, %struct.xhci_td** %td.addr, align 8, !dbg !15635
  %start_seg2 = getelementptr inbounds %struct.xhci_td, %struct.xhci_td* %6, i32 0, i32 3, !dbg !15636
  %7 = load %struct.xhci_segment*, %struct.xhci_segment** %start_seg2, align 8, !dbg !15636
  %cmp = icmp eq %struct.xhci_segment* %5, %7, !dbg !15637
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !15638

if.then3:                                         ; preds = %do.body
  store i1 true, i1* %retval, align 1, !dbg !15639
  br label %return, !dbg !15639

if.end4:                                          ; preds = %do.body
  %8 = load %struct.xhci_segment*, %struct.xhci_segment** %seg, align 8, !dbg !15640
  %next = getelementptr inbounds %struct.xhci_segment, %struct.xhci_segment* %8, i32 0, i32 1, !dbg !15641
  %9 = load %struct.xhci_segment*, %struct.xhci_segment** %next, align 8, !dbg !15641
  store %struct.xhci_segment* %9, %struct.xhci_segment** %seg, align 8, !dbg !15642
  br label %do.cond, !dbg !15643

do.cond:                                          ; preds = %if.end4
  %10 = load %struct.xhci_segment*, %struct.xhci_segment** %seg, align 8, !dbg !15644
  %tobool5 = icmp ne %struct.xhci_segment* %10, null, !dbg !15644
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !15645

land.rhs:                                         ; preds = %do.cond
  %11 = load %struct.xhci_segment*, %struct.xhci_segment** %seg, align 8, !dbg !15646
  %12 = load %struct.xhci_ring*, %struct.xhci_ring** %ring.addr, align 8, !dbg !15647
  %first_seg6 = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %12, i32 0, i32 0, !dbg !15648
  %13 = load %struct.xhci_segment*, %struct.xhci_segment** %first_seg6, align 8, !dbg !15648
  %cmp7 = icmp ne %struct.xhci_segment* %11, %13, !dbg !15649
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %14 = phi i1 [ false, %do.cond ], [ %cmp7, %land.rhs ], !dbg !15650
  br i1 %14, label %do.body, label %do.end, !dbg !15643, !llvm.loop !15651

do.end:                                           ; preds = %land.end
  store i1 false, i1* %retval, align 1, !dbg !15653
  br label %return, !dbg !15653

return:                                           ; preds = %do.end, %if.then3, %if.then
  %15 = load i1, i1* %retval, align 1, !dbg !15654
  ret i1 %15, !dbg !15654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_dbg_cancel_urb(%struct.va_format* %vaf) #1 !dbg !15655 {
entry:
  %vaf.addr = alloca %struct.va_format*, align 8
  store %struct.va_format* %vaf, %struct.va_format** %vaf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.va_format** %vaf.addr, metadata !15656, metadata !DIExpression()), !dbg !15657
  ret void, !dbg !15657
}

; Function Attrs: noredzone
declare dso_local i32 @xhci_queue_stop_endpoint(%struct.xhci_hcd*, %struct.xhci_command*, i32, i32, i32) #3

; Function Attrs: noredzone
declare dso_local void @usb_hcd_unlink_urb_from_ep(%struct.usb_hcd*, %struct.urb*) #3

; Function Attrs: noredzone
declare dso_local void @usb_hcd_giveback_urb(%struct.usb_hcd*, %struct.urb*, i32) #3

; Function Attrs: noredzone
declare dso_local %struct.xhci_ring* @xhci_triad_to_transfer_ring(%struct.xhci_hcd*, i32, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @xhci_urb_suitable_for_idt(%struct.urb* %urb) #1 !dbg !15658 {
entry:
  %retval = alloca i1, align 1
  %urb.addr = alloca %struct.urb*, align 8
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !15661, metadata !DIExpression()), !dbg !15662
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15663
  %ep = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 9, !dbg !15665
  %1 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !15665
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %1, i32 0, i32 0, !dbg !15666
  %call = call i32 @usb_endpoint_xfer_isoc(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !15667
  %tobool = icmp ne i32 %call, 0, !dbg !15667
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !15668

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15669
  %call1 = call i32 @usb_urb_dir_out(%struct.urb* %2) #11, !dbg !15670
  %tobool2 = icmp ne i32 %call1, 0, !dbg !15670
  br i1 %tobool2, label %land.lhs.true3, label %if.end, !dbg !15671

land.lhs.true3:                                   ; preds = %land.lhs.true
  %3 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15672
  %ep4 = getelementptr inbounds %struct.urb, %struct.urb* %3, i32 0, i32 9, !dbg !15673
  %4 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep4, align 8, !dbg !15673
  %desc5 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %4, i32 0, i32 0, !dbg !15674
  %call6 = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc5) #11, !dbg !15675
  %cmp = icmp sge i32 %call6, 8, !dbg !15676
  br i1 %cmp, label %land.lhs.true7, label %if.end, !dbg !15677

land.lhs.true7:                                   ; preds = %land.lhs.true3
  %5 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15678
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %5, i32 0, i32 19, !dbg !15679
  %6 = load i32, i32* %transfer_buffer_length, align 8, !dbg !15679
  %cmp8 = icmp ule i32 %6, 8, !dbg !15680
  br i1 %cmp8, label %land.lhs.true9, label %if.end, !dbg !15681

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15682
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 13, !dbg !15683
  %8 = load i32, i32* %transfer_flags, align 4, !dbg !15683
  %and = and i32 %8, 4, !dbg !15684
  %tobool10 = icmp ne i32 %and, 0, !dbg !15684
  br i1 %tobool10, label %if.end, label %land.lhs.true11, !dbg !15685

land.lhs.true11:                                  ; preds = %land.lhs.true9
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15686
  %num_sgs = getelementptr inbounds %struct.urb, %struct.urb* %9, i32 0, i32 18, !dbg !15687
  %10 = load i32, i32* %num_sgs, align 4, !dbg !15687
  %tobool12 = icmp ne i32 %10, 0, !dbg !15686
  br i1 %tobool12, label %if.end, label %if.then, !dbg !15688

if.then:                                          ; preds = %land.lhs.true11
  store i1 true, i1* %retval, align 1, !dbg !15689
  br label %return, !dbg !15689

if.end:                                           ; preds = %land.lhs.true11, %land.lhs.true9, %land.lhs.true7, %land.lhs.true3, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !15690
  br label %return, !dbg !15690

return:                                           ; preds = %if.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !15691
  ret i1 %11, !dbg !15691
}

; Function Attrs: noredzone
declare dso_local i32 @usb_hcd_map_urb_for_dma(%struct.usb_hcd*, %struct.urb*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_urb_dir_out(%struct.urb* %urb) #1 !dbg !15692 {
entry:
  %urb.addr = alloca %struct.urb*, align 8
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !15695, metadata !DIExpression()), !dbg !15696
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15697
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 13, !dbg !15698
  %1 = load i32, i32* %transfer_flags, align 4, !dbg !15698
  %and = and i32 %1, 512, !dbg !15699
  %cmp = icmp eq i32 %and, 0, !dbg !15700
  %conv = zext i1 %cmp to i32, !dbg !15700
  ret i32 %conv, !dbg !15701
}

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout_uninterruptible(i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_get_endpoint_flag(%struct.usb_endpoint_descriptor* %desc) #1 !dbg !15702 {
entry:
  %desc.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %desc, %struct.usb_endpoint_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %desc.addr, metadata !15703, metadata !DIExpression()), !dbg !15704
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !15705
  %call = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %0) #11, !dbg !15706
  %add = add i32 %call, 1, !dbg !15707
  %shl = shl i32 1, %add, !dbg !15708
  ret i32 %shl, !dbg !15709
}

; Function Attrs: noredzone
declare dso_local %struct.xhci_command* @xhci_alloc_command_with_ctx(%struct.xhci_hcd*, i1 zeroext, i32) #3

; Function Attrs: noredzone
declare dso_local void @xhci_ring_doorbell_for_active_rings(%struct.xhci_hcd*, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_free_dev(%struct.xhci_slot_ctx* %ctx) #1 !dbg !15710 {
entry:
  %ctx.addr = alloca %struct.xhci_slot_ctx*, align 8
  store %struct.xhci_slot_ctx* %ctx, %struct.xhci_slot_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_slot_ctx** %ctx.addr, metadata !15711, metadata !DIExpression()), !dbg !15712
  ret void, !dbg !15712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_calculate_streams_and_bitmask(%struct.xhci_hcd* %xhci, %struct.usb_device* %udev, %struct.usb_host_endpoint** %eps, i32 %num_eps, i32* %num_streams, i32* %changed_ep_bitmask) #1 !dbg !15713 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %eps.addr = alloca %struct.usb_host_endpoint**, align 8
  %num_eps.addr = alloca i32, align 4
  %num_streams.addr = alloca i32*, align 8
  %changed_ep_bitmask.addr = alloca i32*, align 8
  %max_streams = alloca i32, align 4
  %endpoint_flag = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !15716, metadata !DIExpression()), !dbg !15717
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !15718, metadata !DIExpression()), !dbg !15719
  store %struct.usb_host_endpoint** %eps, %struct.usb_host_endpoint*** %eps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint*** %eps.addr, metadata !15720, metadata !DIExpression()), !dbg !15721
  store i32 %num_eps, i32* %num_eps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_eps.addr, metadata !15722, metadata !DIExpression()), !dbg !15723
  store i32* %num_streams, i32** %num_streams.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num_streams.addr, metadata !15724, metadata !DIExpression()), !dbg !15725
  store i32* %changed_ep_bitmask, i32** %changed_ep_bitmask.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %changed_ep_bitmask.addr, metadata !15726, metadata !DIExpression()), !dbg !15727
  call void @llvm.dbg.declare(metadata i32* %max_streams, metadata !15728, metadata !DIExpression()), !dbg !15729
  call void @llvm.dbg.declare(metadata i32* %endpoint_flag, metadata !15730, metadata !DIExpression()), !dbg !15731
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15732, metadata !DIExpression()), !dbg !15733
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15734, metadata !DIExpression()), !dbg !15735
  store i32 0, i32* %i, align 4, !dbg !15736
  br label %for.cond, !dbg !15738

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !15739
  %1 = load i32, i32* %num_eps.addr, align 4, !dbg !15741
  %cmp = icmp ult i32 %0, %1, !dbg !15742
  br i1 %cmp, label %for.body, label %for.end, !dbg !15743

for.body:                                         ; preds = %for.cond
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15744
  %3 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !15746
  %4 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !15747
  %5 = load i32, i32* %i, align 4, !dbg !15748
  %idxprom = sext i32 %5 to i64, !dbg !15747
  %arrayidx = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %4, i64 %idxprom, !dbg !15747
  %6 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx, align 8, !dbg !15747
  %7 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !15749
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 44, !dbg !15750
  %8 = load i32, i32* %slot_id, align 8, !dbg !15750
  %call = call i32 @xhci_check_streams_endpoint(%struct.xhci_hcd* %2, %struct.usb_device* %3, %struct.usb_host_endpoint* %6, i32 %8) #11, !dbg !15751
  store i32 %call, i32* %ret, align 4, !dbg !15752
  %9 = load i32, i32* %ret, align 4, !dbg !15753
  %cmp1 = icmp slt i32 %9, 0, !dbg !15755
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15756

if.then:                                          ; preds = %for.body
  %10 = load i32, i32* %ret, align 4, !dbg !15757
  store i32 %10, i32* %retval, align 4, !dbg !15758
  br label %return, !dbg !15758

if.end:                                           ; preds = %for.body
  %11 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !15759
  %12 = load i32, i32* %i, align 4, !dbg !15760
  %idxprom2 = sext i32 %12 to i64, !dbg !15759
  %arrayidx3 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %11, i64 %idxprom2, !dbg !15759
  %13 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx3, align 8, !dbg !15759
  %ss_ep_comp = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %13, i32 0, i32 1, !dbg !15761
  %call4 = call i32 @usb_ss_max_streams(%struct.usb_ss_ep_comp_descriptor* %ss_ep_comp) #11, !dbg !15762
  store i32 %call4, i32* %max_streams, align 4, !dbg !15763
  %14 = load i32, i32* %max_streams, align 4, !dbg !15764
  %15 = load i32*, i32** %num_streams.addr, align 8, !dbg !15766
  %16 = load i32, i32* %15, align 4, !dbg !15767
  %sub = sub i32 %16, 1, !dbg !15768
  %cmp5 = icmp ult i32 %14, %sub, !dbg !15769
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !15770

if.then6:                                         ; preds = %if.end
  %17 = load i32, i32* %max_streams, align 4, !dbg !15771
  %add = add i32 %17, 1, !dbg !15773
  %18 = load i32*, i32** %num_streams.addr, align 8, !dbg !15774
  store i32 %add, i32* %18, align 4, !dbg !15775
  br label %if.end7, !dbg !15776

if.end7:                                          ; preds = %if.then6, %if.end
  %19 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !15777
  %20 = load i32, i32* %i, align 4, !dbg !15778
  %idxprom8 = sext i32 %20 to i64, !dbg !15777
  %arrayidx9 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %19, i64 %idxprom8, !dbg !15777
  %21 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx9, align 8, !dbg !15777
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %21, i32 0, i32 0, !dbg !15779
  %call10 = call i32 @xhci_get_endpoint_flag(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !15780
  store i32 %call10, i32* %endpoint_flag, align 4, !dbg !15781
  %22 = load i32*, i32** %changed_ep_bitmask.addr, align 8, !dbg !15782
  %23 = load i32, i32* %22, align 4, !dbg !15784
  %24 = load i32, i32* %endpoint_flag, align 4, !dbg !15785
  %and = and i32 %23, %24, !dbg !15786
  %tobool = icmp ne i32 %and, 0, !dbg !15786
  br i1 %tobool, label %if.then11, label %if.end12, !dbg !15787

if.then11:                                        ; preds = %if.end7
  store i32 -22, i32* %retval, align 4, !dbg !15788
  br label %return, !dbg !15788

if.end12:                                         ; preds = %if.end7
  %25 = load i32, i32* %endpoint_flag, align 4, !dbg !15789
  %26 = load i32*, i32** %changed_ep_bitmask.addr, align 8, !dbg !15790
  %27 = load i32, i32* %26, align 4, !dbg !15791
  %or = or i32 %27, %25, !dbg !15791
  store i32 %or, i32* %26, align 4, !dbg !15791
  br label %for.inc, !dbg !15792

for.inc:                                          ; preds = %if.end12
  %28 = load i32, i32* %i, align 4, !dbg !15793
  %inc = add i32 %28, 1, !dbg !15793
  store i32 %inc, i32* %i, align 4, !dbg !15793
  br label %for.cond, !dbg !15794, !llvm.loop !15795

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !15797
  br label %return, !dbg !15797

return:                                           ; preds = %for.end, %if.then11, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !15798
  ret i32 %29, !dbg !15798
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_calculate_streams_entries(%struct.xhci_hcd* %xhci, i32* %num_streams, i32* %num_stream_ctxs) #1 !dbg !15799 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %num_streams.addr = alloca i32*, align 8
  %num_stream_ctxs.addr = alloca i32*, align 8
  %max_streams = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !15802, metadata !DIExpression()), !dbg !15803
  store i32* %num_streams, i32** %num_streams.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num_streams.addr, metadata !15804, metadata !DIExpression()), !dbg !15805
  store i32* %num_stream_ctxs, i32** %num_stream_ctxs.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num_stream_ctxs.addr, metadata !15806, metadata !DIExpression()), !dbg !15807
  call void @llvm.dbg.declare(metadata i32* %max_streams, metadata !15808, metadata !DIExpression()), !dbg !15809
  %0 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %1 = load i32, i32* %0, align 4, !dbg !15810
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !15810
  br i1 %2, label %cond.true, label %cond.false508, !dbg !15810

cond.true:                                        ; preds = %entry
  %3 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %4 = load i32, i32* %3, align 4, !dbg !15810
  %cmp = icmp eq i32 %4, 1, !dbg !15810
  br i1 %cmp, label %cond.true1, label %cond.false, !dbg !15810

cond.true1:                                       ; preds = %cond.true
  br label %cond.end506, !dbg !15810

cond.false:                                       ; preds = %cond.true
  %5 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %6 = load i32, i32* %5, align 4, !dbg !15810
  %sub = sub i32 %6, 1, !dbg !15810
  %7 = call i1 @llvm.is.constant.i32(i32 %sub), !dbg !15810
  br i1 %7, label %cond.true2, label %cond.false502, !dbg !15810

cond.true2:                                       ; preds = %cond.false
  %8 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %9 = load i32, i32* %8, align 4, !dbg !15810
  %sub3 = sub i32 %9, 1, !dbg !15810
  %10 = call i1 @llvm.is.constant.i32(i32 %sub3), !dbg !15810
  br i1 %10, label %cond.true4, label %cond.false499, !dbg !15810

cond.true4:                                       ; preds = %cond.true2
  %11 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %12 = load i32, i32* %11, align 4, !dbg !15810
  %sub5 = sub i32 %12, 1, !dbg !15810
  %cmp6 = icmp ult i32 %sub5, 2, !dbg !15810
  br i1 %cmp6, label %cond.true7, label %cond.false8, !dbg !15810

cond.true7:                                       ; preds = %cond.true4
  br label %cond.end497, !dbg !15810

cond.false8:                                      ; preds = %cond.true4
  %13 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %14 = load i32, i32* %13, align 4, !dbg !15810
  %sub9 = sub i32 %14, 1, !dbg !15810
  %conv = zext i32 %sub9 to i64, !dbg !15810
  %and = and i64 %conv, -9223372036854775808, !dbg !15810
  %tobool = icmp ne i64 %and, 0, !dbg !15810
  br i1 %tobool, label %cond.true10, label %cond.false11, !dbg !15810

cond.true10:                                      ; preds = %cond.false8
  br label %cond.end495, !dbg !15810

cond.false11:                                     ; preds = %cond.false8
  %15 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %16 = load i32, i32* %15, align 4, !dbg !15810
  %sub12 = sub i32 %16, 1, !dbg !15810
  %conv13 = zext i32 %sub12 to i64, !dbg !15810
  %and14 = and i64 %conv13, 4611686018427387904, !dbg !15810
  %tobool15 = icmp ne i64 %and14, 0, !dbg !15810
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !15810

cond.true16:                                      ; preds = %cond.false11
  br label %cond.end493, !dbg !15810

cond.false17:                                     ; preds = %cond.false11
  %17 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %18 = load i32, i32* %17, align 4, !dbg !15810
  %sub18 = sub i32 %18, 1, !dbg !15810
  %conv19 = zext i32 %sub18 to i64, !dbg !15810
  %and20 = and i64 %conv19, 2305843009213693952, !dbg !15810
  %tobool21 = icmp ne i64 %and20, 0, !dbg !15810
  br i1 %tobool21, label %cond.true22, label %cond.false23, !dbg !15810

cond.true22:                                      ; preds = %cond.false17
  br label %cond.end491, !dbg !15810

cond.false23:                                     ; preds = %cond.false17
  %19 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %20 = load i32, i32* %19, align 4, !dbg !15810
  %sub24 = sub i32 %20, 1, !dbg !15810
  %conv25 = zext i32 %sub24 to i64, !dbg !15810
  %and26 = and i64 %conv25, 1152921504606846976, !dbg !15810
  %tobool27 = icmp ne i64 %and26, 0, !dbg !15810
  br i1 %tobool27, label %cond.true28, label %cond.false29, !dbg !15810

cond.true28:                                      ; preds = %cond.false23
  br label %cond.end489, !dbg !15810

cond.false29:                                     ; preds = %cond.false23
  %21 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %22 = load i32, i32* %21, align 4, !dbg !15810
  %sub30 = sub i32 %22, 1, !dbg !15810
  %conv31 = zext i32 %sub30 to i64, !dbg !15810
  %and32 = and i64 %conv31, 576460752303423488, !dbg !15810
  %tobool33 = icmp ne i64 %and32, 0, !dbg !15810
  br i1 %tobool33, label %cond.true34, label %cond.false35, !dbg !15810

cond.true34:                                      ; preds = %cond.false29
  br label %cond.end487, !dbg !15810

cond.false35:                                     ; preds = %cond.false29
  %23 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %24 = load i32, i32* %23, align 4, !dbg !15810
  %sub36 = sub i32 %24, 1, !dbg !15810
  %conv37 = zext i32 %sub36 to i64, !dbg !15810
  %and38 = and i64 %conv37, 288230376151711744, !dbg !15810
  %tobool39 = icmp ne i64 %and38, 0, !dbg !15810
  br i1 %tobool39, label %cond.true40, label %cond.false41, !dbg !15810

cond.true40:                                      ; preds = %cond.false35
  br label %cond.end485, !dbg !15810

cond.false41:                                     ; preds = %cond.false35
  %25 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %26 = load i32, i32* %25, align 4, !dbg !15810
  %sub42 = sub i32 %26, 1, !dbg !15810
  %conv43 = zext i32 %sub42 to i64, !dbg !15810
  %and44 = and i64 %conv43, 144115188075855872, !dbg !15810
  %tobool45 = icmp ne i64 %and44, 0, !dbg !15810
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !15810

cond.true46:                                      ; preds = %cond.false41
  br label %cond.end483, !dbg !15810

cond.false47:                                     ; preds = %cond.false41
  %27 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %28 = load i32, i32* %27, align 4, !dbg !15810
  %sub48 = sub i32 %28, 1, !dbg !15810
  %conv49 = zext i32 %sub48 to i64, !dbg !15810
  %and50 = and i64 %conv49, 72057594037927936, !dbg !15810
  %tobool51 = icmp ne i64 %and50, 0, !dbg !15810
  br i1 %tobool51, label %cond.true52, label %cond.false53, !dbg !15810

cond.true52:                                      ; preds = %cond.false47
  br label %cond.end481, !dbg !15810

cond.false53:                                     ; preds = %cond.false47
  %29 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %30 = load i32, i32* %29, align 4, !dbg !15810
  %sub54 = sub i32 %30, 1, !dbg !15810
  %conv55 = zext i32 %sub54 to i64, !dbg !15810
  %and56 = and i64 %conv55, 36028797018963968, !dbg !15810
  %tobool57 = icmp ne i64 %and56, 0, !dbg !15810
  br i1 %tobool57, label %cond.true58, label %cond.false59, !dbg !15810

cond.true58:                                      ; preds = %cond.false53
  br label %cond.end479, !dbg !15810

cond.false59:                                     ; preds = %cond.false53
  %31 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %32 = load i32, i32* %31, align 4, !dbg !15810
  %sub60 = sub i32 %32, 1, !dbg !15810
  %conv61 = zext i32 %sub60 to i64, !dbg !15810
  %and62 = and i64 %conv61, 18014398509481984, !dbg !15810
  %tobool63 = icmp ne i64 %and62, 0, !dbg !15810
  br i1 %tobool63, label %cond.true64, label %cond.false65, !dbg !15810

cond.true64:                                      ; preds = %cond.false59
  br label %cond.end477, !dbg !15810

cond.false65:                                     ; preds = %cond.false59
  %33 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %34 = load i32, i32* %33, align 4, !dbg !15810
  %sub66 = sub i32 %34, 1, !dbg !15810
  %conv67 = zext i32 %sub66 to i64, !dbg !15810
  %and68 = and i64 %conv67, 9007199254740992, !dbg !15810
  %tobool69 = icmp ne i64 %and68, 0, !dbg !15810
  br i1 %tobool69, label %cond.true70, label %cond.false71, !dbg !15810

cond.true70:                                      ; preds = %cond.false65
  br label %cond.end475, !dbg !15810

cond.false71:                                     ; preds = %cond.false65
  %35 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %36 = load i32, i32* %35, align 4, !dbg !15810
  %sub72 = sub i32 %36, 1, !dbg !15810
  %conv73 = zext i32 %sub72 to i64, !dbg !15810
  %and74 = and i64 %conv73, 4503599627370496, !dbg !15810
  %tobool75 = icmp ne i64 %and74, 0, !dbg !15810
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !15810

cond.true76:                                      ; preds = %cond.false71
  br label %cond.end473, !dbg !15810

cond.false77:                                     ; preds = %cond.false71
  %37 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %38 = load i32, i32* %37, align 4, !dbg !15810
  %sub78 = sub i32 %38, 1, !dbg !15810
  %conv79 = zext i32 %sub78 to i64, !dbg !15810
  %and80 = and i64 %conv79, 2251799813685248, !dbg !15810
  %tobool81 = icmp ne i64 %and80, 0, !dbg !15810
  br i1 %tobool81, label %cond.true82, label %cond.false83, !dbg !15810

cond.true82:                                      ; preds = %cond.false77
  br label %cond.end471, !dbg !15810

cond.false83:                                     ; preds = %cond.false77
  %39 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %40 = load i32, i32* %39, align 4, !dbg !15810
  %sub84 = sub i32 %40, 1, !dbg !15810
  %conv85 = zext i32 %sub84 to i64, !dbg !15810
  %and86 = and i64 %conv85, 1125899906842624, !dbg !15810
  %tobool87 = icmp ne i64 %and86, 0, !dbg !15810
  br i1 %tobool87, label %cond.true88, label %cond.false89, !dbg !15810

cond.true88:                                      ; preds = %cond.false83
  br label %cond.end469, !dbg !15810

cond.false89:                                     ; preds = %cond.false83
  %41 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %42 = load i32, i32* %41, align 4, !dbg !15810
  %sub90 = sub i32 %42, 1, !dbg !15810
  %conv91 = zext i32 %sub90 to i64, !dbg !15810
  %and92 = and i64 %conv91, 562949953421312, !dbg !15810
  %tobool93 = icmp ne i64 %and92, 0, !dbg !15810
  br i1 %tobool93, label %cond.true94, label %cond.false95, !dbg !15810

cond.true94:                                      ; preds = %cond.false89
  br label %cond.end467, !dbg !15810

cond.false95:                                     ; preds = %cond.false89
  %43 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %44 = load i32, i32* %43, align 4, !dbg !15810
  %sub96 = sub i32 %44, 1, !dbg !15810
  %conv97 = zext i32 %sub96 to i64, !dbg !15810
  %and98 = and i64 %conv97, 281474976710656, !dbg !15810
  %tobool99 = icmp ne i64 %and98, 0, !dbg !15810
  br i1 %tobool99, label %cond.true100, label %cond.false101, !dbg !15810

cond.true100:                                     ; preds = %cond.false95
  br label %cond.end465, !dbg !15810

cond.false101:                                    ; preds = %cond.false95
  %45 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %46 = load i32, i32* %45, align 4, !dbg !15810
  %sub102 = sub i32 %46, 1, !dbg !15810
  %conv103 = zext i32 %sub102 to i64, !dbg !15810
  %and104 = and i64 %conv103, 140737488355328, !dbg !15810
  %tobool105 = icmp ne i64 %and104, 0, !dbg !15810
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !15810

cond.true106:                                     ; preds = %cond.false101
  br label %cond.end463, !dbg !15810

cond.false107:                                    ; preds = %cond.false101
  %47 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %48 = load i32, i32* %47, align 4, !dbg !15810
  %sub108 = sub i32 %48, 1, !dbg !15810
  %conv109 = zext i32 %sub108 to i64, !dbg !15810
  %and110 = and i64 %conv109, 70368744177664, !dbg !15810
  %tobool111 = icmp ne i64 %and110, 0, !dbg !15810
  br i1 %tobool111, label %cond.true112, label %cond.false113, !dbg !15810

cond.true112:                                     ; preds = %cond.false107
  br label %cond.end461, !dbg !15810

cond.false113:                                    ; preds = %cond.false107
  %49 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %50 = load i32, i32* %49, align 4, !dbg !15810
  %sub114 = sub i32 %50, 1, !dbg !15810
  %conv115 = zext i32 %sub114 to i64, !dbg !15810
  %and116 = and i64 %conv115, 35184372088832, !dbg !15810
  %tobool117 = icmp ne i64 %and116, 0, !dbg !15810
  br i1 %tobool117, label %cond.true118, label %cond.false119, !dbg !15810

cond.true118:                                     ; preds = %cond.false113
  br label %cond.end459, !dbg !15810

cond.false119:                                    ; preds = %cond.false113
  %51 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %52 = load i32, i32* %51, align 4, !dbg !15810
  %sub120 = sub i32 %52, 1, !dbg !15810
  %conv121 = zext i32 %sub120 to i64, !dbg !15810
  %and122 = and i64 %conv121, 17592186044416, !dbg !15810
  %tobool123 = icmp ne i64 %and122, 0, !dbg !15810
  br i1 %tobool123, label %cond.true124, label %cond.false125, !dbg !15810

cond.true124:                                     ; preds = %cond.false119
  br label %cond.end457, !dbg !15810

cond.false125:                                    ; preds = %cond.false119
  %53 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %54 = load i32, i32* %53, align 4, !dbg !15810
  %sub126 = sub i32 %54, 1, !dbg !15810
  %conv127 = zext i32 %sub126 to i64, !dbg !15810
  %and128 = and i64 %conv127, 8796093022208, !dbg !15810
  %tobool129 = icmp ne i64 %and128, 0, !dbg !15810
  br i1 %tobool129, label %cond.true130, label %cond.false131, !dbg !15810

cond.true130:                                     ; preds = %cond.false125
  br label %cond.end455, !dbg !15810

cond.false131:                                    ; preds = %cond.false125
  %55 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %56 = load i32, i32* %55, align 4, !dbg !15810
  %sub132 = sub i32 %56, 1, !dbg !15810
  %conv133 = zext i32 %sub132 to i64, !dbg !15810
  %and134 = and i64 %conv133, 4398046511104, !dbg !15810
  %tobool135 = icmp ne i64 %and134, 0, !dbg !15810
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !15810

cond.true136:                                     ; preds = %cond.false131
  br label %cond.end453, !dbg !15810

cond.false137:                                    ; preds = %cond.false131
  %57 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %58 = load i32, i32* %57, align 4, !dbg !15810
  %sub138 = sub i32 %58, 1, !dbg !15810
  %conv139 = zext i32 %sub138 to i64, !dbg !15810
  %and140 = and i64 %conv139, 2199023255552, !dbg !15810
  %tobool141 = icmp ne i64 %and140, 0, !dbg !15810
  br i1 %tobool141, label %cond.true142, label %cond.false143, !dbg !15810

cond.true142:                                     ; preds = %cond.false137
  br label %cond.end451, !dbg !15810

cond.false143:                                    ; preds = %cond.false137
  %59 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %60 = load i32, i32* %59, align 4, !dbg !15810
  %sub144 = sub i32 %60, 1, !dbg !15810
  %conv145 = zext i32 %sub144 to i64, !dbg !15810
  %and146 = and i64 %conv145, 1099511627776, !dbg !15810
  %tobool147 = icmp ne i64 %and146, 0, !dbg !15810
  br i1 %tobool147, label %cond.true148, label %cond.false149, !dbg !15810

cond.true148:                                     ; preds = %cond.false143
  br label %cond.end449, !dbg !15810

cond.false149:                                    ; preds = %cond.false143
  %61 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %62 = load i32, i32* %61, align 4, !dbg !15810
  %sub150 = sub i32 %62, 1, !dbg !15810
  %conv151 = zext i32 %sub150 to i64, !dbg !15810
  %and152 = and i64 %conv151, 549755813888, !dbg !15810
  %tobool153 = icmp ne i64 %and152, 0, !dbg !15810
  br i1 %tobool153, label %cond.true154, label %cond.false155, !dbg !15810

cond.true154:                                     ; preds = %cond.false149
  br label %cond.end447, !dbg !15810

cond.false155:                                    ; preds = %cond.false149
  %63 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %64 = load i32, i32* %63, align 4, !dbg !15810
  %sub156 = sub i32 %64, 1, !dbg !15810
  %conv157 = zext i32 %sub156 to i64, !dbg !15810
  %and158 = and i64 %conv157, 274877906944, !dbg !15810
  %tobool159 = icmp ne i64 %and158, 0, !dbg !15810
  br i1 %tobool159, label %cond.true160, label %cond.false161, !dbg !15810

cond.true160:                                     ; preds = %cond.false155
  br label %cond.end445, !dbg !15810

cond.false161:                                    ; preds = %cond.false155
  %65 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %66 = load i32, i32* %65, align 4, !dbg !15810
  %sub162 = sub i32 %66, 1, !dbg !15810
  %conv163 = zext i32 %sub162 to i64, !dbg !15810
  %and164 = and i64 %conv163, 137438953472, !dbg !15810
  %tobool165 = icmp ne i64 %and164, 0, !dbg !15810
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !15810

cond.true166:                                     ; preds = %cond.false161
  br label %cond.end443, !dbg !15810

cond.false167:                                    ; preds = %cond.false161
  %67 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %68 = load i32, i32* %67, align 4, !dbg !15810
  %sub168 = sub i32 %68, 1, !dbg !15810
  %conv169 = zext i32 %sub168 to i64, !dbg !15810
  %and170 = and i64 %conv169, 68719476736, !dbg !15810
  %tobool171 = icmp ne i64 %and170, 0, !dbg !15810
  br i1 %tobool171, label %cond.true172, label %cond.false173, !dbg !15810

cond.true172:                                     ; preds = %cond.false167
  br label %cond.end441, !dbg !15810

cond.false173:                                    ; preds = %cond.false167
  %69 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %70 = load i32, i32* %69, align 4, !dbg !15810
  %sub174 = sub i32 %70, 1, !dbg !15810
  %conv175 = zext i32 %sub174 to i64, !dbg !15810
  %and176 = and i64 %conv175, 34359738368, !dbg !15810
  %tobool177 = icmp ne i64 %and176, 0, !dbg !15810
  br i1 %tobool177, label %cond.true178, label %cond.false179, !dbg !15810

cond.true178:                                     ; preds = %cond.false173
  br label %cond.end439, !dbg !15810

cond.false179:                                    ; preds = %cond.false173
  %71 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %72 = load i32, i32* %71, align 4, !dbg !15810
  %sub180 = sub i32 %72, 1, !dbg !15810
  %conv181 = zext i32 %sub180 to i64, !dbg !15810
  %and182 = and i64 %conv181, 17179869184, !dbg !15810
  %tobool183 = icmp ne i64 %and182, 0, !dbg !15810
  br i1 %tobool183, label %cond.true184, label %cond.false185, !dbg !15810

cond.true184:                                     ; preds = %cond.false179
  br label %cond.end437, !dbg !15810

cond.false185:                                    ; preds = %cond.false179
  %73 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %74 = load i32, i32* %73, align 4, !dbg !15810
  %sub186 = sub i32 %74, 1, !dbg !15810
  %conv187 = zext i32 %sub186 to i64, !dbg !15810
  %and188 = and i64 %conv187, 8589934592, !dbg !15810
  %tobool189 = icmp ne i64 %and188, 0, !dbg !15810
  br i1 %tobool189, label %cond.true190, label %cond.false191, !dbg !15810

cond.true190:                                     ; preds = %cond.false185
  br label %cond.end435, !dbg !15810

cond.false191:                                    ; preds = %cond.false185
  %75 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %76 = load i32, i32* %75, align 4, !dbg !15810
  %sub192 = sub i32 %76, 1, !dbg !15810
  %conv193 = zext i32 %sub192 to i64, !dbg !15810
  %and194 = and i64 %conv193, 4294967296, !dbg !15810
  %tobool195 = icmp ne i64 %and194, 0, !dbg !15810
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !15810

cond.true196:                                     ; preds = %cond.false191
  br label %cond.end433, !dbg !15810

cond.false197:                                    ; preds = %cond.false191
  %77 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %78 = load i32, i32* %77, align 4, !dbg !15810
  %sub198 = sub i32 %78, 1, !dbg !15810
  %conv199 = zext i32 %sub198 to i64, !dbg !15810
  %and200 = and i64 %conv199, 2147483648, !dbg !15810
  %tobool201 = icmp ne i64 %and200, 0, !dbg !15810
  br i1 %tobool201, label %cond.true202, label %cond.false203, !dbg !15810

cond.true202:                                     ; preds = %cond.false197
  br label %cond.end431, !dbg !15810

cond.false203:                                    ; preds = %cond.false197
  %79 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %80 = load i32, i32* %79, align 4, !dbg !15810
  %sub204 = sub i32 %80, 1, !dbg !15810
  %conv205 = zext i32 %sub204 to i64, !dbg !15810
  %and206 = and i64 %conv205, 1073741824, !dbg !15810
  %tobool207 = icmp ne i64 %and206, 0, !dbg !15810
  br i1 %tobool207, label %cond.true208, label %cond.false209, !dbg !15810

cond.true208:                                     ; preds = %cond.false203
  br label %cond.end429, !dbg !15810

cond.false209:                                    ; preds = %cond.false203
  %81 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %82 = load i32, i32* %81, align 4, !dbg !15810
  %sub210 = sub i32 %82, 1, !dbg !15810
  %conv211 = zext i32 %sub210 to i64, !dbg !15810
  %and212 = and i64 %conv211, 536870912, !dbg !15810
  %tobool213 = icmp ne i64 %and212, 0, !dbg !15810
  br i1 %tobool213, label %cond.true214, label %cond.false215, !dbg !15810

cond.true214:                                     ; preds = %cond.false209
  br label %cond.end427, !dbg !15810

cond.false215:                                    ; preds = %cond.false209
  %83 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %84 = load i32, i32* %83, align 4, !dbg !15810
  %sub216 = sub i32 %84, 1, !dbg !15810
  %conv217 = zext i32 %sub216 to i64, !dbg !15810
  %and218 = and i64 %conv217, 268435456, !dbg !15810
  %tobool219 = icmp ne i64 %and218, 0, !dbg !15810
  br i1 %tobool219, label %cond.true220, label %cond.false221, !dbg !15810

cond.true220:                                     ; preds = %cond.false215
  br label %cond.end425, !dbg !15810

cond.false221:                                    ; preds = %cond.false215
  %85 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %86 = load i32, i32* %85, align 4, !dbg !15810
  %sub222 = sub i32 %86, 1, !dbg !15810
  %conv223 = zext i32 %sub222 to i64, !dbg !15810
  %and224 = and i64 %conv223, 134217728, !dbg !15810
  %tobool225 = icmp ne i64 %and224, 0, !dbg !15810
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !15810

cond.true226:                                     ; preds = %cond.false221
  br label %cond.end423, !dbg !15810

cond.false227:                                    ; preds = %cond.false221
  %87 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %88 = load i32, i32* %87, align 4, !dbg !15810
  %sub228 = sub i32 %88, 1, !dbg !15810
  %conv229 = zext i32 %sub228 to i64, !dbg !15810
  %and230 = and i64 %conv229, 67108864, !dbg !15810
  %tobool231 = icmp ne i64 %and230, 0, !dbg !15810
  br i1 %tobool231, label %cond.true232, label %cond.false233, !dbg !15810

cond.true232:                                     ; preds = %cond.false227
  br label %cond.end421, !dbg !15810

cond.false233:                                    ; preds = %cond.false227
  %89 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %90 = load i32, i32* %89, align 4, !dbg !15810
  %sub234 = sub i32 %90, 1, !dbg !15810
  %conv235 = zext i32 %sub234 to i64, !dbg !15810
  %and236 = and i64 %conv235, 33554432, !dbg !15810
  %tobool237 = icmp ne i64 %and236, 0, !dbg !15810
  br i1 %tobool237, label %cond.true238, label %cond.false239, !dbg !15810

cond.true238:                                     ; preds = %cond.false233
  br label %cond.end419, !dbg !15810

cond.false239:                                    ; preds = %cond.false233
  %91 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %92 = load i32, i32* %91, align 4, !dbg !15810
  %sub240 = sub i32 %92, 1, !dbg !15810
  %conv241 = zext i32 %sub240 to i64, !dbg !15810
  %and242 = and i64 %conv241, 16777216, !dbg !15810
  %tobool243 = icmp ne i64 %and242, 0, !dbg !15810
  br i1 %tobool243, label %cond.true244, label %cond.false245, !dbg !15810

cond.true244:                                     ; preds = %cond.false239
  br label %cond.end417, !dbg !15810

cond.false245:                                    ; preds = %cond.false239
  %93 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %94 = load i32, i32* %93, align 4, !dbg !15810
  %sub246 = sub i32 %94, 1, !dbg !15810
  %conv247 = zext i32 %sub246 to i64, !dbg !15810
  %and248 = and i64 %conv247, 8388608, !dbg !15810
  %tobool249 = icmp ne i64 %and248, 0, !dbg !15810
  br i1 %tobool249, label %cond.true250, label %cond.false251, !dbg !15810

cond.true250:                                     ; preds = %cond.false245
  br label %cond.end415, !dbg !15810

cond.false251:                                    ; preds = %cond.false245
  %95 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %96 = load i32, i32* %95, align 4, !dbg !15810
  %sub252 = sub i32 %96, 1, !dbg !15810
  %conv253 = zext i32 %sub252 to i64, !dbg !15810
  %and254 = and i64 %conv253, 4194304, !dbg !15810
  %tobool255 = icmp ne i64 %and254, 0, !dbg !15810
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !15810

cond.true256:                                     ; preds = %cond.false251
  br label %cond.end413, !dbg !15810

cond.false257:                                    ; preds = %cond.false251
  %97 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %98 = load i32, i32* %97, align 4, !dbg !15810
  %sub258 = sub i32 %98, 1, !dbg !15810
  %conv259 = zext i32 %sub258 to i64, !dbg !15810
  %and260 = and i64 %conv259, 2097152, !dbg !15810
  %tobool261 = icmp ne i64 %and260, 0, !dbg !15810
  br i1 %tobool261, label %cond.true262, label %cond.false263, !dbg !15810

cond.true262:                                     ; preds = %cond.false257
  br label %cond.end411, !dbg !15810

cond.false263:                                    ; preds = %cond.false257
  %99 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %100 = load i32, i32* %99, align 4, !dbg !15810
  %sub264 = sub i32 %100, 1, !dbg !15810
  %conv265 = zext i32 %sub264 to i64, !dbg !15810
  %and266 = and i64 %conv265, 1048576, !dbg !15810
  %tobool267 = icmp ne i64 %and266, 0, !dbg !15810
  br i1 %tobool267, label %cond.true268, label %cond.false269, !dbg !15810

cond.true268:                                     ; preds = %cond.false263
  br label %cond.end409, !dbg !15810

cond.false269:                                    ; preds = %cond.false263
  %101 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %102 = load i32, i32* %101, align 4, !dbg !15810
  %sub270 = sub i32 %102, 1, !dbg !15810
  %conv271 = zext i32 %sub270 to i64, !dbg !15810
  %and272 = and i64 %conv271, 524288, !dbg !15810
  %tobool273 = icmp ne i64 %and272, 0, !dbg !15810
  br i1 %tobool273, label %cond.true274, label %cond.false275, !dbg !15810

cond.true274:                                     ; preds = %cond.false269
  br label %cond.end407, !dbg !15810

cond.false275:                                    ; preds = %cond.false269
  %103 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %104 = load i32, i32* %103, align 4, !dbg !15810
  %sub276 = sub i32 %104, 1, !dbg !15810
  %conv277 = zext i32 %sub276 to i64, !dbg !15810
  %and278 = and i64 %conv277, 262144, !dbg !15810
  %tobool279 = icmp ne i64 %and278, 0, !dbg !15810
  br i1 %tobool279, label %cond.true280, label %cond.false281, !dbg !15810

cond.true280:                                     ; preds = %cond.false275
  br label %cond.end405, !dbg !15810

cond.false281:                                    ; preds = %cond.false275
  %105 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %106 = load i32, i32* %105, align 4, !dbg !15810
  %sub282 = sub i32 %106, 1, !dbg !15810
  %conv283 = zext i32 %sub282 to i64, !dbg !15810
  %and284 = and i64 %conv283, 131072, !dbg !15810
  %tobool285 = icmp ne i64 %and284, 0, !dbg !15810
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !15810

cond.true286:                                     ; preds = %cond.false281
  br label %cond.end403, !dbg !15810

cond.false287:                                    ; preds = %cond.false281
  %107 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %108 = load i32, i32* %107, align 4, !dbg !15810
  %sub288 = sub i32 %108, 1, !dbg !15810
  %conv289 = zext i32 %sub288 to i64, !dbg !15810
  %and290 = and i64 %conv289, 65536, !dbg !15810
  %tobool291 = icmp ne i64 %and290, 0, !dbg !15810
  br i1 %tobool291, label %cond.true292, label %cond.false293, !dbg !15810

cond.true292:                                     ; preds = %cond.false287
  br label %cond.end401, !dbg !15810

cond.false293:                                    ; preds = %cond.false287
  %109 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %110 = load i32, i32* %109, align 4, !dbg !15810
  %sub294 = sub i32 %110, 1, !dbg !15810
  %conv295 = zext i32 %sub294 to i64, !dbg !15810
  %and296 = and i64 %conv295, 32768, !dbg !15810
  %tobool297 = icmp ne i64 %and296, 0, !dbg !15810
  br i1 %tobool297, label %cond.true298, label %cond.false299, !dbg !15810

cond.true298:                                     ; preds = %cond.false293
  br label %cond.end399, !dbg !15810

cond.false299:                                    ; preds = %cond.false293
  %111 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %112 = load i32, i32* %111, align 4, !dbg !15810
  %sub300 = sub i32 %112, 1, !dbg !15810
  %conv301 = zext i32 %sub300 to i64, !dbg !15810
  %and302 = and i64 %conv301, 16384, !dbg !15810
  %tobool303 = icmp ne i64 %and302, 0, !dbg !15810
  br i1 %tobool303, label %cond.true304, label %cond.false305, !dbg !15810

cond.true304:                                     ; preds = %cond.false299
  br label %cond.end397, !dbg !15810

cond.false305:                                    ; preds = %cond.false299
  %113 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %114 = load i32, i32* %113, align 4, !dbg !15810
  %sub306 = sub i32 %114, 1, !dbg !15810
  %conv307 = zext i32 %sub306 to i64, !dbg !15810
  %and308 = and i64 %conv307, 8192, !dbg !15810
  %tobool309 = icmp ne i64 %and308, 0, !dbg !15810
  br i1 %tobool309, label %cond.true310, label %cond.false311, !dbg !15810

cond.true310:                                     ; preds = %cond.false305
  br label %cond.end395, !dbg !15810

cond.false311:                                    ; preds = %cond.false305
  %115 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %116 = load i32, i32* %115, align 4, !dbg !15810
  %sub312 = sub i32 %116, 1, !dbg !15810
  %conv313 = zext i32 %sub312 to i64, !dbg !15810
  %and314 = and i64 %conv313, 4096, !dbg !15810
  %tobool315 = icmp ne i64 %and314, 0, !dbg !15810
  br i1 %tobool315, label %cond.true316, label %cond.false317, !dbg !15810

cond.true316:                                     ; preds = %cond.false311
  br label %cond.end393, !dbg !15810

cond.false317:                                    ; preds = %cond.false311
  %117 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %118 = load i32, i32* %117, align 4, !dbg !15810
  %sub318 = sub i32 %118, 1, !dbg !15810
  %conv319 = zext i32 %sub318 to i64, !dbg !15810
  %and320 = and i64 %conv319, 2048, !dbg !15810
  %tobool321 = icmp ne i64 %and320, 0, !dbg !15810
  br i1 %tobool321, label %cond.true322, label %cond.false323, !dbg !15810

cond.true322:                                     ; preds = %cond.false317
  br label %cond.end391, !dbg !15810

cond.false323:                                    ; preds = %cond.false317
  %119 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %120 = load i32, i32* %119, align 4, !dbg !15810
  %sub324 = sub i32 %120, 1, !dbg !15810
  %conv325 = zext i32 %sub324 to i64, !dbg !15810
  %and326 = and i64 %conv325, 1024, !dbg !15810
  %tobool327 = icmp ne i64 %and326, 0, !dbg !15810
  br i1 %tobool327, label %cond.true328, label %cond.false329, !dbg !15810

cond.true328:                                     ; preds = %cond.false323
  br label %cond.end389, !dbg !15810

cond.false329:                                    ; preds = %cond.false323
  %121 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %122 = load i32, i32* %121, align 4, !dbg !15810
  %sub330 = sub i32 %122, 1, !dbg !15810
  %conv331 = zext i32 %sub330 to i64, !dbg !15810
  %and332 = and i64 %conv331, 512, !dbg !15810
  %tobool333 = icmp ne i64 %and332, 0, !dbg !15810
  br i1 %tobool333, label %cond.true334, label %cond.false335, !dbg !15810

cond.true334:                                     ; preds = %cond.false329
  br label %cond.end387, !dbg !15810

cond.false335:                                    ; preds = %cond.false329
  %123 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %124 = load i32, i32* %123, align 4, !dbg !15810
  %sub336 = sub i32 %124, 1, !dbg !15810
  %conv337 = zext i32 %sub336 to i64, !dbg !15810
  %and338 = and i64 %conv337, 256, !dbg !15810
  %tobool339 = icmp ne i64 %and338, 0, !dbg !15810
  br i1 %tobool339, label %cond.true340, label %cond.false341, !dbg !15810

cond.true340:                                     ; preds = %cond.false335
  br label %cond.end385, !dbg !15810

cond.false341:                                    ; preds = %cond.false335
  %125 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %126 = load i32, i32* %125, align 4, !dbg !15810
  %sub342 = sub i32 %126, 1, !dbg !15810
  %conv343 = zext i32 %sub342 to i64, !dbg !15810
  %and344 = and i64 %conv343, 128, !dbg !15810
  %tobool345 = icmp ne i64 %and344, 0, !dbg !15810
  br i1 %tobool345, label %cond.true346, label %cond.false347, !dbg !15810

cond.true346:                                     ; preds = %cond.false341
  br label %cond.end383, !dbg !15810

cond.false347:                                    ; preds = %cond.false341
  %127 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %128 = load i32, i32* %127, align 4, !dbg !15810
  %sub348 = sub i32 %128, 1, !dbg !15810
  %conv349 = zext i32 %sub348 to i64, !dbg !15810
  %and350 = and i64 %conv349, 64, !dbg !15810
  %tobool351 = icmp ne i64 %and350, 0, !dbg !15810
  br i1 %tobool351, label %cond.true352, label %cond.false353, !dbg !15810

cond.true352:                                     ; preds = %cond.false347
  br label %cond.end381, !dbg !15810

cond.false353:                                    ; preds = %cond.false347
  %129 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %130 = load i32, i32* %129, align 4, !dbg !15810
  %sub354 = sub i32 %130, 1, !dbg !15810
  %conv355 = zext i32 %sub354 to i64, !dbg !15810
  %and356 = and i64 %conv355, 32, !dbg !15810
  %tobool357 = icmp ne i64 %and356, 0, !dbg !15810
  br i1 %tobool357, label %cond.true358, label %cond.false359, !dbg !15810

cond.true358:                                     ; preds = %cond.false353
  br label %cond.end379, !dbg !15810

cond.false359:                                    ; preds = %cond.false353
  %131 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %132 = load i32, i32* %131, align 4, !dbg !15810
  %sub360 = sub i32 %132, 1, !dbg !15810
  %conv361 = zext i32 %sub360 to i64, !dbg !15810
  %and362 = and i64 %conv361, 16, !dbg !15810
  %tobool363 = icmp ne i64 %and362, 0, !dbg !15810
  br i1 %tobool363, label %cond.true364, label %cond.false365, !dbg !15810

cond.true364:                                     ; preds = %cond.false359
  br label %cond.end377, !dbg !15810

cond.false365:                                    ; preds = %cond.false359
  %133 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %134 = load i32, i32* %133, align 4, !dbg !15810
  %sub366 = sub i32 %134, 1, !dbg !15810
  %conv367 = zext i32 %sub366 to i64, !dbg !15810
  %and368 = and i64 %conv367, 8, !dbg !15810
  %tobool369 = icmp ne i64 %and368, 0, !dbg !15810
  br i1 %tobool369, label %cond.true370, label %cond.false371, !dbg !15810

cond.true370:                                     ; preds = %cond.false365
  br label %cond.end, !dbg !15810

cond.false371:                                    ; preds = %cond.false365
  %135 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %136 = load i32, i32* %135, align 4, !dbg !15810
  %sub372 = sub i32 %136, 1, !dbg !15810
  %conv373 = zext i32 %sub372 to i64, !dbg !15810
  %and374 = and i64 %conv373, 4, !dbg !15810
  %tobool375 = icmp ne i64 %and374, 0, !dbg !15810
  %137 = zext i1 %tobool375 to i64, !dbg !15810
  %cond = select i1 %tobool375, i32 2, i32 1, !dbg !15810
  br label %cond.end, !dbg !15810

cond.end:                                         ; preds = %cond.false371, %cond.true370
  %cond376 = phi i32 [ 3, %cond.true370 ], [ %cond, %cond.false371 ], !dbg !15810
  br label %cond.end377, !dbg !15810

cond.end377:                                      ; preds = %cond.end, %cond.true364
  %cond378 = phi i32 [ 4, %cond.true364 ], [ %cond376, %cond.end ], !dbg !15810
  br label %cond.end379, !dbg !15810

cond.end379:                                      ; preds = %cond.end377, %cond.true358
  %cond380 = phi i32 [ 5, %cond.true358 ], [ %cond378, %cond.end377 ], !dbg !15810
  br label %cond.end381, !dbg !15810

cond.end381:                                      ; preds = %cond.end379, %cond.true352
  %cond382 = phi i32 [ 6, %cond.true352 ], [ %cond380, %cond.end379 ], !dbg !15810
  br label %cond.end383, !dbg !15810

cond.end383:                                      ; preds = %cond.end381, %cond.true346
  %cond384 = phi i32 [ 7, %cond.true346 ], [ %cond382, %cond.end381 ], !dbg !15810
  br label %cond.end385, !dbg !15810

cond.end385:                                      ; preds = %cond.end383, %cond.true340
  %cond386 = phi i32 [ 8, %cond.true340 ], [ %cond384, %cond.end383 ], !dbg !15810
  br label %cond.end387, !dbg !15810

cond.end387:                                      ; preds = %cond.end385, %cond.true334
  %cond388 = phi i32 [ 9, %cond.true334 ], [ %cond386, %cond.end385 ], !dbg !15810
  br label %cond.end389, !dbg !15810

cond.end389:                                      ; preds = %cond.end387, %cond.true328
  %cond390 = phi i32 [ 10, %cond.true328 ], [ %cond388, %cond.end387 ], !dbg !15810
  br label %cond.end391, !dbg !15810

cond.end391:                                      ; preds = %cond.end389, %cond.true322
  %cond392 = phi i32 [ 11, %cond.true322 ], [ %cond390, %cond.end389 ], !dbg !15810
  br label %cond.end393, !dbg !15810

cond.end393:                                      ; preds = %cond.end391, %cond.true316
  %cond394 = phi i32 [ 12, %cond.true316 ], [ %cond392, %cond.end391 ], !dbg !15810
  br label %cond.end395, !dbg !15810

cond.end395:                                      ; preds = %cond.end393, %cond.true310
  %cond396 = phi i32 [ 13, %cond.true310 ], [ %cond394, %cond.end393 ], !dbg !15810
  br label %cond.end397, !dbg !15810

cond.end397:                                      ; preds = %cond.end395, %cond.true304
  %cond398 = phi i32 [ 14, %cond.true304 ], [ %cond396, %cond.end395 ], !dbg !15810
  br label %cond.end399, !dbg !15810

cond.end399:                                      ; preds = %cond.end397, %cond.true298
  %cond400 = phi i32 [ 15, %cond.true298 ], [ %cond398, %cond.end397 ], !dbg !15810
  br label %cond.end401, !dbg !15810

cond.end401:                                      ; preds = %cond.end399, %cond.true292
  %cond402 = phi i32 [ 16, %cond.true292 ], [ %cond400, %cond.end399 ], !dbg !15810
  br label %cond.end403, !dbg !15810

cond.end403:                                      ; preds = %cond.end401, %cond.true286
  %cond404 = phi i32 [ 17, %cond.true286 ], [ %cond402, %cond.end401 ], !dbg !15810
  br label %cond.end405, !dbg !15810

cond.end405:                                      ; preds = %cond.end403, %cond.true280
  %cond406 = phi i32 [ 18, %cond.true280 ], [ %cond404, %cond.end403 ], !dbg !15810
  br label %cond.end407, !dbg !15810

cond.end407:                                      ; preds = %cond.end405, %cond.true274
  %cond408 = phi i32 [ 19, %cond.true274 ], [ %cond406, %cond.end405 ], !dbg !15810
  br label %cond.end409, !dbg !15810

cond.end409:                                      ; preds = %cond.end407, %cond.true268
  %cond410 = phi i32 [ 20, %cond.true268 ], [ %cond408, %cond.end407 ], !dbg !15810
  br label %cond.end411, !dbg !15810

cond.end411:                                      ; preds = %cond.end409, %cond.true262
  %cond412 = phi i32 [ 21, %cond.true262 ], [ %cond410, %cond.end409 ], !dbg !15810
  br label %cond.end413, !dbg !15810

cond.end413:                                      ; preds = %cond.end411, %cond.true256
  %cond414 = phi i32 [ 22, %cond.true256 ], [ %cond412, %cond.end411 ], !dbg !15810
  br label %cond.end415, !dbg !15810

cond.end415:                                      ; preds = %cond.end413, %cond.true250
  %cond416 = phi i32 [ 23, %cond.true250 ], [ %cond414, %cond.end413 ], !dbg !15810
  br label %cond.end417, !dbg !15810

cond.end417:                                      ; preds = %cond.end415, %cond.true244
  %cond418 = phi i32 [ 24, %cond.true244 ], [ %cond416, %cond.end415 ], !dbg !15810
  br label %cond.end419, !dbg !15810

cond.end419:                                      ; preds = %cond.end417, %cond.true238
  %cond420 = phi i32 [ 25, %cond.true238 ], [ %cond418, %cond.end417 ], !dbg !15810
  br label %cond.end421, !dbg !15810

cond.end421:                                      ; preds = %cond.end419, %cond.true232
  %cond422 = phi i32 [ 26, %cond.true232 ], [ %cond420, %cond.end419 ], !dbg !15810
  br label %cond.end423, !dbg !15810

cond.end423:                                      ; preds = %cond.end421, %cond.true226
  %cond424 = phi i32 [ 27, %cond.true226 ], [ %cond422, %cond.end421 ], !dbg !15810
  br label %cond.end425, !dbg !15810

cond.end425:                                      ; preds = %cond.end423, %cond.true220
  %cond426 = phi i32 [ 28, %cond.true220 ], [ %cond424, %cond.end423 ], !dbg !15810
  br label %cond.end427, !dbg !15810

cond.end427:                                      ; preds = %cond.end425, %cond.true214
  %cond428 = phi i32 [ 29, %cond.true214 ], [ %cond426, %cond.end425 ], !dbg !15810
  br label %cond.end429, !dbg !15810

cond.end429:                                      ; preds = %cond.end427, %cond.true208
  %cond430 = phi i32 [ 30, %cond.true208 ], [ %cond428, %cond.end427 ], !dbg !15810
  br label %cond.end431, !dbg !15810

cond.end431:                                      ; preds = %cond.end429, %cond.true202
  %cond432 = phi i32 [ 31, %cond.true202 ], [ %cond430, %cond.end429 ], !dbg !15810
  br label %cond.end433, !dbg !15810

cond.end433:                                      ; preds = %cond.end431, %cond.true196
  %cond434 = phi i32 [ 32, %cond.true196 ], [ %cond432, %cond.end431 ], !dbg !15810
  br label %cond.end435, !dbg !15810

cond.end435:                                      ; preds = %cond.end433, %cond.true190
  %cond436 = phi i32 [ 33, %cond.true190 ], [ %cond434, %cond.end433 ], !dbg !15810
  br label %cond.end437, !dbg !15810

cond.end437:                                      ; preds = %cond.end435, %cond.true184
  %cond438 = phi i32 [ 34, %cond.true184 ], [ %cond436, %cond.end435 ], !dbg !15810
  br label %cond.end439, !dbg !15810

cond.end439:                                      ; preds = %cond.end437, %cond.true178
  %cond440 = phi i32 [ 35, %cond.true178 ], [ %cond438, %cond.end437 ], !dbg !15810
  br label %cond.end441, !dbg !15810

cond.end441:                                      ; preds = %cond.end439, %cond.true172
  %cond442 = phi i32 [ 36, %cond.true172 ], [ %cond440, %cond.end439 ], !dbg !15810
  br label %cond.end443, !dbg !15810

cond.end443:                                      ; preds = %cond.end441, %cond.true166
  %cond444 = phi i32 [ 37, %cond.true166 ], [ %cond442, %cond.end441 ], !dbg !15810
  br label %cond.end445, !dbg !15810

cond.end445:                                      ; preds = %cond.end443, %cond.true160
  %cond446 = phi i32 [ 38, %cond.true160 ], [ %cond444, %cond.end443 ], !dbg !15810
  br label %cond.end447, !dbg !15810

cond.end447:                                      ; preds = %cond.end445, %cond.true154
  %cond448 = phi i32 [ 39, %cond.true154 ], [ %cond446, %cond.end445 ], !dbg !15810
  br label %cond.end449, !dbg !15810

cond.end449:                                      ; preds = %cond.end447, %cond.true148
  %cond450 = phi i32 [ 40, %cond.true148 ], [ %cond448, %cond.end447 ], !dbg !15810
  br label %cond.end451, !dbg !15810

cond.end451:                                      ; preds = %cond.end449, %cond.true142
  %cond452 = phi i32 [ 41, %cond.true142 ], [ %cond450, %cond.end449 ], !dbg !15810
  br label %cond.end453, !dbg !15810

cond.end453:                                      ; preds = %cond.end451, %cond.true136
  %cond454 = phi i32 [ 42, %cond.true136 ], [ %cond452, %cond.end451 ], !dbg !15810
  br label %cond.end455, !dbg !15810

cond.end455:                                      ; preds = %cond.end453, %cond.true130
  %cond456 = phi i32 [ 43, %cond.true130 ], [ %cond454, %cond.end453 ], !dbg !15810
  br label %cond.end457, !dbg !15810

cond.end457:                                      ; preds = %cond.end455, %cond.true124
  %cond458 = phi i32 [ 44, %cond.true124 ], [ %cond456, %cond.end455 ], !dbg !15810
  br label %cond.end459, !dbg !15810

cond.end459:                                      ; preds = %cond.end457, %cond.true118
  %cond460 = phi i32 [ 45, %cond.true118 ], [ %cond458, %cond.end457 ], !dbg !15810
  br label %cond.end461, !dbg !15810

cond.end461:                                      ; preds = %cond.end459, %cond.true112
  %cond462 = phi i32 [ 46, %cond.true112 ], [ %cond460, %cond.end459 ], !dbg !15810
  br label %cond.end463, !dbg !15810

cond.end463:                                      ; preds = %cond.end461, %cond.true106
  %cond464 = phi i32 [ 47, %cond.true106 ], [ %cond462, %cond.end461 ], !dbg !15810
  br label %cond.end465, !dbg !15810

cond.end465:                                      ; preds = %cond.end463, %cond.true100
  %cond466 = phi i32 [ 48, %cond.true100 ], [ %cond464, %cond.end463 ], !dbg !15810
  br label %cond.end467, !dbg !15810

cond.end467:                                      ; preds = %cond.end465, %cond.true94
  %cond468 = phi i32 [ 49, %cond.true94 ], [ %cond466, %cond.end465 ], !dbg !15810
  br label %cond.end469, !dbg !15810

cond.end469:                                      ; preds = %cond.end467, %cond.true88
  %cond470 = phi i32 [ 50, %cond.true88 ], [ %cond468, %cond.end467 ], !dbg !15810
  br label %cond.end471, !dbg !15810

cond.end471:                                      ; preds = %cond.end469, %cond.true82
  %cond472 = phi i32 [ 51, %cond.true82 ], [ %cond470, %cond.end469 ], !dbg !15810
  br label %cond.end473, !dbg !15810

cond.end473:                                      ; preds = %cond.end471, %cond.true76
  %cond474 = phi i32 [ 52, %cond.true76 ], [ %cond472, %cond.end471 ], !dbg !15810
  br label %cond.end475, !dbg !15810

cond.end475:                                      ; preds = %cond.end473, %cond.true70
  %cond476 = phi i32 [ 53, %cond.true70 ], [ %cond474, %cond.end473 ], !dbg !15810
  br label %cond.end477, !dbg !15810

cond.end477:                                      ; preds = %cond.end475, %cond.true64
  %cond478 = phi i32 [ 54, %cond.true64 ], [ %cond476, %cond.end475 ], !dbg !15810
  br label %cond.end479, !dbg !15810

cond.end479:                                      ; preds = %cond.end477, %cond.true58
  %cond480 = phi i32 [ 55, %cond.true58 ], [ %cond478, %cond.end477 ], !dbg !15810
  br label %cond.end481, !dbg !15810

cond.end481:                                      ; preds = %cond.end479, %cond.true52
  %cond482 = phi i32 [ 56, %cond.true52 ], [ %cond480, %cond.end479 ], !dbg !15810
  br label %cond.end483, !dbg !15810

cond.end483:                                      ; preds = %cond.end481, %cond.true46
  %cond484 = phi i32 [ 57, %cond.true46 ], [ %cond482, %cond.end481 ], !dbg !15810
  br label %cond.end485, !dbg !15810

cond.end485:                                      ; preds = %cond.end483, %cond.true40
  %cond486 = phi i32 [ 58, %cond.true40 ], [ %cond484, %cond.end483 ], !dbg !15810
  br label %cond.end487, !dbg !15810

cond.end487:                                      ; preds = %cond.end485, %cond.true34
  %cond488 = phi i32 [ 59, %cond.true34 ], [ %cond486, %cond.end485 ], !dbg !15810
  br label %cond.end489, !dbg !15810

cond.end489:                                      ; preds = %cond.end487, %cond.true28
  %cond490 = phi i32 [ 60, %cond.true28 ], [ %cond488, %cond.end487 ], !dbg !15810
  br label %cond.end491, !dbg !15810

cond.end491:                                      ; preds = %cond.end489, %cond.true22
  %cond492 = phi i32 [ 61, %cond.true22 ], [ %cond490, %cond.end489 ], !dbg !15810
  br label %cond.end493, !dbg !15810

cond.end493:                                      ; preds = %cond.end491, %cond.true16
  %cond494 = phi i32 [ 62, %cond.true16 ], [ %cond492, %cond.end491 ], !dbg !15810
  br label %cond.end495, !dbg !15810

cond.end495:                                      ; preds = %cond.end493, %cond.true10
  %cond496 = phi i32 [ 63, %cond.true10 ], [ %cond494, %cond.end493 ], !dbg !15810
  br label %cond.end497, !dbg !15810

cond.end497:                                      ; preds = %cond.end495, %cond.true7
  %cond498 = phi i32 [ 0, %cond.true7 ], [ %cond496, %cond.end495 ], !dbg !15810
  br label %cond.end500, !dbg !15810

cond.false499:                                    ; preds = %cond.true2
  br label %cond.end500, !dbg !15810

cond.end500:                                      ; preds = %cond.false499, %cond.end497
  %cond501 = phi i32 [ %cond498, %cond.end497 ], [ -1, %cond.false499 ], !dbg !15810
  br label %cond.end504, !dbg !15810

cond.false502:                                    ; preds = %cond.false
  %138 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %139 = load i32, i32* %138, align 4, !dbg !15810
  %sub503 = sub i32 %139, 1, !dbg !15810
  %call = call i32 @__ilog2_u32(i32 %sub503) #14, !dbg !15810
  br label %cond.end504, !dbg !15810

cond.end504:                                      ; preds = %cond.false502, %cond.end500
  %cond505 = phi i32 [ %cond501, %cond.end500 ], [ %call, %cond.false502 ], !dbg !15810
  %add = add i32 %cond505, 1, !dbg !15810
  %sh_prom = zext i32 %add to i64, !dbg !15810
  %shl = shl i64 1, %sh_prom, !dbg !15810
  br label %cond.end506, !dbg !15810

cond.end506:                                      ; preds = %cond.end504, %cond.true1
  %cond507 = phi i64 [ 1, %cond.true1 ], [ %shl, %cond.end504 ], !dbg !15810
  br label %cond.end511, !dbg !15810

cond.false508:                                    ; preds = %entry
  %140 = load i32*, i32** %num_streams.addr, align 8, !dbg !15810
  %141 = load i32, i32* %140, align 4, !dbg !15810
  %conv509 = zext i32 %141 to i64, !dbg !15810
  %call510 = call i64 @__roundup_pow_of_two(i64 %conv509) #14, !dbg !15810
  br label %cond.end511, !dbg !15810

cond.end511:                                      ; preds = %cond.false508, %cond.end506
  %cond512 = phi i64 [ %cond507, %cond.end506 ], [ %call510, %cond.false508 ], !dbg !15810
  %conv513 = trunc i64 %cond512 to i32, !dbg !15810
  %142 = load i32*, i32** %num_stream_ctxs.addr, align 8, !dbg !15811
  store i32 %conv513, i32* %142, align 4, !dbg !15812
  %143 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15813
  %hcc_params = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %143, i32 0, i32 10, !dbg !15813
  %144 = load i32, i32* %hcc_params, align 4, !dbg !15813
  %shr = lshr i32 %144, 12, !dbg !15813
  %and514 = and i32 %shr, 15, !dbg !15813
  %add515 = add i32 %and514, 1, !dbg !15813
  %shl516 = shl i32 1, %add515, !dbg !15813
  store i32 %shl516, i32* %max_streams, align 4, !dbg !15814
  %145 = load i32*, i32** %num_stream_ctxs.addr, align 8, !dbg !15815
  %146 = load i32, i32* %145, align 4, !dbg !15817
  %147 = load i32, i32* %max_streams, align 4, !dbg !15818
  %cmp517 = icmp ugt i32 %146, %147, !dbg !15819
  br i1 %cmp517, label %if.then, label %if.end, !dbg !15820

if.then:                                          ; preds = %cond.end511
  %148 = load i32, i32* %max_streams, align 4, !dbg !15821
  %149 = load i32*, i32** %num_stream_ctxs.addr, align 8, !dbg !15823
  store i32 %148, i32* %149, align 4, !dbg !15824
  %150 = load i32, i32* %max_streams, align 4, !dbg !15825
  %151 = load i32*, i32** %num_streams.addr, align 8, !dbg !15826
  store i32 %150, i32* %151, align 4, !dbg !15827
  br label %if.end, !dbg !15828

if.end:                                           ; preds = %if.then, %cond.end511
  ret void, !dbg !15829
}

; Function Attrs: noredzone
declare dso_local %struct.xhci_stream_info* @xhci_alloc_stream_info(%struct.xhci_hcd*, i32, i32, i32, i32) #3

; Function Attrs: noredzone
declare dso_local void @xhci_setup_streams_ep_input_ctx(%struct.xhci_hcd*, %struct.xhci_ep_ctx*, %struct.xhci_stream_info*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_debugfs_create_stream_files(%struct.xhci_hcd* %xhci, %struct.xhci_virt_device* %virt_dev, i32 %ep_index) #1 !dbg !15830 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %virt_dev.addr = alloca %struct.xhci_virt_device*, align 8
  %ep_index.addr = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !15831, metadata !DIExpression()), !dbg !15832
  store %struct.xhci_virt_device* %virt_dev, %struct.xhci_virt_device** %virt_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev.addr, metadata !15833, metadata !DIExpression()), !dbg !15834
  store i32 %ep_index, i32* %ep_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep_index.addr, metadata !15835, metadata !DIExpression()), !dbg !15836
  ret void, !dbg !15837
}

; Function Attrs: noredzone
declare dso_local void @xhci_free_stream_info(%struct.xhci_hcd*, %struct.xhci_stream_info*) #3

; Function Attrs: noredzone
declare dso_local void @xhci_endpoint_zero(%struct.xhci_hcd*, %struct.xhci_virt_device*, %struct.usb_host_endpoint*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_check_streams_endpoint(%struct.xhci_hcd* %xhci, %struct.usb_device* %udev, %struct.usb_host_endpoint* %ep, i32 %slot_id) #1 !dbg !15838 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %ep.addr = alloca %struct.usb_host_endpoint*, align 8
  %slot_id.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %ep_index = alloca i32, align 4
  %ep_state = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !15841, metadata !DIExpression()), !dbg !15842
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !15843, metadata !DIExpression()), !dbg !15844
  store %struct.usb_host_endpoint* %ep, %struct.usb_host_endpoint** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep.addr, metadata !15845, metadata !DIExpression()), !dbg !15846
  store i32 %slot_id, i32* %slot_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slot_id.addr, metadata !15847, metadata !DIExpression()), !dbg !15848
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15849, metadata !DIExpression()), !dbg !15850
  call void @llvm.dbg.declare(metadata i32* %ep_index, metadata !15851, metadata !DIExpression()), !dbg !15852
  call void @llvm.dbg.declare(metadata i32* %ep_state, metadata !15853, metadata !DIExpression()), !dbg !15854
  %0 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15855
  %tobool = icmp ne %struct.usb_host_endpoint* %0, null, !dbg !15855
  br i1 %tobool, label %if.end, label %if.then, !dbg !15857

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !15858
  br label %return, !dbg !15858

if.end:                                           ; preds = %entry
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15859
  %call = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %1) #11, !dbg !15860
  %2 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !15861
  %3 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15862
  %call1 = call i32 @xhci_check_args(%struct.usb_hcd* %call, %struct.usb_device* %2, %struct.usb_host_endpoint* %3, i32 1, i1 zeroext true, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.xhci_check_streams_endpoint, i64 0, i64 0)) #11, !dbg !15863
  store i32 %call1, i32* %ret, align 4, !dbg !15864
  %4 = load i32, i32* %ret, align 4, !dbg !15865
  %cmp = icmp sle i32 %4, 0, !dbg !15867
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !15868

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !15869
  br label %return, !dbg !15869

if.end3:                                          ; preds = %if.end
  %5 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15870
  %ss_ep_comp = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %5, i32 0, i32 1, !dbg !15872
  %call4 = call i32 @usb_ss_max_streams(%struct.usb_ss_ep_comp_descriptor* %ss_ep_comp) #11, !dbg !15873
  %cmp5 = icmp eq i32 %call4, 0, !dbg !15874
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !15875

if.then6:                                         ; preds = %if.end3
  %6 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15876
  %call7 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %6) #11, !dbg !15876
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call7, i32 0, i32 0, !dbg !15876
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !15876
  %7 = load %struct.device*, %struct.device** %controller, align 8, !dbg !15876
  %8 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15876
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %8, i32 0, i32 0, !dbg !15876
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc, i32 0, i32 2, !dbg !15876
  %9 = load i8, i8* %bEndpointAddress, align 2, !dbg !15876
  %conv = zext i8 %9 to i32, !dbg !15876
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %7, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.106, i64 0, i64 0), i32 %conv) #12, !dbg !15876
  store i32 -22, i32* %retval, align 4, !dbg !15878
  br label %return, !dbg !15878

if.end8:                                          ; preds = %if.end3
  %10 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15879
  %desc9 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %10, i32 0, i32 0, !dbg !15880
  %call10 = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc9) #11, !dbg !15881
  store i32 %call10, i32* %ep_index, align 4, !dbg !15882
  %11 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15883
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %11, i32 0, i32 41, !dbg !15884
  %12 = load i32, i32* %slot_id.addr, align 4, !dbg !15885
  %idxprom = zext i32 %12 to i64, !dbg !15883
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !15883
  %13 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !15883
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %13, i32 0, i32 3, !dbg !15886
  %14 = load i32, i32* %ep_index, align 4, !dbg !15887
  %idxprom11 = zext i32 %14 to i64, !dbg !15883
  %arrayidx12 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom11, !dbg !15883
  %ep_state13 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx12, i32 0, i32 3, !dbg !15888
  %15 = load i32, i32* %ep_state13, align 8, !dbg !15888
  store i32 %15, i32* %ep_state, align 4, !dbg !15889
  %16 = load i32, i32* %ep_state, align 4, !dbg !15890
  %and = and i32 %16, 16, !dbg !15892
  %tobool14 = icmp ne i32 %and, 0, !dbg !15892
  br i1 %tobool14, label %if.then17, label %lor.lhs.false, !dbg !15893

lor.lhs.false:                                    ; preds = %if.end8
  %17 = load i32, i32* %ep_state, align 4, !dbg !15894
  %and15 = and i32 %17, 8, !dbg !15895
  %tobool16 = icmp ne i32 %and15, 0, !dbg !15895
  br i1 %tobool16, label %if.then17, label %if.end27, !dbg !15896

if.then17:                                        ; preds = %lor.lhs.false, %if.end8
  %18 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15897
  %call18 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %18) #11, !dbg !15897
  %self19 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call18, i32 0, i32 0, !dbg !15897
  %controller20 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self19, i32 0, i32 0, !dbg !15897
  %19 = load %struct.device*, %struct.device** %controller20, align 8, !dbg !15897
  %20 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15897
  %desc21 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %20, i32 0, i32 0, !dbg !15897
  %bEndpointAddress22 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc21, i32 0, i32 2, !dbg !15897
  %21 = load i8, i8* %bEndpointAddress22, align 2, !dbg !15897
  %conv23 = zext i8 %21 to i32, !dbg !15897
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %19, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.107, i64 0, i64 0), i32 %conv23) #12, !dbg !15897
  %22 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15899
  %call24 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %22) #11, !dbg !15899
  %self25 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call24, i32 0, i32 0, !dbg !15899
  %controller26 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self25, i32 0, i32 0, !dbg !15899
  %23 = load %struct.device*, %struct.device** %controller26, align 8, !dbg !15899
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %23, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.108, i64 0, i64 0)) #12, !dbg !15899
  store i32 -22, i32* %retval, align 4, !dbg !15900
  br label %return, !dbg !15900

if.end27:                                         ; preds = %lor.lhs.false
  %24 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15901
  %devs28 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %24, i32 0, i32 41, !dbg !15903
  %25 = load i32, i32* %slot_id.addr, align 4, !dbg !15904
  %idxprom29 = zext i32 %25 to i64, !dbg !15901
  %arrayidx30 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs28, i64 0, i64 %idxprom29, !dbg !15901
  %26 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx30, align 8, !dbg !15901
  %eps31 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %26, i32 0, i32 3, !dbg !15905
  %27 = load i32, i32* %ep_index, align 4, !dbg !15906
  %idxprom32 = zext i32 %27 to i64, !dbg !15901
  %arrayidx33 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps31, i64 0, i64 %idxprom32, !dbg !15901
  %ring = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx33, i32 0, i32 0, !dbg !15907
  %28 = load %struct.xhci_ring*, %struct.xhci_ring** %ring, align 8, !dbg !15907
  %td_list = getelementptr inbounds %struct.xhci_ring, %struct.xhci_ring* %28, i32 0, i32 6, !dbg !15908
  %call34 = call i32 @list_empty(%struct.list_head* %td_list) #11, !dbg !15909
  %tobool35 = icmp ne i32 %call34, 0, !dbg !15909
  br i1 %tobool35, label %if.end43, label %if.then36, !dbg !15910

if.then36:                                        ; preds = %if.end27
  %29 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !15911
  %call37 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %29) #11, !dbg !15911
  %self38 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call37, i32 0, i32 0, !dbg !15911
  %controller39 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self38, i32 0, i32 0, !dbg !15911
  %30 = load %struct.device*, %struct.device** %controller39, align 8, !dbg !15911
  %31 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15911
  %desc40 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %31, i32 0, i32 0, !dbg !15911
  %bEndpointAddress41 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc40, i32 0, i32 2, !dbg !15911
  %32 = load i8, i8* %bEndpointAddress41, align 2, !dbg !15911
  %conv42 = zext i8 %32 to i32, !dbg !15911
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %30, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.109, i64 0, i64 0), i32 %conv42) #12, !dbg !15911
  store i32 -22, i32* %retval, align 4, !dbg !15913
  br label %return, !dbg !15913

if.end43:                                         ; preds = %if.end27
  store i32 0, i32* %retval, align 4, !dbg !15914
  br label %return, !dbg !15914

return:                                           ; preds = %if.end43, %if.then36, %if.then17, %if.then6, %if.then2, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !15915
  ret i32 %33, !dbg !15915
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_ss_max_streams(%struct.usb_ss_ep_comp_descriptor* %comp) #1 !dbg !15916 {
entry:
  %retval = alloca i32, align 4
  %comp.addr = alloca %struct.usb_ss_ep_comp_descriptor*, align 8
  %max_streams = alloca i32, align 4
  store %struct.usb_ss_ep_comp_descriptor* %comp, %struct.usb_ss_ep_comp_descriptor** %comp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_ss_ep_comp_descriptor** %comp.addr, metadata !15921, metadata !DIExpression()), !dbg !15922
  call void @llvm.dbg.declare(metadata i32* %max_streams, metadata !15923, metadata !DIExpression()), !dbg !15924
  %0 = load %struct.usb_ss_ep_comp_descriptor*, %struct.usb_ss_ep_comp_descriptor** %comp.addr, align 8, !dbg !15925
  %tobool = icmp ne %struct.usb_ss_ep_comp_descriptor* %0, null, !dbg !15925
  br i1 %tobool, label %if.end, label %if.then, !dbg !15927

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15928
  br label %return, !dbg !15928

if.end:                                           ; preds = %entry
  %1 = load %struct.usb_ss_ep_comp_descriptor*, %struct.usb_ss_ep_comp_descriptor** %comp.addr, align 8, !dbg !15929
  %bmAttributes = getelementptr inbounds %struct.usb_ss_ep_comp_descriptor, %struct.usb_ss_ep_comp_descriptor* %1, i32 0, i32 3, !dbg !15930
  %2 = load i8, i8* %bmAttributes, align 1, !dbg !15930
  %conv = zext i8 %2 to i32, !dbg !15929
  %and = and i32 %conv, 31, !dbg !15931
  store i32 %and, i32* %max_streams, align 4, !dbg !15932
  %3 = load i32, i32* %max_streams, align 4, !dbg !15933
  %tobool1 = icmp ne i32 %3, 0, !dbg !15933
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !15935

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15936
  br label %return, !dbg !15936

if.end3:                                          ; preds = %if.end
  %4 = load i32, i32* %max_streams, align 4, !dbg !15937
  %shl = shl i32 1, %4, !dbg !15938
  store i32 %shl, i32* %max_streams, align 4, !dbg !15939
  %5 = load i32, i32* %max_streams, align 4, !dbg !15940
  store i32 %5, i32* %retval, align 4, !dbg !15941
  br label %return, !dbg !15941

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !15942
  ret i32 %6, !dbg !15942
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u32(i32 %n) #10 !dbg !15943 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !7946, metadata !DIExpression()), !dbg !15946
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !7952, metadata !DIExpression()), !dbg !15948
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15949, metadata !DIExpression()), !dbg !15950
  %0 = load i32, i32* %n.addr, align 4, !dbg !15951
  store i32 %0, i32* %x.addr.i, align 4
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !15952
  %2 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %1, i32 -1) #7, !dbg !15953, !srcloc !7959
  store i32 %2, i32* %r.i, align 4, !dbg !15953
  %3 = load i32, i32* %r.i, align 4, !dbg !15954
  %add.i = add i32 %3, 1, !dbg !15955
  %sub = sub i32 %add.i, 1, !dbg !15956
  ret i32 %sub, !dbg !15957
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__roundup_pow_of_two(i64 %n) #10 !dbg !15958 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15961, metadata !DIExpression()), !dbg !15962
  %0 = load i64, i64* %n.addr, align 8, !dbg !15963
  %sub = sub i64 %0, 1, !dbg !15964
  %call = call i32 @fls_long(i64 %sub) #11, !dbg !15965
  %sh_prom = zext i32 %call to i64, !dbg !15966
  %shl = shl i64 1, %sh_prom, !dbg !15966
  ret i64 %shl, !dbg !15967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fls_long(i64 %l) #1 !dbg !15968 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13918, metadata !DIExpression()), !dbg !15972
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13924, metadata !DIExpression()), !dbg !15974
  %l.addr = alloca i64, align 8
  store i64 %l, i64* %l.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %l.addr, metadata !15975, metadata !DIExpression()), !dbg !15976
  %0 = load i64, i64* %l.addr, align 8, !dbg !15977
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !15974
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !15978
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !15979
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #7, !dbg !15978, !srcloc !13951
  store i32 %3, i32* %bitpos.i, align 4, !dbg !15978
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !15980
  %add.i = add i32 %4, 1, !dbg !15981
  ret i32 %add.i, !dbg !15982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_calculate_no_streams_bitmask(%struct.xhci_hcd* %xhci, %struct.usb_device* %udev, %struct.usb_host_endpoint** %eps, i32 %num_eps) #1 !dbg !15983 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %eps.addr = alloca %struct.usb_host_endpoint**, align 8
  %num_eps.addr = alloca i32, align 4
  %changed_ep_bitmask = alloca i32, align 4
  %slot_id = alloca i32, align 4
  %ep_index = alloca i32, align 4
  %ep_state = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !15986, metadata !DIExpression()), !dbg !15987
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !15988, metadata !DIExpression()), !dbg !15989
  store %struct.usb_host_endpoint** %eps, %struct.usb_host_endpoint*** %eps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint*** %eps.addr, metadata !15990, metadata !DIExpression()), !dbg !15991
  store i32 %num_eps, i32* %num_eps.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_eps.addr, metadata !15992, metadata !DIExpression()), !dbg !15993
  call void @llvm.dbg.declare(metadata i32* %changed_ep_bitmask, metadata !15994, metadata !DIExpression()), !dbg !15995
  store i32 0, i32* %changed_ep_bitmask, align 4, !dbg !15995
  call void @llvm.dbg.declare(metadata i32* %slot_id, metadata !15996, metadata !DIExpression()), !dbg !15997
  call void @llvm.dbg.declare(metadata i32* %ep_index, metadata !15998, metadata !DIExpression()), !dbg !15999
  call void @llvm.dbg.declare(metadata i32* %ep_state, metadata !16000, metadata !DIExpression()), !dbg !16001
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16002, metadata !DIExpression()), !dbg !16003
  %0 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16004
  %slot_id1 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 44, !dbg !16005
  %1 = load i32, i32* %slot_id1, align 8, !dbg !16005
  store i32 %1, i32* %slot_id, align 4, !dbg !16006
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16007
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %2, i32 0, i32 41, !dbg !16009
  %3 = load i32, i32* %slot_id, align 4, !dbg !16010
  %idxprom = zext i32 %3 to i64, !dbg !16007
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !16007
  %4 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !16007
  %tobool = icmp ne %struct.xhci_virt_device* %4, null, !dbg !16007
  br i1 %tobool, label %if.end, label %if.then, !dbg !16011

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16012
  br label %return, !dbg !16012

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !16013
  br label %for.cond, !dbg !16015

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !16016
  %6 = load i32, i32* %num_eps.addr, align 4, !dbg !16018
  %cmp = icmp ult i32 %5, %6, !dbg !16019
  br i1 %cmp, label %for.body, label %for.end, !dbg !16020

for.body:                                         ; preds = %for.cond
  %7 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !16021
  %8 = load i32, i32* %i, align 4, !dbg !16023
  %idxprom2 = sext i32 %8 to i64, !dbg !16021
  %arrayidx3 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %7, i64 %idxprom2, !dbg !16021
  %9 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx3, align 8, !dbg !16021
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %9, i32 0, i32 0, !dbg !16024
  %call = call i32 @xhci_get_endpoint_index(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !16025
  store i32 %call, i32* %ep_index, align 4, !dbg !16026
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16027
  %devs4 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %10, i32 0, i32 41, !dbg !16028
  %11 = load i32, i32* %slot_id, align 4, !dbg !16029
  %idxprom5 = zext i32 %11 to i64, !dbg !16027
  %arrayidx6 = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs4, i64 0, i64 %idxprom5, !dbg !16027
  %12 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx6, align 8, !dbg !16027
  %eps7 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %12, i32 0, i32 3, !dbg !16030
  %13 = load i32, i32* %ep_index, align 4, !dbg !16031
  %idxprom8 = zext i32 %13 to i64, !dbg !16027
  %arrayidx9 = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps7, i64 0, i64 %idxprom8, !dbg !16027
  %ep_state10 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %arrayidx9, i32 0, i32 3, !dbg !16032
  %14 = load i32, i32* %ep_state10, align 8, !dbg !16032
  store i32 %14, i32* %ep_state, align 4, !dbg !16033
  %15 = load i32, i32* %ep_state, align 4, !dbg !16034
  %and = and i32 %15, 32, !dbg !16036
  %tobool11 = icmp ne i32 %and, 0, !dbg !16036
  br i1 %tobool11, label %if.then12, label %if.end17, !dbg !16037

if.then12:                                        ; preds = %for.body
  %16 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16038
  %call13 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %16) #11, !dbg !16038
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call13, i32 0, i32 0, !dbg !16038
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !16038
  %17 = load %struct.device*, %struct.device** %controller, align 8, !dbg !16038
  %18 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !16038
  %19 = load i32, i32* %i, align 4, !dbg !16038
  %idxprom14 = sext i32 %19 to i64, !dbg !16038
  %arrayidx15 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %18, i64 %idxprom14, !dbg !16038
  %20 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx15, align 8, !dbg !16038
  %desc16 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %20, i32 0, i32 0, !dbg !16038
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc16, i32 0, i32 2, !dbg !16038
  %21 = load i8, i8* %bEndpointAddress, align 2, !dbg !16038
  %conv = zext i8 %21 to i32, !dbg !16038
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %17, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.110, i64 0, i64 0), i32 %conv) #12, !dbg !16038
  store i32 0, i32* %retval, align 4, !dbg !16040
  br label %return, !dbg !16040

if.end17:                                         ; preds = %for.body
  %22 = load i32, i32* %ep_state, align 4, !dbg !16041
  %and18 = and i32 %22, 16, !dbg !16043
  %tobool19 = icmp ne i32 %and18, 0, !dbg !16043
  br i1 %tobool19, label %if.end34, label %land.lhs.true, !dbg !16044

land.lhs.true:                                    ; preds = %if.end17
  %23 = load i32, i32* %ep_state, align 4, !dbg !16045
  %and20 = and i32 %23, 8, !dbg !16046
  %tobool21 = icmp ne i32 %and20, 0, !dbg !16046
  br i1 %tobool21, label %if.end34, label %if.then22, !dbg !16047

if.then22:                                        ; preds = %land.lhs.true
  %24 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16048
  %call23 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %24) #11, !dbg !16048
  %self24 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call23, i32 0, i32 0, !dbg !16048
  %controller25 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self24, i32 0, i32 0, !dbg !16048
  %25 = load %struct.device*, %struct.device** %controller25, align 8, !dbg !16048
  %26 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !16048
  %27 = load i32, i32* %i, align 4, !dbg !16048
  %idxprom26 = sext i32 %27 to i64, !dbg !16048
  %arrayidx27 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %26, i64 %idxprom26, !dbg !16048
  %28 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx27, align 8, !dbg !16048
  %desc28 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %28, i32 0, i32 0, !dbg !16048
  %bEndpointAddress29 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc28, i32 0, i32 2, !dbg !16048
  %29 = load i8, i8* %bEndpointAddress29, align 2, !dbg !16048
  %conv30 = zext i8 %29 to i32, !dbg !16048
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %25, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.111, i64 0, i64 0), i32 %conv30) #12, !dbg !16048
  %30 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16050
  %call31 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %30) #11, !dbg !16050
  %self32 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call31, i32 0, i32 0, !dbg !16050
  %controller33 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self32, i32 0, i32 0, !dbg !16050
  %31 = load %struct.device*, %struct.device** %controller33, align 8, !dbg !16050
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %31, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.112, i64 0, i64 0)) #12, !dbg !16050
  store i32 0, i32* %retval, align 4, !dbg !16051
  br label %return, !dbg !16051

if.end34:                                         ; preds = %land.lhs.true, %if.end17
  %32 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps.addr, align 8, !dbg !16052
  %33 = load i32, i32* %i, align 4, !dbg !16053
  %idxprom35 = sext i32 %33 to i64, !dbg !16052
  %arrayidx36 = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %32, i64 %idxprom35, !dbg !16052
  %34 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx36, align 8, !dbg !16052
  %desc37 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %34, i32 0, i32 0, !dbg !16054
  %call38 = call i32 @xhci_get_endpoint_flag(%struct.usb_endpoint_descriptor* %desc37) #11, !dbg !16055
  %35 = load i32, i32* %changed_ep_bitmask, align 4, !dbg !16056
  %or = or i32 %35, %call38, !dbg !16056
  store i32 %or, i32* %changed_ep_bitmask, align 4, !dbg !16056
  br label %for.inc, !dbg !16057

for.inc:                                          ; preds = %if.end34
  %36 = load i32, i32* %i, align 4, !dbg !16058
  %inc = add i32 %36, 1, !dbg !16058
  store i32 %inc, i32* %i, align 4, !dbg !16058
  br label %for.cond, !dbg !16059, !llvm.loop !16060

for.end:                                          ; preds = %for.cond
  %37 = load i32, i32* %changed_ep_bitmask, align 4, !dbg !16062
  store i32 %37, i32* %retval, align 4, !dbg !16063
  br label %return, !dbg !16063

return:                                           ; preds = %for.end, %if.then22, %if.then12, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !16064
  ret i32 %38, !dbg !16064
}

; Function Attrs: noredzone
declare dso_local void @xhci_setup_no_streams_ep_input_ctx(%struct.xhci_ep_ctx*, %struct.xhci_virt_ep*) #3

; Function Attrs: noredzone
declare dso_local i32 @xhci_endpoint_init(%struct.xhci_hcd*, %struct.xhci_virt_device*, %struct.usb_device*, %struct.usb_host_endpoint*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_mtk_add_ep_quirk(%struct.usb_hcd* %hcd, %struct.usb_device* %udev, %struct.usb_host_endpoint* %ep) #1 !dbg !16065 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %ep.addr = alloca %struct.usb_host_endpoint*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !16067, metadata !DIExpression()), !dbg !16068
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !16069, metadata !DIExpression()), !dbg !16070
  store %struct.usb_host_endpoint* %ep, %struct.usb_host_endpoint** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep.addr, metadata !16071, metadata !DIExpression()), !dbg !16072
  ret i32 0, !dbg !16073
}

; Function Attrs: noredzone
declare dso_local void @xhci_ring_free(%struct.xhci_hcd*, %struct.xhci_ring*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_add_endpoint(%struct.xhci_ep_ctx* %ctx) #1 !dbg !16074 {
entry:
  %ctx.addr = alloca %struct.xhci_ep_ctx*, align 8
  store %struct.xhci_ep_ctx* %ctx, %struct.xhci_ep_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_ep_ctx** %ctx.addr, metadata !16077, metadata !DIExpression()), !dbg !16078
  ret void, !dbg !16078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_debugfs_remove_endpoint(%struct.xhci_hcd* %xhci, %struct.xhci_virt_device* %virt_dev, i32 %ep_index) #1 !dbg !16079 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %virt_dev.addr = alloca %struct.xhci_virt_device*, align 8
  %ep_index.addr = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !16080, metadata !DIExpression()), !dbg !16081
  store %struct.xhci_virt_device* %virt_dev, %struct.xhci_virt_device** %virt_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev.addr, metadata !16082, metadata !DIExpression()), !dbg !16083
  store i32 %ep_index, i32* %ep_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep_index.addr, metadata !16084, metadata !DIExpression()), !dbg !16085
  ret void, !dbg !16086
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_mtk_drop_ep_quirk(%struct.usb_hcd* %hcd, %struct.usb_device* %udev, %struct.usb_host_endpoint* %ep) #1 !dbg !16087 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %ep.addr = alloca %struct.usb_host_endpoint*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !16090, metadata !DIExpression()), !dbg !16091
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !16092, metadata !DIExpression()), !dbg !16093
  store %struct.usb_host_endpoint* %ep, %struct.usb_host_endpoint** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep.addr, metadata !16094, metadata !DIExpression()), !dbg !16095
  ret void, !dbg !16096
}

; Function Attrs: noredzone
declare dso_local void @xhci_free_endpoint_ring(%struct.xhci_hcd*, %struct.xhci_virt_device*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_check_bw_drop_ep_streams(%struct.xhci_hcd* %xhci, %struct.xhci_virt_device* %vdev, i32 %i) #1 !dbg !16097 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %vdev.addr = alloca %struct.xhci_virt_device*, align 8
  %i.addr = alloca i32, align 4
  %ep = alloca %struct.xhci_virt_ep*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !16098, metadata !DIExpression()), !dbg !16099
  store %struct.xhci_virt_device* %vdev, %struct.xhci_virt_device** %vdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %vdev.addr, metadata !16100, metadata !DIExpression()), !dbg !16101
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !16102, metadata !DIExpression()), !dbg !16103
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_ep** %ep, metadata !16104, metadata !DIExpression()), !dbg !16105
  %0 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %vdev.addr, align 8, !dbg !16106
  %eps = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %0, i32 0, i32 3, !dbg !16107
  %1 = load i32, i32* %i.addr, align 4, !dbg !16108
  %idxprom = sext i32 %1 to i64, !dbg !16106
  %arrayidx = getelementptr [31 x %struct.xhci_virt_ep], [31 x %struct.xhci_virt_ep]* %eps, i64 0, i64 %idxprom, !dbg !16106
  store %struct.xhci_virt_ep* %arrayidx, %struct.xhci_virt_ep** %ep, align 8, !dbg !16105
  %2 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !16109
  %ep_state = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %2, i32 0, i32 3, !dbg !16111
  %3 = load i32, i32* %ep_state, align 8, !dbg !16111
  %and = and i32 %3, 16, !dbg !16112
  %tobool = icmp ne i32 %and, 0, !dbg !16112
  br i1 %tobool, label %if.then, label %if.end, !dbg !16113

if.then:                                          ; preds = %entry
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16114
  %call = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %4) #11, !dbg !16114
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call, i32 0, i32 0, !dbg !16114
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !16114
  %5 = load %struct.device*, %struct.device** %controller, align 8, !dbg !16114
  %6 = load i32, i32* %i.addr, align 4, !dbg !16114
  %call1 = call i32 @xhci_get_endpoint_address(i32 %6) #11, !dbg !16114
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.116, i64 0, i64 0), i32 %call1) #12, !dbg !16114
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16116
  %8 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !16117
  %stream_info = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %8, i32 0, i32 1, !dbg !16118
  %9 = load %struct.xhci_stream_info*, %struct.xhci_stream_info** %stream_info, align 8, !dbg !16118
  call void @xhci_free_stream_info(%struct.xhci_hcd* %7, %struct.xhci_stream_info* %9) #11, !dbg !16119
  %10 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !16120
  %stream_info2 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %10, i32 0, i32 1, !dbg !16121
  store %struct.xhci_stream_info* null, %struct.xhci_stream_info** %stream_info2, align 8, !dbg !16122
  %11 = load %struct.xhci_virt_ep*, %struct.xhci_virt_ep** %ep, align 8, !dbg !16123
  %ep_state3 = getelementptr inbounds %struct.xhci_virt_ep, %struct.xhci_virt_ep* %11, i32 0, i32 3, !dbg !16124
  %12 = load i32, i32* %ep_state3, align 8, !dbg !16125
  %and4 = and i32 %12, -17, !dbg !16125
  store i32 %and4, i32* %ep_state3, align 8, !dbg !16125
  br label %if.end, !dbg !16126

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !16127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_zero_in_ctx(%struct.xhci_hcd* %xhci, %struct.xhci_virt_device* %virt_dev) #1 !dbg !16128 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %virt_dev.addr = alloca %struct.xhci_virt_device*, align 8
  %ctrl_ctx = alloca %struct.xhci_input_control_ctx*, align 8
  %ep_ctx = alloca %struct.xhci_ep_ctx*, align 8
  %slot_ctx = alloca %struct.xhci_slot_ctx*, align 8
  %i = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !16131, metadata !DIExpression()), !dbg !16132
  store %struct.xhci_virt_device* %virt_dev, %struct.xhci_virt_device** %virt_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev.addr, metadata !16133, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx, metadata !16135, metadata !DIExpression()), !dbg !16136
  call void @llvm.dbg.declare(metadata %struct.xhci_ep_ctx** %ep_ctx, metadata !16137, metadata !DIExpression()), !dbg !16138
  call void @llvm.dbg.declare(metadata %struct.xhci_slot_ctx** %slot_ctx, metadata !16139, metadata !DIExpression()), !dbg !16140
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16141, metadata !DIExpression()), !dbg !16142
  %0 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !16143
  %in_ctx = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %0, i32 0, i32 2, !dbg !16144
  %1 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !16144
  %call = call %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx* %1) #11, !dbg !16145
  store %struct.xhci_input_control_ctx* %call, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !16146
  %2 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !16147
  %tobool = icmp ne %struct.xhci_input_control_ctx* %2, null, !dbg !16147
  br i1 %tobool, label %if.end, label %if.then, !dbg !16149

if.then:                                          ; preds = %entry
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16150
  %call1 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %3) #11, !dbg !16150
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call1, i32 0, i32 0, !dbg !16150
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !16150
  %4 = load %struct.device*, %struct.device** %controller, align 8, !dbg !16150
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.xhci_zero_in_ctx, i64 0, i64 0)) #12, !dbg !16150
  br label %for.end, !dbg !16152

if.end:                                           ; preds = %entry
  %5 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !16153
  %drop_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %5, i32 0, i32 0, !dbg !16154
  store i32 0, i32* %drop_flags, align 4, !dbg !16155
  %6 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !16156
  %add_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %6, i32 0, i32 1, !dbg !16157
  store i32 0, i32* %add_flags, align 4, !dbg !16158
  %7 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16159
  %8 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !16160
  %in_ctx2 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %8, i32 0, i32 2, !dbg !16161
  %9 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx2, align 8, !dbg !16161
  %call3 = call %struct.xhci_slot_ctx* @xhci_get_slot_ctx(%struct.xhci_hcd* %7, %struct.xhci_container_ctx* %9) #11, !dbg !16162
  store %struct.xhci_slot_ctx* %call3, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16163
  %10 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16164
  %dev_info = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %10, i32 0, i32 0, !dbg !16165
  %11 = load i32, i32* %dev_info, align 4, !dbg !16166
  %and = and i32 %11, 134217727, !dbg !16166
  store i32 %and, i32* %dev_info, align 4, !dbg !16166
  %12 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16167
  %dev_info4 = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %12, i32 0, i32 0, !dbg !16168
  %13 = load i32, i32* %dev_info4, align 4, !dbg !16169
  %or = or i32 %13, 134217728, !dbg !16169
  store i32 %or, i32* %dev_info4, align 4, !dbg !16169
  store i32 1, i32* %i, align 4, !dbg !16170
  br label %for.cond, !dbg !16172

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load i32, i32* %i, align 4, !dbg !16173
  %cmp = icmp slt i32 %14, 31, !dbg !16175
  br i1 %cmp, label %for.body, label %for.end, !dbg !16176

for.body:                                         ; preds = %for.cond
  %15 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16177
  %16 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev.addr, align 8, !dbg !16179
  %in_ctx5 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %16, i32 0, i32 2, !dbg !16180
  %17 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx5, align 8, !dbg !16180
  %18 = load i32, i32* %i, align 4, !dbg !16181
  %call6 = call %struct.xhci_ep_ctx* @xhci_get_ep_ctx(%struct.xhci_hcd* %15, %struct.xhci_container_ctx* %17, i32 %18) #11, !dbg !16182
  store %struct.xhci_ep_ctx* %call6, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !16183
  %19 = load %struct.xhci_ep_ctx*, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !16184
  %ep_info = getelementptr inbounds %struct.xhci_ep_ctx, %struct.xhci_ep_ctx* %19, i32 0, i32 0, !dbg !16185
  store i32 0, i32* %ep_info, align 8, !dbg !16186
  %20 = load %struct.xhci_ep_ctx*, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !16187
  %ep_info2 = getelementptr inbounds %struct.xhci_ep_ctx, %struct.xhci_ep_ctx* %20, i32 0, i32 1, !dbg !16188
  store i32 0, i32* %ep_info2, align 4, !dbg !16189
  %21 = load %struct.xhci_ep_ctx*, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !16190
  %deq = getelementptr inbounds %struct.xhci_ep_ctx, %struct.xhci_ep_ctx* %21, i32 0, i32 2, !dbg !16191
  store i64 0, i64* %deq, align 8, !dbg !16192
  %22 = load %struct.xhci_ep_ctx*, %struct.xhci_ep_ctx** %ep_ctx, align 8, !dbg !16193
  %tx_info = getelementptr inbounds %struct.xhci_ep_ctx, %struct.xhci_ep_ctx* %22, i32 0, i32 3, !dbg !16194
  store i32 0, i32* %tx_info, align 8, !dbg !16195
  br label %for.inc, !dbg !16196

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !16197
  %inc = add i32 %23, 1, !dbg !16197
  store i32 %inc, i32* %i, align 4, !dbg !16197
  br label %for.cond, !dbg !16198, !llvm.loop !16199

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !16201
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @xhci_debugfs_create_endpoint(%struct.xhci_hcd* %xhci, %struct.xhci_virt_device* %virt_dev, i32 %ep_index) #1 !dbg !16202 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %virt_dev.addr = alloca %struct.xhci_virt_device*, align 8
  %ep_index.addr = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !16203, metadata !DIExpression()), !dbg !16204
  store %struct.xhci_virt_device* %virt_dev, %struct.xhci_virt_device** %virt_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev.addr, metadata !16205, metadata !DIExpression()), !dbg !16206
  store i32 %ep_index, i32* %ep_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep_index.addr, metadata !16207, metadata !DIExpression()), !dbg !16208
  ret void, !dbg !16209
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_setup_device(%struct.usb_hcd* %hcd, %struct.usb_device* %udev, i32 %setup) #1 !dbg !16210 {
entry:
  %lock.addr.i159 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i159, metadata !6665, metadata !DIExpression()), !dbg !16213
  %flags.addr.i160 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i160, metadata !6671, metadata !DIExpression()), !dbg !16215
  %tmp.i161 = alloca i32, align 4
  %tmp8.i162 = alloca i32, align 4
  %lock.addr.i157 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i157, metadata !6665, metadata !DIExpression()), !dbg !16216
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !16220
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !16221
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %setup.addr = alloca i32, align 4
  %act = alloca i8*, align 8
  %flags = alloca i64, align 8
  %virt_dev = alloca %struct.xhci_virt_device*, align 8
  %ret = alloca i32, align 4
  %xhci = alloca %struct.xhci_hcd*, align 8
  %slot_ctx = alloca %struct.xhci_slot_ctx*, align 8
  %ctrl_ctx = alloca %struct.xhci_input_control_ctx*, align 8
  %temp_64 = alloca i64, align 8
  %command = alloca %struct.xhci_command*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp69 = alloca i32, align 4
  %__dummy73 = alloca i64, align 8
  %__dummy274 = alloca i64, align 8
  %tmp77 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !16228, metadata !DIExpression()), !dbg !16229
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !16230, metadata !DIExpression()), !dbg !16231
  store i32 %setup, i32* %setup.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %setup.addr, metadata !16232, metadata !DIExpression()), !dbg !16233
  call void @llvm.dbg.declare(metadata i8** %act, metadata !16234, metadata !DIExpression()), !dbg !16235
  %0 = load i32, i32* %setup.addr, align 4, !dbg !16236
  %cmp = icmp eq i32 %0, 0, !dbg !16237
  %1 = zext i1 %cmp to i64, !dbg !16236
  %cond = select i1 %cmp, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.118, i64 0, i64 0), !dbg !16236
  store i8* %cond, i8** %act, align 8, !dbg !16235
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16238, metadata !DIExpression()), !dbg !16239
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev, metadata !16240, metadata !DIExpression()), !dbg !16241
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16242, metadata !DIExpression()), !dbg !16243
  store i32 0, i32* %ret, align 4, !dbg !16243
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !16244, metadata !DIExpression()), !dbg !16245
  %2 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !16246
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %2) #11, !dbg !16247
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !16245
  call void @llvm.dbg.declare(metadata %struct.xhci_slot_ctx** %slot_ctx, metadata !16248, metadata !DIExpression()), !dbg !16249
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx, metadata !16250, metadata !DIExpression()), !dbg !16251
  call void @llvm.dbg.declare(metadata i64* %temp_64, metadata !16252, metadata !DIExpression()), !dbg !16253
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %command, metadata !16254, metadata !DIExpression()), !dbg !16255
  store %struct.xhci_command* null, %struct.xhci_command** %command, align 8, !dbg !16255
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16256
  %mutex = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %3, i32 0, i32 39, !dbg !16257
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !16258
  %4 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16259
  %xhc_state = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %4, i32 0, i32 47, !dbg !16261
  %5 = load i32, i32* %xhc_state, align 8, !dbg !16261
  %tobool = icmp ne i32 %5, 0, !dbg !16259
  br i1 %tobool, label %if.then, label %if.end, !dbg !16262

if.then:                                          ; preds = %entry
  store i32 -108, i32* %ret, align 4, !dbg !16263
  br label %out, !dbg !16265

if.end:                                           ; preds = %entry
  %6 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16266
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 44, !dbg !16268
  %7 = load i32, i32* %slot_id, align 8, !dbg !16268
  %tobool1 = icmp ne i32 %7, 0, !dbg !16266
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !16269

if.then2:                                         ; preds = %if.end
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16270
  %9 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16272
  %slot_id3 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %9, i32 0, i32 44, !dbg !16273
  %10 = load i32, i32* %slot_id3, align 8, !dbg !16273
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %8, void (%struct.va_format*)* @trace_xhci_dbg_address, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.119, i64 0, i64 0), i32 %10) #11, !dbg !16274
  store i32 -22, i32* %ret, align 4, !dbg !16275
  br label %out, !dbg !16276

if.end4:                                          ; preds = %if.end
  %11 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16277
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %11, i32 0, i32 41, !dbg !16278
  %12 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16279
  %slot_id5 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 44, !dbg !16280
  %13 = load i32, i32* %slot_id5, align 8, !dbg !16280
  %idxprom = sext i32 %13 to i64, !dbg !16277
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !16277
  %14 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !16277
  store %struct.xhci_virt_device* %14, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16281
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !16282, metadata !DIExpression()), !dbg !16285
  %15 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16285
  %tobool6 = icmp ne %struct.xhci_virt_device* %15, null, !dbg !16285
  %lnot = xor i1 %tobool6, true, !dbg !16285
  %lnot7 = xor i1 %lnot, true, !dbg !16285
  %lnot8 = xor i1 %lnot7, true, !dbg !16285
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !16285
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !16285
  %16 = load i32, i32* %__ret_warn_on, align 4, !dbg !16286
  %tobool9 = icmp ne i32 %16, 0, !dbg !16286
  %lnot10 = xor i1 %tobool9, true, !dbg !16286
  %lnot12 = xor i1 %lnot10, true, !dbg !16286
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !16286
  %conv = sext i32 %lnot.ext13 to i64, !dbg !16286
  %tobool14 = icmp ne i64 %conv, 0, !dbg !16286
  br i1 %tobool14, label %if.then15, label %if.end22, !dbg !16285

if.then15:                                        ; preds = %if.end4
  br label %do.body, !dbg !16286

do.body:                                          ; preds = %if.then15
  br label %do.body16, !dbg !16288

do.body16:                                        ; preds = %do.body
  br label %do.end, !dbg !16290

do.end:                                           ; preds = %do.body16
  br label %do.body17, !dbg !16288

do.body17:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34, i64 0, i64 0), i32 4085, i32 2305, i64 12) #8, !dbg !16292, !srcloc !16294
  br label %do.end18, !dbg !16292

do.end18:                                         ; preds = %do.body17
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 266) #8, !dbg !16295, !srcloc !16297
  br label %do.body19, !dbg !16288

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !16298

do.end20:                                         ; preds = %do.body19
  br label %do.end21, !dbg !16288

do.end21:                                         ; preds = %do.end20
  br label %if.end22, !dbg !16288

if.end22:                                         ; preds = %do.end21, %if.end4
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !16285
  %tobool23 = icmp ne i32 %17, 0, !dbg !16285
  %lnot24 = xor i1 %tobool23, true, !dbg !16285
  %lnot26 = xor i1 %lnot24, true, !dbg !16285
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !16285
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !16285
  store i64 %conv28, i64* %tmp, align 8, !dbg !16286
  %18 = load i64, i64* %tmp, align 8, !dbg !16285
  %tobool29 = icmp ne i64 %18, 0, !dbg !16300
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !16301

if.then30:                                        ; preds = %if.end22
  %19 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16302
  %call31 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %19) #11, !dbg !16302
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call31, i32 0, i32 0, !dbg !16302
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !16302
  %20 = load %struct.device*, %struct.device** %controller, align 8, !dbg !16302
  %21 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16302
  %slot_id32 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %21, i32 0, i32 44, !dbg !16302
  %22 = load i32, i32* %slot_id32, align 8, !dbg !16302
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %20, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.120, i64 0, i64 0), i32 %22) #12, !dbg !16302
  store i32 -22, i32* %ret, align 4, !dbg !16304
  br label %out, !dbg !16305

if.end33:                                         ; preds = %if.end22
  %23 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16306
  %24 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16307
  %out_ctx = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %24, i32 0, i32 1, !dbg !16308
  %25 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx, align 8, !dbg !16308
  %call34 = call %struct.xhci_slot_ctx* @xhci_get_slot_ctx(%struct.xhci_hcd* %23, %struct.xhci_container_ctx* %25) #11, !dbg !16309
  store %struct.xhci_slot_ctx* %call34, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16310
  %26 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16311
  call void @trace_xhci_setup_device_slot(%struct.xhci_slot_ctx* %26) #11, !dbg !16312
  %27 = load i32, i32* %setup.addr, align 4, !dbg !16313
  %cmp35 = icmp eq i32 %27, 0, !dbg !16315
  br i1 %cmp35, label %if.then37, label %if.end42, !dbg !16316

if.then37:                                        ; preds = %if.end33
  %28 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16317
  %dev_state = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %28, i32 0, i32 3, !dbg !16317
  %29 = load i32, i32* %dev_state, align 4, !dbg !16317
  %and = and i32 %29, -134217728, !dbg !16317
  %shr = lshr i32 %and, 27, !dbg !16317
  %cmp38 = icmp eq i32 %shr, 1, !dbg !16320
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !16321

if.then40:                                        ; preds = %if.then37
  br label %out, !dbg !16322

if.end41:                                         ; preds = %if.then37
  br label %if.end42, !dbg !16324

if.end42:                                         ; preds = %if.end41, %if.end33
  %30 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16325
  %call43 = call %struct.xhci_command* @xhci_alloc_command(%struct.xhci_hcd* %30, i1 zeroext true, i32 3264) #11, !dbg !16326
  store %struct.xhci_command* %call43, %struct.xhci_command** %command, align 8, !dbg !16327
  %31 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16328
  %tobool44 = icmp ne %struct.xhci_command* %31, null, !dbg !16328
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !16330

if.then45:                                        ; preds = %if.end42
  store i32 -12, i32* %ret, align 4, !dbg !16331
  br label %out, !dbg !16333

if.end46:                                         ; preds = %if.end42
  %32 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16334
  %in_ctx = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %32, i32 0, i32 2, !dbg !16335
  %33 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !16335
  %34 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16336
  %in_ctx47 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %34, i32 0, i32 0, !dbg !16337
  store %struct.xhci_container_ctx* %33, %struct.xhci_container_ctx** %in_ctx47, align 8, !dbg !16338
  %35 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16339
  %36 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16340
  %in_ctx48 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %36, i32 0, i32 2, !dbg !16341
  %37 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx48, align 8, !dbg !16341
  %call49 = call %struct.xhci_slot_ctx* @xhci_get_slot_ctx(%struct.xhci_hcd* %35, %struct.xhci_container_ctx* %37) #11, !dbg !16342
  store %struct.xhci_slot_ctx* %call49, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16343
  %38 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16344
  %in_ctx50 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %38, i32 0, i32 2, !dbg !16345
  %39 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx50, align 8, !dbg !16345
  %call51 = call %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx* %39) #11, !dbg !16346
  store %struct.xhci_input_control_ctx* %call51, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !16347
  %40 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !16348
  %tobool52 = icmp ne %struct.xhci_input_control_ctx* %40, null, !dbg !16348
  br i1 %tobool52, label %if.end57, label %if.then53, !dbg !16350

if.then53:                                        ; preds = %if.end46
  %41 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16351
  %call54 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %41) #11, !dbg !16351
  %self55 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call54, i32 0, i32 0, !dbg !16351
  %controller56 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self55, i32 0, i32 0, !dbg !16351
  %42 = load %struct.device*, %struct.device** %controller56, align 8, !dbg !16351
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %42, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.xhci_setup_device, i64 0, i64 0)) #12, !dbg !16351
  store i32 -22, i32* %ret, align 4, !dbg !16353
  br label %out, !dbg !16354

if.end57:                                         ; preds = %if.end46
  %43 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16355
  %dev_info = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %43, i32 0, i32 0, !dbg !16357
  %44 = load i32, i32* %dev_info, align 4, !dbg !16357
  %tobool58 = icmp ne i32 %44, 0, !dbg !16355
  br i1 %tobool58, label %if.else, label %if.then59, !dbg !16358

if.then59:                                        ; preds = %if.end57
  %45 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16359
  %46 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16360
  %call60 = call i32 @xhci_setup_addressable_virt_dev(%struct.xhci_hcd* %45, %struct.usb_device* %46) #11, !dbg !16361
  br label %if.end61, !dbg !16361

if.else:                                          ; preds = %if.end57
  %47 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16362
  %48 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16363
  call void @xhci_copy_ep0_dequeue_into_input_ctx(%struct.xhci_hcd* %47, %struct.usb_device* %48) #11, !dbg !16364
  br label %if.end61

if.end61:                                         ; preds = %if.else, %if.then59
  %49 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !16365
  %add_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %49, i32 0, i32 1, !dbg !16366
  store i32 3, i32* %add_flags, align 4, !dbg !16367
  %50 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !16368
  %drop_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %50, i32 0, i32 0, !dbg !16369
  store i32 0, i32* %drop_flags, align 4, !dbg !16370
  %51 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16371
  %52 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16372
  %in_ctx62 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %52, i32 0, i32 2, !dbg !16373
  %53 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx62, align 8, !dbg !16373
  %54 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16374
  %dev_info63 = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %54, i32 0, i32 0, !dbg !16374
  %55 = load i32, i32* %dev_info63, align 4, !dbg !16374
  %shr64 = lshr i32 %55, 27, !dbg !16375
  call void @trace_xhci_address_ctx(%struct.xhci_hcd* %51, %struct.xhci_container_ctx* %53, i32 %shr64) #11, !dbg !16376
  %56 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !16377
  call void @trace_xhci_address_ctrl_ctx(%struct.xhci_input_control_ctx* %56) #11, !dbg !16378
  br label %do.body65, !dbg !16379

do.body65:                                        ; preds = %if.end61
  br label %do.body66, !dbg !16380

do.body66:                                        ; preds = %do.body65
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16381, metadata !DIExpression()), !dbg !16383
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16384, metadata !DIExpression()), !dbg !16383
  %cmp67 = icmp eq i64* %__dummy, %__dummy2, !dbg !16383
  %conv68 = zext i1 %cmp67 to i32, !dbg !16383
  store i32 1, i32* %tmp69, align 4, !dbg !16383
  %57 = load i32, i32* %tmp69, align 4, !dbg !16383
  br label %do.body70, !dbg !16385

do.body70:                                        ; preds = %do.body66
  br label %do.body71, !dbg !16386

do.body71:                                        ; preds = %do.body70
  br label %do.body72, !dbg !16387

do.body72:                                        ; preds = %do.body71
  call void @llvm.dbg.declare(metadata i64* %__dummy73, metadata !16389, metadata !DIExpression()), !dbg !16392
  call void @llvm.dbg.declare(metadata i64* %__dummy274, metadata !16393, metadata !DIExpression()), !dbg !16392
  %cmp75 = icmp eq i64* %__dummy73, %__dummy274, !dbg !16392
  %conv76 = zext i1 %cmp75 to i32, !dbg !16392
  store i32 1, i32* %tmp77, align 4, !dbg !16392
  %58 = load i32, i32* %tmp77, align 4, !dbg !16392
  %call78 = call i64 @arch_local_irq_save() #11, !dbg !16394
  store i64 %call78, i64* %flags, align 8, !dbg !16394
  br label %do.end79, !dbg !16394

do.end79:                                         ; preds = %do.body72
  br label %do.end80, !dbg !16387

do.end80:                                         ; preds = %do.end79
  br label %do.body81, !dbg !16386

do.body81:                                        ; preds = %do.end80
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16395, !srcloc !16396
  br label %do.body82, !dbg !16395

do.body82:                                        ; preds = %do.body81
  %59 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16397
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %59, i32 0, i32 12, !dbg !16397
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %60 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16398
  %61 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %60, i32 0, i32 0, !dbg !16399
  %rlock.i = bitcast %union.anon.2* %61 to %struct.raw_spinlock*, !dbg !16399
  br label %do.end84, !dbg !16397

do.end84:                                         ; preds = %do.body82
  br label %do.end85, !dbg !16395

do.end85:                                         ; preds = %do.end84
  br label %do.end86, !dbg !16386

do.end86:                                         ; preds = %do.end85
  br label %do.end87, !dbg !16385

do.end87:                                         ; preds = %do.end86
  br label %do.end88, !dbg !16380

do.end88:                                         ; preds = %do.end87
  %62 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16400
  call void @trace_xhci_setup_device(%struct.xhci_virt_device* %62) #11, !dbg !16401
  %63 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16402
  %64 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16403
  %65 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16404
  %in_ctx89 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %65, i32 0, i32 2, !dbg !16405
  %66 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx89, align 8, !dbg !16405
  %dma = getelementptr inbounds %struct.xhci_container_ctx, %struct.xhci_container_ctx* %66, i32 0, i32 3, !dbg !16406
  %67 = load i64, i64* %dma, align 8, !dbg !16406
  %68 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16407
  %slot_id90 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %68, i32 0, i32 44, !dbg !16408
  %69 = load i32, i32* %slot_id90, align 8, !dbg !16408
  %70 = load i32, i32* %setup.addr, align 4, !dbg !16409
  %call91 = call i32 @xhci_queue_address_device(%struct.xhci_hcd* %63, %struct.xhci_command* %64, i64 %67, i32 %69, i32 %70) #11, !dbg !16410
  store i32 %call91, i32* %ret, align 4, !dbg !16411
  %71 = load i32, i32* %ret, align 4, !dbg !16412
  %tobool92 = icmp ne i32 %71, 0, !dbg !16412
  br i1 %tobool92, label %if.then93, label %if.end95, !dbg !16413

if.then93:                                        ; preds = %do.end88
  %72 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16414
  %lock94 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %72, i32 0, i32 12, !dbg !16415
  %73 = load i64, i64* %flags, align 8, !dbg !16416
  store %struct.spinlock* %lock94, %struct.spinlock** %lock.addr.i157, align 8
  store i64 %73, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !16417
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !16417
  store i32 1, i32* %tmp.i, align 4, !dbg !16417
  %74 = load i32, i32* %tmp.i, align 4, !dbg !16417
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !16418
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !16418
  store i32 1, i32* %tmp8.i, align 4, !dbg !16418
  %75 = load i32, i32* %tmp8.i, align 4, !dbg !16418
  %76 = load i64, i64* %flags.addr.i, align 8, !dbg !16419
  call void @arch_local_irq_restore(i64 %76) #13, !dbg !16419
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16420, !srcloc !6814
  %77 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i157, align 8, !dbg !16421
  %78 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %77, i32 0, i32 0, !dbg !16421
  %rlock.i158 = bitcast %union.anon.2* %78 to %struct.raw_spinlock*, !dbg !16421
  %79 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16422
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %79, void (%struct.va_format*)* @trace_xhci_dbg_address, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.121, i64 0, i64 0)) #11, !dbg !16423
  br label %out, !dbg !16424

if.end95:                                         ; preds = %do.end88
  %80 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16425
  call void @xhci_ring_cmd_db(%struct.xhci_hcd* %80) #11, !dbg !16426
  %81 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16427
  %lock96 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %81, i32 0, i32 12, !dbg !16428
  %82 = load i64, i64* %flags, align 8, !dbg !16429
  store %struct.spinlock* %lock96, %struct.spinlock** %lock.addr.i159, align 8
  store i64 %82, i64* %flags.addr.i160, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !16430
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !16430
  store i32 1, i32* %tmp.i161, align 4, !dbg !16430
  %83 = load i32, i32* %tmp.i161, align 4, !dbg !16430
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !16431
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !16431
  store i32 1, i32* %tmp8.i162, align 4, !dbg !16431
  %84 = load i32, i32* %tmp8.i162, align 4, !dbg !16431
  %85 = load i64, i64* %flags.addr.i160, align 8, !dbg !16432
  call void @arch_local_irq_restore(i64 %85) #13, !dbg !16432
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16433, !srcloc !6814
  %86 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i159, align 8, !dbg !16434
  %87 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %86, i32 0, i32 0, !dbg !16434
  %rlock.i163 = bitcast %union.anon.2* %87 to %struct.raw_spinlock*, !dbg !16434
  %88 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16435
  %completion = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %88, i32 0, i32 3, !dbg !16436
  %89 = load %struct.completion*, %struct.completion** %completion, align 8, !dbg !16436
  call void @wait_for_completion(%struct.completion* %89) #11, !dbg !16437
  %90 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16438
  %status = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %90, i32 0, i32 1, !dbg !16439
  %91 = load i32, i32* %status, align 8, !dbg !16439
  switch i32 %91, label %sw.default [
    i32 25, label %sw.bb
    i32 24, label %sw.bb
    i32 19, label %sw.bb100
    i32 11, label %sw.bb100
    i32 4, label %sw.bb105
    i32 22, label %sw.bb114
    i32 1, label %sw.bb116
  ], !dbg !16440

sw.bb:                                            ; preds = %if.end95, %if.end95
  %92 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16441
  %call97 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %92) #11, !dbg !16441
  %self98 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call97, i32 0, i32 0, !dbg !16441
  %controller99 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self98, i32 0, i32 0, !dbg !16441
  %93 = load %struct.device*, %struct.device** %controller99, align 8, !dbg !16441
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %93, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.122, i64 0, i64 0)) #12, !dbg !16441
  store i32 -62, i32* %ret, align 4, !dbg !16443
  br label %sw.epilog, !dbg !16444

sw.bb100:                                         ; preds = %if.end95, %if.end95
  %94 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16445
  %call101 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %94) #11, !dbg !16445
  %self102 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call101, i32 0, i32 0, !dbg !16445
  %controller103 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self102, i32 0, i32 0, !dbg !16445
  %95 = load %struct.device*, %struct.device** %controller103, align 8, !dbg !16445
  %96 = load i8*, i8** %act, align 8, !dbg !16445
  %97 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16445
  %slot_id104 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %97, i32 0, i32 44, !dbg !16445
  %98 = load i32, i32* %slot_id104, align 8, !dbg !16445
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %95, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.123, i64 0, i64 0), i8* %96, i32 %98) #12, !dbg !16445
  store i32 -22, i32* %ret, align 4, !dbg !16446
  br label %sw.epilog, !dbg !16447

sw.bb105:                                         ; preds = %if.end95
  %99 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16448
  %dev = getelementptr inbounds %struct.usb_device, %struct.usb_device* %99, i32 0, i32 14, !dbg !16448
  %100 = load i8*, i8** %act, align 8, !dbg !16448
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.124, i64 0, i64 0), i8* %100) #12, !dbg !16448
  %101 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16449
  %mutex106 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %101, i32 0, i32 39, !dbg !16450
  call void @mutex_unlock(%struct.mutex* %mutex106) #11, !dbg !16451
  %102 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16452
  %103 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16453
  %slot_id107 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %103, i32 0, i32 44, !dbg !16454
  %104 = load i32, i32* %slot_id107, align 8, !dbg !16454
  %call108 = call i32 @xhci_disable_slot(%struct.xhci_hcd* %102, i32 %104) #11, !dbg !16455
  store i32 %call108, i32* %ret, align 4, !dbg !16456
  %105 = load i32, i32* %ret, align 4, !dbg !16457
  %tobool109 = icmp ne i32 %105, 0, !dbg !16457
  br i1 %tobool109, label %if.end112, label %if.then110, !dbg !16459

if.then110:                                       ; preds = %sw.bb105
  %106 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !16460
  %107 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16461
  %call111 = call i32 @xhci_alloc_dev(%struct.usb_hcd* %106, %struct.usb_device* %107) #11, !dbg !16462
  br label %if.end112, !dbg !16462

if.end112:                                        ; preds = %if.then110, %sw.bb105
  %108 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16463
  %completion113 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %108, i32 0, i32 3, !dbg !16464
  %109 = load %struct.completion*, %struct.completion** %completion113, align 8, !dbg !16464
  %110 = bitcast %struct.completion* %109 to i8*, !dbg !16463
  call void @kfree(i8* %110) #11, !dbg !16465
  %111 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16466
  %112 = bitcast %struct.xhci_command* %111 to i8*, !dbg !16466
  call void @kfree(i8* %112) #11, !dbg !16467
  store i32 -71, i32* %retval, align 4, !dbg !16468
  br label %return, !dbg !16468

sw.bb114:                                         ; preds = %if.end95
  %113 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16469
  %dev115 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %113, i32 0, i32 14, !dbg !16469
  %114 = load i8*, i8** %act, align 8, !dbg !16469
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev115, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.125, i64 0, i64 0), i8* %114) #12, !dbg !16469
  store i32 -19, i32* %ret, align 4, !dbg !16470
  br label %sw.epilog, !dbg !16471

sw.bb116:                                         ; preds = %if.end95
  %115 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16472
  %116 = load i8*, i8** %act, align 8, !dbg !16473
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %115, void (%struct.va_format*)* @trace_xhci_dbg_address, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.126, i64 0, i64 0), i8* %116) #11, !dbg !16474
  br label %sw.epilog, !dbg !16475

sw.default:                                       ; preds = %if.end95
  %117 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16476
  %call117 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %117) #11, !dbg !16476
  %self118 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call117, i32 0, i32 0, !dbg !16476
  %controller119 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self118, i32 0, i32 0, !dbg !16476
  %118 = load %struct.device*, %struct.device** %controller119, align 8, !dbg !16476
  %119 = load i8*, i8** %act, align 8, !dbg !16476
  %120 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16476
  %status120 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %120, i32 0, i32 1, !dbg !16476
  %121 = load i32, i32* %status120, align 8, !dbg !16476
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %118, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i64 0, i64 0), i8* %119, i32 %121) #12, !dbg !16476
  %122 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16477
  %123 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16478
  %out_ctx121 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %123, i32 0, i32 1, !dbg !16479
  %124 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx121, align 8, !dbg !16479
  call void @trace_xhci_address_ctx(%struct.xhci_hcd* %122, %struct.xhci_container_ctx* %124, i32 1) #11, !dbg !16480
  store i32 -22, i32* %ret, align 4, !dbg !16481
  br label %sw.epilog, !dbg !16482

sw.epilog:                                        ; preds = %sw.default, %sw.bb116, %sw.bb114, %sw.bb100, %sw.bb
  %125 = load i32, i32* %ret, align 4, !dbg !16483
  %tobool122 = icmp ne i32 %125, 0, !dbg !16483
  br i1 %tobool122, label %if.then123, label %if.end124, !dbg !16485

if.then123:                                       ; preds = %sw.epilog
  br label %out, !dbg !16486

if.end124:                                        ; preds = %sw.epilog
  %126 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16487
  %127 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16488
  %op_regs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %127, i32 0, i32 3, !dbg !16489
  %128 = load %struct.xhci_op_regs*, %struct.xhci_op_regs** %op_regs, align 8, !dbg !16489
  %dcbaa_ptr = getelementptr inbounds %struct.xhci_op_regs, %struct.xhci_op_regs* %128, i32 0, i32 8, !dbg !16490
  %call125 = call i64 @xhci_read_64(%struct.xhci_hcd* %126, i64* %dcbaa_ptr) #11, !dbg !16491
  store i64 %call125, i64* %temp_64, align 8, !dbg !16492
  %129 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16493
  %130 = load i64, i64* %temp_64, align 8, !dbg !16494
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %129, void (%struct.va_format*)* @trace_xhci_dbg_address, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.128, i64 0, i64 0), i64 %130) #11, !dbg !16495
  %131 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16496
  %132 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16497
  %slot_id126 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %132, i32 0, i32 44, !dbg !16498
  %133 = load i32, i32* %slot_id126, align 8, !dbg !16498
  %134 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16499
  %dcbaa = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %134, i32 0, i32 27, !dbg !16500
  %135 = load %struct.xhci_device_context_array*, %struct.xhci_device_context_array** %dcbaa, align 8, !dbg !16500
  %dev_context_ptrs = getelementptr inbounds %struct.xhci_device_context_array, %struct.xhci_device_context_array* %135, i32 0, i32 0, !dbg !16501
  %136 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16502
  %slot_id127 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %136, i32 0, i32 44, !dbg !16503
  %137 = load i32, i32* %slot_id127, align 8, !dbg !16503
  %idxprom128 = sext i32 %137 to i64, !dbg !16499
  %arrayidx129 = getelementptr [256 x i64], [256 x i64]* %dev_context_ptrs, i64 0, i64 %idxprom128, !dbg !16499
  %138 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16504
  %dcbaa130 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %138, i32 0, i32 27, !dbg !16504
  %139 = load %struct.xhci_device_context_array*, %struct.xhci_device_context_array** %dcbaa130, align 8, !dbg !16504
  %dev_context_ptrs131 = getelementptr inbounds %struct.xhci_device_context_array, %struct.xhci_device_context_array* %139, i32 0, i32 0, !dbg !16504
  %140 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16504
  %slot_id132 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %140, i32 0, i32 44, !dbg !16504
  %141 = load i32, i32* %slot_id132, align 8, !dbg !16504
  %idxprom133 = sext i32 %141 to i64, !dbg !16504
  %arrayidx134 = getelementptr [256 x i64], [256 x i64]* %dev_context_ptrs131, i64 0, i64 %idxprom133, !dbg !16504
  %142 = load i64, i64* %arrayidx134, align 8, !dbg !16504
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %131, void (%struct.va_format*)* @trace_xhci_dbg_address, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.129, i64 0, i64 0), i32 %133, i64* %arrayidx129, i64 %142) #11, !dbg !16505
  %143 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16506
  %144 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16507
  %out_ctx135 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %144, i32 0, i32 1, !dbg !16508
  %145 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx135, align 8, !dbg !16508
  %dma136 = getelementptr inbounds %struct.xhci_container_ctx, %struct.xhci_container_ctx* %145, i32 0, i32 3, !dbg !16509
  %146 = load i64, i64* %dma136, align 8, !dbg !16509
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %143, void (%struct.va_format*)* @trace_xhci_dbg_address, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.130, i64 0, i64 0), i64 %146) #11, !dbg !16510
  %147 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16511
  %148 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16512
  %in_ctx137 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %148, i32 0, i32 2, !dbg !16513
  %149 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx137, align 8, !dbg !16513
  %150 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16514
  %dev_info138 = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %150, i32 0, i32 0, !dbg !16514
  %151 = load i32, i32* %dev_info138, align 4, !dbg !16514
  %shr139 = lshr i32 %151, 27, !dbg !16515
  call void @trace_xhci_address_ctx(%struct.xhci_hcd* %147, %struct.xhci_container_ctx* %149, i32 %shr139) #11, !dbg !16516
  %152 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16517
  %153 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16518
  %out_ctx140 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %153, i32 0, i32 1, !dbg !16519
  %154 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx140, align 8, !dbg !16519
  %155 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16520
  %dev_info141 = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %155, i32 0, i32 0, !dbg !16520
  %156 = load i32, i32* %dev_info141, align 4, !dbg !16520
  %shr142 = lshr i32 %156, 27, !dbg !16521
  call void @trace_xhci_address_ctx(%struct.xhci_hcd* %152, %struct.xhci_container_ctx* %154, i32 %shr142) #11, !dbg !16522
  %157 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !16523
  %add_flags143 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %157, i32 0, i32 1, !dbg !16524
  store i32 0, i32* %add_flags143, align 4, !dbg !16525
  %158 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !16526
  %drop_flags144 = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %158, i32 0, i32 0, !dbg !16527
  store i32 0, i32* %drop_flags144, align 4, !dbg !16528
  %159 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16529
  %160 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16530
  %out_ctx145 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %160, i32 0, i32 1, !dbg !16531
  %161 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx145, align 8, !dbg !16531
  %call146 = call %struct.xhci_slot_ctx* @xhci_get_slot_ctx(%struct.xhci_hcd* %159, %struct.xhci_container_ctx* %161) #11, !dbg !16532
  store %struct.xhci_slot_ctx* %call146, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16533
  %162 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16534
  %dev_state147 = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %162, i32 0, i32 3, !dbg !16534
  %163 = load i32, i32* %dev_state147, align 4, !dbg !16534
  %and148 = and i32 %163, 255, !dbg !16535
  %conv149 = trunc i32 %and148 to i8, !dbg !16536
  %164 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16537
  %devaddr = getelementptr inbounds %struct.usb_device, %struct.usb_device* %164, i32 0, i32 26, !dbg !16538
  store i8 %conv149, i8* %devaddr, align 4, !dbg !16539
  %165 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16540
  %166 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16541
  %dev_state150 = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %166, i32 0, i32 3, !dbg !16541
  %167 = load i32, i32* %dev_state150, align 4, !dbg !16541
  %and151 = and i32 %167, 255, !dbg !16542
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %165, void (%struct.va_format*)* @trace_xhci_dbg_address, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.131, i64 0, i64 0), i32 %and151) #11, !dbg !16543
  br label %out, !dbg !16543

out:                                              ; preds = %if.end124, %if.then123, %if.then93, %if.then53, %if.then45, %if.then40, %if.then30, %if.then2, %if.then
  call void @llvm.dbg.label(metadata !16544), !dbg !16545
  %168 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16546
  %mutex152 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %168, i32 0, i32 39, !dbg !16547
  call void @mutex_unlock(%struct.mutex* %mutex152) #11, !dbg !16548
  %169 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16549
  %tobool153 = icmp ne %struct.xhci_command* %169, null, !dbg !16549
  br i1 %tobool153, label %if.then154, label %if.end156, !dbg !16551

if.then154:                                       ; preds = %out
  %170 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16552
  %completion155 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %170, i32 0, i32 3, !dbg !16554
  %171 = load %struct.completion*, %struct.completion** %completion155, align 8, !dbg !16554
  %172 = bitcast %struct.completion* %171 to i8*, !dbg !16552
  call void @kfree(i8* %172) #11, !dbg !16555
  %173 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16556
  %174 = bitcast %struct.xhci_command* %173 to i8*, !dbg !16556
  call void @kfree(i8* %174) #11, !dbg !16557
  br label %if.end156, !dbg !16558

if.end156:                                        ; preds = %if.then154, %out
  %175 = load i32, i32* %ret, align 4, !dbg !16559
  store i32 %175, i32* %retval, align 4, !dbg !16560
  br label %return, !dbg !16560

return:                                           ; preds = %if.end156, %if.end112
  %176 = load i32, i32* %retval, align 4, !dbg !16561
  ret i32 %176, !dbg !16561
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_dbg_address(%struct.va_format* %vaf) #1 !dbg !16562 {
entry:
  %vaf.addr = alloca %struct.va_format*, align 8
  store %struct.va_format* %vaf, %struct.va_format** %vaf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.va_format** %vaf.addr, metadata !16563, metadata !DIExpression()), !dbg !16564
  ret void, !dbg !16564
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_setup_device_slot(%struct.xhci_slot_ctx* %ctx) #1 !dbg !16565 {
entry:
  %ctx.addr = alloca %struct.xhci_slot_ctx*, align 8
  store %struct.xhci_slot_ctx* %ctx, %struct.xhci_slot_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_slot_ctx** %ctx.addr, metadata !16566, metadata !DIExpression()), !dbg !16567
  ret void, !dbg !16567
}

; Function Attrs: noredzone
declare dso_local i32 @xhci_setup_addressable_virt_dev(%struct.xhci_hcd*, %struct.usb_device*) #3

; Function Attrs: noredzone
declare dso_local void @xhci_copy_ep0_dequeue_into_input_ctx(%struct.xhci_hcd*, %struct.usb_device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_address_ctx(%struct.xhci_hcd* %xhci, %struct.xhci_container_ctx* %ctx, i32 %ep_num) #1 !dbg !16568 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %ctx.addr = alloca %struct.xhci_container_ctx*, align 8
  %ep_num.addr = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !16571, metadata !DIExpression()), !dbg !16572
  store %struct.xhci_container_ctx* %ctx, %struct.xhci_container_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_container_ctx** %ctx.addr, metadata !16573, metadata !DIExpression()), !dbg !16572
  store i32 %ep_num, i32* %ep_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ep_num.addr, metadata !16574, metadata !DIExpression()), !dbg !16572
  ret void, !dbg !16572
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_address_ctrl_ctx(%struct.xhci_input_control_ctx* %ctrl_ctx) #1 !dbg !16575 {
entry:
  %ctrl_ctx.addr = alloca %struct.xhci_input_control_ctx*, align 8
  store %struct.xhci_input_control_ctx* %ctrl_ctx, %struct.xhci_input_control_ctx** %ctrl_ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx.addr, metadata !16576, metadata !DIExpression()), !dbg !16577
  ret void, !dbg !16577
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_setup_device(%struct.xhci_virt_device* %vdev) #1 !dbg !16578 {
entry:
  %vdev.addr = alloca %struct.xhci_virt_device*, align 8
  store %struct.xhci_virt_device* %vdev, %struct.xhci_virt_device** %vdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %vdev.addr, metadata !16581, metadata !DIExpression()), !dbg !16582
  ret void, !dbg !16582
}

; Function Attrs: noredzone
declare dso_local i32 @xhci_queue_address_device(%struct.xhci_hcd*, %struct.xhci_command*, i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @xhci_alloc_tt_info(%struct.xhci_hcd*, %struct.xhci_virt_device*, %struct.usb_device*, %struct.usb_tt*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_xhci_discover_or_reset_device(%struct.xhci_slot_ctx* %ctx) #1 !dbg !16583 {
entry:
  %ctx.addr = alloca %struct.xhci_slot_ctx*, align 8
  store %struct.xhci_slot_ctx* %ctx, %struct.xhci_slot_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_slot_ctx** %ctx.addr, metadata !16584, metadata !DIExpression()), !dbg !16585
  ret void, !dbg !16585
}

; Function Attrs: noredzone
declare dso_local i32 @xhci_queue_reset_device(%struct.xhci_hcd*, %struct.xhci_command*, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @xhci_is_vendor_info_code(%struct.xhci_hcd*, i32) #3

; Function Attrs: noredzone
declare dso_local void @xhci_clear_endpoint_bw_info(%struct.xhci_bw_info*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_check_usb2_port_capability(%struct.xhci_hcd* %xhci, i32 %port, i32 %capability) #1 !dbg !16586 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %port.addr = alloca i32, align 4
  %capability.addr = alloca i32, align 4
  %port_offset = alloca i32, align 4
  %port_count = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !16589, metadata !DIExpression()), !dbg !16590
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !16591, metadata !DIExpression()), !dbg !16592
  store i32 %capability, i32* %capability.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %capability.addr, metadata !16593, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.declare(metadata i32* %port_offset, metadata !16595, metadata !DIExpression()), !dbg !16596
  call void @llvm.dbg.declare(metadata i32* %port_count, metadata !16597, metadata !DIExpression()), !dbg !16598
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16599, metadata !DIExpression()), !dbg !16600
  store i32 0, i32* %i, align 4, !dbg !16601
  br label %for.cond, !dbg !16603

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !16604
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16606
  %num_ext_caps = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %1, i32 0, i32 58, !dbg !16607
  %2 = load i32, i32* %num_ext_caps, align 8, !dbg !16607
  %cmp = icmp ult i32 %0, %2, !dbg !16608
  br i1 %cmp, label %for.body, label %for.end, !dbg !16609

for.body:                                         ; preds = %for.cond
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16610
  %ext_caps = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %3, i32 0, i32 57, !dbg !16613
  %4 = load i32*, i32** %ext_caps, align 8, !dbg !16613
  %5 = load i32, i32* %i, align 4, !dbg !16614
  %idxprom = sext i32 %5 to i64, !dbg !16610
  %arrayidx = getelementptr i32, i32* %4, i64 %idxprom, !dbg !16610
  %6 = load i32, i32* %arrayidx, align 4, !dbg !16610
  %7 = load i32, i32* %capability.addr, align 4, !dbg !16615
  %and = and i32 %6, %7, !dbg !16616
  %tobool = icmp ne i32 %and, 0, !dbg !16616
  br i1 %tobool, label %if.then, label %if.end12, !dbg !16617

if.then:                                          ; preds = %for.body
  %8 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16618
  %ext_caps1 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %8, i32 0, i32 57, !dbg !16618
  %9 = load i32*, i32** %ext_caps1, align 8, !dbg !16618
  %10 = load i32, i32* %i, align 4, !dbg !16618
  %idxprom2 = sext i32 %10 to i64, !dbg !16618
  %arrayidx3 = getelementptr i32, i32* %9, i64 %idxprom2, !dbg !16618
  %11 = load i32, i32* %arrayidx3, align 4, !dbg !16618
  %and4 = and i32 %11, 255, !dbg !16618
  %sub = sub i32 %and4, 1, !dbg !16620
  store i32 %sub, i32* %port_offset, align 4, !dbg !16621
  %12 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16622
  %ext_caps5 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %12, i32 0, i32 57, !dbg !16622
  %13 = load i32*, i32** %ext_caps5, align 8, !dbg !16622
  %14 = load i32, i32* %i, align 4, !dbg !16622
  %idxprom6 = sext i32 %14 to i64, !dbg !16622
  %arrayidx7 = getelementptr i32, i32* %13, i64 %idxprom6, !dbg !16622
  %15 = load i32, i32* %arrayidx7, align 4, !dbg !16622
  %shr = lshr i32 %15, 8, !dbg !16622
  %and8 = and i32 %shr, 255, !dbg !16622
  store i32 %and8, i32* %port_count, align 4, !dbg !16623
  %16 = load i32, i32* %port.addr, align 4, !dbg !16624
  %17 = load i32, i32* %port_offset, align 4, !dbg !16626
  %cmp9 = icmp uge i32 %16, %17, !dbg !16627
  br i1 %cmp9, label %land.lhs.true, label %if.end, !dbg !16628

land.lhs.true:                                    ; preds = %if.then
  %18 = load i32, i32* %port.addr, align 4, !dbg !16629
  %19 = load i32, i32* %port_offset, align 4, !dbg !16630
  %20 = load i32, i32* %port_count, align 4, !dbg !16631
  %add = add i32 %19, %20, !dbg !16632
  %cmp10 = icmp ult i32 %18, %add, !dbg !16633
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !16634

if.then11:                                        ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !16635
  br label %return, !dbg !16635

if.end:                                           ; preds = %land.lhs.true, %if.then
  br label %if.end12, !dbg !16636

if.end12:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !16637

for.inc:                                          ; preds = %if.end12
  %21 = load i32, i32* %i, align 4, !dbg !16638
  %inc = add i32 %21, 1, !dbg !16638
  store i32 %inc, i32* %i, align 4, !dbg !16638
  br label %for.cond, !dbg !16639, !llvm.loop !16640

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !16642
  br label %return, !dbg !16642

return:                                           ; preds = %for.end, %if.then11
  %22 = load i32, i32* %retval, align 4, !dbg !16643
  ret i32 %22, !dbg !16643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_change_max_exit_latency(%struct.xhci_hcd* %xhci, %struct.usb_device* %udev, i16 zeroext %max_exit_latency) #1 !dbg !16644 {
entry:
  %lock.addr.i87 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i87, metadata !6673, metadata !DIExpression()), !dbg !16647
  %lock.addr.i82 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i82, metadata !6665, metadata !DIExpression()), !dbg !16656
  %flags.addr.i83 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i83, metadata !6671, metadata !DIExpression()), !dbg !16658
  %tmp.i84 = alloca i32, align 4
  %tmp8.i85 = alloca i32, align 4
  %lock.addr.i77 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i77, metadata !6665, metadata !DIExpression()), !dbg !16659
  %flags.addr.i78 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i78, metadata !6671, metadata !DIExpression()), !dbg !16663
  %tmp.i79 = alloca i32, align 4
  %tmp8.i80 = alloca i32, align 4
  %lock.addr.i72 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i72, metadata !6665, metadata !DIExpression()), !dbg !16664
  %flags.addr.i73 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i73, metadata !6671, metadata !DIExpression()), !dbg !16668
  %tmp.i74 = alloca i32, align 4
  %tmp8.i75 = alloca i32, align 4
  %lock.addr.i70 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i70, metadata !6665, metadata !DIExpression()), !dbg !16669
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6671, metadata !DIExpression()), !dbg !16671
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6673, metadata !DIExpression()), !dbg !16672
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %max_exit_latency.addr = alloca i16, align 2
  %virt_dev = alloca %struct.xhci_virt_device*, align 8
  %command = alloca %struct.xhci_command*, align 8
  %ctrl_ctx = alloca %struct.xhci_input_control_ctx*, align 8
  %slot_ctx = alloca %struct.xhci_slot_ctx*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy42 = alloca i64, align 8
  %__dummy243 = alloca i64, align 8
  %tmp46 = alloca i32, align 4
  %__dummy50 = alloca i64, align 8
  %__dummy251 = alloca i64, align 8
  %tmp54 = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !16679, metadata !DIExpression()), !dbg !16680
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !16681, metadata !DIExpression()), !dbg !16682
  store i16 %max_exit_latency, i16* %max_exit_latency.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %max_exit_latency.addr, metadata !16683, metadata !DIExpression()), !dbg !16684
  call void @llvm.dbg.declare(metadata %struct.xhci_virt_device** %virt_dev, metadata !16685, metadata !DIExpression()), !dbg !16686
  call void @llvm.dbg.declare(metadata %struct.xhci_command** %command, metadata !16687, metadata !DIExpression()), !dbg !16688
  call void @llvm.dbg.declare(metadata %struct.xhci_input_control_ctx** %ctrl_ctx, metadata !16689, metadata !DIExpression()), !dbg !16690
  call void @llvm.dbg.declare(metadata %struct.xhci_slot_ctx** %slot_ctx, metadata !16691, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16693, metadata !DIExpression()), !dbg !16694
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16695, metadata !DIExpression()), !dbg !16696
  br label %do.body, !dbg !16697

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !16698

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16699, metadata !DIExpression()), !dbg !16701
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16702, metadata !DIExpression()), !dbg !16701
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !16701
  %conv = zext i1 %cmp to i32, !dbg !16701
  store i32 1, i32* %tmp, align 4, !dbg !16701
  %0 = load i32, i32* %tmp, align 4, !dbg !16701
  br label %do.body2, !dbg !16703

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !16704

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !16705

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !16707, metadata !DIExpression()), !dbg !16710
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !16711, metadata !DIExpression()), !dbg !16710
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !16710
  %conv8 = zext i1 %cmp7 to i32, !dbg !16710
  store i32 1, i32* %tmp9, align 4, !dbg !16710
  %1 = load i32, i32* %tmp9, align 4, !dbg !16710
  %call = call i64 @arch_local_irq_save() #11, !dbg !16712
  store i64 %call, i64* %flags, align 8, !dbg !16712
  br label %do.end, !dbg !16712

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !16705

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !16704

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16713, !srcloc !16714
  br label %do.body12, !dbg !16713

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16715
  %lock = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %2, i32 0, i32 12, !dbg !16715
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16716
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !16717
  %rlock.i = bitcast %union.anon.2* %4 to %struct.raw_spinlock*, !dbg !16717
  br label %do.end14, !dbg !16715

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !16713

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !16704

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !16703

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !16698

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16718
  %devs = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 41, !dbg !16719
  %6 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16720
  %slot_id = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 44, !dbg !16721
  %7 = load i32, i32* %slot_id, align 8, !dbg !16721
  %idxprom = sext i32 %7 to i64, !dbg !16718
  %arrayidx = getelementptr [256 x %struct.xhci_virt_device*], [256 x %struct.xhci_virt_device*]* %devs, i64 0, i64 %idxprom, !dbg !16718
  %8 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %arrayidx, align 8, !dbg !16718
  store %struct.xhci_virt_device* %8, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16722
  %9 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16723
  %tobool = icmp ne %struct.xhci_virt_device* %9, null, !dbg !16723
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !16724

lor.lhs.false:                                    ; preds = %do.end18
  %10 = load i16, i16* %max_exit_latency.addr, align 2, !dbg !16725
  %conv19 = zext i16 %10 to i32, !dbg !16725
  %11 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16726
  %current_mel = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %11, i32 0, i32 9, !dbg !16727
  %12 = load i16, i16* %current_mel, align 8, !dbg !16727
  %conv20 = zext i16 %12 to i32, !dbg !16726
  %cmp21 = icmp eq i32 %conv19, %conv20, !dbg !16728
  br i1 %cmp21, label %if.then, label %if.end, !dbg !16729

if.then:                                          ; preds = %lor.lhs.false, %do.end18
  %13 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16730
  %lock23 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %13, i32 0, i32 12, !dbg !16731
  %14 = load i64, i64* %flags, align 8, !dbg !16732
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i72, align 8
  store i64 %14, i64* %flags.addr.i73, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !16733
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !16733
  store i32 1, i32* %tmp.i74, align 4, !dbg !16733
  %15 = load i32, i32* %tmp.i74, align 4, !dbg !16733
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !16734
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !16734
  store i32 1, i32* %tmp8.i75, align 4, !dbg !16734
  %16 = load i32, i32* %tmp8.i75, align 4, !dbg !16734
  %17 = load i64, i64* %flags.addr.i73, align 8, !dbg !16735
  call void @arch_local_irq_restore(i64 %17) #13, !dbg !16735
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16736, !srcloc !6814
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i72, align 8, !dbg !16737
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !16737
  %rlock.i76 = bitcast %union.anon.2* %19 to %struct.raw_spinlock*, !dbg !16737
  store i32 0, i32* %retval, align 4, !dbg !16738
  br label %return, !dbg !16738

if.end:                                           ; preds = %lor.lhs.false
  %20 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16739
  %lpm_command = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %20, i32 0, i32 40, !dbg !16740
  %21 = load %struct.xhci_command*, %struct.xhci_command** %lpm_command, align 8, !dbg !16740
  store %struct.xhci_command* %21, %struct.xhci_command** %command, align 8, !dbg !16741
  %22 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16742
  %in_ctx = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %22, i32 0, i32 0, !dbg !16743
  %23 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx, align 8, !dbg !16743
  %call24 = call %struct.xhci_input_control_ctx* @xhci_get_input_control_ctx(%struct.xhci_container_ctx* %23) #11, !dbg !16744
  store %struct.xhci_input_control_ctx* %call24, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !16745
  %24 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !16746
  %tobool25 = icmp ne %struct.xhci_input_control_ctx* %24, null, !dbg !16746
  br i1 %tobool25, label %if.end29, label %if.then26, !dbg !16747

if.then26:                                        ; preds = %if.end
  %25 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16748
  %lock27 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %25, i32 0, i32 12, !dbg !16749
  %26 = load i64, i64* %flags, align 8, !dbg !16750
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i77, align 8
  store i64 %26, i64* %flags.addr.i78, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !16751
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !16751
  store i32 1, i32* %tmp.i79, align 4, !dbg !16751
  %27 = load i32, i32* %tmp.i79, align 4, !dbg !16751
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !16752
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !16752
  store i32 1, i32* %tmp8.i80, align 4, !dbg !16752
  %28 = load i32, i32* %tmp8.i80, align 4, !dbg !16752
  %29 = load i64, i64* %flags.addr.i78, align 8, !dbg !16753
  call void @arch_local_irq_restore(i64 %29) #13, !dbg !16753
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16754, !srcloc !6814
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i77, align 8, !dbg !16755
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !16755
  %rlock.i81 = bitcast %union.anon.2* %31 to %struct.raw_spinlock*, !dbg !16755
  %32 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16756
  %call28 = call %struct.usb_hcd* @xhci_to_hcd(%struct.xhci_hcd* %32) #11, !dbg !16756
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call28, i32 0, i32 0, !dbg !16756
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !16756
  %33 = load %struct.device*, %struct.device** %controller, align 8, !dbg !16756
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %33, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.xhci_change_max_exit_latency, i64 0, i64 0)) #12, !dbg !16756
  store i32 -12, i32* %retval, align 4, !dbg !16757
  br label %return, !dbg !16757

if.end29:                                         ; preds = %if.end
  %34 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16758
  %35 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16759
  %in_ctx30 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %35, i32 0, i32 0, !dbg !16760
  %36 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx30, align 8, !dbg !16760
  %37 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16761
  %out_ctx = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %37, i32 0, i32 1, !dbg !16762
  %38 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %out_ctx, align 8, !dbg !16762
  call void @xhci_slot_copy(%struct.xhci_hcd* %34, %struct.xhci_container_ctx* %36, %struct.xhci_container_ctx* %38) #11, !dbg !16763
  %39 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16764
  %lock31 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %39, i32 0, i32 12, !dbg !16765
  %40 = load i64, i64* %flags, align 8, !dbg !16766
  store %struct.spinlock* %lock31, %struct.spinlock** %lock.addr.i82, align 8
  store i64 %40, i64* %flags.addr.i83, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !16767
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !16767
  store i32 1, i32* %tmp.i84, align 4, !dbg !16767
  %41 = load i32, i32* %tmp.i84, align 4, !dbg !16767
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !16768
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !16768
  store i32 1, i32* %tmp8.i85, align 4, !dbg !16768
  %42 = load i32, i32* %tmp8.i85, align 4, !dbg !16768
  %43 = load i64, i64* %flags.addr.i83, align 8, !dbg !16769
  call void @arch_local_irq_restore(i64 %43) #13, !dbg !16769
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16770, !srcloc !6814
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i82, align 8, !dbg !16771
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !16771
  %rlock.i86 = bitcast %union.anon.2* %45 to %struct.raw_spinlock*, !dbg !16771
  %46 = load %struct.xhci_input_control_ctx*, %struct.xhci_input_control_ctx** %ctrl_ctx, align 8, !dbg !16772
  %add_flags = getelementptr inbounds %struct.xhci_input_control_ctx, %struct.xhci_input_control_ctx* %46, i32 0, i32 1, !dbg !16773
  %47 = load i32, i32* %add_flags, align 4, !dbg !16774
  %or = or i32 %47, 1, !dbg !16774
  store i32 %or, i32* %add_flags, align 4, !dbg !16774
  %48 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16775
  %49 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16776
  %in_ctx32 = getelementptr inbounds %struct.xhci_command, %struct.xhci_command* %49, i32 0, i32 0, !dbg !16777
  %50 = load %struct.xhci_container_ctx*, %struct.xhci_container_ctx** %in_ctx32, align 8, !dbg !16777
  %call33 = call %struct.xhci_slot_ctx* @xhci_get_slot_ctx(%struct.xhci_hcd* %48, %struct.xhci_container_ctx* %50) #11, !dbg !16778
  store %struct.xhci_slot_ctx* %call33, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16779
  %51 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16780
  %dev_info2 = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %51, i32 0, i32 1, !dbg !16781
  %52 = load i32, i32* %dev_info2, align 4, !dbg !16782
  %and = and i32 %52, -65536, !dbg !16782
  store i32 %and, i32* %dev_info2, align 4, !dbg !16782
  %53 = load i16, i16* %max_exit_latency.addr, align 2, !dbg !16783
  %conv34 = zext i16 %53 to i32, !dbg !16783
  %54 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16784
  %dev_info235 = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %54, i32 0, i32 1, !dbg !16785
  %55 = load i32, i32* %dev_info235, align 4, !dbg !16786
  %or36 = or i32 %55, %conv34, !dbg !16786
  store i32 %or36, i32* %dev_info235, align 4, !dbg !16786
  %56 = load %struct.xhci_slot_ctx*, %struct.xhci_slot_ctx** %slot_ctx, align 8, !dbg !16787
  %dev_state = getelementptr inbounds %struct.xhci_slot_ctx, %struct.xhci_slot_ctx* %56, i32 0, i32 3, !dbg !16788
  store i32 0, i32* %dev_state, align 4, !dbg !16789
  %57 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16790
  call void (%struct.xhci_hcd*, void (%struct.va_format*)*, i8*, ...) @xhci_dbg_trace(%struct.xhci_hcd* %57, void (%struct.va_format*)* @trace_xhci_dbg_context_change, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.136, i64 0, i64 0)) #11, !dbg !16791
  %58 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16792
  %59 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16793
  %60 = load %struct.xhci_command*, %struct.xhci_command** %command, align 8, !dbg !16794
  %call37 = call i32 @xhci_configure_endpoint(%struct.xhci_hcd* %58, %struct.usb_device* %59, %struct.xhci_command* %60, i1 zeroext true, i1 zeroext true) #11, !dbg !16795
  store i32 %call37, i32* %ret, align 4, !dbg !16796
  %61 = load i32, i32* %ret, align 4, !dbg !16797
  %tobool38 = icmp ne i32 %61, 0, !dbg !16797
  br i1 %tobool38, label %if.end69, label %if.then39, !dbg !16798

if.then39:                                        ; preds = %if.end29
  br label %do.body40, !dbg !16799

do.body40:                                        ; preds = %if.then39
  br label %do.body41, !dbg !16800

do.body41:                                        ; preds = %do.body40
  call void @llvm.dbg.declare(metadata i64* %__dummy42, metadata !16801, metadata !DIExpression()), !dbg !16803
  call void @llvm.dbg.declare(metadata i64* %__dummy243, metadata !16804, metadata !DIExpression()), !dbg !16803
  %cmp44 = icmp eq i64* %__dummy42, %__dummy243, !dbg !16803
  %conv45 = zext i1 %cmp44 to i32, !dbg !16803
  store i32 1, i32* %tmp46, align 4, !dbg !16803
  %62 = load i32, i32* %tmp46, align 4, !dbg !16803
  br label %do.body47, !dbg !16805

do.body47:                                        ; preds = %do.body41
  br label %do.body48, !dbg !16806

do.body48:                                        ; preds = %do.body47
  br label %do.body49, !dbg !16807

do.body49:                                        ; preds = %do.body48
  call void @llvm.dbg.declare(metadata i64* %__dummy50, metadata !16809, metadata !DIExpression()), !dbg !16812
  call void @llvm.dbg.declare(metadata i64* %__dummy251, metadata !16813, metadata !DIExpression()), !dbg !16812
  %cmp52 = icmp eq i64* %__dummy50, %__dummy251, !dbg !16812
  %conv53 = zext i1 %cmp52 to i32, !dbg !16812
  store i32 1, i32* %tmp54, align 4, !dbg !16812
  %63 = load i32, i32* %tmp54, align 4, !dbg !16812
  %call55 = call i64 @arch_local_irq_save() #11, !dbg !16814
  store i64 %call55, i64* %flags, align 8, !dbg !16814
  br label %do.end56, !dbg !16814

do.end56:                                         ; preds = %do.body49
  br label %do.end57, !dbg !16807

do.end57:                                         ; preds = %do.end56
  br label %do.body58, !dbg !16806

do.body58:                                        ; preds = %do.end57
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16815, !srcloc !16816
  br label %do.body59, !dbg !16815

do.body59:                                        ; preds = %do.body58
  %64 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16817
  %lock60 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %64, i32 0, i32 12, !dbg !16817
  store %struct.spinlock* %lock60, %struct.spinlock** %lock.addr.i87, align 8
  %65 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i87, align 8, !dbg !16818
  %66 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %65, i32 0, i32 0, !dbg !16819
  %rlock.i88 = bitcast %union.anon.2* %66 to %struct.raw_spinlock*, !dbg !16819
  br label %do.end62, !dbg !16817

do.end62:                                         ; preds = %do.body59
  br label %do.end63, !dbg !16815

do.end63:                                         ; preds = %do.end62
  br label %do.end64, !dbg !16806

do.end64:                                         ; preds = %do.end63
  br label %do.end65, !dbg !16805

do.end65:                                         ; preds = %do.end64
  br label %do.end66, !dbg !16800

do.end66:                                         ; preds = %do.end65
  %67 = load i16, i16* %max_exit_latency.addr, align 2, !dbg !16820
  %68 = load %struct.xhci_virt_device*, %struct.xhci_virt_device** %virt_dev, align 8, !dbg !16821
  %current_mel67 = getelementptr inbounds %struct.xhci_virt_device, %struct.xhci_virt_device* %68, i32 0, i32 9, !dbg !16822
  store i16 %67, i16* %current_mel67, align 8, !dbg !16823
  %69 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16824
  %lock68 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %69, i32 0, i32 12, !dbg !16825
  %70 = load i64, i64* %flags, align 8, !dbg !16826
  store %struct.spinlock* %lock68, %struct.spinlock** %lock.addr.i70, align 8
  store i64 %70, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !336, metadata !6799, metadata !DIExpression()) #8, !dbg !16827
  call void @llvm.dbg.declare(metadata !336, metadata !6803, metadata !DIExpression()) #8, !dbg !16827
  store i32 1, i32* %tmp.i, align 4, !dbg !16827
  %71 = load i32, i32* %tmp.i, align 4, !dbg !16827
  call void @llvm.dbg.declare(metadata !336, metadata !6804, metadata !DIExpression()) #8, !dbg !16828
  call void @llvm.dbg.declare(metadata !336, metadata !6810, metadata !DIExpression()) #8, !dbg !16828
  store i32 1, i32* %tmp8.i, align 4, !dbg !16828
  %72 = load i32, i32* %tmp8.i, align 4, !dbg !16828
  %73 = load i64, i64* %flags.addr.i, align 8, !dbg !16829
  call void @arch_local_irq_restore(i64 %73) #13, !dbg !16829
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !16830, !srcloc !6814
  %74 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i70, align 8, !dbg !16831
  %75 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %74, i32 0, i32 0, !dbg !16831
  %rlock.i71 = bitcast %union.anon.2* %75 to %struct.raw_spinlock*, !dbg !16831
  br label %if.end69, !dbg !16832

if.end69:                                         ; preds = %do.end66, %if.end29
  %76 = load i32, i32* %ret, align 4, !dbg !16833
  store i32 %76, i32* %retval, align 4, !dbg !16834
  br label %return, !dbg !16834

return:                                           ; preds = %if.end69, %if.then26, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !16835
  ret i32 %77, !dbg !16835
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_calculate_usb2_hw_lpm_params(%struct.usb_device* %udev) #1 !dbg !16836 {
entry:
  %udev.addr = alloca %struct.usb_device*, align 8
  %field = alloca i32, align 4
  %l1 = alloca i32, align 4
  %besld = alloca i32, align 4
  %hirdm = alloca i32, align 4
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !16839, metadata !DIExpression()), !dbg !16840
  call void @llvm.dbg.declare(metadata i32* %field, metadata !16841, metadata !DIExpression()), !dbg !16842
  call void @llvm.dbg.declare(metadata i32* %l1, metadata !16843, metadata !DIExpression()), !dbg !16844
  call void @llvm.dbg.declare(metadata i32* %besld, metadata !16845, metadata !DIExpression()), !dbg !16846
  store i32 0, i32* %besld, align 4, !dbg !16846
  call void @llvm.dbg.declare(metadata i32* %hirdm, metadata !16847, metadata !DIExpression()), !dbg !16848
  store i32 0, i32* %hirdm, align 4, !dbg !16848
  %0 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16849
  %bos = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 17, !dbg !16849
  %1 = load %struct.usb_host_bos*, %struct.usb_host_bos** %bos, align 8, !dbg !16849
  %ext_cap = getelementptr inbounds %struct.usb_host_bos, %struct.usb_host_bos* %1, i32 0, i32 1, !dbg !16849
  %2 = load %struct.usb_ext_cap_descriptor*, %struct.usb_ext_cap_descriptor** %ext_cap, align 8, !dbg !16849
  %bmAttributes = getelementptr inbounds %struct.usb_ext_cap_descriptor, %struct.usb_ext_cap_descriptor* %2, i32 0, i32 3, !dbg !16849
  %3 = load i32, i32* %bmAttributes, align 1, !dbg !16849
  store i32 %3, i32* %field, align 4, !dbg !16850
  %4 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16851
  %l1_params = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 46, !dbg !16852
  %timeout = getelementptr inbounds %struct.usb2_lpm_parameters, %struct.usb2_lpm_parameters* %l1_params, i32 0, i32 1, !dbg !16853
  %5 = load i32, i32* %timeout, align 4, !dbg !16853
  %div = sdiv i32 %5, 256, !dbg !16854
  store i32 %div, i32* %l1, align 4, !dbg !16855
  %6 = load i32, i32* %field, align 4, !dbg !16856
  %and = and i32 %6, 16, !dbg !16858
  %tobool = icmp ne i32 %and, 0, !dbg !16858
  br i1 %tobool, label %if.then, label %if.end, !dbg !16859

if.then:                                          ; preds = %entry
  %7 = load i32, i32* %field, align 4, !dbg !16860
  %and1 = and i32 %7, 61440, !dbg !16860
  %shr = lshr i32 %and1, 12, !dbg !16860
  store i32 %shr, i32* %besld, align 4, !dbg !16862
  store i32 1, i32* %hirdm, align 4, !dbg !16863
  br label %if.end, !dbg !16864

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %besld, align 4, !dbg !16865
  %and2 = and i32 %8, 15, !dbg !16865
  %shl = shl i32 %and2, 10, !dbg !16865
  %9 = load i32, i32* %l1, align 4, !dbg !16866
  %and3 = and i32 %9, 255, !dbg !16866
  %shl4 = shl i32 %and3, 2, !dbg !16866
  %or = or i32 %shl, %shl4, !dbg !16867
  %10 = load i32, i32* %hirdm, align 4, !dbg !16868
  %and5 = and i32 %10, 3, !dbg !16868
  %or6 = or i32 %or, %and5, !dbg !16869
  ret i32 %or6, !dbg !16870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_calculate_hird_besl(%struct.xhci_hcd* %xhci, %struct.usb_device* %udev) #1 !dbg !16871 {
entry:
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %u2del = alloca i32, align 4
  %besl = alloca i32, align 4
  %besl_host = alloca i32, align 4
  %besl_device = alloca i32, align 4
  %field = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !16874, metadata !DIExpression()), !dbg !16875
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !16876, metadata !DIExpression()), !dbg !16877
  call void @llvm.dbg.declare(metadata i32* %u2del, metadata !16878, metadata !DIExpression()), !dbg !16879
  call void @llvm.dbg.declare(metadata i32* %besl, metadata !16880, metadata !DIExpression()), !dbg !16881
  call void @llvm.dbg.declare(metadata i32* %besl_host, metadata !16882, metadata !DIExpression()), !dbg !16883
  call void @llvm.dbg.declare(metadata i32* %besl_device, metadata !16884, metadata !DIExpression()), !dbg !16885
  store i32 0, i32* %besl_device, align 4, !dbg !16885
  call void @llvm.dbg.declare(metadata i32* %field, metadata !16886, metadata !DIExpression()), !dbg !16887
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !16888
  %hcs_params3 = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 9, !dbg !16888
  %1 = load i32, i32* %hcs_params3, align 8, !dbg !16888
  %shr = lshr i32 %1, 16, !dbg !16888
  %and = and i32 %shr, 65535, !dbg !16888
  store i32 %and, i32* %u2del, align 4, !dbg !16889
  %2 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16890
  %bos = getelementptr inbounds %struct.usb_device, %struct.usb_device* %2, i32 0, i32 17, !dbg !16890
  %3 = load %struct.usb_host_bos*, %struct.usb_host_bos** %bos, align 8, !dbg !16890
  %ext_cap = getelementptr inbounds %struct.usb_host_bos, %struct.usb_host_bos* %3, i32 0, i32 1, !dbg !16890
  %4 = load %struct.usb_ext_cap_descriptor*, %struct.usb_ext_cap_descriptor** %ext_cap, align 8, !dbg !16890
  %bmAttributes = getelementptr inbounds %struct.usb_ext_cap_descriptor, %struct.usb_ext_cap_descriptor* %4, i32 0, i32 3, !dbg !16890
  %5 = load i32, i32* %bmAttributes, align 1, !dbg !16890
  store i32 %5, i32* %field, align 4, !dbg !16891
  %6 = load i32, i32* %field, align 4, !dbg !16892
  %and1 = and i32 %6, 4, !dbg !16894
  %tobool = icmp ne i32 %and1, 0, !dbg !16894
  br i1 %tobool, label %if.then, label %if.else16, !dbg !16895

if.then:                                          ; preds = %entry
  store i32 0, i32* %besl_host, align 4, !dbg !16896
  br label %for.cond, !dbg !16899

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32, i32* %besl_host, align 4, !dbg !16900
  %cmp = icmp slt i32 %7, 16, !dbg !16902
  br i1 %cmp, label %for.body, label %for.end, !dbg !16903

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %besl_host, align 4, !dbg !16904
  %idxprom = sext i32 %8 to i64, !dbg !16907
  %arrayidx = getelementptr [16 x i32], [16 x i32]* @xhci_besl_encoding, i64 0, i64 %idxprom, !dbg !16907
  %9 = load i32, i32* %arrayidx, align 4, !dbg !16907
  %10 = load i32, i32* %u2del, align 4, !dbg !16908
  %cmp2 = icmp sge i32 %9, %10, !dbg !16909
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !16910

if.then3:                                         ; preds = %for.body
  br label %for.end, !dbg !16911

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !16912

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %besl_host, align 4, !dbg !16913
  %inc = add i32 %11, 1, !dbg !16913
  store i32 %inc, i32* %besl_host, align 4, !dbg !16913
  br label %for.cond, !dbg !16914, !llvm.loop !16915

for.end:                                          ; preds = %if.then3, %for.cond
  %12 = load i32, i32* %field, align 4, !dbg !16917
  %and4 = and i32 %12, 8, !dbg !16919
  %tobool5 = icmp ne i32 %and4, 0, !dbg !16919
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !16920

if.then6:                                         ; preds = %for.end
  %13 = load i32, i32* %field, align 4, !dbg !16921
  %and7 = and i32 %13, 3840, !dbg !16921
  %shr8 = lshr i32 %and7, 8, !dbg !16921
  store i32 %shr8, i32* %besl_device, align 4, !dbg !16922
  br label %if.end15, !dbg !16923

if.else:                                          ; preds = %for.end
  %14 = load i32, i32* %field, align 4, !dbg !16924
  %and9 = and i32 %14, 16, !dbg !16926
  %tobool10 = icmp ne i32 %and9, 0, !dbg !16926
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !16927

if.then11:                                        ; preds = %if.else
  %15 = load i32, i32* %field, align 4, !dbg !16928
  %and12 = and i32 %15, 61440, !dbg !16928
  %shr13 = lshr i32 %and12, 12, !dbg !16928
  store i32 %shr13, i32* %besl_device, align 4, !dbg !16929
  br label %if.end14, !dbg !16930

if.end14:                                         ; preds = %if.then11, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then6
  br label %if.end21, !dbg !16931

if.else16:                                        ; preds = %entry
  %16 = load i32, i32* %u2del, align 4, !dbg !16932
  %cmp17 = icmp sle i32 %16, 50, !dbg !16935
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !16936

if.then18:                                        ; preds = %if.else16
  store i32 0, i32* %besl_host, align 4, !dbg !16937
  br label %if.end20, !dbg !16938

if.else19:                                        ; preds = %if.else16
  %17 = load i32, i32* %u2del, align 4, !dbg !16939
  %sub = sub i32 %17, 51, !dbg !16940
  %div = sdiv i32 %sub, 75, !dbg !16941
  %add = add i32 %div, 1, !dbg !16942
  store i32 %add, i32* %besl_host, align 4, !dbg !16943
  br label %if.end20

if.end20:                                         ; preds = %if.else19, %if.then18
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end15
  %18 = load i32, i32* %besl_host, align 4, !dbg !16944
  %19 = load i32, i32* %besl_device, align 4, !dbg !16945
  %add22 = add i32 %18, %19, !dbg !16946
  store i32 %add22, i32* %besl, align 4, !dbg !16947
  %20 = load i32, i32* %besl, align 4, !dbg !16948
  %cmp23 = icmp sgt i32 %20, 15, !dbg !16950
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !16951

if.then24:                                        ; preds = %if.end21
  store i32 15, i32* %besl, align 4, !dbg !16952
  br label %if.end25, !dbg !16953

if.end25:                                         ; preds = %if.then24, %if.end21
  %21 = load i32, i32* %besl, align 4, !dbg !16954
  ret i32 %21, !dbg !16955
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @xhci_calculate_lpm_timeout(%struct.usb_hcd* %hcd, %struct.usb_device* %udev, i32 %state) #1 !dbg !16956 {
entry:
  %retval = alloca i16, align 2
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %state.addr = alloca i32, align 4
  %xhci = alloca %struct.xhci_hcd*, align 8
  %config = alloca %struct.usb_host_config*, align 8
  %state_name = alloca i8*, align 8
  %i = alloca i32, align 4
  %timeout = alloca i16, align 2
  %driver = alloca %struct.usb_driver*, align 8
  %intf = alloca %struct.usb_interface*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.usb_driver*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !16959, metadata !DIExpression()), !dbg !16960
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !16961, metadata !DIExpression()), !dbg !16962
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !16963, metadata !DIExpression()), !dbg !16964
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci, metadata !16965, metadata !DIExpression()), !dbg !16966
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !16967
  %call = call %struct.xhci_hcd* @hcd_to_xhci(%struct.usb_hcd* %0) #11, !dbg !16968
  store %struct.xhci_hcd* %call, %struct.xhci_hcd** %xhci, align 8, !dbg !16966
  call void @llvm.dbg.declare(metadata %struct.usb_host_config** %config, metadata !16969, metadata !DIExpression()), !dbg !16970
  call void @llvm.dbg.declare(metadata i8** %state_name, metadata !16971, metadata !DIExpression()), !dbg !16972
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16973, metadata !DIExpression()), !dbg !16974
  call void @llvm.dbg.declare(metadata i16* %timeout, metadata !16975, metadata !DIExpression()), !dbg !16976
  store i16 0, i16* %timeout, align 2, !dbg !16976
  %1 = load i32, i32* %state.addr, align 4, !dbg !16977
  %cmp = icmp eq i32 %1, 1, !dbg !16979
  br i1 %cmp, label %if.then, label %if.else, !dbg !16980

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i64 0, i64 0), i8** %state_name, align 8, !dbg !16981
  br label %if.end4, !dbg !16982

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %state.addr, align 4, !dbg !16983
  %cmp1 = icmp eq i32 %2, 2, !dbg !16985
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !16986

if.then2:                                         ; preds = %if.else
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.138, i64 0, i64 0), i8** %state_name, align 8, !dbg !16987
  br label %if.end, !dbg !16988

if.else3:                                         ; preds = %if.else
  %3 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16989
  %dev = getelementptr inbounds %struct.usb_device, %struct.usb_device* %3, i32 0, i32 14, !dbg !16989
  %4 = load i32, i32* %state.addr, align 4, !dbg !16989
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.139, i64 0, i64 0), i32 %4) #12, !dbg !16989
  %5 = load i16, i16* %timeout, align 2, !dbg !16991
  store i16 %5, i16* %retval, align 2, !dbg !16992
  br label %return, !dbg !16992

if.end:                                           ; preds = %if.then2
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %6 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !16993
  %7 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16995
  %8 = load i32, i32* %state.addr, align 4, !dbg !16996
  %call5 = call i32 @xhci_check_tier_policy(%struct.xhci_hcd* %6, %struct.usb_device* %7, i32 %8) #11, !dbg !16997
  %cmp6 = icmp slt i32 %call5, 0, !dbg !16998
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !16999

if.then7:                                         ; preds = %if.end4
  %9 = load i16, i16* %timeout, align 2, !dbg !17000
  store i16 %9, i16* %retval, align 2, !dbg !17001
  br label %return, !dbg !17001

if.end8:                                          ; preds = %if.end4
  %10 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !17002
  %11 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17004
  %12 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17005
  %ep0 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 13, !dbg !17006
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep0, i32 0, i32 0, !dbg !17007
  %13 = load i32, i32* %state.addr, align 4, !dbg !17008
  %call9 = call i32 @xhci_update_timeout_for_endpoint(%struct.xhci_hcd* %10, %struct.usb_device* %11, %struct.usb_endpoint_descriptor* %desc, i32 %13, i16* %timeout) #11, !dbg !17009
  %tobool = icmp ne i32 %call9, 0, !dbg !17009
  br i1 %tobool, label %if.then10, label %if.end11, !dbg !17010

if.then10:                                        ; preds = %if.end8
  %14 = load i16, i16* %timeout, align 2, !dbg !17011
  store i16 %14, i16* %retval, align 2, !dbg !17012
  br label %return, !dbg !17012

if.end11:                                         ; preds = %if.end8
  %15 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17013
  %actconfig = getelementptr inbounds %struct.usb_device, %struct.usb_device* %15, i32 0, i32 19, !dbg !17014
  %16 = load %struct.usb_host_config*, %struct.usb_host_config** %actconfig, align 8, !dbg !17014
  store %struct.usb_host_config* %16, %struct.usb_host_config** %config, align 8, !dbg !17015
  %17 = load %struct.usb_host_config*, %struct.usb_host_config** %config, align 8, !dbg !17016
  %tobool12 = icmp ne %struct.usb_host_config* %17, null, !dbg !17016
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !17018

if.then13:                                        ; preds = %if.end11
  %18 = load i16, i16* %timeout, align 2, !dbg !17019
  store i16 %18, i16* %retval, align 2, !dbg !17020
  br label %return, !dbg !17020

if.end14:                                         ; preds = %if.end11
  store i32 0, i32* %i, align 4, !dbg !17021
  br label %for.cond, !dbg !17023

for.cond:                                         ; preds = %for.inc, %if.end14
  %19 = load i32, i32* %i, align 4, !dbg !17024
  %20 = load %struct.usb_host_config*, %struct.usb_host_config** %config, align 8, !dbg !17026
  %desc15 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %20, i32 0, i32 0, !dbg !17027
  %bNumInterfaces = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %desc15, i32 0, i32 3, !dbg !17028
  %21 = load i8, i8* %bNumInterfaces, align 4, !dbg !17028
  %conv = zext i8 %21 to i32, !dbg !17026
  %cmp16 = icmp slt i32 %19, %conv, !dbg !17029
  br i1 %cmp16, label %for.body, label %for.end, !dbg !17030

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.usb_driver** %driver, metadata !17031, metadata !DIExpression()), !dbg !17033
  call void @llvm.dbg.declare(metadata %struct.usb_interface** %intf, metadata !17034, metadata !DIExpression()), !dbg !17035
  %22 = load %struct.usb_host_config*, %struct.usb_host_config** %config, align 8, !dbg !17036
  %interface = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %22, i32 0, i32 3, !dbg !17037
  %23 = load i32, i32* %i, align 4, !dbg !17038
  %idxprom = sext i32 %23 to i64, !dbg !17036
  %arrayidx = getelementptr [32 x %struct.usb_interface*], [32 x %struct.usb_interface*]* %interface, i64 0, i64 %idxprom, !dbg !17036
  %24 = load %struct.usb_interface*, %struct.usb_interface** %arrayidx, align 8, !dbg !17036
  store %struct.usb_interface* %24, %struct.usb_interface** %intf, align 8, !dbg !17035
  %25 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !17039
  %tobool18 = icmp ne %struct.usb_interface* %25, null, !dbg !17039
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !17041

if.then19:                                        ; preds = %for.body
  br label %for.inc, !dbg !17042

if.end20:                                         ; preds = %for.body
  %26 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !17043
  %dev21 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %26, i32 0, i32 7, !dbg !17045
  %driver22 = getelementptr inbounds %struct.device, %struct.device* %dev21, i32 0, i32 6, !dbg !17046
  %27 = load %struct.device_driver*, %struct.device_driver** %driver22, align 8, !dbg !17046
  %tobool23 = icmp ne %struct.device_driver* %27, null, !dbg !17043
  br i1 %tobool23, label %if.then24, label %if.end37, !dbg !17047

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !17048, metadata !DIExpression()), !dbg !17051
  %28 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !17051
  %dev25 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %28, i32 0, i32 7, !dbg !17051
  %driver26 = getelementptr inbounds %struct.device, %struct.device* %dev25, i32 0, i32 6, !dbg !17051
  %29 = load %struct.device_driver*, %struct.device_driver** %driver26, align 8, !dbg !17051
  %30 = bitcast %struct.device_driver* %29 to i8*, !dbg !17051
  store i8* %30, i8** %__mptr, align 8, !dbg !17051
  br label %do.body, !dbg !17051

do.body:                                          ; preds = %if.then24
  br label %do.end, !dbg !17052

do.end:                                           ; preds = %do.body
  %31 = load i8*, i8** %__mptr, align 8, !dbg !17051
  %add.ptr = getelementptr i8, i8* %31, i64 -104, !dbg !17051
  %32 = bitcast i8* %add.ptr to %struct.usb_driver*, !dbg !17051
  store %struct.usb_driver* %32, %struct.usb_driver** %tmp, align 8, !dbg !17052
  %33 = load %struct.usb_driver*, %struct.usb_driver** %tmp, align 8, !dbg !17051
  store %struct.usb_driver* %33, %struct.usb_driver** %driver, align 8, !dbg !17054
  %34 = load %struct.usb_driver*, %struct.usb_driver** %driver, align 8, !dbg !17055
  %tobool27 = icmp ne %struct.usb_driver* %34, null, !dbg !17055
  br i1 %tobool27, label %land.lhs.true, label %if.end36, !dbg !17057

land.lhs.true:                                    ; preds = %do.end
  %35 = load %struct.usb_driver*, %struct.usb_driver** %driver, align 8, !dbg !17058
  %disable_hub_initiated_lpm = getelementptr inbounds %struct.usb_driver, %struct.usb_driver* %35, i32 0, i32 13, !dbg !17059
  %bf.load = load i8, i8* %disable_hub_initiated_lpm, align 8, !dbg !17059
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !17059
  %bf.clear = and i8 %bf.lshr, 1, !dbg !17059
  %bf.cast = zext i8 %bf.clear to i32, !dbg !17059
  %tobool28 = icmp ne i32 %bf.cast, 0, !dbg !17058
  br i1 %tobool28, label %if.then29, label %if.end36, !dbg !17060

if.then29:                                        ; preds = %land.lhs.true
  %36 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17061
  %37 = load i32, i32* %state.addr, align 4, !dbg !17063
  %call30 = call zeroext i16 @xhci_get_timeout_no_hub_lpm(%struct.usb_device* %36, i32 %37) #11, !dbg !17064
  store i16 %call30, i16* %timeout, align 2, !dbg !17065
  %38 = load i16, i16* %timeout, align 2, !dbg !17066
  %conv31 = zext i16 %38 to i32, !dbg !17066
  %cmp32 = icmp eq i32 %conv31, 0, !dbg !17068
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !17069

if.then34:                                        ; preds = %if.then29
  %39 = load i16, i16* %timeout, align 2, !dbg !17070
  store i16 %39, i16* %retval, align 2, !dbg !17071
  br label %return, !dbg !17071

if.end35:                                         ; preds = %if.then29
  br label %if.end36, !dbg !17072

if.end36:                                         ; preds = %if.end35, %land.lhs.true, %do.end
  br label %if.end37, !dbg !17073

if.end37:                                         ; preds = %if.end36, %if.end20
  %40 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !17074
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %40, i32 0, i32 1, !dbg !17076
  %41 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !dbg !17076
  %tobool38 = icmp ne %struct.usb_host_interface* %41, null, !dbg !17074
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !17077

if.then39:                                        ; preds = %if.end37
  br label %for.inc, !dbg !17078

if.end40:                                         ; preds = %if.end37
  %42 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci, align 8, !dbg !17079
  %43 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17081
  %44 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !dbg !17082
  %cur_altsetting41 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %44, i32 0, i32 1, !dbg !17083
  %45 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting41, align 8, !dbg !17083
  %46 = load i32, i32* %state.addr, align 4, !dbg !17084
  %call42 = call i32 @xhci_update_timeout_for_interface(%struct.xhci_hcd* %42, %struct.usb_device* %43, %struct.usb_host_interface* %45, i32 %46, i16* %timeout) #11, !dbg !17085
  %tobool43 = icmp ne i32 %call42, 0, !dbg !17085
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !17086

if.then44:                                        ; preds = %if.end40
  %47 = load i16, i16* %timeout, align 2, !dbg !17087
  store i16 %47, i16* %retval, align 2, !dbg !17088
  br label %return, !dbg !17088

if.end45:                                         ; preds = %if.end40
  br label %for.inc, !dbg !17089

for.inc:                                          ; preds = %if.end45, %if.then39, %if.then19
  %48 = load i32, i32* %i, align 4, !dbg !17090
  %inc = add i32 %48, 1, !dbg !17090
  store i32 %inc, i32* %i, align 4, !dbg !17090
  br label %for.cond, !dbg !17091, !llvm.loop !17092

for.end:                                          ; preds = %for.cond
  %49 = load i16, i16* %timeout, align 2, !dbg !17094
  store i16 %49, i16* %retval, align 2, !dbg !17095
  br label %return, !dbg !17095

return:                                           ; preds = %for.end, %if.then44, %if.then34, %if.then13, %if.then10, %if.then7, %if.else3
  %50 = load i16, i16* %retval, align 2, !dbg !17096
  ret i16 %50, !dbg !17096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @calculate_max_exit_latency(%struct.usb_device* %udev, i32 %state_changed, i16 zeroext %hub_encoded_timeout) #1 !dbg !17097 {
entry:
  %retval = alloca i32, align 4
  %udev.addr = alloca %struct.usb_device*, align 8
  %state_changed.addr = alloca i32, align 4
  %hub_encoded_timeout.addr = alloca i16, align 2
  %u1_mel_us = alloca i64, align 8
  %u2_mel_us = alloca i64, align 8
  %mel_us = alloca i64, align 8
  %disabling_u1 = alloca i8, align 1
  %disabling_u2 = alloca i8, align 1
  %enabling_u1 = alloca i8, align 1
  %enabling_u2 = alloca i8, align 1
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !17100, metadata !DIExpression()), !dbg !17101
  store i32 %state_changed, i32* %state_changed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state_changed.addr, metadata !17102, metadata !DIExpression()), !dbg !17103
  store i16 %hub_encoded_timeout, i16* %hub_encoded_timeout.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %hub_encoded_timeout.addr, metadata !17104, metadata !DIExpression()), !dbg !17105
  call void @llvm.dbg.declare(metadata i64* %u1_mel_us, metadata !17106, metadata !DIExpression()), !dbg !17107
  store i64 0, i64* %u1_mel_us, align 8, !dbg !17107
  call void @llvm.dbg.declare(metadata i64* %u2_mel_us, metadata !17108, metadata !DIExpression()), !dbg !17109
  store i64 0, i64* %u2_mel_us, align 8, !dbg !17109
  call void @llvm.dbg.declare(metadata i64* %mel_us, metadata !17110, metadata !DIExpression()), !dbg !17111
  store i64 0, i64* %mel_us, align 8, !dbg !17111
  call void @llvm.dbg.declare(metadata i8* %disabling_u1, metadata !17112, metadata !DIExpression()), !dbg !17113
  call void @llvm.dbg.declare(metadata i8* %disabling_u2, metadata !17114, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.declare(metadata i8* %enabling_u1, metadata !17116, metadata !DIExpression()), !dbg !17117
  call void @llvm.dbg.declare(metadata i8* %enabling_u2, metadata !17118, metadata !DIExpression()), !dbg !17119
  %0 = load i32, i32* %state_changed.addr, align 4, !dbg !17120
  %cmp = icmp eq i32 %0, 1, !dbg !17121
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !17122

land.rhs:                                         ; preds = %entry
  %1 = load i16, i16* %hub_encoded_timeout.addr, align 2, !dbg !17123
  %conv = zext i16 %1 to i32, !dbg !17123
  %cmp1 = icmp eq i32 %conv, 0, !dbg !17124
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !17125
  %frombool = zext i1 %2 to i8, !dbg !17126
  store i8 %frombool, i8* %disabling_u1, align 1, !dbg !17126
  %3 = load i32, i32* %state_changed.addr, align 4, !dbg !17127
  %cmp3 = icmp eq i32 %3, 2, !dbg !17128
  br i1 %cmp3, label %land.rhs5, label %land.end9, !dbg !17129

land.rhs5:                                        ; preds = %land.end
  %4 = load i16, i16* %hub_encoded_timeout.addr, align 2, !dbg !17130
  %conv6 = zext i16 %4 to i32, !dbg !17130
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !17131
  br label %land.end9

land.end9:                                        ; preds = %land.rhs5, %land.end
  %5 = phi i1 [ false, %land.end ], [ %cmp7, %land.rhs5 ], !dbg !17125
  %frombool10 = zext i1 %5 to i8, !dbg !17132
  store i8 %frombool10, i8* %disabling_u2, align 1, !dbg !17132
  %6 = load i32, i32* %state_changed.addr, align 4, !dbg !17133
  %cmp11 = icmp eq i32 %6, 1, !dbg !17134
  br i1 %cmp11, label %land.rhs13, label %land.end17, !dbg !17135

land.rhs13:                                       ; preds = %land.end9
  %7 = load i16, i16* %hub_encoded_timeout.addr, align 2, !dbg !17136
  %conv14 = zext i16 %7 to i32, !dbg !17136
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !17137
  br label %land.end17

land.end17:                                       ; preds = %land.rhs13, %land.end9
  %8 = phi i1 [ false, %land.end9 ], [ %cmp15, %land.rhs13 ], !dbg !17125
  %frombool18 = zext i1 %8 to i8, !dbg !17138
  store i8 %frombool18, i8* %enabling_u1, align 1, !dbg !17138
  %9 = load i32, i32* %state_changed.addr, align 4, !dbg !17139
  %cmp19 = icmp eq i32 %9, 2, !dbg !17140
  br i1 %cmp19, label %land.rhs21, label %land.end25, !dbg !17141

land.rhs21:                                       ; preds = %land.end17
  %10 = load i16, i16* %hub_encoded_timeout.addr, align 2, !dbg !17142
  %conv22 = zext i16 %10 to i32, !dbg !17142
  %cmp23 = icmp ne i32 %conv22, 0, !dbg !17143
  br label %land.end25

land.end25:                                       ; preds = %land.rhs21, %land.end17
  %11 = phi i1 [ false, %land.end17 ], [ %cmp23, %land.rhs21 ], !dbg !17125
  %frombool26 = zext i1 %11 to i8, !dbg !17144
  store i8 %frombool26, i8* %enabling_u2, align 1, !dbg !17144
  %12 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17145
  %u1_params = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 47, !dbg !17147
  %timeout = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u1_params, i32 0, i32 3, !dbg !17148
  %13 = load i32, i32* %timeout, align 4, !dbg !17148
  %cmp27 = icmp ne i32 %13, 0, !dbg !17149
  br i1 %cmp27, label %land.lhs.true, label %lor.lhs.false, !dbg !17150

land.lhs.true:                                    ; preds = %land.end25
  %14 = load i8, i8* %disabling_u1, align 1, !dbg !17151
  %tobool = trunc i8 %14 to i1, !dbg !17151
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !17152

lor.lhs.false:                                    ; preds = %land.lhs.true, %land.end25
  %15 = load i8, i8* %enabling_u1, align 1, !dbg !17153
  %tobool29 = trunc i8 %15 to i1, !dbg !17153
  br i1 %tobool29, label %if.then, label %if.end, !dbg !17154

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %16 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17155
  %u1_params31 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %16, i32 0, i32 47, !dbg !17155
  %mel = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u1_params31, i32 0, i32 0, !dbg !17155
  %17 = load i32, i32* %mel, align 8, !dbg !17155
  %add = add i32 %17, 1000, !dbg !17155
  %sub = sub i32 %add, 1, !dbg !17155
  %div = udiv i32 %sub, 1000, !dbg !17155
  %conv32 = zext i32 %div to i64, !dbg !17155
  store i64 %conv32, i64* %u1_mel_us, align 8, !dbg !17156
  br label %if.end, !dbg !17157

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %18 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17158
  %u2_params = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 48, !dbg !17160
  %timeout33 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u2_params, i32 0, i32 3, !dbg !17161
  %19 = load i32, i32* %timeout33, align 4, !dbg !17161
  %cmp34 = icmp ne i32 %19, 0, !dbg !17162
  br i1 %cmp34, label %land.lhs.true36, label %lor.lhs.false38, !dbg !17163

land.lhs.true36:                                  ; preds = %if.end
  %20 = load i8, i8* %disabling_u2, align 1, !dbg !17164
  %tobool37 = trunc i8 %20 to i1, !dbg !17164
  br i1 %tobool37, label %lor.lhs.false38, label %if.then41, !dbg !17165

lor.lhs.false38:                                  ; preds = %land.lhs.true36, %if.end
  %21 = load i8, i8* %enabling_u2, align 1, !dbg !17166
  %tobool39 = trunc i8 %21 to i1, !dbg !17166
  br i1 %tobool39, label %if.then41, label %if.end48, !dbg !17167

if.then41:                                        ; preds = %lor.lhs.false38, %land.lhs.true36
  %22 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17168
  %u2_params42 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %22, i32 0, i32 48, !dbg !17168
  %mel43 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u2_params42, i32 0, i32 0, !dbg !17168
  %23 = load i32, i32* %mel43, align 8, !dbg !17168
  %add44 = add i32 %23, 1000, !dbg !17168
  %sub45 = sub i32 %add44, 1, !dbg !17168
  %div46 = udiv i32 %sub45, 1000, !dbg !17168
  %conv47 = zext i32 %div46 to i64, !dbg !17168
  store i64 %conv47, i64* %u2_mel_us, align 8, !dbg !17169
  br label %if.end48, !dbg !17170

if.end48:                                         ; preds = %if.then41, %lor.lhs.false38
  %24 = load i64, i64* %u1_mel_us, align 8, !dbg !17171
  %25 = load i64, i64* %u2_mel_us, align 8, !dbg !17173
  %cmp49 = icmp ugt i64 %24, %25, !dbg !17174
  br i1 %cmp49, label %if.then51, label %if.else, !dbg !17175

if.then51:                                        ; preds = %if.end48
  %26 = load i64, i64* %u1_mel_us, align 8, !dbg !17176
  store i64 %26, i64* %mel_us, align 8, !dbg !17177
  br label %if.end52, !dbg !17178

if.else:                                          ; preds = %if.end48
  %27 = load i64, i64* %u2_mel_us, align 8, !dbg !17179
  store i64 %27, i64* %mel_us, align 8, !dbg !17180
  br label %if.end52

if.end52:                                         ; preds = %if.else, %if.then51
  %28 = load i64, i64* %mel_us, align 8, !dbg !17181
  %cmp53 = icmp ugt i64 %28, 65535, !dbg !17183
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !17184

if.then55:                                        ; preds = %if.end52
  %29 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17185
  %dev = getelementptr inbounds %struct.usb_device, %struct.usb_device* %29, i32 0, i32 14, !dbg !17185
  %30 = load i64, i64* %mel_us, align 8, !dbg !17185
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.141, i64 0, i64 0), i64 %30) #12, !dbg !17185
  store i32 -7, i32* %retval, align 4, !dbg !17187
  br label %return, !dbg !17187

if.end56:                                         ; preds = %if.end52
  %31 = load i64, i64* %mel_us, align 8, !dbg !17188
  %conv57 = trunc i64 %31 to i32, !dbg !17188
  store i32 %conv57, i32* %retval, align 4, !dbg !17189
  br label %return, !dbg !17189

return:                                           ; preds = %if.end56, %if.then55
  %32 = load i32, i32* %retval, align 4, !dbg !17190
  ret i32 %32, !dbg !17190
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_check_tier_policy(%struct.xhci_hcd* %xhci, %struct.usb_device* %udev, i32 %state) #1 !dbg !17191 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %state.addr = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !17194, metadata !DIExpression()), !dbg !17195
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !17196, metadata !DIExpression()), !dbg !17197
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !17198, metadata !DIExpression()), !dbg !17199
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !17200
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %0, i32 0, i32 50, !dbg !17202
  %1 = load i64, i64* %quirks, align 8, !dbg !17202
  %and = and i64 %1, 4096, !dbg !17203
  %tobool = icmp ne i64 %and, 0, !dbg !17203
  br i1 %tobool, label %if.then, label %if.else, !dbg !17204

if.then:                                          ; preds = %entry
  %2 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17205
  %3 = load i32, i32* %state.addr, align 4, !dbg !17206
  %call = call i32 @xhci_check_intel_tier_policy(%struct.usb_device* %2, i32 %3) #11, !dbg !17207
  store i32 %call, i32* %retval, align 4, !dbg !17208
  br label %return, !dbg !17208

if.else:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17209
  br label %return, !dbg !17209

return:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !17210
  ret i32 %4, !dbg !17210
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_update_timeout_for_endpoint(%struct.xhci_hcd* %xhci, %struct.usb_device* %udev, %struct.usb_endpoint_descriptor* %desc, i32 %state, i16* %timeout) #1 !dbg !17211 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %desc.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  %state.addr = alloca i32, align 4
  %timeout.addr = alloca i16*, align 8
  %alt_timeout = alloca i16, align 2
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !17215, metadata !DIExpression()), !dbg !17216
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !17217, metadata !DIExpression()), !dbg !17218
  store %struct.usb_endpoint_descriptor* %desc, %struct.usb_endpoint_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %desc.addr, metadata !17219, metadata !DIExpression()), !dbg !17220
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !17221, metadata !DIExpression()), !dbg !17222
  store i16* %timeout, i16** %timeout.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %timeout.addr, metadata !17223, metadata !DIExpression()), !dbg !17224
  call void @llvm.dbg.declare(metadata i16* %alt_timeout, metadata !17225, metadata !DIExpression()), !dbg !17226
  %0 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !17227
  %1 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17228
  %2 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17229
  %3 = load i32, i32* %state.addr, align 4, !dbg !17230
  %4 = load i16*, i16** %timeout.addr, align 8, !dbg !17231
  %call = call zeroext i16 @xhci_call_host_update_timeout_for_endpoint(%struct.xhci_hcd* %0, %struct.usb_device* %1, %struct.usb_endpoint_descriptor* %2, i32 %3, i16* %4) #11, !dbg !17232
  store i16 %call, i16* %alt_timeout, align 2, !dbg !17233
  %5 = load i16, i16* %alt_timeout, align 2, !dbg !17234
  %conv = zext i16 %5 to i32, !dbg !17234
  %cmp = icmp eq i32 %conv, 0, !dbg !17236
  br i1 %cmp, label %if.then, label %if.end, !dbg !17237

if.then:                                          ; preds = %entry
  %6 = load i16, i16* %alt_timeout, align 2, !dbg !17238
  %7 = load i16*, i16** %timeout.addr, align 8, !dbg !17240
  store i16 %6, i16* %7, align 2, !dbg !17241
  store i32 -7, i32* %retval, align 4, !dbg !17242
  br label %return, !dbg !17242

if.end:                                           ; preds = %entry
  %8 = load i16, i16* %alt_timeout, align 2, !dbg !17243
  %conv2 = zext i16 %8 to i32, !dbg !17243
  %9 = load i16*, i16** %timeout.addr, align 8, !dbg !17245
  %10 = load i16, i16* %9, align 2, !dbg !17246
  %conv3 = zext i16 %10 to i32, !dbg !17246
  %cmp4 = icmp sgt i32 %conv2, %conv3, !dbg !17247
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !17248

if.then6:                                         ; preds = %if.end
  %11 = load i16, i16* %alt_timeout, align 2, !dbg !17249
  %12 = load i16*, i16** %timeout.addr, align 8, !dbg !17250
  store i16 %11, i16* %12, align 2, !dbg !17251
  br label %if.end7, !dbg !17252

if.end7:                                          ; preds = %if.then6, %if.end
  store i32 0, i32* %retval, align 4, !dbg !17253
  br label %return, !dbg !17253

return:                                           ; preds = %if.end7, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !17254
  ret i32 %13, !dbg !17254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @xhci_get_timeout_no_hub_lpm(%struct.usb_device* %udev, i32 %state) #1 !dbg !17255 {
entry:
  %retval = alloca i16, align 2
  %udev.addr = alloca %struct.usb_device*, align 8
  %state.addr = alloca i32, align 4
  %sel = alloca i64, align 8
  %pel = alloca i64, align 8
  %max_sel_pel = alloca i32, align 4
  %state_name = alloca i8*, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !17258, metadata !DIExpression()), !dbg !17259
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !17260, metadata !DIExpression()), !dbg !17261
  call void @llvm.dbg.declare(metadata i64* %sel, metadata !17262, metadata !DIExpression()), !dbg !17263
  call void @llvm.dbg.declare(metadata i64* %pel, metadata !17264, metadata !DIExpression()), !dbg !17265
  call void @llvm.dbg.declare(metadata i32* %max_sel_pel, metadata !17266, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.declare(metadata i8** %state_name, metadata !17268, metadata !DIExpression()), !dbg !17269
  %0 = load i32, i32* %state.addr, align 4, !dbg !17270
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb8
  ], !dbg !17271

sw.bb:                                            ; preds = %entry
  %1 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17272
  %u1_params = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 47, !dbg !17272
  %sel1 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u1_params, i32 0, i32 2, !dbg !17272
  %2 = load i32, i32* %sel1, align 8, !dbg !17272
  %add = add i32 %2, 1000, !dbg !17272
  %sub = sub i32 %add, 1, !dbg !17272
  %div = udiv i32 %sub, 1000, !dbg !17272
  %conv = zext i32 %div to i64, !dbg !17272
  store i64 %conv, i64* %sel, align 8, !dbg !17274
  %3 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17275
  %u1_params2 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %3, i32 0, i32 47, !dbg !17275
  %pel3 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u1_params2, i32 0, i32 1, !dbg !17275
  %4 = load i32, i32* %pel3, align 4, !dbg !17275
  %add4 = add i32 %4, 1000, !dbg !17275
  %sub5 = sub i32 %add4, 1, !dbg !17275
  %div6 = udiv i32 %sub5, 1000, !dbg !17275
  %conv7 = zext i32 %div6 to i64, !dbg !17275
  store i64 %conv7, i64* %pel, align 8, !dbg !17276
  store i32 255, i32* %max_sel_pel, align 4, !dbg !17277
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.137, i64 0, i64 0), i8** %state_name, align 8, !dbg !17278
  br label %sw.epilog, !dbg !17279

sw.bb8:                                           ; preds = %entry
  %5 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17280
  %u2_params = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 48, !dbg !17280
  %sel9 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u2_params, i32 0, i32 2, !dbg !17280
  %6 = load i32, i32* %sel9, align 8, !dbg !17280
  %add10 = add i32 %6, 1000, !dbg !17280
  %sub11 = sub i32 %add10, 1, !dbg !17280
  %div12 = udiv i32 %sub11, 1000, !dbg !17280
  %conv13 = zext i32 %div12 to i64, !dbg !17280
  store i64 %conv13, i64* %sel, align 8, !dbg !17281
  %7 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17282
  %u2_params14 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 48, !dbg !17282
  %pel15 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u2_params14, i32 0, i32 1, !dbg !17282
  %8 = load i32, i32* %pel15, align 4, !dbg !17282
  %add16 = add i32 %8, 1000, !dbg !17282
  %sub17 = sub i32 %add16, 1, !dbg !17282
  %div18 = udiv i32 %sub17, 1000, !dbg !17282
  %conv19 = zext i32 %div18 to i64, !dbg !17282
  store i64 %conv19, i64* %pel, align 8, !dbg !17283
  store i32 65535, i32* %max_sel_pel, align 4, !dbg !17284
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.138, i64 0, i64 0), i8** %state_name, align 8, !dbg !17285
  br label %sw.epilog, !dbg !17286

sw.default:                                       ; preds = %entry
  %9 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17287
  %dev = getelementptr inbounds %struct.usb_device, %struct.usb_device* %9, i32 0, i32 14, !dbg !17287
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.xhci_get_timeout_no_hub_lpm, i64 0, i64 0)) #12, !dbg !17287
  store i16 0, i16* %retval, align 2, !dbg !17288
  br label %return, !dbg !17288

sw.epilog:                                        ; preds = %sw.bb8, %sw.bb
  %10 = load i64, i64* %sel, align 8, !dbg !17289
  %11 = load i32, i32* %max_sel_pel, align 4, !dbg !17291
  %conv20 = zext i32 %11 to i64, !dbg !17291
  %cmp = icmp ule i64 %10, %conv20, !dbg !17292
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17293

land.lhs.true:                                    ; preds = %sw.epilog
  %12 = load i64, i64* %pel, align 8, !dbg !17294
  %13 = load i32, i32* %max_sel_pel, align 4, !dbg !17295
  %conv22 = zext i32 %13 to i64, !dbg !17295
  %cmp23 = icmp ule i64 %12, %conv22, !dbg !17296
  br i1 %cmp23, label %if.then, label %if.end, !dbg !17297

if.then:                                          ; preds = %land.lhs.true
  store i16 255, i16* %retval, align 2, !dbg !17298
  br label %return, !dbg !17298

if.end:                                           ; preds = %land.lhs.true, %sw.epilog
  %14 = load i64, i64* %sel, align 8, !dbg !17299
  %15 = load i32, i32* %max_sel_pel, align 4, !dbg !17301
  %conv25 = zext i32 %15 to i64, !dbg !17301
  %cmp26 = icmp ugt i64 %14, %conv25, !dbg !17302
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !17303

if.then28:                                        ; preds = %if.end
  br label %if.end29, !dbg !17304

if.else:                                          ; preds = %if.end
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then28
  store i16 0, i16* %retval, align 2, !dbg !17305
  br label %return, !dbg !17305

return:                                           ; preds = %if.end29, %if.then, %sw.default
  %16 = load i16, i16* %retval, align 2, !dbg !17306
  ret i16 %16, !dbg !17306
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_update_timeout_for_interface(%struct.xhci_hcd* %xhci, %struct.usb_device* %udev, %struct.usb_host_interface* %alt, i32 %state, i16* %timeout) #1 !dbg !17307 {
entry:
  %retval = alloca i32, align 4
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %alt.addr = alloca %struct.usb_host_interface*, align 8
  %state.addr = alloca i32, align 4
  %timeout.addr = alloca i16*, align 8
  %j = alloca i32, align 4
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !17310, metadata !DIExpression()), !dbg !17311
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !17312, metadata !DIExpression()), !dbg !17313
  store %struct.usb_host_interface* %alt, %struct.usb_host_interface** %alt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_interface** %alt.addr, metadata !17314, metadata !DIExpression()), !dbg !17315
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !17316, metadata !DIExpression()), !dbg !17317
  store i16* %timeout, i16** %timeout.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %timeout.addr, metadata !17318, metadata !DIExpression()), !dbg !17319
  call void @llvm.dbg.declare(metadata i32* %j, metadata !17320, metadata !DIExpression()), !dbg !17321
  store i32 0, i32* %j, align 4, !dbg !17322
  br label %for.cond, !dbg !17324

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %j, align 4, !dbg !17325
  %1 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alt.addr, align 8, !dbg !17327
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0, !dbg !17328
  %bNumEndpoints = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 4, !dbg !17329
  %2 = load i8, i8* %bNumEndpoints, align 4, !dbg !17329
  %conv = zext i8 %2 to i32, !dbg !17327
  %cmp = icmp slt i32 %0, %conv, !dbg !17330
  br i1 %cmp, label %for.body, label %for.end, !dbg !17331

for.body:                                         ; preds = %for.cond
  %3 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !17332
  %4 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17335
  %5 = load %struct.usb_host_interface*, %struct.usb_host_interface** %alt.addr, align 8, !dbg !17336
  %endpoint = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %5, i32 0, i32 3, !dbg !17337
  %6 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %endpoint, align 8, !dbg !17337
  %7 = load i32, i32* %j, align 4, !dbg !17338
  %idxprom = sext i32 %7 to i64, !dbg !17336
  %arrayidx = getelementptr %struct.usb_host_endpoint, %struct.usb_host_endpoint* %6, i64 %idxprom, !dbg !17336
  %desc2 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx, i32 0, i32 0, !dbg !17339
  %8 = load i32, i32* %state.addr, align 4, !dbg !17340
  %9 = load i16*, i16** %timeout.addr, align 8, !dbg !17341
  %call = call i32 @xhci_update_timeout_for_endpoint(%struct.xhci_hcd* %3, %struct.usb_device* %4, %struct.usb_endpoint_descriptor* %desc2, i32 %8, i16* %9) #11, !dbg !17342
  %tobool = icmp ne i32 %call, 0, !dbg !17342
  br i1 %tobool, label %if.then, label %if.end, !dbg !17343

if.then:                                          ; preds = %for.body
  store i32 -7, i32* %retval, align 4, !dbg !17344
  br label %return, !dbg !17344

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !17345

for.inc:                                          ; preds = %if.end
  %10 = load i32, i32* %j, align 4, !dbg !17346
  %inc = add i32 %10, 1, !dbg !17346
  store i32 %inc, i32* %j, align 4, !dbg !17346
  br label %for.cond, !dbg !17347, !llvm.loop !17348

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !17350
  br label %return, !dbg !17350

return:                                           ; preds = %for.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !17351
  ret i32 %11, !dbg !17351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @xhci_check_intel_tier_policy(%struct.usb_device* %udev, i32 %state) #1 !dbg !17352 {
entry:
  %retval = alloca i32, align 4
  %udev.addr = alloca %struct.usb_device*, align 8
  %state.addr = alloca i32, align 4
  %parent = alloca %struct.usb_device*, align 8
  %num_hubs = alloca i32, align 4
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !17355, metadata !DIExpression()), !dbg !17356
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !17357, metadata !DIExpression()), !dbg !17358
  call void @llvm.dbg.declare(metadata %struct.usb_device** %parent, metadata !17359, metadata !DIExpression()), !dbg !17360
  call void @llvm.dbg.declare(metadata i32* %num_hubs, metadata !17361, metadata !DIExpression()), !dbg !17362
  %0 = load i32, i32* %state.addr, align 4, !dbg !17363
  %cmp = icmp eq i32 %0, 2, !dbg !17365
  br i1 %cmp, label %if.then, label %if.end, !dbg !17366

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17367
  br label %return, !dbg !17367

if.end:                                           ; preds = %entry
  %1 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17368
  %parent1 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 11, !dbg !17370
  %2 = load %struct.usb_device*, %struct.usb_device** %parent1, align 8, !dbg !17370
  store %struct.usb_device* %2, %struct.usb_device** %parent, align 8, !dbg !17371
  store i32 0, i32* %num_hubs, align 4, !dbg !17372
  br label %for.cond, !dbg !17373

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load %struct.usb_device*, %struct.usb_device** %parent, align 8, !dbg !17374
  %parent2 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %3, i32 0, i32 11, !dbg !17376
  %4 = load %struct.usb_device*, %struct.usb_device** %parent2, align 8, !dbg !17376
  %tobool = icmp ne %struct.usb_device* %4, null, !dbg !17377
  br i1 %tobool, label %for.body, label %for.end, !dbg !17377

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %num_hubs, align 4, !dbg !17378
  %inc = add i32 %5, 1, !dbg !17378
  store i32 %inc, i32* %num_hubs, align 4, !dbg !17378
  br label %for.inc, !dbg !17379

for.inc:                                          ; preds = %for.body
  %6 = load %struct.usb_device*, %struct.usb_device** %parent, align 8, !dbg !17380
  %parent3 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 11, !dbg !17381
  %7 = load %struct.usb_device*, %struct.usb_device** %parent3, align 8, !dbg !17381
  store %struct.usb_device* %7, %struct.usb_device** %parent, align 8, !dbg !17382
  br label %for.cond, !dbg !17383, !llvm.loop !17384

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* %num_hubs, align 4, !dbg !17386
  %cmp4 = icmp ult i32 %8, 2, !dbg !17388
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !17389

if.then5:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !17390
  br label %return, !dbg !17390

if.end6:                                          ; preds = %for.end
  store i32 -7, i32* %retval, align 4, !dbg !17391
  br label %return, !dbg !17391

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !17392
  ret i32 %9, !dbg !17392
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @xhci_call_host_update_timeout_for_endpoint(%struct.xhci_hcd* %xhci, %struct.usb_device* %udev, %struct.usb_endpoint_descriptor* %desc, i32 %state, i16* %timeout) #1 !dbg !17393 {
entry:
  %retval = alloca i16, align 2
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %desc.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  %state.addr = alloca i32, align 4
  %timeout.addr = alloca i16*, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !17396, metadata !DIExpression()), !dbg !17397
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !17398, metadata !DIExpression()), !dbg !17399
  store %struct.usb_endpoint_descriptor* %desc, %struct.usb_endpoint_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %desc.addr, metadata !17400, metadata !DIExpression()), !dbg !17401
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !17402, metadata !DIExpression()), !dbg !17403
  store i16* %timeout, i16** %timeout.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %timeout.addr, metadata !17404, metadata !DIExpression()), !dbg !17405
  %0 = load i32, i32* %state.addr, align 4, !dbg !17406
  %cmp = icmp eq i32 %0, 1, !dbg !17408
  br i1 %cmp, label %if.then, label %if.else, !dbg !17409

if.then:                                          ; preds = %entry
  %1 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !17410
  %2 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17411
  %3 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17412
  %call = call zeroext i16 @xhci_calculate_u1_timeout(%struct.xhci_hcd* %1, %struct.usb_device* %2, %struct.usb_endpoint_descriptor* %3) #11, !dbg !17413
  store i16 %call, i16* %retval, align 2, !dbg !17414
  br label %return, !dbg !17414

if.else:                                          ; preds = %entry
  %4 = load i32, i32* %state.addr, align 4, !dbg !17415
  %cmp1 = icmp eq i32 %4, 2, !dbg !17417
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !17418

if.then2:                                         ; preds = %if.else
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !17419
  %6 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17420
  %7 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17421
  %call3 = call zeroext i16 @xhci_calculate_u2_timeout(%struct.xhci_hcd* %5, %struct.usb_device* %6, %struct.usb_endpoint_descriptor* %7) #11, !dbg !17422
  store i16 %call3, i16* %retval, align 2, !dbg !17423
  br label %return, !dbg !17423

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end
  store i16 0, i16* %retval, align 2, !dbg !17424
  br label %return, !dbg !17424

return:                                           ; preds = %if.end4, %if.then2, %if.then
  %8 = load i16, i16* %retval, align 2, !dbg !17425
  ret i16 %8, !dbg !17425
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @xhci_calculate_u1_timeout(%struct.xhci_hcd* %xhci, %struct.usb_device* %udev, %struct.usb_endpoint_descriptor* %desc) #1 !dbg !17426 {
entry:
  %retval = alloca i16, align 2
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %desc.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  %timeout_ns = alloca i64, align 8
  %_tmp = alloca i64, align 8
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp20 = alloca i64, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !17429, metadata !DIExpression()), !dbg !17430
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !17431, metadata !DIExpression()), !dbg !17432
  store %struct.usb_endpoint_descriptor* %desc, %struct.usb_endpoint_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %desc.addr, metadata !17433, metadata !DIExpression()), !dbg !17434
  call void @llvm.dbg.declare(metadata i64* %timeout_ns, metadata !17435, metadata !DIExpression()), !dbg !17436
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17437
  %call = call i32 @usb_endpoint_xfer_int(%struct.usb_endpoint_descriptor* %0) #11, !dbg !17439
  %tobool = icmp ne i32 %call, 0, !dbg !17439
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !17440

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17441
  %call1 = call i32 @usb_endpoint_xfer_isoc(%struct.usb_endpoint_descriptor* %1) #11, !dbg !17442
  %tobool2 = icmp ne i32 %call1, 0, !dbg !17442
  br i1 %tobool2, label %if.then, label %if.end6, !dbg !17443

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17444
  %call3 = call i64 @xhci_service_interval_to_ns(%struct.usb_endpoint_descriptor* %2) #11, !dbg !17447
  %3 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17448
  %u1_params = getelementptr inbounds %struct.usb_device, %struct.usb_device* %3, i32 0, i32 47, !dbg !17449
  %mel = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u1_params, i32 0, i32 0, !dbg !17450
  %4 = load i32, i32* %mel, align 8, !dbg !17450
  %conv = zext i32 %4 to i64, !dbg !17448
  %cmp = icmp ule i64 %call3, %conv, !dbg !17451
  br i1 %cmp, label %if.then5, label %if.end, !dbg !17452

if.then5:                                         ; preds = %if.then
  store i16 0, i16* %retval, align 2, !dbg !17453
  br label %return, !dbg !17453

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !17455

if.end6:                                          ; preds = %if.end, %lor.lhs.false
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !17456
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 50, !dbg !17458
  %6 = load i64, i64* %quirks, align 8, !dbg !17458
  %and = and i64 %6, 4096, !dbg !17459
  %tobool7 = icmp ne i64 %and, 0, !dbg !17459
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !17460

if.then8:                                         ; preds = %if.end6
  %7 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17461
  %8 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17462
  %call9 = call i64 @xhci_calculate_intel_u1_timeout(%struct.usb_device* %7, %struct.usb_endpoint_descriptor* %8) #11, !dbg !17463
  store i64 %call9, i64* %timeout_ns, align 8, !dbg !17464
  br label %if.end12, !dbg !17465

if.else:                                          ; preds = %if.end6
  %9 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17466
  %u1_params10 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %9, i32 0, i32 47, !dbg !17467
  %sel = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u1_params10, i32 0, i32 2, !dbg !17468
  %10 = load i32, i32* %sel, align 8, !dbg !17468
  %conv11 = zext i32 %10 to i64, !dbg !17466
  store i64 %conv11, i64* %timeout_ns, align 8, !dbg !17469
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then8
  %11 = load i64, i64* %timeout_ns, align 8, !dbg !17470
  %cmp13 = icmp eq i64 %11, 0, !dbg !17472
  br i1 %cmp13, label %if.then15, label %if.else16, !dbg !17473

if.then15:                                        ; preds = %if.end12
  store i64 1, i64* %timeout_ns, align 8, !dbg !17474
  br label %if.end21, !dbg !17475

if.else16:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i64* %_tmp, metadata !17476, metadata !DIExpression()), !dbg !17478
  %12 = load i64, i64* %timeout_ns, align 8, !dbg !17478
  %add = add i64 %12, 1000, !dbg !17478
  %sub = sub i64 %add, 1, !dbg !17478
  store i64 %sub, i64* %_tmp, align 8, !dbg !17478
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !17479, metadata !DIExpression()), !dbg !17481
  store i32 1000, i32* %__base, align 4, !dbg !17481
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !17482, metadata !DIExpression()), !dbg !17481
  %13 = load i64, i64* %_tmp, align 8, !dbg !17481
  %14 = load i32, i32* %__base, align 4, !dbg !17481
  %conv17 = zext i32 %14 to i64, !dbg !17481
  %rem = urem i64 %13, %conv17, !dbg !17481
  %conv18 = trunc i64 %rem to i32, !dbg !17481
  store i32 %conv18, i32* %__rem, align 4, !dbg !17481
  %15 = load i64, i64* %_tmp, align 8, !dbg !17481
  %16 = load i32, i32* %__base, align 4, !dbg !17481
  %conv19 = zext i32 %16 to i64, !dbg !17481
  %div = udiv i64 %15, %conv19, !dbg !17481
  store i64 %div, i64* %_tmp, align 8, !dbg !17481
  %17 = load i32, i32* %__rem, align 4, !dbg !17481
  store i32 %17, i32* %tmp, align 4, !dbg !17481
  %18 = load i32, i32* %tmp, align 4, !dbg !17481
  %19 = load i64, i64* %_tmp, align 8, !dbg !17478
  store i64 %19, i64* %tmp20, align 8, !dbg !17478
  %20 = load i64, i64* %tmp20, align 8, !dbg !17478
  store i64 %20, i64* %timeout_ns, align 8, !dbg !17483
  br label %if.end21

if.end21:                                         ; preds = %if.else16, %if.then15
  %21 = load i64, i64* %timeout_ns, align 8, !dbg !17484
  %cmp22 = icmp ule i64 %21, 127, !dbg !17486
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !17487

if.then24:                                        ; preds = %if.end21
  %22 = load i64, i64* %timeout_ns, align 8, !dbg !17488
  %conv25 = trunc i64 %22 to i16, !dbg !17488
  store i16 %conv25, i16* %retval, align 2, !dbg !17489
  br label %return, !dbg !17489

if.end26:                                         ; preds = %if.end21
  %23 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17490
  %call27 = call zeroext i16 @xhci_get_timeout_no_hub_lpm(%struct.usb_device* %23, i32 1) #11, !dbg !17491
  store i16 %call27, i16* %retval, align 2, !dbg !17492
  br label %return, !dbg !17492

return:                                           ; preds = %if.end26, %if.then24, %if.then5
  %24 = load i16, i16* %retval, align 2, !dbg !17493
  ret i16 %24, !dbg !17493
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @xhci_calculate_u2_timeout(%struct.xhci_hcd* %xhci, %struct.usb_device* %udev, %struct.usb_endpoint_descriptor* %desc) #1 !dbg !17494 {
entry:
  %retval = alloca i16, align 2
  %xhci.addr = alloca %struct.xhci_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %desc.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  %timeout_ns = alloca i64, align 8
  %_tmp = alloca i64, align 8
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp16 = alloca i64, align 8
  store %struct.xhci_hcd* %xhci, %struct.xhci_hcd** %xhci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.xhci_hcd** %xhci.addr, metadata !17495, metadata !DIExpression()), !dbg !17496
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !17497, metadata !DIExpression()), !dbg !17498
  store %struct.usb_endpoint_descriptor* %desc, %struct.usb_endpoint_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %desc.addr, metadata !17499, metadata !DIExpression()), !dbg !17500
  call void @llvm.dbg.declare(metadata i64* %timeout_ns, metadata !17501, metadata !DIExpression()), !dbg !17502
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17503
  %call = call i32 @usb_endpoint_xfer_int(%struct.usb_endpoint_descriptor* %0) #11, !dbg !17505
  %tobool = icmp ne i32 %call, 0, !dbg !17505
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !17506

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17507
  %call1 = call i32 @usb_endpoint_xfer_isoc(%struct.usb_endpoint_descriptor* %1) #11, !dbg !17508
  %tobool2 = icmp ne i32 %call1, 0, !dbg !17508
  br i1 %tobool2, label %if.then, label %if.end6, !dbg !17509

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17510
  %call3 = call i64 @xhci_service_interval_to_ns(%struct.usb_endpoint_descriptor* %2) #11, !dbg !17513
  %3 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17514
  %u2_params = getelementptr inbounds %struct.usb_device, %struct.usb_device* %3, i32 0, i32 48, !dbg !17515
  %mel = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u2_params, i32 0, i32 0, !dbg !17516
  %4 = load i32, i32* %mel, align 8, !dbg !17516
  %conv = zext i32 %4 to i64, !dbg !17514
  %cmp = icmp ule i64 %call3, %conv, !dbg !17517
  br i1 %cmp, label %if.then5, label %if.end, !dbg !17518

if.then5:                                         ; preds = %if.then
  store i16 0, i16* %retval, align 2, !dbg !17519
  br label %return, !dbg !17519

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !17521

if.end6:                                          ; preds = %if.end, %lor.lhs.false
  %5 = load %struct.xhci_hcd*, %struct.xhci_hcd** %xhci.addr, align 8, !dbg !17522
  %quirks = getelementptr inbounds %struct.xhci_hcd, %struct.xhci_hcd* %5, i32 0, i32 50, !dbg !17524
  %6 = load i64, i64* %quirks, align 8, !dbg !17524
  %and = and i64 %6, 4096, !dbg !17525
  %tobool7 = icmp ne i64 %and, 0, !dbg !17525
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !17526

if.then8:                                         ; preds = %if.end6
  %7 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17527
  %8 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17528
  %call9 = call i64 @xhci_calculate_intel_u2_timeout(%struct.usb_device* %7, %struct.usb_endpoint_descriptor* %8) #11, !dbg !17529
  store i64 %call9, i64* %timeout_ns, align 8, !dbg !17530
  br label %if.end12, !dbg !17531

if.else:                                          ; preds = %if.end6
  %9 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17532
  %u2_params10 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %9, i32 0, i32 48, !dbg !17533
  %sel = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u2_params10, i32 0, i32 2, !dbg !17534
  %10 = load i32, i32* %sel, align 8, !dbg !17534
  %conv11 = zext i32 %10 to i64, !dbg !17532
  store i64 %conv11, i64* %timeout_ns, align 8, !dbg !17535
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then8
  call void @llvm.dbg.declare(metadata i64* %_tmp, metadata !17536, metadata !DIExpression()), !dbg !17538
  %11 = load i64, i64* %timeout_ns, align 8, !dbg !17538
  %add = add i64 %11, 256000, !dbg !17538
  %sub = sub i64 %add, 1, !dbg !17538
  store i64 %sub, i64* %_tmp, align 8, !dbg !17538
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !17539, metadata !DIExpression()), !dbg !17541
  store i32 256000, i32* %__base, align 4, !dbg !17541
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !17542, metadata !DIExpression()), !dbg !17541
  %12 = load i64, i64* %_tmp, align 8, !dbg !17541
  %13 = load i32, i32* %__base, align 4, !dbg !17541
  %conv13 = zext i32 %13 to i64, !dbg !17541
  %rem = urem i64 %12, %conv13, !dbg !17541
  %conv14 = trunc i64 %rem to i32, !dbg !17541
  store i32 %conv14, i32* %__rem, align 4, !dbg !17541
  %14 = load i64, i64* %_tmp, align 8, !dbg !17541
  %15 = load i32, i32* %__base, align 4, !dbg !17541
  %conv15 = zext i32 %15 to i64, !dbg !17541
  %div = udiv i64 %14, %conv15, !dbg !17541
  store i64 %div, i64* %_tmp, align 8, !dbg !17541
  %16 = load i32, i32* %__rem, align 4, !dbg !17541
  store i32 %16, i32* %tmp, align 4, !dbg !17541
  %17 = load i32, i32* %tmp, align 4, !dbg !17541
  %18 = load i64, i64* %_tmp, align 8, !dbg !17538
  store i64 %18, i64* %tmp16, align 8, !dbg !17538
  %19 = load i64, i64* %tmp16, align 8, !dbg !17538
  store i64 %19, i64* %timeout_ns, align 8, !dbg !17543
  %20 = load i64, i64* %timeout_ns, align 8, !dbg !17544
  %cmp17 = icmp ule i64 %20, 254, !dbg !17546
  br i1 %cmp17, label %if.then19, label %if.end21, !dbg !17547

if.then19:                                        ; preds = %if.end12
  %21 = load i64, i64* %timeout_ns, align 8, !dbg !17548
  %conv20 = trunc i64 %21 to i16, !dbg !17548
  store i16 %conv20, i16* %retval, align 2, !dbg !17549
  br label %return, !dbg !17549

if.end21:                                         ; preds = %if.end12
  %22 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17550
  %call22 = call zeroext i16 @xhci_get_timeout_no_hub_lpm(%struct.usb_device* %22, i32 2) #11, !dbg !17551
  store i16 %call22, i16* %retval, align 2, !dbg !17552
  br label %return, !dbg !17552

return:                                           ; preds = %if.end21, %if.then19, %if.then5
  %23 = load i16, i16* %retval, align 2, !dbg !17553
  ret i16 %23, !dbg !17553
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_xfer_int(%struct.usb_endpoint_descriptor* %epd) #1 !dbg !17554 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !17555, metadata !DIExpression()), !dbg !17556
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !17557
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3, !dbg !17558
  %1 = load i8, i8* %bmAttributes, align 1, !dbg !17558
  %conv = zext i8 %1 to i32, !dbg !17557
  %and = and i32 %conv, 3, !dbg !17559
  %cmp = icmp eq i32 %and, 3, !dbg !17560
  %conv1 = zext i1 %cmp to i32, !dbg !17560
  ret i32 %conv1, !dbg !17561
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @xhci_service_interval_to_ns(%struct.usb_endpoint_descriptor* %desc) #1 !dbg !17562 {
entry:
  %desc.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %desc, %struct.usb_endpoint_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %desc.addr, metadata !17565, metadata !DIExpression()), !dbg !17566
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17567
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 5, !dbg !17568
  %1 = load i8, i8* %bInterval, align 1, !dbg !17568
  %conv = zext i8 %1 to i32, !dbg !17567
  %sub = sub i32 %conv, 1, !dbg !17569
  %sh_prom = zext i32 %sub to i64, !dbg !17570
  %shl = shl i64 1, %sh_prom, !dbg !17570
  %mul = mul i64 %shl, 125, !dbg !17571
  %mul1 = mul i64 %mul, 1000, !dbg !17572
  ret i64 %mul1, !dbg !17573
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @xhci_calculate_intel_u1_timeout(%struct.usb_device* %udev, %struct.usb_endpoint_descriptor* %desc) #1 !dbg !17574 {
entry:
  %retval = alloca i64, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %desc.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  %timeout_ns = alloca i64, align 8
  %ep_type = alloca i32, align 4
  %intr_type = alloca i32, align 4
  %_tmp = alloca i64, align 8
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp19 = alloca i64, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !17577, metadata !DIExpression()), !dbg !17578
  store %struct.usb_endpoint_descriptor* %desc, %struct.usb_endpoint_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %desc.addr, metadata !17579, metadata !DIExpression()), !dbg !17580
  call void @llvm.dbg.declare(metadata i64* %timeout_ns, metadata !17581, metadata !DIExpression()), !dbg !17582
  call void @llvm.dbg.declare(metadata i32* %ep_type, metadata !17583, metadata !DIExpression()), !dbg !17584
  call void @llvm.dbg.declare(metadata i32* %intr_type, metadata !17585, metadata !DIExpression()), !dbg !17586
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17587
  %call = call i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %0) #11, !dbg !17588
  store i32 %call, i32* %ep_type, align 4, !dbg !17589
  %1 = load i32, i32* %ep_type, align 4, !dbg !17590
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb1
    i32 3, label %sw.bb6
    i32 1, label %sw.bb13
  ], !dbg !17591

sw.bb:                                            ; preds = %entry
  %2 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17592
  %u1_params = getelementptr inbounds %struct.usb_device, %struct.usb_device* %2, i32 0, i32 47, !dbg !17594
  %sel = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u1_params, i32 0, i32 2, !dbg !17595
  %3 = load i32, i32* %sel, align 8, !dbg !17595
  %mul = mul i32 %3, 3, !dbg !17596
  %conv = zext i32 %mul to i64, !dbg !17592
  store i64 %conv, i64* %timeout_ns, align 8, !dbg !17597
  br label %sw.epilog, !dbg !17598

sw.bb1:                                           ; preds = %entry
  %4 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17599
  %u1_params2 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 47, !dbg !17600
  %sel3 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u1_params2, i32 0, i32 2, !dbg !17601
  %5 = load i32, i32* %sel3, align 8, !dbg !17601
  %mul4 = mul i32 %5, 5, !dbg !17602
  %conv5 = zext i32 %mul4 to i64, !dbg !17599
  store i64 %conv5, i64* %timeout_ns, align 8, !dbg !17603
  br label %sw.epilog, !dbg !17604

sw.bb6:                                           ; preds = %entry
  %6 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17605
  %call7 = call i32 @usb_endpoint_interrupt_type(%struct.usb_endpoint_descriptor* %6) #11, !dbg !17606
  store i32 %call7, i32* %intr_type, align 4, !dbg !17607
  %7 = load i32, i32* %intr_type, align 4, !dbg !17608
  %cmp = icmp eq i32 %7, 16, !dbg !17610
  br i1 %cmp, label %if.then, label %if.end, !dbg !17611

if.then:                                          ; preds = %sw.bb6
  %8 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17612
  %u1_params9 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %8, i32 0, i32 47, !dbg !17614
  %sel10 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u1_params9, i32 0, i32 2, !dbg !17615
  %9 = load i32, i32* %sel10, align 8, !dbg !17615
  %mul11 = mul i32 %9, 3, !dbg !17616
  %conv12 = zext i32 %mul11 to i64, !dbg !17612
  store i64 %conv12, i64* %timeout_ns, align 8, !dbg !17617
  br label %sw.epilog, !dbg !17618

if.end:                                           ; preds = %sw.bb6
  br label %sw.bb13, !dbg !17619

sw.bb13:                                          ; preds = %entry, %if.end
  %10 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17620
  %call14 = call i64 @xhci_service_interval_to_ns(%struct.usb_endpoint_descriptor* %10) #11, !dbg !17621
  store i64 %call14, i64* %timeout_ns, align 8, !dbg !17622
  call void @llvm.dbg.declare(metadata i64* %_tmp, metadata !17623, metadata !DIExpression()), !dbg !17625
  %11 = load i64, i64* %timeout_ns, align 8, !dbg !17625
  %mul15 = mul i64 %11, 105, !dbg !17625
  %add = add i64 %mul15, 100, !dbg !17625
  %sub = sub i64 %add, 1, !dbg !17625
  store i64 %sub, i64* %_tmp, align 8, !dbg !17625
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !17626, metadata !DIExpression()), !dbg !17628
  store i32 100, i32* %__base, align 4, !dbg !17628
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !17629, metadata !DIExpression()), !dbg !17628
  %12 = load i64, i64* %_tmp, align 8, !dbg !17628
  %13 = load i32, i32* %__base, align 4, !dbg !17628
  %conv16 = zext i32 %13 to i64, !dbg !17628
  %rem = urem i64 %12, %conv16, !dbg !17628
  %conv17 = trunc i64 %rem to i32, !dbg !17628
  store i32 %conv17, i32* %__rem, align 4, !dbg !17628
  %14 = load i64, i64* %_tmp, align 8, !dbg !17628
  %15 = load i32, i32* %__base, align 4, !dbg !17628
  %conv18 = zext i32 %15 to i64, !dbg !17628
  %div = udiv i64 %14, %conv18, !dbg !17628
  store i64 %div, i64* %_tmp, align 8, !dbg !17628
  %16 = load i32, i32* %__rem, align 4, !dbg !17628
  store i32 %16, i32* %tmp, align 4, !dbg !17628
  %17 = load i32, i32* %tmp, align 4, !dbg !17628
  %18 = load i64, i64* %_tmp, align 8, !dbg !17625
  store i64 %18, i64* %tmp19, align 8, !dbg !17625
  %19 = load i64, i64* %tmp19, align 8, !dbg !17625
  store i64 %19, i64* %timeout_ns, align 8, !dbg !17630
  %20 = load i64, i64* %timeout_ns, align 8, !dbg !17631
  %21 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17633
  %u1_params20 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %21, i32 0, i32 47, !dbg !17634
  %sel21 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u1_params20, i32 0, i32 2, !dbg !17635
  %22 = load i32, i32* %sel21, align 8, !dbg !17635
  %mul22 = mul i32 %22, 2, !dbg !17636
  %conv23 = zext i32 %mul22 to i64, !dbg !17633
  %cmp24 = icmp ult i64 %20, %conv23, !dbg !17637
  br i1 %cmp24, label %if.then26, label %if.end31, !dbg !17638

if.then26:                                        ; preds = %sw.bb13
  %23 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17639
  %u1_params27 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %23, i32 0, i32 47, !dbg !17640
  %sel28 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %u1_params27, i32 0, i32 2, !dbg !17641
  %24 = load i32, i32* %sel28, align 8, !dbg !17641
  %mul29 = mul i32 %24, 2, !dbg !17642
  %conv30 = zext i32 %mul29 to i64, !dbg !17639
  store i64 %conv30, i64* %timeout_ns, align 8, !dbg !17643
  br label %if.end31, !dbg !17644

if.end31:                                         ; preds = %if.then26, %sw.bb13
  br label %sw.epilog, !dbg !17645

sw.default:                                       ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !17646
  br label %return, !dbg !17646

sw.epilog:                                        ; preds = %if.end31, %if.then, %sw.bb1, %sw.bb
  %25 = load i64, i64* %timeout_ns, align 8, !dbg !17647
  store i64 %25, i64* %retval, align 8, !dbg !17648
  br label %return, !dbg !17648

return:                                           ; preds = %sw.epilog, %sw.default
  %26 = load i64, i64* %retval, align 8, !dbg !17649
  ret i64 %26, !dbg !17649
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_interrupt_type(%struct.usb_endpoint_descriptor* %epd) #1 !dbg !17650 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !17651, metadata !DIExpression()), !dbg !17652
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !17653
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3, !dbg !17654
  %1 = load i8, i8* %bmAttributes, align 1, !dbg !17654
  %conv = zext i8 %1 to i32, !dbg !17653
  %and = and i32 %conv, 48, !dbg !17655
  ret i32 %and, !dbg !17656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @xhci_calculate_intel_u2_timeout(%struct.usb_device* %udev, %struct.usb_endpoint_descriptor* %desc) #1 !dbg !17657 {
entry:
  %udev.addr = alloca %struct.usb_device*, align 8
  %desc.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  %timeout_ns = alloca i64, align 8
  %u2_del_ns = alloca i64, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !17658, metadata !DIExpression()), !dbg !17659
  store %struct.usb_endpoint_descriptor* %desc, %struct.usb_endpoint_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %desc.addr, metadata !17660, metadata !DIExpression()), !dbg !17661
  call void @llvm.dbg.declare(metadata i64* %timeout_ns, metadata !17662, metadata !DIExpression()), !dbg !17663
  call void @llvm.dbg.declare(metadata i64* %u2_del_ns, metadata !17664, metadata !DIExpression()), !dbg !17665
  store i64 10000000, i64* %timeout_ns, align 8, !dbg !17666
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17667
  %call = call i32 @usb_endpoint_xfer_int(%struct.usb_endpoint_descriptor* %0) #11, !dbg !17669
  %tobool = icmp ne i32 %call, 0, !dbg !17669
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !17670

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17671
  %call1 = call i32 @usb_endpoint_xfer_isoc(%struct.usb_endpoint_descriptor* %1) #11, !dbg !17672
  %tobool2 = icmp ne i32 %call1, 0, !dbg !17672
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !17673

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %2 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17674
  %call3 = call i64 @xhci_service_interval_to_ns(%struct.usb_endpoint_descriptor* %2) #11, !dbg !17675
  %3 = load i64, i64* %timeout_ns, align 8, !dbg !17676
  %cmp = icmp ugt i64 %call3, %3, !dbg !17677
  br i1 %cmp, label %if.then, label %if.end, !dbg !17678

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %desc.addr, align 8, !dbg !17679
  %call4 = call i64 @xhci_service_interval_to_ns(%struct.usb_endpoint_descriptor* %4) #11, !dbg !17680
  store i64 %call4, i64* %timeout_ns, align 8, !dbg !17681
  br label %if.end, !dbg !17682

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false
  %5 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !17683
  %bos = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 17, !dbg !17683
  %6 = load %struct.usb_host_bos*, %struct.usb_host_bos** %bos, align 8, !dbg !17683
  %ss_cap = getelementptr inbounds %struct.usb_host_bos, %struct.usb_host_bos* %6, i32 0, i32 2, !dbg !17683
  %7 = load %struct.usb_ss_cap_descriptor*, %struct.usb_ss_cap_descriptor** %ss_cap, align 8, !dbg !17683
  %bU2DevExitLat = getelementptr inbounds %struct.usb_ss_cap_descriptor, %struct.usb_ss_cap_descriptor* %7, i32 0, i32 7, !dbg !17683
  %8 = load i16, i16* %bU2DevExitLat, align 1, !dbg !17683
  %conv = zext i16 %8 to i64, !dbg !17683
  %mul = mul i64 %conv, 1000, !dbg !17684
  store i64 %mul, i64* %u2_del_ns, align 8, !dbg !17685
  %9 = load i64, i64* %u2_del_ns, align 8, !dbg !17686
  %10 = load i64, i64* %timeout_ns, align 8, !dbg !17688
  %cmp5 = icmp ugt i64 %9, %10, !dbg !17689
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !17690

if.then7:                                         ; preds = %if.end
  %11 = load i64, i64* %u2_del_ns, align 8, !dbg !17691
  store i64 %11, i64* %timeout_ns, align 8, !dbg !17692
  br label %if.end8, !dbg !17693

if.end8:                                          ; preds = %if.then7, %if.end
  %12 = load i64, i64* %timeout_ns, align 8, !dbg !17694
  ret i64 %12, !dbg !17695
}

; Function Attrs: noredzone
declare dso_local i32 @usb_disabled() #3

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @xhci_debugfs_create_root() #0 section ".init.text" !dbg !17696 {
entry:
  ret void, !dbg !17697
}

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone willreturn }
attributes #5 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!5648}
!llvm.module.flags = !{!5649, !5650, !5651, !5652}
!llvm.ident = !{!5653}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_link_quirk", scope: !2, file: !3, line: 34, type: !5647, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !203, globals: !5526, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/usb/host/xhci.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !105, !114, !121, !126, !132, !138, !144, !154, !159, !187, !194, !199}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_state", file: !94, line: 1156, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/uapi/linux/usb/ch9.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100, !101, !102, !103, !104}
!96 = !DIEnumerator(name: "USB_STATE_NOTATTACHED", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "USB_STATE_ATTACHED", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "USB_STATE_POWERED", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "USB_STATE_RECONNECTING", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "USB_STATE_UNAUTHENTICATED", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "USB_STATE_DEFAULT", value: 5, isUnsigned: true)
!102 = !DIEnumerator(name: "USB_STATE_ADDRESS", value: 6, isUnsigned: true)
!103 = !DIEnumerator(name: "USB_STATE_CONFIGURED", value: 7, isUnsigned: true)
!104 = !DIEnumerator(name: "USB_STATE_SUSPENDED", value: 8, isUnsigned: true)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_speed", file: !94, line: 1146, baseType: !7, size: 32, elements: !106)
!106 = !{!107, !108, !109, !110, !111, !112, !113}
!107 = !DIEnumerator(name: "USB_SPEED_UNKNOWN", value: 0, isUnsigned: true)
!108 = !DIEnumerator(name: "USB_SPEED_LOW", value: 1, isUnsigned: true)
!109 = !DIEnumerator(name: "USB_SPEED_FULL", value: 2, isUnsigned: true)
!110 = !DIEnumerator(name: "USB_SPEED_HIGH", value: 3, isUnsigned: true)
!111 = !DIEnumerator(name: "USB_SPEED_WIRELESS", value: 4, isUnsigned: true)
!112 = !DIEnumerator(name: "USB_SPEED_SUPER", value: 5, isUnsigned: true)
!113 = !DIEnumerator(name: "USB_SPEED_SUPER_PLUS", value: 6, isUnsigned: true)
!114 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_interface_condition", file: !115, line: 96, baseType: !7, size: 32, elements: !116)
!115 = !DIFile(filename: "./include/linux/usb.h", directory: "/home/lizy2001/genbc/linux")
!116 = !{!117, !118, !119, !120}
!117 = !DIEnumerator(name: "USB_INTERFACE_UNBOUND", value: 0, isUnsigned: true)
!118 = !DIEnumerator(name: "USB_INTERFACE_BINDING", value: 1, isUnsigned: true)
!119 = !DIEnumerator(name: "USB_INTERFACE_BOUND", value: 2, isUnsigned: true)
!120 = !DIEnumerator(name: "USB_INTERFACE_UNBINDING", value: 3, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_removable", file: !115, line: 476, baseType: !7, size: 32, elements: !122)
!122 = !{!123, !124, !125}
!123 = !DIEnumerator(name: "USB_DEVICE_REMOVABLE_UNKNOWN", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "USB_DEVICE_REMOVABLE", value: 1, isUnsigned: true)
!125 = !DIEnumerator(name: "USB_DEVICE_FIXED", value: 2, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !127, line: 11, baseType: !7, size: 32, elements: !128)
!127 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!128 = !{!129, !130, !131}
!129 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!132 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb3_link_state", file: !94, line: 1181, baseType: !7, size: 32, elements: !133)
!133 = !{!134, !135, !136, !137}
!134 = !DIEnumerator(name: "USB3_LPM_U0", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "USB3_LPM_U1", value: 1, isUnsigned: true)
!136 = !DIEnumerator(name: "USB3_LPM_U2", value: 2, isUnsigned: true)
!137 = !DIEnumerator(name: "USB3_LPM_U3", value: 3, isUnsigned: true)
!138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_dev_authorize_policy", file: !139, line: 75, baseType: !7, size: 32, elements: !140)
!139 = !DIFile(filename: "./include/linux/usb/hcd.h", directory: "/home/lizy2001/genbc/linux")
!140 = !{!141, !142, !143}
!141 = !DIEnumerator(name: "USB_DEVICE_AUTHORIZE_NONE", value: 0, isUnsigned: true)
!142 = !DIEnumerator(name: "USB_DEVICE_AUTHORIZE_ALL", value: 1, isUnsigned: true)
!143 = !DIEnumerator(name: "USB_DEVICE_AUTHORIZE_INTERNAL", value: 2, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "xhci_ring_type", file: !145, line: 1562, baseType: !7, size: 32, elements: !146)
!145 = !DIFile(filename: "drivers/usb/host/xhci.h", directory: "/home/lizy2001/genbc/linux")
!146 = !{!147, !148, !149, !150, !151, !152, !153}
!147 = !DIEnumerator(name: "TYPE_CTRL", value: 0, isUnsigned: true)
!148 = !DIEnumerator(name: "TYPE_ISOC", value: 1, isUnsigned: true)
!149 = !DIEnumerator(name: "TYPE_BULK", value: 2, isUnsigned: true)
!150 = !DIEnumerator(name: "TYPE_INTR", value: 3, isUnsigned: true)
!151 = !DIEnumerator(name: "TYPE_STREAM", value: 4, isUnsigned: true)
!152 = !DIEnumerator(name: "TYPE_COMMAND", value: 5, isUnsigned: true)
!153 = !DIEnumerator(name: "TYPE_EVENT", value: 6, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !155, line: 10, baseType: !7, size: 32, elements: !156)
!155 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!156 = !{!157, !158}
!157 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!158 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmi_field", file: !160, line: 532, baseType: !7, size: 32, elements: !161)
!160 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!161 = !{!162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186}
!162 = !DIEnumerator(name: "DMI_NONE", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "DMI_BIOS_VENDOR", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "DMI_BIOS_VERSION", value: 2, isUnsigned: true)
!165 = !DIEnumerator(name: "DMI_BIOS_DATE", value: 3, isUnsigned: true)
!166 = !DIEnumerator(name: "DMI_BIOS_RELEASE", value: 4, isUnsigned: true)
!167 = !DIEnumerator(name: "DMI_EC_FIRMWARE_RELEASE", value: 5, isUnsigned: true)
!168 = !DIEnumerator(name: "DMI_SYS_VENDOR", value: 6, isUnsigned: true)
!169 = !DIEnumerator(name: "DMI_PRODUCT_NAME", value: 7, isUnsigned: true)
!170 = !DIEnumerator(name: "DMI_PRODUCT_VERSION", value: 8, isUnsigned: true)
!171 = !DIEnumerator(name: "DMI_PRODUCT_SERIAL", value: 9, isUnsigned: true)
!172 = !DIEnumerator(name: "DMI_PRODUCT_UUID", value: 10, isUnsigned: true)
!173 = !DIEnumerator(name: "DMI_PRODUCT_SKU", value: 11, isUnsigned: true)
!174 = !DIEnumerator(name: "DMI_PRODUCT_FAMILY", value: 12, isUnsigned: true)
!175 = !DIEnumerator(name: "DMI_BOARD_VENDOR", value: 13, isUnsigned: true)
!176 = !DIEnumerator(name: "DMI_BOARD_NAME", value: 14, isUnsigned: true)
!177 = !DIEnumerator(name: "DMI_BOARD_VERSION", value: 15, isUnsigned: true)
!178 = !DIEnumerator(name: "DMI_BOARD_SERIAL", value: 16, isUnsigned: true)
!179 = !DIEnumerator(name: "DMI_BOARD_ASSET_TAG", value: 17, isUnsigned: true)
!180 = !DIEnumerator(name: "DMI_CHASSIS_VENDOR", value: 18, isUnsigned: true)
!181 = !DIEnumerator(name: "DMI_CHASSIS_TYPE", value: 19, isUnsigned: true)
!182 = !DIEnumerator(name: "DMI_CHASSIS_VERSION", value: 20, isUnsigned: true)
!183 = !DIEnumerator(name: "DMI_CHASSIS_SERIAL", value: 21, isUnsigned: true)
!184 = !DIEnumerator(name: "DMI_CHASSIS_ASSET_TAG", value: 22, isUnsigned: true)
!185 = !DIEnumerator(name: "DMI_STRING_MAX", value: 23, isUnsigned: true)
!186 = !DIEnumerator(name: "DMI_OEM_STRING", value: 24, isUnsigned: true)
!187 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !188, line: 305, baseType: !7, size: 32, elements: !189)
!188 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!189 = !{!190, !191, !192, !193}
!190 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!191 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!192 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!193 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!194 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "xhci_overhead_type", file: !145, line: 969, baseType: !7, size: 32, elements: !195)
!195 = !{!196, !197, !198}
!196 = !DIEnumerator(name: "LS_OVERHEAD_TYPE", value: 0, isUnsigned: true)
!197 = !DIEnumerator(name: "FS_OVERHEAD_TYPE", value: 1, isUnsigned: true)
!198 = !DIEnumerator(name: "HS_OVERHEAD_TYPE", value: 2, isUnsigned: true)
!199 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "xhci_setup_dev", file: !145, line: 1253, baseType: !7, size: 32, elements: !200)
!200 = !{!201, !202}
!201 = !DIEnumerator(name: "SETUP_CONTEXT_ONLY", value: 0, isUnsigned: true)
!202 = !DIEnumerator(name: "SETUP_CONTEXT_ADDRESS", value: 1, isUnsigned: true)
!203 = !{!204, !208, !209, !248, !7, !875, !398, !4495, !4497, !239, !5457, !5459, !4583, !206, !241, !265, !5101, !240, !985, !4564, !409, !5460, !5463, !5464, !4526, !1470, !5465, !5525}
!204 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !205, line: 21, baseType: !206)
!205 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !207, line: 27, baseType: !7)
!207 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !211, line: 309, size: 19264, elements: !212)
!211 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!212 = !{!213, !220, !4296, !4297, !4298, !4299, !4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4327, !4392, !4393, !4394, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4418, !4419, !4420, !4421, !4422, !4423, !4424, !4425, !4429, !4430, !4431, !4432, !4433, !4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4452, !4453, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4468, !4469, !4471, !4472, !4473, !4474, !4476, !4477, !4478, !4481, !4488, !4489, !4490, !4491, !4492, !4493, !4494}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !210, file: !211, line: 310, baseType: !214, size: 128)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !215, line: 178, size: 128, elements: !216)
!215 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!216 = !{!217, !219}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !214, file: !215, line: 179, baseType: !218, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !214, file: !215, line: 179, baseType: !218, size: 64, offset: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !210, file: !211, line: 311, baseType: !221, size: 64, offset: 128)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !211, line: 605, size: 8064, elements: !223)
!223 = !{!224, !225, !226, !227, !228, !229, !230, !255, !256, !257, !283, !286, !287, !291, !293, !294, !295, !296, !300, !302, !304, !4292, !4293, !4294, !4295}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !222, file: !211, line: 606, baseType: !214, size: 128)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !222, file: !211, line: 607, baseType: !221, size: 64, offset: 128)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !222, file: !211, line: 608, baseType: !214, size: 128, offset: 192)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !222, file: !211, line: 609, baseType: !214, size: 128, offset: 320)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !222, file: !211, line: 610, baseType: !209, size: 64, offset: 448)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !222, file: !211, line: 611, baseType: !214, size: 128, offset: 512)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !222, file: !211, line: 613, baseType: !231, size: 256, offset: 640)
!231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !232, size: 256, elements: !253)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !234, line: 20, size: 512, elements: !235)
!234 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!235 = !{!236, !242, !243, !247, !249, !250, !251, !252}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !233, file: !234, line: 21, baseType: !237, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !215, line: 158, baseType: !238)
!238 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !215, line: 153, baseType: !239)
!239 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !205, line: 23, baseType: !240)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !207, line: 31, baseType: !241)
!241 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !233, file: !234, line: 22, baseType: !237, size: 64, offset: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !233, file: !234, line: 23, baseType: !244, size: 64, offset: 128)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !233, file: !234, line: 24, baseType: !248, size: 64, offset: 192)
!248 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !233, file: !234, line: 25, baseType: !248, size: 64, offset: 256)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !233, file: !234, line: 26, baseType: !232, size: 64, offset: 320)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !233, file: !234, line: 26, baseType: !232, size: 64, offset: 384)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !233, file: !234, line: 26, baseType: !232, size: 64, offset: 448)
!253 = !{!254}
!254 = !DISubrange(count: 4)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !222, file: !211, line: 614, baseType: !214, size: 128, offset: 896)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !222, file: !211, line: 615, baseType: !233, size: 512, offset: 1024)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !222, file: !211, line: 617, baseType: !258, size: 64, offset: 1536)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !211, line: 731, size: 320, elements: !260)
!260 = !{!261, !266, !270, !274, !279}
!261 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !259, file: !211, line: 732, baseType: !262, size: 64)
!262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !263, size: 64)
!263 = !DISubroutineType(types: !264)
!264 = !{!265, !221}
!265 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !259, file: !211, line: 733, baseType: !267, size: 64, offset: 64)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DISubroutineType(types: !269)
!269 = !{null, !221}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !259, file: !211, line: 734, baseType: !271, size: 64, offset: 128)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = !DISubroutineType(types: !273)
!273 = !{!208, !221, !7, !265}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !259, file: !211, line: 735, baseType: !275, size: 64, offset: 192)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = !DISubroutineType(types: !277)
!277 = !{!265, !221, !7, !265, !265, !278}
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !259, file: !211, line: 736, baseType: !280, size: 64, offset: 256)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = !DISubroutineType(types: !282)
!282 = !{!265, !221, !7, !265, !265, !204}
!283 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !222, file: !211, line: 618, baseType: !284, size: 64, offset: 1600)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !211, line: 537, flags: DIFlagFwdDecl)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !222, file: !211, line: 619, baseType: !208, size: 64, offset: 1664)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !222, file: !211, line: 620, baseType: !288, size: 64, offset: 1728)
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!289 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !290, line: 123, flags: DIFlagFwdDecl)
!290 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!291 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !222, file: !211, line: 622, baseType: !292, size: 8, offset: 1792)
!292 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !222, file: !211, line: 623, baseType: !292, size: 8, offset: 1800)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !222, file: !211, line: 624, baseType: !292, size: 8, offset: 1808)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !222, file: !211, line: 625, baseType: !292, size: 8, offset: 1816)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !222, file: !211, line: 630, baseType: !297, size: 384, offset: 1824)
!297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 384, elements: !298)
!298 = !{!299}
!299 = !DISubrange(count: 48)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !222, file: !211, line: 632, baseType: !301, size: 16, offset: 2208)
!301 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !222, file: !211, line: 633, baseType: !303, size: 16, offset: 2224)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !211, line: 237, baseType: !301)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !222, file: !211, line: 634, baseType: !305, size: 64, offset: 2240)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !307)
!307 = !{!308, !3847, !3848, !3851, !3852, !3903, !3993, !3994, !3995, !3996, !3997, !4006, !4111, !4124, !4127, !4128, !4132, !4134, !4135, !4136, !4140, !4146, !4147, !4150, !4154, !4244, !4245, !4246, !4247, !4248, !4280, !4281, !4282, !4285, !4288, !4289, !4290, !4291}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !306, file: !73, line: 462, baseType: !309, size: 512)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !310, line: 64, size: 512, elements: !311)
!310 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!311 = !{!312, !313, !314, !316, !376, !3714, !3841, !3842, !3843, !3844, !3845, !3846}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !309, file: !310, line: 65, baseType: !244, size: 64)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !309, file: !310, line: 66, baseType: !214, size: 128, offset: 64)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !309, file: !310, line: 67, baseType: !315, size: 64, offset: 192)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !309, file: !310, line: 68, baseType: !317, size: 64, offset: 256)
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !310, line: 192, size: 704, elements: !319)
!319 = !{!320, !321, !337, !338}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !318, file: !310, line: 193, baseType: !214, size: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !318, file: !310, line: 194, baseType: !322, offset: 128)
!322 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !323, line: 83, baseType: !324)
!323 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !323, line: 71, elements: !325)
!325 = !{!326}
!326 = !DIDerivedType(tag: DW_TAG_member, scope: !324, file: !323, line: 72, baseType: !327)
!327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !324, file: !323, line: 72, elements: !328)
!328 = !{!329}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !327, file: !323, line: 73, baseType: !330)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !323, line: 20, elements: !331)
!331 = !{!332}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !330, file: !323, line: 21, baseType: !333)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !334, line: 25, baseType: !335)
!334 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !334, line: 25, elements: !336)
!336 = !{}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !318, file: !310, line: 195, baseType: !309, size: 512, offset: 128)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !318, file: !310, line: 196, baseType: !339, size: 64, offset: 640)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !341)
!341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !310, line: 156, size: 192, elements: !342)
!342 = !{!343, !348, !353}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !341, file: !310, line: 157, baseType: !344, size: 64)
!344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !345)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = !DISubroutineType(types: !347)
!347 = !{!265, !317, !315}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !341, file: !310, line: 158, baseType: !349, size: 64, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = !DISubroutineType(types: !352)
!352 = !{!244, !317, !315}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !341, file: !310, line: 159, baseType: !354, size: 64, offset: 128)
!354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !355)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!356 = !DISubroutineType(types: !357)
!357 = !{!265, !317, !315, !358}
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !310, line: 148, size: 20736, elements: !360)
!360 = !{!361, !366, !370, !371, !375}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !359, file: !310, line: 149, baseType: !362, size: 192)
!362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !363, size: 192, elements: !364)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!364 = !{!365}
!365 = !DISubrange(count: 3)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !359, file: !310, line: 150, baseType: !367, size: 4096, offset: 192)
!367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !363, size: 4096, elements: !368)
!368 = !{!369}
!369 = !DISubrange(count: 64)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !359, file: !310, line: 151, baseType: !265, size: 32, offset: 4288)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !359, file: !310, line: 152, baseType: !372, size: 16384, offset: 4320)
!372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 16384, elements: !373)
!373 = !{!374}
!374 = !DISubrange(count: 2048)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !359, file: !310, line: 153, baseType: !265, size: 32, offset: 20704)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !309, file: !310, line: 69, baseType: !377, size: 64, offset: 320)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !310, line: 138, size: 448, elements: !379)
!379 = !{!380, !384, !412, !414, !3676, !3704, !3708}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !378, file: !310, line: 139, baseType: !381, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = !DISubroutineType(types: !383)
!383 = !{null, !315}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !378, file: !310, line: 140, baseType: !385, size: 64, offset: 64)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !387)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !388, line: 230, size: 128, elements: !389)
!388 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!389 = !{!390, !405}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !387, file: !388, line: 231, baseType: !391, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = !DISubroutineType(types: !393)
!393 = !{!394, !315, !399, !363}
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !215, line: 60, baseType: !395)
!395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !396, line: 73, baseType: !397)
!396 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !396, line: 15, baseType: !398)
!398 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !388, line: 30, size: 128, elements: !401)
!401 = !{!402, !403}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !400, file: !388, line: 31, baseType: !244, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !400, file: !388, line: 32, baseType: !404, size: 16, offset: 64)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !215, line: 19, baseType: !301)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !387, file: !388, line: 232, baseType: !406, size: 64, offset: 64)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = !DISubroutineType(types: !408)
!408 = !{!394, !315, !399, !244, !409}
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !215, line: 55, baseType: !410)
!410 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !396, line: 72, baseType: !411)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !396, line: 16, baseType: !248)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !378, file: !310, line: 141, baseType: !413, size: 64, offset: 128)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !378, file: !310, line: 142, baseType: !415, size: 64, offset: 192)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !418)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !388, line: 84, size: 320, elements: !419)
!419 = !{!420, !421, !425, !3673, !3674}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !418, file: !388, line: 85, baseType: !244, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !418, file: !388, line: 86, baseType: !422, size: 64, offset: 64)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = !DISubroutineType(types: !424)
!424 = !{!404, !315, !399, !265}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !418, file: !388, line: 88, baseType: !426, size: 64, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = !DISubroutineType(types: !428)
!428 = !{!404, !315, !429, !265}
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !388, line: 168, size: 448, elements: !431)
!431 = !{!432, !433, !434, !435, !3668, !3669}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !430, file: !388, line: 169, baseType: !400, size: 128)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !430, file: !388, line: 170, baseType: !409, size: 64, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !430, file: !388, line: 171, baseType: !208, size: 64, offset: 192)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !430, file: !388, line: 172, baseType: !436, size: 64, offset: 256)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = !DISubroutineType(types: !438)
!438 = !{!394, !439, !315, !429, !363, !610, !409}
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !441)
!441 = !{!442, !460, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3651, !3652, !3661, !3662, !3663, !3664, !3665, !3666, !3667}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !440, file: !44, line: 920, baseType: !443, size: 128)
!443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !440, file: !44, line: 917, size: 128, elements: !444)
!444 = !{!445, !451}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !443, file: !44, line: 918, baseType: !446, size: 64)
!446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !447, line: 58, size: 64, elements: !448)
!447 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!448 = !{!449}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !446, file: !447, line: 59, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !443, file: !44, line: 919, baseType: !452, size: 128, align: 64)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !215, line: 216, size: 128, align: 64, elements: !453)
!453 = !{!454, !456}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !452, file: !215, line: 217, baseType: !455, size: 64)
!455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !452, file: !215, line: 218, baseType: !457, size: 64, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = !DISubroutineType(types: !459)
!459 = !{null, !455}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !440, file: !44, line: 921, baseType: !461, size: 128, offset: 128)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !462, line: 8, size: 128, elements: !463)
!462 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!463 = !{!464, !468}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !461, file: !462, line: 9, baseType: !465, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !467, line: 18, flags: DIFlagFwdDecl)
!467 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!468 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !461, file: !462, line: 10, baseType: !469, size: 64, offset: 64)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !467, line: 89, size: 1536, elements: !471)
!471 = !{!472, !473, !483, !491, !492, !507, !3601, !3603, !3615, !3616, !3617, !3618, !3619, !3625, !3626, !3627}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !470, file: !467, line: 91, baseType: !7, size: 32)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !470, file: !467, line: 92, baseType: !474, size: 32, offset: 32)
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !475, line: 277, baseType: !476)
!475 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !475, line: 277, size: 32, elements: !477)
!477 = !{!478}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !476, file: !475, line: 277, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !475, line: 70, baseType: !480)
!480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !475, line: 65, size: 32, elements: !481)
!481 = !{!482}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !480, file: !475, line: 66, baseType: !7, size: 32)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !470, file: !467, line: 93, baseType: !484, size: 128, offset: 64)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !485, line: 38, size: 128, elements: !486)
!485 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!486 = !{!487, !489}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !484, file: !485, line: 39, baseType: !488, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !484, file: !485, line: 39, baseType: !490, size: 64, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !470, file: !467, line: 94, baseType: !469, size: 64, offset: 192)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !470, file: !467, line: 95, baseType: !493, size: 128, offset: 256)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !467, line: 47, size: 128, elements: !494)
!494 = !{!495, !504}
!495 = !DIDerivedType(tag: DW_TAG_member, scope: !493, file: !467, line: 48, baseType: !496, size: 64)
!496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !493, file: !467, line: 48, size: 64, elements: !497)
!497 = !{!498, !503}
!498 = !DIDerivedType(tag: DW_TAG_member, scope: !496, file: !467, line: 49, baseType: !499, size: 64)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !496, file: !467, line: 49, size: 64, elements: !500)
!500 = !{!501, !502}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !499, file: !467, line: 50, baseType: !204, size: 32)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !499, file: !467, line: 50, baseType: !204, size: 32, offset: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !496, file: !467, line: 52, baseType: !239, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !493, file: !467, line: 54, baseType: !505, size: 64, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !292)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !470, file: !467, line: 96, baseType: !508, size: 64, offset: 384)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !510)
!510 = !{!511, !512, !513, !521, !528, !529, !677, !3536, !3537, !3538, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3579, !3587, !3588, !3589, !3597, !3598, !3599, !3600}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !509, file: !44, line: 611, baseType: !404, size: 16)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !509, file: !44, line: 612, baseType: !301, size: 16, offset: 16)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !509, file: !44, line: 613, baseType: !514, size: 32, offset: 32)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !515, line: 23, baseType: !516)
!515 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 21, size: 32, elements: !517)
!517 = !{!518}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !516, file: !515, line: 22, baseType: !519, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !215, line: 32, baseType: !520)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !396, line: 49, baseType: !7)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !509, file: !44, line: 614, baseType: !522, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !515, line: 28, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !515, line: 26, size: 32, elements: !524)
!524 = !{!525}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !523, file: !515, line: 27, baseType: !526, size: 32)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !215, line: 33, baseType: !527)
!527 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !396, line: 50, baseType: !7)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !509, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !509, file: !44, line: 622, baseType: !530, size: 64, offset: 128)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 64)
!531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !533)
!533 = !{!534, !538, !551, !555, !561, !565, !571, !575, !579, !583, !587, !588, !594, !598, !624, !653, !657, !663, !668, !672, !673}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !532, file: !44, line: 1865, baseType: !535, size: 64)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = !DISubroutineType(types: !537)
!537 = !{!469, !508, !469, !7}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !532, file: !44, line: 1866, baseType: !539, size: 64, offset: 64)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!540 = !DISubroutineType(types: !541)
!541 = !{!244, !469, !508, !542}
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !544, line: 10, size: 128, elements: !545)
!544 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!545 = !{!546, !550}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !543, file: !544, line: 11, baseType: !547, size: 64)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DISubroutineType(types: !549)
!549 = !{null, !208}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !543, file: !544, line: 12, baseType: !208, size: 64, offset: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !532, file: !44, line: 1867, baseType: !552, size: 64, offset: 128)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = !DISubroutineType(types: !554)
!554 = !{!265, !508, !265}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !532, file: !44, line: 1868, baseType: !556, size: 64, offset: 192)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = !DISubroutineType(types: !558)
!558 = !{!559, !508, !265}
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !532, file: !44, line: 1870, baseType: !562, size: 64, offset: 256)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DISubroutineType(types: !564)
!564 = !{!265, !469, !363, !265}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !532, file: !44, line: 1872, baseType: !566, size: 64, offset: 320)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DISubroutineType(types: !568)
!568 = !{!265, !508, !469, !404, !569}
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !215, line: 30, baseType: !570)
!570 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !532, file: !44, line: 1873, baseType: !572, size: 64, offset: 384)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DISubroutineType(types: !574)
!574 = !{!265, !469, !508, !469}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !532, file: !44, line: 1874, baseType: !576, size: 64, offset: 448)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = !DISubroutineType(types: !578)
!578 = !{!265, !508, !469}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !532, file: !44, line: 1875, baseType: !580, size: 64, offset: 512)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!265, !508, !469, !244}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !532, file: !44, line: 1876, baseType: !584, size: 64, offset: 576)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DISubroutineType(types: !586)
!586 = !{!265, !508, !469, !404}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !532, file: !44, line: 1877, baseType: !576, size: 64, offset: 640)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !532, file: !44, line: 1878, baseType: !589, size: 64, offset: 704)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = !DISubroutineType(types: !591)
!591 = !{!265, !508, !469, !404, !592}
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !215, line: 16, baseType: !593)
!593 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !215, line: 13, baseType: !204)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !532, file: !44, line: 1879, baseType: !595, size: 64, offset: 768)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = !DISubroutineType(types: !597)
!597 = !{!265, !508, !469, !508, !469, !7}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !532, file: !44, line: 1881, baseType: !599, size: 64, offset: 832)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DISubroutineType(types: !601)
!601 = !{!265, !469, !602}
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !604)
!604 = !{!605, !606, !607, !608, !609, !613, !621, !622, !623}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !603, file: !44, line: 220, baseType: !7, size: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !603, file: !44, line: 221, baseType: !404, size: 16, offset: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !603, file: !44, line: 222, baseType: !514, size: 32, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !603, file: !44, line: 223, baseType: !522, size: 32, offset: 96)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !603, file: !44, line: 224, baseType: !610, size: 64, offset: 128)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !215, line: 46, baseType: !611)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !396, line: 88, baseType: !612)
!612 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !603, file: !44, line: 225, baseType: !614, size: 128, offset: 192)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !615, line: 13, size: 128, elements: !616)
!615 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!616 = !{!617, !620}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !614, file: !615, line: 14, baseType: !618, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !615, line: 8, baseType: !619)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !207, line: 30, baseType: !612)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !614, file: !615, line: 15, baseType: !398, size: 64, offset: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !603, file: !44, line: 226, baseType: !614, size: 128, offset: 320)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !603, file: !44, line: 227, baseType: !614, size: 128, offset: 448)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !603, file: !44, line: 234, baseType: !439, size: 64, offset: 576)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !532, file: !44, line: 1882, baseType: !625, size: 64, offset: 896)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = !DISubroutineType(types: !627)
!627 = !{!265, !628, !630, !204, !7}
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !461)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !632, line: 22, size: 1152, elements: !633)
!632 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!633 = !{!634, !635, !636, !637, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !631, file: !632, line: 23, baseType: !204, size: 32)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !631, file: !632, line: 24, baseType: !404, size: 16, offset: 32)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !631, file: !632, line: 25, baseType: !7, size: 32, offset: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !631, file: !632, line: 26, baseType: !638, size: 32, offset: 96)
!638 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !215, line: 104, baseType: !204)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !631, file: !632, line: 27, baseType: !239, size: 64, offset: 128)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !631, file: !632, line: 28, baseType: !239, size: 64, offset: 192)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !631, file: !632, line: 37, baseType: !239, size: 64, offset: 256)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !631, file: !632, line: 38, baseType: !592, size: 32, offset: 320)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !631, file: !632, line: 39, baseType: !592, size: 32, offset: 352)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !631, file: !632, line: 40, baseType: !514, size: 32, offset: 384)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !631, file: !632, line: 41, baseType: !522, size: 32, offset: 416)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !631, file: !632, line: 42, baseType: !610, size: 64, offset: 448)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !631, file: !632, line: 43, baseType: !614, size: 128, offset: 512)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !631, file: !632, line: 44, baseType: !614, size: 128, offset: 640)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !631, file: !632, line: 45, baseType: !614, size: 128, offset: 768)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !631, file: !632, line: 46, baseType: !614, size: 128, offset: 896)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !631, file: !632, line: 47, baseType: !239, size: 64, offset: 1024)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !631, file: !632, line: 48, baseType: !239, size: 64, offset: 1088)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !532, file: !44, line: 1883, baseType: !654, size: 64, offset: 960)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = !DISubroutineType(types: !656)
!656 = !{!394, !469, !363, !409}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !532, file: !44, line: 1884, baseType: !658, size: 64, offset: 1024)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = !DISubroutineType(types: !660)
!660 = !{!265, !508, !661, !239, !239}
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !532, file: !44, line: 1886, baseType: !664, size: 64, offset: 1088)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DISubroutineType(types: !666)
!666 = !{!265, !508, !667, !265}
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !532, file: !44, line: 1887, baseType: !669, size: 64, offset: 1152)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = !DISubroutineType(types: !671)
!671 = !{!265, !508, !469, !439, !7, !404}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !532, file: !44, line: 1890, baseType: !584, size: 64, offset: 1216)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !532, file: !44, line: 1891, baseType: !674, size: 64, offset: 1280)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = !DISubroutineType(types: !676)
!676 = !{!265, !508, !559, !265}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !509, file: !44, line: 623, baseType: !678, size: 64, offset: 192)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !680)
!680 = !{!681, !682, !683, !684, !685, !686, !736, !3143, !3225, !3308, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3324, !3328, !3329, !3332, !3333, !3336, !3337, !3338, !3379, !3406, !3407, !3408, !3409, !3410, !3411, !3414, !3416, !3423, !3424, !3426, !3427, !3428, !3487, !3488, !3503, !3504, !3505, !3506, !3507, !3510, !3511, !3512, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !679, file: !44, line: 1417, baseType: !214, size: 128)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !679, file: !44, line: 1418, baseType: !592, size: 32, offset: 128)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !679, file: !44, line: 1419, baseType: !292, size: 8, offset: 160)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !679, file: !44, line: 1420, baseType: !248, size: 64, offset: 192)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !679, file: !44, line: 1421, baseType: !610, size: 64, offset: 256)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !679, file: !44, line: 1422, baseType: !687, size: 64, offset: 320)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !689)
!689 = !{!690, !691, !692, !699, !703, !707, !711, !715, !716, !726, !729, !730, !731, !733, !734, !735}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !688, file: !44, line: 2229, baseType: !244, size: 64)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !688, file: !44, line: 2230, baseType: !265, size: 32, offset: 64)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !688, file: !44, line: 2238, baseType: !693, size: 64, offset: 128)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DISubroutineType(types: !695)
!695 = !{!265, !696}
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !698, line: 28, flags: DIFlagFwdDecl)
!698 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!699 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !688, file: !44, line: 2239, baseType: !700, size: 64, offset: 192)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !702)
!702 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !688, file: !44, line: 2240, baseType: !704, size: 64, offset: 256)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DISubroutineType(types: !706)
!706 = !{!469, !687, !265, !244, !208}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !688, file: !44, line: 2242, baseType: !708, size: 64, offset: 320)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DISubroutineType(types: !710)
!710 = !{null, !678}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !688, file: !44, line: 2243, baseType: !712, size: 64, offset: 384)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !714, line: 189, flags: DIFlagFwdDecl)
!714 = !DIFile(filename: "./include/linux/jump_label.h", directory: "/home/lizy2001/genbc/linux")
!715 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !688, file: !44, line: 2244, baseType: !687, size: 64, offset: 448)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !688, file: !44, line: 2245, baseType: !717, size: 64, offset: 512)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !215, line: 182, size: 64, elements: !718)
!718 = !{!719}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !717, file: !215, line: 183, baseType: !720, size: 64)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !215, line: 186, size: 128, elements: !722)
!722 = !{!723, !724}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !721, file: !215, line: 187, baseType: !720, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !721, file: !215, line: 187, baseType: !725, size: 64, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !688, file: !44, line: 2247, baseType: !727, offset: 576)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !728, line: 187, elements: !336)
!728 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!729 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !688, file: !44, line: 2248, baseType: !727, offset: 576)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !688, file: !44, line: 2249, baseType: !727, offset: 576)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !688, file: !44, line: 2250, baseType: !732, offset: 576)
!732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !727, elements: !364)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !688, file: !44, line: 2252, baseType: !727, offset: 576)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !688, file: !44, line: 2253, baseType: !727, offset: 576)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !688, file: !44, line: 2254, baseType: !727, offset: 576)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !679, file: !44, line: 1423, baseType: !737, size: 64, offset: 384)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !740)
!740 = !{!741, !745, !749, !750, !754, !760, !764, !765, !766, !770, !774, !775, !776, !777, !783, !788, !789, !845, !846, !847, !848, !3127, !3142}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !739, file: !44, line: 1936, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DISubroutineType(types: !744)
!744 = !{!508, !678}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !739, file: !44, line: 1937, baseType: !746, size: 64, offset: 64)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DISubroutineType(types: !748)
!748 = !{null, !508}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !739, file: !44, line: 1938, baseType: !746, size: 64, offset: 128)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !739, file: !44, line: 1940, baseType: !751, size: 64, offset: 192)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DISubroutineType(types: !753)
!753 = !{null, !508, !265}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !739, file: !44, line: 1941, baseType: !755, size: 64, offset: 256)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DISubroutineType(types: !757)
!757 = !{!265, !508, !758}
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !739, file: !44, line: 1942, baseType: !761, size: 64, offset: 320)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DISubroutineType(types: !763)
!763 = !{!265, !508}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !739, file: !44, line: 1943, baseType: !746, size: 64, offset: 384)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !739, file: !44, line: 1944, baseType: !708, size: 64, offset: 448)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !739, file: !44, line: 1945, baseType: !767, size: 64, offset: 512)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DISubroutineType(types: !769)
!769 = !{!265, !678, !265}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !739, file: !44, line: 1946, baseType: !771, size: 64, offset: 576)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DISubroutineType(types: !773)
!773 = !{!265, !678}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !739, file: !44, line: 1947, baseType: !771, size: 64, offset: 640)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !739, file: !44, line: 1948, baseType: !771, size: 64, offset: 704)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !739, file: !44, line: 1949, baseType: !771, size: 64, offset: 768)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !739, file: !44, line: 1950, baseType: !778, size: 64, offset: 832)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = !DISubroutineType(types: !780)
!780 = !{!265, !469, !781}
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !739, file: !44, line: 1951, baseType: !784, size: 64, offset: 896)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DISubroutineType(types: !786)
!786 = !{!265, !678, !787, !363}
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !739, file: !44, line: 1952, baseType: !708, size: 64, offset: 960)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !739, file: !44, line: 1954, baseType: !790, size: 64, offset: 1024)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DISubroutineType(types: !792)
!792 = !{!265, !793, !469}
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !795, line: 16, size: 896, elements: !796)
!795 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!796 = !{!797, !798, !799, !800, !801, !802, !803, !804, !818, !840, !841, !844}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !794, file: !795, line: 17, baseType: !363, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !794, file: !795, line: 18, baseType: !409, size: 64, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !794, file: !795, line: 19, baseType: !409, size: 64, offset: 128)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !794, file: !795, line: 20, baseType: !409, size: 64, offset: 192)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !794, file: !795, line: 21, baseType: !409, size: 64, offset: 256)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !794, file: !795, line: 22, baseType: !610, size: 64, offset: 320)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !794, file: !795, line: 23, baseType: !610, size: 64, offset: 384)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !794, file: !795, line: 24, baseType: !805, size: 192, offset: 448)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !806, line: 53, size: 192, elements: !807)
!806 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!807 = !{!808, !816, !817}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !805, file: !806, line: 54, baseType: !809, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !810, line: 13, baseType: !811)
!810 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !215, line: 175, baseType: !812)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !215, line: 173, size: 64, elements: !813)
!813 = !{!814}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !812, file: !215, line: 174, baseType: !815, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !205, line: 22, baseType: !619)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !805, file: !806, line: 55, baseType: !322, offset: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !805, file: !806, line: 59, baseType: !214, size: 128, offset: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !794, file: !795, line: 25, baseType: !819, size: 64, offset: 640)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !821)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !795, line: 31, size: 256, elements: !822)
!822 = !{!823, !828, !832, !836}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !821, file: !795, line: 32, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{!208, !793, !827}
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !821, file: !795, line: 33, baseType: !829, size: 64, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DISubroutineType(types: !831)
!831 = !{null, !793, !208}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !821, file: !795, line: 34, baseType: !833, size: 64, offset: 128)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{!208, !793, !208, !827}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !821, file: !795, line: 35, baseType: !837, size: 64, offset: 192)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{!265, !793, !208}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !794, file: !795, line: 26, baseType: !265, size: 32, offset: 704)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !794, file: !795, line: 27, baseType: !842, size: 64, offset: 768)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !440)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !794, file: !795, line: 28, baseType: !208, size: 64, offset: 832)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !739, file: !44, line: 1955, baseType: !790, size: 64, offset: 1088)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !739, file: !44, line: 1956, baseType: !790, size: 64, offset: 1152)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !739, file: !44, line: 1957, baseType: !790, size: 64, offset: 1216)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !739, file: !44, line: 1963, baseType: !849, size: 64, offset: 1280)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DISubroutineType(types: !851)
!851 = !{!265, !678, !852, !875}
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !854, line: 68, size: 512, align: 128, elements: !855)
!854 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!855 = !{!856, !857, !3119, !3126}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !853, file: !854, line: 69, baseType: !248, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, scope: !853, file: !854, line: 77, baseType: !858, size: 320, offset: 64)
!858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !853, file: !854, line: 77, size: 320, elements: !859)
!859 = !{!860, !1041, !1046, !1074, !1082, !1088, !3050, !3118}
!860 = !DIDerivedType(tag: DW_TAG_member, scope: !858, file: !854, line: 78, baseType: !861, size: 320)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !854, line: 78, size: 320, elements: !862)
!862 = !{!863, !864, !1039, !1040}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !861, file: !854, line: 84, baseType: !214, size: 128)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !861, file: !854, line: 86, baseType: !865, size: 64, offset: 128)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !867)
!867 = !{!868, !869, !877, !878, !883, !898, !907, !908, !909, !910, !1032, !1033, !1036, !1037, !1038}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !866, file: !44, line: 452, baseType: !508, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !866, file: !44, line: 453, baseType: !870, size: 128, offset: 64)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !871, line: 292, size: 128, elements: !872)
!871 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!872 = !{!873, !874, !876}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !870, file: !871, line: 293, baseType: !322)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !870, file: !871, line: 295, baseType: !875, size: 32)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !215, line: 148, baseType: !7)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !870, file: !871, line: 296, baseType: !208, size: 64, offset: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !866, file: !44, line: 454, baseType: !875, size: 32, offset: 192)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !866, file: !44, line: 455, baseType: !879, size: 32, offset: 224)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !215, line: 168, baseType: !880)
!880 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !215, line: 166, size: 32, elements: !881)
!881 = !{!882}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !880, file: !215, line: 167, baseType: !265, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !866, file: !44, line: 460, baseType: !884, size: 128, offset: 256)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !885, line: 125, size: 128, elements: !886)
!885 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!886 = !{!887, !897}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !884, file: !885, line: 126, baseType: !888, size: 64)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !885, line: 31, size: 64, elements: !889)
!889 = !{!890}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !888, file: !885, line: 32, baseType: !891, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !885, line: 24, size: 192, align: 64, elements: !893)
!893 = !{!894, !895, !896}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !892, file: !885, line: 25, baseType: !248, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !892, file: !885, line: 26, baseType: !891, size: 64, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !892, file: !885, line: 27, baseType: !891, size: 64, offset: 128)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !884, file: !885, line: 127, baseType: !891, size: 64, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !866, file: !44, line: 461, baseType: !899, size: 256, offset: 384)
!899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !900, line: 35, size: 256, elements: !901)
!900 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!901 = !{!902, !903, !904, !906}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !899, file: !900, line: 36, baseType: !809, size: 64)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !899, file: !900, line: 42, baseType: !809, size: 64, offset: 64)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !899, file: !900, line: 46, baseType: !905, offset: 128)
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !323, line: 29, baseType: !330)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !899, file: !900, line: 47, baseType: !214, size: 128, offset: 128)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !866, file: !44, line: 462, baseType: !248, size: 64, offset: 640)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !866, file: !44, line: 463, baseType: !248, size: 64, offset: 704)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !866, file: !44, line: 464, baseType: !248, size: 64, offset: 768)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !866, file: !44, line: 465, baseType: !911, size: 64, offset: 832)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !913)
!913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !914)
!914 = !{!915, !919, !923, !927, !931, !935, !941, !947, !951, !956, !960, !964, !968, !996, !1000, !1006, !1007, !1008, !1012, !1017, !1021, !1028}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !913, file: !44, line: 368, baseType: !916, size: 64)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!265, !852, !758}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !913, file: !44, line: 369, baseType: !920, size: 64, offset: 64)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!265, !439, !852}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !913, file: !44, line: 372, baseType: !924, size: 64, offset: 128)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DISubroutineType(types: !926)
!926 = !{!265, !865, !758}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !913, file: !44, line: 375, baseType: !928, size: 64, offset: 192)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{!265, !852}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !913, file: !44, line: 381, baseType: !932, size: 64, offset: 256)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{!265, !439, !865, !218, !7}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !913, file: !44, line: 383, baseType: !936, size: 64, offset: 320)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DISubroutineType(types: !938)
!938 = !{null, !939}
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !913, file: !44, line: 385, baseType: !942, size: 64, offset: 384)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = !DISubroutineType(types: !944)
!944 = !{!265, !439, !865, !610, !7, !7, !945, !946}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !913, file: !44, line: 388, baseType: !948, size: 64, offset: 448)
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DISubroutineType(types: !950)
!950 = !{!265, !439, !865, !610, !7, !7, !852, !208}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !913, file: !44, line: 393, baseType: !952, size: 64, offset: 512)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DISubroutineType(types: !954)
!954 = !{!955, !865, !955}
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !215, line: 125, baseType: !239)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !913, file: !44, line: 394, baseType: !957, size: 64, offset: 576)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!958 = !DISubroutineType(types: !959)
!959 = !{null, !852, !7, !7}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !913, file: !44, line: 395, baseType: !961, size: 64, offset: 640)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DISubroutineType(types: !963)
!963 = !{!265, !852, !875}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !913, file: !44, line: 396, baseType: !965, size: 64, offset: 704)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DISubroutineType(types: !967)
!967 = !{null, !852}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !913, file: !44, line: 397, baseType: !969, size: 64, offset: 768)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DISubroutineType(types: !971)
!971 = !{!394, !972, !994}
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !974)
!974 = !{!975, !976, !977, !981, !982, !983, !986, !987}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !973, file: !44, line: 321, baseType: !439, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !973, file: !44, line: 326, baseType: !610, size: 64, offset: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !973, file: !44, line: 327, baseType: !978, size: 64, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DISubroutineType(types: !980)
!980 = !{null, !972, !398, !398}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !973, file: !44, line: 328, baseType: !208, size: 64, offset: 192)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !973, file: !44, line: 329, baseType: !265, size: 32, offset: 256)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !973, file: !44, line: 330, baseType: !984, size: 16, offset: 288)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !205, line: 19, baseType: !985)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !207, line: 24, baseType: !301)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !973, file: !44, line: 331, baseType: !984, size: 16, offset: 304)
!987 = !DIDerivedType(tag: DW_TAG_member, scope: !973, file: !44, line: 332, baseType: !988, size: 64, offset: 320)
!988 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !973, file: !44, line: 332, size: 64, elements: !989)
!989 = !{!990, !991}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !988, file: !44, line: 333, baseType: !7, size: 32)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !988, file: !44, line: 334, baseType: !992, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !913, file: !44, line: 402, baseType: !997, size: 64, offset: 832)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DISubroutineType(types: !999)
!999 = !{!265, !865, !852, !852, !5}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !913, file: !44, line: 404, baseType: !1001, size: 64, offset: 896)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!569, !852, !1004}
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1005, line: 305, baseType: !7)
!1005 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !913, file: !44, line: 405, baseType: !965, size: 64, offset: 960)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !913, file: !44, line: 406, baseType: !928, size: 64, offset: 1024)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !913, file: !44, line: 407, baseType: !1009, size: 64, offset: 1088)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!265, !852, !248, !248}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !913, file: !44, line: 409, baseType: !1013, size: 64, offset: 1152)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{null, !852, !1016, !1016}
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !913, file: !44, line: 410, baseType: !1018, size: 64, offset: 1216)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!265, !865, !852}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !913, file: !44, line: 413, baseType: !1022, size: 64, offset: 1280)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!265, !1025, !439, !1027}
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !913, file: !44, line: 415, baseType: !1029, size: 64, offset: 1344)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{null, !439}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !866, file: !44, line: 466, baseType: !248, size: 64, offset: 896)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !866, file: !44, line: 467, baseType: !1034, size: 32, offset: 960)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1035, line: 8, baseType: !204)
!1035 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !866, file: !44, line: 468, baseType: !322, offset: 992)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !866, file: !44, line: 469, baseType: !214, size: 128, offset: 1024)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !866, file: !44, line: 470, baseType: !208, size: 64, offset: 1152)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !861, file: !854, line: 87, baseType: !248, size: 64, offset: 192)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !861, file: !854, line: 94, baseType: !248, size: 64, offset: 256)
!1041 = !DIDerivedType(tag: DW_TAG_member, scope: !858, file: !854, line: 96, baseType: !1042, size: 64)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !854, line: 96, size: 64, elements: !1043)
!1043 = !{!1044}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1042, file: !854, line: 101, baseType: !1045, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !215, line: 143, baseType: !239)
!1046 = !DIDerivedType(tag: DW_TAG_member, scope: !858, file: !854, line: 103, baseType: !1047, size: 320)
!1047 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !854, line: 103, size: 320, elements: !1048)
!1048 = !{!1049, !1059, !1062, !1063}
!1049 = !DIDerivedType(tag: DW_TAG_member, scope: !1047, file: !854, line: 104, baseType: !1050, size: 128)
!1050 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1047, file: !854, line: 104, size: 128, elements: !1051)
!1051 = !{!1052, !1053}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1050, file: !854, line: 105, baseType: !214, size: 128)
!1053 = !DIDerivedType(tag: DW_TAG_member, scope: !1050, file: !854, line: 106, baseType: !1054, size: 128)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1050, file: !854, line: 106, size: 128, elements: !1055)
!1055 = !{!1056, !1057, !1058}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1054, file: !854, line: 107, baseType: !852, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1054, file: !854, line: 109, baseType: !265, size: 32, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1054, file: !854, line: 110, baseType: !265, size: 32, offset: 96)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1047, file: !854, line: 117, baseType: !1060, size: 64, offset: 128)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !854, line: 117, flags: DIFlagFwdDecl)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1047, file: !854, line: 119, baseType: !208, size: 64, offset: 192)
!1063 = !DIDerivedType(tag: DW_TAG_member, scope: !1047, file: !854, line: 120, baseType: !1064, size: 64, offset: 256)
!1064 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1047, file: !854, line: 120, size: 64, elements: !1065)
!1065 = !{!1066, !1067, !1068}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1064, file: !854, line: 121, baseType: !208, size: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1064, file: !854, line: 122, baseType: !248, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, scope: !1064, file: !854, line: 123, baseType: !1069, size: 32)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1064, file: !854, line: 123, size: 32, elements: !1070)
!1070 = !{!1071, !1072, !1073}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1069, file: !854, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1069, file: !854, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1069, file: !854, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1074 = !DIDerivedType(tag: DW_TAG_member, scope: !858, file: !854, line: 130, baseType: !1075, size: 192)
!1075 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !854, line: 130, size: 192, elements: !1076)
!1076 = !{!1077, !1078, !1079, !1080, !1081}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1075, file: !854, line: 131, baseType: !248, size: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1075, file: !854, line: 134, baseType: !292, size: 8, offset: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1075, file: !854, line: 135, baseType: !292, size: 8, offset: 72)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1075, file: !854, line: 136, baseType: !879, size: 32, offset: 96)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1075, file: !854, line: 137, baseType: !7, size: 32, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_member, scope: !858, file: !854, line: 139, baseType: !1083, size: 256)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !854, line: 139, size: 256, elements: !1084)
!1084 = !{!1085, !1086, !1087}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1083, file: !854, line: 140, baseType: !248, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1083, file: !854, line: 141, baseType: !879, size: 32, offset: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1083, file: !854, line: 143, baseType: !214, size: 128, offset: 128)
!1088 = !DIDerivedType(tag: DW_TAG_member, scope: !858, file: !854, line: 145, baseType: !1089, size: 256)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !854, line: 145, size: 256, elements: !1090)
!1090 = !{!1091, !1092, !1095, !1096, !3049}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1089, file: !854, line: 146, baseType: !248, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1089, file: !854, line: 147, baseType: !1093, size: 64, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1094, line: 509, baseType: !852)
!1094 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1089, file: !854, line: 148, baseType: !248, size: 64, offset: 128)
!1096 = !DIDerivedType(tag: DW_TAG_member, scope: !1089, file: !854, line: 149, baseType: !1097, size: 64, offset: 192)
!1097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1089, file: !854, line: 149, size: 64, elements: !1098)
!1098 = !{!1099, !3048}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1097, file: !854, line: 150, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !854, line: 388, size: 7296, elements: !1102)
!1102 = !{!1103, !3047}
!1103 = !DIDerivedType(tag: DW_TAG_member, scope: !1101, file: !854, line: 389, baseType: !1104, size: 7296)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1101, file: !854, line: 389, size: 7296, elements: !1105)
!1105 = !{!1106, !1224, !1225, !1226, !1230, !1231, !1232, !1233, !1234, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1275, !1281, !1284, !1324, !1325, !3031, !3032, !3035, !3036, !3037, !3040, !3041, !3042, !3045, !3046}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1104, file: !854, line: 390, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !854, line: 305, size: 1472, elements: !1109)
!1109 = !{!1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1124, !1125, !1130, !1131, !1134, !1218, !1219, !1220, !1221, !1222}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1108, file: !854, line: 308, baseType: !248, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1108, file: !854, line: 309, baseType: !248, size: 64, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1108, file: !854, line: 313, baseType: !1107, size: 64, offset: 128)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1108, file: !854, line: 313, baseType: !1107, size: 64, offset: 192)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1108, file: !854, line: 315, baseType: !892, size: 192, align: 64, offset: 256)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1108, file: !854, line: 323, baseType: !248, size: 64, offset: 448)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1108, file: !854, line: 327, baseType: !1100, size: 64, offset: 512)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1108, file: !854, line: 333, baseType: !1118, size: 64, offset: 576)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1094, line: 284, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1094, line: 284, size: 64, elements: !1120)
!1120 = !{!1121}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1119, file: !1094, line: 284, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1123, line: 19, baseType: !248)
!1123 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1108, file: !854, line: 334, baseType: !248, size: 64, offset: 640)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1108, file: !854, line: 343, baseType: !1126, size: 256, offset: 704)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1108, file: !854, line: 340, size: 256, elements: !1127)
!1127 = !{!1128, !1129}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1126, file: !854, line: 341, baseType: !892, size: 192, align: 64)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1126, file: !854, line: 342, baseType: !248, size: 64, offset: 192)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1108, file: !854, line: 351, baseType: !214, size: 128, offset: 960)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1108, file: !854, line: 353, baseType: !1132, size: 64, offset: 1088)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !854, line: 353, flags: DIFlagFwdDecl)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1108, file: !854, line: 356, baseType: !1135, size: 64, offset: 1152)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1137)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1138)
!1138 = !{!1139, !1143, !1144, !1148, !1152, !1192, !1196, !1200, !1204, !1205, !1206, !1210, !1214}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1137, file: !14, line: 558, baseType: !1140, size: 64)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{null, !1107}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1137, file: !14, line: 559, baseType: !1140, size: 64, offset: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1137, file: !14, line: 560, baseType: !1145, size: 64, offset: 128)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!265, !1107, !248}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1137, file: !14, line: 561, baseType: !1149, size: 64, offset: 192)
!1149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1150, size: 64)
!1150 = !DISubroutineType(types: !1151)
!1151 = !{!265, !1107}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1137, file: !14, line: 562, baseType: !1153, size: 64, offset: 256)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!1156, !1157}
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !854, line: 682, baseType: !7)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1159)
!1159 = !{!1160, !1161, !1162, !1163, !1164, !1165, !1172, !1179, !1185, !1186, !1187, !1189, !1191}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1158, file: !14, line: 509, baseType: !1107, size: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1158, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1158, file: !14, line: 511, baseType: !875, size: 32, offset: 96)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1158, file: !14, line: 512, baseType: !248, size: 64, offset: 128)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1158, file: !14, line: 513, baseType: !248, size: 64, offset: 192)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1158, file: !14, line: 514, baseType: !1166, size: 64, offset: 256)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1094, line: 385, baseType: !1168)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1094, line: 385, size: 64, elements: !1169)
!1169 = !{!1170}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1168, file: !1094, line: 385, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1123, line: 15, baseType: !248)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1158, file: !14, line: 516, baseType: !1173, size: 64, offset: 320)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1094, line: 359, baseType: !1175)
!1175 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1094, line: 359, size: 64, elements: !1176)
!1176 = !{!1177}
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1175, file: !1094, line: 359, baseType: !1178, size: 64)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1123, line: 16, baseType: !248)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1158, file: !14, line: 519, baseType: !1180, size: 64, offset: 384)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1123, line: 21, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1123, line: 21, size: 64, elements: !1182)
!1182 = !{!1183}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1181, file: !1123, line: 21, baseType: !1184, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1123, line: 14, baseType: !248)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1158, file: !14, line: 521, baseType: !852, size: 64, offset: 448)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1158, file: !14, line: 522, baseType: !852, size: 64, offset: 512)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1158, file: !14, line: 528, baseType: !1188, size: 64, offset: 576)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1158, file: !14, line: 532, baseType: !1190, size: 64, offset: 640)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1158, file: !14, line: 536, baseType: !1093, size: 64, offset: 704)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1137, file: !14, line: 563, baseType: !1193, size: 64, offset: 320)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!1156, !1157, !13}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1137, file: !14, line: 565, baseType: !1197, size: 64, offset: 384)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = !DISubroutineType(types: !1199)
!1199 = !{null, !1157, !248, !248}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1137, file: !14, line: 567, baseType: !1201, size: 64, offset: 448)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!248, !1107}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1137, file: !14, line: 571, baseType: !1153, size: 64, offset: 512)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1137, file: !14, line: 574, baseType: !1153, size: 64, offset: 576)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1137, file: !14, line: 579, baseType: !1207, size: 64, offset: 640)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!265, !1107, !248, !208, !265, !265}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1137, file: !14, line: 585, baseType: !1211, size: 64, offset: 704)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!244, !1107}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1137, file: !14, line: 615, baseType: !1215, size: 64, offset: 768)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!852, !1107, !248}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1108, file: !854, line: 359, baseType: !248, size: 64, offset: 1216)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1108, file: !854, line: 361, baseType: !439, size: 64, offset: 1280)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1108, file: !854, line: 362, baseType: !208, size: 64, offset: 1344)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1108, file: !854, line: 365, baseType: !809, size: 64, offset: 1408)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1108, file: !854, line: 373, baseType: !1223, offset: 1472)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !854, line: 296, elements: !336)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1104, file: !854, line: 391, baseType: !888, size: 64, offset: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1104, file: !854, line: 392, baseType: !239, size: 64, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1104, file: !854, line: 394, baseType: !1227, size: 64, offset: 192)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!248, !439, !248, !248, !248, !248}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1104, file: !854, line: 398, baseType: !248, size: 64, offset: 256)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1104, file: !854, line: 399, baseType: !248, size: 64, offset: 320)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1104, file: !854, line: 405, baseType: !248, size: 64, offset: 384)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1104, file: !854, line: 406, baseType: !248, size: 64, offset: 448)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1104, file: !854, line: 407, baseType: !1235, size: 64, offset: 512)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1094, line: 286, baseType: !1237)
!1237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1094, line: 286, size: 64, elements: !1238)
!1238 = !{!1239}
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1237, file: !1094, line: 286, baseType: !1240, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1123, line: 18, baseType: !248)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1104, file: !854, line: 416, baseType: !879, size: 32, offset: 576)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1104, file: !854, line: 428, baseType: !879, size: 32, offset: 608)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1104, file: !854, line: 437, baseType: !879, size: 32, offset: 640)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1104, file: !854, line: 447, baseType: !879, size: 32, offset: 672)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1104, file: !854, line: 450, baseType: !809, size: 64, offset: 704)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1104, file: !854, line: 452, baseType: !265, size: 32, offset: 768)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1104, file: !854, line: 454, baseType: !322, offset: 800)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1104, file: !854, line: 457, baseType: !899, size: 256, offset: 832)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1104, file: !854, line: 459, baseType: !214, size: 128, offset: 1088)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1104, file: !854, line: 466, baseType: !248, size: 64, offset: 1216)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1104, file: !854, line: 467, baseType: !248, size: 64, offset: 1280)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1104, file: !854, line: 469, baseType: !248, size: 64, offset: 1344)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1104, file: !854, line: 470, baseType: !248, size: 64, offset: 1408)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1104, file: !854, line: 471, baseType: !811, size: 64, offset: 1472)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1104, file: !854, line: 472, baseType: !248, size: 64, offset: 1536)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1104, file: !854, line: 473, baseType: !248, size: 64, offset: 1600)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1104, file: !854, line: 474, baseType: !248, size: 64, offset: 1664)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1104, file: !854, line: 475, baseType: !248, size: 64, offset: 1728)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1104, file: !854, line: 477, baseType: !322, offset: 1792)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1104, file: !854, line: 478, baseType: !248, size: 64, offset: 1792)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1104, file: !854, line: 478, baseType: !248, size: 64, offset: 1856)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1104, file: !854, line: 478, baseType: !248, size: 64, offset: 1920)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1104, file: !854, line: 478, baseType: !248, size: 64, offset: 1984)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1104, file: !854, line: 479, baseType: !248, size: 64, offset: 2048)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1104, file: !854, line: 479, baseType: !248, size: 64, offset: 2112)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1104, file: !854, line: 479, baseType: !248, size: 64, offset: 2176)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1104, file: !854, line: 480, baseType: !248, size: 64, offset: 2240)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1104, file: !854, line: 480, baseType: !248, size: 64, offset: 2304)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1104, file: !854, line: 480, baseType: !248, size: 64, offset: 2368)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1104, file: !854, line: 480, baseType: !248, size: 64, offset: 2432)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1104, file: !854, line: 482, baseType: !1272, size: 2816, offset: 2496)
!1272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 2816, elements: !1273)
!1273 = !{!1274}
!1274 = !DISubrange(count: 44)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1104, file: !854, line: 488, baseType: !1276, size: 256, offset: 5312)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1277, line: 60, size: 256, elements: !1278)
!1277 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1278 = !{!1279}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1276, file: !1277, line: 61, baseType: !1280, size: 256)
!1280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !809, size: 256, elements: !253)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1104, file: !854, line: 490, baseType: !1282, size: 64, offset: 5568)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !854, line: 490, flags: DIFlagFwdDecl)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1104, file: !854, line: 493, baseType: !1285, size: 896, offset: 5632)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1286, line: 53, baseType: !1287)
!1286 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1286, line: 13, size: 896, elements: !1288)
!1288 = !{!1289, !1290, !1291, !1292, !1295, !1296, !1297, !1298, !1318, !1319, !1320}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1287, file: !1286, line: 18, baseType: !239, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1287, file: !1286, line: 28, baseType: !811, size: 64, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1287, file: !1286, line: 31, baseType: !899, size: 256, offset: 128)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1287, file: !1286, line: 32, baseType: !1293, size: 64, offset: 384)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1286, line: 32, flags: DIFlagFwdDecl)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1287, file: !1286, line: 37, baseType: !301, size: 16, offset: 448)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1287, file: !1286, line: 40, baseType: !805, size: 192, offset: 512)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1287, file: !1286, line: 41, baseType: !208, size: 64, offset: 704)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1287, file: !1286, line: 42, baseType: !1299, size: 64, offset: 768)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1301)
!1301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1302, line: 13, size: 896, elements: !1303)
!1302 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1303 = !{!1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1301, file: !1302, line: 14, baseType: !208, size: 64)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1301, file: !1302, line: 15, baseType: !248, size: 64, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1301, file: !1302, line: 17, baseType: !248, size: 64, offset: 128)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1301, file: !1302, line: 17, baseType: !248, size: 64, offset: 192)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1301, file: !1302, line: 19, baseType: !398, size: 64, offset: 256)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1301, file: !1302, line: 21, baseType: !398, size: 64, offset: 320)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1301, file: !1302, line: 22, baseType: !398, size: 64, offset: 384)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1301, file: !1302, line: 23, baseType: !398, size: 64, offset: 448)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1301, file: !1302, line: 24, baseType: !398, size: 64, offset: 512)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1301, file: !1302, line: 25, baseType: !398, size: 64, offset: 576)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1301, file: !1302, line: 26, baseType: !398, size: 64, offset: 640)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1301, file: !1302, line: 27, baseType: !398, size: 64, offset: 704)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1301, file: !1302, line: 28, baseType: !398, size: 64, offset: 768)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1301, file: !1302, line: 29, baseType: !398, size: 64, offset: 832)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1287, file: !1286, line: 44, baseType: !879, size: 32, offset: 832)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1287, file: !1286, line: 50, baseType: !984, size: 16, offset: 864)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1287, file: !1286, line: 51, baseType: !1321, size: 16, offset: 880)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !205, line: 18, baseType: !1322)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !207, line: 23, baseType: !1323)
!1323 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1104, file: !854, line: 495, baseType: !248, size: 64, offset: 6528)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1104, file: !854, line: 497, baseType: !1326, size: 64, offset: 6592)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !854, line: 381, size: 384, elements: !1328)
!1328 = !{!1329, !1330, !3030}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1327, file: !854, line: 382, baseType: !879, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1327, file: !854, line: 383, baseType: !1331, size: 128, offset: 64)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !854, line: 376, size: 128, elements: !1332)
!1332 = !{!1333, !3028}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1331, file: !854, line: 377, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1336, line: 640, size: 48640, elements: !1337)
!1336 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1337 = !{!1338, !1344, !1346, !1347, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1364, !1382, !1393, !1478, !1479, !1480, !1491, !1492, !1494, !1495, !1496, !1497, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1575, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1613, !1615, !1616, !1617, !1629, !1630, !1631, !1632, !1633, !1634, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1658, !1663, !1847, !1848, !1849, !1850, !1854, !1857, !1860, !1863, !1866, !1869, !2584, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2630, !2631, !2632, !2633, !2634, !2639, !2640, !2641, !2644, !2645, !2648, !2651, !2654, !2657, !2689, !2692, !2693, !2772, !2773, !2776, !2777, !2780, !2781, !2782, !2786, !2787, !2788, !2801, !2802, !2803, !2813, !2818, !2819, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1335, file: !1336, line: 646, baseType: !1339, size: 128)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1340, line: 56, size: 128, elements: !1341)
!1340 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1341 = !{!1342, !1343}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1339, file: !1340, line: 57, baseType: !248, size: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1339, file: !1340, line: 58, baseType: !204, size: 32, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1335, file: !1336, line: 649, baseType: !1345, size: 64, offset: 128)
!1345 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !398)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1335, file: !1336, line: 657, baseType: !208, size: 64, offset: 192)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1335, file: !1336, line: 658, baseType: !1348, size: 32, offset: 256)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1349, line: 113, baseType: !1350)
!1349 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1349, line: 111, size: 32, elements: !1351)
!1351 = !{!1352}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1350, file: !1349, line: 112, baseType: !879, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1335, file: !1336, line: 660, baseType: !7, size: 32, offset: 288)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1335, file: !1336, line: 661, baseType: !7, size: 32, offset: 320)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1335, file: !1336, line: 684, baseType: !265, size: 32, offset: 352)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1335, file: !1336, line: 686, baseType: !265, size: 32, offset: 384)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1335, file: !1336, line: 687, baseType: !265, size: 32, offset: 416)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1335, file: !1336, line: 688, baseType: !265, size: 32, offset: 448)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1335, file: !1336, line: 689, baseType: !7, size: 32, offset: 480)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1335, file: !1336, line: 691, baseType: !1361, size: 64, offset: 512)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1363)
!1363 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1336, line: 691, flags: DIFlagFwdDecl)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1335, file: !1336, line: 692, baseType: !1365, size: 832, offset: 576)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1336, line: 451, size: 832, elements: !1366)
!1366 = !{!1367, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1365, file: !1336, line: 453, baseType: !1368, size: 128)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1336, line: 325, size: 128, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1368, file: !1336, line: 326, baseType: !248, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1368, file: !1336, line: 327, baseType: !204, size: 32, offset: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1365, file: !1336, line: 454, baseType: !892, size: 192, align: 64, offset: 128)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1365, file: !1336, line: 455, baseType: !214, size: 128, offset: 320)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1365, file: !1336, line: 456, baseType: !7, size: 32, offset: 448)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1365, file: !1336, line: 458, baseType: !239, size: 64, offset: 512)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1365, file: !1336, line: 459, baseType: !239, size: 64, offset: 576)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1365, file: !1336, line: 460, baseType: !239, size: 64, offset: 640)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1365, file: !1336, line: 461, baseType: !239, size: 64, offset: 704)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1365, file: !1336, line: 463, baseType: !239, size: 64, offset: 768)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1365, file: !1336, line: 465, baseType: !1381, offset: 832)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1336, line: 415, elements: !336)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1335, file: !1336, line: 693, baseType: !1383, size: 384, offset: 1408)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1336, line: 489, size: 384, elements: !1384)
!1384 = !{!1385, !1386, !1387, !1388, !1389, !1390, !1391}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1383, file: !1336, line: 490, baseType: !214, size: 128)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1383, file: !1336, line: 491, baseType: !248, size: 64, offset: 128)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1383, file: !1336, line: 492, baseType: !248, size: 64, offset: 192)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1383, file: !1336, line: 493, baseType: !7, size: 32, offset: 256)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1383, file: !1336, line: 494, baseType: !301, size: 16, offset: 288)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1383, file: !1336, line: 495, baseType: !301, size: 16, offset: 304)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1383, file: !1336, line: 497, baseType: !1392, size: 64, offset: 320)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1335, file: !1336, line: 697, baseType: !1394, size: 1792, offset: 1792)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1336, line: 507, size: 1792, elements: !1395)
!1395 = !{!1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1475, !1476}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1394, file: !1336, line: 508, baseType: !892, size: 192, align: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1394, file: !1336, line: 515, baseType: !239, size: 64, offset: 192)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1394, file: !1336, line: 516, baseType: !239, size: 64, offset: 256)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1394, file: !1336, line: 517, baseType: !239, size: 64, offset: 320)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1394, file: !1336, line: 518, baseType: !239, size: 64, offset: 384)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1394, file: !1336, line: 519, baseType: !239, size: 64, offset: 448)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1394, file: !1336, line: 526, baseType: !815, size: 64, offset: 512)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1394, file: !1336, line: 527, baseType: !239, size: 64, offset: 576)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1394, file: !1336, line: 528, baseType: !7, size: 32, offset: 640)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1394, file: !1336, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1394, file: !1336, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1394, file: !1336, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1394, file: !1336, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1394, file: !1336, line: 563, baseType: !1410, size: 512, offset: 704)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1411)
!1411 = !{!1412, !1420, !1421, !1426, !1469, !1472, !1473, !1474}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1410, file: !20, line: 119, baseType: !1413, size: 256)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1414, line: 9, size: 256, elements: !1415)
!1414 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1415 = !{!1416, !1417}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1413, file: !1414, line: 10, baseType: !892, size: 192, align: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1413, file: !1414, line: 11, baseType: !1418, size: 64, offset: 192)
!1418 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1419, line: 29, baseType: !815)
!1419 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1410, file: !20, line: 120, baseType: !1418, size: 64, offset: 256)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1410, file: !20, line: 121, baseType: !1422, size: 64, offset: 320)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!19, !1425}
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1410, file: !20, line: 122, baseType: !1427, size: 64, offset: 384)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1429)
!1429 = !{!1430, !1450, !1451, !1454, !1459, !1460, !1464, !1468}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1428, file: !20, line: 160, baseType: !1431, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1433)
!1433 = !{!1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1432, file: !20, line: 215, baseType: !905)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1432, file: !20, line: 216, baseType: !7, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1432, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1432, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1432, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1432, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1432, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1432, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1432, file: !20, line: 233, baseType: !1418, size: 64, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1432, file: !20, line: 234, baseType: !1425, size: 64, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1432, file: !20, line: 235, baseType: !1418, size: 64, offset: 256)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1432, file: !20, line: 236, baseType: !1425, size: 64, offset: 320)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1432, file: !20, line: 237, baseType: !1447, size: 4096, offset: 512)
!1447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1428, size: 4096, elements: !1448)
!1448 = !{!1449}
!1449 = !DISubrange(count: 8)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1428, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1428, file: !20, line: 162, baseType: !1452, size: 32, offset: 96)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !215, line: 27, baseType: !1453)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !396, line: 96, baseType: !265)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1428, file: !20, line: 163, baseType: !1455, size: 32, offset: 128)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !475, line: 276, baseType: !1456)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !475, line: 276, size: 32, elements: !1457)
!1457 = !{!1458}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1456, file: !475, line: 276, baseType: !479, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1428, file: !20, line: 164, baseType: !1425, size: 64, offset: 192)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1428, file: !20, line: 165, baseType: !1461, size: 128, offset: 256)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1414, line: 14, size: 128, elements: !1462)
!1462 = !{!1463}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1461, file: !1414, line: 15, baseType: !884, size: 128)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1428, file: !20, line: 166, baseType: !1465, size: 64, offset: 384)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!1418}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1428, file: !20, line: 167, baseType: !1418, size: 64, offset: 448)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1410, file: !20, line: 123, baseType: !1470, size: 8, offset: 448)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !205, line: 17, baseType: !1471)
!1471 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !207, line: 21, baseType: !292)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1410, file: !20, line: 124, baseType: !1470, size: 8, offset: 456)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1410, file: !20, line: 125, baseType: !1470, size: 8, offset: 464)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1410, file: !20, line: 126, baseType: !1470, size: 8, offset: 472)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1394, file: !1336, line: 572, baseType: !1410, size: 512, offset: 1216)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1394, file: !1336, line: 580, baseType: !1477, size: 64, offset: 1728)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1335, file: !1336, line: 721, baseType: !7, size: 32, offset: 3584)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1335, file: !1336, line: 722, baseType: !265, size: 32, offset: 3616)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1335, file: !1336, line: 723, baseType: !1481, size: 64, offset: 3648)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1483)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1484, line: 17, baseType: !1485)
!1484 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1484, line: 17, size: 64, elements: !1486)
!1486 = !{!1487}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1485, file: !1484, line: 17, baseType: !1488, size: 64)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 64, elements: !1489)
!1489 = !{!1490}
!1490 = !DISubrange(count: 1)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1335, file: !1336, line: 724, baseType: !1483, size: 64, offset: 3712)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1335, file: !1336, line: 749, baseType: !1493, offset: 3776)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1336, line: 290, elements: !336)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1335, file: !1336, line: 751, baseType: !214, size: 128, offset: 3776)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1335, file: !1336, line: 757, baseType: !1100, size: 64, offset: 3904)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1335, file: !1336, line: 758, baseType: !1100, size: 64, offset: 3968)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1335, file: !1336, line: 761, baseType: !1498, size: 320, offset: 4032)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1277, line: 34, size: 320, elements: !1499)
!1499 = !{!1500, !1501}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1498, file: !1277, line: 35, baseType: !239, size: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1498, file: !1277, line: 36, baseType: !1502, size: 256, offset: 64)
!1502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1107, size: 256, elements: !253)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1335, file: !1336, line: 766, baseType: !265, size: 32, offset: 4352)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1335, file: !1336, line: 767, baseType: !265, size: 32, offset: 4384)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1335, file: !1336, line: 768, baseType: !265, size: 32, offset: 4416)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1335, file: !1336, line: 770, baseType: !265, size: 32, offset: 4448)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1335, file: !1336, line: 772, baseType: !248, size: 64, offset: 4480)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1335, file: !1336, line: 775, baseType: !7, size: 32, offset: 4544)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1335, file: !1336, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1335, file: !1336, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1335, file: !1336, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1335, file: !1336, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1335, file: !1336, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1335, file: !1336, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1335, file: !1336, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1335, file: !1336, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1335, file: !1336, line: 831, baseType: !248, size: 64, offset: 4672)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1335, file: !1336, line: 833, baseType: !1519, size: 384, offset: 4736)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1520)
!1520 = !{!1521, !1526}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1519, file: !25, line: 26, baseType: !1522, size: 64)
!1522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!398, !1525}
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, scope: !1519, file: !25, line: 27, baseType: !1527, size: 320, offset: 64)
!1527 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1519, file: !25, line: 27, size: 320, elements: !1528)
!1528 = !{!1529, !1538, !1565}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1527, file: !25, line: 36, baseType: !1530, size: 320)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1527, file: !25, line: 29, size: 320, elements: !1531)
!1531 = !{!1532, !1533, !1534, !1535, !1536, !1537}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1530, file: !25, line: 30, baseType: !278, size: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1530, file: !25, line: 31, baseType: !204, size: 32, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1530, file: !25, line: 32, baseType: !204, size: 32, offset: 96)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1530, file: !25, line: 33, baseType: !204, size: 32, offset: 128)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1530, file: !25, line: 34, baseType: !239, size: 64, offset: 192)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1530, file: !25, line: 35, baseType: !278, size: 64, offset: 256)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1527, file: !25, line: 46, baseType: !1539, size: 192)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1527, file: !25, line: 38, size: 192, elements: !1540)
!1540 = !{!1541, !1542, !1543, !1564}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1539, file: !25, line: 39, baseType: !1452, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1539, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, scope: !1539, file: !25, line: 41, baseType: !1544, size: 64, offset: 64)
!1544 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1539, file: !25, line: 41, size: 64, elements: !1545)
!1545 = !{!1546, !1554}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1544, file: !25, line: 42, baseType: !1547, size: 64)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1549, line: 7, size: 128, elements: !1550)
!1549 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1550 = !{!1551, !1553}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1548, file: !1549, line: 8, baseType: !1552, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !396, line: 93, baseType: !612)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1548, file: !1549, line: 9, baseType: !612, size: 64, offset: 64)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1544, file: !25, line: 43, baseType: !1555, size: 64)
!1555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1556, size: 64)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1557, line: 7, size: 64, elements: !1558)
!1557 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1558 = !{!1559, !1563}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1556, file: !1557, line: 8, baseType: !1560, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1557, line: 5, baseType: !1561)
!1561 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !205, line: 20, baseType: !1562)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !207, line: 26, baseType: !265)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1556, file: !1557, line: 9, baseType: !1561, size: 32, offset: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1539, file: !25, line: 45, baseType: !239, size: 64, offset: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1527, file: !25, line: 54, baseType: !1566, size: 256)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1527, file: !25, line: 48, size: 256, elements: !1567)
!1567 = !{!1568, !1571, !1572, !1573, !1574}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1566, file: !25, line: 49, baseType: !1569, size: 64)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1566, file: !25, line: 50, baseType: !265, size: 32, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1566, file: !25, line: 51, baseType: !265, size: 32, offset: 96)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1566, file: !25, line: 52, baseType: !248, size: 64, offset: 128)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1566, file: !25, line: 53, baseType: !248, size: 64, offset: 192)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1335, file: !1336, line: 835, baseType: !1576, size: 32, offset: 5120)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !215, line: 22, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !396, line: 28, baseType: !265)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1335, file: !1336, line: 836, baseType: !1576, size: 32, offset: 5152)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1335, file: !1336, line: 840, baseType: !248, size: 64, offset: 5184)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1335, file: !1336, line: 849, baseType: !1334, size: 64, offset: 5248)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1335, file: !1336, line: 852, baseType: !1334, size: 64, offset: 5312)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1335, file: !1336, line: 857, baseType: !214, size: 128, offset: 5376)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1335, file: !1336, line: 858, baseType: !214, size: 128, offset: 5504)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1335, file: !1336, line: 859, baseType: !1334, size: 64, offset: 5632)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1335, file: !1336, line: 867, baseType: !214, size: 128, offset: 5696)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1335, file: !1336, line: 868, baseType: !214, size: 128, offset: 5824)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1335, file: !1336, line: 871, baseType: !1588, size: 64, offset: 5952)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1590)
!1590 = !{!1591, !1592, !1593, !1594, !1596, !1597, !1604, !1605}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1589, file: !53, line: 61, baseType: !1348, size: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1589, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1589, file: !53, line: 63, baseType: !322, offset: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1589, file: !53, line: 65, baseType: !1595, size: 256, offset: 64)
!1595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !717, size: 256, elements: !253)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1589, file: !53, line: 66, baseType: !717, size: 64, offset: 320)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1589, file: !53, line: 68, baseType: !1598, size: 128, offset: 384)
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1599, line: 40, baseType: !1600)
!1599 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1599, line: 36, size: 128, elements: !1601)
!1601 = !{!1602, !1603}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1600, file: !1599, line: 37, baseType: !322)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1600, file: !1599, line: 38, baseType: !214, size: 128)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1589, file: !53, line: 69, baseType: !452, size: 128, align: 64, offset: 512)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1589, file: !53, line: 70, baseType: !1606, size: 128, offset: 640)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1607, size: 128, elements: !1489)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1608)
!1608 = !{!1609, !1610}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1607, file: !53, line: 55, baseType: !265, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1607, file: !53, line: 56, baseType: !1611, size: 64, offset: 64)
!1611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1612 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1335, file: !1336, line: 872, baseType: !1614, size: 512, offset: 6016)
!1614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !721, size: 512, elements: !253)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1335, file: !1336, line: 873, baseType: !214, size: 128, offset: 6528)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1335, file: !1336, line: 874, baseType: !214, size: 128, offset: 6656)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1335, file: !1336, line: 876, baseType: !1618, size: 64, offset: 6784)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1620, line: 26, size: 192, elements: !1621)
!1620 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1621 = !{!1622, !1623}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1619, file: !1620, line: 27, baseType: !7, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1619, file: !1620, line: 28, baseType: !1624, size: 128, offset: 64)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1625, line: 43, size: 128, elements: !1626)
!1625 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1626 = !{!1627, !1628}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1624, file: !1625, line: 44, baseType: !905)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1624, file: !1625, line: 45, baseType: !214, size: 128)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1335, file: !1336, line: 879, baseType: !787, size: 64, offset: 6848)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1335, file: !1336, line: 882, baseType: !787, size: 64, offset: 6912)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1335, file: !1336, line: 884, baseType: !239, size: 64, offset: 6976)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1335, file: !1336, line: 885, baseType: !239, size: 64, offset: 7040)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1335, file: !1336, line: 890, baseType: !239, size: 64, offset: 7104)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1335, file: !1336, line: 891, baseType: !1635, size: 128, offset: 7168)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1336, line: 242, size: 128, elements: !1636)
!1636 = !{!1637, !1638, !1639}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1635, file: !1336, line: 244, baseType: !239, size: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1635, file: !1336, line: 245, baseType: !239, size: 64, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1635, file: !1336, line: 246, baseType: !905, offset: 128)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1335, file: !1336, line: 900, baseType: !248, size: 64, offset: 7296)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1335, file: !1336, line: 901, baseType: !248, size: 64, offset: 7360)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1335, file: !1336, line: 904, baseType: !239, size: 64, offset: 7424)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1335, file: !1336, line: 907, baseType: !239, size: 64, offset: 7488)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1335, file: !1336, line: 910, baseType: !248, size: 64, offset: 7552)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1335, file: !1336, line: 911, baseType: !248, size: 64, offset: 7616)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1335, file: !1336, line: 914, baseType: !1647, size: 640, offset: 7680)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1648, line: 123, size: 640, elements: !1649)
!1648 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1649 = !{!1650, !1656, !1657}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1647, file: !1648, line: 124, baseType: !1651, size: 576)
!1651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1652, size: 576, elements: !364)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1648, line: 108, size: 192, elements: !1653)
!1653 = !{!1654, !1655}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1652, file: !1648, line: 109, baseType: !239, size: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1652, file: !1648, line: 110, baseType: !1461, size: 128, offset: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1647, file: !1648, line: 125, baseType: !7, size: 32, offset: 576)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1647, file: !1648, line: 126, baseType: !7, size: 32, offset: 608)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1335, file: !1336, line: 917, baseType: !1659, size: 192, offset: 8320)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1648, line: 134, size: 192, elements: !1660)
!1660 = !{!1661, !1662}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1659, file: !1648, line: 135, baseType: !452, size: 128, align: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1659, file: !1648, line: 136, baseType: !7, size: 32, offset: 128)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1335, file: !1336, line: 923, baseType: !1664, size: 64, offset: 8512)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1666)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1667, line: 111, size: 1280, elements: !1668)
!1667 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1668 = !{!1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1688, !1689, !1690, !1691, !1692, !1693, !1800, !1801, !1802, !1803, !1829, !1832, !1842}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1666, file: !1667, line: 112, baseType: !879, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1666, file: !1667, line: 120, baseType: !514, size: 32, offset: 32)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1666, file: !1667, line: 121, baseType: !522, size: 32, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1666, file: !1667, line: 122, baseType: !514, size: 32, offset: 96)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1666, file: !1667, line: 123, baseType: !522, size: 32, offset: 128)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1666, file: !1667, line: 124, baseType: !514, size: 32, offset: 160)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1666, file: !1667, line: 125, baseType: !522, size: 32, offset: 192)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1666, file: !1667, line: 126, baseType: !514, size: 32, offset: 224)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1666, file: !1667, line: 127, baseType: !522, size: 32, offset: 256)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1666, file: !1667, line: 128, baseType: !7, size: 32, offset: 288)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1666, file: !1667, line: 129, baseType: !1680, size: 64, offset: 320)
!1680 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1681, line: 26, baseType: !1682)
!1681 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1681, line: 24, size: 64, elements: !1683)
!1683 = !{!1684}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1682, file: !1681, line: 25, baseType: !1685, size: 64)
!1685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !206, size: 64, elements: !1686)
!1686 = !{!1687}
!1687 = !DISubrange(count: 2)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1666, file: !1667, line: 130, baseType: !1680, size: 64, offset: 384)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1666, file: !1667, line: 131, baseType: !1680, size: 64, offset: 448)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1666, file: !1667, line: 132, baseType: !1680, size: 64, offset: 512)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1666, file: !1667, line: 133, baseType: !1680, size: 64, offset: 576)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1666, file: !1667, line: 135, baseType: !292, size: 8, offset: 640)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1666, file: !1667, line: 137, baseType: !1694, size: 64, offset: 704)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1696, line: 189, size: 1664, elements: !1697)
!1696 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1697 = !{!1698, !1699, !1702, !1707, !1708, !1711, !1712, !1717, !1718, !1719, !1720, !1722, !1723, !1724, !1725, !1726, !1764, !1785}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1695, file: !1696, line: 190, baseType: !1348, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1695, file: !1696, line: 191, baseType: !1700, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1696, line: 28, baseType: !1701)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !215, line: 98, baseType: !1561)
!1702 = !DIDerivedType(tag: DW_TAG_member, scope: !1695, file: !1696, line: 192, baseType: !1703, size: 192, offset: 64)
!1703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1695, file: !1696, line: 192, size: 192, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1703, file: !1696, line: 193, baseType: !214, size: 128)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1703, file: !1696, line: 194, baseType: !892, size: 192, align: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1695, file: !1696, line: 199, baseType: !899, size: 256, offset: 256)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1695, file: !1696, line: 200, baseType: !1709, size: 64, offset: 512)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1696, line: 200, flags: DIFlagFwdDecl)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1695, file: !1696, line: 201, baseType: !208, size: 64, offset: 576)
!1712 = !DIDerivedType(tag: DW_TAG_member, scope: !1695, file: !1696, line: 202, baseType: !1713, size: 64, offset: 640)
!1713 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1695, file: !1696, line: 202, size: 64, elements: !1714)
!1714 = !{!1715, !1716}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1713, file: !1696, line: 203, baseType: !618, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1713, file: !1696, line: 204, baseType: !618, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1695, file: !1696, line: 206, baseType: !618, size: 64, offset: 704)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1695, file: !1696, line: 207, baseType: !514, size: 32, offset: 768)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1695, file: !1696, line: 208, baseType: !522, size: 32, offset: 800)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1695, file: !1696, line: 209, baseType: !1721, size: 32, offset: 832)
!1721 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1696, line: 31, baseType: !638)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1695, file: !1696, line: 210, baseType: !301, size: 16, offset: 864)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1695, file: !1696, line: 211, baseType: !301, size: 16, offset: 880)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1695, file: !1696, line: 215, baseType: !1323, size: 16, offset: 896)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1695, file: !1696, line: 222, baseType: !248, size: 64, offset: 960)
!1726 = !DIDerivedType(tag: DW_TAG_member, scope: !1695, file: !1696, line: 239, baseType: !1727, size: 320, offset: 1024)
!1727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1695, file: !1696, line: 239, size: 320, elements: !1728)
!1728 = !{!1729, !1756}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1727, file: !1696, line: 240, baseType: !1730, size: 320)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1696, line: 108, size: 320, elements: !1731)
!1731 = !{!1732, !1733, !1745, !1748, !1755}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1730, file: !1696, line: 110, baseType: !248, size: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, scope: !1730, file: !1696, line: 111, baseType: !1734, size: 64, offset: 64)
!1734 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1730, file: !1696, line: 111, size: 64, elements: !1735)
!1735 = !{!1736, !1744}
!1736 = !DIDerivedType(tag: DW_TAG_member, scope: !1734, file: !1696, line: 112, baseType: !1737, size: 64)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1734, file: !1696, line: 112, size: 64, elements: !1738)
!1738 = !{!1739, !1740}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1737, file: !1696, line: 114, baseType: !984, size: 16)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1737, file: !1696, line: 115, baseType: !1741, size: 48, offset: 16)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 48, elements: !1742)
!1742 = !{!1743}
!1743 = !DISubrange(count: 6)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1734, file: !1696, line: 121, baseType: !248, size: 64)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1730, file: !1696, line: 123, baseType: !1746, size: 64, offset: 128)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1747 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1696, line: 96, flags: DIFlagFwdDecl)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1730, file: !1696, line: 124, baseType: !1749, size: 64, offset: 192)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1750, size: 64)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1696, line: 102, size: 192, elements: !1751)
!1751 = !{!1752, !1753, !1754}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1750, file: !1696, line: 103, baseType: !452, size: 128, align: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1750, file: !1696, line: 104, baseType: !1348, size: 32, offset: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1750, file: !1696, line: 105, baseType: !569, size: 8, offset: 160)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1730, file: !1696, line: 125, baseType: !244, size: 64, offset: 256)
!1756 = !DIDerivedType(tag: DW_TAG_member, scope: !1727, file: !1696, line: 241, baseType: !1757, size: 320)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1727, file: !1696, line: 241, size: 320, elements: !1758)
!1758 = !{!1759, !1760, !1761, !1762, !1763}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1757, file: !1696, line: 242, baseType: !248, size: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1757, file: !1696, line: 243, baseType: !248, size: 64, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1757, file: !1696, line: 244, baseType: !1746, size: 64, offset: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1757, file: !1696, line: 245, baseType: !1749, size: 64, offset: 192)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1757, file: !1696, line: 246, baseType: !363, size: 64, offset: 256)
!1764 = !DIDerivedType(tag: DW_TAG_member, scope: !1695, file: !1696, line: 254, baseType: !1765, size: 256, offset: 1344)
!1765 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1695, file: !1696, line: 254, size: 256, elements: !1766)
!1766 = !{!1767, !1773}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1765, file: !1696, line: 255, baseType: !1768, size: 256)
!1768 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1696, line: 128, size: 256, elements: !1769)
!1769 = !{!1770, !1771}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1768, file: !1696, line: 129, baseType: !208, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1768, file: !1696, line: 130, baseType: !1772, size: 256)
!1772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 256, elements: !253)
!1773 = !DIDerivedType(tag: DW_TAG_member, scope: !1765, file: !1696, line: 256, baseType: !1774, size: 256)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1765, file: !1696, line: 256, size: 256, elements: !1775)
!1775 = !{!1776, !1777}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1774, file: !1696, line: 258, baseType: !214, size: 128)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1774, file: !1696, line: 259, baseType: !1778, size: 128, offset: 128)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1779, line: 22, size: 128, elements: !1780)
!1779 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1780 = !{!1781, !1784}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1778, file: !1779, line: 23, baseType: !1782, size: 64)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64)
!1783 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1779, line: 23, flags: DIFlagFwdDecl)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1778, file: !1779, line: 24, baseType: !248, size: 64, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1695, file: !1696, line: 274, baseType: !1786, size: 64, offset: 1600)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 64)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1696, line: 170, size: 192, elements: !1788)
!1788 = !{!1789, !1798, !1799}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1787, file: !1696, line: 171, baseType: !1790, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1696, line: 165, baseType: !1791)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{!265, !1694, !1794, !1796, !1694}
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1747)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1768)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1787, file: !1696, line: 172, baseType: !1694, size: 64, offset: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1787, file: !1696, line: 173, baseType: !1746, size: 64, offset: 128)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1666, file: !1667, line: 138, baseType: !1694, size: 64, offset: 768)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1666, file: !1667, line: 139, baseType: !1694, size: 64, offset: 832)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1666, file: !1667, line: 140, baseType: !1694, size: 64, offset: 896)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1666, file: !1667, line: 145, baseType: !1804, size: 64, offset: 960)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1806, line: 13, size: 896, elements: !1807)
!1806 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1807 = !{!1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1805, file: !1806, line: 14, baseType: !1348, size: 32)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1805, file: !1806, line: 15, baseType: !879, size: 32, offset: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1805, file: !1806, line: 16, baseType: !879, size: 32, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1805, file: !1806, line: 21, baseType: !809, size: 64, offset: 128)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1805, file: !1806, line: 27, baseType: !248, size: 64, offset: 192)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1805, file: !1806, line: 28, baseType: !248, size: 64, offset: 256)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1805, file: !1806, line: 29, baseType: !809, size: 64, offset: 320)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1805, file: !1806, line: 32, baseType: !721, size: 128, offset: 384)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1805, file: !1806, line: 33, baseType: !514, size: 32, offset: 512)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1805, file: !1806, line: 37, baseType: !809, size: 64, offset: 576)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1805, file: !1806, line: 44, baseType: !1819, size: 256, offset: 640)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1820, line: 15, size: 256, elements: !1821)
!1820 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1821 = !{!1822, !1823, !1824, !1825, !1826, !1827, !1828}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1819, file: !1820, line: 16, baseType: !905)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1819, file: !1820, line: 18, baseType: !265, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1819, file: !1820, line: 19, baseType: !265, size: 32, offset: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1819, file: !1820, line: 20, baseType: !265, size: 32, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1819, file: !1820, line: 21, baseType: !265, size: 32, offset: 96)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1819, file: !1820, line: 22, baseType: !248, size: 64, offset: 128)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1819, file: !1820, line: 23, baseType: !248, size: 64, offset: 192)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1666, file: !1667, line: 146, baseType: !1830, size: 64, offset: 1024)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !854, line: 516, flags: DIFlagFwdDecl)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1666, file: !1667, line: 147, baseType: !1833, size: 64, offset: 1088)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1667, line: 25, size: 64, elements: !1835)
!1835 = !{!1836, !1837, !1838}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1834, file: !1667, line: 26, baseType: !879, size: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1834, file: !1667, line: 27, baseType: !265, size: 32, offset: 32)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1834, file: !1667, line: 28, baseType: !1839, offset: 64)
!1839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !522, elements: !1840)
!1840 = !{!1841}
!1841 = !DISubrange(count: 0)
!1842 = !DIDerivedType(tag: DW_TAG_member, scope: !1666, file: !1667, line: 149, baseType: !1843, size: 128, offset: 1152)
!1843 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1666, file: !1667, line: 149, size: 128, elements: !1844)
!1844 = !{!1845, !1846}
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1843, file: !1667, line: 150, baseType: !265, size: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1843, file: !1667, line: 151, baseType: !452, size: 128, align: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1335, file: !1336, line: 926, baseType: !1664, size: 64, offset: 8576)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1335, file: !1336, line: 929, baseType: !1664, size: 64, offset: 8640)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1335, file: !1336, line: 933, baseType: !1694, size: 64, offset: 8704)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1335, file: !1336, line: 943, baseType: !1851, size: 128, offset: 8768)
!1851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 128, elements: !1852)
!1852 = !{!1853}
!1853 = !DISubrange(count: 16)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1335, file: !1336, line: 945, baseType: !1855, size: 64, offset: 8896)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1336, line: 49, flags: DIFlagFwdDecl)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1335, file: !1336, line: 956, baseType: !1858, size: 64, offset: 8960)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64)
!1859 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1336, line: 45, flags: DIFlagFwdDecl)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1335, file: !1336, line: 959, baseType: !1861, size: 64, offset: 9024)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1336, line: 959, flags: DIFlagFwdDecl)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1335, file: !1336, line: 962, baseType: !1864, size: 64, offset: 9088)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1336, line: 66, flags: DIFlagFwdDecl)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1335, file: !1336, line: 966, baseType: !1867, size: 64, offset: 9152)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1336, line: 50, flags: DIFlagFwdDecl)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1335, file: !1336, line: 969, baseType: !1870, size: 64, offset: 9216)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1872, line: 82, size: 7296, elements: !1873)
!1872 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1873 = !{!1874, !1875, !1876, !1877, !1878, !1879, !1880, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1909, !1918, !1919, !1921, !1922, !1923, !2540, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2570, !2571, !2578, !2579, !2580, !2581, !2582, !2583}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1871, file: !1872, line: 83, baseType: !1348, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1871, file: !1872, line: 84, baseType: !879, size: 32, offset: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1871, file: !1872, line: 85, baseType: !265, size: 32, offset: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1871, file: !1872, line: 86, baseType: !214, size: 128, offset: 128)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1871, file: !1872, line: 88, baseType: !1598, size: 128, offset: 256)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1871, file: !1872, line: 91, baseType: !1334, size: 64, offset: 384)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1871, file: !1872, line: 94, baseType: !1881, size: 192, offset: 448)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1882, line: 30, size: 192, elements: !1883)
!1882 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1883 = !{!1884, !1885}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1881, file: !1882, line: 31, baseType: !214, size: 128)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1881, file: !1882, line: 32, baseType: !1886, size: 64, offset: 128)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1887, line: 25, baseType: !1888)
!1887 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1887, line: 23, size: 64, elements: !1889)
!1889 = !{!1890}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1888, file: !1887, line: 24, baseType: !1488, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1871, file: !1872, line: 97, baseType: !717, size: 64, offset: 640)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1871, file: !1872, line: 100, baseType: !265, size: 32, offset: 704)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1871, file: !1872, line: 106, baseType: !265, size: 32, offset: 736)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1871, file: !1872, line: 107, baseType: !1334, size: 64, offset: 768)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1871, file: !1872, line: 110, baseType: !265, size: 32, offset: 832)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1871, file: !1872, line: 111, baseType: !7, size: 32, offset: 864)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1871, file: !1872, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1871, file: !1872, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1871, file: !1872, line: 128, baseType: !265, size: 32, offset: 928)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1871, file: !1872, line: 129, baseType: !214, size: 128, offset: 960)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1871, file: !1872, line: 132, baseType: !1410, size: 512, offset: 1088)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1871, file: !1872, line: 133, baseType: !1418, size: 64, offset: 1600)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1871, file: !1872, line: 140, baseType: !1904, size: 256, offset: 1664)
!1904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1905, size: 256, elements: !1686)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1872, line: 38, size: 128, elements: !1906)
!1906 = !{!1907, !1908}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1905, file: !1872, line: 39, baseType: !239, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1905, file: !1872, line: 40, baseType: !239, size: 64, offset: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1871, file: !1872, line: 146, baseType: !1910, size: 192, offset: 1920)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1872, line: 66, size: 192, elements: !1911)
!1911 = !{!1912}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1910, file: !1872, line: 67, baseType: !1913, size: 192)
!1913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1872, line: 47, size: 192, elements: !1914)
!1914 = !{!1915, !1916, !1917}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1913, file: !1872, line: 48, baseType: !811, size: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1913, file: !1872, line: 49, baseType: !811, size: 64, offset: 64)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1913, file: !1872, line: 50, baseType: !811, size: 64, offset: 128)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1871, file: !1872, line: 150, baseType: !1647, size: 640, offset: 2112)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1871, file: !1872, line: 153, baseType: !1920, size: 256, offset: 2752)
!1920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1588, size: 256, elements: !253)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1871, file: !1872, line: 159, baseType: !1588, size: 64, offset: 3008)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1871, file: !1872, line: 162, baseType: !265, size: 32, offset: 3072)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1871, file: !1872, line: 164, baseType: !1924, size: 64, offset: 3136)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1926, line: 285, size: 5056, elements: !1927)
!1926 = !DIFile(filename: "./include/linux/tty.h", directory: "/home/lizy2001/genbc/linux")
!1927 = !{!1928, !1929, !1934, !1935, !2439, !2440, !2441, !2450, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1925, file: !1926, line: 286, baseType: !265, size: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1925, file: !1926, line: 287, baseType: !1930, size: 32, offset: 32)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1931, line: 19, size: 32, elements: !1932)
!1931 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1932 = !{!1933}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1930, file: !1931, line: 20, baseType: !1348, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1925, file: !1926, line: 288, baseType: !305, size: 64, offset: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1925, file: !1926, line: 289, baseType: !1936, size: 64, offset: 128)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_driver", file: !1938, line: 302, size: 1472, elements: !1939)
!1938 = !DIFile(filename: "./include/linux/tty_driver.h", directory: "/home/lizy2001/genbc/linux")
!1939 = !{!1940, !1941, !1942, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2204, !2205, !2206, !2207, !2209, !2309, !2312, !2313, !2438}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1937, file: !1938, line: 303, baseType: !265, size: 32)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1937, file: !1938, line: 304, baseType: !1930, size: 32, offset: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "cdevs", scope: !1937, file: !1938, line: 305, baseType: !1943, size: 64, offset: 64)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !1946, line: 14, size: 832, elements: !1947)
!1946 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!1947 = !{!1948, !1949, !1950, !2174, !2175, !2176}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1945, file: !1946, line: 15, baseType: !309, size: 512)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1945, file: !1946, line: 16, baseType: !712, size: 64, offset: 512)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1945, file: !1946, line: 17, baseType: !1951, size: 64, offset: 576)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1953)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !1954)
!1954 = !{!1955, !1956, !1960, !1964, !1968, !1969, !1970, !1974, !1987, !1988, !1996, !2000, !2001, !2005, !2006, !2010, !2015, !2016, !2020, !2024, !2132, !2136, !2137, !2141, !2142, !2148, !2152, !2157, !2161, !2165, !2169, !2173}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1953, file: !44, line: 1823, baseType: !712, size: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1953, file: !44, line: 1824, baseType: !1957, size: 64, offset: 64)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{!610, !439, !610, !265}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1953, file: !44, line: 1825, baseType: !1961, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1962, size: 64)
!1962 = !DISubroutineType(types: !1963)
!1963 = !{!394, !439, !363, !409, !827}
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1953, file: !44, line: 1826, baseType: !1965, size: 64, offset: 192)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1966 = !DISubroutineType(types: !1967)
!1967 = !{!394, !439, !244, !409, !827}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1953, file: !44, line: 1827, baseType: !969, size: 64, offset: 256)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1953, file: !44, line: 1828, baseType: !969, size: 64, offset: 320)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1953, file: !44, line: 1829, baseType: !1971, size: 64, offset: 384)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!1972 = !DISubroutineType(types: !1973)
!1973 = !{!265, !972, !569}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1953, file: !44, line: 1830, baseType: !1975, size: 64, offset: 448)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64)
!1976 = !DISubroutineType(types: !1977)
!1977 = !{!265, !439, !1978}
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !1980)
!1980 = !{!1981, !1986}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1979, file: !44, line: 1777, baseType: !1982, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !1983)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{!265, !1978, !244, !265, !610, !239, !7}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1979, file: !44, line: 1778, baseType: !610, size: 64, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1953, file: !44, line: 1831, baseType: !1975, size: 64, offset: 512)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1953, file: !44, line: 1832, baseType: !1989, size: 64, offset: 576)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{!1992, !439, !1994}
!1992 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !1993, line: 52, baseType: !7)
!1993 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !698, line: 27, flags: DIFlagFwdDecl)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1953, file: !44, line: 1833, baseType: !1997, size: 64, offset: 640)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{!398, !439, !7, !248}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1953, file: !44, line: 1834, baseType: !1997, size: 64, offset: 704)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1953, file: !44, line: 1835, baseType: !2002, size: 64, offset: 768)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = !DISubroutineType(types: !2004)
!2004 = !{!265, !439, !1107}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1953, file: !44, line: 1836, baseType: !248, size: 64, offset: 832)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1953, file: !44, line: 1837, baseType: !2007, size: 64, offset: 896)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!2008 = !DISubroutineType(types: !2009)
!2009 = !{!265, !508, !439}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1953, file: !44, line: 1838, baseType: !2011, size: 64, offset: 960)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!2012 = !DISubroutineType(types: !2013)
!2013 = !{!265, !439, !2014}
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !208)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1953, file: !44, line: 1839, baseType: !2007, size: 64, offset: 1024)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1953, file: !44, line: 1840, baseType: !2017, size: 64, offset: 1088)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = !DISubroutineType(types: !2019)
!2019 = !{!265, !439, !610, !610, !265}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1953, file: !44, line: 1841, baseType: !2021, size: 64, offset: 1152)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!265, !265, !439, !265}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1953, file: !44, line: 1842, baseType: !2025, size: 64, offset: 1216)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = !DISubroutineType(types: !2027)
!2027 = !{!265, !439, !265, !2028}
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !2030)
!2030 = !{!2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2062, !2063, !2064, !2077, !2108}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2029, file: !44, line: 1063, baseType: !2028, size: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2029, file: !44, line: 1064, baseType: !214, size: 128, offset: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2029, file: !44, line: 1065, baseType: !721, size: 128, offset: 192)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2029, file: !44, line: 1066, baseType: !214, size: 128, offset: 320)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2029, file: !44, line: 1069, baseType: !214, size: 128, offset: 448)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2029, file: !44, line: 1072, baseType: !2014, size: 64, offset: 576)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2029, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2029, file: !44, line: 1074, baseType: !292, size: 8, offset: 672)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2029, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2029, file: !44, line: 1076, baseType: !265, size: 32, offset: 736)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2029, file: !44, line: 1077, baseType: !1598, size: 128, offset: 768)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2029, file: !44, line: 1078, baseType: !439, size: 64, offset: 896)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2029, file: !44, line: 1079, baseType: !610, size: 64, offset: 960)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2029, file: !44, line: 1080, baseType: !610, size: 64, offset: 1024)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2029, file: !44, line: 1082, baseType: !2046, size: 64, offset: 1088)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !2048)
!2048 = !{!2049, !2057, !2058, !2059, !2060, !2061}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2047, file: !44, line: 1315, baseType: !2050)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2051, line: 20, baseType: !2052)
!2051 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2051, line: 11, elements: !2053)
!2053 = !{!2054}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2052, file: !2051, line: 12, baseType: !2055)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !334, line: 33, baseType: !2056)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !334, line: 31, elements: !336)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2047, file: !44, line: 1316, baseType: !265, size: 32)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2047, file: !44, line: 1317, baseType: !265, size: 32, offset: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2047, file: !44, line: 1318, baseType: !2046, size: 64, offset: 64)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2047, file: !44, line: 1319, baseType: !439, size: 64, offset: 128)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2047, file: !44, line: 1320, baseType: !452, size: 128, align: 64, offset: 192)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2029, file: !44, line: 1084, baseType: !248, size: 64, offset: 1152)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2029, file: !44, line: 1085, baseType: !248, size: 64, offset: 1216)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2029, file: !44, line: 1087, baseType: !2065, size: 64, offset: 1280)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64)
!2066 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2067)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !2068)
!2068 = !{!2069, !2073}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2067, file: !44, line: 1012, baseType: !2070, size: 64)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2071 = !DISubroutineType(types: !2072)
!2072 = !{null, !2028, !2028}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2067, file: !44, line: 1013, baseType: !2074, size: 64, offset: 64)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64)
!2075 = !DISubroutineType(types: !2076)
!2076 = !{null, !2028}
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2029, file: !44, line: 1088, baseType: !2078, size: 64, offset: 1344)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2080)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !2081)
!2081 = !{!2082, !2086, !2090, !2091, !2095, !2099, !2103, !2107}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2080, file: !44, line: 1017, baseType: !2083, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{!2014, !2014}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2080, file: !44, line: 1018, baseType: !2087, size: 64, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{null, !2014}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2080, file: !44, line: 1019, baseType: !2074, size: 64, offset: 128)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2080, file: !44, line: 1020, baseType: !2092, size: 64, offset: 192)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = !DISubroutineType(types: !2094)
!2094 = !{!265, !2028, !265}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2080, file: !44, line: 1021, baseType: !2096, size: 64, offset: 256)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 64)
!2097 = !DISubroutineType(types: !2098)
!2098 = !{!569, !2028}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2080, file: !44, line: 1022, baseType: !2100, size: 64, offset: 320)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!265, !2028, !265, !218}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2080, file: !44, line: 1023, baseType: !2104, size: 64, offset: 384)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = !DISubroutineType(types: !2106)
!2106 = !{null, !2028, !946}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2080, file: !44, line: 1024, baseType: !2096, size: 64, offset: 448)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2029, file: !44, line: 1097, baseType: !2109, size: 256, offset: 1408)
!2109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !44, line: 1089, size: 256, elements: !2110)
!2110 = !{!2111, !2120, !2126}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2109, file: !44, line: 1090, baseType: !2112, size: 256)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2113, line: 10, size: 256, elements: !2114)
!2113 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2114 = !{!2115, !2116, !2119}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2112, file: !2113, line: 11, baseType: !204, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2112, file: !2113, line: 12, baseType: !2117, size: 64, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2118 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2113, line: 5, flags: DIFlagFwdDecl)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2112, file: !2113, line: 13, baseType: !214, size: 128, offset: 128)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2109, file: !44, line: 1091, baseType: !2121, size: 64)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2113, line: 17, size: 64, elements: !2122)
!2122 = !{!2123}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2121, file: !2113, line: 18, baseType: !2124, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2113, line: 16, flags: DIFlagFwdDecl)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2109, file: !44, line: 1096, baseType: !2127, size: 192)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2109, file: !44, line: 1092, size: 192, elements: !2128)
!2128 = !{!2129, !2130, !2131}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !2127, file: !44, line: 1093, baseType: !214, size: 128)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2127, file: !44, line: 1094, baseType: !265, size: 32, offset: 128)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !2127, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1953, file: !44, line: 1843, baseType: !2133, size: 64, offset: 1280)
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!2134 = !DISubroutineType(types: !2135)
!2135 = !{!394, !439, !852, !265, !409, !827, !265}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1953, file: !44, line: 1844, baseType: !1227, size: 64, offset: 1344)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1953, file: !44, line: 1845, baseType: !2138, size: 64, offset: 1408)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!265, !265}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1953, file: !44, line: 1846, baseType: !2025, size: 64, offset: 1472)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1953, file: !44, line: 1847, baseType: !2143, size: 64, offset: 1536)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!394, !2146, !439, !827, !409, !7}
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1336, line: 53, flags: DIFlagFwdDecl)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1953, file: !44, line: 1848, baseType: !2149, size: 64, offset: 1600)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = !DISubroutineType(types: !2151)
!2151 = !{!394, !439, !827, !2146, !409, !7}
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1953, file: !44, line: 1849, baseType: !2153, size: 64, offset: 1664)
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = !DISubroutineType(types: !2155)
!2155 = !{!265, !439, !398, !2156, !946}
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1953, file: !44, line: 1850, baseType: !2158, size: 64, offset: 1728)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DISubroutineType(types: !2160)
!2160 = !{!398, !439, !265, !610, !610}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1953, file: !44, line: 1852, baseType: !2162, size: 64, offset: 1792)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = !DISubroutineType(types: !2164)
!2164 = !{null, !793, !439}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1953, file: !44, line: 1856, baseType: !2166, size: 64, offset: 1856)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{!394, !439, !610, !439, !610, !409, !7}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1953, file: !44, line: 1858, baseType: !2170, size: 64, offset: 1920)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2171 = !DISubroutineType(types: !2172)
!2172 = !{!610, !439, !610, !439, !610, !610, !7}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1953, file: !44, line: 1861, baseType: !2017, size: 64, offset: 1984)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1945, file: !1946, line: 18, baseType: !214, size: 128, offset: 640)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1945, file: !1946, line: 19, baseType: !592, size: 32, offset: 768)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1945, file: !1946, line: 20, baseType: !7, size: 32, offset: 800)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1937, file: !1938, line: 306, baseType: !712, size: 64, offset: 128)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !1937, file: !1938, line: 307, baseType: !244, size: 64, offset: 192)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1937, file: !1938, line: 308, baseType: !244, size: 64, offset: 256)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "name_base", scope: !1937, file: !1938, line: 309, baseType: !265, size: 32, offset: 320)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !1937, file: !1938, line: 310, baseType: !265, size: 32, offset: 352)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "minor_start", scope: !1937, file: !1938, line: 311, baseType: !265, size: 32, offset: 384)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1937, file: !1938, line: 312, baseType: !7, size: 32, offset: 416)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1937, file: !1938, line: 313, baseType: !1323, size: 16, offset: 448)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1937, file: !1938, line: 314, baseType: !1323, size: 16, offset: 464)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "init_termios", scope: !1937, file: !1938, line: 315, baseType: !2187, size: 352, offset: 480)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ktermios", file: !2188, line: 32, size: 352, elements: !2189)
!2188 = !DIFile(filename: "./include/uapi/asm-generic/termbits.h", directory: "/home/lizy2001/genbc/linux")
!2189 = !{!2190, !2192, !2193, !2194, !2195, !2197, !2201, !2203}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "c_iflag", scope: !2187, file: !2188, line: 33, baseType: !2191, size: 32)
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "tcflag_t", file: !2188, line: 9, baseType: !7)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "c_oflag", scope: !2187, file: !2188, line: 34, baseType: !2191, size: 32, offset: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "c_cflag", scope: !2187, file: !2188, line: 35, baseType: !2191, size: 32, offset: 64)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "c_lflag", scope: !2187, file: !2188, line: 36, baseType: !2191, size: 32, offset: 96)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "c_line", scope: !2187, file: !2188, line: 37, baseType: !2196, size: 8, offset: 128)
!2196 = !DIDerivedType(tag: DW_TAG_typedef, name: "cc_t", file: !2188, line: 7, baseType: !292)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "c_cc", scope: !2187, file: !2188, line: 38, baseType: !2198, size: 152, offset: 136)
!2198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2196, size: 152, elements: !2199)
!2199 = !{!2200}
!2200 = !DISubrange(count: 19)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "c_ispeed", scope: !2187, file: !2188, line: 39, baseType: !2202, size: 32, offset: 288)
!2202 = !DIDerivedType(tag: DW_TAG_typedef, name: "speed_t", file: !2188, line: 8, baseType: !7)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "c_ospeed", scope: !2187, file: !2188, line: 40, baseType: !2202, size: 32, offset: 320)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1937, file: !1938, line: 316, baseType: !248, size: 64, offset: 832)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "proc_entry", scope: !1937, file: !1938, line: 317, baseType: !288, size: 64, offset: 896)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1937, file: !1938, line: 318, baseType: !1936, size: 64, offset: 960)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "ttys", scope: !1937, file: !1938, line: 323, baseType: !2208, size: 64, offset: 1024)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !1937, file: !1938, line: 324, baseType: !2210, size: 64, offset: 1088)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2212, size: 64)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port", file: !1926, line: 230, size: 2432, elements: !2213)
!2213 = !{!2214, !2257, !2258, !2259, !2281, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2304, !2305, !2306, !2307, !2308}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2212, file: !1926, line: 231, baseType: !2215, size: 1024)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_bufhead", file: !1926, line: 85, size: 1024, elements: !2216)
!2216 = !{!2217, !2235, !2247, !2248, !2249, !2250, !2254, !2255, !2256}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2215, file: !1926, line: 86, baseType: !2218, size: 64)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_buffer", file: !1926, line: 58, size: 256, elements: !2220)
!2220 = !{!2221, !2226, !2227, !2228, !2229, !2230, !2231}
!2221 = !DIDerivedType(tag: DW_TAG_member, scope: !2219, file: !1926, line: 59, baseType: !2222, size: 64)
!2222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2219, file: !1926, line: 59, size: 64, elements: !2223)
!2223 = !{!2224, !2225}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2222, file: !1926, line: 60, baseType: !2218, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2222, file: !1926, line: 61, baseType: !446, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2219, file: !1926, line: 63, baseType: !265, size: 32, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2219, file: !1926, line: 64, baseType: !265, size: 32, offset: 96)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !2219, file: !1926, line: 65, baseType: !265, size: 32, offset: 128)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2219, file: !1926, line: 66, baseType: !265, size: 32, offset: 160)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2219, file: !1926, line: 67, baseType: !265, size: 32, offset: 192)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2219, file: !1926, line: 69, baseType: !2232, offset: 256)
!2232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, elements: !2233)
!2233 = !{!2234}
!2234 = !DISubrange(count: -1)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2215, file: !1926, line: 87, baseType: !2236, size: 256, offset: 64)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2237, line: 102, size: 256, elements: !2238)
!2237 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2238 = !{!2239, !2240, !2241}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2236, file: !2237, line: 103, baseType: !809, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2236, file: !2237, line: 104, baseType: !214, size: 128, offset: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2236, file: !2237, line: 105, baseType: !2242, size: 64, offset: 192)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2237, line: 21, baseType: !2243)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = !DISubroutineType(types: !2245)
!2245 = !{null, !2246}
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2215, file: !1926, line: 88, baseType: !805, size: 192, offset: 320)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2215, file: !1926, line: 89, baseType: !879, size: 32, offset: 512)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "sentinel", scope: !2215, file: !1926, line: 90, baseType: !2219, size: 256, offset: 576)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2215, file: !1926, line: 91, baseType: !2251, size: 64, offset: 832)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !447, line: 54, size: 64, elements: !2252)
!2252 = !{!2253}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2251, file: !447, line: 55, baseType: !450, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "mem_used", scope: !2215, file: !1926, line: 92, baseType: !879, size: 32, offset: 896)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "mem_limit", scope: !2215, file: !1926, line: 93, baseType: !265, size: 32, offset: 928)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2215, file: !1926, line: 94, baseType: !2218, size: 64, offset: 960)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2212, file: !1926, line: 232, baseType: !1924, size: 64, offset: 1024)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "itty", scope: !2212, file: !1926, line: 233, baseType: !1924, size: 64, offset: 1088)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2212, file: !1926, line: 234, baseType: !2260, size: 64, offset: 1152)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2262)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_operations", file: !1926, line: 205, size: 320, elements: !2263)
!2263 = !{!2264, !2268, !2272, !2276, !2280}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_raised", scope: !2262, file: !1926, line: 207, baseType: !2265, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2266, size: 64)
!2266 = !DISubroutineType(types: !2267)
!2267 = !{!265, !2211}
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "dtr_rts", scope: !2262, file: !1926, line: 209, baseType: !2269, size: 64, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{null, !2211, !265}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2262, file: !1926, line: 213, baseType: !2273, size: 64, offset: 128)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = !DISubroutineType(types: !2275)
!2275 = !{null, !2211}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !2262, file: !1926, line: 218, baseType: !2277, size: 64, offset: 192)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = !DISubroutineType(types: !2279)
!2279 = !{!265, !2211, !1924}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "destruct", scope: !2262, file: !1926, line: 220, baseType: !2273, size: 64, offset: 256)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "client_ops", scope: !2212, file: !1926, line: 235, baseType: !2282, size: 64, offset: 1216)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2284)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_port_client_operations", file: !1926, line: 223, size: 128, elements: !2285)
!2285 = !{!2286, !2290}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !2284, file: !1926, line: 224, baseType: !2287, size: 64)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{!265, !2211, !505, !505, !409}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !2284, file: !1926, line: 225, baseType: !2273, size: 64, offset: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2212, file: !1926, line: 236, baseType: !322, offset: 1280)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "blocked_open", scope: !2212, file: !1926, line: 237, baseType: !265, size: 32, offset: 1280)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2212, file: !1926, line: 238, baseType: !265, size: 32, offset: 1312)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "open_wait", scope: !2212, file: !1926, line: 239, baseType: !1598, size: 128, offset: 1344)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "delta_msr_wait", scope: !2212, file: !1926, line: 240, baseType: !1598, size: 128, offset: 1472)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2212, file: !1926, line: 241, baseType: !248, size: 64, offset: 1600)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "iflags", scope: !2212, file: !1926, line: 242, baseType: !248, size: 64, offset: 1664)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "console", scope: !2212, file: !1926, line: 243, baseType: !292, size: 1, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "low_latency", scope: !2212, file: !1926, line: 244, baseType: !292, size: 1, offset: 1729, flags: DIFlagBitField, extraData: i64 1728)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2212, file: !1926, line: 245, baseType: !805, size: 192, offset: 1792)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "buf_mutex", scope: !2212, file: !1926, line: 246, baseType: !805, size: 192, offset: 1984)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_buf", scope: !2212, file: !1926, line: 247, baseType: !2303, size: 64, offset: 2176)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "close_delay", scope: !2212, file: !1926, line: 248, baseType: !7, size: 32, offset: 2240)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "closing_wait", scope: !2212, file: !1926, line: 249, baseType: !7, size: 32, offset: 2272)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "drain_delay", scope: !2212, file: !1926, line: 250, baseType: !265, size: 32, offset: 2304)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2212, file: !1926, line: 253, baseType: !1930, size: 32, offset: 2336)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !2212, file: !1926, line: 254, baseType: !208, size: 64, offset: 2368)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !1937, file: !1938, line: 325, baseType: !2310, size: 64, offset: 1152)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "driver_state", scope: !1937, file: !1938, line: 326, baseType: !208, size: 64, offset: 1216)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1937, file: !1938, line: 332, baseType: !2314, size: 64, offset: 1280)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2316)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_operations", file: !1938, line: 254, size: 2176, elements: !2317)
!2317 = !{!2318, !2322, !2326, !2330, !2334, !2338, !2342, !2343, !2347, !2351, !2352, !2356, !2357, !2361, !2365, !2369, !2370, !2371, !2372, !2373, !2374, !2378, !2379, !2380, !2384, !2388, !2389, !2393, !2405, !2420, !2426, !2432, !2433, !2437}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2316, file: !1938, line: 255, baseType: !2319, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = !DISubroutineType(types: !2321)
!2321 = !{!1924, !1936, !439, !265}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "install", scope: !2316, file: !1938, line: 257, baseType: !2323, size: 64, offset: 64)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2324 = !DISubroutineType(types: !2325)
!2325 = !{!265, !1936, !1924}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !2316, file: !1938, line: 258, baseType: !2327, size: 64, offset: 128)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 64)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{null, !1936, !1924}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2316, file: !1938, line: 259, baseType: !2331, size: 64, offset: 192)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 64)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{!265, !1924, !439}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2316, file: !1938, line: 260, baseType: !2335, size: 64, offset: 256)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 64)
!2336 = !DISubroutineType(types: !2337)
!2337 = !{null, !1924, !439}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2316, file: !1938, line: 261, baseType: !2339, size: 64, offset: 320)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2340, size: 64)
!2340 = !DISubroutineType(types: !2341)
!2341 = !{null, !1924}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2316, file: !1938, line: 262, baseType: !2339, size: 64, offset: 384)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2316, file: !1938, line: 263, baseType: !2344, size: 64, offset: 448)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64)
!2345 = !DISubroutineType(types: !2346)
!2346 = !{!265, !1924, !505, !265}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "put_char", scope: !2316, file: !1938, line: 265, baseType: !2348, size: 64, offset: 512)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = !DISubroutineType(types: !2350)
!2350 = !{!265, !1924, !292}
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "flush_chars", scope: !2316, file: !1938, line: 266, baseType: !2339, size: 64, offset: 576)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "write_room", scope: !2316, file: !1938, line: 267, baseType: !2353, size: 64, offset: 640)
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2354 = !DISubroutineType(types: !2355)
!2355 = !{!265, !1924}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "chars_in_buffer", scope: !2316, file: !1938, line: 268, baseType: !2353, size: 64, offset: 704)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2316, file: !1938, line: 269, baseType: !2358, size: 64, offset: 768)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 64)
!2359 = !DISubroutineType(types: !2360)
!2360 = !{!265, !1924, !7, !248}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2316, file: !1938, line: 271, baseType: !2362, size: 64, offset: 832)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{!398, !1924, !7, !248}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !2316, file: !1938, line: 273, baseType: !2366, size: 64, offset: 896)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!2367 = !DISubroutineType(types: !2368)
!2368 = !{null, !1924, !2311}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "throttle", scope: !2316, file: !1938, line: 274, baseType: !2339, size: 64, offset: 960)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "unthrottle", scope: !2316, file: !1938, line: 275, baseType: !2339, size: 64, offset: 1024)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !2316, file: !1938, line: 276, baseType: !2339, size: 64, offset: 1088)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2316, file: !1938, line: 277, baseType: !2339, size: 64, offset: 1152)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !2316, file: !1938, line: 278, baseType: !2339, size: 64, offset: 1216)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "break_ctl", scope: !2316, file: !1938, line: 279, baseType: !2375, size: 64, offset: 1280)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 64)
!2376 = !DISubroutineType(types: !2377)
!2377 = !{!265, !1924, !265}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !2316, file: !1938, line: 280, baseType: !2339, size: 64, offset: 1344)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "set_ldisc", scope: !2316, file: !1938, line: 281, baseType: !2339, size: 64, offset: 1408)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "wait_until_sent", scope: !2316, file: !1938, line: 282, baseType: !2381, size: 64, offset: 1472)
!2381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2382, size: 64)
!2382 = !DISubroutineType(types: !2383)
!2383 = !{null, !1924, !265}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "send_xchar", scope: !2316, file: !1938, line: 283, baseType: !2385, size: 64, offset: 1536)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!2386 = !DISubroutineType(types: !2387)
!2387 = !{null, !1924, !246}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmget", scope: !2316, file: !1938, line: 284, baseType: !2353, size: 64, offset: 1600)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "tiocmset", scope: !2316, file: !1938, line: 285, baseType: !2390, size: 64, offset: 1664)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 64)
!2391 = !DISubroutineType(types: !2392)
!2392 = !{!265, !1924, !7, !7}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "resize", scope: !2316, file: !1938, line: 287, baseType: !2394, size: 64, offset: 1728)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = !DISubroutineType(types: !2396)
!2396 = !{!265, !1924, !2397}
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "winsize", file: !2399, line: 15, size: 64, elements: !2400)
!2399 = !DIFile(filename: "./include/uapi/asm-generic/termios.h", directory: "/home/lizy2001/genbc/linux")
!2400 = !{!2401, !2402, !2403, !2404}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "ws_row", scope: !2398, file: !2399, line: 16, baseType: !301, size: 16)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "ws_col", scope: !2398, file: !2399, line: 17, baseType: !301, size: 16, offset: 16)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "ws_xpixel", scope: !2398, file: !2399, line: 18, baseType: !301, size: 16, offset: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "ws_ypixel", scope: !2398, file: !2399, line: 19, baseType: !301, size: 16, offset: 48)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "set_termiox", scope: !2316, file: !1938, line: 288, baseType: !2406, size: 64, offset: 1792)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{!265, !1924, !2409}
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 64)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "termiox", file: !2411, line: 10, size: 128, elements: !2412)
!2411 = !DIFile(filename: "./include/uapi/linux/termios.h", directory: "/home/lizy2001/genbc/linux")
!2412 = !{!2413, !2414, !2415, !2419}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "x_hflag", scope: !2410, file: !2411, line: 12, baseType: !985, size: 16)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "x_cflag", scope: !2410, file: !2411, line: 13, baseType: !985, size: 16, offset: 16)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "x_rflag", scope: !2410, file: !2411, line: 14, baseType: !2416, size: 80, offset: 32)
!2416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !985, size: 80, elements: !2417)
!2417 = !{!2418}
!2418 = !DISubrange(count: 5)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "x_sflag", scope: !2410, file: !2411, line: 15, baseType: !985, size: 16, offset: 112)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "get_icount", scope: !2316, file: !1938, line: 289, baseType: !2421, size: 64, offset: 1856)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{!265, !1924, !2424}
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = !DICompositeType(tag: DW_TAG_structure_type, name: "serial_icounter_struct", file: !1938, line: 251, flags: DIFlagFwdDecl)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "get_serial", scope: !2316, file: !1938, line: 291, baseType: !2427, size: 64, offset: 1920)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = !DISubroutineType(types: !2429)
!2429 = !{!265, !1924, !2430}
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = !DICompositeType(tag: DW_TAG_structure_type, name: "serial_struct", file: !1938, line: 252, flags: DIFlagFwdDecl)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "set_serial", scope: !2316, file: !1938, line: 292, baseType: !2427, size: 64, offset: 1984)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2316, file: !1938, line: 293, baseType: !2434, size: 64, offset: 2048)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64)
!2435 = !DISubroutineType(types: !2436)
!2436 = !{null, !1924, !793}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "proc_show", scope: !2316, file: !1938, line: 299, baseType: !837, size: 64, offset: 2112)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "tty_drivers", scope: !1937, file: !1938, line: 333, baseType: !214, size: 128, offset: 1344)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1925, file: !1926, line: 290, baseType: !2314, size: 64, offset: 192)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1925, file: !1926, line: 291, baseType: !265, size: 32, offset: 256)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc_sem", scope: !1925, file: !1926, line: 294, baseType: !2442, size: 384, offset: 320)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ld_semaphore", file: !2443, line: 133, size: 384, elements: !2444)
!2443 = !DIFile(filename: "./include/linux/tty_ldisc.h", directory: "/home/lizy2001/genbc/linux")
!2444 = !{!2445, !2446, !2447, !2448, !2449}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2442, file: !2443, line: 134, baseType: !809, size: 64)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !2442, file: !2443, line: 135, baseType: !905, offset: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "wait_readers", scope: !2442, file: !2443, line: 136, baseType: !7, size: 32, offset: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !2442, file: !2443, line: 137, baseType: !214, size: 128, offset: 128)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !2442, file: !2443, line: 138, baseType: !214, size: 128, offset: 256)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "ldisc", scope: !1925, file: !1926, line: 295, baseType: !2451, size: 64, offset: 704)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc", file: !2443, line: 215, size: 128, elements: !2453)
!2453 = !{!2454, !2499}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2452, file: !2443, line: 216, baseType: !2455, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2456, size: 64)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tty_ldisc_ops", file: !2443, line: 175, size: 1216, elements: !2457)
!2457 = !{!2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2469, !2473, !2477, !2478, !2479, !2483, !2484, !2488, !2489, !2493, !2497, !2498}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2456, file: !2443, line: 176, baseType: !265, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2456, file: !2443, line: 177, baseType: !363, size: 64, offset: 64)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2456, file: !2443, line: 178, baseType: !265, size: 32, offset: 128)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2456, file: !2443, line: 179, baseType: !265, size: 32, offset: 160)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2456, file: !2443, line: 184, baseType: !2353, size: 64, offset: 192)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2456, file: !2443, line: 185, baseType: !2339, size: 64, offset: 256)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "flush_buffer", scope: !2456, file: !2443, line: 186, baseType: !2339, size: 64, offset: 320)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2456, file: !2443, line: 187, baseType: !2466, size: 64, offset: 384)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64)
!2467 = !DISubroutineType(types: !2468)
!2468 = !{!394, !1924, !439, !2303, !409}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2456, file: !2443, line: 189, baseType: !2470, size: 64, offset: 448)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64)
!2471 = !DISubroutineType(types: !2472)
!2472 = !{!394, !1924, !439, !505, !409}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2456, file: !2443, line: 191, baseType: !2474, size: 64, offset: 512)
!2474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 64)
!2475 = !DISubroutineType(types: !2476)
!2476 = !{!265, !1924, !439, !7, !248}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2456, file: !2443, line: 193, baseType: !2474, size: 64, offset: 576)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "set_termios", scope: !2456, file: !2443, line: 195, baseType: !2366, size: 64, offset: 640)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2456, file: !2443, line: 196, baseType: !2480, size: 64, offset: 704)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = !DISubroutineType(types: !2482)
!2482 = !{!1992, !1924, !439, !1994}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "hangup", scope: !2456, file: !2443, line: 198, baseType: !2353, size: 64, offset: 768)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf", scope: !2456, file: !2443, line: 203, baseType: !2485, size: 64, offset: 832)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{null, !1924, !505, !363, !265}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "write_wakeup", scope: !2456, file: !2443, line: 205, baseType: !2339, size: 64, offset: 896)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "dcd_change", scope: !2456, file: !2443, line: 206, baseType: !2490, size: 64, offset: 960)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = !DISubroutineType(types: !2492)
!2492 = !{null, !1924, !7}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buf2", scope: !2456, file: !2443, line: 207, baseType: !2494, size: 64, offset: 1024)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 64)
!2495 = !DISubroutineType(types: !2496)
!2496 = !{!265, !1924, !505, !363, !265}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2456, file: !2443, line: 210, baseType: !712, size: 64, offset: 1088)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2456, file: !2443, line: 212, baseType: !265, size: 32, offset: 1152)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2452, file: !2443, line: 217, baseType: !1924, size: 64, offset: 64)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_lock", scope: !1925, file: !1926, line: 297, baseType: !805, size: 192, offset: 768)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mutex", scope: !1925, file: !1926, line: 298, baseType: !805, size: 192, offset: 960)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "throttle_mutex", scope: !1925, file: !1926, line: 299, baseType: !805, size: 192, offset: 1152)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "termios_rwsem", scope: !1925, file: !1926, line: 300, baseType: !899, size: 256, offset: 1344)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "winsize_mutex", scope: !1925, file: !1926, line: 301, baseType: !805, size: 192, offset: 1600)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_lock", scope: !1925, file: !1926, line: 302, baseType: !322, offset: 1792)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "flow_lock", scope: !1925, file: !1926, line: 303, baseType: !322, offset: 1792)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "termios", scope: !1925, file: !1926, line: 305, baseType: !2187, size: 352, offset: 1792)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "termios_locked", scope: !1925, file: !1926, line: 305, baseType: !2187, size: 352, offset: 2144)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "termiox", scope: !1925, file: !1926, line: 306, baseType: !2409, size: 64, offset: 2496)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1925, file: !1926, line: 307, baseType: !2511, size: 512, offset: 2560)
!2511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 512, elements: !368)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "pgrp", scope: !1925, file: !1926, line: 308, baseType: !1588, size: 64, offset: 3072)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "session", scope: !1925, file: !1926, line: 313, baseType: !1588, size: 64, offset: 3136)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1925, file: !1926, line: 314, baseType: !248, size: 64, offset: 3200)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1925, file: !1926, line: 315, baseType: !265, size: 32, offset: 3264)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "winsize", scope: !1925, file: !1926, line: 316, baseType: !2398, size: 64, offset: 3296)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "stopped", scope: !1925, file: !1926, line: 317, baseType: !248, size: 1, offset: 3360, flags: DIFlagBitField, extraData: i64 3360)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "flow_stopped", scope: !1925, file: !1926, line: 318, baseType: !248, size: 1, offset: 3361, flags: DIFlagBitField, extraData: i64 3360)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1925, file: !1926, line: 319, baseType: !248, size: 62, offset: 3392, flags: DIFlagBitField, extraData: i64 3392)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stopped", scope: !1925, file: !1926, line: 320, baseType: !265, size: 32, offset: 3456)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_status", scope: !1925, file: !1926, line: 321, baseType: !248, size: 8, offset: 3488, flags: DIFlagBitField, extraData: i64 3488)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !1925, file: !1926, line: 322, baseType: !248, size: 1, offset: 3496, flags: DIFlagBitField, extraData: i64 3488)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "unused_ctrl", scope: !1925, file: !1926, line: 323, baseType: !248, size: 55, offset: 3520, flags: DIFlagBitField, extraData: i64 3520)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "receive_room", scope: !1925, file: !1926, line: 324, baseType: !7, size: 32, offset: 3584)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "flow_change", scope: !1925, file: !1926, line: 325, baseType: !265, size: 32, offset: 3616)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1925, file: !1926, line: 327, baseType: !1924, size: 64, offset: 3648)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1925, file: !1926, line: 328, baseType: !2046, size: 64, offset: 3712)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "write_wait", scope: !1925, file: !1926, line: 329, baseType: !1598, size: 128, offset: 3776)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "read_wait", scope: !1925, file: !1926, line: 330, baseType: !1598, size: 128, offset: 3904)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "hangup_work", scope: !1925, file: !1926, line: 331, baseType: !2236, size: 256, offset: 4032)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "disc_data", scope: !1925, file: !1926, line: 332, baseType: !208, size: 64, offset: 4288)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1925, file: !1926, line: 333, baseType: !208, size: 64, offset: 4352)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "files_lock", scope: !1925, file: !1926, line: 334, baseType: !322, offset: 4416)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "tty_files", scope: !1925, file: !1926, line: 335, baseType: !214, size: 128, offset: 4416)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "closing", scope: !1925, file: !1926, line: 339, baseType: !265, size: 32, offset: 4544)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "write_buf", scope: !1925, file: !1926, line: 340, baseType: !2303, size: 64, offset: 4608)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "write_cnt", scope: !1925, file: !1926, line: 341, baseType: !265, size: 32, offset: 4672)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "SAK_work", scope: !1925, file: !1926, line: 343, baseType: !2236, size: 256, offset: 4736)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1925, file: !1926, line: 344, baseType: !2211, size: 64, offset: 4992)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1871, file: !1872, line: 175, baseType: !2541, size: 32, offset: 3200)
!2541 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !475, line: 805, baseType: !2542)
!2542 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !475, line: 798, size: 32, elements: !2543)
!2543 = !{!2544, !2545}
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2542, file: !475, line: 803, baseType: !474, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2542, file: !475, line: 804, baseType: !322, offset: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1871, file: !1872, line: 176, baseType: !239, size: 64, offset: 3264)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1871, file: !1872, line: 176, baseType: !239, size: 64, offset: 3328)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1871, file: !1872, line: 176, baseType: !239, size: 64, offset: 3392)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1871, file: !1872, line: 176, baseType: !239, size: 64, offset: 3456)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1871, file: !1872, line: 177, baseType: !239, size: 64, offset: 3520)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1871, file: !1872, line: 178, baseType: !239, size: 64, offset: 3584)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1871, file: !1872, line: 179, baseType: !1635, size: 128, offset: 3648)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1871, file: !1872, line: 180, baseType: !248, size: 64, offset: 3776)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1871, file: !1872, line: 180, baseType: !248, size: 64, offset: 3840)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1871, file: !1872, line: 180, baseType: !248, size: 64, offset: 3904)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1871, file: !1872, line: 180, baseType: !248, size: 64, offset: 3968)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1871, file: !1872, line: 181, baseType: !248, size: 64, offset: 4032)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1871, file: !1872, line: 181, baseType: !248, size: 64, offset: 4096)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1871, file: !1872, line: 181, baseType: !248, size: 64, offset: 4160)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1871, file: !1872, line: 181, baseType: !248, size: 64, offset: 4224)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1871, file: !1872, line: 182, baseType: !248, size: 64, offset: 4288)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1871, file: !1872, line: 182, baseType: !248, size: 64, offset: 4352)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1871, file: !1872, line: 182, baseType: !248, size: 64, offset: 4416)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1871, file: !1872, line: 182, baseType: !248, size: 64, offset: 4480)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1871, file: !1872, line: 183, baseType: !248, size: 64, offset: 4544)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1871, file: !1872, line: 183, baseType: !248, size: 64, offset: 4608)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1871, file: !1872, line: 184, baseType: !2568, offset: 4672)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2569, line: 12, elements: !336)
!2569 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1871, file: !1872, line: 192, baseType: !241, size: 64, offset: 4672)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1871, file: !1872, line: 203, baseType: !2572, size: 2048, offset: 4736)
!2572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2573, size: 2048, elements: !1852)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2574, line: 43, size: 128, elements: !2575)
!2574 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2575 = !{!2576, !2577}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2573, file: !2574, line: 44, baseType: !411, size: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2573, file: !2574, line: 45, baseType: !411, size: 64, offset: 64)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1871, file: !1872, line: 220, baseType: !569, size: 8, offset: 6784)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1871, file: !1872, line: 221, baseType: !1323, size: 16, offset: 6800)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1871, file: !1872, line: 222, baseType: !1323, size: 16, offset: 6816)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1871, file: !1872, line: 224, baseType: !1100, size: 64, offset: 6848)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1871, file: !1872, line: 227, baseType: !805, size: 192, offset: 6912)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1871, file: !1872, line: 233, baseType: !805, size: 192, offset: 7104)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1335, file: !1336, line: 970, baseType: !2585, size: 64, offset: 9280)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1872, line: 20, size: 16576, elements: !2587)
!2587 = !{!2588, !2589, !2590, !2591}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2586, file: !1872, line: 21, baseType: !322)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2586, file: !1872, line: 22, baseType: !1348, size: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2586, file: !1872, line: 23, baseType: !1598, size: 128, offset: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2586, file: !1872, line: 24, baseType: !2592, size: 16384, offset: 192)
!2592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2593, size: 16384, elements: !368)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1882, line: 49, size: 256, elements: !2594)
!2594 = !{!2595}
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2593, file: !1882, line: 50, baseType: !2596, size: 256)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1882, line: 35, size: 256, elements: !2597)
!2597 = !{!2598, !2605, !2606, !2612}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2596, file: !1882, line: 37, baseType: !2599, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2600, line: 19, baseType: !2601)
!2600 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2600, line: 18, baseType: !2603)
!2603 = !DISubroutineType(types: !2604)
!2604 = !{null, !265}
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2596, file: !1882, line: 38, baseType: !248, size: 64, offset: 64)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2596, file: !1882, line: 44, baseType: !2607, size: 64, offset: 128)
!2607 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2600, line: 22, baseType: !2608)
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 64)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2600, line: 21, baseType: !2610)
!2610 = !DISubroutineType(types: !2611)
!2611 = !{null}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2596, file: !1882, line: 46, baseType: !1886, size: 64, offset: 192)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1335, file: !1336, line: 971, baseType: !1886, size: 64, offset: 9344)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1335, file: !1336, line: 972, baseType: !1886, size: 64, offset: 9408)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1335, file: !1336, line: 974, baseType: !1886, size: 64, offset: 9472)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1335, file: !1336, line: 975, baseType: !1881, size: 192, offset: 9536)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1335, file: !1336, line: 976, baseType: !248, size: 64, offset: 9728)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1335, file: !1336, line: 977, baseType: !409, size: 64, offset: 9792)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1335, file: !1336, line: 978, baseType: !7, size: 32, offset: 9856)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1335, file: !1336, line: 980, baseType: !455, size: 64, offset: 9920)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1335, file: !1336, line: 989, baseType: !2622, size: 128, offset: 9984)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2623, line: 35, size: 128, elements: !2624)
!2623 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2624 = !{!2625, !2626, !2627}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2622, file: !2623, line: 36, baseType: !265, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2622, file: !2623, line: 37, baseType: !879, size: 32, offset: 32)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2622, file: !2623, line: 38, baseType: !2628, size: 64, offset: 64)
!2628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2629, size: 64)
!2629 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2623, line: 23, flags: DIFlagFwdDecl)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1335, file: !1336, line: 992, baseType: !239, size: 64, offset: 10112)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1335, file: !1336, line: 993, baseType: !239, size: 64, offset: 10176)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1335, file: !1336, line: 996, baseType: !322, offset: 10240)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1335, file: !1336, line: 999, baseType: !905, offset: 10240)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1335, file: !1336, line: 1001, baseType: !2635, size: 64, offset: 10240)
!2635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1336, line: 636, size: 64, elements: !2636)
!2636 = !{!2637}
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2635, file: !1336, line: 637, baseType: !2638, size: 64)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2635, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1335, file: !1336, line: 1005, baseType: !884, size: 128, offset: 10304)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1335, file: !1336, line: 1007, baseType: !1334, size: 64, offset: 10432)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1335, file: !1336, line: 1009, baseType: !2642, size: 64, offset: 10496)
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 64)
!2643 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1336, line: 1009, flags: DIFlagFwdDecl)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1335, file: !1336, line: 1043, baseType: !208, size: 64, offset: 10560)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1335, file: !1336, line: 1046, baseType: !2646, size: 64, offset: 10624)
!2646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2647, size: 64)
!2647 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1336, line: 41, flags: DIFlagFwdDecl)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1335, file: !1336, line: 1050, baseType: !2649, size: 64, offset: 10688)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2650 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1336, line: 42, flags: DIFlagFwdDecl)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1335, file: !1336, line: 1054, baseType: !2652, size: 64, offset: 10752)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 64)
!2653 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1336, line: 55, flags: DIFlagFwdDecl)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1335, file: !1336, line: 1056, baseType: !2655, size: 64, offset: 10816)
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64)
!2656 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1336, line: 40, flags: DIFlagFwdDecl)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1335, file: !1336, line: 1058, baseType: !2658, size: 64, offset: 10880)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2660, line: 99, size: 704, elements: !2661)
!2660 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2661 = !{!2662, !2663, !2664, !2665, !2666, !2667, !2668, !2687, !2688}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2659, file: !2660, line: 100, baseType: !809, size: 64)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2659, file: !2660, line: 101, baseType: !879, size: 32, offset: 64)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2659, file: !2660, line: 102, baseType: !879, size: 32, offset: 96)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2659, file: !2660, line: 105, baseType: !322, offset: 128)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2659, file: !2660, line: 107, baseType: !301, size: 16, offset: 128)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2659, file: !2660, line: 109, baseType: !870, size: 128, offset: 192)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2659, file: !2660, line: 110, baseType: !2669, size: 64, offset: 320)
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 64)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2660, line: 73, size: 448, elements: !2671)
!2671 = !{!2672, !2675, !2676, !2681, !2686}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2670, file: !2660, line: 74, baseType: !2673, size: 64)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2660, line: 74, flags: DIFlagFwdDecl)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2670, file: !2660, line: 75, baseType: !2658, size: 64, offset: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, scope: !2670, file: !2660, line: 83, baseType: !2677, size: 128, offset: 128)
!2677 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2670, file: !2660, line: 83, size: 128, elements: !2678)
!2678 = !{!2679, !2680}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2677, file: !2660, line: 84, baseType: !214, size: 128)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2677, file: !2660, line: 85, baseType: !1060, size: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, scope: !2670, file: !2660, line: 87, baseType: !2682, size: 128, offset: 256)
!2682 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2670, file: !2660, line: 87, size: 128, elements: !2683)
!2683 = !{!2684, !2685}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2682, file: !2660, line: 88, baseType: !721, size: 128)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2682, file: !2660, line: 89, baseType: !452, size: 128, align: 64)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2670, file: !2660, line: 92, baseType: !7, size: 32, offset: 384)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2659, file: !2660, line: 111, baseType: !717, size: 64, offset: 384)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2659, file: !2660, line: 113, baseType: !2236, size: 256, offset: 448)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1335, file: !1336, line: 1061, baseType: !2690, size: 64, offset: 10944)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1336, line: 43, flags: DIFlagFwdDecl)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1335, file: !1336, line: 1064, baseType: !248, size: 64, offset: 11008)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1335, file: !1336, line: 1065, baseType: !2694, size: 64, offset: 11072)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2695 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1882, line: 14, baseType: !2696)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1882, line: 12, size: 384, elements: !2697)
!2697 = !{!2698}
!2698 = !DIDerivedType(tag: DW_TAG_member, scope: !2696, file: !1882, line: 13, baseType: !2699, size: 384)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2696, file: !1882, line: 13, size: 384, elements: !2700)
!2700 = !{!2701, !2702, !2703, !2704}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2699, file: !1882, line: 13, baseType: !265, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2699, file: !1882, line: 13, baseType: !265, size: 32, offset: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2699, file: !1882, line: 13, baseType: !265, size: 32, offset: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2699, file: !1882, line: 13, baseType: !2705, size: 256, offset: 128)
!2705 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2706, line: 32, size: 256, elements: !2707)
!2706 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2707 = !{!2708, !2713, !2726, !2732, !2741, !2761, !2766}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2705, file: !2706, line: 37, baseType: !2709, size: 64)
!2709 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2705, file: !2706, line: 34, size: 64, elements: !2710)
!2710 = !{!2711, !2712}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2709, file: !2706, line: 35, baseType: !1577, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2709, file: !2706, line: 36, baseType: !520, size: 32, offset: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2705, file: !2706, line: 45, baseType: !2714, size: 192)
!2714 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2705, file: !2706, line: 40, size: 192, elements: !2715)
!2715 = !{!2716, !2718, !2719, !2725}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2714, file: !2706, line: 41, baseType: !2717, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !396, line: 95, baseType: !265)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2714, file: !2706, line: 42, baseType: !265, size: 32, offset: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2714, file: !2706, line: 43, baseType: !2720, size: 64, offset: 64)
!2720 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2706, line: 11, baseType: !2721)
!2721 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2706, line: 8, size: 64, elements: !2722)
!2722 = !{!2723, !2724}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2721, file: !2706, line: 9, baseType: !265, size: 32)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2721, file: !2706, line: 10, baseType: !208, size: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2714, file: !2706, line: 44, baseType: !265, size: 32, offset: 128)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2705, file: !2706, line: 52, baseType: !2727, size: 128)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2705, file: !2706, line: 48, size: 128, elements: !2728)
!2728 = !{!2729, !2730, !2731}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2727, file: !2706, line: 49, baseType: !1577, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2727, file: !2706, line: 50, baseType: !520, size: 32, offset: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2727, file: !2706, line: 51, baseType: !2720, size: 64, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2705, file: !2706, line: 61, baseType: !2733, size: 256)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2705, file: !2706, line: 55, size: 256, elements: !2734)
!2734 = !{!2735, !2736, !2737, !2738, !2740}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2733, file: !2706, line: 56, baseType: !1577, size: 32)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2733, file: !2706, line: 57, baseType: !520, size: 32, offset: 32)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2733, file: !2706, line: 58, baseType: !265, size: 32, offset: 64)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2733, file: !2706, line: 59, baseType: !2739, size: 64, offset: 128)
!2739 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !396, line: 94, baseType: !397)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2733, file: !2706, line: 60, baseType: !2739, size: 64, offset: 192)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2705, file: !2706, line: 95, baseType: !2742, size: 256)
!2742 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2705, file: !2706, line: 64, size: 256, elements: !2743)
!2743 = !{!2744, !2745}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2742, file: !2706, line: 65, baseType: !208, size: 64)
!2745 = !DIDerivedType(tag: DW_TAG_member, scope: !2742, file: !2706, line: 77, baseType: !2746, size: 192, offset: 64)
!2746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2742, file: !2706, line: 77, size: 192, elements: !2747)
!2747 = !{!2748, !2749, !2756}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2746, file: !2706, line: 82, baseType: !1323, size: 16)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2746, file: !2706, line: 88, baseType: !2750, size: 192)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2746, file: !2706, line: 84, size: 192, elements: !2751)
!2751 = !{!2752, !2754, !2755}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2750, file: !2706, line: 85, baseType: !2753, size: 64)
!2753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 64, elements: !1448)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2750, file: !2706, line: 86, baseType: !208, size: 64, offset: 64)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2750, file: !2706, line: 87, baseType: !208, size: 64, offset: 128)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2746, file: !2706, line: 93, baseType: !2757, size: 96)
!2757 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2746, file: !2706, line: 90, size: 96, elements: !2758)
!2758 = !{!2759, !2760}
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2757, file: !2706, line: 91, baseType: !2753, size: 64)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2757, file: !2706, line: 92, baseType: !206, size: 32, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2705, file: !2706, line: 101, baseType: !2762, size: 128)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2705, file: !2706, line: 98, size: 128, elements: !2763)
!2763 = !{!2764, !2765}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2762, file: !2706, line: 99, baseType: !398, size: 64)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2762, file: !2706, line: 100, baseType: !265, size: 32, offset: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2705, file: !2706, line: 108, baseType: !2767, size: 128)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2705, file: !2706, line: 104, size: 128, elements: !2768)
!2768 = !{!2769, !2770, !2771}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2767, file: !2706, line: 105, baseType: !208, size: 64)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2767, file: !2706, line: 106, baseType: !265, size: 32, offset: 64)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2767, file: !2706, line: 107, baseType: !7, size: 32, offset: 96)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1335, file: !1336, line: 1067, baseType: !2568, offset: 11136)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1335, file: !1336, line: 1099, baseType: !2774, size: 64, offset: 11136)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 64)
!2775 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1336, line: 56, flags: DIFlagFwdDecl)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1335, file: !1336, line: 1103, baseType: !214, size: 128, offset: 11200)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1335, file: !1336, line: 1104, baseType: !2778, size: 64, offset: 11328)
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 64)
!2779 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1336, line: 46, flags: DIFlagFwdDecl)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1335, file: !1336, line: 1105, baseType: !805, size: 192, offset: 11392)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1335, file: !1336, line: 1106, baseType: !7, size: 32, offset: 11584)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1335, file: !1336, line: 1109, baseType: !2783, size: 128, offset: 11648)
!2783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2784, size: 128, elements: !1686)
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1336, line: 51, flags: DIFlagFwdDecl)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1335, file: !1336, line: 1110, baseType: !805, size: 192, offset: 11776)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1335, file: !1336, line: 1111, baseType: !214, size: 128, offset: 11968)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1335, file: !1336, line: 1173, baseType: !2789, size: 64, offset: 12096)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2791, line: 62, size: 256, align: 256, elements: !2792)
!2791 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2792 = !{!2793, !2794, !2795, !2800}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2790, file: !2791, line: 75, baseType: !206, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2790, file: !2791, line: 90, baseType: !206, size: 32, offset: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2790, file: !2791, line: 124, baseType: !2796, size: 64, offset: 64)
!2796 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2790, file: !2791, line: 109, size: 64, elements: !2797)
!2797 = !{!2798, !2799}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2796, file: !2791, line: 110, baseType: !240, size: 64)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2796, file: !2791, line: 112, baseType: !240, size: 64)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2790, file: !2791, line: 144, baseType: !206, size: 32, offset: 128)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1335, file: !1336, line: 1174, baseType: !204, size: 32, offset: 12160)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1335, file: !1336, line: 1179, baseType: !248, size: 64, offset: 12224)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1335, file: !1336, line: 1182, baseType: !2804, size: 128, offset: 12288)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1277, line: 76, size: 128, elements: !2805)
!2805 = !{!2806, !2811, !2812}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2804, file: !1277, line: 85, baseType: !2807, size: 64)
!2807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2808, line: 7, size: 64, elements: !2809)
!2808 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2809 = !{!2810}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2807, file: !2808, line: 12, baseType: !1485, size: 64)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2804, file: !1277, line: 88, baseType: !569, size: 8, offset: 64)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2804, file: !1277, line: 95, baseType: !569, size: 8, offset: 72)
!2813 = !DIDerivedType(tag: DW_TAG_member, scope: !1335, file: !1336, line: 1184, baseType: !2814, size: 128, offset: 12416)
!2814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1335, file: !1336, line: 1184, size: 128, elements: !2815)
!2815 = !{!2816, !2817}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2814, file: !1336, line: 1185, baseType: !1348, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2814, file: !1336, line: 1186, baseType: !452, size: 128, align: 64)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1335, file: !1336, line: 1190, baseType: !2146, size: 64, offset: 12544)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1335, file: !1336, line: 1192, baseType: !2820, size: 128, offset: 12608)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1277, line: 64, size: 128, elements: !2821)
!2821 = !{!2822, !2823, !2824}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2820, file: !1277, line: 65, baseType: !852, size: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2820, file: !1277, line: 67, baseType: !206, size: 32, offset: 64)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2820, file: !1277, line: 68, baseType: !206, size: 32, offset: 96)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1335, file: !1336, line: 1206, baseType: !265, size: 32, offset: 12736)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1335, file: !1336, line: 1207, baseType: !265, size: 32, offset: 12768)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1335, file: !1336, line: 1209, baseType: !248, size: 64, offset: 12800)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1335, file: !1336, line: 1219, baseType: !239, size: 64, offset: 12864)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1335, file: !1336, line: 1220, baseType: !239, size: 64, offset: 12928)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1335, file: !1336, line: 1317, baseType: !265, size: 32, offset: 12992)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1335, file: !1336, line: 1319, baseType: !1334, size: 64, offset: 13056)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1335, file: !1336, line: 1322, baseType: !2833, size: 64, offset: 13120)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2835, line: 56, size: 512, elements: !2836)
!2835 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2836 = !{!2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844}
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2834, file: !2835, line: 57, baseType: !2833, size: 64)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2834, file: !2835, line: 58, baseType: !208, size: 64, offset: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2834, file: !2835, line: 59, baseType: !248, size: 64, offset: 128)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2834, file: !2835, line: 60, baseType: !248, size: 64, offset: 192)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2834, file: !2835, line: 61, baseType: !945, size: 64, offset: 256)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2834, file: !2835, line: 62, baseType: !7, size: 32, offset: 320)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2834, file: !2835, line: 63, baseType: !238, size: 64, offset: 384)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2834, file: !2835, line: 64, baseType: !2845, size: 64, offset: 448)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1335, file: !1336, line: 1326, baseType: !1348, size: 32, offset: 13184)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1335, file: !1336, line: 1342, baseType: !208, size: 64, offset: 13248)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1335, file: !1336, line: 1343, baseType: !240, size: 64, offset: 13312)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1335, file: !1336, line: 1344, baseType: !239, size: 64, offset: 13376)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1335, file: !1336, line: 1345, baseType: !240, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1335, file: !1336, line: 1346, baseType: !240, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1335, file: !1336, line: 1347, baseType: !240, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1335, file: !1336, line: 1348, baseType: !452, size: 128, align: 64, offset: 13504)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1335, file: !1336, line: 1358, baseType: !2856, size: 34816, offset: 13824)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2857, line: 485, size: 34816, elements: !2858)
!2857 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2858 = !{!2859, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2888, !2889, !2890, !2891, !2892, !2893, !2896, !2897, !2898}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2856, file: !2857, line: 487, baseType: !2860, size: 192)
!2860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2861, size: 192, elements: !364)
!2861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2862, line: 16, size: 64, elements: !2863)
!2862 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2863 = !{!2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2861, file: !2862, line: 17, baseType: !984, size: 16)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2861, file: !2862, line: 18, baseType: !984, size: 16, offset: 16)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2861, file: !2862, line: 19, baseType: !984, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2861, file: !2862, line: 19, baseType: !984, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2861, file: !2862, line: 19, baseType: !984, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2861, file: !2862, line: 19, baseType: !984, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2861, file: !2862, line: 19, baseType: !984, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2861, file: !2862, line: 20, baseType: !984, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2861, file: !2862, line: 20, baseType: !984, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2861, file: !2862, line: 20, baseType: !984, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2861, file: !2862, line: 20, baseType: !984, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2861, file: !2862, line: 20, baseType: !984, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2861, file: !2862, line: 20, baseType: !984, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2856, file: !2857, line: 491, baseType: !248, size: 64, offset: 192)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2856, file: !2857, line: 495, baseType: !301, size: 16, offset: 256)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2856, file: !2857, line: 496, baseType: !301, size: 16, offset: 272)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2856, file: !2857, line: 497, baseType: !301, size: 16, offset: 288)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2856, file: !2857, line: 498, baseType: !301, size: 16, offset: 304)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2856, file: !2857, line: 502, baseType: !248, size: 64, offset: 320)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2856, file: !2857, line: 503, baseType: !248, size: 64, offset: 384)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2856, file: !2857, line: 514, baseType: !2885, size: 256, offset: 448)
!2885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2886, size: 256, elements: !253)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2857, line: 483, flags: DIFlagFwdDecl)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2856, file: !2857, line: 516, baseType: !248, size: 64, offset: 704)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2856, file: !2857, line: 518, baseType: !248, size: 64, offset: 768)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2856, file: !2857, line: 520, baseType: !248, size: 64, offset: 832)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2856, file: !2857, line: 521, baseType: !248, size: 64, offset: 896)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2856, file: !2857, line: 522, baseType: !248, size: 64, offset: 960)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2856, file: !2857, line: 528, baseType: !2894, size: 64, offset: 1024)
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 64)
!2895 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2857, line: 10, flags: DIFlagFwdDecl)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2856, file: !2857, line: 535, baseType: !248, size: 64, offset: 1088)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2856, file: !2857, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2856, file: !2857, line: 540, baseType: !2899, size: 33280, offset: 1536)
!2899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2900, line: 317, size: 33280, elements: !2901)
!2900 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2901 = !{!2902, !2903, !2904}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2899, file: !2900, line: 330, baseType: !7, size: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2899, file: !2900, line: 337, baseType: !248, size: 64, offset: 64)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2899, file: !2900, line: 348, baseType: !2905, size: 32768, offset: 512)
!2905 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2900, line: 304, size: 32768, elements: !2906)
!2906 = !{!2907, !2922, !2961, !3011, !3024}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2905, file: !2900, line: 305, baseType: !2908, size: 896)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2900, line: 12, size: 896, elements: !2909)
!2909 = !{!2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2921}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2908, file: !2900, line: 13, baseType: !204, size: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2908, file: !2900, line: 14, baseType: !204, size: 32, offset: 32)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2908, file: !2900, line: 15, baseType: !204, size: 32, offset: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2908, file: !2900, line: 16, baseType: !204, size: 32, offset: 96)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2908, file: !2900, line: 17, baseType: !204, size: 32, offset: 128)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2908, file: !2900, line: 18, baseType: !204, size: 32, offset: 160)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2908, file: !2900, line: 19, baseType: !204, size: 32, offset: 192)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2908, file: !2900, line: 22, baseType: !2918, size: 640, offset: 224)
!2918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 640, elements: !2919)
!2919 = !{!2920}
!2920 = !DISubrange(count: 20)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2908, file: !2900, line: 25, baseType: !204, size: 32, offset: 864)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2905, file: !2900, line: 306, baseType: !2923, size: 4096, align: 128)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2900, line: 34, size: 4096, align: 128, elements: !2924)
!2924 = !{!2925, !2926, !2927, !2928, !2929, !2944, !2945, !2946, !2950, !2952, !2956}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2923, file: !2900, line: 35, baseType: !984, size: 16)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2923, file: !2900, line: 36, baseType: !984, size: 16, offset: 16)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2923, file: !2900, line: 37, baseType: !984, size: 16, offset: 32)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2923, file: !2900, line: 38, baseType: !984, size: 16, offset: 48)
!2929 = !DIDerivedType(tag: DW_TAG_member, scope: !2923, file: !2900, line: 39, baseType: !2930, size: 128, offset: 64)
!2930 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2923, file: !2900, line: 39, size: 128, elements: !2931)
!2931 = !{!2932, !2937}
!2932 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2900, line: 40, baseType: !2933, size: 128)
!2933 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2930, file: !2900, line: 40, size: 128, elements: !2934)
!2934 = !{!2935, !2936}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2933, file: !2900, line: 41, baseType: !239, size: 64)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2933, file: !2900, line: 42, baseType: !239, size: 64, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_member, scope: !2930, file: !2900, line: 44, baseType: !2938, size: 128)
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2930, file: !2900, line: 44, size: 128, elements: !2939)
!2939 = !{!2940, !2941, !2942, !2943}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2938, file: !2900, line: 45, baseType: !204, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2938, file: !2900, line: 46, baseType: !204, size: 32, offset: 32)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2938, file: !2900, line: 47, baseType: !204, size: 32, offset: 64)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2938, file: !2900, line: 48, baseType: !204, size: 32, offset: 96)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2923, file: !2900, line: 51, baseType: !204, size: 32, offset: 192)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2923, file: !2900, line: 52, baseType: !204, size: 32, offset: 224)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2923, file: !2900, line: 55, baseType: !2947, size: 1024, offset: 256)
!2947 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 1024, elements: !2948)
!2948 = !{!2949}
!2949 = !DISubrange(count: 32)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2923, file: !2900, line: 58, baseType: !2951, size: 2048, offset: 1280)
!2951 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 2048, elements: !368)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2923, file: !2900, line: 60, baseType: !2953, size: 384, offset: 3328)
!2953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 384, elements: !2954)
!2954 = !{!2955}
!2955 = !DISubrange(count: 12)
!2956 = !DIDerivedType(tag: DW_TAG_member, scope: !2923, file: !2900, line: 62, baseType: !2957, size: 384, offset: 3712)
!2957 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2923, file: !2900, line: 62, size: 384, elements: !2958)
!2958 = !{!2959, !2960}
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2957, file: !2900, line: 63, baseType: !2953, size: 384)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2957, file: !2900, line: 64, baseType: !2953, size: 384)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2905, file: !2900, line: 307, baseType: !2962, size: 1088)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2900, line: 79, size: 1088, elements: !2963)
!2963 = !{!2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !3010}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2962, file: !2900, line: 80, baseType: !204, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2962, file: !2900, line: 81, baseType: !204, size: 32, offset: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2962, file: !2900, line: 82, baseType: !204, size: 32, offset: 64)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2962, file: !2900, line: 83, baseType: !204, size: 32, offset: 96)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2962, file: !2900, line: 84, baseType: !204, size: 32, offset: 128)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2962, file: !2900, line: 85, baseType: !204, size: 32, offset: 160)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2962, file: !2900, line: 86, baseType: !204, size: 32, offset: 192)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2962, file: !2900, line: 88, baseType: !2918, size: 640, offset: 224)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2962, file: !2900, line: 89, baseType: !1470, size: 8, offset: 864)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2962, file: !2900, line: 90, baseType: !1470, size: 8, offset: 872)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2962, file: !2900, line: 91, baseType: !1470, size: 8, offset: 880)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2962, file: !2900, line: 92, baseType: !1470, size: 8, offset: 888)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2962, file: !2900, line: 93, baseType: !1470, size: 8, offset: 896)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2962, file: !2900, line: 94, baseType: !1470, size: 8, offset: 904)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2962, file: !2900, line: 95, baseType: !2979, size: 64, offset: 960)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2981, line: 11, size: 128, elements: !2982)
!2981 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2982 = !{!2983, !2984}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2980, file: !2981, line: 12, baseType: !398, size: 64)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2980, file: !2981, line: 13, baseType: !2985, size: 64, offset: 64)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2987, line: 56, size: 1344, elements: !2988)
!2987 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2988 = !{!2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2986, file: !2987, line: 61, baseType: !248, size: 64)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2986, file: !2987, line: 62, baseType: !248, size: 64, offset: 64)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2986, file: !2987, line: 63, baseType: !248, size: 64, offset: 128)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2986, file: !2987, line: 64, baseType: !248, size: 64, offset: 192)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2986, file: !2987, line: 65, baseType: !248, size: 64, offset: 256)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2986, file: !2987, line: 66, baseType: !248, size: 64, offset: 320)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2986, file: !2987, line: 68, baseType: !248, size: 64, offset: 384)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2986, file: !2987, line: 69, baseType: !248, size: 64, offset: 448)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2986, file: !2987, line: 70, baseType: !248, size: 64, offset: 512)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2986, file: !2987, line: 71, baseType: !248, size: 64, offset: 576)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2986, file: !2987, line: 72, baseType: !248, size: 64, offset: 640)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2986, file: !2987, line: 73, baseType: !248, size: 64, offset: 704)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2986, file: !2987, line: 74, baseType: !248, size: 64, offset: 768)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2986, file: !2987, line: 75, baseType: !248, size: 64, offset: 832)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2986, file: !2987, line: 76, baseType: !248, size: 64, offset: 896)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2986, file: !2987, line: 81, baseType: !248, size: 64, offset: 960)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2986, file: !2987, line: 83, baseType: !248, size: 64, offset: 1024)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2986, file: !2987, line: 84, baseType: !248, size: 64, offset: 1088)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2986, file: !2987, line: 85, baseType: !248, size: 64, offset: 1152)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2986, file: !2987, line: 86, baseType: !248, size: 64, offset: 1216)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2986, file: !2987, line: 87, baseType: !248, size: 64, offset: 1280)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2962, file: !2900, line: 96, baseType: !204, size: 32, offset: 1024)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2905, file: !2900, line: 308, baseType: !3012, size: 4608, align: 512)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2900, line: 289, size: 4608, align: 512, elements: !3013)
!3013 = !{!3014, !3015, !3022}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3012, file: !2900, line: 290, baseType: !2923, size: 4096, align: 128)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3012, file: !2900, line: 291, baseType: !3016, size: 512, offset: 4096)
!3016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2900, line: 268, size: 512, elements: !3017)
!3017 = !{!3018, !3019, !3020}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3016, file: !2900, line: 269, baseType: !239, size: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3016, file: !2900, line: 270, baseType: !239, size: 64, offset: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3016, file: !2900, line: 271, baseType: !3021, size: 384, offset: 128)
!3021 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 384, elements: !1742)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3012, file: !2900, line: 292, baseType: !3023, offset: 4608)
!3023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, elements: !1840)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2905, file: !2900, line: 309, baseType: !3025, size: 32768)
!3025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1470, size: 32768, elements: !3026)
!3026 = !{!3027}
!3027 = !DISubrange(count: 4096)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1331, file: !854, line: 378, baseType: !3029, size: 64, offset: 64)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1327, file: !854, line: 384, baseType: !1619, size: 192, offset: 192)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1104, file: !854, line: 500, baseType: !322, offset: 6656)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1104, file: !854, line: 501, baseType: !3033, size: 64, offset: 6656)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !854, line: 387, flags: DIFlagFwdDecl)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1104, file: !854, line: 516, baseType: !1830, size: 64, offset: 6720)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1104, file: !854, line: 519, baseType: !439, size: 64, offset: 6784)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1104, file: !854, line: 521, baseType: !3038, size: 64, offset: 6848)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !854, line: 521, flags: DIFlagFwdDecl)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1104, file: !854, line: 545, baseType: !879, size: 32, offset: 6912)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1104, file: !854, line: 548, baseType: !569, size: 8, offset: 6944)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1104, file: !854, line: 550, baseType: !3043, offset: 6952)
!3043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3044, line: 142, elements: !336)
!3044 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1104, file: !854, line: 554, baseType: !2236, size: 256, offset: 6976)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1104, file: !854, line: 557, baseType: !204, size: 32, offset: 7232)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1101, file: !854, line: 565, baseType: !2232, offset: 7296)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1097, file: !854, line: 151, baseType: !879, size: 32)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1089, file: !854, line: 156, baseType: !322, offset: 256)
!3050 = !DIDerivedType(tag: DW_TAG_member, scope: !858, file: !854, line: 159, baseType: !3051, size: 128)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !854, line: 159, size: 128, elements: !3052)
!3052 = !{!3053, !3117}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3051, file: !854, line: 161, baseType: !3054, size: 64)
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3055, size: 64)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !3056)
!3056 = !{!3057, !3067, !3088, !3089, !3090, !3091, !3092, !3104, !3105, !3106}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3055, file: !31, line: 111, baseType: !3058, size: 384)
!3058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !3059)
!3059 = !{!3060, !3062, !3063, !3064, !3065, !3066}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3058, file: !31, line: 20, baseType: !3061, size: 64)
!3061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !248)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3058, file: !31, line: 21, baseType: !3061, size: 64, offset: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3058, file: !31, line: 22, baseType: !3061, size: 64, offset: 128)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3058, file: !31, line: 23, baseType: !248, size: 64, offset: 192)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3058, file: !31, line: 24, baseType: !248, size: 64, offset: 256)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3058, file: !31, line: 25, baseType: !248, size: 64, offset: 320)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3055, file: !31, line: 112, baseType: !3068, size: 64, offset: 384)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 64)
!3069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3070, line: 105, size: 128, elements: !3071)
!3070 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3071 = !{!3072, !3073}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3069, file: !3070, line: 110, baseType: !248, size: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3069, file: !3070, line: 118, baseType: !3074, size: 64, offset: 64)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3070, line: 95, size: 448, elements: !3076)
!3076 = !{!3077, !3078, !3083, !3084, !3085, !3086, !3087}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3075, file: !3070, line: 96, baseType: !809, size: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3075, file: !3070, line: 97, baseType: !3079, size: 64, offset: 64)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3070, line: 60, baseType: !3081)
!3081 = !DISubroutineType(types: !3082)
!3082 = !{null, !3068}
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3075, file: !3070, line: 98, baseType: !3079, size: 64, offset: 128)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3075, file: !3070, line: 99, baseType: !569, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3075, file: !3070, line: 100, baseType: !569, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3075, file: !3070, line: 101, baseType: !452, size: 128, align: 64, offset: 256)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3075, file: !3070, line: 102, baseType: !3068, size: 64, offset: 384)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3055, file: !31, line: 113, baseType: !3069, size: 128, offset: 448)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3055, file: !31, line: 114, baseType: !1619, size: 192, offset: 576)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3055, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3055, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3055, file: !31, line: 117, baseType: !3093, size: 64, offset: 832)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3095)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !3096)
!3096 = !{!3097, !3098, !3102, !3103}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3095, file: !31, line: 73, baseType: !965, size: 64)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3095, file: !31, line: 78, baseType: !3099, size: 64, offset: 64)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = !DISubroutineType(types: !3101)
!3101 = !{null, !3054}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3095, file: !31, line: 83, baseType: !3099, size: 64, offset: 128)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3095, file: !31, line: 89, baseType: !1153, size: 64, offset: 192)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3055, file: !31, line: 118, baseType: !208, size: 64, offset: 896)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3055, file: !31, line: 119, baseType: !265, size: 32, offset: 960)
!3106 = !DIDerivedType(tag: DW_TAG_member, scope: !3055, file: !31, line: 120, baseType: !3107, size: 128, offset: 1024)
!3107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3055, file: !31, line: 120, size: 128, elements: !3108)
!3108 = !{!3109, !3115}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3107, file: !31, line: 121, baseType: !3110, size: 128)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3111, line: 6, size: 128, elements: !3112)
!3111 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3112 = !{!3113, !3114}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3110, file: !3111, line: 7, baseType: !239, size: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3110, file: !3111, line: 8, baseType: !239, size: 64, offset: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3107, file: !31, line: 122, baseType: !3116)
!3116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3110, elements: !1840)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3051, file: !854, line: 162, baseType: !208, size: 64, offset: 64)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !858, file: !854, line: 176, baseType: !452, size: 128, align: 64)
!3119 = !DIDerivedType(tag: DW_TAG_member, scope: !853, file: !854, line: 179, baseType: !3120, size: 32, offset: 384)
!3120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !853, file: !854, line: 179, size: 32, elements: !3121)
!3121 = !{!3122, !3123, !3124, !3125}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3120, file: !854, line: 184, baseType: !879, size: 32)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3120, file: !854, line: 192, baseType: !7, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3120, file: !854, line: 194, baseType: !7, size: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3120, file: !854, line: 195, baseType: !265, size: 32)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !853, file: !854, line: 199, baseType: !879, size: 32, offset: 416)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !739, file: !44, line: 1964, baseType: !3128, size: 64, offset: 1344)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 64)
!3129 = !DISubroutineType(types: !3130)
!3130 = !{!398, !678, !3131}
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !3133, line: 12, size: 256, elements: !3134)
!3133 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!3134 = !{!3135, !3136, !3137, !3138, !3139}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !3132, file: !3133, line: 13, baseType: !875, size: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !3132, file: !3133, line: 16, baseType: !265, size: 32, offset: 32)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !3132, file: !3133, line: 23, baseType: !248, size: 64, offset: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !3132, file: !3133, line: 30, baseType: !248, size: 64, offset: 128)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !3132, file: !3133, line: 33, baseType: !3140, size: 64, offset: 192)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 64)
!3141 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !854, line: 27, flags: DIFlagFwdDecl)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !739, file: !44, line: 1966, baseType: !3128, size: 64, offset: 1408)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !679, file: !44, line: 1424, baseType: !3144, size: 64, offset: 448)
!3144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3145, size: 64)
!3145 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3146)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !3147)
!3147 = !{!3148, !3194, !3198, !3202, !3203, !3204, !3205, !3206, !3211, !3216, !3220}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !3146, file: !38, line: 323, baseType: !3149, size: 64)
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 64)
!3150 = !DISubroutineType(types: !3151)
!3151 = !{!265, !3152}
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !3154)
!3154 = !{!3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3179, !3180, !3181}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !3153, file: !38, line: 295, baseType: !721, size: 128)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !3153, file: !38, line: 296, baseType: !214, size: 128, offset: 128)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !3153, file: !38, line: 297, baseType: !214, size: 128, offset: 256)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !3153, file: !38, line: 298, baseType: !214, size: 128, offset: 384)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !3153, file: !38, line: 299, baseType: !805, size: 192, offset: 512)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !3153, file: !38, line: 300, baseType: !322, offset: 704)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !3153, file: !38, line: 301, baseType: !879, size: 32, offset: 704)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !3153, file: !38, line: 302, baseType: !678, size: 64, offset: 768)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !3153, file: !38, line: 303, baseType: !3164, size: 64, offset: 832)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !3165)
!3165 = !{!3166, !3178}
!3166 = !DIDerivedType(tag: DW_TAG_member, scope: !3164, file: !38, line: 69, baseType: !3167, size: 32)
!3167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3164, file: !38, line: 69, size: 32, elements: !3168)
!3168 = !{!3169, !3170, !3171}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3167, file: !38, line: 70, baseType: !514, size: 32)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3167, file: !38, line: 71, baseType: !522, size: 32)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !3167, file: !38, line: 72, baseType: !3172, size: 32)
!3172 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !3173, line: 24, baseType: !3174)
!3173 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!3174 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3173, line: 22, size: 32, elements: !3175)
!3175 = !{!3176}
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3174, file: !3173, line: 23, baseType: !3177, size: 32)
!3177 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !3173, line: 20, baseType: !520)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3164, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !3153, file: !38, line: 304, baseType: !610, size: 64, offset: 896)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !3153, file: !38, line: 305, baseType: !248, size: 64, offset: 960)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !3153, file: !38, line: 306, baseType: !3182, size: 576, offset: 1024)
!3182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !3183)
!3183 = !{!3184, !3186, !3187, !3188, !3189, !3190, !3191, !3192, !3193}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !3182, file: !38, line: 206, baseType: !3185, size: 64)
!3185 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !612)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !3182, file: !38, line: 207, baseType: !3185, size: 64, offset: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !3182, file: !38, line: 208, baseType: !3185, size: 64, offset: 128)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !3182, file: !38, line: 209, baseType: !3185, size: 64, offset: 192)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !3182, file: !38, line: 210, baseType: !3185, size: 64, offset: 256)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !3182, file: !38, line: 211, baseType: !3185, size: 64, offset: 320)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !3182, file: !38, line: 212, baseType: !3185, size: 64, offset: 384)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !3182, file: !38, line: 213, baseType: !618, size: 64, offset: 448)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !3182, file: !38, line: 214, baseType: !618, size: 64, offset: 512)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !3146, file: !38, line: 324, baseType: !3195, size: 64, offset: 64)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3196 = !DISubroutineType(types: !3197)
!3197 = !{!3152, !678, !265}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !3146, file: !38, line: 325, baseType: !3199, size: 64, offset: 128)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = !DISubroutineType(types: !3201)
!3201 = !{null, !3152}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !3146, file: !38, line: 326, baseType: !3149, size: 64, offset: 192)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !3146, file: !38, line: 327, baseType: !3149, size: 64, offset: 256)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !3146, file: !38, line: 328, baseType: !3149, size: 64, offset: 320)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !3146, file: !38, line: 329, baseType: !767, size: 64, offset: 384)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !3146, file: !38, line: 332, baseType: !3207, size: 64, offset: 448)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 64)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{!3210, !508}
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !3146, file: !38, line: 333, baseType: !3212, size: 64, offset: 512)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 64)
!3213 = !DISubroutineType(types: !3214)
!3214 = !{!265, !508, !3215}
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !3146, file: !38, line: 335, baseType: !3217, size: 64, offset: 576)
!3217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3218, size: 64)
!3218 = !DISubroutineType(types: !3219)
!3219 = !{!265, !508, !3210}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3146, file: !38, line: 337, baseType: !3221, size: 64, offset: 640)
!3221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3222, size: 64)
!3222 = !DISubroutineType(types: !3223)
!3223 = !{!265, !678, !3224}
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !679, file: !44, line: 1425, baseType: !3226, size: 64, offset: 512)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3228)
!3228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !3229)
!3229 = !{!3230, !3234, !3235, !3239, !3240, !3241, !3256, !3279, !3283, !3284, !3307}
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !3228, file: !38, line: 429, baseType: !3231, size: 64)
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{!265, !678, !265, !265, !628}
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !3228, file: !38, line: 430, baseType: !767, size: 64, offset: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !3228, file: !38, line: 431, baseType: !3236, size: 64, offset: 128)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!3237 = !DISubroutineType(types: !3238)
!3238 = !{!265, !678, !7}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !3228, file: !38, line: 432, baseType: !3236, size: 64, offset: 192)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !3228, file: !38, line: 433, baseType: !767, size: 64, offset: 256)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !3228, file: !38, line: 434, baseType: !3242, size: 64, offset: 320)
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 64)
!3243 = !DISubroutineType(types: !3244)
!3244 = !{!265, !678, !265, !3245}
!3245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3246, size: 64)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !3247)
!3247 = !{!3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !3246, file: !38, line: 416, baseType: !265, size: 32)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !3246, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !3246, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !3246, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !3246, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !3246, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !3246, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !3246, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !3228, file: !38, line: 435, baseType: !3257, size: 64, offset: 384)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = !DISubroutineType(types: !3259)
!3259 = !{!265, !678, !3164, !3260}
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !3262)
!3262 = !{!3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !3261, file: !38, line: 344, baseType: !265, size: 32)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !3261, file: !38, line: 345, baseType: !239, size: 64, offset: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !3261, file: !38, line: 346, baseType: !239, size: 64, offset: 128)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !3261, file: !38, line: 347, baseType: !239, size: 64, offset: 192)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !3261, file: !38, line: 348, baseType: !239, size: 64, offset: 256)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !3261, file: !38, line: 349, baseType: !239, size: 64, offset: 320)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !3261, file: !38, line: 350, baseType: !239, size: 64, offset: 384)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !3261, file: !38, line: 351, baseType: !815, size: 64, offset: 448)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !3261, file: !38, line: 353, baseType: !815, size: 64, offset: 512)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !3261, file: !38, line: 354, baseType: !265, size: 32, offset: 576)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !3261, file: !38, line: 355, baseType: !265, size: 32, offset: 608)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !3261, file: !38, line: 356, baseType: !239, size: 64, offset: 640)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !3261, file: !38, line: 357, baseType: !239, size: 64, offset: 704)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !3261, file: !38, line: 358, baseType: !239, size: 64, offset: 768)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !3261, file: !38, line: 359, baseType: !815, size: 64, offset: 832)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !3261, file: !38, line: 360, baseType: !265, size: 32, offset: 896)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !3228, file: !38, line: 436, baseType: !3280, size: 64, offset: 448)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3281, size: 64)
!3281 = !DISubroutineType(types: !3282)
!3282 = !{!265, !678, !3224, !3260}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !3228, file: !38, line: 438, baseType: !3257, size: 64, offset: 512)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !3228, file: !38, line: 439, baseType: !3285, size: 64, offset: 576)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 64)
!3286 = !DISubroutineType(types: !3287)
!3287 = !{!265, !678, !3288}
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3289, size: 64)
!3289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !3290)
!3290 = !{!3291, !3292}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !3289, file: !38, line: 410, baseType: !7, size: 32)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !3289, file: !38, line: 411, baseType: !3293, size: 1344, offset: 64)
!3293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3294, size: 1344, elements: !364)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !3295)
!3295 = !{!3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3306}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3294, file: !38, line: 396, baseType: !7, size: 32)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !3294, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !3294, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !3294, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !3294, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !3294, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !3294, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3294, file: !38, line: 404, baseType: !241, size: 64, offset: 256)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3294, file: !38, line: 405, baseType: !3305, size: 64, offset: 320)
!3305 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !215, line: 126, baseType: !239)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !3294, file: !38, line: 406, baseType: !3305, size: 64, offset: 384)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !3228, file: !38, line: 440, baseType: !3236, size: 64, offset: 640)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !679, file: !44, line: 1426, baseType: !3309, size: 64, offset: 576)
!3309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3310, size: 64)
!3310 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3311)
!3311 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !679, file: !44, line: 1427, baseType: !248, size: 64, offset: 640)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !679, file: !44, line: 1428, baseType: !248, size: 64, offset: 704)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !679, file: !44, line: 1429, baseType: !248, size: 64, offset: 768)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !679, file: !44, line: 1430, baseType: !469, size: 64, offset: 832)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !679, file: !44, line: 1431, baseType: !899, size: 256, offset: 896)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !679, file: !44, line: 1432, baseType: !265, size: 32, offset: 1152)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !679, file: !44, line: 1433, baseType: !879, size: 32, offset: 1184)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !679, file: !44, line: 1437, baseType: !3320, size: 64, offset: 1216)
!3320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3321, size: 64)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 64)
!3322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3323)
!3323 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !679, file: !44, line: 1449, baseType: !3325, size: 64, offset: 1280)
!3325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !485, line: 34, size: 64, elements: !3326)
!3326 = !{!3327}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3325, file: !485, line: 35, baseType: !488, size: 64)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !679, file: !44, line: 1450, baseType: !214, size: 128, offset: 1344)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !679, file: !44, line: 1451, baseType: !3330, size: 64, offset: 1472)
!3330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3331, size: 64)
!3331 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !679, file: !44, line: 1452, baseType: !2655, size: 64, offset: 1536)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !679, file: !44, line: 1453, baseType: !3334, size: 64, offset: 1600)
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3335, size: 64)
!3335 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !679, file: !44, line: 1454, baseType: !721, size: 128, offset: 1664)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !679, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !679, file: !44, line: 1456, baseType: !3339, size: 2432, offset: 1856)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !3340)
!3340 = !{!3341, !3342, !3343, !3345, !3377}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3339, file: !38, line: 519, baseType: !7, size: 32)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3339, file: !38, line: 520, baseType: !899, size: 256, offset: 64)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3339, file: !38, line: 521, baseType: !3344, size: 192, offset: 320)
!3344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !508, size: 192, elements: !364)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3339, file: !38, line: 522, baseType: !3346, size: 1728, offset: 512)
!3346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3347, size: 1728, elements: !364)
!3347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !3348)
!3348 = !{!3349, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3347, file: !38, line: 223, baseType: !3350, size: 64)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !3352)
!3352 = !{!3353, !3354, !3367, !3368}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3351, file: !38, line: 444, baseType: !265, size: 32)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3351, file: !38, line: 445, baseType: !3355, size: 64, offset: 64)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3357)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !3358)
!3358 = !{!3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3357, file: !38, line: 311, baseType: !767, size: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3357, file: !38, line: 312, baseType: !767, size: 64, offset: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3357, file: !38, line: 313, baseType: !767, size: 64, offset: 128)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3357, file: !38, line: 314, baseType: !767, size: 64, offset: 192)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3357, file: !38, line: 315, baseType: !3149, size: 64, offset: 256)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3357, file: !38, line: 316, baseType: !3149, size: 64, offset: 320)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3357, file: !38, line: 317, baseType: !3149, size: 64, offset: 384)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3357, file: !38, line: 318, baseType: !3221, size: 64, offset: 448)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3351, file: !38, line: 446, baseType: !712, size: 64, offset: 128)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3351, file: !38, line: 447, baseType: !3350, size: 64, offset: 192)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3347, file: !38, line: 224, baseType: !265, size: 32, offset: 64)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3347, file: !38, line: 226, baseType: !214, size: 128, offset: 128)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3347, file: !38, line: 227, baseType: !248, size: 64, offset: 256)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3347, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3347, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3347, file: !38, line: 230, baseType: !3185, size: 64, offset: 384)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3347, file: !38, line: 231, baseType: !3185, size: 64, offset: 448)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3347, file: !38, line: 232, baseType: !208, size: 64, offset: 512)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3339, file: !38, line: 523, baseType: !3378, size: 192, offset: 2240)
!3378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3355, size: 192, elements: !364)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !679, file: !44, line: 1458, baseType: !3380, size: 2112, offset: 4288)
!3380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !3381)
!3381 = !{!3382, !3383, !3384}
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3380, file: !44, line: 1411, baseType: !265, size: 32)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3380, file: !44, line: 1412, baseType: !1598, size: 128, offset: 64)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3380, file: !44, line: 1413, baseType: !3385, size: 1920, offset: 192)
!3385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3386, size: 1920, elements: !364)
!3386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3387, line: 12, size: 640, elements: !3388)
!3387 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3388 = !{!3389, !3397, !3399, !3404, !3405}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3386, file: !3387, line: 13, baseType: !3390, size: 320)
!3390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3391, line: 17, size: 320, elements: !3392)
!3391 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3392 = !{!3393, !3394, !3395, !3396}
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3390, file: !3391, line: 18, baseType: !265, size: 32)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3390, file: !3391, line: 19, baseType: !265, size: 32, offset: 32)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3390, file: !3391, line: 20, baseType: !1598, size: 128, offset: 64)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3390, file: !3391, line: 22, baseType: !452, size: 128, align: 64, offset: 192)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3386, file: !3387, line: 14, baseType: !3398, size: 64, offset: 320)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3386, file: !3387, line: 15, baseType: !3400, size: 64, offset: 384)
!3400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3401, line: 16, size: 64, elements: !3402)
!3401 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3402 = !{!3403}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3400, file: !3401, line: 17, baseType: !1334, size: 64)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3386, file: !3387, line: 16, baseType: !1598, size: 128, offset: 448)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3386, file: !3387, line: 17, baseType: !879, size: 32, offset: 576)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !679, file: !44, line: 1465, baseType: !208, size: 64, offset: 6400)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !679, file: !44, line: 1468, baseType: !204, size: 32, offset: 6464)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !679, file: !44, line: 1470, baseType: !618, size: 64, offset: 6528)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !679, file: !44, line: 1471, baseType: !618, size: 64, offset: 6592)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !679, file: !44, line: 1473, baseType: !206, size: 32, offset: 6656)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !679, file: !44, line: 1474, baseType: !3412, size: 64, offset: 6720)
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 64)
!3413 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !679, file: !44, line: 1477, baseType: !3415, size: 256, offset: 6784)
!3415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 256, elements: !2948)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !679, file: !44, line: 1478, baseType: !3417, size: 128, offset: 7040)
!3417 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3418, line: 18, baseType: !3419)
!3418 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3419 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3418, line: 16, size: 128, elements: !3420)
!3420 = !{!3421}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3419, file: !3418, line: 17, baseType: !3422, size: 128)
!3422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 128, elements: !1852)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !679, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !679, file: !44, line: 1481, baseType: !3425, size: 32, offset: 7200)
!3425 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !215, line: 150, baseType: !7)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !679, file: !44, line: 1487, baseType: !805, size: 192, offset: 7232)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !679, file: !44, line: 1493, baseType: !244, size: 64, offset: 7424)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !679, file: !44, line: 1495, baseType: !3429, size: 64, offset: 7488)
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3431)
!3431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !467, line: 135, size: 1024, align: 512, elements: !3432)
!3432 = !{!3433, !3437, !3438, !3445, !3451, !3455, !3459, !3463, !3464, !3468, !3472, !3477, !3481}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !3431, file: !467, line: 136, baseType: !3434, size: 64)
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = !DISubroutineType(types: !3436)
!3436 = !{!265, !469, !7}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !3431, file: !467, line: 137, baseType: !3434, size: 64, offset: 64)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !3431, file: !467, line: 138, baseType: !3439, size: 64, offset: 128)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 64)
!3440 = !DISubroutineType(types: !3441)
!3441 = !{!265, !3442, !3444}
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !470)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !3431, file: !467, line: 139, baseType: !3446, size: 64, offset: 192)
!3446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3447, size: 64)
!3447 = !DISubroutineType(types: !3448)
!3448 = !{!265, !3442, !7, !244, !3449}
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !493)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !3431, file: !467, line: 141, baseType: !3452, size: 64, offset: 256)
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3453, size: 64)
!3453 = !DISubroutineType(types: !3454)
!3454 = !{!265, !3442}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !3431, file: !467, line: 142, baseType: !3456, size: 64, offset: 320)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DISubroutineType(types: !3458)
!3458 = !{!265, !469}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !3431, file: !467, line: 143, baseType: !3460, size: 64, offset: 384)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{null, !469}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !3431, file: !467, line: 144, baseType: !3460, size: 64, offset: 448)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !3431, file: !467, line: 145, baseType: !3465, size: 64, offset: 512)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 64)
!3466 = !DISubroutineType(types: !3467)
!3467 = !{null, !469, !508}
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !3431, file: !467, line: 146, baseType: !3469, size: 64, offset: 576)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = !DISubroutineType(types: !3471)
!3471 = !{!363, !469, !363, !265}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !3431, file: !467, line: 147, baseType: !3473, size: 64, offset: 640)
!3473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 64)
!3474 = !DISubroutineType(types: !3475)
!3475 = !{!465, !3476}
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !3431, file: !467, line: 148, baseType: !3478, size: 64, offset: 704)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{!265, !628, !569}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !3431, file: !467, line: 149, baseType: !3482, size: 64, offset: 768)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3483, size: 64)
!3483 = !DISubroutineType(types: !3484)
!3484 = !{!469, !469, !3485}
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3486, size: 64)
!3486 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !509)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !679, file: !44, line: 1500, baseType: !265, size: 32, offset: 7552)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !679, file: !44, line: 1502, baseType: !3489, size: 448, offset: 7616)
!3489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !3133, line: 60, size: 448, elements: !3490)
!3490 = !{!3491, !3496, !3497, !3498, !3499, !3500, !3501}
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3489, file: !3133, line: 61, baseType: !3492, size: 64)
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 64)
!3493 = !DISubroutineType(types: !3494)
!3494 = !{!248, !3495, !3131}
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3489, size: 64)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3489, file: !3133, line: 63, baseType: !3492, size: 64, offset: 64)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3489, file: !3133, line: 66, baseType: !398, size: 64, offset: 128)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3489, file: !3133, line: 67, baseType: !265, size: 32, offset: 192)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3489, file: !3133, line: 68, baseType: !7, size: 32, offset: 224)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3489, file: !3133, line: 71, baseType: !214, size: 128, offset: 256)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3489, file: !3133, line: 77, baseType: !3502, size: 64, offset: 384)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !679, file: !44, line: 1505, baseType: !809, size: 64, offset: 8064)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !679, file: !44, line: 1508, baseType: !809, size: 64, offset: 8128)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !679, file: !44, line: 1511, baseType: !265, size: 32, offset: 8192)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !679, file: !44, line: 1514, baseType: !1034, size: 32, offset: 8224)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !679, file: !44, line: 1517, baseType: !3508, size: 64, offset: 8256)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2237, line: 18, flags: DIFlagFwdDecl)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !679, file: !44, line: 1518, baseType: !717, size: 64, offset: 8320)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !679, file: !44, line: 1525, baseType: !1830, size: 64, offset: 8384)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !679, file: !44, line: 1532, baseType: !3513, size: 64, offset: 8448)
!3513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3514, line: 52, size: 64, elements: !3515)
!3514 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3515 = !{!3516}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3513, file: !3514, line: 53, baseType: !3517, size: 64)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3514, line: 40, size: 256, elements: !3519)
!3519 = !{!3520, !3521, !3526}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3518, file: !3514, line: 42, baseType: !322)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3518, file: !3514, line: 44, baseType: !3522, size: 192)
!3522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3514, line: 28, size: 192, elements: !3523)
!3523 = !{!3524, !3525}
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3522, file: !3514, line: 29, baseType: !214, size: 128)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3522, file: !3514, line: 31, baseType: !398, size: 64, offset: 128)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3518, file: !3514, line: 49, baseType: !398, size: 64, offset: 192)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !679, file: !44, line: 1533, baseType: !3513, size: 64, offset: 8512)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !679, file: !44, line: 1534, baseType: !452, size: 128, align: 64, offset: 8576)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !679, file: !44, line: 1535, baseType: !2236, size: 256, offset: 8704)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !679, file: !44, line: 1537, baseType: !805, size: 192, offset: 8960)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !679, file: !44, line: 1542, baseType: !265, size: 32, offset: 9152)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !679, file: !44, line: 1545, baseType: !322, offset: 9184)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !679, file: !44, line: 1546, baseType: !214, size: 128, offset: 9216)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !679, file: !44, line: 1548, baseType: !322, offset: 9344)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !679, file: !44, line: 1549, baseType: !214, size: 128, offset: 9344)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !509, file: !44, line: 624, baseType: !865, size: 64, offset: 256)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !509, file: !44, line: 631, baseType: !248, size: 64, offset: 320)
!3538 = !DIDerivedType(tag: DW_TAG_member, scope: !509, file: !44, line: 639, baseType: !3539, size: 32, offset: 384)
!3539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !509, file: !44, line: 639, size: 32, elements: !3540)
!3540 = !{!3541, !3543}
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3539, file: !44, line: 640, baseType: !3542, size: 32)
!3542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3539, file: !44, line: 641, baseType: !7, size: 32)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !509, file: !44, line: 643, baseType: !592, size: 32, offset: 416)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !509, file: !44, line: 644, baseType: !610, size: 64, offset: 448)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !509, file: !44, line: 645, baseType: !614, size: 128, offset: 512)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !509, file: !44, line: 646, baseType: !614, size: 128, offset: 640)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !509, file: !44, line: 647, baseType: !614, size: 128, offset: 768)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !509, file: !44, line: 648, baseType: !322, offset: 896)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !509, file: !44, line: 649, baseType: !301, size: 16, offset: 896)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !509, file: !44, line: 650, baseType: !1470, size: 8, offset: 912)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !509, file: !44, line: 651, baseType: !1470, size: 8, offset: 920)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !509, file: !44, line: 652, baseType: !3305, size: 64, offset: 960)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !509, file: !44, line: 659, baseType: !248, size: 64, offset: 1024)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !509, file: !44, line: 660, baseType: !899, size: 256, offset: 1088)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !509, file: !44, line: 662, baseType: !248, size: 64, offset: 1344)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !509, file: !44, line: 663, baseType: !248, size: 64, offset: 1408)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !509, file: !44, line: 665, baseType: !721, size: 128, offset: 1472)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !509, file: !44, line: 666, baseType: !214, size: 128, offset: 1600)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !509, file: !44, line: 675, baseType: !214, size: 128, offset: 1728)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !509, file: !44, line: 676, baseType: !214, size: 128, offset: 1856)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !509, file: !44, line: 677, baseType: !214, size: 128, offset: 1984)
!3563 = !DIDerivedType(tag: DW_TAG_member, scope: !509, file: !44, line: 678, baseType: !3564, size: 128, offset: 2112)
!3564 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !509, file: !44, line: 678, size: 128, elements: !3565)
!3565 = !{!3566, !3567}
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3564, file: !44, line: 679, baseType: !717, size: 64)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3564, file: !44, line: 680, baseType: !452, size: 128, align: 64)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !509, file: !44, line: 682, baseType: !811, size: 64, offset: 2240)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !509, file: !44, line: 683, baseType: !811, size: 64, offset: 2304)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !509, file: !44, line: 684, baseType: !879, size: 32, offset: 2368)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !509, file: !44, line: 685, baseType: !879, size: 32, offset: 2400)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !509, file: !44, line: 686, baseType: !879, size: 32, offset: 2432)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !509, file: !44, line: 688, baseType: !879, size: 32, offset: 2464)
!3574 = !DIDerivedType(tag: DW_TAG_member, scope: !509, file: !44, line: 690, baseType: !3575, size: 64, offset: 2496)
!3575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !509, file: !44, line: 690, size: 64, elements: !3576)
!3576 = !{!3577, !3578}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3575, file: !44, line: 691, baseType: !1951, size: 64)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3575, file: !44, line: 692, baseType: !746, size: 64)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !509, file: !44, line: 694, baseType: !3580, size: 64, offset: 2560)
!3580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3581, size: 64)
!3581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3582)
!3582 = !{!3583, !3584, !3585, !3586}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3581, file: !44, line: 1101, baseType: !322)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3581, file: !44, line: 1102, baseType: !214, size: 128)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3581, file: !44, line: 1103, baseType: !214, size: 128, offset: 128)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3581, file: !44, line: 1104, baseType: !214, size: 128, offset: 256)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !509, file: !44, line: 695, baseType: !866, size: 1216, align: 64, offset: 2624)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !509, file: !44, line: 696, baseType: !214, size: 128, offset: 3840)
!3589 = !DIDerivedType(tag: DW_TAG_member, scope: !509, file: !44, line: 697, baseType: !3590, size: 64, offset: 3968)
!3590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !509, file: !44, line: 697, size: 64, elements: !3591)
!3591 = !{!3592, !3593, !3594, !3595, !3596}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3590, file: !44, line: 698, baseType: !2146, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3590, file: !44, line: 699, baseType: !3330, size: 64)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3590, file: !44, line: 700, baseType: !1944, size: 64)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3590, file: !44, line: 701, baseType: !363, size: 64)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3590, file: !44, line: 702, baseType: !7, size: 32)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !509, file: !44, line: 705, baseType: !206, size: 32, offset: 4032)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !509, file: !44, line: 708, baseType: !206, size: 32, offset: 4064)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !509, file: !44, line: 709, baseType: !3412, size: 64, offset: 4096)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !509, file: !44, line: 720, baseType: !208, size: 64, offset: 4160)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !470, file: !467, line: 98, baseType: !3602, size: 256, offset: 448)
!3602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !292, size: 256, elements: !2948)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !470, file: !467, line: 101, baseType: !3604, size: 32, offset: 704)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3605, line: 25, size: 32, elements: !3606)
!3605 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3606 = !{!3607}
!3607 = !DIDerivedType(tag: DW_TAG_member, scope: !3604, file: !3605, line: 26, baseType: !3608, size: 32)
!3608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3604, file: !3605, line: 26, size: 32, elements: !3609)
!3609 = !{!3610}
!3610 = !DIDerivedType(tag: DW_TAG_member, scope: !3608, file: !3605, line: 30, baseType: !3611, size: 32)
!3611 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3608, file: !3605, line: 30, size: 32, elements: !3612)
!3612 = !{!3613, !3614}
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3611, file: !3605, line: 31, baseType: !322)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3611, file: !3605, line: 32, baseType: !265, size: 32)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !470, file: !467, line: 102, baseType: !3429, size: 64, offset: 768)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !470, file: !467, line: 103, baseType: !678, size: 64, offset: 832)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !470, file: !467, line: 104, baseType: !248, size: 64, offset: 896)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !470, file: !467, line: 105, baseType: !208, size: 64, offset: 960)
!3619 = !DIDerivedType(tag: DW_TAG_member, scope: !470, file: !467, line: 107, baseType: !3620, size: 128, offset: 1024)
!3620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !470, file: !467, line: 107, size: 128, elements: !3621)
!3621 = !{!3622, !3623}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3620, file: !467, line: 108, baseType: !214, size: 128)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3620, file: !467, line: 109, baseType: !3624, size: 64)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !470, file: !467, line: 111, baseType: !214, size: 128, offset: 1152)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !470, file: !467, line: 112, baseType: !214, size: 128, offset: 1280)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !470, file: !467, line: 120, baseType: !3628, size: 128, offset: 1408)
!3628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !470, file: !467, line: 116, size: 128, elements: !3629)
!3629 = !{!3630, !3631, !3632}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3628, file: !467, line: 117, baseType: !721, size: 128)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3628, file: !467, line: 118, baseType: !484, size: 128)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3628, file: !467, line: 119, baseType: !452, size: 128, align: 64)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !440, file: !44, line: 922, baseType: !508, size: 64, offset: 256)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !440, file: !44, line: 923, baseType: !1951, size: 64, offset: 320)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !440, file: !44, line: 929, baseType: !322, offset: 384)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !440, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !440, file: !44, line: 931, baseType: !809, size: 64, offset: 448)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !440, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !440, file: !44, line: 933, baseType: !3425, size: 32, offset: 544)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !440, file: !44, line: 934, baseType: !805, size: 192, offset: 576)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !440, file: !44, line: 935, baseType: !610, size: 64, offset: 768)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !440, file: !44, line: 936, baseType: !3643, size: 192, offset: 832)
!3643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3644)
!3644 = !{!3645, !3646, !3647, !3648, !3649, !3650}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3643, file: !44, line: 886, baseType: !2050)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3643, file: !44, line: 887, baseType: !1588, size: 64)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3643, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3643, file: !44, line: 889, baseType: !514, size: 32, offset: 96)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3643, file: !44, line: 889, baseType: !514, size: 32, offset: 128)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3643, file: !44, line: 890, baseType: !265, size: 32, offset: 160)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !440, file: !44, line: 937, baseType: !1664, size: 64, offset: 1024)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !440, file: !44, line: 938, baseType: !3653, size: 256, offset: 1088)
!3653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3654)
!3654 = !{!3655, !3656, !3657, !3658, !3659, !3660}
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3653, file: !44, line: 897, baseType: !248, size: 64)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3653, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3653, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3653, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3653, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3653, file: !44, line: 904, baseType: !610, size: 64, offset: 192)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !440, file: !44, line: 940, baseType: !239, size: 64, offset: 1344)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !440, file: !44, line: 945, baseType: !208, size: 64, offset: 1408)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !440, file: !44, line: 949, baseType: !214, size: 128, offset: 1472)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !440, file: !44, line: 950, baseType: !214, size: 128, offset: 1600)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !440, file: !44, line: 952, baseType: !865, size: 64, offset: 1728)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !440, file: !44, line: 953, baseType: !1034, size: 32, offset: 1792)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !440, file: !44, line: 954, baseType: !1034, size: 32, offset: 1824)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !430, file: !388, line: 174, baseType: !436, size: 64, offset: 320)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !430, file: !388, line: 176, baseType: !3670, size: 64, offset: 384)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = !DISubroutineType(types: !3672)
!3672 = !{!265, !439, !315, !429, !1107}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !418, file: !388, line: 90, baseType: !413, size: 64, offset: 192)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !418, file: !388, line: 91, baseType: !3675, size: 64, offset: 256)
!3675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !378, file: !310, line: 143, baseType: !3677, size: 64, offset: 256)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{!3680, !315}
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 64)
!3681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3682)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3683)
!3683 = !{!3684, !3685, !3689, !3693, !3699, !3703}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3682, file: !61, line: 40, baseType: !60, size: 32)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3682, file: !61, line: 41, baseType: !3686, size: 64, offset: 64)
!3686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3687, size: 64)
!3687 = !DISubroutineType(types: !3688)
!3688 = !{!569}
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3682, file: !61, line: 42, baseType: !3690, size: 64, offset: 128)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DISubroutineType(types: !3692)
!3692 = !{!208}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3682, file: !61, line: 43, baseType: !3694, size: 64, offset: 192)
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 64)
!3695 = !DISubroutineType(types: !3696)
!3696 = !{!2845, !3697}
!3697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3698, size: 64)
!3698 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3682, file: !61, line: 44, baseType: !3700, size: 64, offset: 256)
!3700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3701, size: 64)
!3701 = !DISubroutineType(types: !3702)
!3702 = !{!2845}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3682, file: !61, line: 45, baseType: !547, size: 64, offset: 320)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !378, file: !310, line: 144, baseType: !3705, size: 64, offset: 320)
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3706, size: 64)
!3706 = !DISubroutineType(types: !3707)
!3707 = !{!2845, !315}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !378, file: !310, line: 145, baseType: !3709, size: 64, offset: 384)
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3710, size: 64)
!3710 = !DISubroutineType(types: !3711)
!3711 = !{null, !315, !3712, !3713}
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !309, file: !310, line: 70, baseType: !3715, size: 64, offset: 384)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 64)
!3716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !698, line: 123, size: 1024, elements: !3717)
!3717 = !{!3718, !3719, !3720, !3721, !3722, !3723, !3724, !3725, !3834, !3835, !3836, !3837, !3838}
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3716, file: !698, line: 124, baseType: !879, size: 32)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3716, file: !698, line: 125, baseType: !879, size: 32, offset: 32)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3716, file: !698, line: 135, baseType: !3715, size: 64, offset: 64)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3716, file: !698, line: 136, baseType: !244, size: 64, offset: 128)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3716, file: !698, line: 138, baseType: !892, size: 192, align: 64, offset: 192)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3716, file: !698, line: 140, baseType: !2845, size: 64, offset: 384)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3716, file: !698, line: 141, baseType: !7, size: 32, offset: 448)
!3725 = !DIDerivedType(tag: DW_TAG_member, scope: !3716, file: !698, line: 142, baseType: !3726, size: 256, offset: 512)
!3726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3716, file: !698, line: 142, size: 256, elements: !3727)
!3727 = !{!3728, !3774, !3778}
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3726, file: !698, line: 143, baseType: !3729, size: 192)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !698, line: 91, size: 192, elements: !3730)
!3730 = !{!3731, !3732, !3733}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3729, file: !698, line: 92, baseType: !248, size: 64)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3729, file: !698, line: 94, baseType: !888, size: 64, offset: 64)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3729, file: !698, line: 100, baseType: !3734, size: 64, offset: 128)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 64)
!3735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !698, line: 180, size: 704, elements: !3736)
!3736 = !{!3737, !3738, !3739, !3746, !3747, !3748, !3772, !3773}
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3735, file: !698, line: 182, baseType: !3715, size: 64)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3735, file: !698, line: 183, baseType: !7, size: 32, offset: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3735, file: !698, line: 186, baseType: !3740, size: 192, offset: 128)
!3740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3741, line: 19, size: 192, elements: !3742)
!3741 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3742 = !{!3743, !3744, !3745}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3740, file: !3741, line: 20, baseType: !870, size: 128)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3740, file: !3741, line: 21, baseType: !7, size: 32, offset: 128)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3740, file: !3741, line: 22, baseType: !7, size: 32, offset: 160)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3735, file: !698, line: 187, baseType: !204, size: 32, offset: 320)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3735, file: !698, line: 188, baseType: !204, size: 32, offset: 352)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3735, file: !698, line: 189, baseType: !3749, size: 64, offset: 384)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !698, line: 168, size: 320, elements: !3751)
!3751 = !{!3752, !3756, !3760, !3764, !3768}
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3750, file: !698, line: 169, baseType: !3753, size: 64)
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{!265, !793, !3734}
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3750, file: !698, line: 171, baseType: !3757, size: 64, offset: 64)
!3757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3758, size: 64)
!3758 = !DISubroutineType(types: !3759)
!3759 = !{!265, !3715, !244, !404}
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3750, file: !698, line: 173, baseType: !3761, size: 64, offset: 128)
!3761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3762, size: 64)
!3762 = !DISubroutineType(types: !3763)
!3763 = !{!265, !3715}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3750, file: !698, line: 174, baseType: !3765, size: 64, offset: 192)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = !DISubroutineType(types: !3767)
!3767 = !{!265, !3715, !3715, !244}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3750, file: !698, line: 176, baseType: !3769, size: 64, offset: 256)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DISubroutineType(types: !3771)
!3771 = !{!265, !793, !3715, !3734}
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3735, file: !698, line: 192, baseType: !214, size: 128, offset: 448)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3735, file: !698, line: 194, baseType: !1598, size: 128, offset: 576)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3726, file: !698, line: 144, baseType: !3775, size: 64)
!3775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !698, line: 103, size: 64, elements: !3776)
!3776 = !{!3777}
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3775, file: !698, line: 104, baseType: !3715, size: 64)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3726, file: !698, line: 145, baseType: !3779, size: 256)
!3779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !698, line: 107, size: 256, elements: !3780)
!3780 = !{!3781, !3829, !3832, !3833}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3779, file: !698, line: 108, baseType: !3782, size: 64)
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3783, size: 64)
!3783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3784)
!3784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !698, line: 217, size: 768, elements: !3785)
!3785 = !{!3786, !3806, !3810, !3811, !3812, !3813, !3814, !3818, !3819, !3820, !3821, !3825}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3784, file: !698, line: 222, baseType: !3787, size: 64)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 64)
!3788 = !DISubroutineType(types: !3789)
!3789 = !{!265, !3790}
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !698, line: 197, size: 1088, elements: !3792)
!3792 = !{!3793, !3794, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802, !3803, !3804, !3805}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3791, file: !698, line: 199, baseType: !3715, size: 64)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3791, file: !698, line: 200, baseType: !439, size: 64, offset: 64)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3791, file: !698, line: 201, baseType: !793, size: 64, offset: 128)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3791, file: !698, line: 202, baseType: !208, size: 64, offset: 192)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3791, file: !698, line: 205, baseType: !805, size: 192, offset: 256)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3791, file: !698, line: 206, baseType: !805, size: 192, offset: 448)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3791, file: !698, line: 207, baseType: !265, size: 32, offset: 640)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3791, file: !698, line: 208, baseType: !214, size: 128, offset: 704)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3791, file: !698, line: 209, baseType: !363, size: 64, offset: 832)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3791, file: !698, line: 211, baseType: !409, size: 64, offset: 896)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3791, file: !698, line: 212, baseType: !569, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3791, file: !698, line: 213, baseType: !569, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3791, file: !698, line: 214, baseType: !1135, size: 64, offset: 1024)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3784, file: !698, line: 223, baseType: !3807, size: 64, offset: 64)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = !DISubroutineType(types: !3809)
!3809 = !{null, !3790}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3784, file: !698, line: 236, baseType: !837, size: 64, offset: 128)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3784, file: !698, line: 238, baseType: !824, size: 64, offset: 192)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3784, file: !698, line: 239, baseType: !833, size: 64, offset: 256)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3784, file: !698, line: 240, baseType: !829, size: 64, offset: 320)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3784, file: !698, line: 242, baseType: !3815, size: 64, offset: 384)
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 64)
!3816 = !DISubroutineType(types: !3817)
!3817 = !{!394, !3790, !363, !409, !610}
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3784, file: !698, line: 252, baseType: !409, size: 64, offset: 448)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3784, file: !698, line: 259, baseType: !569, size: 8, offset: 512)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3784, file: !698, line: 260, baseType: !3815, size: 64, offset: 576)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3784, file: !698, line: 263, baseType: !3822, size: 64, offset: 640)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DISubroutineType(types: !3824)
!3824 = !{!1992, !3790, !1994}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3784, file: !698, line: 266, baseType: !3826, size: 64, offset: 704)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!265, !3790, !1107}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3779, file: !698, line: 109, baseType: !3830, size: 64, offset: 64)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 64)
!3831 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !698, line: 31, flags: DIFlagFwdDecl)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3779, file: !698, line: 110, baseType: !610, size: 64, offset: 128)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3779, file: !698, line: 111, baseType: !3715, size: 64, offset: 192)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3716, file: !698, line: 148, baseType: !208, size: 64, offset: 768)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3716, file: !698, line: 154, baseType: !239, size: 64, offset: 832)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3716, file: !698, line: 156, baseType: !301, size: 16, offset: 896)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3716, file: !698, line: 157, baseType: !404, size: 16, offset: 912)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3716, file: !698, line: 158, baseType: !3839, size: 64, offset: 960)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 64)
!3840 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !698, line: 32, flags: DIFlagFwdDecl)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !309, file: !310, line: 71, baseType: !1930, size: 32, offset: 448)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !309, file: !310, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !309, file: !310, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !309, file: !310, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !309, file: !310, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !309, file: !310, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !306, file: !73, line: 463, baseType: !305, size: 64, offset: 512)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !306, file: !73, line: 465, baseType: !3849, size: 64, offset: 576)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !306, file: !73, line: 467, baseType: !244, size: 64, offset: 640)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !306, file: !73, line: 468, baseType: !3853, size: 64, offset: 704)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3855)
!3855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3856)
!3856 = !{!3857, !3858, !3859, !3863, !3868, !3872}
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3855, file: !73, line: 88, baseType: !244, size: 64)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3855, file: !73, line: 89, baseType: !415, size: 64, offset: 64)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3855, file: !73, line: 90, baseType: !3860, size: 64, offset: 128)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{!265, !305, !358}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3855, file: !73, line: 91, baseType: !3864, size: 64, offset: 192)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{!363, !305, !3867, !3712, !3713}
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3855, file: !73, line: 93, baseType: !3869, size: 64, offset: 256)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{null, !305}
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3855, file: !73, line: 95, baseType: !3873, size: 64, offset: 320)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3875)
!3875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3876)
!3876 = !{!3877, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3902}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3875, file: !80, line: 279, baseType: !3878, size: 64)
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3879, size: 64)
!3879 = !DISubroutineType(types: !3880)
!3880 = !{!265, !305}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3875, file: !80, line: 280, baseType: !3869, size: 64, offset: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3875, file: !80, line: 281, baseType: !3878, size: 64, offset: 128)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3875, file: !80, line: 282, baseType: !3878, size: 64, offset: 192)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3875, file: !80, line: 283, baseType: !3878, size: 64, offset: 256)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3875, file: !80, line: 284, baseType: !3878, size: 64, offset: 320)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3875, file: !80, line: 285, baseType: !3878, size: 64, offset: 384)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3875, file: !80, line: 286, baseType: !3878, size: 64, offset: 448)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3875, file: !80, line: 287, baseType: !3878, size: 64, offset: 512)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3875, file: !80, line: 288, baseType: !3878, size: 64, offset: 576)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3875, file: !80, line: 289, baseType: !3878, size: 64, offset: 640)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3875, file: !80, line: 290, baseType: !3878, size: 64, offset: 704)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3875, file: !80, line: 291, baseType: !3878, size: 64, offset: 768)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3875, file: !80, line: 292, baseType: !3878, size: 64, offset: 832)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3875, file: !80, line: 293, baseType: !3878, size: 64, offset: 896)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3875, file: !80, line: 294, baseType: !3878, size: 64, offset: 960)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3875, file: !80, line: 295, baseType: !3878, size: 64, offset: 1024)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3875, file: !80, line: 296, baseType: !3878, size: 64, offset: 1088)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3875, file: !80, line: 297, baseType: !3878, size: 64, offset: 1152)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3875, file: !80, line: 298, baseType: !3878, size: 64, offset: 1216)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3875, file: !80, line: 299, baseType: !3878, size: 64, offset: 1280)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3875, file: !80, line: 300, baseType: !3878, size: 64, offset: 1344)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3875, file: !80, line: 301, baseType: !3878, size: 64, offset: 1408)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !306, file: !73, line: 470, baseType: !3904, size: 64, offset: 768)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3906, line: 82, size: 1408, elements: !3907)
!3906 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3907 = !{!3908, !3909, !3910, !3911, !3912, !3913, !3914, !3972, !3973, !3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3988, !3991, !3992}
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3905, file: !3906, line: 83, baseType: !244, size: 64)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3905, file: !3906, line: 84, baseType: !244, size: 64, offset: 64)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3905, file: !3906, line: 85, baseType: !305, size: 64, offset: 128)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3905, file: !3906, line: 86, baseType: !415, size: 64, offset: 192)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3905, file: !3906, line: 87, baseType: !415, size: 64, offset: 256)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3905, file: !3906, line: 88, baseType: !415, size: 64, offset: 320)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3905, file: !3906, line: 90, baseType: !3915, size: 64, offset: 384)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3916 = !DISubroutineType(types: !3917)
!3917 = !{!265, !305, !3918}
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3920)
!3920 = !{!3921, !3922, !3923, !3924, !3925, !3926, !3927, !3939, !3952, !3953, !3954, !3955, !3956, !3964, !3965, !3966, !3967, !3968, !3969}
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3919, file: !67, line: 96, baseType: !244, size: 64)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3919, file: !67, line: 97, baseType: !3904, size: 64, offset: 64)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3919, file: !67, line: 99, baseType: !712, size: 64, offset: 128)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3919, file: !67, line: 100, baseType: !244, size: 64, offset: 192)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3919, file: !67, line: 102, baseType: !569, size: 8, offset: 256)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3919, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3919, file: !67, line: 105, baseType: !3928, size: 64, offset: 320)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3930)
!3930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !160, line: 262, size: 1600, elements: !3931)
!3931 = !{!3932, !3933, !3934, !3938}
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3930, file: !160, line: 263, baseType: !3415, size: 256)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3930, file: !160, line: 264, baseType: !3415, size: 256, offset: 256)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3930, file: !160, line: 265, baseType: !3935, size: 1024, offset: 512)
!3935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 1024, elements: !3936)
!3936 = !{!3937}
!3937 = !DISubrange(count: 128)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3930, file: !160, line: 266, baseType: !2845, size: 64, offset: 1536)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3919, file: !67, line: 106, baseType: !3940, size: 64, offset: 384)
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3941, size: 64)
!3941 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3942)
!3942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !160, line: 210, size: 256, elements: !3943)
!3943 = !{!3944, !3948, !3950, !3951}
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3942, file: !160, line: 211, baseType: !3945, size: 72)
!3945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1471, size: 72, elements: !3946)
!3946 = !{!3947}
!3947 = !DISubrange(count: 9)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3942, file: !160, line: 212, baseType: !3949, size: 64, offset: 128)
!3949 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !160, line: 14, baseType: !248)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3942, file: !160, line: 213, baseType: !206, size: 32, offset: 192)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3942, file: !160, line: 214, baseType: !206, size: 32, offset: 224)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3919, file: !67, line: 108, baseType: !3878, size: 64, offset: 448)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3919, file: !67, line: 109, baseType: !3869, size: 64, offset: 512)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3919, file: !67, line: 110, baseType: !3878, size: 64, offset: 576)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3919, file: !67, line: 111, baseType: !3869, size: 64, offset: 640)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3919, file: !67, line: 112, baseType: !3957, size: 64, offset: 704)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{!265, !305, !3960}
!3960 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3961)
!3961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3962)
!3962 = !{!3963}
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3961, file: !80, line: 51, baseType: !265, size: 32)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3919, file: !67, line: 113, baseType: !3878, size: 64, offset: 768)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3919, file: !67, line: 114, baseType: !415, size: 64, offset: 832)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3919, file: !67, line: 115, baseType: !415, size: 64, offset: 896)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3919, file: !67, line: 117, baseType: !3873, size: 64, offset: 960)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3919, file: !67, line: 118, baseType: !3869, size: 64, offset: 1024)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3919, file: !67, line: 120, baseType: !3970, size: 64, offset: 1088)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3905, file: !3906, line: 91, baseType: !3860, size: 64, offset: 448)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3905, file: !3906, line: 92, baseType: !3878, size: 64, offset: 512)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3905, file: !3906, line: 93, baseType: !3869, size: 64, offset: 576)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3905, file: !3906, line: 94, baseType: !3878, size: 64, offset: 640)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3905, file: !3906, line: 95, baseType: !3869, size: 64, offset: 704)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3905, file: !3906, line: 97, baseType: !3878, size: 64, offset: 768)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3905, file: !3906, line: 98, baseType: !3878, size: 64, offset: 832)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3905, file: !3906, line: 100, baseType: !3957, size: 64, offset: 896)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3905, file: !3906, line: 101, baseType: !3878, size: 64, offset: 960)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3905, file: !3906, line: 103, baseType: !3878, size: 64, offset: 1024)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3905, file: !3906, line: 105, baseType: !3878, size: 64, offset: 1088)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3905, file: !3906, line: 107, baseType: !3873, size: 64, offset: 1152)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3905, file: !3906, line: 109, baseType: !3985, size: 64, offset: 1216)
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3987)
!3987 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3906, line: 109, flags: DIFlagFwdDecl)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3905, file: !3906, line: 111, baseType: !3989, size: 64, offset: 1280)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 64)
!3990 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3906, line: 111, flags: DIFlagFwdDecl)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3905, file: !3906, line: 112, baseType: !727, offset: 1344)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3905, file: !3906, line: 114, baseType: !569, size: 8, offset: 1344)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !306, file: !73, line: 471, baseType: !3918, size: 64, offset: 832)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !306, file: !73, line: 473, baseType: !208, size: 64, offset: 896)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !306, file: !73, line: 475, baseType: !208, size: 64, offset: 960)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !306, file: !73, line: 480, baseType: !805, size: 192, offset: 1024)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !306, file: !73, line: 484, baseType: !3998, size: 576, offset: 1216)
!3998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3999)
!3999 = !{!4000, !4001, !4002, !4003, !4004, !4005}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3998, file: !73, line: 362, baseType: !214, size: 128)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3998, file: !73, line: 363, baseType: !214, size: 128, offset: 128)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3998, file: !73, line: 364, baseType: !214, size: 128, offset: 256)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3998, file: !73, line: 365, baseType: !214, size: 128, offset: 384)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3998, file: !73, line: 366, baseType: !569, size: 8, offset: 512)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3998, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !306, file: !73, line: 485, baseType: !4007, size: 2304, offset: 1792)
!4007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !4008)
!4008 = !{!4009, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4091, !4092, !4093, !4094, !4104, !4108}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4007, file: !80, line: 566, baseType: !3960, size: 32)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4007, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4007, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4007, file: !80, line: 569, baseType: !569, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4007, file: !80, line: 570, baseType: !569, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4007, file: !80, line: 571, baseType: !569, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4007, file: !80, line: 572, baseType: !569, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4007, file: !80, line: 573, baseType: !569, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4007, file: !80, line: 574, baseType: !569, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4007, file: !80, line: 575, baseType: !569, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4007, file: !80, line: 576, baseType: !569, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4007, file: !80, line: 577, baseType: !204, size: 32, offset: 64)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4007, file: !80, line: 578, baseType: !322, offset: 96)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4007, file: !80, line: 580, baseType: !214, size: 128, offset: 128)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4007, file: !80, line: 581, baseType: !1619, size: 192, offset: 256)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4007, file: !80, line: 582, baseType: !4025, size: 64, offset: 448)
!4025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4026, size: 64)
!4026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4027, line: 43, size: 1472, elements: !4028)
!4027 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4028 = !{!4029, !4030, !4031, !4032, !4033, !4036, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4061}
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4026, file: !4027, line: 44, baseType: !244, size: 64)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4026, file: !4027, line: 45, baseType: !265, size: 32, offset: 64)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4026, file: !4027, line: 46, baseType: !214, size: 128, offset: 128)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4026, file: !4027, line: 47, baseType: !322, offset: 256)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4026, file: !4027, line: 48, baseType: !4034, size: 64, offset: 256)
!4034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4035 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4026, file: !4027, line: 49, baseType: !4037, size: 320, offset: 320)
!4037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !4038, line: 11, size: 320, elements: !4039)
!4038 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!4039 = !{!4040, !4041, !4042, !4047}
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4037, file: !4038, line: 16, baseType: !721, size: 128)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4037, file: !4038, line: 17, baseType: !248, size: 64, offset: 128)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !4037, file: !4038, line: 18, baseType: !4043, size: 64, offset: 192)
!4043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4044, size: 64)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{null, !4046}
!4046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4037, size: 64)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4037, file: !4038, line: 19, baseType: !204, size: 32, offset: 256)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4026, file: !4027, line: 50, baseType: !248, size: 64, offset: 640)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4026, file: !4027, line: 51, baseType: !1418, size: 64, offset: 704)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4026, file: !4027, line: 52, baseType: !1418, size: 64, offset: 768)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4026, file: !4027, line: 53, baseType: !1418, size: 64, offset: 832)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4026, file: !4027, line: 54, baseType: !1418, size: 64, offset: 896)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4026, file: !4027, line: 55, baseType: !1418, size: 64, offset: 960)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4026, file: !4027, line: 56, baseType: !248, size: 64, offset: 1024)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4026, file: !4027, line: 57, baseType: !248, size: 64, offset: 1088)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4026, file: !4027, line: 58, baseType: !248, size: 64, offset: 1152)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4026, file: !4027, line: 59, baseType: !248, size: 64, offset: 1216)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4026, file: !4027, line: 60, baseType: !248, size: 64, offset: 1280)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4026, file: !4027, line: 61, baseType: !305, size: 64, offset: 1344)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4026, file: !4027, line: 62, baseType: !569, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4026, file: !4027, line: 63, baseType: !569, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4007, file: !80, line: 583, baseType: !569, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4007, file: !80, line: 584, baseType: !569, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4007, file: !80, line: 585, baseType: !569, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4007, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4007, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4007, file: !80, line: 592, baseType: !1410, size: 512, offset: 576)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4007, file: !80, line: 593, baseType: !239, size: 64, offset: 1088)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4007, file: !80, line: 594, baseType: !2236, size: 256, offset: 1152)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4007, file: !80, line: 595, baseType: !1598, size: 128, offset: 1408)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4007, file: !80, line: 596, baseType: !4034, size: 64, offset: 1536)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4007, file: !80, line: 597, baseType: !879, size: 32, offset: 1600)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4007, file: !80, line: 598, baseType: !879, size: 32, offset: 1632)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4007, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4007, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4007, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4007, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4007, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4007, file: !80, line: 604, baseType: !569, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4007, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4007, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4007, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4007, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4007, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4007, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4007, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4007, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4007, file: !80, line: 613, baseType: !265, size: 32, offset: 1792)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4007, file: !80, line: 614, baseType: !265, size: 32, offset: 1824)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4007, file: !80, line: 615, baseType: !239, size: 64, offset: 1856)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4007, file: !80, line: 616, baseType: !239, size: 64, offset: 1920)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4007, file: !80, line: 617, baseType: !239, size: 64, offset: 1984)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4007, file: !80, line: 618, baseType: !239, size: 64, offset: 2048)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4007, file: !80, line: 620, baseType: !4095, size: 64, offset: 2112)
!4095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4096, size: 64)
!4096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !4097)
!4097 = !{!4098, !4099, !4100, !4101}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4096, file: !80, line: 537, baseType: !322)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4096, file: !80, line: 538, baseType: !7, size: 32)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4096, file: !80, line: 540, baseType: !214, size: 128, offset: 64)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4096, file: !80, line: 543, baseType: !4102, size: 64, offset: 192)
!4102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4103, size: 64)
!4103 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4007, file: !80, line: 621, baseType: !4105, size: 64, offset: 2176)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{null, !305, !1561}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4007, file: !80, line: 622, baseType: !4109, size: 64, offset: 2240)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4110, size: 64)
!4110 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !306, file: !73, line: 486, baseType: !4112, size: 64, offset: 4096)
!4112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4113, size: 64)
!4113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !4114)
!4114 = !{!4115, !4116, !4117, !4121, !4122, !4123}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4113, file: !80, line: 643, baseType: !3875, size: 1472)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4113, file: !80, line: 644, baseType: !3878, size: 64, offset: 1472)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4113, file: !80, line: 645, baseType: !4118, size: 64, offset: 1536)
!4118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4119, size: 64)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{null, !305, !569}
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4113, file: !80, line: 646, baseType: !3878, size: 64, offset: 1600)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4113, file: !80, line: 647, baseType: !3869, size: 64, offset: 1664)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4113, file: !80, line: 648, baseType: !3869, size: 64, offset: 1728)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !306, file: !73, line: 493, baseType: !4125, size: 64, offset: 4160)
!4125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4126, size: 64)
!4126 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !73, line: 493, flags: DIFlagFwdDecl)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !306, file: !73, line: 499, baseType: !214, size: 128, offset: 4224)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !306, file: !73, line: 502, baseType: !4129, size: 64, offset: 4352)
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 64)
!4130 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4131)
!4131 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !306, file: !73, line: 504, baseType: !4133, size: 64, offset: 4416)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !306, file: !73, line: 505, baseType: !239, size: 64, offset: 4480)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !306, file: !73, line: 510, baseType: !239, size: 64, offset: 4544)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !306, file: !73, line: 511, baseType: !4137, size: 64, offset: 4608)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4139)
!4139 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !306, file: !73, line: 513, baseType: !4141, size: 64, offset: 4672)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !4143)
!4143 = !{!4144, !4145}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4142, file: !73, line: 293, baseType: !7, size: 32)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4142, file: !73, line: 294, baseType: !248, size: 64, offset: 64)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !306, file: !73, line: 515, baseType: !214, size: 128, offset: 4736)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !306, file: !73, line: 526, baseType: !4148, offset: 4864)
!4148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4149, line: 5, elements: !336)
!4149 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !306, file: !73, line: 528, baseType: !4151, size: 64, offset: 4864)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4152, size: 64)
!4152 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4153, line: 14, flags: DIFlagFwdDecl)
!4153 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !306, file: !73, line: 529, baseType: !4155, size: 64, offset: 4928)
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4157, line: 17, size: 192, elements: !4158)
!4157 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4158 = !{!4159, !4160, !4243}
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4156, file: !4157, line: 18, baseType: !4155, size: 64)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4156, file: !4157, line: 19, baseType: !4161, size: 64, offset: 64)
!4161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4163)
!4163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4157, line: 110, size: 1152, elements: !4164)
!4164 = !{!4165, !4169, !4173, !4179, !4185, !4189, !4193, !4198, !4202, !4203, !4207, !4211, !4215, !4226, !4227, !4228, !4229, !4239}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4163, file: !4157, line: 111, baseType: !4166, size: 64)
!4166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4167, size: 64)
!4167 = !DISubroutineType(types: !4168)
!4168 = !{!4155, !4155}
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4163, file: !4157, line: 112, baseType: !4170, size: 64, offset: 64)
!4170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4171, size: 64)
!4171 = !DISubroutineType(types: !4172)
!4172 = !{null, !4155}
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4163, file: !4157, line: 113, baseType: !4174, size: 64, offset: 128)
!4174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4175, size: 64)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{!569, !4177}
!4177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4178, size: 64)
!4178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4156)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4163, file: !4157, line: 114, baseType: !4180, size: 64, offset: 192)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!2845, !4177, !4183}
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !306)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4163, file: !4157, line: 116, baseType: !4186, size: 64, offset: 256)
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{!569, !4177, !244}
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4163, file: !4157, line: 118, baseType: !4190, size: 64, offset: 320)
!4190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4191, size: 64)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{!265, !4177, !244, !7, !208, !409}
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4163, file: !4157, line: 123, baseType: !4194, size: 64, offset: 384)
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{!265, !4177, !244, !4197, !409}
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4163, file: !4157, line: 126, baseType: !4199, size: 64, offset: 448)
!4199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4200, size: 64)
!4200 = !DISubroutineType(types: !4201)
!4201 = !{!244, !4177}
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4163, file: !4157, line: 127, baseType: !4199, size: 64, offset: 512)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4163, file: !4157, line: 128, baseType: !4204, size: 64, offset: 576)
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!4155, !4177}
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4163, file: !4157, line: 130, baseType: !4208, size: 64, offset: 640)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 64)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{!4155, !4177, !4155}
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4163, file: !4157, line: 133, baseType: !4212, size: 64, offset: 704)
!4212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4213, size: 64)
!4213 = !DISubroutineType(types: !4214)
!4214 = !{!4155, !4177, !244}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4163, file: !4157, line: 135, baseType: !4216, size: 64, offset: 768)
!4216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4217, size: 64)
!4217 = !DISubroutineType(types: !4218)
!4218 = !{!265, !4177, !244, !244, !7, !7, !4219}
!4219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4220, size: 64)
!4220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4157, line: 43, size: 640, elements: !4221)
!4221 = !{!4222, !4223, !4224}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4220, file: !4157, line: 44, baseType: !4155, size: 64)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4220, file: !4157, line: 45, baseType: !7, size: 32, offset: 64)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4220, file: !4157, line: 46, baseType: !4225, size: 512, offset: 128)
!4225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !239, size: 512, elements: !1448)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4163, file: !4157, line: 140, baseType: !4208, size: 64, offset: 832)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4163, file: !4157, line: 143, baseType: !4204, size: 64, offset: 896)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4163, file: !4157, line: 145, baseType: !4166, size: 64, offset: 960)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4163, file: !4157, line: 146, baseType: !4230, size: 64, offset: 1024)
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4231, size: 64)
!4231 = !DISubroutineType(types: !4232)
!4232 = !{!265, !4177, !4233}
!4233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4234, size: 64)
!4234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4157, line: 29, size: 128, elements: !4235)
!4235 = !{!4236, !4237, !4238}
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4234, file: !4157, line: 30, baseType: !7, size: 32)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4234, file: !4157, line: 31, baseType: !7, size: 32, offset: 32)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4234, file: !4157, line: 32, baseType: !4177, size: 64, offset: 64)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4163, file: !4157, line: 148, baseType: !4240, size: 64, offset: 1088)
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4241, size: 64)
!4241 = !DISubroutineType(types: !4242)
!4242 = !{!265, !4177, !305}
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4156, file: !4157, line: 20, baseType: !305, size: 64, offset: 128)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !306, file: !73, line: 534, baseType: !592, size: 32, offset: 4992)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !306, file: !73, line: 535, baseType: !204, size: 32, offset: 5024)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !306, file: !73, line: 537, baseType: !322, offset: 5056)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !306, file: !73, line: 538, baseType: !214, size: 128, offset: 5056)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !306, file: !73, line: 540, baseType: !4249, size: 64, offset: 5184)
!4249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4250, size: 64)
!4250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4251, line: 54, size: 960, elements: !4252)
!4251 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4252 = !{!4253, !4254, !4255, !4256, !4257, !4258, !4259, !4263, !4267, !4268, !4269, !4270, !4274, !4278, !4279}
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4250, file: !4251, line: 55, baseType: !244, size: 64)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4250, file: !4251, line: 56, baseType: !712, size: 64, offset: 64)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4250, file: !4251, line: 58, baseType: !415, size: 64, offset: 128)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4250, file: !4251, line: 59, baseType: !415, size: 64, offset: 192)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4250, file: !4251, line: 60, baseType: !315, size: 64, offset: 256)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4250, file: !4251, line: 62, baseType: !3860, size: 64, offset: 320)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4250, file: !4251, line: 63, baseType: !4260, size: 64, offset: 384)
!4260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 64)
!4261 = !DISubroutineType(types: !4262)
!4262 = !{!363, !305, !3867}
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4250, file: !4251, line: 65, baseType: !4264, size: 64, offset: 448)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = !DISubroutineType(types: !4266)
!4266 = !{null, !4249}
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4250, file: !4251, line: 66, baseType: !3869, size: 64, offset: 512)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4250, file: !4251, line: 68, baseType: !3878, size: 64, offset: 576)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4250, file: !4251, line: 70, baseType: !3680, size: 64, offset: 640)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4250, file: !4251, line: 71, baseType: !4271, size: 64, offset: 704)
!4271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4272, size: 64)
!4272 = !DISubroutineType(types: !4273)
!4273 = !{!2845, !305}
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4250, file: !4251, line: 73, baseType: !4275, size: 64, offset: 768)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = !DISubroutineType(types: !4277)
!4277 = !{null, !305, !3712, !3713}
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4250, file: !4251, line: 75, baseType: !3873, size: 64, offset: 832)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4250, file: !4251, line: 77, baseType: !3989, size: 64, offset: 896)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !306, file: !73, line: 541, baseType: !415, size: 64, offset: 5248)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !306, file: !73, line: 543, baseType: !3869, size: 64, offset: 5312)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !306, file: !73, line: 544, baseType: !4283, size: 64, offset: 5376)
!4283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4284, size: 64)
!4284 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !306, file: !73, line: 545, baseType: !4286, size: 64, offset: 5440)
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4287, size: 64)
!4287 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !306, file: !73, line: 547, baseType: !569, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !306, file: !73, line: 548, baseType: !569, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !306, file: !73, line: 549, baseType: !569, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !306, file: !73, line: 550, baseType: !569, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !222, file: !211, line: 635, baseType: !306, size: 5568, offset: 2304)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !222, file: !211, line: 636, baseType: !429, size: 64, offset: 7872)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !222, file: !211, line: 637, baseType: !429, size: 64, offset: 7936)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !222, file: !211, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !210, file: !211, line: 312, baseType: !221, size: 64, offset: 192)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !210, file: !211, line: 314, baseType: !208, size: 64, offset: 256)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !210, file: !211, line: 315, baseType: !288, size: 64, offset: 320)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !210, file: !211, line: 316, baseType: !4300, size: 64, offset: 384)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !211, line: 69, size: 832, elements: !4302)
!4302 = !{!4303, !4304, !4305, !4308, !4309}
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4301, file: !211, line: 70, baseType: !221, size: 64)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4301, file: !211, line: 71, baseType: !214, size: 128, offset: 64)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4301, file: !211, line: 72, baseType: !4306, size: 64, offset: 192)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4307, size: 64)
!4307 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !211, line: 72, flags: DIFlagFwdDecl)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4301, file: !211, line: 73, baseType: !292, size: 8, offset: 256)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4301, file: !211, line: 74, baseType: !309, size: 512, offset: 320)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !210, file: !211, line: 318, baseType: !7, size: 32, offset: 448)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !210, file: !211, line: 319, baseType: !301, size: 16, offset: 480)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !210, file: !211, line: 320, baseType: !301, size: 16, offset: 496)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !210, file: !211, line: 321, baseType: !301, size: 16, offset: 512)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !210, file: !211, line: 322, baseType: !301, size: 16, offset: 528)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !210, file: !211, line: 323, baseType: !7, size: 32, offset: 544)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !210, file: !211, line: 324, baseType: !1470, size: 8, offset: 576)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !210, file: !211, line: 325, baseType: !1470, size: 8, offset: 584)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !210, file: !211, line: 330, baseType: !1470, size: 8, offset: 592)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !210, file: !211, line: 331, baseType: !1470, size: 8, offset: 600)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !210, file: !211, line: 332, baseType: !1470, size: 8, offset: 608)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !210, file: !211, line: 333, baseType: !1470, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !210, file: !211, line: 334, baseType: !1470, size: 8, offset: 624)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !210, file: !211, line: 335, baseType: !1470, size: 8, offset: 632)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !210, file: !211, line: 336, baseType: !984, size: 16, offset: 640)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !210, file: !211, line: 337, baseType: !4326, size: 64, offset: 704)
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !210, file: !211, line: 339, baseType: !4328, size: 64, offset: 768)
!4328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4329, size: 64)
!4329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !211, line: 858, size: 2048, elements: !4330)
!4330 = !{!4331, !4332, !4333, !4345, !4349, !4353, !4357, !4361, !4362, !4366, !4385, !4386, !4387}
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4329, file: !211, line: 859, baseType: !214, size: 128)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4329, file: !211, line: 860, baseType: !244, size: 64, offset: 128)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4329, file: !211, line: 861, baseType: !4334, size: 64, offset: 192)
!4334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4335, size: 64)
!4335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4336)
!4336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !160, line: 38, size: 256, elements: !4337)
!4337 = !{!4338, !4339, !4340, !4341, !4342, !4343, !4344}
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4336, file: !160, line: 39, baseType: !206, size: 32)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4336, file: !160, line: 39, baseType: !206, size: 32, offset: 32)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !4336, file: !160, line: 40, baseType: !206, size: 32, offset: 64)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4336, file: !160, line: 40, baseType: !206, size: 32, offset: 96)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4336, file: !160, line: 41, baseType: !206, size: 32, offset: 128)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !4336, file: !160, line: 41, baseType: !206, size: 32, offset: 160)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4336, file: !160, line: 42, baseType: !3949, size: 64, offset: 192)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4329, file: !211, line: 862, baseType: !4346, size: 64, offset: 256)
!4346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4347, size: 64)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{!265, !209, !4334}
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4329, file: !211, line: 863, baseType: !4350, size: 64, offset: 320)
!4350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4351, size: 64)
!4351 = !DISubroutineType(types: !4352)
!4352 = !{null, !209}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4329, file: !211, line: 864, baseType: !4354, size: 64, offset: 384)
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 64)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!265, !209, !3960}
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4329, file: !211, line: 865, baseType: !4358, size: 64, offset: 448)
!4358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4359, size: 64)
!4359 = !DISubroutineType(types: !4360)
!4360 = !{!265, !209}
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4329, file: !211, line: 866, baseType: !4350, size: 64, offset: 512)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !4329, file: !211, line: 867, baseType: !4363, size: 64, offset: 576)
!4363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4364, size: 64)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{!265, !209, !265}
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !4329, file: !211, line: 868, baseType: !4367, size: 64, offset: 640)
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4368 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4369)
!4369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !211, line: 795, size: 384, elements: !4370)
!4370 = !{!4371, !4377, !4381, !4382, !4383, !4384}
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4369, file: !211, line: 797, baseType: !4372, size: 64)
!4372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4373, size: 64)
!4373 = !DISubroutineType(types: !4374)
!4374 = !{!4375, !209, !4376}
!4375 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !211, line: 772, baseType: !7)
!4376 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !211, line: 180, baseType: !7)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4369, file: !211, line: 801, baseType: !4378, size: 64, offset: 64)
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4379, size: 64)
!4379 = !DISubroutineType(types: !4380)
!4380 = !{!4375, !209}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4369, file: !211, line: 804, baseType: !4378, size: 64, offset: 128)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4369, file: !211, line: 807, baseType: !4350, size: 64, offset: 192)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4369, file: !211, line: 808, baseType: !4350, size: 64, offset: 256)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4369, file: !211, line: 811, baseType: !4350, size: 64, offset: 320)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4329, file: !211, line: 869, baseType: !415, size: 64, offset: 704)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4329, file: !211, line: 870, baseType: !3919, size: 1152, offset: 768)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4329, file: !211, line: 871, baseType: !4388, size: 128, offset: 1920)
!4388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !211, line: 759, size: 128, elements: !4389)
!4389 = !{!4390, !4391}
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4388, file: !211, line: 760, baseType: !322)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4388, file: !211, line: 761, baseType: !214, size: 128)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !210, file: !211, line: 340, baseType: !239, size: 64, offset: 832)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !210, file: !211, line: 346, baseType: !4142, size: 128, offset: 896)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !210, file: !211, line: 348, baseType: !4395, size: 32, offset: 1024)
!4395 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !211, line: 155, baseType: !265)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !210, file: !211, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !210, file: !211, line: 352, baseType: !1470, size: 8, offset: 1064)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !210, file: !211, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !210, file: !211, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !210, file: !211, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !210, file: !211, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !210, file: !211, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !210, file: !211, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !210, file: !211, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !210, file: !211, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !210, file: !211, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !210, file: !211, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !210, file: !211, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !210, file: !211, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !210, file: !211, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !210, file: !211, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !210, file: !211, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !210, file: !211, line: 376, baseType: !7, size: 32, offset: 1120)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !210, file: !211, line: 377, baseType: !7, size: 32, offset: 1152)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !210, file: !211, line: 380, baseType: !4416, size: 64, offset: 1216)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 64)
!4417 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !211, line: 303, flags: DIFlagFwdDecl)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !210, file: !211, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !210, file: !211, line: 383, baseType: !265, size: 32, offset: 1312)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !210, file: !211, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !210, file: !211, line: 387, baseType: !4376, size: 32, offset: 1376)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !210, file: !211, line: 388, baseType: !306, size: 5568, offset: 1408)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !210, file: !211, line: 390, baseType: !265, size: 32, offset: 6976)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !210, file: !211, line: 396, baseType: !7, size: 32, offset: 7008)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !210, file: !211, line: 397, baseType: !4426, size: 8704, offset: 7040)
!4426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !233, size: 8704, elements: !4427)
!4427 = !{!4428}
!4428 = !DISubrange(count: 17)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !210, file: !211, line: 399, baseType: !569, size: 8, offset: 15744)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !210, file: !211, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !210, file: !211, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !210, file: !211, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !210, file: !211, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !210, file: !211, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !210, file: !211, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !210, file: !211, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !210, file: !211, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !210, file: !211, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !210, file: !211, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !210, file: !211, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !210, file: !211, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !210, file: !211, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !210, file: !211, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !210, file: !211, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !210, file: !211, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !210, file: !211, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !210, file: !211, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !210, file: !211, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !210, file: !211, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !210, file: !211, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !210, file: !211, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !210, file: !211, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !210, file: !211, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !210, file: !211, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !210, file: !211, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !210, file: !211, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !210, file: !211, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !210, file: !211, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !210, file: !211, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !210, file: !211, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !210, file: !211, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !210, file: !211, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !210, file: !211, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !210, file: !211, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !210, file: !211, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !210, file: !211, line: 450, baseType: !4467, size: 16, offset: 15792)
!4467 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !211, line: 206, baseType: !301)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !210, file: !211, line: 451, baseType: !879, size: 32, offset: 15808)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !210, file: !211, line: 453, baseType: !4470, size: 512, offset: 15840)
!4470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !204, size: 512, elements: !1852)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !210, file: !211, line: 454, baseType: !717, size: 64, offset: 16384)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !210, file: !211, line: 455, baseType: !429, size: 64, offset: 16448)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !210, file: !211, line: 456, baseType: !265, size: 32, offset: 16512)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !210, file: !211, line: 457, baseType: !4475, size: 1088, offset: 16576)
!4475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 1088, elements: !4427)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !210, file: !211, line: 458, baseType: !4475, size: 1088, offset: 17664)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !210, file: !211, line: 469, baseType: !415, size: 64, offset: 18752)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !210, file: !211, line: 471, baseType: !4479, size: 64, offset: 18816)
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4480, size: 64)
!4480 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !211, line: 304, flags: DIFlagFwdDecl)
!4481 = !DIDerivedType(tag: DW_TAG_member, scope: !210, file: !211, line: 478, baseType: !4482, size: 64, offset: 18880)
!4482 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !210, file: !211, line: 478, size: 64, elements: !4483)
!4483 = !{!4484, !4487}
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4482, file: !211, line: 479, baseType: !4485, size: 64)
!4485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4486, size: 64)
!4486 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !211, line: 305, flags: DIFlagFwdDecl)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4482, file: !211, line: 480, baseType: !209, size: 64)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !210, file: !211, line: 482, baseType: !984, size: 16, offset: 18944)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !210, file: !211, line: 483, baseType: !1470, size: 8, offset: 18960)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !210, file: !211, line: 497, baseType: !984, size: 16, offset: 18976)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !210, file: !211, line: 498, baseType: !238, size: 64, offset: 19008)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !210, file: !211, line: 499, baseType: !409, size: 64, offset: 19072)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !210, file: !211, line: 500, baseType: !363, size: 64, offset: 19136)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !210, file: !211, line: 502, baseType: !248, size: 64, offset: 19200)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!4497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4498, size: 64)
!4498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_hcd", file: !145, line: 1734, size: 50560, elements: !4499)
!4499 = !{!4500, !5077, !5078, !5090, !5118, !5137, !5145, !5147, !5148, !5149, !5150, !5151, !5152, !5153, !5154, !5155, !5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5167, !5168, !5171, !5178, !5235, !5236, !5237, !5238, !5245, !5246, !5264, !5265, !5278, !5285, !5286, !5287, !5288, !5371, !5378, !5379, !5380, !5381, !5382, !5383, !5384, !5396, !5397, !5398, !5399, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5456}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "main_hcd", scope: !4498, file: !145, line: 1735, baseType: !4501, size: 64)
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4502, size: 64)
!4502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_hcd", file: !139, line: 81, size: 4672, elements: !4503)
!4503 = !{!4504, !4816, !4817, !4818, !4819, !4823, !4824, !4886, !4887, !4888, !5009, !5012, !5015, !5016, !5017, !5018, !5019, !5020, !5021, !5022, !5023, !5024, !5025, !5026, !5027, !5028, !5029, !5030, !5031, !5032, !5033, !5034, !5061, !5062, !5064, !5065, !5066, !5067, !5072, !5073, !5076}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4502, file: !139, line: 86, baseType: !4505, size: 960)
!4505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_bus", file: !115, line: 424, size: 960, elements: !4506)
!4506 = !{!4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518, !4519, !4520, !4525, !4811, !4812, !4813, !4814, !4815}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !4505, file: !115, line: 425, baseType: !305, size: 64)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "sysdev", scope: !4505, file: !115, line: 426, baseType: !305, size: 64, offset: 64)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "busnum", scope: !4505, file: !115, line: 427, baseType: !265, size: 32, offset: 128)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "bus_name", scope: !4505, file: !115, line: 428, baseType: !244, size: 64, offset: 192)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "uses_pio_for_control", scope: !4505, file: !115, line: 429, baseType: !1470, size: 8, offset: 256)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "otg_port", scope: !4505, file: !115, line: 433, baseType: !1470, size: 8, offset: 264)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "is_b_host", scope: !4505, file: !115, line: 434, baseType: !7, size: 1, offset: 272, flags: DIFlagBitField, extraData: i64 272)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "b_hnp_enable", scope: !4505, file: !115, line: 435, baseType: !7, size: 1, offset: 273, flags: DIFlagBitField, extraData: i64 272)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "no_stop_on_short", scope: !4505, file: !115, line: 436, baseType: !7, size: 1, offset: 274, flags: DIFlagBitField, extraData: i64 272)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "no_sg_constraint", scope: !4505, file: !115, line: 441, baseType: !7, size: 1, offset: 275, flags: DIFlagBitField, extraData: i64 272)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !4505, file: !115, line: 442, baseType: !7, size: 32, offset: 288)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "devnum_next", scope: !4505, file: !115, line: 444, baseType: !265, size: 32, offset: 320)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "devnum_next_mutex", scope: !4505, file: !115, line: 446, baseType: !805, size: 192, offset: 384)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "devmap", scope: !4505, file: !115, line: 448, baseType: !4521, size: 128, offset: 576)
!4521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_devmap", file: !115, line: 417, size: 128, elements: !4522)
!4522 = !{!4523}
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "devicemap", scope: !4521, file: !115, line: 418, baseType: !4524, size: 128)
!4524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 128, elements: !1686)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "root_hub", scope: !4505, file: !115, line: 449, baseType: !4526, size: 64, offset: 704)
!4526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4527, size: 64)
!4527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device", file: !115, line: 631, size: 10624, elements: !4528)
!4528 = !{!4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4547, !4548, !4550, !4551, !4553, !4593, !4594, !4611, !4672, !4754, !4755, !4757, !4758, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !4788, !4789, !4790, !4793, !4794, !4795, !4800, !4807, !4808, !4809, !4810}
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "devnum", scope: !4527, file: !115, line: 632, baseType: !265, size: 32)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "devpath", scope: !4527, file: !115, line: 633, baseType: !1851, size: 128, offset: 32)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "route", scope: !4527, file: !115, line: 634, baseType: !204, size: 32, offset: 160)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4527, file: !115, line: 635, baseType: !93, size: 32, offset: 192)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !4527, file: !115, line: 636, baseType: !105, size: 32, offset: 224)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "rx_lanes", scope: !4527, file: !115, line: 637, baseType: !7, size: 32, offset: 256)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lanes", scope: !4527, file: !115, line: 638, baseType: !7, size: 32, offset: 288)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "tt", scope: !4527, file: !115, line: 640, baseType: !4537, size: 64, offset: 320)
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 64)
!4538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_tt", file: !139, line: 554, size: 576, elements: !4539)
!4539 = !{!4540, !4541, !4542, !4543, !4544, !4545, !4546}
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "hub", scope: !4538, file: !139, line: 555, baseType: !4526, size: 64)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "multi", scope: !4538, file: !139, line: 556, baseType: !265, size: 32, offset: 64)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "think_time", scope: !4538, file: !139, line: 557, baseType: !7, size: 32, offset: 96)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !4538, file: !139, line: 558, baseType: !208, size: 64, offset: 128)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4538, file: !139, line: 561, baseType: !322, offset: 192)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "clear_list", scope: !4538, file: !139, line: 562, baseType: !214, size: 128, offset: 192)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "clear_work", scope: !4538, file: !139, line: 563, baseType: !2236, size: 256, offset: 320)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "ttport", scope: !4527, file: !115, line: 641, baseType: !265, size: 32, offset: 384)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "toggle", scope: !4527, file: !115, line: 643, baseType: !4549, size: 64, offset: 416)
!4549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1686)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4527, file: !115, line: 645, baseType: !4526, size: 64, offset: 512)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4527, file: !115, line: 646, baseType: !4552, size: 64, offset: 576)
!4552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "ep0", scope: !4527, file: !115, line: 647, baseType: !4554, size: 640, offset: 640)
!4554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_endpoint", file: !115, line: 67, size: 640, elements: !4555)
!4555 = !{!4556, !4568, !4576, !4584, !4585, !4586, !4589, !4590, !4591, !4592}
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4554, file: !115, line: 68, baseType: !4557, size: 72)
!4557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_endpoint_descriptor", file: !94, line: 407, size: 72, elements: !4558)
!4558 = !{!4559, !4560, !4561, !4562, !4563, !4565, !4566, !4567}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4557, file: !94, line: 408, baseType: !1471, size: 8)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4557, file: !94, line: 409, baseType: !1471, size: 8, offset: 8)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "bEndpointAddress", scope: !4557, file: !94, line: 411, baseType: !1471, size: 8, offset: 16)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4557, file: !94, line: 412, baseType: !1471, size: 8, offset: 24)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "wMaxPacketSize", scope: !4557, file: !94, line: 413, baseType: !4564, size: 16, offset: 32)
!4564 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !1993, line: 29, baseType: !985)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "bInterval", scope: !4557, file: !94, line: 414, baseType: !1471, size: 8, offset: 48)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "bRefresh", scope: !4557, file: !94, line: 418, baseType: !1471, size: 8, offset: 56)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "bSynchAddress", scope: !4557, file: !94, line: 419, baseType: !1471, size: 8, offset: 64)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "ss_ep_comp", scope: !4554, file: !115, line: 69, baseType: !4569, size: 48, offset: 72)
!4569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_ep_comp_descriptor", file: !94, line: 689, size: 48, elements: !4570)
!4570 = !{!4571, !4572, !4573, !4574, !4575}
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4569, file: !94, line: 690, baseType: !1471, size: 8)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4569, file: !94, line: 691, baseType: !1471, size: 8, offset: 8)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxBurst", scope: !4569, file: !94, line: 693, baseType: !1471, size: 8, offset: 16)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4569, file: !94, line: 694, baseType: !1471, size: 8, offset: 24)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "wBytesPerInterval", scope: !4569, file: !94, line: 695, baseType: !4564, size: 16, offset: 32)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "ssp_isoc_ep_comp", scope: !4554, file: !115, line: 70, baseType: !4577, size: 64, offset: 120)
!4577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ssp_isoc_ep_comp_descriptor", file: !94, line: 677, size: 64, elements: !4578)
!4578 = !{!4579, !4580, !4581, !4582}
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4577, file: !94, line: 678, baseType: !1471, size: 8)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4577, file: !94, line: 679, baseType: !1471, size: 8, offset: 8)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "wReseved", scope: !4577, file: !94, line: 680, baseType: !4564, size: 16, offset: 16)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerInterval", scope: !4577, file: !94, line: 681, baseType: !4583, size: 32, offset: 32)
!4583 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !1993, line: 31, baseType: !206)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !4554, file: !115, line: 71, baseType: !214, size: 128, offset: 192)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !4554, file: !115, line: 72, baseType: !208, size: 64, offset: 320)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "ep_dev", scope: !4554, file: !115, line: 73, baseType: !4587, size: 64, offset: 384)
!4587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4588, size: 64)
!4588 = !DICompositeType(tag: DW_TAG_structure_type, name: "ep_device", file: !115, line: 48, flags: DIFlagFwdDecl)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !4554, file: !115, line: 75, baseType: !2303, size: 64, offset: 448)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !4554, file: !115, line: 76, baseType: !265, size: 32, offset: 512)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4554, file: !115, line: 77, baseType: !265, size: 32, offset: 544)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !4554, file: !115, line: 78, baseType: !265, size: 32, offset: 576)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4527, file: !115, line: 649, baseType: !306, size: 5568, offset: 1280)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor", scope: !4527, file: !115, line: 651, baseType: !4595, size: 144, offset: 6848)
!4595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device_descriptor", file: !94, line: 289, size: 144, elements: !4596)
!4596 = !{!4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4610}
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4595, file: !94, line: 290, baseType: !1471, size: 8)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4595, file: !94, line: 291, baseType: !1471, size: 8, offset: 8)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "bcdUSB", scope: !4595, file: !94, line: 293, baseType: !4564, size: 16, offset: 16)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceClass", scope: !4595, file: !94, line: 294, baseType: !1471, size: 8, offset: 32)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceSubClass", scope: !4595, file: !94, line: 295, baseType: !1471, size: 8, offset: 40)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceProtocol", scope: !4595, file: !94, line: 296, baseType: !1471, size: 8, offset: 48)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxPacketSize0", scope: !4595, file: !94, line: 297, baseType: !1471, size: 8, offset: 56)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "idVendor", scope: !4595, file: !94, line: 298, baseType: !4564, size: 16, offset: 64)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "idProduct", scope: !4595, file: !94, line: 299, baseType: !4564, size: 16, offset: 80)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice", scope: !4595, file: !94, line: 300, baseType: !4564, size: 16, offset: 96)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "iManufacturer", scope: !4595, file: !94, line: 301, baseType: !1471, size: 8, offset: 112)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "iProduct", scope: !4595, file: !94, line: 302, baseType: !1471, size: 8, offset: 120)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "iSerialNumber", scope: !4595, file: !94, line: 303, baseType: !1471, size: 8, offset: 128)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "bNumConfigurations", scope: !4595, file: !94, line: 304, baseType: !1471, size: 8, offset: 136)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "bos", scope: !4527, file: !115, line: 652, baseType: !4612, size: 64, offset: 7040)
!4612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4613, size: 64)
!4613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_bos", file: !115, line: 396, size: 384, elements: !4614)
!4614 = !{!4615, !4623, !4631, !4643, !4656, !4665}
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4613, file: !115, line: 397, baseType: !4616, size: 64)
!4616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4617, size: 64)
!4617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_bos_descriptor", file: !94, line: 844, size: 40, elements: !4618)
!4618 = !{!4619, !4620, !4621, !4622}
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4617, file: !94, line: 845, baseType: !1471, size: 8)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4617, file: !94, line: 846, baseType: !1471, size: 8, offset: 8)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "wTotalLength", scope: !4617, file: !94, line: 848, baseType: !4564, size: 16, offset: 16)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "bNumDeviceCaps", scope: !4617, file: !94, line: 849, baseType: !1471, size: 8, offset: 32)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "ext_cap", scope: !4613, file: !115, line: 400, baseType: !4624, size: 64, offset: 64)
!4624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4625, size: 64)
!4625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ext_cap_descriptor", file: !94, line: 895, size: 56, elements: !4626)
!4626 = !{!4627, !4628, !4629, !4630}
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4625, file: !94, line: 896, baseType: !1471, size: 8)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4625, file: !94, line: 897, baseType: !1471, size: 8, offset: 8)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4625, file: !94, line: 898, baseType: !1471, size: 8, offset: 16)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4625, file: !94, line: 899, baseType: !4583, size: 32, offset: 24)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "ss_cap", scope: !4613, file: !115, line: 401, baseType: !4632, size: 64, offset: 128)
!4632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4633, size: 64)
!4633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_cap_descriptor", file: !94, line: 917, size: 80, elements: !4634)
!4634 = !{!4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642}
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4633, file: !94, line: 918, baseType: !1471, size: 8)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4633, file: !94, line: 919, baseType: !1471, size: 8, offset: 8)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4633, file: !94, line: 920, baseType: !1471, size: 8, offset: 16)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4633, file: !94, line: 921, baseType: !1471, size: 8, offset: 24)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "wSpeedSupported", scope: !4633, file: !94, line: 923, baseType: !4564, size: 16, offset: 32)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionalitySupport", scope: !4633, file: !94, line: 928, baseType: !1471, size: 8, offset: 48)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "bU1devExitLat", scope: !4633, file: !94, line: 929, baseType: !1471, size: 8, offset: 56)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "bU2DevExitLat", scope: !4633, file: !94, line: 930, baseType: !4564, size: 16, offset: 64)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "ssp_cap", scope: !4613, file: !115, line: 402, baseType: !4644, size: 64, offset: 192)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4645, size: 64)
!4645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ssp_cap_descriptor", file: !94, line: 955, size: 128, elements: !4646)
!4646 = !{!4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4645, file: !94, line: 956, baseType: !1471, size: 8)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4645, file: !94, line: 957, baseType: !1471, size: 8, offset: 8)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4645, file: !94, line: 958, baseType: !1471, size: 8, offset: 16)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "bReserved", scope: !4645, file: !94, line: 959, baseType: !1471, size: 8, offset: 24)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4645, file: !94, line: 960, baseType: !4583, size: 32, offset: 32)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "wFunctionalitySupport", scope: !4645, file: !94, line: 963, baseType: !4564, size: 16, offset: 64)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "wReserved", scope: !4645, file: !94, line: 967, baseType: !4564, size: 16, offset: 80)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "bmSublinkSpeedAttr", scope: !4645, file: !94, line: 968, baseType: !4655, size: 32, offset: 96)
!4655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4583, size: 32, elements: !1489)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "ss_id", scope: !4613, file: !115, line: 403, baseType: !4657, size: 64, offset: 256)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_container_id_descriptor", file: !94, line: 940, size: 160, elements: !4659)
!4659 = !{!4660, !4661, !4662, !4663, !4664}
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4658, file: !94, line: 941, baseType: !1471, size: 8)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4658, file: !94, line: 942, baseType: !1471, size: 8, offset: 8)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4658, file: !94, line: 943, baseType: !1471, size: 8, offset: 16)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "bReserved", scope: !4658, file: !94, line: 944, baseType: !1471, size: 8, offset: 24)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "ContainerID", scope: !4658, file: !94, line: 945, baseType: !3422, size: 128, offset: 32)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "ptm_cap", scope: !4613, file: !115, line: 404, baseType: !4666, size: 64, offset: 320)
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4667, size: 64)
!4667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ptm_cap_descriptor", file: !94, line: 1080, size: 24, elements: !4668)
!4668 = !{!4669, !4670, !4671}
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4667, file: !94, line: 1081, baseType: !1471, size: 8)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4667, file: !94, line: 1082, baseType: !1471, size: 8, offset: 8)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !4667, file: !94, line: 1083, baseType: !1471, size: 8, offset: 16)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !4527, file: !115, line: 653, baseType: !4673, size: 64, offset: 7104)
!4673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4674, size: 64)
!4674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_config", file: !115, line: 374, size: 5440, elements: !4675)
!4675 = !{!4676, !4687, !4688, !4701, !4743, !4752, !4753}
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4674, file: !115, line: 375, baseType: !4677, size: 72)
!4677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_config_descriptor", file: !94, line: 349, size: 72, elements: !4678)
!4678 = !{!4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686}
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4677, file: !94, line: 350, baseType: !1471, size: 8)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4677, file: !94, line: 351, baseType: !1471, size: 8, offset: 8)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "wTotalLength", scope: !4677, file: !94, line: 353, baseType: !4564, size: 16, offset: 16)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "bNumInterfaces", scope: !4677, file: !94, line: 354, baseType: !1471, size: 8, offset: 32)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "bConfigurationValue", scope: !4677, file: !94, line: 355, baseType: !1471, size: 8, offset: 40)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "iConfiguration", scope: !4677, file: !94, line: 356, baseType: !1471, size: 8, offset: 48)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !4677, file: !94, line: 357, baseType: !1471, size: 8, offset: 56)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxPower", scope: !4677, file: !94, line: 358, baseType: !1471, size: 8, offset: 64)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4674, file: !115, line: 377, baseType: !363, size: 64, offset: 128)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "intf_assoc", scope: !4674, file: !115, line: 381, baseType: !4689, size: 1024, offset: 192)
!4689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4690, size: 1024, elements: !1852)
!4690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4691, size: 64)
!4691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_assoc_descriptor", file: !94, line: 783, size: 64, elements: !4692)
!4692 = !{!4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700}
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4691, file: !94, line: 784, baseType: !1471, size: 8)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4691, file: !94, line: 785, baseType: !1471, size: 8, offset: 8)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "bFirstInterface", scope: !4691, file: !94, line: 787, baseType: !1471, size: 8, offset: 16)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceCount", scope: !4691, file: !94, line: 788, baseType: !1471, size: 8, offset: 24)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionClass", scope: !4691, file: !94, line: 789, baseType: !1471, size: 8, offset: 32)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionSubClass", scope: !4691, file: !94, line: 790, baseType: !1471, size: 8, offset: 40)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionProtocol", scope: !4691, file: !94, line: 791, baseType: !1471, size: 8, offset: 48)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "iFunction", scope: !4691, file: !94, line: 792, baseType: !1471, size: 8, offset: 56)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !4674, file: !115, line: 385, baseType: !4702, size: 2048, offset: 1216)
!4702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4703, size: 2048, elements: !2948)
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4704, size: 64)
!4704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface", file: !115, line: 232, size: 6272, elements: !4705)
!4705 = !{!4706, !4727, !4728, !4729, !4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742}
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "altsetting", scope: !4704, file: !115, line: 235, baseType: !4707, size: 64)
!4707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4708, size: 64)
!4708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_interface", file: !115, line: 82, size: 320, elements: !4709)
!4709 = !{!4710, !4722, !4723, !4724, !4726}
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4708, file: !115, line: 83, baseType: !4711, size: 72)
!4711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_descriptor", file: !94, line: 389, size: 72, elements: !4712)
!4712 = !{!4713, !4714, !4715, !4716, !4717, !4718, !4719, !4720, !4721}
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !4711, file: !94, line: 390, baseType: !1471, size: 8)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !4711, file: !94, line: 391, baseType: !1471, size: 8, offset: 8)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceNumber", scope: !4711, file: !94, line: 393, baseType: !1471, size: 8, offset: 16)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "bAlternateSetting", scope: !4711, file: !94, line: 394, baseType: !1471, size: 8, offset: 24)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "bNumEndpoints", scope: !4711, file: !94, line: 395, baseType: !1471, size: 8, offset: 32)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceClass", scope: !4711, file: !94, line: 396, baseType: !1471, size: 8, offset: 40)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceSubClass", scope: !4711, file: !94, line: 397, baseType: !1471, size: 8, offset: 48)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceProtocol", scope: !4711, file: !94, line: 398, baseType: !1471, size: 8, offset: 56)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "iInterface", scope: !4711, file: !94, line: 399, baseType: !1471, size: 8, offset: 64)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !4708, file: !115, line: 85, baseType: !265, size: 32, offset: 96)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !4708, file: !115, line: 86, baseType: !2303, size: 64, offset: 128)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "endpoint", scope: !4708, file: !115, line: 91, baseType: !4725, size: 64, offset: 192)
!4725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4554, size: 64)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4708, file: !115, line: 93, baseType: !363, size: 64, offset: 256)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "cur_altsetting", scope: !4704, file: !115, line: 237, baseType: !4707, size: 64, offset: 64)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "num_altsetting", scope: !4704, file: !115, line: 239, baseType: !7, size: 32, offset: 128)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "intf_assoc", scope: !4704, file: !115, line: 243, baseType: !4690, size: 64, offset: 192)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4704, file: !115, line: 245, baseType: !265, size: 32, offset: 256)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "condition", scope: !4704, file: !115, line: 247, baseType: !114, size: 32, offset: 288)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_files_created", scope: !4704, file: !115, line: 248, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "ep_devs_created", scope: !4704, file: !115, line: 249, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !4704, file: !115, line: 250, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "needs_remote_wakeup", scope: !4704, file: !115, line: 251, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "needs_altsetting0", scope: !4704, file: !115, line: 252, baseType: !7, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "needs_binding", scope: !4704, file: !115, line: 253, baseType: !7, size: 1, offset: 325, flags: DIFlagBitField, extraData: i64 320)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "resetting_device", scope: !4704, file: !115, line: 254, baseType: !7, size: 1, offset: 326, flags: DIFlagBitField, extraData: i64 320)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "authorized", scope: !4704, file: !115, line: 255, baseType: !7, size: 1, offset: 327, flags: DIFlagBitField, extraData: i64 320)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4704, file: !115, line: 257, baseType: !306, size: 5568, offset: 384)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "usb_dev", scope: !4704, file: !115, line: 258, baseType: !305, size: 64, offset: 5952)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "reset_ws", scope: !4704, file: !115, line: 259, baseType: !2236, size: 256, offset: 6016)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "intf_cache", scope: !4674, file: !115, line: 389, baseType: !4744, size: 2048, offset: 3264)
!4744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4745, size: 2048, elements: !2948)
!4745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4746, size: 64)
!4746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_cache", file: !115, line: 322, size: 64, elements: !4747)
!4747 = !{!4748, !4749, !4750}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "num_altsetting", scope: !4746, file: !115, line: 323, baseType: !7, size: 32)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4746, file: !115, line: 324, baseType: !1930, size: 32, offset: 32)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "altsetting", scope: !4746, file: !115, line: 328, baseType: !4751, offset: 64)
!4751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4708, elements: !2233)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !4674, file: !115, line: 391, baseType: !2303, size: 64, offset: 5312)
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !4674, file: !115, line: 392, baseType: !265, size: 32, offset: 5376)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "actconfig", scope: !4527, file: !115, line: 655, baseType: !4673, size: 64, offset: 7168)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "ep_in", scope: !4527, file: !115, line: 656, baseType: !4756, size: 1024, offset: 7232)
!4756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4725, size: 1024, elements: !1852)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "ep_out", scope: !4527, file: !115, line: 657, baseType: !4756, size: 1024, offset: 8256)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "rawdescriptors", scope: !4527, file: !115, line: 659, baseType: !4759, size: 64, offset: 9280)
!4759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "bus_mA", scope: !4527, file: !115, line: 661, baseType: !301, size: 16, offset: 9344)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "portnum", scope: !4527, file: !115, line: 662, baseType: !1470, size: 8, offset: 9360)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4527, file: !115, line: 663, baseType: !1470, size: 8, offset: 9368)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "devaddr", scope: !4527, file: !115, line: 664, baseType: !1470, size: 8, offset: 9376)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "can_submit", scope: !4527, file: !115, line: 666, baseType: !7, size: 1, offset: 9384, flags: DIFlagBitField, extraData: i64 9384)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "persist_enabled", scope: !4527, file: !115, line: 667, baseType: !7, size: 1, offset: 9385, flags: DIFlagBitField, extraData: i64 9384)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "have_langid", scope: !4527, file: !115, line: 668, baseType: !7, size: 1, offset: 9386, flags: DIFlagBitField, extraData: i64 9384)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "authorized", scope: !4527, file: !115, line: 669, baseType: !7, size: 1, offset: 9387, flags: DIFlagBitField, extraData: i64 9384)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !4527, file: !115, line: 670, baseType: !7, size: 1, offset: 9388, flags: DIFlagBitField, extraData: i64 9384)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "wusb", scope: !4527, file: !115, line: 671, baseType: !7, size: 1, offset: 9389, flags: DIFlagBitField, extraData: i64 9384)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_capable", scope: !4527, file: !115, line: 672, baseType: !7, size: 1, offset: 9390, flags: DIFlagBitField, extraData: i64 9384)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_capable", scope: !4527, file: !115, line: 673, baseType: !7, size: 1, offset: 9391, flags: DIFlagBitField, extraData: i64 9384)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_besl_capable", scope: !4527, file: !115, line: 674, baseType: !7, size: 1, offset: 9392, flags: DIFlagBitField, extraData: i64 9384)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_enabled", scope: !4527, file: !115, line: 675, baseType: !7, size: 1, offset: 9393, flags: DIFlagBitField, extraData: i64 9384)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_allowed", scope: !4527, file: !115, line: 676, baseType: !7, size: 1, offset: 9394, flags: DIFlagBitField, extraData: i64 9384)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "usb3_lpm_u1_enabled", scope: !4527, file: !115, line: 677, baseType: !7, size: 1, offset: 9395, flags: DIFlagBitField, extraData: i64 9384)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "usb3_lpm_u2_enabled", scope: !4527, file: !115, line: 678, baseType: !7, size: 1, offset: 9396, flags: DIFlagBitField, extraData: i64 9384)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "string_langid", scope: !4527, file: !115, line: 679, baseType: !265, size: 32, offset: 9408)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !4527, file: !115, line: 682, baseType: !363, size: 64, offset: 9472)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !4527, file: !115, line: 683, baseType: !363, size: 64, offset: 9536)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !4527, file: !115, line: 684, baseType: !363, size: 64, offset: 9600)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "filelist", scope: !4527, file: !115, line: 686, baseType: !214, size: 128, offset: 9664)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "maxchild", scope: !4527, file: !115, line: 688, baseType: !265, size: 32, offset: 9792)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !4527, file: !115, line: 690, baseType: !204, size: 32, offset: 9824)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "urbnum", scope: !4527, file: !115, line: 691, baseType: !879, size: 32, offset: 9856)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "active_duration", scope: !4527, file: !115, line: 693, baseType: !248, size: 64, offset: 9920)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "connect_time", scope: !4527, file: !115, line: 696, baseType: !248, size: 64, offset: 9984)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "do_remote_wakeup", scope: !4527, file: !115, line: 698, baseType: !7, size: 1, offset: 10048, flags: DIFlagBitField, extraData: i64 10048)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "reset_resume", scope: !4527, file: !115, line: 699, baseType: !7, size: 1, offset: 10049, flags: DIFlagBitField, extraData: i64 10048)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "port_is_suspended", scope: !4527, file: !115, line: 700, baseType: !7, size: 1, offset: 10050, flags: DIFlagBitField, extraData: i64 10048)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "wusb_dev", scope: !4527, file: !115, line: 702, baseType: !4791, size: 64, offset: 10112)
!4791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4792, size: 64)
!4792 = !DICompositeType(tag: DW_TAG_structure_type, name: "wusb_dev", file: !115, line: 28, flags: DIFlagFwdDecl)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "slot_id", scope: !4527, file: !115, line: 703, baseType: !265, size: 32, offset: 10176)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !4527, file: !115, line: 704, baseType: !121, size: 32, offset: 10208)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "l1_params", scope: !4527, file: !115, line: 705, baseType: !4796, size: 64, offset: 10240)
!4796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb2_lpm_parameters", file: !115, line: 502, size: 64, elements: !4797)
!4797 = !{!4798, !4799}
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "besl", scope: !4796, file: !115, line: 506, baseType: !7, size: 32)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4796, file: !115, line: 512, baseType: !265, size: 32, offset: 32)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "u1_params", scope: !4527, file: !115, line: 706, baseType: !4801, size: 128, offset: 10304)
!4801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb3_lpm_parameters", file: !115, line: 522, size: 128, elements: !4802)
!4802 = !{!4803, !4804, !4805, !4806}
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "mel", scope: !4801, file: !115, line: 529, baseType: !7, size: 32)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "pel", scope: !4801, file: !115, line: 535, baseType: !7, size: 32, offset: 32)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "sel", scope: !4801, file: !115, line: 545, baseType: !7, size: 32, offset: 64)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4801, file: !115, line: 551, baseType: !265, size: 32, offset: 96)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "u2_params", scope: !4527, file: !115, line: 707, baseType: !4801, size: 128, offset: 10432)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_disable_count", scope: !4527, file: !115, line: 708, baseType: !7, size: 32, offset: 10560)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "hub_delay", scope: !4527, file: !115, line: 710, baseType: !984, size: 16, offset: 10592)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "use_generic_driver", scope: !4527, file: !115, line: 711, baseType: !7, size: 1, offset: 10608, flags: DIFlagBitField, extraData: i64 10608)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "hs_companion", scope: !4505, file: !115, line: 450, baseType: !4552, size: 64, offset: 768)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_allocated", scope: !4505, file: !115, line: 452, baseType: !265, size: 32, offset: 832)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_int_reqs", scope: !4505, file: !115, line: 459, baseType: !265, size: 32, offset: 864)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_isoc_reqs", scope: !4505, file: !115, line: 460, baseType: !265, size: 32, offset: 896)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "resuming_ports", scope: !4505, file: !115, line: 462, baseType: !7, size: 32, offset: 928)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4502, file: !139, line: 87, baseType: !1930, size: 32, offset: 960)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "product_desc", scope: !4502, file: !139, line: 89, baseType: !244, size: 64, offset: 1024)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !4502, file: !139, line: 90, baseType: !265, size: 32, offset: 1088)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "irq_descr", scope: !4502, file: !139, line: 94, baseType: !4820, size: 192, offset: 1120)
!4820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 192, elements: !4821)
!4821 = !{!4822}
!4822 = !DISubrange(count: 24)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "rh_timer", scope: !4502, file: !139, line: 96, baseType: !4037, size: 320, offset: 1344)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "status_urb", scope: !4502, file: !139, line: 97, baseType: !4825, size: 64, offset: 1664)
!4825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4826, size: 64)
!4826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "urb", file: !115, line: 1561, size: 1472, elements: !4827)
!4827 = !{!4828, !4829, !4830, !4831, !4832, !4833, !4834, !4835, !4844, !4845, !4846, !4847, !4848, !4849, !4850, !4851, !4852, !4862, !4863, !4864, !4865, !4866, !4867, !4868, !4869, !4870, !4871, !4872, !4873, !4878}
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4826, file: !115, line: 1563, baseType: !1930, size: 32)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "unlinked", scope: !4826, file: !115, line: 1564, baseType: !265, size: 32, offset: 32)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !4826, file: !115, line: 1565, baseType: !208, size: 64, offset: 64)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "use_count", scope: !4826, file: !115, line: 1566, baseType: !879, size: 32, offset: 128)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "reject", scope: !4826, file: !115, line: 1567, baseType: !879, size: 32, offset: 160)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !4826, file: !115, line: 1570, baseType: !214, size: 128, offset: 192)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "anchor_list", scope: !4826, file: !115, line: 1572, baseType: !214, size: 128, offset: 320)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "anchor", scope: !4826, file: !115, line: 1573, baseType: !4836, size: 64, offset: 448)
!4836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4837, size: 64)
!4837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_anchor", file: !115, line: 1360, size: 320, elements: !4838)
!4838 = !{!4839, !4840, !4841, !4842, !4843}
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !4837, file: !115, line: 1361, baseType: !214, size: 128)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4837, file: !115, line: 1362, baseType: !1598, size: 128, offset: 128)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4837, file: !115, line: 1363, baseType: !322, offset: 256)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_wakeups", scope: !4837, file: !115, line: 1364, baseType: !879, size: 32, offset: 256)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "poisoned", scope: !4837, file: !115, line: 1365, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4826, file: !115, line: 1574, baseType: !4526, size: 64, offset: 512)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "ep", scope: !4826, file: !115, line: 1575, baseType: !4725, size: 64, offset: 576)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !4826, file: !115, line: 1576, baseType: !7, size: 32, offset: 640)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !4826, file: !115, line: 1577, baseType: !7, size: 32, offset: 672)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4826, file: !115, line: 1578, baseType: !265, size: 32, offset: 704)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_flags", scope: !4826, file: !115, line: 1579, baseType: !7, size: 32, offset: 736)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_buffer", scope: !4826, file: !115, line: 1580, baseType: !208, size: 64, offset: 768)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_dma", scope: !4826, file: !115, line: 1581, baseType: !1045, size: 64, offset: 832)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !4826, file: !115, line: 1582, baseType: !4853, size: 64, offset: 896)
!4853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4854, size: 64)
!4854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4855, line: 11, size: 256, elements: !4856)
!4855 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4856 = !{!4857, !4858, !4859, !4860, !4861}
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4854, file: !4855, line: 12, baseType: !248, size: 64)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4854, file: !4855, line: 13, baseType: !7, size: 32, offset: 64)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4854, file: !4855, line: 14, baseType: !7, size: 32, offset: 96)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4854, file: !4855, line: 15, baseType: !1045, size: 64, offset: 128)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4854, file: !4855, line: 17, baseType: !7, size: 32, offset: 192)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "num_mapped_sgs", scope: !4826, file: !115, line: 1583, baseType: !265, size: 32, offset: 960)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "num_sgs", scope: !4826, file: !115, line: 1584, baseType: !265, size: 32, offset: 992)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_buffer_length", scope: !4826, file: !115, line: 1585, baseType: !204, size: 32, offset: 1024)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !4826, file: !115, line: 1586, baseType: !204, size: 32, offset: 1056)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "setup_packet", scope: !4826, file: !115, line: 1587, baseType: !2303, size: 64, offset: 1088)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "setup_dma", scope: !4826, file: !115, line: 1588, baseType: !1045, size: 64, offset: 1152)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !4826, file: !115, line: 1589, baseType: !265, size: 32, offset: 1216)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "number_of_packets", scope: !4826, file: !115, line: 1590, baseType: !265, size: 32, offset: 1248)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !4826, file: !115, line: 1591, baseType: !265, size: 32, offset: 1280)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !4826, file: !115, line: 1593, baseType: !265, size: 32, offset: 1312)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4826, file: !115, line: 1594, baseType: !208, size: 64, offset: 1344)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4826, file: !115, line: 1595, baseType: !4874, size: 64, offset: 1408)
!4874 = !DIDerivedType(tag: DW_TAG_typedef, name: "usb_complete_t", file: !115, line: 1376, baseType: !4875)
!4875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4876, size: 64)
!4876 = !DISubroutineType(types: !4877)
!4877 = !{null, !4825}
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "iso_frame_desc", scope: !4826, file: !115, line: 1596, baseType: !4879, offset: 1472)
!4879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4880, elements: !2233)
!4880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_iso_packet_descriptor", file: !115, line: 1351, size: 128, elements: !4881)
!4881 = !{!4882, !4883, !4884, !4885}
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4880, file: !115, line: 1352, baseType: !7, size: 32)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4880, file: !115, line: 1353, baseType: !7, size: 32, offset: 32)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !4880, file: !115, line: 1354, baseType: !7, size: 32, offset: 64)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4880, file: !115, line: 1355, baseType: !265, size: 32, offset: 96)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_work", scope: !4502, file: !139, line: 99, baseType: !2236, size: 256, offset: 1728)
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "died_work", scope: !4502, file: !139, line: 101, baseType: !2236, size: 256, offset: 1984)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4502, file: !139, line: 106, baseType: !4889, size: 64, offset: 2240)
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4891)
!4891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hc_driver", file: !139, line: 249, size: 2880, elements: !4892)
!4892 = !{!4893, !4894, !4895, !4896, !4901, !4902, !4906, !4907, !4911, !4912, !4916, !4917, !4918, !4922, !4926, !4927, !4931, !4935, !4936, !4940, !4944, !4945, !4946, !4950, !4954, !4958, !4962, !4963, !4967, !4971, !4976, !4980, !4984, !4985, !4986, !4987, !4988, !4989, !4993, !4994, !4995, !4999, !5003, !5004, !5005}
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !4891, file: !139, line: 250, baseType: !244, size: 64)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "product_desc", scope: !4891, file: !139, line: 251, baseType: !244, size: 64, offset: 64)
!4895 = !DIDerivedType(tag: DW_TAG_member, name: "hcd_priv_size", scope: !4891, file: !139, line: 252, baseType: !409, size: 64, offset: 128)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4891, file: !139, line: 255, baseType: !4897, size: 64, offset: 192)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{!4900, !4501}
!4900 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !127, line: 17, baseType: !126)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4891, file: !139, line: 257, baseType: !265, size: 32, offset: 256)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4891, file: !139, line: 271, baseType: !4903, size: 64, offset: 320)
!4903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4904, size: 64)
!4904 = !DISubroutineType(types: !4905)
!4905 = !{!265, !4501}
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4891, file: !139, line: 272, baseType: !4903, size: 64, offset: 384)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "pci_suspend", scope: !4891, file: !139, line: 278, baseType: !4908, size: 64, offset: 448)
!4908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4909, size: 64)
!4909 = !DISubroutineType(types: !4910)
!4910 = !{!265, !4501, !569}
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "pci_resume", scope: !4891, file: !139, line: 281, baseType: !4908, size: 64, offset: 512)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !4891, file: !139, line: 284, baseType: !4913, size: 64, offset: 576)
!4913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4914, size: 64)
!4914 = !DISubroutineType(types: !4915)
!4915 = !{null, !4501}
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4891, file: !139, line: 287, baseType: !4913, size: 64, offset: 640)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "get_frame_number", scope: !4891, file: !139, line: 290, baseType: !4903, size: 64, offset: 704)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "urb_enqueue", scope: !4891, file: !139, line: 293, baseType: !4919, size: 64, offset: 768)
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4920, size: 64)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!265, !4501, !4825, !875}
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "urb_dequeue", scope: !4891, file: !139, line: 295, baseType: !4923, size: 64, offset: 832)
!4923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4924, size: 64)
!4924 = !DISubroutineType(types: !4925)
!4925 = !{!265, !4501, !4825, !265}
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "map_urb_for_dma", scope: !4891, file: !139, line: 307, baseType: !4919, size: 64, offset: 896)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_urb_for_dma", scope: !4891, file: !139, line: 309, baseType: !4928, size: 64, offset: 960)
!4928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4929, size: 64)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{null, !4501, !4825}
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "endpoint_disable", scope: !4891, file: !139, line: 312, baseType: !4932, size: 64, offset: 1024)
!4932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4933, size: 64)
!4933 = !DISubroutineType(types: !4934)
!4934 = !{null, !4501, !4725}
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "endpoint_reset", scope: !4891, file: !139, line: 317, baseType: !4932, size: 64, offset: 1088)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "hub_status_data", scope: !4891, file: !139, line: 321, baseType: !4937, size: 64, offset: 1152)
!4937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4938, size: 64)
!4938 = !DISubroutineType(types: !4939)
!4939 = !{!265, !4501, !363}
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "hub_control", scope: !4891, file: !139, line: 322, baseType: !4941, size: 64, offset: 1216)
!4941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4942, size: 64)
!4942 = !DISubroutineType(types: !4943)
!4943 = !{!265, !4501, !984, !984, !984, !363, !984}
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "bus_suspend", scope: !4891, file: !139, line: 325, baseType: !4903, size: 64, offset: 1280)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "bus_resume", scope: !4891, file: !139, line: 326, baseType: !4903, size: 64, offset: 1344)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "start_port_reset", scope: !4891, file: !139, line: 327, baseType: !4947, size: 64, offset: 1408)
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 64)
!4948 = !DISubroutineType(types: !4949)
!4949 = !{!265, !4501, !7}
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "get_resuming_ports", scope: !4891, file: !139, line: 328, baseType: !4951, size: 64, offset: 1472)
!4951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4952, size: 64)
!4952 = !DISubroutineType(types: !4953)
!4953 = !{!248, !4501}
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish_port", scope: !4891, file: !139, line: 331, baseType: !4955, size: 64, offset: 1536)
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 64)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{null, !4501, !265}
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "port_handed_over", scope: !4891, file: !139, line: 333, baseType: !4959, size: 64, offset: 1600)
!4959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4960, size: 64)
!4960 = !DISubroutineType(types: !4961)
!4961 = !{!265, !4501, !265}
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "clear_tt_buffer_complete", scope: !4891, file: !139, line: 336, baseType: !4932, size: 64, offset: 1664)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dev", scope: !4891, file: !139, line: 341, baseType: !4964, size: 64, offset: 1728)
!4964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4965, size: 64)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{!265, !4501, !4526}
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "free_dev", scope: !4891, file: !139, line: 343, baseType: !4968, size: 64, offset: 1792)
!4968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4969, size: 64)
!4969 = !DISubroutineType(types: !4970)
!4970 = !{null, !4501, !4526}
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_streams", scope: !4891, file: !139, line: 345, baseType: !4972, size: 64, offset: 1856)
!4972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4973, size: 64)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{!265, !4501, !4526, !4975, !7, !7, !875}
!4975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4725, size: 64)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "free_streams", scope: !4891, file: !139, line: 351, baseType: !4977, size: 64, offset: 1920)
!4977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4978, size: 64)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{!265, !4501, !4526, !4975, !7, !875}
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "add_endpoint", scope: !4891, file: !139, line: 366, baseType: !4981, size: 64, offset: 1984)
!4981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4982, size: 64)
!4982 = !DISubroutineType(types: !4983)
!4983 = !{!265, !4501, !4526, !4725}
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "drop_endpoint", scope: !4891, file: !139, line: 369, baseType: !4981, size: 64, offset: 2048)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "check_bandwidth", scope: !4891, file: !139, line: 376, baseType: !4964, size: 64, offset: 2112)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "reset_bandwidth", scope: !4891, file: !139, line: 384, baseType: !4968, size: 64, offset: 2176)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "address_device", scope: !4891, file: !139, line: 386, baseType: !4964, size: 64, offset: 2240)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "enable_device", scope: !4891, file: !139, line: 388, baseType: !4964, size: 64, offset: 2304)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "update_hub_device", scope: !4891, file: !139, line: 392, baseType: !4990, size: 64, offset: 2368)
!4990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4991, size: 64)
!4991 = !DISubroutineType(types: !4992)
!4992 = !{!265, !4501, !4526, !4537, !875}
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "reset_device", scope: !4891, file: !139, line: 394, baseType: !4964, size: 64, offset: 2432)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "update_device", scope: !4891, file: !139, line: 398, baseType: !4964, size: 64, offset: 2496)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "set_usb2_hw_lpm", scope: !4891, file: !139, line: 399, baseType: !4996, size: 64, offset: 2560)
!4996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4997, size: 64)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{!265, !4501, !4526, !265}
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "enable_usb3_lpm_timeout", scope: !4891, file: !139, line: 402, baseType: !5000, size: 64, offset: 2624)
!5000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5001, size: 64)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{!265, !4501, !4526, !132}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "disable_usb3_lpm_timeout", scope: !4891, file: !139, line: 407, baseType: !5000, size: 64, offset: 2688)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "find_raw_port_number", scope: !4891, file: !139, line: 409, baseType: !4959, size: 64, offset: 2752)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "port_power", scope: !4891, file: !139, line: 411, baseType: !5006, size: 64, offset: 2816)
!5006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5007, size: 64)
!5007 = !DISubroutineType(types: !5008)
!5008 = !{!265, !4501, !265, !569}
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "usb_phy", scope: !4502, file: !139, line: 112, baseType: !5010, size: 64, offset: 2304)
!5010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5011, size: 64)
!5011 = !DICompositeType(tag: DW_TAG_structure_type, name: "usb_phy", file: !139, line: 112, flags: DIFlagFwdDecl)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "phy_roothub", scope: !4502, file: !139, line: 113, baseType: !5013, size: 64, offset: 2368)
!5013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5014, size: 64)
!5014 = !DICompositeType(tag: DW_TAG_structure_type, name: "usb_phy_roothub", file: !139, line: 113, flags: DIFlagFwdDecl)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4502, file: !139, line: 119, baseType: !248, size: 64, offset: 2432)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "dev_policy", scope: !4502, file: !139, line: 151, baseType: !138, size: 32, offset: 2496)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "rh_registered", scope: !4502, file: !139, line: 154, baseType: !7, size: 1, offset: 2528, flags: DIFlagBitField, extraData: i64 2528)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "rh_pollable", scope: !4502, file: !139, line: 155, baseType: !7, size: 1, offset: 2529, flags: DIFlagBitField, extraData: i64 2528)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !4502, file: !139, line: 156, baseType: !7, size: 1, offset: 2530, flags: DIFlagBitField, extraData: i64 2528)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !4502, file: !139, line: 157, baseType: !7, size: 1, offset: 2531, flags: DIFlagBitField, extraData: i64 2528)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "skip_phy_initialization", scope: !4502, file: !139, line: 163, baseType: !7, size: 1, offset: 2532, flags: DIFlagBitField, extraData: i64 2528)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "uses_new_polling", scope: !4502, file: !139, line: 167, baseType: !7, size: 1, offset: 2533, flags: DIFlagBitField, extraData: i64 2528)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "wireless", scope: !4502, file: !139, line: 168, baseType: !7, size: 1, offset: 2534, flags: DIFlagBitField, extraData: i64 2528)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "has_tt", scope: !4502, file: !139, line: 169, baseType: !7, size: 1, offset: 2535, flags: DIFlagBitField, extraData: i64 2528)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "amd_resume_bug", scope: !4502, file: !139, line: 170, baseType: !7, size: 1, offset: 2536, flags: DIFlagBitField, extraData: i64 2528)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "can_do_streams", scope: !4502, file: !139, line: 171, baseType: !7, size: 1, offset: 2537, flags: DIFlagBitField, extraData: i64 2528)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "tpl_support", scope: !4502, file: !139, line: 172, baseType: !7, size: 1, offset: 2538, flags: DIFlagBitField, extraData: i64 2528)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "cant_recv_wakeups", scope: !4502, file: !139, line: 173, baseType: !7, size: 1, offset: 2539, flags: DIFlagBitField, extraData: i64 2528)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4502, file: !139, line: 176, baseType: !7, size: 32, offset: 2560)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4502, file: !139, line: 177, baseType: !208, size: 64, offset: 2624)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "rsrc_start", scope: !4502, file: !139, line: 178, baseType: !237, size: 64, offset: 2688)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "rsrc_len", scope: !4502, file: !139, line: 179, baseType: !237, size: 64, offset: 2752)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "power_budget", scope: !4502, file: !139, line: 180, baseType: !7, size: 32, offset: 2816)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "high_prio_bh", scope: !4502, file: !139, line: 182, baseType: !5035, size: 576, offset: 2880)
!5035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "giveback_urb_bh", file: !139, line: 67, size: 576, elements: !5036)
!5036 = !{!5037, !5038, !5039, !5040, !5060}
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !5035, file: !139, line: 68, baseType: !569, size: 8)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5035, file: !139, line: 69, baseType: !322, offset: 8)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5035, file: !139, line: 70, baseType: !214, size: 128, offset: 64)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "bh", scope: !5035, file: !139, line: 71, baseType: !5041, size: 320, offset: 192)
!5041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !290, line: 609, size: 320, elements: !5042)
!5042 = !{!5043, !5045, !5046, !5047, !5048, !5059}
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5041, file: !290, line: 611, baseType: !5044, size: 64)
!5044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5041, size: 64)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5041, file: !290, line: 612, baseType: !248, size: 64, offset: 64)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5041, file: !290, line: 613, baseType: !879, size: 32, offset: 128)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !5041, file: !290, line: 614, baseType: !569, size: 8, offset: 160)
!5048 = !DIDerivedType(tag: DW_TAG_member, scope: !5041, file: !290, line: 615, baseType: !5049, size: 64, offset: 192)
!5049 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5041, file: !290, line: 615, size: 64, elements: !5050)
!5050 = !{!5051, !5055}
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5049, file: !290, line: 616, baseType: !5052, size: 64)
!5052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5053, size: 64)
!5053 = !DISubroutineType(types: !5054)
!5054 = !{null, !248}
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !5049, file: !290, line: 617, baseType: !5056, size: 64)
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5057, size: 64)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{null, !5044}
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5041, file: !290, line: 619, baseType: !248, size: 64, offset: 256)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "completing_ep", scope: !5035, file: !139, line: 72, baseType: !4725, size: 64, offset: 512)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "low_prio_bh", scope: !4502, file: !139, line: 183, baseType: !5035, size: 576, offset: 3456)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "address0_mutex", scope: !4502, file: !139, line: 196, baseType: !5063, size: 64, offset: 4032)
!5063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_mutex", scope: !4502, file: !139, line: 197, baseType: !5063, size: 64, offset: 4096)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "shared_hcd", scope: !4502, file: !139, line: 198, baseType: !4501, size: 64, offset: 4160)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "primary_hcd", scope: !4502, file: !139, line: 199, baseType: !4501, size: 64, offset: 4224)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !4502, file: !139, line: 203, baseType: !5068, size: 256, offset: 4288)
!5068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5069, size: 256, elements: !253)
!5069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5070, size: 64)
!5070 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_pool", file: !5071, line: 21, flags: DIFlagFwdDecl)
!5071 = !DIFile(filename: "./include/linux/dmapool.h", directory: "/home/lizy2001/genbc/linux")
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4502, file: !139, line: 205, baseType: !265, size: 32, offset: 4544)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "localmem_pool", scope: !4502, file: !139, line: 220, baseType: !5074, size: 64, offset: 4608)
!5074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5075, size: 64)
!5075 = !DICompositeType(tag: DW_TAG_structure_type, name: "gen_pool", file: !139, line: 220, flags: DIFlagFwdDecl)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "hcd_priv", scope: !4502, file: !139, line: 231, baseType: !2232, align: 64, offset: 4672)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "shared_hcd", scope: !4498, file: !145, line: 1736, baseType: !4501, size: 64, offset: 64)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "cap_regs", scope: !4498, file: !145, line: 1738, baseType: !5079, size: 64, offset: 128)
!5079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5080, size: 64)
!5080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_cap_regs", file: !145, line: 50, size: 256, elements: !5081)
!5081 = !{!5082, !5083, !5084, !5085, !5086, !5087, !5088, !5089}
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "hc_capbase", scope: !5080, file: !145, line: 51, baseType: !4583, size: 32)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "hcs_params1", scope: !5080, file: !145, line: 52, baseType: !4583, size: 32, offset: 32)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "hcs_params2", scope: !5080, file: !145, line: 53, baseType: !4583, size: 32, offset: 64)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "hcs_params3", scope: !5080, file: !145, line: 54, baseType: !4583, size: 32, offset: 96)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "hcc_params", scope: !5080, file: !145, line: 55, baseType: !4583, size: 32, offset: 128)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "db_off", scope: !5080, file: !145, line: 56, baseType: !4583, size: 32, offset: 160)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "run_regs_off", scope: !5080, file: !145, line: 57, baseType: !4583, size: 32, offset: 192)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "hcc_params2", scope: !5080, file: !145, line: 58, baseType: !4583, size: 32, offset: 224)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "op_regs", scope: !4498, file: !145, line: 1739, baseType: !5091, size: 64, offset: 192)
!5091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5092, size: 64)
!5092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_op_regs", file: !145, line: 176, size: 40832, elements: !5093)
!5093 = !{!5094, !5095, !5096, !5097, !5098, !5099, !5100, !5102, !5104, !5105, !5106, !5110, !5111, !5112, !5113, !5114}
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !5092, file: !145, line: 177, baseType: !4583, size: 32)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5092, file: !145, line: 178, baseType: !4583, size: 32, offset: 32)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !5092, file: !145, line: 179, baseType: !4583, size: 32, offset: 64)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !5092, file: !145, line: 180, baseType: !4583, size: 32, offset: 96)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5092, file: !145, line: 181, baseType: !4583, size: 32, offset: 128)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "dev_notification", scope: !5092, file: !145, line: 182, baseType: !4583, size: 32, offset: 160)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_ring", scope: !5092, file: !145, line: 183, baseType: !5101, size: 64, offset: 192)
!5101 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le64", file: !1993, line: 33, baseType: !240)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !5092, file: !145, line: 185, baseType: !5103, size: 128, offset: 256)
!5103 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4583, size: 128, elements: !253)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "dcbaa_ptr", scope: !5092, file: !145, line: 186, baseType: !5101, size: 64, offset: 384)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "config_reg", scope: !5092, file: !145, line: 187, baseType: !4583, size: 32, offset: 448)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "reserved4", scope: !5092, file: !145, line: 189, baseType: !5107, size: 7712, offset: 480)
!5107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4583, size: 7712, elements: !5108)
!5108 = !{!5109}
!5109 = !DISubrange(count: 241)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "port_status_base", scope: !5092, file: !145, line: 191, baseType: !4583, size: 32, offset: 8192)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "port_power_base", scope: !5092, file: !145, line: 192, baseType: !4583, size: 32, offset: 8224)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "port_link_base", scope: !5092, file: !145, line: 193, baseType: !4583, size: 32, offset: 8256)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "reserved5", scope: !5092, file: !145, line: 194, baseType: !4583, size: 32, offset: 8288)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "reserved6", scope: !5092, file: !145, line: 196, baseType: !5115, size: 32512, offset: 8320)
!5115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4583, size: 32512, elements: !5116)
!5116 = !{!5117}
!5117 = !DISubrange(count: 1016)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "run_regs", scope: !4498, file: !145, line: 1740, baseType: !5119, size: 64, offset: 256)
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5120, size: 64)
!5120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_run_regs", file: !145, line: 530, size: 33024, elements: !5121)
!5121 = !{!5122, !5123, !5127}
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "microframe_index", scope: !5120, file: !145, line: 531, baseType: !4583, size: 32)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !5120, file: !145, line: 532, baseType: !5124, size: 224, offset: 32)
!5124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4583, size: 224, elements: !5125)
!5125 = !{!5126}
!5126 = !DISubrange(count: 7)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "ir_set", scope: !5120, file: !145, line: 533, baseType: !5128, size: 32768, offset: 256)
!5128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5129, size: 32768, elements: !3936)
!5129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_intr_reg", file: !145, line: 480, size: 256, elements: !5130)
!5130 = !{!5131, !5132, !5133, !5134, !5135, !5136}
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !5129, file: !145, line: 481, baseType: !4583, size: 32)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "irq_control", scope: !5129, file: !145, line: 482, baseType: !4583, size: 32, offset: 32)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "erst_size", scope: !5129, file: !145, line: 483, baseType: !4583, size: 32, offset: 64)
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !5129, file: !145, line: 484, baseType: !4583, size: 32, offset: 96)
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "erst_base", scope: !5129, file: !145, line: 485, baseType: !5101, size: 64, offset: 128)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "erst_dequeue", scope: !5129, file: !145, line: 486, baseType: !5101, size: 64, offset: 192)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "dba", scope: !4498, file: !145, line: 1741, baseType: !5138, size: 64, offset: 320)
!5138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5139, size: 64)
!5139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_doorbell_array", file: !145, line: 545, size: 8192, elements: !5140)
!5140 = !{!5141}
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "doorbell", scope: !5139, file: !145, line: 546, baseType: !5142, size: 8192)
!5142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4583, size: 8192, elements: !5143)
!5143 = !{!5144}
!5144 = !DISubrange(count: 256)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "ir_set", scope: !4498, file: !145, line: 1743, baseType: !5146, size: 64, offset: 384)
!5146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5129, size: 64)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "hcs_params1", scope: !4498, file: !145, line: 1746, baseType: !206, size: 32, offset: 448)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "hcs_params2", scope: !4498, file: !145, line: 1747, baseType: !206, size: 32, offset: 480)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "hcs_params3", scope: !4498, file: !145, line: 1748, baseType: !206, size: 32, offset: 512)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "hcc_params", scope: !4498, file: !145, line: 1749, baseType: !206, size: 32, offset: 544)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "hcc_params2", scope: !4498, file: !145, line: 1750, baseType: !206, size: 32, offset: 576)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4498, file: !145, line: 1752, baseType: !322, offset: 608)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "sbrn", scope: !4498, file: !145, line: 1755, baseType: !1470, size: 8, offset: 608)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "hci_version", scope: !4498, file: !145, line: 1756, baseType: !984, size: 16, offset: 624)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "max_slots", scope: !4498, file: !145, line: 1757, baseType: !1470, size: 8, offset: 640)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "max_interrupters", scope: !4498, file: !145, line: 1758, baseType: !1470, size: 8, offset: 648)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "max_ports", scope: !4498, file: !145, line: 1759, baseType: !1470, size: 8, offset: 656)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "isoc_threshold", scope: !4498, file: !145, line: 1760, baseType: !1470, size: 8, offset: 664)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "imod_interval", scope: !4498, file: !145, line: 1762, baseType: !204, size: 32, offset: 672)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "event_ring_max", scope: !4498, file: !145, line: 1763, baseType: !265, size: 32, offset: 704)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !4498, file: !145, line: 1765, baseType: !265, size: 32, offset: 736)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "page_shift", scope: !4498, file: !145, line: 1767, baseType: !265, size: 32, offset: 768)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "msix_count", scope: !4498, file: !145, line: 1769, baseType: !265, size: 32, offset: 800)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "clk", scope: !4498, file: !145, line: 1771, baseType: !5165, size: 64, offset: 832)
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5166, size: 64)
!5166 = !DICompositeType(tag: DW_TAG_structure_type, name: "clk", file: !145, line: 1771, flags: DIFlagFwdDecl)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "reg_clk", scope: !4498, file: !145, line: 1772, baseType: !5165, size: 64, offset: 896)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4498, file: !145, line: 1774, baseType: !5169, size: 64, offset: 960)
!5169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5170, size: 64)
!5170 = !DICompositeType(tag: DW_TAG_structure_type, name: "reset_control", file: !145, line: 1774, flags: DIFlagFwdDecl)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "dcbaa", scope: !4498, file: !145, line: 1776, baseType: !5172, size: 64, offset: 1024)
!5172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5173, size: 64)
!5173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_device_context_array", file: !145, line: 1057, size: 16448, elements: !5174)
!5174 = !{!5175, !5177}
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "dev_context_ptrs", scope: !5173, file: !145, line: 1059, baseType: !5176, size: 16384)
!5176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5101, size: 16384, elements: !5143)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !5173, file: !145, line: 1061, baseType: !1045, size: 64, offset: 16384)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_ring", scope: !4498, file: !145, line: 1777, baseType: !5179, size: 64, offset: 1088)
!5179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5180, size: 64)
!5180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_ring", file: !145, line: 1594, size: 896, elements: !5181)
!5181 = !{!5182, !5218, !5219, !5220, !5221, !5222, !5223, !5224, !5225, !5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233}
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "first_seg", scope: !5180, file: !145, line: 1595, baseType: !5183, size: 64)
!5183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5184, size: 64)
!5184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_segment", file: !145, line: 1522, size: 384, elements: !5185)
!5185 = !{!5186, !5212, !5213, !5214, !5215, !5216, !5217}
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "trbs", scope: !5184, file: !145, line: 1523, baseType: !5187, size: 64)
!5187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5188, size: 64)
!5188 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "xhci_trb", file: !145, line: 1337, size: 128, elements: !5189)
!5189 = !{!5190, !5196, !5202, !5208}
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !5188, file: !145, line: 1338, baseType: !5191, size: 128)
!5191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_link_trb", file: !145, line: 1205, size: 128, elements: !5192)
!5192 = !{!5193, !5194, !5195}
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "segment_ptr", scope: !5191, file: !145, line: 1207, baseType: !5101, size: 64)
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "intr_target", scope: !5191, file: !145, line: 1208, baseType: !4583, size: 32, offset: 64)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !5191, file: !145, line: 1209, baseType: !4583, size: 32, offset: 96)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "trans_event", scope: !5188, file: !145, line: 1339, baseType: !5197, size: 128)
!5197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_transfer_event", file: !145, line: 1070, size: 128, elements: !5198)
!5198 = !{!5199, !5200, !5201}
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5197, file: !145, line: 1072, baseType: !5101, size: 64)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_len", scope: !5197, file: !145, line: 1073, baseType: !4583, size: 32, offset: 64)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5197, file: !145, line: 1075, baseType: !4583, size: 32, offset: 96)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "event_cmd", scope: !5188, file: !145, line: 1340, baseType: !5203, size: 128)
!5203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_event_cmd", file: !145, line: 1216, size: 128, elements: !5204)
!5204 = !{!5205, !5206, !5207}
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_trb", scope: !5203, file: !145, line: 1218, baseType: !5101, size: 64)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5203, file: !145, line: 1219, baseType: !4583, size: 32, offset: 64)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5203, file: !145, line: 1220, baseType: !4583, size: 32, offset: 96)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !5188, file: !145, line: 1341, baseType: !5209, size: 128)
!5209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_generic_trb", file: !145, line: 1333, size: 128, elements: !5210)
!5210 = !{!5211}
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "field", scope: !5209, file: !145, line: 1334, baseType: !5103, size: 128)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5184, file: !145, line: 1525, baseType: !5183, size: 64, offset: 64)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !5184, file: !145, line: 1526, baseType: !1045, size: 64, offset: 128)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_dma", scope: !5184, file: !145, line: 1528, baseType: !1045, size: 64, offset: 192)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_buf", scope: !5184, file: !145, line: 1529, baseType: !208, size: 64, offset: 256)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_offs", scope: !5184, file: !145, line: 1530, baseType: !7, size: 32, offset: 320)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_len", scope: !5184, file: !145, line: 1531, baseType: !7, size: 32, offset: 352)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "last_seg", scope: !5180, file: !145, line: 1596, baseType: !5183, size: 64, offset: 64)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !5180, file: !145, line: 1597, baseType: !5187, size: 64, offset: 128)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "enq_seg", scope: !5180, file: !145, line: 1598, baseType: !5183, size: 64, offset: 192)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !5180, file: !145, line: 1599, baseType: !5187, size: 64, offset: 256)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "deq_seg", scope: !5180, file: !145, line: 1600, baseType: !5183, size: 64, offset: 320)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "td_list", scope: !5180, file: !145, line: 1601, baseType: !214, size: 128, offset: 384)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "cycle_state", scope: !5180, file: !145, line: 1607, baseType: !204, size: 32, offset: 512)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "err_count", scope: !5180, file: !145, line: 1608, baseType: !7, size: 32, offset: 544)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !5180, file: !145, line: 1609, baseType: !7, size: 32, offset: 576)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "num_segs", scope: !5180, file: !145, line: 1610, baseType: !7, size: 32, offset: 608)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "num_trbs_free", scope: !5180, file: !145, line: 1611, baseType: !7, size: 32, offset: 640)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "num_trbs_free_temp", scope: !5180, file: !145, line: 1612, baseType: !7, size: 32, offset: 672)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_buf_len", scope: !5180, file: !145, line: 1613, baseType: !7, size: 32, offset: 704)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5180, file: !145, line: 1614, baseType: !144, size: 32, offset: 736)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "last_td_was_short", scope: !5180, file: !145, line: 1615, baseType: !569, size: 8, offset: 768)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "trb_address_map", scope: !5180, file: !145, line: 1616, baseType: !5234, size: 64, offset: 832)
!5234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_ring_state", scope: !4498, file: !145, line: 1778, baseType: !7, size: 32, offset: 1152)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_list", scope: !4498, file: !145, line: 1782, baseType: !214, size: 128, offset: 1216)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_ring_reserved_trbs", scope: !4498, file: !145, line: 1783, baseType: !7, size: 32, offset: 1344)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_timer", scope: !4498, file: !145, line: 1784, baseType: !5239, size: 704, offset: 1408)
!5239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !2237, line: 115, size: 704, elements: !5240)
!5240 = !{!5241, !5242, !5243, !5244}
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5239, file: !2237, line: 116, baseType: !2236, size: 256)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !5239, file: !2237, line: 117, baseType: !4037, size: 320, offset: 256)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !5239, file: !2237, line: 120, baseType: !3508, size: 64, offset: 576)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !5239, file: !2237, line: 121, baseType: !265, size: 32, offset: 640)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_ring_stop_completion", scope: !4498, file: !145, line: 1785, baseType: !1619, size: 192, offset: 2112)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "current_cmd", scope: !4498, file: !145, line: 1786, baseType: !5247, size: 64, offset: 2304)
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5248, size: 64)
!5248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_command", file: !145, line: 801, size: 384, elements: !5249)
!5249 = !{!5250, !5259, !5260, !5261, !5262, !5263}
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "in_ctx", scope: !5248, file: !145, line: 803, baseType: !5251, size: 64)
!5251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5252, size: 64)
!5252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_container_ctx", file: !145, line: 594, size: 192, elements: !5253)
!5253 = !{!5254, !5255, !5256, !5258}
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5252, file: !145, line: 595, baseType: !7, size: 32)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5252, file: !145, line: 599, baseType: !265, size: 32, offset: 32)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !5252, file: !145, line: 601, baseType: !5257, size: 64, offset: 64)
!5257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !5252, file: !145, line: 602, baseType: !1045, size: 64, offset: 128)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5248, file: !145, line: 804, baseType: !204, size: 32, offset: 64)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "slot_id", scope: !5248, file: !145, line: 805, baseType: !265, size: 32, offset: 96)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !5248, file: !145, line: 809, baseType: !1618, size: 64, offset: 128)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "command_trb", scope: !5248, file: !145, line: 810, baseType: !5187, size: 64, offset: 192)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_list", scope: !5248, file: !145, line: 811, baseType: !214, size: 128, offset: 256)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "event_ring", scope: !4498, file: !145, line: 1787, baseType: !5179, size: 64, offset: 2368)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "erst", scope: !4498, file: !145, line: 1788, baseType: !5266, size: 256, offset: 2432)
!5266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_erst", file: !145, line: 1627, size: 256, elements: !5267)
!5267 = !{!5268, !5275, !5276, !5277}
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !5266, file: !145, line: 1628, baseType: !5269, size: 64)
!5269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5270, size: 64)
!5270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_erst_entry", file: !145, line: 1619, size: 128, elements: !5271)
!5271 = !{!5272, !5273, !5274}
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "seg_addr", scope: !5270, file: !145, line: 1621, baseType: !5101, size: 64)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "seg_size", scope: !5270, file: !145, line: 1622, baseType: !4583, size: 32, offset: 64)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd", scope: !5270, file: !145, line: 1624, baseType: !4583, size: 32, offset: 96)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "num_entries", scope: !5266, file: !145, line: 1629, baseType: !7, size: 32, offset: 64)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "erst_dma_addr", scope: !5266, file: !145, line: 1631, baseType: !1045, size: 64, offset: 128)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "erst_size", scope: !5266, file: !145, line: 1633, baseType: !7, size: 32, offset: 192)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "scratchpad", scope: !4498, file: !145, line: 1790, baseType: !5279, size: 64, offset: 2688)
!5279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5280, size: 64)
!5280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_scratchpad", file: !145, line: 1636, size: 192, elements: !5281)
!5281 = !{!5282, !5283, !5284}
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "sp_array", scope: !5280, file: !145, line: 1637, baseType: !4133, size: 64)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "sp_dma", scope: !5280, file: !145, line: 1638, baseType: !1045, size: 64, offset: 64)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "sp_buffers", scope: !5280, file: !145, line: 1639, baseType: !946, size: 64, offset: 128)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_failed_devs", scope: !4498, file: !145, line: 1792, baseType: !214, size: 128, offset: 2752)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4498, file: !145, line: 1796, baseType: !805, size: 192, offset: 2880)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_command", scope: !4498, file: !145, line: 1798, baseType: !5247, size: 64, offset: 3072)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "devs", scope: !4498, file: !145, line: 1800, baseType: !5289, size: 16384, offset: 3136)
!5289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5290, size: 16384, elements: !5143)
!5290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5291, size: 64)
!5291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_virt_device", file: !145, line: 997, size: 42240, elements: !5292)
!5292 = !{!5293, !5294, !5295, !5296, !5341, !5342, !5343, !5359, !5368, !5369, !5370}
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "udev", scope: !5291, file: !145, line: 998, baseType: !4526, size: 64)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "out_ctx", scope: !5291, file: !145, line: 1007, baseType: !5251, size: 64, offset: 64)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "in_ctx", scope: !5291, file: !145, line: 1009, baseType: !5251, size: 64, offset: 128)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "eps", scope: !5291, file: !145, line: 1010, baseType: !5297, size: 41664, offset: 192)
!5297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5298, size: 41664, elements: !5339)
!5298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_virt_ep", file: !145, line: 920, size: 1344, elements: !5299)
!5299 = !{!5300, !5301, !5319, !5320, !5321, !5322, !5323, !5324, !5325, !5326, !5327, !5336, !5337, !5338}
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "ring", scope: !5298, file: !145, line: 921, baseType: !5179, size: 64)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "stream_info", scope: !5298, file: !145, line: 923, baseType: !5302, size: 64, offset: 64)
!5302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5303, size: 64)
!5303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_stream_info", file: !145, line: 841, size: 512, elements: !5304)
!5304 = !{!5305, !5307, !5308, !5315, !5316, !5317, !5318}
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "stream_rings", scope: !5303, file: !145, line: 842, baseType: !5306, size: 64)
!5306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5179, size: 64)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "num_streams", scope: !5303, file: !145, line: 844, baseType: !7, size: 32, offset: 64)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "stream_ctx_array", scope: !5303, file: !145, line: 848, baseType: !5309, size: 64, offset: 128)
!5309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5310, size: 64)
!5310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_stream_ctx", file: !145, line: 819, size: 128, elements: !5311)
!5311 = !{!5312, !5313}
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "stream_ring", scope: !5310, file: !145, line: 821, baseType: !5101, size: 64)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5310, file: !145, line: 823, baseType: !5314, size: 64, offset: 64)
!5314 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4583, size: 64, elements: !1686)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "num_stream_ctxs", scope: !5303, file: !145, line: 849, baseType: !7, size: 32, offset: 192)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_array_dma", scope: !5303, file: !145, line: 850, baseType: !1045, size: 64, offset: 256)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "trb_address_map", scope: !5303, file: !145, line: 852, baseType: !870, size: 128, offset: 320)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "free_streams_command", scope: !5303, file: !145, line: 853, baseType: !5247, size: 64, offset: 448)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "new_ring", scope: !5298, file: !145, line: 927, baseType: !5179, size: 64, offset: 128)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "ep_state", scope: !5298, file: !145, line: 928, baseType: !7, size: 32, offset: 192)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "cancelled_td_list", scope: !5298, file: !145, line: 942, baseType: !214, size: 128, offset: 256)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "stop_cmd_timer", scope: !5298, file: !145, line: 944, baseType: !4037, size: 320, offset: 384)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "xhci", scope: !5298, file: !145, line: 945, baseType: !4497, size: 64, offset: 704)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "queued_deq_seg", scope: !5298, file: !145, line: 950, baseType: !5183, size: 64, offset: 768)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "queued_deq_ptr", scope: !5298, file: !145, line: 951, baseType: !5187, size: 64, offset: 832)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !5298, file: !145, line: 959, baseType: !569, size: 8, offset: 896)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "bw_info", scope: !5298, file: !145, line: 961, baseType: !5328, size: 192, offset: 928)
!5328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_bw_info", file: !145, line: 865, size: 192, elements: !5329)
!5329 = !{!5330, !5331, !5332, !5333, !5334, !5335}
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "ep_interval", scope: !5328, file: !145, line: 867, baseType: !7, size: 32)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "mult", scope: !5328, file: !145, line: 869, baseType: !7, size: 32, offset: 32)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "num_packets", scope: !5328, file: !145, line: 870, baseType: !7, size: 32, offset: 64)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "max_packet_size", scope: !5328, file: !145, line: 871, baseType: !7, size: 32, offset: 96)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "max_esit_payload", scope: !5328, file: !145, line: 872, baseType: !7, size: 32, offset: 128)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5328, file: !145, line: 873, baseType: !7, size: 32, offset: 160)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "bw_endpoint_list", scope: !5298, file: !145, line: 962, baseType: !214, size: 128, offset: 1152)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "next_frame_id", scope: !5298, file: !145, line: 964, baseType: !265, size: 32, offset: 1280)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "use_extended_tbc", scope: !5298, file: !145, line: 966, baseType: !569, size: 8, offset: 1312)
!5339 = !{!5340}
!5340 = !DISubrange(count: 31)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "fake_port", scope: !5291, file: !145, line: 1011, baseType: !1470, size: 8, offset: 41856)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "real_port", scope: !5291, file: !145, line: 1012, baseType: !1470, size: 8, offset: 41864)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "bw_table", scope: !5291, file: !145, line: 1013, baseType: !5344, size: 64, offset: 41920)
!5344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5345, size: 64)
!5345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_interval_bw_table", file: !145, line: 987, size: 5312, elements: !5346)
!5346 = !{!5347, !5348, !5356, !5357, !5358}
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "interval0_esit_payload", scope: !5345, file: !145, line: 988, baseType: !7, size: 32)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "interval_bw", scope: !5345, file: !145, line: 989, baseType: !5349, size: 5120, offset: 64)
!5349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5350, size: 5120, elements: !1852)
!5350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_interval_bw", file: !145, line: 975, size: 320, elements: !5351)
!5351 = !{!5352, !5353, !5354}
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "num_packets", scope: !5350, file: !145, line: 976, baseType: !7, size: 32)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "endpoints", scope: !5350, file: !145, line: 980, baseType: !214, size: 128, offset: 64)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "overhead", scope: !5350, file: !145, line: 982, baseType: !5355, size: 96, offset: 192)
!5355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !364)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "bw_used", scope: !5345, file: !145, line: 991, baseType: !7, size: 32, offset: 5184)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "ss_bw_in", scope: !5345, file: !145, line: 992, baseType: !7, size: 32, offset: 5216)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "ss_bw_out", scope: !5345, file: !145, line: 993, baseType: !7, size: 32, offset: 5248)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "tt_info", scope: !5291, file: !145, line: 1014, baseType: !5360, size: 64, offset: 41984)
!5360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5361, size: 64)
!5361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_tt_bw_info", file: !145, line: 1044, size: 5568, elements: !5362)
!5362 = !{!5363, !5364, !5365, !5366, !5367}
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "tt_list", scope: !5361, file: !145, line: 1045, baseType: !214, size: 128)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "slot_id", scope: !5361, file: !145, line: 1046, baseType: !265, size: 32, offset: 128)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "ttport", scope: !5361, file: !145, line: 1047, baseType: !265, size: 32, offset: 160)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "bw_table", scope: !5361, file: !145, line: 1048, baseType: !5345, size: 5312, offset: 192)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "active_eps", scope: !5361, file: !145, line: 1049, baseType: !265, size: 32, offset: 5504)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5291, file: !145, line: 1021, baseType: !248, size: 64, offset: 42048)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "current_mel", scope: !5291, file: !145, line: 1025, baseType: !984, size: 16, offset: 42112)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_private", scope: !5291, file: !145, line: 1027, baseType: !208, size: 64, offset: 42176)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "rh_bw", scope: !4498, file: !145, line: 1802, baseType: !5372, size: 64, offset: 19520)
!5372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5373, size: 64)
!5373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_root_port_bw_info", file: !145, line: 1038, size: 5504, elements: !5374)
!5374 = !{!5375, !5376, !5377}
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "tts", scope: !5373, file: !145, line: 1039, baseType: !214, size: 128)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "num_active_tts", scope: !5373, file: !145, line: 1040, baseType: !7, size: 32, offset: 128)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "bw_table", scope: !5373, file: !145, line: 1041, baseType: !5345, size: 5312, offset: 192)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "device_pool", scope: !4498, file: !145, line: 1805, baseType: !5069, size: 64, offset: 19584)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "segment_pool", scope: !4498, file: !145, line: 1806, baseType: !5069, size: 64, offset: 19648)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "small_streams_pool", scope: !4498, file: !145, line: 1807, baseType: !5069, size: 64, offset: 19712)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "medium_streams_pool", scope: !4498, file: !145, line: 1808, baseType: !5069, size: 64, offset: 19776)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "xhc_state", scope: !4498, file: !145, line: 1811, baseType: !7, size: 32, offset: 19840)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !4498, file: !145, line: 1813, baseType: !204, size: 32, offset: 19872)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "s3", scope: !4498, file: !145, line: 1814, baseType: !5385, size: 384, offset: 19904)
!5385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "s3_save", file: !145, line: 1664, size: 384, elements: !5386)
!5386 = !{!5387, !5388, !5389, !5390, !5391, !5392, !5393, !5394, !5395}
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !5385, file: !145, line: 1665, baseType: !204, size: 32)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "dev_nt", scope: !5385, file: !145, line: 1666, baseType: !204, size: 32, offset: 32)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "dcbaa_ptr", scope: !5385, file: !145, line: 1667, baseType: !239, size: 64, offset: 64)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "config_reg", scope: !5385, file: !145, line: 1668, baseType: !204, size: 32, offset: 128)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !5385, file: !145, line: 1669, baseType: !204, size: 32, offset: 160)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "irq_control", scope: !5385, file: !145, line: 1670, baseType: !204, size: 32, offset: 192)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "erst_size", scope: !5385, file: !145, line: 1671, baseType: !204, size: 32, offset: 224)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "erst_base", scope: !5385, file: !145, line: 1672, baseType: !239, size: 64, offset: 256)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "erst_dequeue", scope: !5385, file: !145, line: 1673, baseType: !239, size: 64, offset: 320)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !4498, file: !145, line: 1830, baseType: !241, size: 64, offset: 20288)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "num_active_eps", scope: !4498, file: !145, line: 1882, baseType: !7, size: 32, offset: 20352)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "limit_active_eps", scope: !4498, file: !145, line: 1883, baseType: !7, size: 32, offset: 20384)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "hw_ports", scope: !4498, file: !145, line: 1884, baseType: !5400, size: 64, offset: 20416)
!5400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5401, size: 64)
!5401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_port", file: !145, line: 1714, size: 256, elements: !5402)
!5402 = !{!5403, !5405, !5406, !5407, !5432}
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5401, file: !145, line: 1715, baseType: !5404, size: 64)
!5404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4583, size: 64)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "hw_portnum", scope: !5401, file: !145, line: 1716, baseType: !265, size: 32, offset: 64)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "hcd_portnum", scope: !5401, file: !145, line: 1717, baseType: !265, size: 32, offset: 96)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "rhub", scope: !5401, file: !145, line: 1718, baseType: !5408, size: 64, offset: 128)
!5408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5409, size: 64)
!5409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_hub", file: !145, line: 1722, size: 14528, elements: !5410)
!5410 = !{!5411, !5413, !5414, !5415, !5430, !5431}
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !5409, file: !145, line: 1723, baseType: !5412, size: 64)
!5412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5400, size: 64)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "num_ports", scope: !5409, file: !145, line: 1724, baseType: !7, size: 32, offset: 64)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "hcd", scope: !5409, file: !145, line: 1725, baseType: !4501, size: 64, offset: 128)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "bus_state", scope: !5409, file: !145, line: 1727, baseType: !5416, size: 14272, offset: 192)
!5416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_bus_state", file: !145, line: 1682, size: 14272, elements: !5417)
!5417 = !{!5418, !5419, !5420, !5421, !5422, !5423, !5425, !5426, !5427, !5429}
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "bus_suspended", scope: !5416, file: !145, line: 1683, baseType: !248, size: 64)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "next_statechange", scope: !5416, file: !145, line: 1684, baseType: !248, size: 64, offset: 64)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "port_c_suspend", scope: !5416, file: !145, line: 1688, baseType: !204, size: 32, offset: 128)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_ports", scope: !5416, file: !145, line: 1689, baseType: !204, size: 32, offset: 160)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "port_remote_wakeup", scope: !5416, file: !145, line: 1690, baseType: !204, size: 32, offset: 192)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "resume_done", scope: !5416, file: !145, line: 1691, baseType: !5424, size: 1984, offset: 256)
!5424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !248, size: 1984, elements: !5339)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "resuming_ports", scope: !5416, file: !145, line: 1693, baseType: !248, size: 64, offset: 2240)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "rexit_ports", scope: !5416, file: !145, line: 1695, baseType: !248, size: 64, offset: 2304)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "rexit_done", scope: !5416, file: !145, line: 1696, baseType: !5428, size: 5952, offset: 2368)
!5428 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1619, size: 5952, elements: !5339)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "u3exit_done", scope: !5416, file: !145, line: 1697, baseType: !5428, size: 5952, offset: 8320)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "maj_rev", scope: !5409, file: !145, line: 1729, baseType: !1470, size: 8, offset: 14464)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "min_rev", scope: !5409, file: !145, line: 1730, baseType: !1470, size: 8, offset: 14472)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "port_cap", scope: !5401, file: !145, line: 1719, baseType: !5433, size: 64, offset: 192)
!5433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5434, size: 64)
!5434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_port_cap", file: !145, line: 1706, size: 128, elements: !5435)
!5435 = !{!5436, !5437, !5438, !5439, !5440}
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "psi", scope: !5434, file: !145, line: 1707, baseType: !278, size: 64)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "psi_count", scope: !5434, file: !145, line: 1708, baseType: !1470, size: 8, offset: 64)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "psi_uid_count", scope: !5434, file: !145, line: 1709, baseType: !1470, size: 8, offset: 72)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "maj_rev", scope: !5434, file: !145, line: 1710, baseType: !1470, size: 8, offset: 80)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "min_rev", scope: !5434, file: !145, line: 1711, baseType: !1470, size: 8, offset: 88)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_rhub", scope: !4498, file: !145, line: 1885, baseType: !5409, size: 14528, offset: 20480)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "usb3_rhub", scope: !4498, file: !145, line: 1886, baseType: !5409, size: 14528, offset: 35008)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "hw_lpm_support", scope: !4498, file: !145, line: 1888, baseType: !7, size: 1, offset: 49536, flags: DIFlagBitField, extraData: i64 49536)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "broken_suspend", scope: !4498, file: !145, line: 1890, baseType: !7, size: 1, offset: 49537, flags: DIFlagBitField, extraData: i64 49536)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "ext_caps", scope: !4498, file: !145, line: 1892, baseType: !278, size: 64, offset: 49600)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "num_ext_caps", scope: !4498, file: !145, line: 1893, baseType: !7, size: 32, offset: 49664)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "port_caps", scope: !4498, file: !145, line: 1895, baseType: !5433, size: 64, offset: 49728)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "num_port_caps", scope: !4498, file: !145, line: 1896, baseType: !7, size: 32, offset: 49792)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "comp_mode_recovery_timer", scope: !4498, file: !145, line: 1898, baseType: !4037, size: 320, offset: 49856)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "port_status_u0", scope: !4498, file: !145, line: 1899, baseType: !204, size: 32, offset: 50176)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "test_mode", scope: !4498, file: !145, line: 1900, baseType: !984, size: 16, offset: 50208)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_root", scope: !4498, file: !145, line: 1904, baseType: !469, size: 64, offset: 50240)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_slots", scope: !4498, file: !145, line: 1905, baseType: !469, size: 64, offset: 50304)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "regset_list", scope: !4498, file: !145, line: 1906, baseType: !214, size: 128, offset: 50368)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "dbc", scope: !4498, file: !145, line: 1908, baseType: !208, size: 64, offset: 50496)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4498, file: !145, line: 1910, baseType: !2232, align: 64, offset: 50560)
!5457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5458, size: 64)
!5458 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !246)
!5459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!5460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5461, size: 64)
!5461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5462)
!5462 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !218)
!5463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5462, size: 64)
!5464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5298, size: 64)
!5465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5466, size: 64)
!5466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_driver", file: !115, line: 1184, size: 2112, elements: !5467)
!5467 = !{!5468, !5469, !5490, !5494, !5498, !5502, !5506, !5507, !5508, !5509, !5510, !5511, !5516, !5521, !5522, !5523, !5524}
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5466, file: !115, line: 1185, baseType: !244, size: 64)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5466, file: !115, line: 1187, baseType: !5470, size: 64, offset: 64)
!5470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5471, size: 64)
!5471 = !DISubroutineType(types: !5472)
!5472 = !{!265, !4703, !5473}
!5473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5474, size: 64)
!5474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5475)
!5475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device_id", file: !160, line: 121, size: 256, elements: !5476)
!5476 = !{!5477, !5478, !5479, !5480, !5481, !5482, !5483, !5484, !5485, !5486, !5487, !5488, !5489}
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "match_flags", scope: !5475, file: !160, line: 123, baseType: !985, size: 16)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "idVendor", scope: !5475, file: !160, line: 126, baseType: !985, size: 16, offset: 16)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "idProduct", scope: !5475, file: !160, line: 127, baseType: !985, size: 16, offset: 32)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice_lo", scope: !5475, file: !160, line: 128, baseType: !985, size: 16, offset: 48)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice_hi", scope: !5475, file: !160, line: 129, baseType: !985, size: 16, offset: 64)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceClass", scope: !5475, file: !160, line: 132, baseType: !1471, size: 8, offset: 80)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceSubClass", scope: !5475, file: !160, line: 133, baseType: !1471, size: 8, offset: 88)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceProtocol", scope: !5475, file: !160, line: 134, baseType: !1471, size: 8, offset: 96)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceClass", scope: !5475, file: !160, line: 137, baseType: !1471, size: 8, offset: 104)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceSubClass", scope: !5475, file: !160, line: 138, baseType: !1471, size: 8, offset: 112)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceProtocol", scope: !5475, file: !160, line: 139, baseType: !1471, size: 8, offset: 120)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceNumber", scope: !5475, file: !160, line: 142, baseType: !1471, size: 8, offset: 128)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "driver_info", scope: !5475, file: !160, line: 145, baseType: !3949, size: 64, align: 64, offset: 192)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !5466, file: !115, line: 1190, baseType: !5491, size: 64, offset: 128)
!5491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5492, size: 64)
!5492 = !DISubroutineType(types: !5493)
!5493 = !{null, !4703}
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !5466, file: !115, line: 1192, baseType: !5495, size: 64, offset: 192)
!5495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5496, size: 64)
!5496 = !DISubroutineType(types: !5497)
!5497 = !{!265, !4703, !7, !208}
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !5466, file: !115, line: 1195, baseType: !5499, size: 64, offset: 256)
!5499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5500, size: 64)
!5500 = !DISubroutineType(types: !5501)
!5501 = !{!265, !4703, !3960}
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !5466, file: !115, line: 1196, baseType: !5503, size: 64, offset: 320)
!5503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5504, size: 64)
!5504 = !DISubroutineType(types: !5505)
!5505 = !{!265, !4703}
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "reset_resume", scope: !5466, file: !115, line: 1197, baseType: !5503, size: 64, offset: 384)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "pre_reset", scope: !5466, file: !115, line: 1199, baseType: !5503, size: 64, offset: 448)
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "post_reset", scope: !5466, file: !115, line: 1200, baseType: !5503, size: 64, offset: 512)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !5466, file: !115, line: 1202, baseType: !5473, size: 64, offset: 576)
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !5466, file: !115, line: 1203, baseType: !415, size: 64, offset: 640)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !5466, file: !115, line: 1205, baseType: !5512, size: 128, offset: 704)
!5512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_dynids", file: !115, line: 1091, size: 128, elements: !5513)
!5513 = !{!5514, !5515}
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5512, file: !115, line: 1092, baseType: !322)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5512, file: !115, line: 1093, baseType: !214, size: 128)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "drvwrap", scope: !5466, file: !115, line: 1206, baseType: !5517, size: 1216, offset: 832)
!5517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usbdrv_wrap", file: !115, line: 1113, size: 1216, elements: !5518)
!5518 = !{!5519, !5520}
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5517, file: !115, line: 1114, baseType: !3919, size: 1152)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "for_devices", scope: !5517, file: !115, line: 1115, baseType: !265, size: 32, offset: 1152)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "no_dynamic_id", scope: !5466, file: !115, line: 1207, baseType: !7, size: 1, offset: 2048, flags: DIFlagBitField, extraData: i64 2048)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "supports_autosuspend", scope: !5466, file: !115, line: 1208, baseType: !7, size: 1, offset: 2049, flags: DIFlagBitField, extraData: i64 2048)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "disable_hub_initiated_lpm", scope: !5466, file: !115, line: 1209, baseType: !7, size: 1, offset: 2050, flags: DIFlagBitField, extraData: i64 2048)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "soft_unbind", scope: !5466, file: !115, line: 1210, baseType: !7, size: 1, offset: 2051, flags: DIFlagBitField, extraData: i64 2048)
!5525 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !215, line: 107, baseType: !239)
!5526 = !{!5527, !5579, !5584, !5589, !5591, !5594, !5599, !5608, !5613, !5618, !5623, !5628, !5630, !5635, !5637, !0, !5639, !5642, !5644}
!5527 = !DIGlobalVariableExpression(var: !5528, expr: !DIExpression())
!5528 = distinct !DIGlobalVariable(name: "__param_link_quirk", scope: !2, file: !3, line: 34, type: !5529, isLocal: true, isDefinition: true, align: 64)
!5529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5530)
!5530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !5531, line: 69, size: 320, elements: !5532)
!5531 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!5532 = !{!5533, !5534, !5535, !5551, !5553, !5557, !5558}
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5530, file: !5531, line: 70, baseType: !244, size: 64)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !5530, file: !5531, line: 71, baseType: !712, size: 64, offset: 64)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5530, file: !5531, line: 72, baseType: !5536, size: 64, offset: 128)
!5536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5537, size: 64)
!5537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5538)
!5538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !5531, line: 47, size: 256, elements: !5539)
!5539 = !{!5540, !5541, !5546, !5550}
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5538, file: !5531, line: 49, baseType: !7, size: 32)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !5538, file: !5531, line: 51, baseType: !5542, size: 64, offset: 64)
!5542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5543, size: 64)
!5543 = !DISubroutineType(types: !5544)
!5544 = !{!265, !244, !5545}
!5545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5529, size: 64)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5538, file: !5531, line: 53, baseType: !5547, size: 64, offset: 128)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5548, size: 64)
!5548 = !DISubroutineType(types: !5549)
!5549 = !{!265, !363, !5545}
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5538, file: !5531, line: 55, baseType: !547, size: 64, offset: 192)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !5530, file: !5531, line: 73, baseType: !5552, size: 16, offset: 192)
!5552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !5530, file: !5531, line: 74, baseType: !5554, size: 8, offset: 208)
!5554 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !205, line: 16, baseType: !5555)
!5555 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !207, line: 20, baseType: !5556)
!5556 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5530, file: !5531, line: 75, baseType: !1470, size: 8, offset: 216)
!5558 = !DIDerivedType(tag: DW_TAG_member, scope: !5530, file: !5531, line: 76, baseType: !5559, size: 64, offset: 256)
!5559 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5530, file: !5531, line: 76, size: 64, elements: !5560)
!5560 = !{!5561, !5562, !5569}
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5559, file: !5531, line: 77, baseType: !208, size: 64)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5559, file: !5531, line: 78, baseType: !5563, size: 64)
!5563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5564, size: 64)
!5564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5565)
!5565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !5531, line: 86, size: 128, elements: !5566)
!5566 = !{!5567, !5568}
!5567 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !5565, file: !5531, line: 87, baseType: !7, size: 32)
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !5565, file: !5531, line: 88, baseType: !363, size: 64, offset: 64)
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !5559, file: !5531, line: 79, baseType: !5570, size: 64)
!5570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5571, size: 64)
!5571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5572)
!5572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !5531, line: 92, size: 256, elements: !5573)
!5573 = !{!5574, !5575, !5576, !5577, !5578}
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5572, file: !5531, line: 94, baseType: !7, size: 32)
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !5572, file: !5531, line: 95, baseType: !7, size: 32, offset: 32)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !5572, file: !5531, line: 96, baseType: !3398, size: 64, offset: 64)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5572, file: !5531, line: 97, baseType: !5536, size: 64, offset: 128)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !5572, file: !5531, line: 98, baseType: !208, size: 64, offset: 192)
!5579 = !DIGlobalVariableExpression(var: !5580, expr: !DIExpression())
!5580 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_link_quirktype248", scope: !2, file: !3, line: 34, type: !5581, isLocal: true, isDefinition: true, align: 8)
!5581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 264, elements: !5582)
!5582 = !{!5583}
!5583 = !DISubrange(count: 33)
!5584 = !DIGlobalVariableExpression(var: !5585, expr: !DIExpression())
!5585 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_link_quirk249", scope: !2, file: !3, line: 35, type: !5586, isLocal: true, isDefinition: true, align: 8)
!5586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 520, elements: !5587)
!5587 = !{!5588}
!5588 = !DISubrange(count: 65)
!5589 = !DIGlobalVariableExpression(var: !5590, expr: !DIExpression())
!5590 = distinct !DIGlobalVariable(name: "__param_quirks", scope: !2, file: !3, line: 38, type: !5529, isLocal: true, isDefinition: true, align: 64)
!5591 = !DIGlobalVariableExpression(var: !5592, expr: !DIExpression())
!5592 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_quirkstype250", scope: !2, file: !3, line: 38, type: !5593, isLocal: true, isDefinition: true, align: 8)
!5593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 256, elements: !2948)
!5594 = !DIGlobalVariableExpression(var: !5595, expr: !DIExpression())
!5595 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_quirks251", scope: !2, file: !3, line: 39, type: !5596, isLocal: true, isDefinition: true, align: 8)
!5596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 536, elements: !5597)
!5597 = !{!5598}
!5598 = !DISubrange(count: 67)
!5599 = !DIGlobalVariableExpression(var: !5600, expr: !DIExpression())
!5600 = distinct !DIGlobalVariable(name: "__key", scope: !5601, file: !3, line: 5204, type: !727, isLocal: true, isDefinition: true)
!5601 = distinct !DISubprogram(name: "xhci_gen_setup", scope: !3, file: !3, line: 5130, type: !5602, scopeLine: 5131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!5602 = !DISubroutineType(types: !5603)
!5603 = !{!265, !4501, !5604}
!5604 = !DIDerivedType(tag: DW_TAG_typedef, name: "xhci_get_quirks_t", file: !145, line: 2061, baseType: !5605)
!5605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5606, size: 64)
!5606 = !DISubroutineType(types: !5607)
!5607 = !{null, !305, !4497}
!5608 = !DIGlobalVariableExpression(var: !5609, expr: !DIExpression())
!5609 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description269", scope: !2, file: !3, line: 5392, type: !5610, isLocal: true, isDefinition: true, align: 8)
!5610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 504, elements: !5611)
!5611 = !{!5612}
!5612 = !DISubrange(count: 63)
!5613 = !DIGlobalVariableExpression(var: !5614, expr: !DIExpression())
!5614 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author270", scope: !2, file: !3, line: 5393, type: !5615, isLocal: true, isDefinition: true, align: 8)
!5615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 224, elements: !5616)
!5616 = !{!5617}
!5617 = !DISubrange(count: 28)
!5618 = !DIGlobalVariableExpression(var: !5619, expr: !DIExpression())
!5619 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file271", scope: !2, file: !3, line: 5394, type: !5620, isLocal: true, isDefinition: true, align: 8)
!5620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 320, elements: !5621)
!5621 = !{!5622}
!5622 = !DISubrange(count: 40)
!5623 = !DIGlobalVariableExpression(var: !5624, expr: !DIExpression())
!5624 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license272", scope: !2, file: !3, line: 5394, type: !5625, isLocal: true, isDefinition: true, align: 8)
!5625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 168, elements: !5626)
!5626 = !{!5627}
!5627 = !DISubrange(count: 21)
!5628 = !DIGlobalVariableExpression(var: !5629, expr: !DIExpression())
!5629 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_xhci_hcd_init282", scope: !2, file: !3, line: 5433, type: !208, isLocal: true, isDefinition: true)
!5630 = !DIGlobalVariableExpression(var: !5631, expr: !DIExpression())
!5631 = distinct !DIGlobalVariable(name: "__exitcall_xhci_hcd_fini", scope: !2, file: !3, line: 5434, type: !5632, isLocal: true, isDefinition: true)
!5632 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !5633, line: 117, baseType: !5634)
!5633 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!5634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!5635 = !DIGlobalVariableExpression(var: !5636, expr: !DIExpression())
!5636 = distinct !DIGlobalVariable(name: "link_quirk", scope: !2, file: !3, line: 33, type: !265, isLocal: true, isDefinition: true)
!5637 = !DIGlobalVariableExpression(var: !5638, expr: !DIExpression())
!5638 = distinct !DIGlobalVariable(name: "quirks", scope: !2, file: !3, line: 37, type: !241, isLocal: true, isDefinition: true)
!5639 = !DIGlobalVariableExpression(var: !5640, expr: !DIExpression())
!5640 = distinct !DIGlobalVariable(name: "__param_str_quirks", scope: !2, file: !3, line: 38, type: !5641, isLocal: true, isDefinition: true)
!5641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 128, elements: !1852)
!5642 = !DIGlobalVariableExpression(var: !5643, expr: !DIExpression())
!5643 = distinct !DIGlobalVariable(name: "xhci_hc_driver", scope: !2, file: !3, line: 5308, type: !4890, isLocal: true, isDefinition: true)
!5644 = !DIGlobalVariableExpression(var: !5645, expr: !DIExpression())
!5645 = distinct !DIGlobalVariable(name: "xhci_besl_encoding", scope: !2, file: !3, line: 4329, type: !5646, isLocal: true, isDefinition: true)
!5646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, size: 512, elements: !1852)
!5647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !245, size: 160, elements: !2919)
!5648 = !{!"rsp"}
!5649 = !{i32 7, !"Dwarf Version", i32 4}
!5650 = !{i32 2, !"Debug Info Version", i32 3}
!5651 = !{i32 1, !"wchar_size", i32 2}
!5652 = !{i32 1, !"Code Model", i32 2}
!5653 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!5654 = distinct !DISubprogram(name: "xhci_debugfs_remove_root", scope: !5655, file: !5655, line: 126, type: !2610, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!5655 = !DIFile(filename: "drivers/usb/host/xhci-debugfs.h", directory: "/home/lizy2001/genbc/linux")
!5656 = !DILocation(line: 126, column: 60, scope: !5654)
!5657 = distinct !DISubprogram(name: "xhci_handshake", scope: !3, file: !3, line: 69, type: !5658, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!5658 = !DISubroutineType(types: !5659)
!5659 = !{!265, !208, !204, !204, !265}
!5660 = !DILocalVariable(name: "ptr", arg: 1, scope: !5657, file: !3, line: 69, type: !208)
!5661 = !DILocation(line: 69, column: 34, scope: !5657)
!5662 = !DILocalVariable(name: "mask", arg: 2, scope: !5657, file: !3, line: 69, type: !204)
!5663 = !DILocation(line: 69, column: 43, scope: !5657)
!5664 = !DILocalVariable(name: "done", arg: 3, scope: !5657, file: !3, line: 69, type: !204)
!5665 = !DILocation(line: 69, column: 53, scope: !5657)
!5666 = !DILocalVariable(name: "usec", arg: 4, scope: !5657, file: !3, line: 69, type: !265)
!5667 = !DILocation(line: 69, column: 63, scope: !5657)
!5668 = !DILocalVariable(name: "result", scope: !5657, file: !3, line: 71, type: !204)
!5669 = !DILocation(line: 71, column: 6, scope: !5657)
!5670 = !DILocalVariable(name: "ret", scope: !5657, file: !3, line: 72, type: !265)
!5671 = !DILocation(line: 72, column: 6, scope: !5657)
!5672 = !DILocalVariable(name: "__timeout_us", scope: !5673, file: !3, line: 74, type: !239)
!5673 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 74, column: 8)
!5674 = !DILocation(line: 74, column: 8, scope: !5673)
!5675 = !DILocalVariable(name: "__delay_us", scope: !5673, file: !3, line: 74, type: !248)
!5676 = !DILocalVariable(name: "__timeout", scope: !5673, file: !3, line: 74, type: !1418)
!5677 = !DILocation(line: 74, column: 8, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 74, column: 8)
!5679 = distinct !DILexicalBlock(scope: !5680, file: !3, line: 74, column: 8)
!5680 = distinct !DILexicalBlock(scope: !5673, file: !3, line: 74, column: 8)
!5681 = !DILocation(line: 74, column: 8, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 74, column: 8)
!5683 = !DILocation(line: 74, column: 8, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 74, column: 8)
!5685 = !DILocation(line: 74, column: 8, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5684, file: !3, line: 74, column: 8)
!5687 = !DILocation(line: 74, column: 8, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5678, file: !3, line: 74, column: 8)
!5689 = !DILocation(line: 74, column: 8, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 74, column: 8)
!5691 = distinct !DILexicalBlock(scope: !5688, file: !3, line: 74, column: 8)
!5692 = !DILocation(line: 74, column: 8, scope: !5691)
!5693 = !DILocation(line: 74, column: 8, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5695, file: !3, line: 74, column: 8)
!5695 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 74, column: 8)
!5696 = !DILocation(line: 74, column: 8, scope: !5695)
!5697 = !DILocation(line: 74, column: 8, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 74, column: 8)
!5699 = !DILocation(line: 74, column: 8, scope: !5679)
!5700 = distinct !{!5700, !5701, !5701}
!5701 = !DILocation(line: 74, column: 8, scope: !5680)
!5702 = !DILocation(line: 74, column: 6, scope: !5657)
!5703 = !DILocation(line: 78, column: 6, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 78, column: 6)
!5705 = !DILocation(line: 78, column: 13, scope: !5704)
!5706 = !DILocation(line: 78, column: 6, scope: !5657)
!5707 = !DILocation(line: 79, column: 3, scope: !5704)
!5708 = !DILocation(line: 81, column: 9, scope: !5657)
!5709 = !DILocation(line: 81, column: 2, scope: !5657)
!5710 = !DILocation(line: 82, column: 1, scope: !5657)
!5711 = distinct !DISubprogram(name: "ktime_add_us", scope: !1419, file: !1419, line: 179, type: !5712, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!5712 = !DISubroutineType(types: !5713)
!5713 = !{!1418, !5714, !5715}
!5714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1418)
!5715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!5716 = !DILocalVariable(name: "kt", arg: 1, scope: !5711, file: !1419, line: 179, type: !5714)
!5717 = !DILocation(line: 179, column: 50, scope: !5711)
!5718 = !DILocalVariable(name: "usec", arg: 2, scope: !5711, file: !1419, line: 179, type: !5715)
!5719 = !DILocation(line: 179, column: 64, scope: !5711)
!5720 = !DILocation(line: 181, column: 9, scope: !5711)
!5721 = !DILocation(line: 181, column: 2, scope: !5711)
!5722 = distinct !DISubprogram(name: "readl", scope: !5723, file: !5723, line: 59, type: !5724, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!5723 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!5724 = !DISubroutineType(types: !5725)
!5725 = !{!7, !5726}
!5726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5727, size: 64)
!5727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5728)
!5728 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5729 = !DILocalVariable(name: "addr", arg: 1, scope: !5722, file: !5723, line: 59, type: !5726)
!5730 = !DILocation(line: 59, column: 1, scope: !5722)
!5731 = !DILocalVariable(name: "ret", scope: !5722, file: !5723, line: 59, type: !7)
!5732 = !{i32 -2143439052}
!5733 = distinct !DISubprogram(name: "ktime_compare", scope: !1419, file: !1419, line: 95, type: !5734, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!5734 = !DISubroutineType(types: !5735)
!5735 = !{!265, !5714, !5714}
!5736 = !DILocalVariable(name: "cmp1", arg: 1, scope: !5733, file: !1419, line: 95, type: !5714)
!5737 = !DILocation(line: 95, column: 47, scope: !5733)
!5738 = !DILocalVariable(name: "cmp2", arg: 2, scope: !5733, file: !1419, line: 95, type: !5714)
!5739 = !DILocation(line: 95, column: 67, scope: !5733)
!5740 = !DILocation(line: 97, column: 6, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5733, file: !1419, line: 97, column: 6)
!5742 = !DILocation(line: 97, column: 13, scope: !5741)
!5743 = !DILocation(line: 97, column: 11, scope: !5741)
!5744 = !DILocation(line: 97, column: 6, scope: !5733)
!5745 = !DILocation(line: 98, column: 3, scope: !5741)
!5746 = !DILocation(line: 99, column: 6, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5733, file: !1419, line: 99, column: 6)
!5748 = !DILocation(line: 99, column: 13, scope: !5747)
!5749 = !DILocation(line: 99, column: 11, scope: !5747)
!5750 = !DILocation(line: 99, column: 6, scope: !5733)
!5751 = !DILocation(line: 100, column: 3, scope: !5747)
!5752 = !DILocation(line: 101, column: 2, scope: !5733)
!5753 = !DILocation(line: 102, column: 1, scope: !5733)
!5754 = distinct !DISubprogram(name: "xhci_quiesce", scope: !3, file: !3, line: 87, type: !5755, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!5755 = !DISubroutineType(types: !5756)
!5756 = !{null, !4497}
!5757 = !DILocalVariable(name: "xhci", arg: 1, scope: !5754, file: !3, line: 87, type: !4497)
!5758 = !DILocation(line: 87, column: 36, scope: !5754)
!5759 = !DILocalVariable(name: "halted", scope: !5754, file: !3, line: 89, type: !204)
!5760 = !DILocation(line: 89, column: 6, scope: !5754)
!5761 = !DILocalVariable(name: "cmd", scope: !5754, file: !3, line: 90, type: !204)
!5762 = !DILocation(line: 90, column: 6, scope: !5754)
!5763 = !DILocalVariable(name: "mask", scope: !5754, file: !3, line: 91, type: !204)
!5764 = !DILocation(line: 91, column: 6, scope: !5754)
!5765 = !DILocation(line: 93, column: 7, scope: !5754)
!5766 = !DILocation(line: 94, column: 18, scope: !5754)
!5767 = !DILocation(line: 94, column: 24, scope: !5754)
!5768 = !DILocation(line: 94, column: 33, scope: !5754)
!5769 = !DILocation(line: 94, column: 17, scope: !5754)
!5770 = !DILocation(line: 94, column: 11, scope: !5754)
!5771 = !DILocation(line: 94, column: 41, scope: !5754)
!5772 = !DILocation(line: 94, column: 9, scope: !5754)
!5773 = !DILocation(line: 95, column: 7, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 95, column: 6)
!5775 = !DILocation(line: 95, column: 6, scope: !5754)
!5776 = !DILocation(line: 96, column: 8, scope: !5774)
!5777 = !DILocation(line: 96, column: 3, scope: !5774)
!5778 = !DILocation(line: 98, column: 15, scope: !5754)
!5779 = !DILocation(line: 98, column: 21, scope: !5754)
!5780 = !DILocation(line: 98, column: 30, scope: !5754)
!5781 = !DILocation(line: 98, column: 14, scope: !5754)
!5782 = !DILocation(line: 98, column: 8, scope: !5754)
!5783 = !DILocation(line: 98, column: 6, scope: !5754)
!5784 = !DILocation(line: 99, column: 9, scope: !5754)
!5785 = !DILocation(line: 99, column: 6, scope: !5754)
!5786 = !DILocation(line: 100, column: 9, scope: !5754)
!5787 = !DILocation(line: 100, column: 15, scope: !5754)
!5788 = !DILocation(line: 100, column: 21, scope: !5754)
!5789 = !DILocation(line: 100, column: 30, scope: !5754)
!5790 = !DILocation(line: 100, column: 14, scope: !5754)
!5791 = !DILocation(line: 100, column: 2, scope: !5754)
!5792 = !DILocation(line: 101, column: 1, scope: !5754)
!5793 = distinct !DISubprogram(name: "writel", scope: !5723, file: !5723, line: 67, type: !5794, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!5794 = !DISubroutineType(types: !5795)
!5795 = !{null, !7, !5796}
!5796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5728, size: 64)
!5797 = !DILocalVariable(name: "val", arg: 1, scope: !5793, file: !5723, line: 67, type: !7)
!5798 = !DILocation(line: 67, column: 1, scope: !5793)
!5799 = !DILocalVariable(name: "addr", arg: 2, scope: !5793, file: !5723, line: 67, type: !5796)
!5800 = !{i32 -2143436659}
!5801 = distinct !DISubprogram(name: "xhci_halt", scope: !3, file: !3, line: 111, type: !5802, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!5802 = !DISubroutineType(types: !5803)
!5803 = !{!265, !4497}
!5804 = !DILocalVariable(name: "xhci", arg: 1, scope: !5801, file: !3, line: 111, type: !4497)
!5805 = !DILocation(line: 111, column: 32, scope: !5801)
!5806 = !DILocalVariable(name: "ret", scope: !5801, file: !3, line: 113, type: !265)
!5807 = !DILocation(line: 113, column: 6, scope: !5801)
!5808 = !DILocation(line: 114, column: 17, scope: !5801)
!5809 = !DILocation(line: 114, column: 2, scope: !5801)
!5810 = !DILocation(line: 115, column: 15, scope: !5801)
!5811 = !DILocation(line: 115, column: 2, scope: !5801)
!5812 = !DILocation(line: 117, column: 24, scope: !5801)
!5813 = !DILocation(line: 117, column: 30, scope: !5801)
!5814 = !DILocation(line: 117, column: 39, scope: !5801)
!5815 = !DILocation(line: 117, column: 23, scope: !5801)
!5816 = !DILocation(line: 117, column: 8, scope: !5801)
!5817 = !DILocation(line: 117, column: 6, scope: !5801)
!5818 = !DILocation(line: 119, column: 6, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5801, file: !3, line: 119, column: 6)
!5820 = !DILocation(line: 119, column: 6, scope: !5801)
!5821 = !DILocation(line: 120, column: 3, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 119, column: 11)
!5823 = !DILocation(line: 121, column: 10, scope: !5822)
!5824 = !DILocation(line: 121, column: 3, scope: !5822)
!5825 = !DILocation(line: 123, column: 2, scope: !5801)
!5826 = !DILocation(line: 123, column: 8, scope: !5801)
!5827 = !DILocation(line: 123, column: 18, scope: !5801)
!5828 = !DILocation(line: 124, column: 2, scope: !5801)
!5829 = !DILocation(line: 124, column: 8, scope: !5801)
!5830 = !DILocation(line: 124, column: 23, scope: !5801)
!5831 = !DILocation(line: 125, column: 9, scope: !5801)
!5832 = !DILocation(line: 125, column: 2, scope: !5801)
!5833 = !DILocation(line: 126, column: 1, scope: !5801)
!5834 = distinct !DISubprogram(name: "trace_xhci_dbg_init", scope: !5835, file: !5835, line: 65, type: !5836, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!5835 = !DIFile(filename: "drivers/usb/host/xhci-trace.h", directory: "/home/lizy2001/genbc/linux")
!5836 = !DISubroutineType(types: !5837)
!5837 = !{null, !5838}
!5838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5839, size: 64)
!5839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "va_format", file: !5840, line: 90, size: 128, elements: !5841)
!5840 = !DIFile(filename: "./include/linux/printk.h", directory: "/home/lizy2001/genbc/linux")
!5841 = !{!5842, !5843}
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !5839, file: !5840, line: 91, baseType: !244, size: 64)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "va", scope: !5839, file: !5840, line: 92, baseType: !5844, size: 64, offset: 64)
!5844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5845, size: 64)
!5845 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5846, line: 99, baseType: !5847)
!5846 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h", directory: "")
!5847 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5846, line: 40, baseType: !5848)
!5848 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 67, baseType: !5849)
!5849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5850, size: 192, elements: !1489)
!5850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 67, size: 192, elements: !5851)
!5851 = !{!5852, !5853, !5854, !5855}
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5850, file: !3, line: 67, baseType: !7, size: 32)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5850, file: !3, line: 67, baseType: !7, size: 32, offset: 32)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5850, file: !3, line: 67, baseType: !208, size: 64, offset: 64)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5850, file: !3, line: 67, baseType: !208, size: 64, offset: 128)
!5856 = !DILocalVariable(name: "vaf", arg: 1, scope: !5834, file: !5835, line: 65, type: !5838)
!5857 = !DILocation(line: 65, column: 1, scope: !5834)
!5858 = distinct !DISubprogram(name: "xhci_to_hcd", scope: !145, file: !145, line: 1935, type: !5859, scopeLine: 1936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!5859 = !DISubroutineType(types: !5860)
!5860 = !{!4501, !4497}
!5861 = !DILocalVariable(name: "xhci", arg: 1, scope: !5858, file: !145, line: 1935, type: !4497)
!5862 = !DILocation(line: 1935, column: 60, scope: !5858)
!5863 = !DILocation(line: 1937, column: 9, scope: !5858)
!5864 = !DILocation(line: 1937, column: 15, scope: !5858)
!5865 = !DILocation(line: 1937, column: 2, scope: !5858)
!5866 = distinct !DISubprogram(name: "xhci_start", scope: !3, file: !3, line: 131, type: !5802, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!5867 = !DILocalVariable(name: "xhci", arg: 1, scope: !5866, file: !3, line: 131, type: !4497)
!5868 = !DILocation(line: 131, column: 33, scope: !5866)
!5869 = !DILocalVariable(name: "temp", scope: !5866, file: !3, line: 133, type: !204)
!5870 = !DILocation(line: 133, column: 6, scope: !5866)
!5871 = !DILocalVariable(name: "ret", scope: !5866, file: !3, line: 134, type: !265)
!5872 = !DILocation(line: 134, column: 6, scope: !5866)
!5873 = !DILocation(line: 136, column: 16, scope: !5866)
!5874 = !DILocation(line: 136, column: 22, scope: !5866)
!5875 = !DILocation(line: 136, column: 31, scope: !5866)
!5876 = !DILocation(line: 136, column: 15, scope: !5866)
!5877 = !DILocation(line: 136, column: 9, scope: !5866)
!5878 = !DILocation(line: 136, column: 7, scope: !5866)
!5879 = !DILocation(line: 137, column: 7, scope: !5866)
!5880 = !DILocation(line: 138, column: 17, scope: !5866)
!5881 = !DILocation(line: 139, column: 4, scope: !5866)
!5882 = !DILocation(line: 138, column: 2, scope: !5866)
!5883 = !DILocation(line: 140, column: 9, scope: !5866)
!5884 = !DILocation(line: 140, column: 16, scope: !5866)
!5885 = !DILocation(line: 140, column: 22, scope: !5866)
!5886 = !DILocation(line: 140, column: 31, scope: !5866)
!5887 = !DILocation(line: 140, column: 15, scope: !5866)
!5888 = !DILocation(line: 140, column: 2, scope: !5866)
!5889 = !DILocation(line: 146, column: 24, scope: !5866)
!5890 = !DILocation(line: 146, column: 30, scope: !5866)
!5891 = !DILocation(line: 146, column: 39, scope: !5866)
!5892 = !DILocation(line: 146, column: 23, scope: !5866)
!5893 = !DILocation(line: 146, column: 8, scope: !5866)
!5894 = !DILocation(line: 146, column: 6, scope: !5866)
!5895 = !DILocation(line: 148, column: 6, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 148, column: 6)
!5897 = !DILocation(line: 148, column: 10, scope: !5896)
!5898 = !DILocation(line: 148, column: 6, scope: !5866)
!5899 = !DILocation(line: 149, column: 3, scope: !5896)
!5900 = !DILocation(line: 152, column: 7, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 152, column: 6)
!5902 = !DILocation(line: 152, column: 6, scope: !5866)
!5903 = !DILocation(line: 154, column: 3, scope: !5901)
!5904 = !DILocation(line: 154, column: 9, scope: !5901)
!5905 = !DILocation(line: 154, column: 19, scope: !5901)
!5906 = !DILocation(line: 156, column: 9, scope: !5866)
!5907 = !DILocation(line: 156, column: 2, scope: !5866)
!5908 = distinct !DISubprogram(name: "xhci_reset", scope: !3, file: !3, line: 166, type: !5802, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!5909 = !DILocalVariable(name: "xhci", arg: 1, scope: !5908, file: !3, line: 166, type: !4497)
!5910 = !DILocation(line: 166, column: 33, scope: !5908)
!5911 = !DILocalVariable(name: "command", scope: !5908, file: !3, line: 168, type: !204)
!5912 = !DILocation(line: 168, column: 6, scope: !5908)
!5913 = !DILocalVariable(name: "state", scope: !5908, file: !3, line: 169, type: !204)
!5914 = !DILocation(line: 169, column: 6, scope: !5908)
!5915 = !DILocalVariable(name: "ret", scope: !5908, file: !3, line: 170, type: !265)
!5916 = !DILocation(line: 170, column: 6, scope: !5908)
!5917 = !DILocation(line: 172, column: 17, scope: !5908)
!5918 = !DILocation(line: 172, column: 23, scope: !5908)
!5919 = !DILocation(line: 172, column: 32, scope: !5908)
!5920 = !DILocation(line: 172, column: 16, scope: !5908)
!5921 = !DILocation(line: 172, column: 10, scope: !5908)
!5922 = !DILocation(line: 172, column: 8, scope: !5908)
!5923 = !DILocation(line: 174, column: 6, scope: !5924)
!5924 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 174, column: 6)
!5925 = !DILocation(line: 174, column: 12, scope: !5924)
!5926 = !DILocation(line: 174, column: 6, scope: !5908)
!5927 = !DILocation(line: 175, column: 3, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 174, column: 24)
!5929 = !DILocation(line: 176, column: 3, scope: !5928)
!5930 = !DILocation(line: 179, column: 7, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 179, column: 6)
!5932 = !DILocation(line: 179, column: 13, scope: !5931)
!5933 = !DILocation(line: 179, column: 25, scope: !5931)
!5934 = !DILocation(line: 179, column: 6, scope: !5908)
!5935 = !DILocation(line: 180, column: 3, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 179, column: 31)
!5937 = !DILocation(line: 181, column: 3, scope: !5936)
!5938 = !DILocation(line: 184, column: 17, scope: !5908)
!5939 = !DILocation(line: 184, column: 2, scope: !5908)
!5940 = !DILocation(line: 185, column: 19, scope: !5908)
!5941 = !DILocation(line: 185, column: 25, scope: !5908)
!5942 = !DILocation(line: 185, column: 34, scope: !5908)
!5943 = !DILocation(line: 185, column: 18, scope: !5908)
!5944 = !DILocation(line: 185, column: 12, scope: !5908)
!5945 = !DILocation(line: 185, column: 10, scope: !5908)
!5946 = !DILocation(line: 186, column: 10, scope: !5908)
!5947 = !DILocation(line: 187, column: 9, scope: !5908)
!5948 = !DILocation(line: 187, column: 19, scope: !5908)
!5949 = !DILocation(line: 187, column: 25, scope: !5908)
!5950 = !DILocation(line: 187, column: 34, scope: !5908)
!5951 = !DILocation(line: 187, column: 18, scope: !5908)
!5952 = !DILocation(line: 187, column: 2, scope: !5908)
!5953 = !DILocation(line: 196, column: 6, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 196, column: 6)
!5955 = !DILocation(line: 196, column: 12, scope: !5954)
!5956 = !DILocation(line: 196, column: 19, scope: !5954)
!5957 = !DILocation(line: 196, column: 6, scope: !5908)
!5958 = !DILocation(line: 197, column: 3, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 197, column: 3)
!5960 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 197, column: 3)
!5961 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 197, column: 3)
!5962 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 197, column: 3)
!5963 = !DILocation(line: 197, column: 3, scope: !5954)
!5964 = !DILocation(line: 199, column: 24, scope: !5908)
!5965 = !DILocation(line: 199, column: 30, scope: !5908)
!5966 = !DILocation(line: 199, column: 39, scope: !5908)
!5967 = !DILocation(line: 199, column: 23, scope: !5908)
!5968 = !DILocation(line: 199, column: 8, scope: !5908)
!5969 = !DILocation(line: 199, column: 6, scope: !5908)
!5970 = !DILocation(line: 201, column: 6, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 201, column: 6)
!5972 = !DILocation(line: 201, column: 6, scope: !5908)
!5973 = !DILocation(line: 202, column: 10, scope: !5971)
!5974 = !DILocation(line: 202, column: 3, scope: !5971)
!5975 = !DILocation(line: 204, column: 6, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 204, column: 6)
!5977 = !DILocation(line: 204, column: 12, scope: !5976)
!5978 = !DILocation(line: 204, column: 19, scope: !5976)
!5979 = !DILocation(line: 204, column: 6, scope: !5908)
!5980 = !DILocalVariable(name: "__mptr", scope: !5981, file: !3, line: 205, type: !208)
!5981 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 205, column: 33)
!5982 = !DILocation(line: 205, column: 33, scope: !5981)
!5983 = !DILocation(line: 205, column: 33, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 205, column: 33)
!5985 = !DILocation(line: 205, column: 3, scope: !5976)
!5986 = !DILocation(line: 207, column: 17, scope: !5908)
!5987 = !DILocation(line: 207, column: 2, scope: !5908)
!5988 = !DILocation(line: 213, column: 24, scope: !5908)
!5989 = !DILocation(line: 213, column: 30, scope: !5908)
!5990 = !DILocation(line: 213, column: 39, scope: !5908)
!5991 = !DILocation(line: 213, column: 23, scope: !5908)
!5992 = !DILocation(line: 213, column: 8, scope: !5908)
!5993 = !DILocation(line: 213, column: 6, scope: !5908)
!5994 = !DILocation(line: 216, column: 2, scope: !5908)
!5995 = !DILocation(line: 216, column: 8, scope: !5908)
!5996 = !DILocation(line: 216, column: 18, scope: !5908)
!5997 = !DILocation(line: 216, column: 28, scope: !5908)
!5998 = !DILocation(line: 216, column: 43, scope: !5908)
!5999 = !DILocation(line: 217, column: 2, scope: !5908)
!6000 = !DILocation(line: 217, column: 8, scope: !5908)
!6001 = !DILocation(line: 217, column: 18, scope: !5908)
!6002 = !DILocation(line: 217, column: 28, scope: !5908)
!6003 = !DILocation(line: 217, column: 44, scope: !5908)
!6004 = !DILocation(line: 218, column: 2, scope: !5908)
!6005 = !DILocation(line: 218, column: 8, scope: !5908)
!6006 = !DILocation(line: 218, column: 18, scope: !5908)
!6007 = !DILocation(line: 218, column: 28, scope: !5908)
!6008 = !DILocation(line: 218, column: 43, scope: !5908)
!6009 = !DILocation(line: 219, column: 2, scope: !5908)
!6010 = !DILocation(line: 219, column: 8, scope: !5908)
!6011 = !DILocation(line: 219, column: 18, scope: !5908)
!6012 = !DILocation(line: 219, column: 28, scope: !5908)
!6013 = !DILocation(line: 219, column: 43, scope: !5908)
!6014 = !DILocation(line: 220, column: 2, scope: !5908)
!6015 = !DILocation(line: 220, column: 8, scope: !5908)
!6016 = !DILocation(line: 220, column: 18, scope: !5908)
!6017 = !DILocation(line: 220, column: 28, scope: !5908)
!6018 = !DILocation(line: 220, column: 44, scope: !5908)
!6019 = !DILocation(line: 221, column: 2, scope: !5908)
!6020 = !DILocation(line: 221, column: 8, scope: !5908)
!6021 = !DILocation(line: 221, column: 18, scope: !5908)
!6022 = !DILocation(line: 221, column: 28, scope: !5908)
!6023 = !DILocation(line: 221, column: 43, scope: !5908)
!6024 = !DILocation(line: 223, column: 9, scope: !5908)
!6025 = !DILocation(line: 223, column: 2, scope: !5908)
!6026 = !DILocation(line: 224, column: 1, scope: !5908)
!6027 = distinct !DISubprogram(name: "xhci_run", scope: !3, file: !3, line: 634, type: !4904, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6028 = !DILocalVariable(name: "hcd", arg: 1, scope: !6027, file: !3, line: 634, type: !4501)
!6029 = !DILocation(line: 634, column: 30, scope: !6027)
!6030 = !DILocalVariable(name: "temp", scope: !6027, file: !3, line: 636, type: !204)
!6031 = !DILocation(line: 636, column: 6, scope: !6027)
!6032 = !DILocalVariable(name: "temp_64", scope: !6027, file: !3, line: 637, type: !239)
!6033 = !DILocation(line: 637, column: 6, scope: !6027)
!6034 = !DILocalVariable(name: "ret", scope: !6027, file: !3, line: 638, type: !265)
!6035 = !DILocation(line: 638, column: 6, scope: !6027)
!6036 = !DILocalVariable(name: "xhci", scope: !6027, file: !3, line: 639, type: !4497)
!6037 = !DILocation(line: 639, column: 19, scope: !6027)
!6038 = !DILocation(line: 639, column: 38, scope: !6027)
!6039 = !DILocation(line: 639, column: 26, scope: !6027)
!6040 = !DILocation(line: 645, column: 2, scope: !6027)
!6041 = !DILocation(line: 645, column: 7, scope: !6027)
!6042 = !DILocation(line: 645, column: 24, scope: !6027)
!6043 = !DILocation(line: 646, column: 30, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 646, column: 6)
!6045 = !DILocation(line: 646, column: 7, scope: !6044)
!6046 = !DILocation(line: 646, column: 6, scope: !6027)
!6047 = !DILocation(line: 647, column: 28, scope: !6044)
!6048 = !DILocation(line: 647, column: 10, scope: !6044)
!6049 = !DILocation(line: 647, column: 3, scope: !6044)
!6050 = !DILocation(line: 649, column: 17, scope: !6027)
!6051 = !DILocation(line: 649, column: 2, scope: !6027)
!6052 = !DILocation(line: 651, column: 28, scope: !6027)
!6053 = !DILocation(line: 651, column: 8, scope: !6027)
!6054 = !DILocation(line: 651, column: 6, scope: !6027)
!6055 = !DILocation(line: 652, column: 6, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 652, column: 6)
!6057 = !DILocation(line: 652, column: 6, scope: !6027)
!6058 = !DILocation(line: 653, column: 10, scope: !6056)
!6059 = !DILocation(line: 653, column: 3, scope: !6056)
!6060 = !DILocation(line: 655, column: 25, scope: !6027)
!6061 = !DILocation(line: 655, column: 32, scope: !6027)
!6062 = !DILocation(line: 655, column: 38, scope: !6027)
!6063 = !DILocation(line: 655, column: 46, scope: !6027)
!6064 = !DILocation(line: 655, column: 12, scope: !6027)
!6065 = !DILocation(line: 655, column: 10, scope: !6027)
!6066 = !DILocation(line: 656, column: 10, scope: !6027)
!6067 = !DILocation(line: 657, column: 17, scope: !6027)
!6068 = !DILocation(line: 658, column: 47, scope: !6027)
!6069 = !DILocation(line: 657, column: 2, scope: !6027)
!6070 = !DILocation(line: 660, column: 17, scope: !6027)
!6071 = !DILocation(line: 660, column: 2, scope: !6027)
!6072 = !DILocation(line: 662, column: 16, scope: !6027)
!6073 = !DILocation(line: 662, column: 22, scope: !6027)
!6074 = !DILocation(line: 662, column: 30, scope: !6027)
!6075 = !DILocation(line: 662, column: 15, scope: !6027)
!6076 = !DILocation(line: 662, column: 9, scope: !6027)
!6077 = !DILocation(line: 662, column: 7, scope: !6027)
!6078 = !DILocation(line: 663, column: 7, scope: !6027)
!6079 = !DILocation(line: 664, column: 11, scope: !6027)
!6080 = !DILocation(line: 664, column: 17, scope: !6027)
!6081 = !DILocation(line: 664, column: 31, scope: !6027)
!6082 = !DILocation(line: 664, column: 38, scope: !6027)
!6083 = !DILocation(line: 664, column: 7, scope: !6027)
!6084 = !DILocation(line: 665, column: 9, scope: !6027)
!6085 = !DILocation(line: 665, column: 16, scope: !6027)
!6086 = !DILocation(line: 665, column: 22, scope: !6027)
!6087 = !DILocation(line: 665, column: 30, scope: !6027)
!6088 = !DILocation(line: 665, column: 15, scope: !6027)
!6089 = !DILocation(line: 665, column: 2, scope: !6027)
!6090 = !DILocation(line: 668, column: 16, scope: !6027)
!6091 = !DILocation(line: 668, column: 22, scope: !6027)
!6092 = !DILocation(line: 668, column: 31, scope: !6027)
!6093 = !DILocation(line: 668, column: 15, scope: !6027)
!6094 = !DILocation(line: 668, column: 9, scope: !6027)
!6095 = !DILocation(line: 668, column: 7, scope: !6027)
!6096 = !DILocation(line: 669, column: 7, scope: !6027)
!6097 = !DILocation(line: 670, column: 17, scope: !6027)
!6098 = !DILocation(line: 671, column: 41, scope: !6027)
!6099 = !DILocation(line: 670, column: 2, scope: !6027)
!6100 = !DILocation(line: 672, column: 9, scope: !6027)
!6101 = !DILocation(line: 672, column: 16, scope: !6027)
!6102 = !DILocation(line: 672, column: 22, scope: !6027)
!6103 = !DILocation(line: 672, column: 31, scope: !6027)
!6104 = !DILocation(line: 672, column: 15, scope: !6027)
!6105 = !DILocation(line: 672, column: 2, scope: !6027)
!6106 = !DILocation(line: 674, column: 16, scope: !6027)
!6107 = !DILocation(line: 674, column: 22, scope: !6027)
!6108 = !DILocation(line: 674, column: 30, scope: !6027)
!6109 = !DILocation(line: 674, column: 15, scope: !6027)
!6110 = !DILocation(line: 674, column: 9, scope: !6027)
!6111 = !DILocation(line: 674, column: 7, scope: !6027)
!6112 = !DILocation(line: 675, column: 17, scope: !6027)
!6113 = !DILocation(line: 677, column: 4, scope: !6027)
!6114 = !DILocation(line: 677, column: 10, scope: !6027)
!6115 = !DILocation(line: 677, column: 33, scope: !6027)
!6116 = !DILocation(line: 675, column: 2, scope: !6027)
!6117 = !DILocation(line: 678, column: 9, scope: !6027)
!6118 = !DILocation(line: 678, column: 31, scope: !6027)
!6119 = !DILocation(line: 678, column: 37, scope: !6027)
!6120 = !DILocation(line: 678, column: 45, scope: !6027)
!6121 = !DILocation(line: 678, column: 30, scope: !6027)
!6122 = !DILocation(line: 678, column: 2, scope: !6027)
!6123 = !DILocation(line: 680, column: 6, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6027, file: !3, line: 680, column: 6)
!6125 = !DILocation(line: 680, column: 12, scope: !6124)
!6126 = !DILocation(line: 680, column: 19, scope: !6124)
!6127 = !DILocation(line: 680, column: 6, scope: !6027)
!6128 = !DILocalVariable(name: "command", scope: !6129, file: !3, line: 681, type: !5247)
!6129 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 680, column: 36)
!6130 = !DILocation(line: 681, column: 24, scope: !6129)
!6131 = !DILocation(line: 683, column: 32, scope: !6129)
!6132 = !DILocation(line: 683, column: 13, scope: !6129)
!6133 = !DILocation(line: 683, column: 11, scope: !6129)
!6134 = !DILocation(line: 684, column: 8, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 684, column: 7)
!6136 = !DILocation(line: 684, column: 7, scope: !6129)
!6137 = !DILocation(line: 685, column: 4, scope: !6135)
!6138 = !DILocation(line: 687, column: 35, scope: !6129)
!6139 = !DILocation(line: 687, column: 41, scope: !6129)
!6140 = !DILocation(line: 687, column: 9, scope: !6129)
!6141 = !DILocation(line: 687, column: 7, scope: !6129)
!6142 = !DILocation(line: 689, column: 7, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 689, column: 7)
!6144 = !DILocation(line: 689, column: 7, scope: !6129)
!6145 = !DILocation(line: 690, column: 22, scope: !6143)
!6146 = !DILocation(line: 690, column: 28, scope: !6143)
!6147 = !DILocation(line: 690, column: 4, scope: !6143)
!6148 = !DILocation(line: 691, column: 2, scope: !6129)
!6149 = !DILocation(line: 692, column: 17, scope: !6027)
!6150 = !DILocation(line: 692, column: 2, scope: !6027)
!6151 = !DILocation(line: 695, column: 16, scope: !6027)
!6152 = !DILocation(line: 695, column: 2, scope: !6027)
!6153 = !DILocation(line: 697, column: 20, scope: !6027)
!6154 = !DILocation(line: 697, column: 2, scope: !6027)
!6155 = !DILocation(line: 699, column: 2, scope: !6027)
!6156 = !DILocation(line: 700, column: 1, scope: !6027)
!6157 = distinct !DISubprogram(name: "hcd_to_xhci", scope: !145, file: !145, line: 1923, type: !6158, scopeLine: 1924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6158 = !DISubroutineType(types: !6159)
!6159 = !{!4497, !4501}
!6160 = !DILocalVariable(name: "hcd", arg: 1, scope: !6157, file: !145, line: 1923, type: !4501)
!6161 = !DILocation(line: 1923, column: 60, scope: !6157)
!6162 = !DILocalVariable(name: "primary_hcd", scope: !6157, file: !145, line: 1925, type: !4501)
!6163 = !DILocation(line: 1925, column: 18, scope: !6157)
!6164 = !DILocation(line: 1927, column: 29, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6157, file: !145, line: 1927, column: 6)
!6166 = !DILocation(line: 1927, column: 6, scope: !6165)
!6167 = !DILocation(line: 1927, column: 6, scope: !6157)
!6168 = !DILocation(line: 1928, column: 17, scope: !6165)
!6169 = !DILocation(line: 1928, column: 15, scope: !6165)
!6170 = !DILocation(line: 1928, column: 3, scope: !6165)
!6171 = !DILocation(line: 1930, column: 17, scope: !6165)
!6172 = !DILocation(line: 1930, column: 22, scope: !6165)
!6173 = !DILocation(line: 1930, column: 15, scope: !6165)
!6174 = !DILocation(line: 1932, column: 30, scope: !6157)
!6175 = !DILocation(line: 1932, column: 43, scope: !6157)
!6176 = !DILocation(line: 1932, column: 29, scope: !6157)
!6177 = !DILocation(line: 1932, column: 9, scope: !6157)
!6178 = !DILocation(line: 1932, column: 2, scope: !6157)
!6179 = distinct !DISubprogram(name: "xhci_run_finished", scope: !3, file: !3, line: 605, type: !5802, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6180 = !DILocalVariable(name: "xhci", arg: 1, scope: !6179, file: !3, line: 605, type: !4497)
!6181 = !DILocation(line: 605, column: 47, scope: !6179)
!6182 = !DILocation(line: 607, column: 17, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 607, column: 6)
!6184 = !DILocation(line: 607, column: 6, scope: !6183)
!6185 = !DILocation(line: 607, column: 6, scope: !6179)
!6186 = !DILocation(line: 608, column: 13, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 607, column: 24)
!6188 = !DILocation(line: 608, column: 3, scope: !6187)
!6189 = !DILocation(line: 609, column: 3, scope: !6187)
!6190 = !DILocation(line: 611, column: 2, scope: !6179)
!6191 = !DILocation(line: 611, column: 8, scope: !6179)
!6192 = !DILocation(line: 611, column: 20, scope: !6179)
!6193 = !DILocation(line: 611, column: 26, scope: !6179)
!6194 = !DILocation(line: 612, column: 2, scope: !6179)
!6195 = !DILocation(line: 612, column: 8, scope: !6179)
!6196 = !DILocation(line: 612, column: 23, scope: !6179)
!6197 = !DILocation(line: 614, column: 6, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 614, column: 6)
!6199 = !DILocation(line: 614, column: 12, scope: !6198)
!6200 = !DILocation(line: 614, column: 19, scope: !6198)
!6201 = !DILocation(line: 614, column: 6, scope: !6179)
!6202 = !DILocation(line: 615, column: 20, scope: !6198)
!6203 = !DILocation(line: 615, column: 3, scope: !6198)
!6204 = !DILocation(line: 617, column: 17, scope: !6179)
!6205 = !DILocation(line: 617, column: 2, scope: !6179)
!6206 = !DILocation(line: 619, column: 2, scope: !6179)
!6207 = !DILocation(line: 620, column: 1, scope: !6179)
!6208 = distinct !DISubprogram(name: "xhci_try_enable_msi", scope: !3, file: !3, line: 403, type: !4904, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6209 = !DILocalVariable(name: "hcd", arg: 1, scope: !6208, file: !3, line: 403, type: !4501)
!6210 = !DILocation(line: 403, column: 48, scope: !6208)
!6211 = !DILocalVariable(name: "xhci", scope: !6208, file: !3, line: 405, type: !4497)
!6212 = !DILocation(line: 405, column: 19, scope: !6208)
!6213 = !DILocation(line: 405, column: 38, scope: !6208)
!6214 = !DILocation(line: 405, column: 26, scope: !6208)
!6215 = !DILocalVariable(name: "pdev", scope: !6208, file: !3, line: 406, type: !209)
!6216 = !DILocation(line: 406, column: 19, scope: !6208)
!6217 = !DILocalVariable(name: "ret", scope: !6208, file: !3, line: 407, type: !265)
!6218 = !DILocation(line: 407, column: 6, scope: !6208)
!6219 = !DILocation(line: 410, column: 6, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 410, column: 6)
!6221 = !DILocation(line: 410, column: 12, scope: !6220)
!6222 = !DILocation(line: 410, column: 19, scope: !6220)
!6223 = !DILocation(line: 410, column: 6, scope: !6208)
!6224 = !DILocation(line: 411, column: 3, scope: !6220)
!6225 = !DILocalVariable(name: "__mptr", scope: !6226, file: !3, line: 413, type: !208)
!6226 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 413, column: 9)
!6227 = !DILocation(line: 413, column: 9, scope: !6226)
!6228 = !DILocation(line: 413, column: 9, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 413, column: 9)
!6230 = !DILocation(line: 413, column: 7, scope: !6208)
!6231 = !DILocation(line: 418, column: 6, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 418, column: 6)
!6233 = !DILocation(line: 418, column: 12, scope: !6232)
!6234 = !DILocation(line: 418, column: 19, scope: !6232)
!6235 = !DILocation(line: 418, column: 6, scope: !6208)
!6236 = !DILocation(line: 419, column: 3, scope: !6232)
!6237 = !DILocation(line: 422, column: 6, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 422, column: 6)
!6239 = !DILocation(line: 422, column: 11, scope: !6238)
!6240 = !DILocation(line: 422, column: 6, scope: !6208)
!6241 = !DILocation(line: 423, column: 12, scope: !6238)
!6242 = !DILocation(line: 423, column: 17, scope: !6238)
!6243 = !DILocation(line: 423, column: 22, scope: !6238)
!6244 = !DILocation(line: 423, column: 3, scope: !6238)
!6245 = !DILocation(line: 424, column: 2, scope: !6208)
!6246 = !DILocation(line: 424, column: 7, scope: !6208)
!6247 = !DILocation(line: 424, column: 11, scope: !6208)
!6248 = !DILocation(line: 426, column: 24, scope: !6208)
!6249 = !DILocation(line: 426, column: 8, scope: !6208)
!6250 = !DILocation(line: 426, column: 6, scope: !6208)
!6251 = !DILocation(line: 427, column: 6, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 427, column: 6)
!6253 = !DILocation(line: 427, column: 6, scope: !6208)
!6254 = !DILocation(line: 429, column: 24, scope: !6252)
!6255 = !DILocation(line: 429, column: 9, scope: !6252)
!6256 = !DILocation(line: 429, column: 7, scope: !6252)
!6257 = !DILocation(line: 429, column: 3, scope: !6252)
!6258 = !DILocation(line: 431, column: 7, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 431, column: 6)
!6260 = !DILocation(line: 431, column: 6, scope: !6208)
!6261 = !DILocation(line: 432, column: 3, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 431, column: 12)
!6263 = !DILocation(line: 432, column: 8, scope: !6262)
!6264 = !DILocation(line: 432, column: 20, scope: !6262)
!6265 = !DILocation(line: 433, column: 3, scope: !6262)
!6266 = !DILocation(line: 436, column: 7, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 436, column: 6)
!6268 = !DILocation(line: 436, column: 13, scope: !6267)
!6269 = !DILocation(line: 436, column: 6, scope: !6208)
!6270 = !DILocation(line: 437, column: 3, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 436, column: 18)
!6272 = !DILocation(line: 438, column: 3, scope: !6271)
!6273 = !DILabel(scope: !6208, name: "legacy_irq", file: !3, line: 441)
!6274 = !DILocation(line: 441, column: 2, scope: !6208)
!6275 = !DILocation(line: 442, column: 14, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 442, column: 6)
!6277 = !DILocation(line: 442, column: 19, scope: !6276)
!6278 = !DILocation(line: 442, column: 7, scope: !6276)
!6279 = !DILocation(line: 442, column: 6, scope: !6208)
!6280 = !DILocation(line: 443, column: 12, scope: !6276)
!6281 = !DILocation(line: 443, column: 17, scope: !6276)
!6282 = !DILocation(line: 444, column: 5, scope: !6276)
!6283 = !DILocation(line: 444, column: 10, scope: !6276)
!6284 = !DILocation(line: 444, column: 18, scope: !6276)
!6285 = !DILocation(line: 444, column: 31, scope: !6276)
!6286 = !DILocation(line: 444, column: 36, scope: !6276)
!6287 = !DILocation(line: 444, column: 41, scope: !6276)
!6288 = !DILocation(line: 443, column: 3, scope: !6276)
!6289 = !DILocation(line: 447, column: 20, scope: !6208)
!6290 = !DILocation(line: 447, column: 26, scope: !6208)
!6291 = !DILocation(line: 448, column: 4, scope: !6208)
!6292 = !DILocation(line: 448, column: 9, scope: !6208)
!6293 = !DILocation(line: 448, column: 20, scope: !6208)
!6294 = !DILocation(line: 447, column: 8, scope: !6208)
!6295 = !DILocation(line: 447, column: 6, scope: !6208)
!6296 = !DILocation(line: 449, column: 6, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 449, column: 6)
!6298 = !DILocation(line: 449, column: 6, scope: !6208)
!6299 = !DILocation(line: 450, column: 3, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6297, file: !3, line: 449, column: 11)
!6301 = !DILocation(line: 452, column: 10, scope: !6300)
!6302 = !DILocation(line: 452, column: 3, scope: !6300)
!6303 = !DILocation(line: 454, column: 13, scope: !6208)
!6304 = !DILocation(line: 454, column: 19, scope: !6208)
!6305 = !DILocation(line: 454, column: 2, scope: !6208)
!6306 = !DILocation(line: 454, column: 7, scope: !6208)
!6307 = !DILocation(line: 454, column: 11, scope: !6208)
!6308 = !DILocation(line: 455, column: 2, scope: !6208)
!6309 = !DILocation(line: 456, column: 1, scope: !6208)
!6310 = distinct !DISubprogram(name: "xhci_read_64", scope: !145, file: !145, line: 1960, type: !6311, scopeLine: 1962, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6311 = !DISubroutineType(types: !6312)
!6312 = !{!239, !6313, !6315}
!6313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6314, size: 64)
!6314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4498)
!6315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5101, size: 64)
!6316 = !DILocalVariable(name: "xhci", arg: 1, scope: !6310, file: !145, line: 1960, type: !6313)
!6317 = !DILocation(line: 1960, column: 55, scope: !6310)
!6318 = !DILocalVariable(name: "regs", arg: 2, scope: !6310, file: !145, line: 1961, type: !6315)
!6319 = !DILocation(line: 1961, column: 19, scope: !6310)
!6320 = !DILocation(line: 1963, column: 21, scope: !6310)
!6321 = !DILocation(line: 1963, column: 9, scope: !6310)
!6322 = !DILocation(line: 1963, column: 2, scope: !6310)
!6323 = distinct !DISubprogram(name: "xhci_dbc_init", scope: !6324, file: !6324, line: 211, type: !5802, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6324 = !DIFile(filename: "drivers/usb/host/xhci-dbgcap.h", directory: "/home/lizy2001/genbc/linux")
!6325 = !DILocalVariable(name: "xhci", arg: 1, scope: !6323, file: !6324, line: 211, type: !4497)
!6326 = !DILocation(line: 211, column: 50, scope: !6323)
!6327 = !DILocation(line: 213, column: 2, scope: !6323)
!6328 = distinct !DISubprogram(name: "xhci_debugfs_init", scope: !5655, file: !5655, line: 123, type: !5755, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6329 = !DILocalVariable(name: "xhci", arg: 1, scope: !6328, file: !5655, line: 123, type: !4497)
!6330 = !DILocation(line: 123, column: 55, scope: !6328)
!6331 = !DILocation(line: 123, column: 63, scope: !6328)
!6332 = distinct !DISubprogram(name: "xhci_shutdown", scope: !3, file: !3, line: 773, type: !4914, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6333 = !DILocalVariable(name: "lock", arg: 1, scope: !6334, file: !6335, line: 402, type: !1190)
!6334 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !6335, file: !6335, line: 402, type: !6336, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6335 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!6336 = !DISubroutineType(types: !6337)
!6337 = !{null, !1190}
!6338 = !DILocation(line: 402, column: 57, scope: !6334, inlinedAt: !6339)
!6339 = distinct !DILocation(line: 785, column: 2, scope: !6332)
!6340 = !DILocalVariable(name: "lock", arg: 1, scope: !6341, file: !6335, line: 377, type: !1190)
!6341 = distinct !DISubprogram(name: "spin_lock_irq", scope: !6335, file: !6335, line: 377, type: !6336, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6342 = !DILocation(line: 377, column: 55, scope: !6341, inlinedAt: !6343)
!6343 = distinct !DILocation(line: 780, column: 2, scope: !6332)
!6344 = !DILocalVariable(name: "hcd", arg: 1, scope: !6332, file: !3, line: 773, type: !4501)
!6345 = !DILocation(line: 773, column: 36, scope: !6332)
!6346 = !DILocalVariable(name: "xhci", scope: !6332, file: !3, line: 775, type: !4497)
!6347 = !DILocation(line: 775, column: 19, scope: !6332)
!6348 = !DILocation(line: 775, column: 38, scope: !6332)
!6349 = !DILocation(line: 775, column: 26, scope: !6332)
!6350 = !DILocation(line: 777, column: 6, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 777, column: 6)
!6352 = !DILocation(line: 777, column: 12, scope: !6351)
!6353 = !DILocation(line: 777, column: 19, scope: !6351)
!6354 = !DILocation(line: 777, column: 6, scope: !6332)
!6355 = !DILocalVariable(name: "__mptr", scope: !6356, file: !3, line: 778, type: !208)
!6356 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 778, column: 26)
!6357 = !DILocation(line: 778, column: 26, scope: !6356)
!6358 = !DILocation(line: 778, column: 26, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 778, column: 26)
!6360 = !DILocation(line: 778, column: 3, scope: !6351)
!6361 = !DILocation(line: 780, column: 17, scope: !6332)
!6362 = !DILocation(line: 780, column: 23, scope: !6332)
!6363 = !DILocation(line: 379, column: 2, scope: !6364, inlinedAt: !6343)
!6364 = distinct !DILexicalBlock(scope: !6365, file: !6335, line: 379, column: 2)
!6365 = distinct !DILexicalBlock(scope: !6341, file: !6335, line: 379, column: 2)
!6366 = !DILocation(line: 379, column: 2, scope: !6367, inlinedAt: !6343)
!6367 = distinct !DILexicalBlock(scope: !6365, file: !6335, line: 379, column: 2)
!6368 = !{i32 -2145192421}
!6369 = !DILocation(line: 379, column: 2, scope: !6370, inlinedAt: !6343)
!6370 = distinct !DILexicalBlock(scope: !6367, file: !6335, line: 379, column: 2)
!6371 = !DILocation(line: 781, column: 12, scope: !6332)
!6372 = !DILocation(line: 781, column: 2, scope: !6332)
!6373 = !DILocation(line: 783, column: 6, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6332, file: !3, line: 783, column: 6)
!6375 = !DILocation(line: 783, column: 12, scope: !6374)
!6376 = !DILocation(line: 783, column: 19, scope: !6374)
!6377 = !DILocation(line: 783, column: 6, scope: !6332)
!6378 = !DILocation(line: 784, column: 14, scope: !6374)
!6379 = !DILocation(line: 784, column: 3, scope: !6374)
!6380 = !DILocation(line: 785, column: 19, scope: !6332)
!6381 = !DILocation(line: 785, column: 25, scope: !6332)
!6382 = !DILocation(line: 404, column: 2, scope: !6383, inlinedAt: !6339)
!6383 = distinct !DILexicalBlock(scope: !6384, file: !6335, line: 404, column: 2)
!6384 = distinct !DILexicalBlock(scope: !6334, file: !6335, line: 404, column: 2)
!6385 = !DILocation(line: 404, column: 2, scope: !6386, inlinedAt: !6339)
!6386 = distinct !DILexicalBlock(scope: !6384, file: !6335, line: 404, column: 2)
!6387 = !{i32 -2145190673}
!6388 = !DILocation(line: 404, column: 2, scope: !6389, inlinedAt: !6339)
!6389 = distinct !DILexicalBlock(scope: !6386, file: !6335, line: 404, column: 2)
!6390 = !DILocation(line: 787, column: 20, scope: !6332)
!6391 = !DILocation(line: 787, column: 2, scope: !6332)
!6392 = !DILocation(line: 789, column: 17, scope: !6332)
!6393 = !DILocation(line: 791, column: 11, scope: !6332)
!6394 = !DILocation(line: 791, column: 17, scope: !6332)
!6395 = !DILocation(line: 791, column: 26, scope: !6332)
!6396 = !DILocation(line: 791, column: 10, scope: !6332)
!6397 = !DILocation(line: 791, column: 4, scope: !6332)
!6398 = !DILocation(line: 789, column: 2, scope: !6332)
!6399 = !DILocation(line: 792, column: 1, scope: !6332)
!6400 = distinct !DISubprogram(name: "xhci_cleanup_msix", scope: !3, file: !3, line: 365, type: !5755, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6401 = !DILocalVariable(name: "xhci", arg: 1, scope: !6400, file: !3, line: 365, type: !4497)
!6402 = !DILocation(line: 365, column: 48, scope: !6400)
!6403 = !DILocalVariable(name: "hcd", scope: !6400, file: !3, line: 367, type: !4501)
!6404 = !DILocation(line: 367, column: 18, scope: !6400)
!6405 = !DILocation(line: 367, column: 36, scope: !6400)
!6406 = !DILocation(line: 367, column: 24, scope: !6400)
!6407 = !DILocalVariable(name: "pdev", scope: !6400, file: !3, line: 368, type: !209)
!6408 = !DILocation(line: 368, column: 18, scope: !6400)
!6409 = !DILocalVariable(name: "__mptr", scope: !6410, file: !3, line: 368, type: !208)
!6410 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 368, column: 25)
!6411 = !DILocation(line: 368, column: 25, scope: !6410)
!6412 = !DILocation(line: 368, column: 25, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 368, column: 25)
!6414 = !DILocation(line: 370, column: 6, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 370, column: 6)
!6416 = !DILocation(line: 370, column: 12, scope: !6415)
!6417 = !DILocation(line: 370, column: 19, scope: !6415)
!6418 = !DILocation(line: 370, column: 6, scope: !6400)
!6419 = !DILocation(line: 371, column: 3, scope: !6415)
!6420 = !DILocation(line: 374, column: 6, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 374, column: 6)
!6422 = !DILocation(line: 374, column: 11, scope: !6421)
!6423 = !DILocation(line: 374, column: 15, scope: !6421)
!6424 = !DILocation(line: 374, column: 6, scope: !6400)
!6425 = !DILocation(line: 375, column: 3, scope: !6421)
!6426 = !DILocation(line: 377, column: 6, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6400, file: !3, line: 377, column: 6)
!6428 = !DILocation(line: 377, column: 11, scope: !6427)
!6429 = !DILocation(line: 377, column: 6, scope: !6400)
!6430 = !DILocalVariable(name: "i", scope: !6431, file: !3, line: 378, type: !265)
!6431 = distinct !DILexicalBlock(scope: !6427, file: !3, line: 377, column: 25)
!6432 = !DILocation(line: 378, column: 7, scope: !6431)
!6433 = !DILocation(line: 380, column: 10, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 380, column: 3)
!6435 = !DILocation(line: 380, column: 8, scope: !6434)
!6436 = !DILocation(line: 380, column: 15, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 380, column: 3)
!6438 = !DILocation(line: 380, column: 19, scope: !6437)
!6439 = !DILocation(line: 380, column: 25, scope: !6437)
!6440 = !DILocation(line: 380, column: 17, scope: !6437)
!6441 = !DILocation(line: 380, column: 3, scope: !6434)
!6442 = !DILocation(line: 381, column: 28, scope: !6437)
!6443 = !DILocation(line: 381, column: 34, scope: !6437)
!6444 = !DILocation(line: 381, column: 13, scope: !6437)
!6445 = !DILocation(line: 381, column: 50, scope: !6437)
!6446 = !DILocation(line: 381, column: 38, scope: !6437)
!6447 = !DILocation(line: 381, column: 4, scope: !6437)
!6448 = !DILocation(line: 380, column: 38, scope: !6437)
!6449 = !DILocation(line: 380, column: 3, scope: !6437)
!6450 = distinct !{!6450, !6441, !6451}
!6451 = !DILocation(line: 381, column: 55, scope: !6434)
!6452 = !DILocation(line: 382, column: 2, scope: !6431)
!6453 = !DILocation(line: 383, column: 27, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6427, file: !3, line: 382, column: 9)
!6455 = !DILocation(line: 383, column: 12, scope: !6454)
!6456 = !DILocation(line: 383, column: 49, scope: !6454)
!6457 = !DILocation(line: 383, column: 37, scope: !6454)
!6458 = !DILocation(line: 383, column: 3, scope: !6454)
!6459 = !DILocation(line: 386, column: 23, scope: !6400)
!6460 = !DILocation(line: 386, column: 2, scope: !6400)
!6461 = !DILocation(line: 387, column: 2, scope: !6400)
!6462 = !DILocation(line: 387, column: 7, scope: !6400)
!6463 = !DILocation(line: 387, column: 20, scope: !6400)
!6464 = !DILocation(line: 388, column: 1, scope: !6400)
!6465 = distinct !DISubprogram(name: "xhci_suspend", scope: !3, file: !3, line: 970, type: !6466, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6466 = !DISubroutineType(types: !6467)
!6467 = !{!265, !4497, !569}
!6468 = !DILocation(line: 402, column: 57, scope: !6334, inlinedAt: !6469)
!6469 = distinct !DILocation(line: 1056, column: 2, scope: !6465)
!6470 = !DILocation(line: 402, column: 57, scope: !6334, inlinedAt: !6471)
!6471 = distinct !DILocation(line: 1052, column: 4, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 1050, column: 10)
!6473 = distinct !DILexicalBlock(scope: !6474, file: !3, line: 1046, column: 7)
!6474 = distinct !DILexicalBlock(scope: !6475, file: !3, line: 1035, column: 30)
!6475 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 1034, column: 6)
!6476 = !DILocation(line: 402, column: 57, scope: !6334, inlinedAt: !6477)
!6477 = distinct !DILocation(line: 1021, column: 3, scope: !6478)
!6478 = distinct !DILexicalBlock(scope: !6479, file: !3, line: 1019, column: 37)
!6479 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 1018, column: 6)
!6480 = !DILocation(line: 377, column: 55, scope: !6341, inlinedAt: !6481)
!6481 = distinct !DILocation(line: 1004, column: 2, scope: !6465)
!6482 = !DILocalVariable(name: "xhci", arg: 1, scope: !6465, file: !3, line: 970, type: !4497)
!6483 = !DILocation(line: 970, column: 35, scope: !6465)
!6484 = !DILocalVariable(name: "do_wakeup", arg: 2, scope: !6465, file: !3, line: 970, type: !569)
!6485 = !DILocation(line: 970, column: 46, scope: !6465)
!6486 = !DILocalVariable(name: "rc", scope: !6465, file: !3, line: 972, type: !265)
!6487 = !DILocation(line: 972, column: 8, scope: !6465)
!6488 = !DILocalVariable(name: "delay", scope: !6465, file: !3, line: 973, type: !7)
!6489 = !DILocation(line: 973, column: 16, scope: !6465)
!6490 = !DILocalVariable(name: "hcd", scope: !6465, file: !3, line: 974, type: !4501)
!6491 = !DILocation(line: 974, column: 19, scope: !6465)
!6492 = !DILocation(line: 974, column: 37, scope: !6465)
!6493 = !DILocation(line: 974, column: 25, scope: !6465)
!6494 = !DILocalVariable(name: "command", scope: !6465, file: !3, line: 975, type: !204)
!6495 = !DILocation(line: 975, column: 8, scope: !6465)
!6496 = !DILocalVariable(name: "res", scope: !6465, file: !3, line: 976, type: !204)
!6497 = !DILocation(line: 976, column: 8, scope: !6465)
!6498 = !DILocation(line: 978, column: 7, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 978, column: 6)
!6500 = !DILocation(line: 978, column: 12, scope: !6499)
!6501 = !DILocation(line: 978, column: 6, scope: !6465)
!6502 = !DILocation(line: 979, column: 3, scope: !6499)
!6503 = !DILocation(line: 981, column: 6, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 981, column: 6)
!6505 = !DILocation(line: 981, column: 11, scope: !6504)
!6506 = !DILocation(line: 981, column: 17, scope: !6504)
!6507 = !DILocation(line: 981, column: 39, scope: !6504)
!6508 = !DILocation(line: 982, column: 4, scope: !6504)
!6509 = !DILocation(line: 982, column: 10, scope: !6504)
!6510 = !DILocation(line: 982, column: 22, scope: !6504)
!6511 = !DILocation(line: 982, column: 28, scope: !6504)
!6512 = !DILocation(line: 981, column: 6, scope: !6465)
!6513 = !DILocation(line: 983, column: 3, scope: !6504)
!6514 = !DILocation(line: 986, column: 7, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 986, column: 6)
!6516 = !DILocation(line: 986, column: 6, scope: !6465)
!6517 = !DILocation(line: 987, column: 34, scope: !6515)
!6518 = !DILocation(line: 987, column: 3, scope: !6515)
!6519 = !DILocation(line: 989, column: 7, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 989, column: 6)
!6521 = !DILocation(line: 989, column: 6, scope: !6465)
!6522 = !DILocation(line: 990, column: 3, scope: !6520)
!6523 = !DILocation(line: 992, column: 19, scope: !6465)
!6524 = !DILocation(line: 992, column: 2, scope: !6465)
!6525 = !DILocation(line: 996, column: 31, scope: !6465)
!6526 = !DILocation(line: 996, column: 36, scope: !6465)
!6527 = !DILocation(line: 996, column: 2, scope: !6465)
!6528 = !DILocation(line: 997, column: 2, scope: !6465)
!6529 = !DILocation(line: 998, column: 31, scope: !6465)
!6530 = !DILocation(line: 998, column: 37, scope: !6465)
!6531 = !DILocation(line: 998, column: 49, scope: !6465)
!6532 = !DILocation(line: 998, column: 2, scope: !6465)
!6533 = !DILocation(line: 999, column: 2, scope: !6465)
!6534 = !DILocation(line: 1001, column: 6, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 1001, column: 6)
!6536 = !DILocation(line: 1001, column: 12, scope: !6535)
!6537 = !DILocation(line: 1001, column: 19, scope: !6535)
!6538 = !DILocation(line: 1001, column: 6, scope: !6465)
!6539 = !DILocation(line: 1002, column: 3, scope: !6535)
!6540 = !DILocation(line: 1004, column: 17, scope: !6465)
!6541 = !DILocation(line: 1004, column: 23, scope: !6465)
!6542 = !DILocation(line: 379, column: 2, scope: !6364, inlinedAt: !6481)
!6543 = !DILocation(line: 379, column: 2, scope: !6367, inlinedAt: !6481)
!6544 = !DILocation(line: 379, column: 2, scope: !6370, inlinedAt: !6481)
!6545 = !DILocation(line: 1005, column: 37, scope: !6465)
!6546 = !DILocation(line: 1005, column: 42, scope: !6465)
!6547 = !DILocation(line: 1005, column: 2, scope: !6465)
!6548 = !DILocation(line: 1006, column: 37, scope: !6465)
!6549 = !DILocation(line: 1006, column: 43, scope: !6465)
!6550 = !DILocation(line: 1006, column: 55, scope: !6465)
!6551 = !DILocation(line: 1006, column: 2, scope: !6465)
!6552 = !DILocation(line: 1011, column: 19, scope: !6465)
!6553 = !DILocation(line: 1011, column: 25, scope: !6465)
!6554 = !DILocation(line: 1011, column: 34, scope: !6465)
!6555 = !DILocation(line: 1011, column: 18, scope: !6465)
!6556 = !DILocation(line: 1011, column: 12, scope: !6465)
!6557 = !DILocation(line: 1011, column: 10, scope: !6465)
!6558 = !DILocation(line: 1012, column: 10, scope: !6465)
!6559 = !DILocation(line: 1013, column: 9, scope: !6465)
!6560 = !DILocation(line: 1013, column: 19, scope: !6465)
!6561 = !DILocation(line: 1013, column: 25, scope: !6465)
!6562 = !DILocation(line: 1013, column: 34, scope: !6465)
!6563 = !DILocation(line: 1013, column: 18, scope: !6465)
!6564 = !DILocation(line: 1013, column: 2, scope: !6465)
!6565 = !DILocation(line: 1016, column: 12, scope: !6465)
!6566 = !DILocation(line: 1016, column: 18, scope: !6465)
!6567 = !DILocation(line: 1016, column: 25, scope: !6465)
!6568 = !DILocation(line: 1016, column: 11, scope: !6465)
!6569 = !DILocation(line: 1016, column: 8, scope: !6465)
!6570 = !DILocation(line: 1018, column: 22, scope: !6479)
!6571 = !DILocation(line: 1018, column: 28, scope: !6479)
!6572 = !DILocation(line: 1018, column: 37, scope: !6479)
!6573 = !DILocation(line: 1018, column: 21, scope: !6479)
!6574 = !DILocation(line: 1019, column: 29, scope: !6479)
!6575 = !DILocation(line: 1018, column: 6, scope: !6479)
!6576 = !DILocation(line: 1018, column: 6, scope: !6465)
!6577 = !DILocation(line: 1020, column: 3, scope: !6478)
!6578 = !DILocation(line: 1021, column: 20, scope: !6478)
!6579 = !DILocation(line: 1021, column: 26, scope: !6478)
!6580 = !DILocation(line: 404, column: 2, scope: !6383, inlinedAt: !6477)
!6581 = !DILocation(line: 404, column: 2, scope: !6386, inlinedAt: !6477)
!6582 = !DILocation(line: 404, column: 2, scope: !6389, inlinedAt: !6477)
!6583 = !DILocation(line: 1022, column: 3, scope: !6478)
!6584 = !DILocation(line: 1024, column: 26, scope: !6465)
!6585 = !DILocation(line: 1024, column: 2, scope: !6465)
!6586 = !DILocation(line: 1027, column: 22, scope: !6465)
!6587 = !DILocation(line: 1027, column: 2, scope: !6465)
!6588 = !DILocation(line: 1030, column: 19, scope: !6465)
!6589 = !DILocation(line: 1030, column: 25, scope: !6465)
!6590 = !DILocation(line: 1030, column: 34, scope: !6465)
!6591 = !DILocation(line: 1030, column: 18, scope: !6465)
!6592 = !DILocation(line: 1030, column: 12, scope: !6465)
!6593 = !DILocation(line: 1030, column: 10, scope: !6465)
!6594 = !DILocation(line: 1031, column: 10, scope: !6465)
!6595 = !DILocation(line: 1032, column: 9, scope: !6465)
!6596 = !DILocation(line: 1032, column: 19, scope: !6465)
!6597 = !DILocation(line: 1032, column: 25, scope: !6465)
!6598 = !DILocation(line: 1032, column: 34, scope: !6465)
!6599 = !DILocation(line: 1032, column: 18, scope: !6465)
!6600 = !DILocation(line: 1032, column: 2, scope: !6465)
!6601 = !DILocation(line: 1033, column: 2, scope: !6465)
!6602 = !DILocation(line: 1033, column: 8, scope: !6465)
!6603 = !DILocation(line: 1033, column: 23, scope: !6465)
!6604 = !DILocation(line: 1034, column: 22, scope: !6475)
!6605 = !DILocation(line: 1034, column: 28, scope: !6475)
!6606 = !DILocation(line: 1034, column: 37, scope: !6475)
!6607 = !DILocation(line: 1034, column: 21, scope: !6475)
!6608 = !DILocation(line: 1034, column: 6, scope: !6475)
!6609 = !DILocation(line: 1034, column: 6, scope: !6465)
!6610 = !DILocation(line: 1045, column: 16, scope: !6474)
!6611 = !DILocation(line: 1045, column: 22, scope: !6474)
!6612 = !DILocation(line: 1045, column: 31, scope: !6474)
!6613 = !DILocation(line: 1045, column: 15, scope: !6474)
!6614 = !DILocation(line: 1045, column: 9, scope: !6474)
!6615 = !DILocation(line: 1045, column: 7, scope: !6474)
!6616 = !DILocation(line: 1046, column: 8, scope: !6473)
!6617 = !DILocation(line: 1046, column: 14, scope: !6473)
!6618 = !DILocation(line: 1046, column: 21, scope: !6473)
!6619 = !DILocation(line: 1046, column: 49, scope: !6473)
!6620 = !DILocation(line: 1047, column: 10, scope: !6473)
!6621 = !DILocation(line: 1047, column: 14, scope: !6473)
!6622 = !DILocation(line: 1047, column: 25, scope: !6473)
!6623 = !DILocation(line: 1047, column: 31, scope: !6473)
!6624 = !DILocation(line: 1048, column: 7, scope: !6473)
!6625 = !DILocation(line: 1048, column: 11, scope: !6473)
!6626 = !DILocation(line: 1048, column: 22, scope: !6473)
!6627 = !DILocation(line: 1046, column: 7, scope: !6474)
!6628 = !DILocation(line: 1049, column: 4, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 1048, column: 30)
!6630 = !DILocation(line: 1049, column: 10, scope: !6629)
!6631 = !DILocation(line: 1049, column: 25, scope: !6629)
!6632 = !DILocation(line: 1050, column: 3, scope: !6629)
!6633 = !DILocation(line: 1051, column: 4, scope: !6472)
!6634 = !DILocation(line: 1052, column: 21, scope: !6472)
!6635 = !DILocation(line: 1052, column: 27, scope: !6472)
!6636 = !DILocation(line: 404, column: 2, scope: !6383, inlinedAt: !6471)
!6637 = !DILocation(line: 404, column: 2, scope: !6386, inlinedAt: !6471)
!6638 = !DILocation(line: 404, column: 2, scope: !6389, inlinedAt: !6471)
!6639 = !DILocation(line: 1053, column: 4, scope: !6472)
!6640 = !DILocation(line: 1055, column: 2, scope: !6474)
!6641 = !DILocation(line: 1056, column: 19, scope: !6465)
!6642 = !DILocation(line: 1056, column: 25, scope: !6465)
!6643 = !DILocation(line: 404, column: 2, scope: !6383, inlinedAt: !6469)
!6644 = !DILocation(line: 404, column: 2, scope: !6386, inlinedAt: !6469)
!6645 = !DILocation(line: 404, column: 2, scope: !6389, inlinedAt: !6469)
!6646 = !DILocation(line: 1062, column: 7, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6465, file: !3, line: 1062, column: 6)
!6648 = !DILocation(line: 1062, column: 13, scope: !6647)
!6649 = !DILocation(line: 1062, column: 20, scope: !6647)
!6650 = !DILocation(line: 1062, column: 44, scope: !6647)
!6651 = !DILocation(line: 1063, column: 30, scope: !6647)
!6652 = !DILocation(line: 1063, column: 7, scope: !6647)
!6653 = !DILocation(line: 1062, column: 6, scope: !6465)
!6654 = !DILocation(line: 1064, column: 3, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 1063, column: 39)
!6656 = !DILocation(line: 1065, column: 18, scope: !6655)
!6657 = !DILocation(line: 1065, column: 3, scope: !6655)
!6658 = !DILocation(line: 1068, column: 2, scope: !6655)
!6659 = !DILocation(line: 1072, column: 22, scope: !6465)
!6660 = !DILocation(line: 1072, column: 2, scope: !6465)
!6661 = !DILocation(line: 1074, column: 9, scope: !6465)
!6662 = !DILocation(line: 1074, column: 2, scope: !6465)
!6663 = !DILocation(line: 1075, column: 1, scope: !6465)
!6664 = distinct !DISubprogram(name: "xhci_disable_port_wake_on_bits", scope: !3, file: !3, line: 886, type: !5755, scopeLine: 887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6665 = !DILocalVariable(name: "lock", arg: 1, scope: !6666, file: !6335, line: 407, type: !1190)
!6666 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !6335, file: !6335, line: 407, type: !6667, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6667 = !DISubroutineType(types: !6668)
!6668 = !{null, !1190, !248}
!6669 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !6670)
!6670 = distinct !DILocation(line: 926, column: 2, scope: !6664)
!6671 = !DILocalVariable(name: "flags", arg: 2, scope: !6666, file: !6335, line: 407, type: !248)
!6672 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !6670)
!6673 = !DILocalVariable(name: "lock", arg: 1, scope: !6674, file: !6335, line: 327, type: !1190)
!6674 = distinct !DISubprogram(name: "spinlock_check", scope: !6335, file: !6335, line: 327, type: !6675, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6675 = !DISubroutineType(types: !6676)
!6676 = !{!6677, !1190}
!6677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!6678 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !6679)
!6679 = distinct !DILocation(line: 893, column: 2, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6681, file: !3, line: 893, column: 2)
!6681 = distinct !DILexicalBlock(scope: !6682, file: !3, line: 893, column: 2)
!6682 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 893, column: 2)
!6683 = distinct !DILexicalBlock(scope: !6684, file: !3, line: 893, column: 2)
!6684 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 893, column: 2)
!6685 = !DILocalVariable(name: "xhci", arg: 1, scope: !6664, file: !3, line: 886, type: !4497)
!6686 = !DILocation(line: 886, column: 61, scope: !6664)
!6687 = !DILocalVariable(name: "ports", scope: !6664, file: !3, line: 888, type: !5412)
!6688 = !DILocation(line: 888, column: 21, scope: !6664)
!6689 = !DILocalVariable(name: "port_index", scope: !6664, file: !3, line: 889, type: !265)
!6690 = !DILocation(line: 889, column: 6, scope: !6664)
!6691 = !DILocalVariable(name: "flags", scope: !6664, file: !3, line: 890, type: !248)
!6692 = !DILocation(line: 890, column: 16, scope: !6664)
!6693 = !DILocalVariable(name: "t1", scope: !6664, file: !3, line: 891, type: !204)
!6694 = !DILocation(line: 891, column: 6, scope: !6664)
!6695 = !DILocalVariable(name: "t2", scope: !6664, file: !3, line: 891, type: !204)
!6696 = !DILocation(line: 891, column: 10, scope: !6664)
!6697 = !DILocalVariable(name: "portsc", scope: !6664, file: !3, line: 891, type: !204)
!6698 = !DILocation(line: 891, column: 14, scope: !6664)
!6699 = !DILocation(line: 893, column: 2, scope: !6664)
!6700 = !DILocation(line: 893, column: 2, scope: !6684)
!6701 = !DILocalVariable(name: "__dummy", scope: !6702, file: !3, line: 893, type: !248)
!6702 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 893, column: 2)
!6703 = !DILocation(line: 893, column: 2, scope: !6702)
!6704 = !DILocalVariable(name: "__dummy2", scope: !6702, file: !3, line: 893, type: !248)
!6705 = !DILocation(line: 893, column: 2, scope: !6683)
!6706 = !DILocation(line: 893, column: 2, scope: !6682)
!6707 = !DILocation(line: 893, column: 2, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6682, file: !3, line: 893, column: 2)
!6709 = !DILocalVariable(name: "__dummy", scope: !6710, file: !3, line: 893, type: !248)
!6710 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 893, column: 2)
!6711 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 893, column: 2)
!6712 = !DILocation(line: 893, column: 2, scope: !6710)
!6713 = !DILocalVariable(name: "__dummy2", scope: !6710, file: !3, line: 893, type: !248)
!6714 = !DILocation(line: 893, column: 2, scope: !6711)
!6715 = !DILocation(line: 893, column: 2, scope: !6681)
!6716 = !{i32 -2140705042}
!6717 = !DILocation(line: 893, column: 2, scope: !6680)
!6718 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !6679)
!6719 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !6679)
!6720 = !DILocation(line: 896, column: 15, scope: !6664)
!6721 = !DILocation(line: 896, column: 21, scope: !6664)
!6722 = !DILocation(line: 896, column: 31, scope: !6664)
!6723 = !DILocation(line: 896, column: 13, scope: !6664)
!6724 = !DILocation(line: 897, column: 10, scope: !6664)
!6725 = !DILocation(line: 897, column: 16, scope: !6664)
!6726 = !DILocation(line: 897, column: 26, scope: !6664)
!6727 = !DILocation(line: 897, column: 8, scope: !6664)
!6728 = !DILocation(line: 898, column: 2, scope: !6664)
!6729 = !DILocation(line: 898, column: 19, scope: !6664)
!6730 = !DILocation(line: 899, column: 14, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 898, column: 23)
!6732 = !DILocation(line: 899, column: 20, scope: !6731)
!6733 = !DILocation(line: 899, column: 33, scope: !6731)
!6734 = !DILocation(line: 899, column: 8, scope: !6731)
!6735 = !DILocation(line: 899, column: 6, scope: !6731)
!6736 = !DILocation(line: 900, column: 12, scope: !6731)
!6737 = !DILocation(line: 900, column: 10, scope: !6731)
!6738 = !DILocation(line: 901, column: 35, scope: !6731)
!6739 = !DILocation(line: 901, column: 8, scope: !6731)
!6740 = !DILocation(line: 901, column: 6, scope: !6731)
!6741 = !DILocation(line: 902, column: 8, scope: !6731)
!6742 = !DILocation(line: 902, column: 11, scope: !6731)
!6743 = !DILocation(line: 902, column: 6, scope: !6731)
!6744 = !DILocation(line: 903, column: 7, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 903, column: 7)
!6746 = !DILocation(line: 903, column: 13, scope: !6745)
!6747 = !DILocation(line: 903, column: 10, scope: !6745)
!6748 = !DILocation(line: 903, column: 7, scope: !6731)
!6749 = !DILocation(line: 904, column: 11, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 903, column: 17)
!6751 = !DILocation(line: 904, column: 15, scope: !6750)
!6752 = !DILocation(line: 904, column: 21, scope: !6750)
!6753 = !DILocation(line: 904, column: 34, scope: !6750)
!6754 = !DILocation(line: 904, column: 4, scope: !6750)
!6755 = !DILocation(line: 908, column: 3, scope: !6750)
!6756 = distinct !{!6756, !6728, !6757}
!6757 = !DILocation(line: 909, column: 2, scope: !6664)
!6758 = !DILocation(line: 912, column: 15, scope: !6664)
!6759 = !DILocation(line: 912, column: 21, scope: !6664)
!6760 = !DILocation(line: 912, column: 31, scope: !6664)
!6761 = !DILocation(line: 912, column: 13, scope: !6664)
!6762 = !DILocation(line: 913, column: 10, scope: !6664)
!6763 = !DILocation(line: 913, column: 16, scope: !6664)
!6764 = !DILocation(line: 913, column: 26, scope: !6664)
!6765 = !DILocation(line: 913, column: 8, scope: !6664)
!6766 = !DILocation(line: 914, column: 2, scope: !6664)
!6767 = !DILocation(line: 914, column: 19, scope: !6664)
!6768 = !DILocation(line: 915, column: 14, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 914, column: 23)
!6770 = !DILocation(line: 915, column: 20, scope: !6769)
!6771 = !DILocation(line: 915, column: 33, scope: !6769)
!6772 = !DILocation(line: 915, column: 8, scope: !6769)
!6773 = !DILocation(line: 915, column: 6, scope: !6769)
!6774 = !DILocation(line: 916, column: 12, scope: !6769)
!6775 = !DILocation(line: 916, column: 10, scope: !6769)
!6776 = !DILocation(line: 917, column: 35, scope: !6769)
!6777 = !DILocation(line: 917, column: 8, scope: !6769)
!6778 = !DILocation(line: 917, column: 6, scope: !6769)
!6779 = !DILocation(line: 918, column: 8, scope: !6769)
!6780 = !DILocation(line: 918, column: 11, scope: !6769)
!6781 = !DILocation(line: 918, column: 6, scope: !6769)
!6782 = !DILocation(line: 919, column: 7, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 919, column: 7)
!6784 = !DILocation(line: 919, column: 13, scope: !6783)
!6785 = !DILocation(line: 919, column: 10, scope: !6783)
!6786 = !DILocation(line: 919, column: 7, scope: !6769)
!6787 = !DILocation(line: 920, column: 11, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6783, file: !3, line: 919, column: 17)
!6789 = !DILocation(line: 920, column: 15, scope: !6788)
!6790 = !DILocation(line: 920, column: 21, scope: !6788)
!6791 = !DILocation(line: 920, column: 34, scope: !6788)
!6792 = !DILocation(line: 920, column: 4, scope: !6788)
!6793 = !DILocation(line: 924, column: 3, scope: !6788)
!6794 = distinct !{!6794, !6766, !6795}
!6795 = !DILocation(line: 925, column: 2, scope: !6664)
!6796 = !DILocation(line: 926, column: 26, scope: !6664)
!6797 = !DILocation(line: 926, column: 32, scope: !6664)
!6798 = !DILocation(line: 926, column: 38, scope: !6664)
!6799 = !DILocalVariable(name: "__dummy", scope: !6800, file: !6335, line: 409, type: !248)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !6335, line: 409, column: 2)
!6801 = distinct !DILexicalBlock(scope: !6666, file: !6335, line: 409, column: 2)
!6802 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !6670)
!6803 = !DILocalVariable(name: "__dummy2", scope: !6800, file: !6335, line: 409, type: !248)
!6804 = !DILocalVariable(name: "__dummy", scope: !6805, file: !6335, line: 409, type: !248)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !6335, line: 409, column: 2)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !6335, line: 409, column: 2)
!6807 = distinct !DILexicalBlock(scope: !6808, file: !6335, line: 409, column: 2)
!6808 = distinct !DILexicalBlock(scope: !6801, file: !6335, line: 409, column: 2)
!6809 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !6670)
!6810 = !DILocalVariable(name: "__dummy2", scope: !6805, file: !6335, line: 409, type: !248)
!6811 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !6670)
!6812 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !6670)
!6813 = distinct !DILexicalBlock(scope: !6808, file: !6335, line: 409, column: 2)
!6814 = !{i32 -2145189629}
!6815 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !6670)
!6816 = distinct !DILexicalBlock(scope: !6813, file: !6335, line: 409, column: 2)
!6817 = !DILocation(line: 927, column: 1, scope: !6664)
!6818 = distinct !DISubprogram(name: "xhci_dbc_suspend", scope: !6324, file: !6324, line: 220, type: !5802, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6819 = !DILocalVariable(name: "xhci", arg: 1, scope: !6818, file: !6324, line: 220, type: !4497)
!6820 = !DILocation(line: 220, column: 53, scope: !6818)
!6821 = !DILocation(line: 222, column: 2, scope: !6818)
!6822 = distinct !DISubprogram(name: "clear_bit", scope: !6823, file: !6823, line: 39, type: !6824, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6823 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!6824 = !DISubroutineType(types: !6825)
!6825 = !{null, !398, !6826}
!6826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6827, size: 64)
!6827 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !248)
!6828 = !DILocalVariable(name: "nr", arg: 1, scope: !6829, file: !6830, line: 72, type: !398)
!6829 = distinct !DISubprogram(name: "arch_clear_bit", scope: !6830, file: !6830, line: 72, type: !6824, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6830 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!6831 = !DILocation(line: 72, column: 21, scope: !6829, inlinedAt: !6832)
!6832 = distinct !DILocation(line: 42, column: 2, scope: !6822)
!6833 = !DILocalVariable(name: "addr", arg: 2, scope: !6829, file: !6830, line: 72, type: !6826)
!6834 = !DILocation(line: 72, column: 49, scope: !6829, inlinedAt: !6832)
!6835 = !DILocalVariable(name: "v", arg: 1, scope: !6836, file: !6837, line: 84, type: !5726)
!6836 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !6837, file: !6837, line: 84, type: !6838, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6837 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!6838 = !DISubroutineType(types: !6839)
!6839 = !{null, !5726, !409}
!6840 = !DILocation(line: 84, column: 74, scope: !6836, inlinedAt: !6841)
!6841 = distinct !DILocation(line: 41, column: 2, scope: !6822)
!6842 = !DILocalVariable(name: "size", arg: 2, scope: !6836, file: !6837, line: 84, type: !409)
!6843 = !DILocation(line: 84, column: 84, scope: !6836, inlinedAt: !6841)
!6844 = !DILocalVariable(name: "nr", arg: 1, scope: !6822, file: !6823, line: 39, type: !398)
!6845 = !DILocation(line: 39, column: 35, scope: !6822)
!6846 = !DILocalVariable(name: "addr", arg: 2, scope: !6822, file: !6823, line: 39, type: !6826)
!6847 = !DILocation(line: 39, column: 63, scope: !6822)
!6848 = !DILocation(line: 41, column: 26, scope: !6822)
!6849 = !DILocation(line: 41, column: 33, scope: !6822)
!6850 = !DILocation(line: 41, column: 31, scope: !6822)
!6851 = !DILocation(line: 86, column: 20, scope: !6836, inlinedAt: !6841)
!6852 = !DILocation(line: 86, column: 23, scope: !6836, inlinedAt: !6841)
!6853 = !DILocation(line: 86, column: 2, scope: !6836, inlinedAt: !6841)
!6854 = !DILocation(line: 87, column: 2, scope: !6836, inlinedAt: !6841)
!6855 = !DILocation(line: 42, column: 17, scope: !6822)
!6856 = !DILocation(line: 42, column: 21, scope: !6822)
!6857 = !DILocation(line: 74, column: 27, scope: !6858, inlinedAt: !6832)
!6858 = distinct !DILexicalBlock(scope: !6829, file: !6830, line: 74, column: 6)
!6859 = !DILocation(line: 74, column: 6, scope: !6858, inlinedAt: !6832)
!6860 = !DILocation(line: 74, column: 6, scope: !6829, inlinedAt: !6832)
!6861 = !DILocation(line: 76, column: 6, scope: !6862, inlinedAt: !6832)
!6862 = distinct !DILexicalBlock(scope: !6858, file: !6830, line: 74, column: 32)
!6863 = !DILocation(line: 77, column: 13, scope: !6862, inlinedAt: !6832)
!6864 = !DILocation(line: 77, column: 12, scope: !6862, inlinedAt: !6832)
!6865 = !DILocation(line: 75, column: 3, scope: !6862, inlinedAt: !6832)
!6866 = !{i32 -2146571644}
!6867 = !DILocation(line: 78, column: 2, scope: !6862, inlinedAt: !6832)
!6868 = !DILocation(line: 80, column: 8, scope: !6869, inlinedAt: !6832)
!6869 = distinct !DILexicalBlock(scope: !6858, file: !6830, line: 78, column: 9)
!6870 = !DILocation(line: 80, column: 32, scope: !6869, inlinedAt: !6832)
!6871 = !DILocation(line: 79, column: 3, scope: !6869, inlinedAt: !6832)
!6872 = !{i32 -2146571512}
!6873 = !DILocation(line: 43, column: 1, scope: !6822)
!6874 = distinct !DISubprogram(name: "xhci_clear_command_ring", scope: !3, file: !3, line: 848, type: !5755, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6875 = !DILocalVariable(name: "xhci", arg: 1, scope: !6874, file: !3, line: 848, type: !4497)
!6876 = !DILocation(line: 848, column: 54, scope: !6874)
!6877 = !DILocalVariable(name: "ring", scope: !6874, file: !3, line: 850, type: !5179)
!6878 = !DILocation(line: 850, column: 20, scope: !6874)
!6879 = !DILocalVariable(name: "seg", scope: !6874, file: !3, line: 851, type: !5183)
!6880 = !DILocation(line: 851, column: 23, scope: !6874)
!6881 = !DILocation(line: 853, column: 9, scope: !6874)
!6882 = !DILocation(line: 853, column: 15, scope: !6874)
!6883 = !DILocation(line: 853, column: 7, scope: !6874)
!6884 = !DILocation(line: 854, column: 8, scope: !6874)
!6885 = !DILocation(line: 854, column: 14, scope: !6874)
!6886 = !DILocation(line: 854, column: 6, scope: !6874)
!6887 = !DILocation(line: 855, column: 2, scope: !6874)
!6888 = !DILocation(line: 856, column: 10, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 855, column: 5)
!6890 = !DILocation(line: 856, column: 15, scope: !6889)
!6891 = !DILocation(line: 856, column: 3, scope: !6889)
!6892 = !DILocation(line: 858, column: 3, scope: !6889)
!6893 = !DILocation(line: 858, column: 8, scope: !6889)
!6894 = !DILocation(line: 858, column: 35, scope: !6889)
!6895 = !DILocation(line: 858, column: 40, scope: !6889)
!6896 = !DILocation(line: 858, column: 48, scope: !6889)
!6897 = !DILocation(line: 860, column: 9, scope: !6889)
!6898 = !DILocation(line: 860, column: 14, scope: !6889)
!6899 = !DILocation(line: 860, column: 7, scope: !6889)
!6900 = !DILocation(line: 861, column: 2, scope: !6889)
!6901 = !DILocation(line: 861, column: 11, scope: !6874)
!6902 = !DILocation(line: 861, column: 18, scope: !6874)
!6903 = !DILocation(line: 861, column: 24, scope: !6874)
!6904 = !DILocation(line: 861, column: 15, scope: !6874)
!6905 = distinct !{!6905, !6887, !6906}
!6906 = !DILocation(line: 861, column: 31, scope: !6874)
!6907 = !DILocation(line: 864, column: 18, scope: !6874)
!6908 = !DILocation(line: 864, column: 24, scope: !6874)
!6909 = !DILocation(line: 864, column: 2, scope: !6874)
!6910 = !DILocation(line: 864, column: 8, scope: !6874)
!6911 = !DILocation(line: 864, column: 16, scope: !6874)
!6912 = !DILocation(line: 865, column: 18, scope: !6874)
!6913 = !DILocation(line: 865, column: 24, scope: !6874)
!6914 = !DILocation(line: 865, column: 35, scope: !6874)
!6915 = !DILocation(line: 865, column: 2, scope: !6874)
!6916 = !DILocation(line: 865, column: 8, scope: !6874)
!6917 = !DILocation(line: 865, column: 16, scope: !6874)
!6918 = !DILocation(line: 866, column: 18, scope: !6874)
!6919 = !DILocation(line: 866, column: 24, scope: !6874)
!6920 = !DILocation(line: 866, column: 2, scope: !6874)
!6921 = !DILocation(line: 866, column: 8, scope: !6874)
!6922 = !DILocation(line: 866, column: 16, scope: !6874)
!6923 = !DILocation(line: 867, column: 18, scope: !6874)
!6924 = !DILocation(line: 867, column: 24, scope: !6874)
!6925 = !DILocation(line: 867, column: 2, scope: !6874)
!6926 = !DILocation(line: 867, column: 8, scope: !6874)
!6927 = !DILocation(line: 867, column: 16, scope: !6874)
!6928 = !DILocation(line: 869, column: 24, scope: !6874)
!6929 = !DILocation(line: 869, column: 30, scope: !6874)
!6930 = !DILocation(line: 869, column: 39, scope: !6874)
!6931 = !DILocation(line: 869, column: 64, scope: !6874)
!6932 = !DILocation(line: 869, column: 2, scope: !6874)
!6933 = !DILocation(line: 869, column: 8, scope: !6874)
!6934 = !DILocation(line: 869, column: 22, scope: !6874)
!6935 = !DILocation(line: 874, column: 2, scope: !6874)
!6936 = !DILocation(line: 874, column: 8, scope: !6874)
!6937 = !DILocation(line: 874, column: 20, scope: !6874)
!6938 = !DILocation(line: 883, column: 24, scope: !6874)
!6939 = !DILocation(line: 883, column: 2, scope: !6874)
!6940 = !DILocation(line: 884, column: 1, scope: !6874)
!6941 = distinct !DISubprogram(name: "xhci_save_registers", scope: !3, file: !3, line: 796, type: !5755, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!6942 = !DILocalVariable(name: "xhci", arg: 1, scope: !6941, file: !3, line: 796, type: !4497)
!6943 = !DILocation(line: 796, column: 50, scope: !6941)
!6944 = !DILocation(line: 798, column: 28, scope: !6941)
!6945 = !DILocation(line: 798, column: 34, scope: !6941)
!6946 = !DILocation(line: 798, column: 43, scope: !6941)
!6947 = !DILocation(line: 798, column: 27, scope: !6941)
!6948 = !DILocation(line: 798, column: 21, scope: !6941)
!6949 = !DILocation(line: 798, column: 2, scope: !6941)
!6950 = !DILocation(line: 798, column: 8, scope: !6941)
!6951 = !DILocation(line: 798, column: 11, scope: !6941)
!6952 = !DILocation(line: 798, column: 19, scope: !6941)
!6953 = !DILocation(line: 799, column: 27, scope: !6941)
!6954 = !DILocation(line: 799, column: 33, scope: !6941)
!6955 = !DILocation(line: 799, column: 42, scope: !6941)
!6956 = !DILocation(line: 799, column: 26, scope: !6941)
!6957 = !DILocation(line: 799, column: 20, scope: !6941)
!6958 = !DILocation(line: 799, column: 2, scope: !6941)
!6959 = !DILocation(line: 799, column: 8, scope: !6941)
!6960 = !DILocation(line: 799, column: 11, scope: !6941)
!6961 = !DILocation(line: 799, column: 18, scope: !6941)
!6962 = !DILocation(line: 800, column: 36, scope: !6941)
!6963 = !DILocation(line: 800, column: 43, scope: !6941)
!6964 = !DILocation(line: 800, column: 49, scope: !6941)
!6965 = !DILocation(line: 800, column: 58, scope: !6941)
!6966 = !DILocation(line: 800, column: 23, scope: !6941)
!6967 = !DILocation(line: 800, column: 2, scope: !6941)
!6968 = !DILocation(line: 800, column: 8, scope: !6941)
!6969 = !DILocation(line: 800, column: 11, scope: !6941)
!6970 = !DILocation(line: 800, column: 21, scope: !6941)
!6971 = !DILocation(line: 801, column: 31, scope: !6941)
!6972 = !DILocation(line: 801, column: 37, scope: !6941)
!6973 = !DILocation(line: 801, column: 46, scope: !6941)
!6974 = !DILocation(line: 801, column: 30, scope: !6941)
!6975 = !DILocation(line: 801, column: 24, scope: !6941)
!6976 = !DILocation(line: 801, column: 2, scope: !6941)
!6977 = !DILocation(line: 801, column: 8, scope: !6941)
!6978 = !DILocation(line: 801, column: 11, scope: !6941)
!6979 = !DILocation(line: 801, column: 22, scope: !6941)
!6980 = !DILocation(line: 802, column: 30, scope: !6941)
!6981 = !DILocation(line: 802, column: 36, scope: !6941)
!6982 = !DILocation(line: 802, column: 44, scope: !6941)
!6983 = !DILocation(line: 802, column: 29, scope: !6941)
!6984 = !DILocation(line: 802, column: 23, scope: !6941)
!6985 = !DILocation(line: 802, column: 2, scope: !6941)
!6986 = !DILocation(line: 802, column: 8, scope: !6941)
!6987 = !DILocation(line: 802, column: 11, scope: !6941)
!6988 = !DILocation(line: 802, column: 21, scope: !6941)
!6989 = !DILocation(line: 803, column: 36, scope: !6941)
!6990 = !DILocation(line: 803, column: 43, scope: !6941)
!6991 = !DILocation(line: 803, column: 49, scope: !6941)
!6992 = !DILocation(line: 803, column: 57, scope: !6941)
!6993 = !DILocation(line: 803, column: 23, scope: !6941)
!6994 = !DILocation(line: 803, column: 2, scope: !6941)
!6995 = !DILocation(line: 803, column: 8, scope: !6941)
!6996 = !DILocation(line: 803, column: 11, scope: !6941)
!6997 = !DILocation(line: 803, column: 21, scope: !6941)
!6998 = !DILocation(line: 804, column: 39, scope: !6941)
!6999 = !DILocation(line: 804, column: 46, scope: !6941)
!7000 = !DILocation(line: 804, column: 52, scope: !6941)
!7001 = !DILocation(line: 804, column: 60, scope: !6941)
!7002 = !DILocation(line: 804, column: 26, scope: !6941)
!7003 = !DILocation(line: 804, column: 2, scope: !6941)
!7004 = !DILocation(line: 804, column: 8, scope: !6941)
!7005 = !DILocation(line: 804, column: 11, scope: !6941)
!7006 = !DILocation(line: 804, column: 24, scope: !6941)
!7007 = !DILocation(line: 805, column: 32, scope: !6941)
!7008 = !DILocation(line: 805, column: 38, scope: !6941)
!7009 = !DILocation(line: 805, column: 46, scope: !6941)
!7010 = !DILocation(line: 805, column: 31, scope: !6941)
!7011 = !DILocation(line: 805, column: 25, scope: !6941)
!7012 = !DILocation(line: 805, column: 2, scope: !6941)
!7013 = !DILocation(line: 805, column: 8, scope: !6941)
!7014 = !DILocation(line: 805, column: 11, scope: !6941)
!7015 = !DILocation(line: 805, column: 23, scope: !6941)
!7016 = !DILocation(line: 806, column: 32, scope: !6941)
!7017 = !DILocation(line: 806, column: 38, scope: !6941)
!7018 = !DILocation(line: 806, column: 46, scope: !6941)
!7019 = !DILocation(line: 806, column: 31, scope: !6941)
!7020 = !DILocation(line: 806, column: 25, scope: !6941)
!7021 = !DILocation(line: 806, column: 2, scope: !6941)
!7022 = !DILocation(line: 806, column: 8, scope: !6941)
!7023 = !DILocation(line: 806, column: 11, scope: !6941)
!7024 = !DILocation(line: 806, column: 23, scope: !6941)
!7025 = !DILocation(line: 807, column: 1, scope: !6941)
!7026 = distinct !DISubprogram(name: "xhci_all_ports_seen_u0", scope: !3, file: !3, line: 562, type: !5802, scopeLine: 563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7027 = !DILocalVariable(name: "xhci", arg: 1, scope: !7026, file: !3, line: 562, type: !4497)
!7028 = !DILocation(line: 562, column: 52, scope: !7026)
!7029 = !DILocation(line: 564, column: 10, scope: !7026)
!7030 = !DILocation(line: 564, column: 16, scope: !7026)
!7031 = !DILocation(line: 564, column: 41, scope: !7026)
!7032 = !DILocation(line: 564, column: 47, scope: !7026)
!7033 = !DILocation(line: 564, column: 57, scope: !7026)
!7034 = !DILocation(line: 564, column: 38, scope: !7026)
!7035 = !DILocation(line: 564, column: 68, scope: !7026)
!7036 = !DILocation(line: 564, column: 31, scope: !7026)
!7037 = !DILocation(line: 564, column: 2, scope: !7026)
!7038 = distinct !DISubprogram(name: "trace_xhci_dbg_quirks", scope: !5835, file: !5835, line: 50, type: !5836, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7039 = !DILocalVariable(name: "vaf", arg: 1, scope: !7038, file: !5835, line: 50, type: !5838)
!7040 = !DILocation(line: 50, column: 1, scope: !7038)
!7041 = distinct !DISubprogram(name: "xhci_msix_sync_irqs", scope: !3, file: !3, line: 390, type: !5755, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7042 = !DILocalVariable(name: "xhci", arg: 1, scope: !7041, file: !3, line: 390, type: !4497)
!7043 = !DILocation(line: 390, column: 65, scope: !7041)
!7044 = !DILocalVariable(name: "hcd", scope: !7041, file: !3, line: 392, type: !4501)
!7045 = !DILocation(line: 392, column: 18, scope: !7041)
!7046 = !DILocation(line: 392, column: 36, scope: !7041)
!7047 = !DILocation(line: 392, column: 24, scope: !7041)
!7048 = !DILocation(line: 394, column: 6, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 394, column: 6)
!7050 = !DILocation(line: 394, column: 11, scope: !7049)
!7051 = !DILocation(line: 394, column: 6, scope: !7041)
!7052 = !DILocalVariable(name: "pdev", scope: !7053, file: !3, line: 395, type: !209)
!7053 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 394, column: 25)
!7054 = !DILocation(line: 395, column: 19, scope: !7053)
!7055 = !DILocalVariable(name: "__mptr", scope: !7056, file: !3, line: 395, type: !208)
!7056 = distinct !DILexicalBlock(scope: !7053, file: !3, line: 395, column: 26)
!7057 = !DILocation(line: 395, column: 26, scope: !7056)
!7058 = !DILocation(line: 395, column: 26, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 395, column: 26)
!7060 = !DILocalVariable(name: "i", scope: !7053, file: !3, line: 396, type: !265)
!7061 = !DILocation(line: 396, column: 7, scope: !7053)
!7062 = !DILocation(line: 398, column: 10, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7053, file: !3, line: 398, column: 3)
!7064 = !DILocation(line: 398, column: 8, scope: !7063)
!7065 = !DILocation(line: 398, column: 15, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7063, file: !3, line: 398, column: 3)
!7067 = !DILocation(line: 398, column: 19, scope: !7066)
!7068 = !DILocation(line: 398, column: 25, scope: !7066)
!7069 = !DILocation(line: 398, column: 17, scope: !7066)
!7070 = !DILocation(line: 398, column: 3, scope: !7063)
!7071 = !DILocation(line: 399, column: 35, scope: !7066)
!7072 = !DILocation(line: 399, column: 41, scope: !7066)
!7073 = !DILocation(line: 399, column: 20, scope: !7066)
!7074 = !DILocation(line: 399, column: 4, scope: !7066)
!7075 = !DILocation(line: 398, column: 38, scope: !7066)
!7076 = !DILocation(line: 398, column: 3, scope: !7066)
!7077 = distinct !{!7077, !7070, !7078}
!7078 = !DILocation(line: 399, column: 43, scope: !7063)
!7079 = !DILocation(line: 400, column: 2, scope: !7053)
!7080 = !DILocation(line: 401, column: 1, scope: !7041)
!7081 = distinct !DISubprogram(name: "xhci_resume", scope: !3, file: !3, line: 1084, type: !6466, scopeLine: 1085, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7082 = !DILocation(line: 402, column: 57, scope: !6334, inlinedAt: !7083)
!7083 = distinct !DILocation(line: 1223, column: 2, scope: !7081)
!7084 = !DILocation(line: 402, column: 57, scope: !6334, inlinedAt: !7085)
!7085 = distinct !DILocation(line: 1164, column: 3, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 1147, column: 38)
!7087 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 1147, column: 6)
!7088 = !DILocation(line: 402, column: 57, scope: !6334, inlinedAt: !7089)
!7089 = distinct !DILocation(line: 1140, column: 4, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7091, file: !3, line: 1138, column: 39)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !3, line: 1137, column: 7)
!7092 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 1110, column: 19)
!7093 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 1110, column: 6)
!7094 = !DILocation(line: 402, column: 57, scope: !6334, inlinedAt: !7095)
!7095 = distinct !DILocation(line: 1120, column: 4, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 1117, column: 15)
!7097 = distinct !DILexicalBlock(scope: !7092, file: !3, line: 1117, column: 7)
!7098 = !DILocation(line: 377, column: 55, scope: !6341, inlinedAt: !7099)
!7099 = distinct !DILocation(line: 1106, column: 2, scope: !7081)
!7100 = !DILocalVariable(name: "xhci", arg: 1, scope: !7081, file: !3, line: 1084, type: !4497)
!7101 = !DILocation(line: 1084, column: 34, scope: !7081)
!7102 = !DILocalVariable(name: "hibernated", arg: 2, scope: !7081, file: !3, line: 1084, type: !569)
!7103 = !DILocation(line: 1084, column: 45, scope: !7081)
!7104 = !DILocalVariable(name: "command", scope: !7081, file: !3, line: 1086, type: !204)
!7105 = !DILocation(line: 1086, column: 8, scope: !7081)
!7106 = !DILocalVariable(name: "temp", scope: !7081, file: !3, line: 1086, type: !204)
!7107 = !DILocation(line: 1086, column: 17, scope: !7081)
!7108 = !DILocalVariable(name: "hcd", scope: !7081, file: !3, line: 1087, type: !4501)
!7109 = !DILocation(line: 1087, column: 19, scope: !7081)
!7110 = !DILocation(line: 1087, column: 37, scope: !7081)
!7111 = !DILocation(line: 1087, column: 25, scope: !7081)
!7112 = !DILocalVariable(name: "secondary_hcd", scope: !7081, file: !3, line: 1088, type: !4501)
!7113 = !DILocation(line: 1088, column: 19, scope: !7081)
!7114 = !DILocalVariable(name: "retval", scope: !7081, file: !3, line: 1089, type: !265)
!7115 = !DILocation(line: 1089, column: 8, scope: !7081)
!7116 = !DILocalVariable(name: "comp_timer_running", scope: !7081, file: !3, line: 1090, type: !569)
!7117 = !DILocation(line: 1090, column: 9, scope: !7081)
!7118 = !DILocation(line: 1092, column: 7, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 1092, column: 6)
!7120 = !DILocation(line: 1092, column: 12, scope: !7119)
!7121 = !DILocation(line: 1092, column: 6, scope: !7081)
!7122 = !DILocation(line: 1093, column: 3, scope: !7119)
!7123 = !DILocation(line: 1099, column: 6, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 1099, column: 6)
!7125 = !DILocation(line: 1099, column: 71, scope: !7124)
!7126 = !DILocation(line: 1100, column: 6, scope: !7124)
!7127 = !DILocation(line: 1099, column: 6, scope: !7081)
!7128 = !DILocation(line: 1101, column: 3, scope: !7124)
!7129 = !DILocation(line: 1103, column: 35, scope: !7081)
!7130 = !DILocation(line: 1103, column: 40, scope: !7081)
!7131 = !DILocation(line: 1103, column: 2, scope: !7081)
!7132 = !DILocation(line: 1104, column: 35, scope: !7081)
!7133 = !DILocation(line: 1104, column: 41, scope: !7081)
!7134 = !DILocation(line: 1104, column: 53, scope: !7081)
!7135 = !DILocation(line: 1104, column: 2, scope: !7081)
!7136 = !DILocation(line: 1106, column: 17, scope: !7081)
!7137 = !DILocation(line: 1106, column: 23, scope: !7081)
!7138 = !DILocation(line: 379, column: 2, scope: !6364, inlinedAt: !7099)
!7139 = !DILocation(line: 379, column: 2, scope: !6367, inlinedAt: !7099)
!7140 = !DILocation(line: 379, column: 2, scope: !6370, inlinedAt: !7099)
!7141 = !DILocation(line: 1107, column: 7, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 1107, column: 6)
!7143 = !DILocation(line: 1107, column: 13, scope: !7142)
!7144 = !DILocation(line: 1107, column: 20, scope: !7142)
!7145 = !DILocation(line: 1107, column: 44, scope: !7142)
!7146 = !DILocation(line: 1107, column: 47, scope: !7142)
!7147 = !DILocation(line: 1107, column: 53, scope: !7142)
!7148 = !DILocation(line: 1107, column: 6, scope: !7081)
!7149 = !DILocation(line: 1108, column: 14, scope: !7142)
!7150 = !DILocation(line: 1108, column: 3, scope: !7142)
!7151 = !DILocation(line: 1110, column: 7, scope: !7093)
!7152 = !DILocation(line: 1110, column: 6, scope: !7081)
!7153 = !DILocation(line: 1115, column: 28, scope: !7092)
!7154 = !DILocation(line: 1115, column: 34, scope: !7092)
!7155 = !DILocation(line: 1115, column: 43, scope: !7092)
!7156 = !DILocation(line: 1115, column: 27, scope: !7092)
!7157 = !DILocation(line: 1115, column: 12, scope: !7092)
!7158 = !DILocation(line: 1115, column: 10, scope: !7092)
!7159 = !DILocation(line: 1117, column: 7, scope: !7097)
!7160 = !DILocation(line: 1117, column: 7, scope: !7092)
!7161 = !DILocation(line: 1118, column: 4, scope: !7096)
!7162 = !DILocation(line: 1120, column: 21, scope: !7096)
!7163 = !DILocation(line: 1120, column: 27, scope: !7096)
!7164 = !DILocation(line: 404, column: 2, scope: !6383, inlinedAt: !7095)
!7165 = !DILocation(line: 404, column: 2, scope: !6386, inlinedAt: !7095)
!7166 = !DILocation(line: 404, column: 2, scope: !6389, inlinedAt: !7095)
!7167 = !DILocation(line: 1121, column: 11, scope: !7096)
!7168 = !DILocation(line: 1121, column: 4, scope: !7096)
!7169 = !DILocation(line: 1124, column: 26, scope: !7092)
!7170 = !DILocation(line: 1124, column: 3, scope: !7092)
!7171 = !DILocation(line: 1126, column: 25, scope: !7092)
!7172 = !DILocation(line: 1126, column: 3, scope: !7092)
!7173 = !DILocation(line: 1129, column: 20, scope: !7092)
!7174 = !DILocation(line: 1129, column: 26, scope: !7092)
!7175 = !DILocation(line: 1129, column: 35, scope: !7092)
!7176 = !DILocation(line: 1129, column: 19, scope: !7092)
!7177 = !DILocation(line: 1129, column: 13, scope: !7092)
!7178 = !DILocation(line: 1129, column: 11, scope: !7092)
!7179 = !DILocation(line: 1130, column: 11, scope: !7092)
!7180 = !DILocation(line: 1131, column: 10, scope: !7092)
!7181 = !DILocation(line: 1131, column: 20, scope: !7092)
!7182 = !DILocation(line: 1131, column: 26, scope: !7092)
!7183 = !DILocation(line: 1131, column: 35, scope: !7092)
!7184 = !DILocation(line: 1131, column: 19, scope: !7092)
!7185 = !DILocation(line: 1131, column: 3, scope: !7092)
!7186 = !DILocation(line: 1137, column: 23, scope: !7091)
!7187 = !DILocation(line: 1137, column: 29, scope: !7091)
!7188 = !DILocation(line: 1137, column: 38, scope: !7091)
!7189 = !DILocation(line: 1137, column: 22, scope: !7091)
!7190 = !DILocation(line: 1137, column: 7, scope: !7091)
!7191 = !DILocation(line: 1137, column: 7, scope: !7092)
!7192 = !DILocation(line: 1139, column: 4, scope: !7090)
!7193 = !DILocation(line: 1140, column: 21, scope: !7090)
!7194 = !DILocation(line: 1140, column: 27, scope: !7090)
!7195 = !DILocation(line: 404, column: 2, scope: !6383, inlinedAt: !7089)
!7196 = !DILocation(line: 404, column: 2, scope: !6386, inlinedAt: !7089)
!7197 = !DILocation(line: 404, column: 2, scope: !6389, inlinedAt: !7089)
!7198 = !DILocation(line: 1141, column: 4, scope: !7090)
!7199 = !DILocation(line: 1143, column: 17, scope: !7092)
!7200 = !DILocation(line: 1143, column: 23, scope: !7092)
!7201 = !DILocation(line: 1143, column: 32, scope: !7092)
!7202 = !DILocation(line: 1143, column: 16, scope: !7092)
!7203 = !DILocation(line: 1143, column: 10, scope: !7092)
!7204 = !DILocation(line: 1143, column: 8, scope: !7092)
!7205 = !DILocation(line: 1144, column: 2, scope: !7092)
!7206 = !DILocation(line: 1147, column: 7, scope: !7087)
!7207 = !DILocation(line: 1147, column: 12, scope: !7087)
!7208 = !DILocation(line: 1147, column: 23, scope: !7087)
!7209 = !DILocation(line: 1147, column: 26, scope: !7087)
!7210 = !DILocation(line: 1147, column: 6, scope: !7081)
!7211 = !DILocation(line: 1149, column: 8, scope: !7212)
!7212 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 1149, column: 7)
!7213 = !DILocation(line: 1149, column: 14, scope: !7212)
!7214 = !DILocation(line: 1149, column: 21, scope: !7212)
!7215 = !DILocation(line: 1149, column: 45, scope: !7212)
!7216 = !DILocation(line: 1150, column: 30, scope: !7212)
!7217 = !DILocation(line: 1150, column: 7, scope: !7212)
!7218 = !DILocation(line: 1149, column: 7, scope: !7086)
!7219 = !DILocation(line: 1151, column: 4, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7212, file: !3, line: 1150, column: 38)
!7221 = !DILocation(line: 1152, column: 19, scope: !7220)
!7222 = !DILocation(line: 1152, column: 4, scope: !7220)
!7223 = !DILocation(line: 1154, column: 3, scope: !7220)
!7224 = !DILocation(line: 1157, column: 27, scope: !7086)
!7225 = !DILocation(line: 1157, column: 33, scope: !7086)
!7226 = !DILocation(line: 1157, column: 43, scope: !7086)
!7227 = !DILocation(line: 1157, column: 48, scope: !7086)
!7228 = !DILocation(line: 1157, column: 3, scope: !7086)
!7229 = !DILocation(line: 1158, column: 27, scope: !7086)
!7230 = !DILocation(line: 1158, column: 33, scope: !7086)
!7231 = !DILocation(line: 1158, column: 45, scope: !7086)
!7232 = !DILocation(line: 1158, column: 50, scope: !7086)
!7233 = !DILocation(line: 1158, column: 3, scope: !7086)
!7234 = !DILocation(line: 1161, column: 13, scope: !7086)
!7235 = !DILocation(line: 1161, column: 3, scope: !7086)
!7236 = !DILocation(line: 1162, column: 22, scope: !7086)
!7237 = !DILocation(line: 1162, column: 3, scope: !7086)
!7238 = !DILocation(line: 1163, column: 23, scope: !7086)
!7239 = !DILocation(line: 1163, column: 12, scope: !7086)
!7240 = !DILocation(line: 1163, column: 10, scope: !7086)
!7241 = !DILocation(line: 1164, column: 20, scope: !7086)
!7242 = !DILocation(line: 1164, column: 26, scope: !7086)
!7243 = !DILocation(line: 404, column: 2, scope: !6383, inlinedAt: !7085)
!7244 = !DILocation(line: 404, column: 2, scope: !6386, inlinedAt: !7085)
!7245 = !DILocation(line: 404, column: 2, scope: !6389, inlinedAt: !7085)
!7246 = !DILocation(line: 1165, column: 7, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 1165, column: 7)
!7248 = !DILocation(line: 1165, column: 7, scope: !7086)
!7249 = !DILocation(line: 1166, column: 11, scope: !7247)
!7250 = !DILocation(line: 1166, column: 4, scope: !7247)
!7251 = !DILocation(line: 1167, column: 21, scope: !7086)
!7252 = !DILocation(line: 1167, column: 3, scope: !7086)
!7253 = !DILocation(line: 1170, column: 17, scope: !7086)
!7254 = !DILocation(line: 1170, column: 23, scope: !7086)
!7255 = !DILocation(line: 1170, column: 32, scope: !7086)
!7256 = !DILocation(line: 1170, column: 16, scope: !7086)
!7257 = !DILocation(line: 1170, column: 10, scope: !7086)
!7258 = !DILocation(line: 1170, column: 8, scope: !7086)
!7259 = !DILocation(line: 1171, column: 11, scope: !7086)
!7260 = !DILocation(line: 1171, column: 16, scope: !7086)
!7261 = !DILocation(line: 1171, column: 27, scope: !7086)
!7262 = !DILocation(line: 1171, column: 40, scope: !7086)
!7263 = !DILocation(line: 1171, column: 46, scope: !7086)
!7264 = !DILocation(line: 1171, column: 55, scope: !7086)
!7265 = !DILocation(line: 1171, column: 39, scope: !7086)
!7266 = !DILocation(line: 1171, column: 3, scope: !7086)
!7267 = !DILocation(line: 1172, column: 17, scope: !7086)
!7268 = !DILocation(line: 1172, column: 23, scope: !7086)
!7269 = !DILocation(line: 1172, column: 31, scope: !7086)
!7270 = !DILocation(line: 1172, column: 16, scope: !7086)
!7271 = !DILocation(line: 1172, column: 10, scope: !7086)
!7272 = !DILocation(line: 1172, column: 8, scope: !7086)
!7273 = !DILocation(line: 1173, column: 10, scope: !7086)
!7274 = !DILocation(line: 1173, column: 33, scope: !7086)
!7275 = !DILocation(line: 1173, column: 39, scope: !7086)
!7276 = !DILocation(line: 1173, column: 47, scope: !7086)
!7277 = !DILocation(line: 1173, column: 32, scope: !7086)
!7278 = !DILocation(line: 1173, column: 3, scope: !7086)
!7279 = !DILocation(line: 1176, column: 20, scope: !7086)
!7280 = !DILocation(line: 1176, column: 3, scope: !7086)
!7281 = !DILocation(line: 1177, column: 21, scope: !7086)
!7282 = !DILocation(line: 1177, column: 3, scope: !7086)
!7283 = !DILocation(line: 1185, column: 31, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 1185, column: 7)
!7285 = !DILocation(line: 1185, column: 8, scope: !7284)
!7286 = !DILocation(line: 1185, column: 7, scope: !7086)
!7287 = !DILocation(line: 1186, column: 20, scope: !7284)
!7288 = !DILocation(line: 1186, column: 18, scope: !7284)
!7289 = !DILocation(line: 1186, column: 4, scope: !7284)
!7290 = !DILocation(line: 1188, column: 20, scope: !7284)
!7291 = !DILocation(line: 1188, column: 26, scope: !7284)
!7292 = !DILocation(line: 1188, column: 18, scope: !7284)
!7293 = !DILocation(line: 1191, column: 22, scope: !7086)
!7294 = !DILocation(line: 1191, column: 27, scope: !7086)
!7295 = !DILocation(line: 1191, column: 12, scope: !7086)
!7296 = !DILocation(line: 1191, column: 10, scope: !7086)
!7297 = !DILocation(line: 1192, column: 7, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 1192, column: 7)
!7299 = !DILocation(line: 1192, column: 7, scope: !7086)
!7300 = !DILocation(line: 1193, column: 11, scope: !7298)
!7301 = !DILocation(line: 1193, column: 4, scope: !7298)
!7302 = !DILocation(line: 1194, column: 22, scope: !7086)
!7303 = !DILocation(line: 1197, column: 21, scope: !7086)
!7304 = !DILocation(line: 1197, column: 26, scope: !7086)
!7305 = !DILocation(line: 1197, column: 12, scope: !7086)
!7306 = !DILocation(line: 1197, column: 10, scope: !7086)
!7307 = !DILocation(line: 1198, column: 8, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 1198, column: 7)
!7309 = !DILocation(line: 1198, column: 7, scope: !7086)
!7310 = !DILocation(line: 1200, column: 22, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 1198, column: 16)
!7312 = !DILocation(line: 1200, column: 13, scope: !7311)
!7313 = !DILocation(line: 1200, column: 11, scope: !7311)
!7314 = !DILocation(line: 1201, column: 3, scope: !7311)
!7315 = !DILocation(line: 1202, column: 3, scope: !7086)
!7316 = !DILocation(line: 1202, column: 8, scope: !7086)
!7317 = !DILocation(line: 1202, column: 14, scope: !7086)
!7318 = !DILocation(line: 1203, column: 3, scope: !7086)
!7319 = !DILocation(line: 1203, column: 9, scope: !7086)
!7320 = !DILocation(line: 1203, column: 21, scope: !7086)
!7321 = !DILocation(line: 1203, column: 27, scope: !7086)
!7322 = !DILocation(line: 1204, column: 3, scope: !7086)
!7323 = !DILocation(line: 1208, column: 19, scope: !7081)
!7324 = !DILocation(line: 1208, column: 25, scope: !7081)
!7325 = !DILocation(line: 1208, column: 34, scope: !7081)
!7326 = !DILocation(line: 1208, column: 18, scope: !7081)
!7327 = !DILocation(line: 1208, column: 12, scope: !7081)
!7328 = !DILocation(line: 1208, column: 10, scope: !7081)
!7329 = !DILocation(line: 1209, column: 10, scope: !7081)
!7330 = !DILocation(line: 1210, column: 9, scope: !7081)
!7331 = !DILocation(line: 1210, column: 19, scope: !7081)
!7332 = !DILocation(line: 1210, column: 25, scope: !7081)
!7333 = !DILocation(line: 1210, column: 34, scope: !7081)
!7334 = !DILocation(line: 1210, column: 18, scope: !7081)
!7335 = !DILocation(line: 1210, column: 2, scope: !7081)
!7336 = !DILocation(line: 1211, column: 18, scope: !7081)
!7337 = !DILocation(line: 1211, column: 24, scope: !7081)
!7338 = !DILocation(line: 1211, column: 33, scope: !7081)
!7339 = !DILocation(line: 1211, column: 17, scope: !7081)
!7340 = !DILocation(line: 1211, column: 2, scope: !7081)
!7341 = !DILocation(line: 1223, column: 19, scope: !7081)
!7342 = !DILocation(line: 1223, column: 25, scope: !7081)
!7343 = !DILocation(line: 404, column: 2, scope: !6383, inlinedAt: !7083)
!7344 = !DILocation(line: 404, column: 2, scope: !6386, inlinedAt: !7083)
!7345 = !DILocation(line: 404, column: 2, scope: !6389, inlinedAt: !7083)
!7346 = !DILocation(line: 1225, column: 18, scope: !7081)
!7347 = !DILocation(line: 1225, column: 2, scope: !7081)
!7348 = !DILabel(scope: !7081, name: "done", file: !3, line: 1227)
!7349 = !DILocation(line: 1227, column: 2, scope: !7081)
!7350 = !DILocation(line: 1228, column: 6, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 1228, column: 6)
!7352 = !DILocation(line: 1228, column: 13, scope: !7351)
!7353 = !DILocation(line: 1228, column: 6, scope: !7081)
!7354 = !DILocation(line: 1230, column: 30, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 1230, column: 7)
!7356 = distinct !DILexicalBlock(scope: !7351, file: !3, line: 1228, column: 19)
!7357 = !DILocation(line: 1230, column: 7, scope: !7355)
!7358 = !DILocation(line: 1230, column: 7, scope: !7356)
!7359 = !DILocation(line: 1231, column: 28, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 1230, column: 37)
!7361 = !DILocation(line: 1231, column: 34, scope: !7360)
!7362 = !DILocation(line: 1231, column: 4, scope: !7360)
!7363 = !DILocation(line: 1232, column: 28, scope: !7360)
!7364 = !DILocation(line: 1232, column: 4, scope: !7360)
!7365 = !DILocation(line: 1233, column: 3, scope: !7360)
!7366 = !DILocation(line: 1234, column: 2, scope: !7356)
!7367 = !DILocation(line: 1242, column: 7, scope: !7368)
!7368 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 1242, column: 6)
!7369 = !DILocation(line: 1242, column: 13, scope: !7368)
!7370 = !DILocation(line: 1242, column: 20, scope: !7368)
!7371 = !DILocation(line: 1242, column: 44, scope: !7368)
!7372 = !DILocation(line: 1242, column: 48, scope: !7368)
!7373 = !DILocation(line: 1242, column: 6, scope: !7081)
!7374 = !DILocation(line: 1243, column: 39, scope: !7368)
!7375 = !DILocation(line: 1243, column: 3, scope: !7368)
!7376 = !DILocation(line: 1245, column: 6, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 1245, column: 6)
!7378 = !DILocation(line: 1245, column: 12, scope: !7377)
!7379 = !DILocation(line: 1245, column: 19, scope: !7377)
!7380 = !DILocation(line: 1245, column: 6, scope: !7081)
!7381 = !DILocalVariable(name: "__mptr", scope: !7382, file: !3, line: 1246, type: !208)
!7382 = distinct !DILexicalBlock(scope: !7377, file: !3, line: 1246, column: 33)
!7383 = !DILocation(line: 1246, column: 33, scope: !7382)
!7384 = !DILocation(line: 1246, column: 33, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7382, file: !3, line: 1246, column: 33)
!7386 = !DILocation(line: 1246, column: 3, scope: !7377)
!7387 = !DILocation(line: 1250, column: 29, scope: !7081)
!7388 = !DILocation(line: 1250, column: 35, scope: !7081)
!7389 = !DILocation(line: 1250, column: 47, scope: !7081)
!7390 = !DILocation(line: 1250, column: 2, scope: !7081)
!7391 = !DILocation(line: 1251, column: 25, scope: !7081)
!7392 = !DILocation(line: 1251, column: 31, scope: !7081)
!7393 = !DILocation(line: 1251, column: 2, scope: !7081)
!7394 = !DILocation(line: 1252, column: 29, scope: !7081)
!7395 = !DILocation(line: 1252, column: 34, scope: !7081)
!7396 = !DILocation(line: 1252, column: 2, scope: !7081)
!7397 = !DILocation(line: 1253, column: 25, scope: !7081)
!7398 = !DILocation(line: 1253, column: 2, scope: !7081)
!7399 = !DILocation(line: 1255, column: 9, scope: !7081)
!7400 = !DILocation(line: 1255, column: 2, scope: !7081)
!7401 = !DILocation(line: 1256, column: 1, scope: !7081)
!7402 = distinct !DISubprogram(name: "set_bit", scope: !6823, file: !6823, line: 26, type: !6824, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7403 = !DILocalVariable(name: "nr", arg: 1, scope: !7404, file: !6830, line: 52, type: !398)
!7404 = distinct !DISubprogram(name: "arch_set_bit", scope: !6830, file: !6830, line: 52, type: !6824, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7405 = !DILocation(line: 52, column: 19, scope: !7404, inlinedAt: !7406)
!7406 = distinct !DILocation(line: 29, column: 2, scope: !7402)
!7407 = !DILocalVariable(name: "addr", arg: 2, scope: !7404, file: !6830, line: 52, type: !6826)
!7408 = !DILocation(line: 52, column: 47, scope: !7404, inlinedAt: !7406)
!7409 = !DILocation(line: 84, column: 74, scope: !6836, inlinedAt: !7410)
!7410 = distinct !DILocation(line: 28, column: 2, scope: !7402)
!7411 = !DILocation(line: 84, column: 84, scope: !6836, inlinedAt: !7410)
!7412 = !DILocalVariable(name: "nr", arg: 1, scope: !7402, file: !6823, line: 26, type: !398)
!7413 = !DILocation(line: 26, column: 33, scope: !7402)
!7414 = !DILocalVariable(name: "addr", arg: 2, scope: !7402, file: !6823, line: 26, type: !6826)
!7415 = !DILocation(line: 26, column: 61, scope: !7402)
!7416 = !DILocation(line: 28, column: 26, scope: !7402)
!7417 = !DILocation(line: 28, column: 33, scope: !7402)
!7418 = !DILocation(line: 28, column: 31, scope: !7402)
!7419 = !DILocation(line: 86, column: 20, scope: !6836, inlinedAt: !7410)
!7420 = !DILocation(line: 86, column: 23, scope: !6836, inlinedAt: !7410)
!7421 = !DILocation(line: 86, column: 2, scope: !6836, inlinedAt: !7410)
!7422 = !DILocation(line: 87, column: 2, scope: !6836, inlinedAt: !7410)
!7423 = !DILocation(line: 29, column: 15, scope: !7402)
!7424 = !DILocation(line: 29, column: 19, scope: !7402)
!7425 = !DILocation(line: 54, column: 27, scope: !7426, inlinedAt: !7406)
!7426 = distinct !DILexicalBlock(scope: !7404, file: !6830, line: 54, column: 6)
!7427 = !DILocation(line: 54, column: 6, scope: !7426, inlinedAt: !7406)
!7428 = !DILocation(line: 54, column: 6, scope: !7404, inlinedAt: !7406)
!7429 = !DILocation(line: 56, column: 6, scope: !7430, inlinedAt: !7406)
!7430 = distinct !DILexicalBlock(scope: !7426, file: !6830, line: 54, column: 32)
!7431 = !DILocation(line: 57, column: 12, scope: !7430, inlinedAt: !7406)
!7432 = !DILocation(line: 55, column: 3, scope: !7430, inlinedAt: !7406)
!7433 = !{i32 -2146572598}
!7434 = !DILocation(line: 59, column: 2, scope: !7430, inlinedAt: !7406)
!7435 = !DILocation(line: 61, column: 8, scope: !7436, inlinedAt: !7406)
!7436 = distinct !DILexicalBlock(scope: !7426, file: !6830, line: 59, column: 9)
!7437 = !DILocation(line: 61, column: 32, scope: !7436, inlinedAt: !7406)
!7438 = !DILocation(line: 60, column: 3, scope: !7436, inlinedAt: !7406)
!7439 = !{i32 -2146572466}
!7440 = !DILocation(line: 30, column: 1, scope: !7402)
!7441 = distinct !DISubprogram(name: "xhci_restore_registers", scope: !3, file: !3, line: 809, type: !5755, scopeLine: 810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7442 = !DILocalVariable(name: "xhci", arg: 1, scope: !7441, file: !3, line: 809, type: !4497)
!7443 = !DILocation(line: 809, column: 53, scope: !7441)
!7444 = !DILocation(line: 811, column: 9, scope: !7441)
!7445 = !DILocation(line: 811, column: 15, scope: !7441)
!7446 = !DILocation(line: 811, column: 18, scope: !7441)
!7447 = !DILocation(line: 811, column: 28, scope: !7441)
!7448 = !DILocation(line: 811, column: 34, scope: !7441)
!7449 = !DILocation(line: 811, column: 43, scope: !7441)
!7450 = !DILocation(line: 811, column: 27, scope: !7441)
!7451 = !DILocation(line: 811, column: 2, scope: !7441)
!7452 = !DILocation(line: 812, column: 9, scope: !7441)
!7453 = !DILocation(line: 812, column: 15, scope: !7441)
!7454 = !DILocation(line: 812, column: 18, scope: !7441)
!7455 = !DILocation(line: 812, column: 27, scope: !7441)
!7456 = !DILocation(line: 812, column: 33, scope: !7441)
!7457 = !DILocation(line: 812, column: 42, scope: !7441)
!7458 = !DILocation(line: 812, column: 26, scope: !7441)
!7459 = !DILocation(line: 812, column: 2, scope: !7441)
!7460 = !DILocation(line: 813, column: 16, scope: !7441)
!7461 = !DILocation(line: 813, column: 22, scope: !7441)
!7462 = !DILocation(line: 813, column: 28, scope: !7441)
!7463 = !DILocation(line: 813, column: 31, scope: !7441)
!7464 = !DILocation(line: 813, column: 43, scope: !7441)
!7465 = !DILocation(line: 813, column: 49, scope: !7441)
!7466 = !DILocation(line: 813, column: 58, scope: !7441)
!7467 = !DILocation(line: 813, column: 2, scope: !7441)
!7468 = !DILocation(line: 814, column: 9, scope: !7441)
!7469 = !DILocation(line: 814, column: 15, scope: !7441)
!7470 = !DILocation(line: 814, column: 18, scope: !7441)
!7471 = !DILocation(line: 814, column: 31, scope: !7441)
!7472 = !DILocation(line: 814, column: 37, scope: !7441)
!7473 = !DILocation(line: 814, column: 46, scope: !7441)
!7474 = !DILocation(line: 814, column: 30, scope: !7441)
!7475 = !DILocation(line: 814, column: 2, scope: !7441)
!7476 = !DILocation(line: 815, column: 9, scope: !7441)
!7477 = !DILocation(line: 815, column: 15, scope: !7441)
!7478 = !DILocation(line: 815, column: 18, scope: !7441)
!7479 = !DILocation(line: 815, column: 30, scope: !7441)
!7480 = !DILocation(line: 815, column: 36, scope: !7441)
!7481 = !DILocation(line: 815, column: 44, scope: !7441)
!7482 = !DILocation(line: 815, column: 29, scope: !7441)
!7483 = !DILocation(line: 815, column: 2, scope: !7441)
!7484 = !DILocation(line: 816, column: 16, scope: !7441)
!7485 = !DILocation(line: 816, column: 22, scope: !7441)
!7486 = !DILocation(line: 816, column: 28, scope: !7441)
!7487 = !DILocation(line: 816, column: 31, scope: !7441)
!7488 = !DILocation(line: 816, column: 43, scope: !7441)
!7489 = !DILocation(line: 816, column: 49, scope: !7441)
!7490 = !DILocation(line: 816, column: 57, scope: !7441)
!7491 = !DILocation(line: 816, column: 2, scope: !7441)
!7492 = !DILocation(line: 817, column: 16, scope: !7441)
!7493 = !DILocation(line: 817, column: 22, scope: !7441)
!7494 = !DILocation(line: 817, column: 28, scope: !7441)
!7495 = !DILocation(line: 817, column: 31, scope: !7441)
!7496 = !DILocation(line: 817, column: 46, scope: !7441)
!7497 = !DILocation(line: 817, column: 52, scope: !7441)
!7498 = !DILocation(line: 817, column: 60, scope: !7441)
!7499 = !DILocation(line: 817, column: 2, scope: !7441)
!7500 = !DILocation(line: 818, column: 9, scope: !7441)
!7501 = !DILocation(line: 818, column: 15, scope: !7441)
!7502 = !DILocation(line: 818, column: 18, scope: !7441)
!7503 = !DILocation(line: 818, column: 32, scope: !7441)
!7504 = !DILocation(line: 818, column: 38, scope: !7441)
!7505 = !DILocation(line: 818, column: 46, scope: !7441)
!7506 = !DILocation(line: 818, column: 31, scope: !7441)
!7507 = !DILocation(line: 818, column: 2, scope: !7441)
!7508 = !DILocation(line: 819, column: 9, scope: !7441)
!7509 = !DILocation(line: 819, column: 15, scope: !7441)
!7510 = !DILocation(line: 819, column: 18, scope: !7441)
!7511 = !DILocation(line: 819, column: 32, scope: !7441)
!7512 = !DILocation(line: 819, column: 38, scope: !7441)
!7513 = !DILocation(line: 819, column: 46, scope: !7441)
!7514 = !DILocation(line: 819, column: 31, scope: !7441)
!7515 = !DILocation(line: 819, column: 2, scope: !7441)
!7516 = !DILocation(line: 820, column: 1, scope: !7441)
!7517 = distinct !DISubprogram(name: "xhci_set_cmd_ring_deq", scope: !3, file: !3, line: 822, type: !5755, scopeLine: 823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7518 = !DILocalVariable(name: "xhci", arg: 1, scope: !7517, file: !3, line: 822, type: !4497)
!7519 = !DILocation(line: 822, column: 52, scope: !7517)
!7520 = !DILocalVariable(name: "val_64", scope: !7517, file: !3, line: 824, type: !239)
!7521 = !DILocation(line: 824, column: 6, scope: !7517)
!7522 = !DILocation(line: 827, column: 24, scope: !7517)
!7523 = !DILocation(line: 827, column: 31, scope: !7517)
!7524 = !DILocation(line: 827, column: 37, scope: !7517)
!7525 = !DILocation(line: 827, column: 46, scope: !7517)
!7526 = !DILocation(line: 827, column: 11, scope: !7517)
!7527 = !DILocation(line: 827, column: 9, scope: !7517)
!7528 = !DILocation(line: 828, column: 12, scope: !7517)
!7529 = !DILocation(line: 828, column: 19, scope: !7517)
!7530 = !DILocation(line: 829, column: 25, scope: !7517)
!7531 = !DILocation(line: 829, column: 31, scope: !7517)
!7532 = !DILocation(line: 829, column: 41, scope: !7517)
!7533 = !DILocation(line: 830, column: 11, scope: !7517)
!7534 = !DILocation(line: 830, column: 17, scope: !7517)
!7535 = !DILocation(line: 830, column: 27, scope: !7517)
!7536 = !DILocation(line: 829, column: 4, scope: !7517)
!7537 = !DILocation(line: 830, column: 36, scope: !7517)
!7538 = !DILocation(line: 828, column: 47, scope: !7517)
!7539 = !DILocation(line: 832, column: 3, scope: !7517)
!7540 = !DILocation(line: 832, column: 9, scope: !7517)
!7541 = !DILocation(line: 832, column: 19, scope: !7517)
!7542 = !DILocation(line: 831, column: 31, scope: !7517)
!7543 = !DILocation(line: 828, column: 9, scope: !7517)
!7544 = !DILocation(line: 833, column: 17, scope: !7517)
!7545 = !DILocation(line: 835, column: 25, scope: !7517)
!7546 = !DILocation(line: 833, column: 2, scope: !7517)
!7547 = !DILocation(line: 836, column: 16, scope: !7517)
!7548 = !DILocation(line: 836, column: 22, scope: !7517)
!7549 = !DILocation(line: 836, column: 31, scope: !7517)
!7550 = !DILocation(line: 836, column: 37, scope: !7517)
!7551 = !DILocation(line: 836, column: 46, scope: !7517)
!7552 = !DILocation(line: 836, column: 2, scope: !7517)
!7553 = !DILocation(line: 837, column: 1, scope: !7517)
!7554 = distinct !DISubprogram(name: "xhci_zero_64b_regs", scope: !3, file: !3, line: 226, type: !5755, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7555 = !DILocalVariable(name: "xhci", arg: 1, scope: !7554, file: !3, line: 226, type: !4497)
!7556 = !DILocation(line: 226, column: 49, scope: !7554)
!7557 = !DILocalVariable(name: "dev", scope: !7554, file: !3, line: 228, type: !305)
!7558 = !DILocation(line: 228, column: 17, scope: !7554)
!7559 = !DILocation(line: 228, column: 35, scope: !7554)
!7560 = !DILocation(line: 228, column: 23, scope: !7554)
!7561 = !DILocation(line: 228, column: 42, scope: !7554)
!7562 = !DILocation(line: 228, column: 47, scope: !7554)
!7563 = !DILocalVariable(name: "err", scope: !7554, file: !3, line: 229, type: !265)
!7564 = !DILocation(line: 229, column: 6, scope: !7554)
!7565 = !DILocalVariable(name: "i", scope: !7554, file: !3, line: 229, type: !265)
!7566 = !DILocation(line: 229, column: 11, scope: !7554)
!7567 = !DILocalVariable(name: "val", scope: !7554, file: !3, line: 230, type: !239)
!7568 = !DILocation(line: 230, column: 6, scope: !7554)
!7569 = !DILocation(line: 246, column: 8, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 246, column: 6)
!7571 = !DILocation(line: 246, column: 14, scope: !7570)
!7572 = !DILocation(line: 246, column: 21, scope: !7570)
!7573 = !DILocation(line: 246, column: 43, scope: !7570)
!7574 = !DILocation(line: 246, column: 67, scope: !7570)
!7575 = !DILocation(line: 246, column: 47, scope: !7570)
!7576 = !DILocation(line: 246, column: 6, scope: !7554)
!7577 = !DILocation(line: 247, column: 3, scope: !7570)
!7578 = !DILocation(line: 249, column: 2, scope: !7554)
!7579 = !DILocation(line: 252, column: 15, scope: !7554)
!7580 = !DILocation(line: 252, column: 21, scope: !7554)
!7581 = !DILocation(line: 252, column: 30, scope: !7554)
!7582 = !DILocation(line: 252, column: 14, scope: !7554)
!7583 = !DILocation(line: 252, column: 8, scope: !7554)
!7584 = !DILocation(line: 252, column: 6, scope: !7554)
!7585 = !DILocation(line: 253, column: 6, scope: !7554)
!7586 = !DILocation(line: 254, column: 9, scope: !7554)
!7587 = !DILocation(line: 254, column: 15, scope: !7554)
!7588 = !DILocation(line: 254, column: 21, scope: !7554)
!7589 = !DILocation(line: 254, column: 30, scope: !7554)
!7590 = !DILocation(line: 254, column: 14, scope: !7554)
!7591 = !DILocation(line: 254, column: 2, scope: !7554)
!7592 = !DILocation(line: 257, column: 15, scope: !7554)
!7593 = !DILocation(line: 257, column: 21, scope: !7554)
!7594 = !DILocation(line: 257, column: 30, scope: !7554)
!7595 = !DILocation(line: 257, column: 14, scope: !7554)
!7596 = !DILocation(line: 257, column: 8, scope: !7554)
!7597 = !DILocation(line: 257, column: 6, scope: !7554)
!7598 = !DILocation(line: 258, column: 6, scope: !7554)
!7599 = !DILocation(line: 259, column: 9, scope: !7554)
!7600 = !DILocation(line: 259, column: 15, scope: !7554)
!7601 = !DILocation(line: 259, column: 21, scope: !7554)
!7602 = !DILocation(line: 259, column: 30, scope: !7554)
!7603 = !DILocation(line: 259, column: 14, scope: !7554)
!7604 = !DILocation(line: 259, column: 2, scope: !7554)
!7605 = !DILocation(line: 262, column: 21, scope: !7554)
!7606 = !DILocation(line: 262, column: 28, scope: !7554)
!7607 = !DILocation(line: 262, column: 34, scope: !7554)
!7608 = !DILocation(line: 262, column: 43, scope: !7554)
!7609 = !DILocation(line: 262, column: 8, scope: !7554)
!7610 = !DILocation(line: 262, column: 6, scope: !7554)
!7611 = !DILocation(line: 263, column: 6, scope: !7612)
!7612 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 263, column: 6)
!7613 = !DILocation(line: 263, column: 6, scope: !7554)
!7614 = !DILocation(line: 264, column: 17, scope: !7612)
!7615 = !DILocation(line: 264, column: 27, scope: !7612)
!7616 = !DILocation(line: 264, column: 33, scope: !7612)
!7617 = !DILocation(line: 264, column: 42, scope: !7612)
!7618 = !DILocation(line: 264, column: 3, scope: !7612)
!7619 = !DILocation(line: 265, column: 21, scope: !7554)
!7620 = !DILocation(line: 265, column: 28, scope: !7554)
!7621 = !DILocation(line: 265, column: 34, scope: !7554)
!7622 = !DILocation(line: 265, column: 43, scope: !7554)
!7623 = !DILocation(line: 265, column: 8, scope: !7554)
!7624 = !DILocation(line: 265, column: 6, scope: !7554)
!7625 = !DILocation(line: 266, column: 6, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 266, column: 6)
!7627 = !DILocation(line: 266, column: 6, scope: !7554)
!7628 = !DILocation(line: 267, column: 17, scope: !7626)
!7629 = !DILocation(line: 267, column: 27, scope: !7626)
!7630 = !DILocation(line: 267, column: 33, scope: !7626)
!7631 = !DILocation(line: 267, column: 42, scope: !7626)
!7632 = !DILocation(line: 267, column: 3, scope: !7626)
!7633 = !DILocation(line: 269, column: 9, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 269, column: 2)
!7635 = !DILocation(line: 269, column: 7, scope: !7634)
!7636 = !DILocation(line: 269, column: 14, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7634, file: !3, line: 269, column: 2)
!7638 = !DILocation(line: 269, column: 18, scope: !7637)
!7639 = !DILocation(line: 269, column: 16, scope: !7637)
!7640 = !DILocation(line: 269, column: 2, scope: !7634)
!7641 = !DILocalVariable(name: "ir", scope: !7642, file: !3, line: 270, type: !5146)
!7642 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 269, column: 57)
!7643 = !DILocation(line: 270, column: 33, scope: !7642)
!7644 = !DILocation(line: 272, column: 9, scope: !7642)
!7645 = !DILocation(line: 272, column: 15, scope: !7642)
!7646 = !DILocation(line: 272, column: 25, scope: !7642)
!7647 = !DILocation(line: 272, column: 32, scope: !7642)
!7648 = !DILocation(line: 272, column: 6, scope: !7642)
!7649 = !DILocation(line: 273, column: 22, scope: !7642)
!7650 = !DILocation(line: 273, column: 29, scope: !7642)
!7651 = !DILocation(line: 273, column: 33, scope: !7642)
!7652 = !DILocation(line: 273, column: 9, scope: !7642)
!7653 = !DILocation(line: 273, column: 7, scope: !7642)
!7654 = !DILocation(line: 274, column: 7, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7642, file: !3, line: 274, column: 7)
!7656 = !DILocation(line: 274, column: 7, scope: !7642)
!7657 = !DILocation(line: 275, column: 18, scope: !7655)
!7658 = !DILocation(line: 275, column: 28, scope: !7655)
!7659 = !DILocation(line: 275, column: 32, scope: !7655)
!7660 = !DILocation(line: 275, column: 4, scope: !7655)
!7661 = !DILocation(line: 276, column: 21, scope: !7642)
!7662 = !DILocation(line: 276, column: 28, scope: !7642)
!7663 = !DILocation(line: 276, column: 32, scope: !7642)
!7664 = !DILocation(line: 276, column: 8, scope: !7642)
!7665 = !DILocation(line: 276, column: 6, scope: !7642)
!7666 = !DILocation(line: 277, column: 7, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7642, file: !3, line: 277, column: 7)
!7668 = !DILocation(line: 277, column: 7, scope: !7642)
!7669 = !DILocation(line: 278, column: 18, scope: !7667)
!7670 = !DILocation(line: 278, column: 28, scope: !7667)
!7671 = !DILocation(line: 278, column: 32, scope: !7667)
!7672 = !DILocation(line: 278, column: 4, scope: !7667)
!7673 = !DILocation(line: 279, column: 2, scope: !7642)
!7674 = !DILocation(line: 269, column: 53, scope: !7637)
!7675 = !DILocation(line: 269, column: 2, scope: !7637)
!7676 = distinct !{!7676, !7640, !7677}
!7677 = !DILocation(line: 279, column: 2, scope: !7634)
!7678 = !DILocation(line: 282, column: 24, scope: !7554)
!7679 = !DILocation(line: 282, column: 30, scope: !7554)
!7680 = !DILocation(line: 282, column: 39, scope: !7554)
!7681 = !DILocation(line: 282, column: 23, scope: !7554)
!7682 = !DILocation(line: 282, column: 8, scope: !7554)
!7683 = !DILocation(line: 282, column: 6, scope: !7554)
!7684 = !DILocation(line: 285, column: 7, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 285, column: 6)
!7686 = !DILocation(line: 285, column: 6, scope: !7554)
!7687 = !DILocation(line: 286, column: 3, scope: !7685)
!7688 = !DILocation(line: 287, column: 1, scope: !7554)
!7689 = distinct !DISubprogram(name: "xhci_debugfs_exit", scope: !5655, file: !5655, line: 124, type: !5755, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7690 = !DILocalVariable(name: "xhci", arg: 1, scope: !7689, file: !5655, line: 124, type: !4497)
!7691 = !DILocation(line: 124, column: 55, scope: !7689)
!7692 = !DILocation(line: 124, column: 63, scope: !7689)
!7693 = distinct !DISubprogram(name: "xhci_init", scope: !3, file: !3, line: 575, type: !4904, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7694 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !7695)
!7695 = distinct !DILocation(line: 581, column: 2, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7693, file: !3, line: 581, column: 2)
!7697 = !DILocalVariable(name: "hcd", arg: 1, scope: !7693, file: !3, line: 575, type: !4501)
!7698 = !DILocation(line: 575, column: 38, scope: !7693)
!7699 = !DILocalVariable(name: "xhci", scope: !7693, file: !3, line: 577, type: !4497)
!7700 = !DILocation(line: 577, column: 19, scope: !7693)
!7701 = !DILocation(line: 577, column: 38, scope: !7693)
!7702 = !DILocation(line: 577, column: 26, scope: !7693)
!7703 = !DILocalVariable(name: "retval", scope: !7693, file: !3, line: 578, type: !265)
!7704 = !DILocation(line: 578, column: 6, scope: !7693)
!7705 = !DILocation(line: 580, column: 17, scope: !7693)
!7706 = !DILocation(line: 580, column: 2, scope: !7693)
!7707 = !DILocation(line: 581, column: 2, scope: !7693)
!7708 = !DILocation(line: 581, column: 2, scope: !7696)
!7709 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !7695)
!7710 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !7695)
!7711 = !DILocation(line: 582, column: 6, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7693, file: !3, line: 582, column: 6)
!7713 = !DILocation(line: 582, column: 12, scope: !7712)
!7714 = !DILocation(line: 582, column: 24, scope: !7712)
!7715 = !DILocation(line: 582, column: 32, scope: !7712)
!7716 = !DILocation(line: 582, column: 35, scope: !7712)
!7717 = !DILocation(line: 582, column: 6, scope: !7693)
!7718 = !DILocation(line: 583, column: 18, scope: !7719)
!7719 = distinct !DILexicalBlock(scope: !7712, file: !3, line: 582, column: 47)
!7720 = !DILocation(line: 583, column: 3, scope: !7719)
!7721 = !DILocation(line: 585, column: 3, scope: !7719)
!7722 = !DILocation(line: 585, column: 9, scope: !7719)
!7723 = !DILocation(line: 585, column: 16, scope: !7719)
!7724 = !DILocation(line: 586, column: 2, scope: !7719)
!7725 = !DILocation(line: 587, column: 18, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7712, file: !3, line: 586, column: 9)
!7727 = !DILocation(line: 587, column: 3, scope: !7726)
!7728 = !DILocation(line: 590, column: 25, scope: !7693)
!7729 = !DILocation(line: 590, column: 11, scope: !7693)
!7730 = !DILocation(line: 590, column: 9, scope: !7693)
!7731 = !DILocation(line: 591, column: 17, scope: !7693)
!7732 = !DILocation(line: 591, column: 2, scope: !7693)
!7733 = !DILocation(line: 594, column: 6, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7693, file: !3, line: 594, column: 6)
!7735 = !DILocation(line: 594, column: 6, scope: !7693)
!7736 = !DILocation(line: 595, column: 3, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 594, column: 57)
!7738 = !DILocation(line: 595, column: 9, scope: !7737)
!7739 = !DILocation(line: 595, column: 16, scope: !7737)
!7740 = !DILocation(line: 596, column: 39, scope: !7737)
!7741 = !DILocation(line: 596, column: 3, scope: !7737)
!7742 = !DILocation(line: 597, column: 2, scope: !7737)
!7743 = !DILocation(line: 599, column: 9, scope: !7693)
!7744 = !DILocation(line: 599, column: 2, scope: !7693)
!7745 = distinct !DISubprogram(name: "xhci_dbc_resume", scope: !6324, file: !6324, line: 225, type: !5802, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7746 = !DILocalVariable(name: "xhci", arg: 1, scope: !7745, file: !6324, line: 225, type: !4497)
!7747 = !DILocation(line: 225, column: 52, scope: !7745)
!7748 = !DILocation(line: 227, column: 2, scope: !7745)
!7749 = distinct !DISubprogram(name: "xhci_pending_portevent", scope: !3, file: !3, line: 929, type: !7750, scopeLine: 930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7750 = !DISubroutineType(types: !7751)
!7751 = !{!569, !4497}
!7752 = !DILocalVariable(name: "xhci", arg: 1, scope: !7749, file: !3, line: 929, type: !4497)
!7753 = !DILocation(line: 929, column: 53, scope: !7749)
!7754 = !DILocalVariable(name: "ports", scope: !7749, file: !3, line: 931, type: !5412)
!7755 = !DILocation(line: 931, column: 21, scope: !7749)
!7756 = !DILocalVariable(name: "port_index", scope: !7749, file: !3, line: 932, type: !265)
!7757 = !DILocation(line: 932, column: 8, scope: !7749)
!7758 = !DILocalVariable(name: "status", scope: !7749, file: !3, line: 933, type: !204)
!7759 = !DILocation(line: 933, column: 8, scope: !7749)
!7760 = !DILocalVariable(name: "portsc", scope: !7749, file: !3, line: 934, type: !204)
!7761 = !DILocation(line: 934, column: 8, scope: !7749)
!7762 = !DILocation(line: 936, column: 18, scope: !7749)
!7763 = !DILocation(line: 936, column: 24, scope: !7749)
!7764 = !DILocation(line: 936, column: 33, scope: !7749)
!7765 = !DILocation(line: 936, column: 17, scope: !7749)
!7766 = !DILocation(line: 936, column: 11, scope: !7749)
!7767 = !DILocation(line: 936, column: 9, scope: !7749)
!7768 = !DILocation(line: 937, column: 6, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 937, column: 6)
!7770 = !DILocation(line: 937, column: 13, scope: !7769)
!7771 = !DILocation(line: 937, column: 6, scope: !7749)
!7772 = !DILocation(line: 938, column: 3, scope: !7769)
!7773 = !DILocation(line: 945, column: 15, scope: !7749)
!7774 = !DILocation(line: 945, column: 21, scope: !7749)
!7775 = !DILocation(line: 945, column: 31, scope: !7749)
!7776 = !DILocation(line: 945, column: 13, scope: !7749)
!7777 = !DILocation(line: 946, column: 10, scope: !7749)
!7778 = !DILocation(line: 946, column: 16, scope: !7749)
!7779 = !DILocation(line: 946, column: 26, scope: !7749)
!7780 = !DILocation(line: 946, column: 8, scope: !7749)
!7781 = !DILocation(line: 947, column: 2, scope: !7749)
!7782 = !DILocation(line: 947, column: 19, scope: !7749)
!7783 = !DILocation(line: 948, column: 18, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 947, column: 23)
!7785 = !DILocation(line: 948, column: 24, scope: !7784)
!7786 = !DILocation(line: 948, column: 37, scope: !7784)
!7787 = !DILocation(line: 948, column: 12, scope: !7784)
!7788 = !DILocation(line: 948, column: 10, scope: !7784)
!7789 = !DILocation(line: 949, column: 7, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7784, file: !3, line: 949, column: 7)
!7791 = !DILocation(line: 949, column: 14, scope: !7790)
!7792 = !DILocation(line: 949, column: 33, scope: !7790)
!7793 = !DILocation(line: 950, column: 8, scope: !7790)
!7794 = !DILocation(line: 950, column: 15, scope: !7790)
!7795 = !DILocation(line: 950, column: 32, scope: !7790)
!7796 = !DILocation(line: 949, column: 7, scope: !7784)
!7797 = !DILocation(line: 951, column: 4, scope: !7790)
!7798 = distinct !{!7798, !7781, !7799}
!7799 = !DILocation(line: 952, column: 2, scope: !7749)
!7800 = !DILocation(line: 953, column: 15, scope: !7749)
!7801 = !DILocation(line: 953, column: 21, scope: !7749)
!7802 = !DILocation(line: 953, column: 31, scope: !7749)
!7803 = !DILocation(line: 953, column: 13, scope: !7749)
!7804 = !DILocation(line: 954, column: 10, scope: !7749)
!7805 = !DILocation(line: 954, column: 16, scope: !7749)
!7806 = !DILocation(line: 954, column: 26, scope: !7749)
!7807 = !DILocation(line: 954, column: 8, scope: !7749)
!7808 = !DILocation(line: 955, column: 2, scope: !7749)
!7809 = !DILocation(line: 955, column: 19, scope: !7749)
!7810 = !DILocation(line: 956, column: 18, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 955, column: 23)
!7812 = !DILocation(line: 956, column: 24, scope: !7811)
!7813 = !DILocation(line: 956, column: 37, scope: !7811)
!7814 = !DILocation(line: 956, column: 12, scope: !7811)
!7815 = !DILocation(line: 956, column: 10, scope: !7811)
!7816 = !DILocation(line: 957, column: 7, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 957, column: 7)
!7818 = !DILocation(line: 957, column: 14, scope: !7817)
!7819 = !DILocation(line: 957, column: 33, scope: !7817)
!7820 = !DILocation(line: 958, column: 8, scope: !7817)
!7821 = !DILocation(line: 958, column: 15, scope: !7817)
!7822 = !DILocation(line: 958, column: 32, scope: !7817)
!7823 = !DILocation(line: 957, column: 7, scope: !7811)
!7824 = !DILocation(line: 959, column: 4, scope: !7817)
!7825 = distinct !{!7825, !7808, !7826}
!7826 = !DILocation(line: 960, column: 2, scope: !7749)
!7827 = !DILocation(line: 961, column: 2, scope: !7749)
!7828 = !DILocation(line: 962, column: 1, scope: !7749)
!7829 = distinct !DISubprogram(name: "compliance_mode_recovery_timer_init", scope: !3, file: !3, line: 522, type: !5755, scopeLine: 523, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7830 = !DILocalVariable(name: "m", arg: 1, scope: !7831, file: !7832, line: 363, type: !3542)
!7831 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !7832, file: !7832, line: 363, type: !7833, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7832 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!7833 = !DISubroutineType(types: !7834)
!7834 = !{!248, !3542}
!7835 = !DILocation(line: 363, column: 74, scope: !7831, inlinedAt: !7836)
!7836 = distinct !DILocation(line: 528, column: 4, scope: !7829)
!7837 = !DILocalVariable(name: "xhci", arg: 1, scope: !7829, file: !3, line: 522, type: !4497)
!7838 = !DILocation(line: 522, column: 66, scope: !7829)
!7839 = !DILocation(line: 524, column: 2, scope: !7829)
!7840 = !DILocation(line: 524, column: 8, scope: !7829)
!7841 = !DILocation(line: 524, column: 23, scope: !7829)
!7842 = !DILocation(line: 525, column: 2, scope: !7829)
!7843 = !DILocation(line: 527, column: 43, scope: !7829)
!7844 = !DILocation(line: 365, column: 27, scope: !7845, inlinedAt: !7836)
!7845 = distinct !DILexicalBlock(scope: !7831, file: !7832, line: 365, column: 6)
!7846 = !DILocation(line: 365, column: 6, scope: !7845, inlinedAt: !7836)
!7847 = !DILocation(line: 365, column: 6, scope: !7831, inlinedAt: !7836)
!7848 = !DILocation(line: 366, column: 12, scope: !7849, inlinedAt: !7836)
!7849 = distinct !DILexicalBlock(scope: !7850, file: !7832, line: 366, column: 7)
!7850 = distinct !DILexicalBlock(scope: !7845, file: !7832, line: 365, column: 31)
!7851 = !DILocation(line: 366, column: 14, scope: !7849, inlinedAt: !7836)
!7852 = !DILocation(line: 366, column: 7, scope: !7850, inlinedAt: !7836)
!7853 = !DILocation(line: 367, column: 4, scope: !7849, inlinedAt: !7836)
!7854 = !DILocation(line: 368, column: 28, scope: !7850, inlinedAt: !7836)
!7855 = !DILocation(line: 368, column: 10, scope: !7850, inlinedAt: !7836)
!7856 = !DILocation(line: 368, column: 3, scope: !7850, inlinedAt: !7836)
!7857 = !DILocation(line: 370, column: 29, scope: !7858, inlinedAt: !7836)
!7858 = distinct !DILexicalBlock(scope: !7845, file: !7832, line: 369, column: 9)
!7859 = !DILocation(line: 370, column: 10, scope: !7858, inlinedAt: !7836)
!7860 = !DILocation(line: 370, column: 3, scope: !7858, inlinedAt: !7836)
!7861 = !DILocation(line: 372, column: 1, scope: !7831, inlinedAt: !7836)
!7862 = !DILocation(line: 527, column: 51, scope: !7829)
!7863 = !DILocation(line: 527, column: 2, scope: !7829)
!7864 = !DILocation(line: 527, column: 8, scope: !7829)
!7865 = !DILocation(line: 527, column: 33, scope: !7829)
!7866 = !DILocation(line: 527, column: 41, scope: !7829)
!7867 = !DILocation(line: 530, column: 13, scope: !7829)
!7868 = !DILocation(line: 530, column: 19, scope: !7829)
!7869 = !DILocation(line: 530, column: 2, scope: !7829)
!7870 = !DILocation(line: 531, column: 17, scope: !7829)
!7871 = !DILocation(line: 531, column: 2, scope: !7829)
!7872 = !DILocation(line: 533, column: 1, scope: !7829)
!7873 = distinct !DISubprogram(name: "xhci_get_endpoint_index", scope: !3, file: !3, line: 1287, type: !7874, scopeLine: 1288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7874 = !DISubroutineType(types: !7875)
!7875 = !{!7, !7876}
!7876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4557, size: 64)
!7877 = !DILocalVariable(name: "desc", arg: 1, scope: !7873, file: !3, line: 1287, type: !7876)
!7878 = !DILocation(line: 1287, column: 70, scope: !7873)
!7879 = !DILocalVariable(name: "index", scope: !7873, file: !3, line: 1289, type: !7)
!7880 = !DILocation(line: 1289, column: 15, scope: !7873)
!7881 = !DILocation(line: 1290, column: 32, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7873, file: !3, line: 1290, column: 6)
!7883 = !DILocation(line: 1290, column: 6, scope: !7882)
!7884 = !DILocation(line: 1290, column: 6, scope: !7873)
!7885 = !DILocation(line: 1291, column: 44, scope: !7882)
!7886 = !DILocation(line: 1291, column: 27, scope: !7882)
!7887 = !DILocation(line: 1291, column: 49, scope: !7882)
!7888 = !DILocation(line: 1291, column: 9, scope: !7882)
!7889 = !DILocation(line: 1291, column: 3, scope: !7882)
!7890 = !DILocation(line: 1293, column: 44, scope: !7882)
!7891 = !DILocation(line: 1293, column: 27, scope: !7882)
!7892 = !DILocation(line: 1293, column: 49, scope: !7882)
!7893 = !DILocation(line: 1294, column: 25, scope: !7882)
!7894 = !DILocation(line: 1294, column: 5, scope: !7882)
!7895 = !DILocation(line: 1293, column: 53, scope: !7882)
!7896 = !DILocation(line: 1294, column: 40, scope: !7882)
!7897 = !DILocation(line: 1293, column: 9, scope: !7882)
!7898 = !DILocation(line: 1295, column: 9, scope: !7873)
!7899 = !DILocation(line: 1295, column: 2, scope: !7873)
!7900 = distinct !DISubprogram(name: "usb_endpoint_xfer_control", scope: !94, file: !94, line: 528, type: !7901, scopeLine: 530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7901 = !DISubroutineType(types: !7902)
!7902 = !{!265, !7903}
!7903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7904, size: 64)
!7904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4557)
!7905 = !DILocalVariable(name: "epd", arg: 1, scope: !7900, file: !94, line: 529, type: !7903)
!7906 = !DILocation(line: 529, column: 43, scope: !7900)
!7907 = !DILocation(line: 531, column: 11, scope: !7900)
!7908 = !DILocation(line: 531, column: 16, scope: !7900)
!7909 = !DILocation(line: 531, column: 29, scope: !7900)
!7910 = !DILocation(line: 531, column: 59, scope: !7900)
!7911 = !DILocation(line: 531, column: 2, scope: !7900)
!7912 = distinct !DISubprogram(name: "usb_endpoint_num", scope: !94, file: !94, line: 469, type: !7901, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7913 = !DILocalVariable(name: "epd", arg: 1, scope: !7912, file: !94, line: 469, type: !7903)
!7914 = !DILocation(line: 469, column: 74, scope: !7912)
!7915 = !DILocation(line: 471, column: 9, scope: !7912)
!7916 = !DILocation(line: 471, column: 14, scope: !7912)
!7917 = !DILocation(line: 471, column: 31, scope: !7912)
!7918 = !DILocation(line: 471, column: 2, scope: !7912)
!7919 = distinct !DISubprogram(name: "usb_endpoint_dir_in", scope: !94, file: !94, line: 492, type: !7901, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7920 = !DILocalVariable(name: "epd", arg: 1, scope: !7919, file: !94, line: 492, type: !7903)
!7921 = !DILocation(line: 492, column: 77, scope: !7919)
!7922 = !DILocation(line: 494, column: 11, scope: !7919)
!7923 = !DILocation(line: 494, column: 16, scope: !7919)
!7924 = !DILocation(line: 494, column: 33, scope: !7919)
!7925 = !DILocation(line: 494, column: 58, scope: !7919)
!7926 = !DILocation(line: 494, column: 2, scope: !7919)
!7927 = distinct !DISubprogram(name: "xhci_get_endpoint_address", scope: !3, file: !3, line: 1301, type: !7928, scopeLine: 1302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7928 = !DISubroutineType(types: !7929)
!7929 = !{!7, !7}
!7930 = !DILocalVariable(name: "ep_index", arg: 1, scope: !7927, file: !3, line: 1301, type: !7)
!7931 = !DILocation(line: 1301, column: 53, scope: !7927)
!7932 = !DILocalVariable(name: "number", scope: !7927, file: !3, line: 1303, type: !7)
!7933 = !DILocation(line: 1303, column: 15, scope: !7927)
!7934 = !DILocation(line: 1303, column: 24, scope: !7927)
!7935 = !DILocalVariable(name: "direction", scope: !7927, file: !3, line: 1304, type: !7)
!7936 = !DILocation(line: 1304, column: 15, scope: !7927)
!7937 = !DILocation(line: 1304, column: 27, scope: !7927)
!7938 = !DILocation(line: 1304, column: 36, scope: !7927)
!7939 = !DILocation(line: 1305, column: 9, scope: !7927)
!7940 = !DILocation(line: 1305, column: 21, scope: !7927)
!7941 = !DILocation(line: 1305, column: 19, scope: !7927)
!7942 = !DILocation(line: 1305, column: 2, scope: !7927)
!7943 = distinct !DISubprogram(name: "xhci_last_valid_endpoint", scope: !3, file: !3, line: 1332, type: !7944, scopeLine: 1333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7944 = !DISubroutineType(types: !7945)
!7945 = !{!7, !204}
!7946 = !DILocalVariable(name: "x", arg: 1, scope: !7947, file: !6830, line: 324, type: !7)
!7947 = distinct !DISubprogram(name: "fls", scope: !6830, file: !6830, line: 324, type: !7948, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7948 = !DISubroutineType(types: !7949)
!7949 = !{!265, !7}
!7950 = !DILocation(line: 324, column: 45, scope: !7947, inlinedAt: !7951)
!7951 = distinct !DILocation(line: 1334, column: 9, scope: !7943)
!7952 = !DILocalVariable(name: "r", scope: !7947, file: !6830, line: 326, type: !265)
!7953 = !DILocation(line: 326, column: 6, scope: !7947, inlinedAt: !7951)
!7954 = !DILocalVariable(name: "added_ctxs", arg: 1, scope: !7943, file: !3, line: 1332, type: !204)
!7955 = !DILocation(line: 1332, column: 43, scope: !7943)
!7956 = !DILocation(line: 1334, column: 13, scope: !7943)
!7957 = !DILocation(line: 340, column: 14, scope: !7947, inlinedAt: !7951)
!7958 = !DILocation(line: 338, column: 2, scope: !7947, inlinedAt: !7951)
!7959 = !{i32 909286}
!7960 = !DILocation(line: 351, column: 9, scope: !7947, inlinedAt: !7951)
!7961 = !DILocation(line: 351, column: 11, scope: !7947, inlinedAt: !7951)
!7962 = !DILocation(line: 1334, column: 25, scope: !7943)
!7963 = !DILocation(line: 1334, column: 2, scope: !7943)
!7964 = distinct !DISubprogram(name: "xhci_update_tt_active_eps", scope: !3, file: !3, line: 2631, type: !7965, scopeLine: 2634, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!7965 = !DISubroutineType(types: !7966)
!7966 = !{null, !4497, !5290, !265}
!7967 = !DILocalVariable(name: "xhci", arg: 1, scope: !7964, file: !3, line: 2631, type: !4497)
!7968 = !DILocation(line: 2631, column: 49, scope: !7964)
!7969 = !DILocalVariable(name: "virt_dev", arg: 2, scope: !7964, file: !3, line: 2632, type: !5290)
!7970 = !DILocation(line: 2632, column: 28, scope: !7964)
!7971 = !DILocalVariable(name: "old_active_eps", arg: 3, scope: !7964, file: !3, line: 2633, type: !265)
!7972 = !DILocation(line: 2633, column: 7, scope: !7964)
!7973 = !DILocalVariable(name: "rh_bw_info", scope: !7964, file: !3, line: 2635, type: !5372)
!7974 = !DILocation(line: 2635, column: 33, scope: !7964)
!7975 = !DILocation(line: 2636, column: 7, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 2636, column: 6)
!7977 = !DILocation(line: 2636, column: 17, scope: !7976)
!7978 = !DILocation(line: 2636, column: 6, scope: !7964)
!7979 = !DILocation(line: 2637, column: 3, scope: !7976)
!7980 = !DILocation(line: 2639, column: 16, scope: !7964)
!7981 = !DILocation(line: 2639, column: 22, scope: !7964)
!7982 = !DILocation(line: 2639, column: 28, scope: !7964)
!7983 = !DILocation(line: 2639, column: 38, scope: !7964)
!7984 = !DILocation(line: 2639, column: 48, scope: !7964)
!7985 = !DILocation(line: 2639, column: 13, scope: !7964)
!7986 = !DILocation(line: 2640, column: 6, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 2640, column: 6)
!7988 = !DILocation(line: 2640, column: 21, scope: !7987)
!7989 = !DILocation(line: 2640, column: 26, scope: !7987)
!7990 = !DILocation(line: 2641, column: 5, scope: !7987)
!7991 = !DILocation(line: 2641, column: 15, scope: !7987)
!7992 = !DILocation(line: 2641, column: 24, scope: !7987)
!7993 = !DILocation(line: 2641, column: 35, scope: !7987)
!7994 = !DILocation(line: 2640, column: 6, scope: !7964)
!7995 = !DILocation(line: 2642, column: 3, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7987, file: !3, line: 2641, column: 41)
!7997 = !DILocation(line: 2642, column: 15, scope: !7996)
!7998 = !DILocation(line: 2642, column: 30, scope: !7996)
!7999 = !DILocation(line: 2643, column: 3, scope: !7996)
!8000 = !DILocation(line: 2643, column: 15, scope: !7996)
!8001 = !DILocation(line: 2643, column: 24, scope: !7996)
!8002 = !DILocation(line: 2643, column: 32, scope: !7996)
!8003 = !DILocation(line: 2644, column: 2, scope: !7996)
!8004 = !DILocation(line: 2644, column: 13, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7987, file: !3, line: 2644, column: 13)
!8006 = !DILocation(line: 2644, column: 28, scope: !8005)
!8007 = !DILocation(line: 2644, column: 33, scope: !8005)
!8008 = !DILocation(line: 2645, column: 5, scope: !8005)
!8009 = !DILocation(line: 2645, column: 15, scope: !8005)
!8010 = !DILocation(line: 2645, column: 24, scope: !8005)
!8011 = !DILocation(line: 2645, column: 35, scope: !8005)
!8012 = !DILocation(line: 2644, column: 13, scope: !7987)
!8013 = !DILocation(line: 2646, column: 3, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8005, file: !3, line: 2645, column: 41)
!8015 = !DILocation(line: 2646, column: 15, scope: !8014)
!8016 = !DILocation(line: 2646, column: 30, scope: !8014)
!8017 = !DILocation(line: 2647, column: 3, scope: !8014)
!8018 = !DILocation(line: 2647, column: 15, scope: !8014)
!8019 = !DILocation(line: 2647, column: 24, scope: !8014)
!8020 = !DILocation(line: 2647, column: 32, scope: !8014)
!8021 = !DILocation(line: 2648, column: 2, scope: !8014)
!8022 = !DILocation(line: 2649, column: 1, scope: !7964)
!8023 = distinct !DISubprogram(name: "xhci_cleanup_stalled_ring", scope: !3, file: !3, line: 3037, type: !8024, scopeLine: 3040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!8024 = !DISubroutineType(types: !8025)
!8025 = !{null, !4497, !7, !7, !7, !8026}
!8026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8027, size: 64)
!8027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_td", file: !145, line: 1534, size: 640, elements: !8028)
!8028 = !{!8029, !8030, !8031, !8032, !8033, !8034, !8035, !8036}
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "td_list", scope: !8027, file: !145, line: 1535, baseType: !214, size: 128)
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "cancelled_td_list", scope: !8027, file: !145, line: 1536, baseType: !214, size: 128, offset: 128)
!8031 = !DIDerivedType(tag: DW_TAG_member, name: "urb", scope: !8027, file: !145, line: 1537, baseType: !4825, size: 64, offset: 256)
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "start_seg", scope: !8027, file: !145, line: 1538, baseType: !5183, size: 64, offset: 320)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "first_trb", scope: !8027, file: !145, line: 1539, baseType: !5187, size: 64, offset: 384)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "last_trb", scope: !8027, file: !145, line: 1540, baseType: !5187, size: 64, offset: 448)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_seg", scope: !8027, file: !145, line: 1541, baseType: !5183, size: 64, offset: 512)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "urb_length_set", scope: !8027, file: !145, line: 1543, baseType: !569, size: 8, offset: 576)
!8037 = !DILocalVariable(name: "xhci", arg: 1, scope: !8023, file: !3, line: 3037, type: !4497)
!8038 = !DILocation(line: 3037, column: 49, scope: !8023)
!8039 = !DILocalVariable(name: "slot_id", arg: 2, scope: !8023, file: !3, line: 3037, type: !7)
!8040 = !DILocation(line: 3037, column: 68, scope: !8023)
!8041 = !DILocalVariable(name: "ep_index", arg: 3, scope: !8023, file: !3, line: 3038, type: !7)
!8042 = !DILocation(line: 3038, column: 24, scope: !8023)
!8043 = !DILocalVariable(name: "stream_id", arg: 4, scope: !8023, file: !3, line: 3038, type: !7)
!8044 = !DILocation(line: 3038, column: 47, scope: !8023)
!8045 = !DILocalVariable(name: "td", arg: 5, scope: !8023, file: !3, line: 3039, type: !8026)
!8046 = !DILocation(line: 3039, column: 27, scope: !8023)
!8047 = !DILocalVariable(name: "deq_state", scope: !8023, file: !3, line: 3041, type: !8048)
!8048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_dequeue_state", file: !145, line: 1555, size: 192, elements: !8049)
!8049 = !{!8050, !8051, !8052, !8053}
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "new_deq_seg", scope: !8048, file: !145, line: 1556, baseType: !5183, size: 64)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "new_deq_ptr", scope: !8048, file: !145, line: 1557, baseType: !5187, size: 64, offset: 64)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "new_cycle_state", scope: !8048, file: !145, line: 1558, baseType: !265, size: 32, offset: 128)
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !8048, file: !145, line: 1559, baseType: !7, size: 32, offset: 160)
!8054 = !DILocation(line: 3041, column: 28, scope: !8023)
!8055 = !DILocation(line: 3043, column: 17, scope: !8023)
!8056 = !DILocation(line: 3043, column: 2, scope: !8023)
!8057 = !DILocation(line: 3048, column: 30, scope: !8023)
!8058 = !DILocation(line: 3048, column: 36, scope: !8023)
!8059 = !DILocation(line: 3048, column: 45, scope: !8023)
!8060 = !DILocation(line: 3048, column: 55, scope: !8023)
!8061 = !DILocation(line: 3048, column: 66, scope: !8023)
!8062 = !DILocation(line: 3048, column: 2, scope: !8023)
!8063 = !DILocation(line: 3051, column: 17, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8023, file: !3, line: 3051, column: 6)
!8065 = !DILocation(line: 3051, column: 7, scope: !8064)
!8066 = !DILocation(line: 3051, column: 29, scope: !8064)
!8067 = !DILocation(line: 3051, column: 43, scope: !8064)
!8068 = !DILocation(line: 3051, column: 33, scope: !8064)
!8069 = !DILocation(line: 3051, column: 6, scope: !8023)
!8070 = !DILocation(line: 3052, column: 3, scope: !8064)
!8071 = !DILocation(line: 3057, column: 8, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8023, file: !3, line: 3057, column: 6)
!8073 = !DILocation(line: 3057, column: 14, scope: !8072)
!8074 = !DILocation(line: 3057, column: 21, scope: !8072)
!8075 = !DILocation(line: 3057, column: 6, scope: !8023)
!8076 = !DILocation(line: 3058, column: 18, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 3057, column: 45)
!8078 = !DILocation(line: 3058, column: 3, scope: !8077)
!8079 = !DILocation(line: 3060, column: 32, scope: !8077)
!8080 = !DILocation(line: 3060, column: 38, scope: !8077)
!8081 = !DILocation(line: 3061, column: 5, scope: !8077)
!8082 = !DILocation(line: 3060, column: 3, scope: !8077)
!8083 = !DILocation(line: 3062, column: 2, scope: !8077)
!8084 = !DILocation(line: 3068, column: 18, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 3062, column: 9)
!8086 = !DILocation(line: 3068, column: 3, scope: !8085)
!8087 = !DILocation(line: 3071, column: 34, scope: !8085)
!8088 = !DILocation(line: 3071, column: 40, scope: !8085)
!8089 = !DILocation(line: 3072, column: 5, scope: !8085)
!8090 = !DILocation(line: 3071, column: 3, scope: !8085)
!8091 = !DILocation(line: 3074, column: 1, scope: !8023)
!8092 = distinct !DISubprogram(name: "trace_xhci_dbg_reset_ep", scope: !5835, file: !5835, line: 55, type: !5836, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!8093 = !DILocalVariable(name: "vaf", arg: 1, scope: !8092, file: !5835, line: 55, type: !5838)
!8094 = !DILocation(line: 55, column: 1, scope: !8092)
!8095 = distinct !DISubprogram(name: "xhci_setup_input_ctx_for_quirk", scope: !3, file: !3, line: 2998, type: !8096, scopeLine: 3001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!8096 = !DISubroutineType(types: !8097)
!8097 = !{null, !4497, !7, !7, !8098}
!8098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8048, size: 64)
!8099 = !DILocalVariable(name: "xhci", arg: 1, scope: !8095, file: !3, line: 2998, type: !4497)
!8100 = !DILocation(line: 2998, column: 61, scope: !8095)
!8101 = !DILocalVariable(name: "slot_id", arg: 2, scope: !8095, file: !3, line: 2999, type: !7)
!8102 = !DILocation(line: 2999, column: 16, scope: !8095)
!8103 = !DILocalVariable(name: "ep_index", arg: 3, scope: !8095, file: !3, line: 2999, type: !7)
!8104 = !DILocation(line: 2999, column: 38, scope: !8095)
!8105 = !DILocalVariable(name: "deq_state", arg: 4, scope: !8095, file: !3, line: 3000, type: !8098)
!8106 = !DILocation(line: 3000, column: 30, scope: !8095)
!8107 = !DILocalVariable(name: "ctrl_ctx", scope: !8095, file: !3, line: 3002, type: !8108)
!8108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8109, size: 64)
!8109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_input_control_ctx", file: !145, line: 786, size: 256, elements: !8110)
!8110 = !{!8111, !8112, !8113}
!8111 = !DIDerivedType(tag: DW_TAG_member, name: "drop_flags", scope: !8109, file: !145, line: 787, baseType: !4583, size: 32)
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "add_flags", scope: !8109, file: !145, line: 788, baseType: !4583, size: 32, offset: 32)
!8113 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !8109, file: !145, line: 789, baseType: !8114, size: 192, offset: 64)
!8114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4583, size: 192, elements: !1742)
!8115 = !DILocation(line: 3002, column: 33, scope: !8095)
!8116 = !DILocalVariable(name: "in_ctx", scope: !8095, file: !3, line: 3003, type: !5251)
!8117 = !DILocation(line: 3003, column: 29, scope: !8095)
!8118 = !DILocalVariable(name: "ep_ctx", scope: !8095, file: !3, line: 3004, type: !8119)
!8119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8120, size: 64)
!8120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_ep_ctx", file: !145, line: 700, size: 256, elements: !8121)
!8121 = !{!8122, !8123, !8124, !8125, !8126}
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "ep_info", scope: !8120, file: !145, line: 701, baseType: !4583, size: 32)
!8123 = !DIDerivedType(tag: DW_TAG_member, name: "ep_info2", scope: !8120, file: !145, line: 702, baseType: !4583, size: 32, offset: 32)
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "deq", scope: !8120, file: !145, line: 703, baseType: !5101, size: 64, offset: 64)
!8125 = !DIDerivedType(tag: DW_TAG_member, name: "tx_info", scope: !8120, file: !145, line: 704, baseType: !4583, size: 32, offset: 128)
!8126 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8120, file: !145, line: 706, baseType: !8127, size: 96, offset: 160)
!8127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4583, size: 96, elements: !364)
!8128 = !DILocation(line: 3004, column: 22, scope: !8095)
!8129 = !DILocalVariable(name: "added_ctxs", scope: !8095, file: !3, line: 3005, type: !204)
!8130 = !DILocation(line: 3005, column: 6, scope: !8095)
!8131 = !DILocalVariable(name: "addr", scope: !8095, file: !3, line: 3006, type: !1045)
!8132 = !DILocation(line: 3006, column: 13, scope: !8095)
!8133 = !DILocation(line: 3008, column: 11, scope: !8095)
!8134 = !DILocation(line: 3008, column: 17, scope: !8095)
!8135 = !DILocation(line: 3008, column: 22, scope: !8095)
!8136 = !DILocation(line: 3008, column: 32, scope: !8095)
!8137 = !DILocation(line: 3008, column: 9, scope: !8095)
!8138 = !DILocation(line: 3009, column: 40, scope: !8095)
!8139 = !DILocation(line: 3009, column: 13, scope: !8095)
!8140 = !DILocation(line: 3009, column: 11, scope: !8095)
!8141 = !DILocation(line: 3010, column: 7, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 3010, column: 6)
!8143 = !DILocation(line: 3010, column: 6, scope: !8095)
!8144 = !DILocation(line: 3011, column: 3, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8142, file: !3, line: 3010, column: 17)
!8146 = !DILocation(line: 3013, column: 3, scope: !8145)
!8147 = !DILocation(line: 3016, column: 21, scope: !8095)
!8148 = !DILocation(line: 3016, column: 27, scope: !8095)
!8149 = !DILocation(line: 3016, column: 33, scope: !8095)
!8150 = !DILocation(line: 3016, column: 38, scope: !8095)
!8151 = !DILocation(line: 3016, column: 48, scope: !8095)
!8152 = !DILocation(line: 3017, column: 4, scope: !8095)
!8153 = !DILocation(line: 3017, column: 10, scope: !8095)
!8154 = !DILocation(line: 3017, column: 15, scope: !8095)
!8155 = !DILocation(line: 3017, column: 25, scope: !8095)
!8156 = !DILocation(line: 3017, column: 34, scope: !8095)
!8157 = !DILocation(line: 3016, column: 2, scope: !8095)
!8158 = !DILocation(line: 3018, column: 27, scope: !8095)
!8159 = !DILocation(line: 3018, column: 33, scope: !8095)
!8160 = !DILocation(line: 3018, column: 41, scope: !8095)
!8161 = !DILocation(line: 3018, column: 11, scope: !8095)
!8162 = !DILocation(line: 3018, column: 9, scope: !8095)
!8163 = !DILocation(line: 3019, column: 30, scope: !8095)
!8164 = !DILocation(line: 3019, column: 41, scope: !8095)
!8165 = !DILocation(line: 3020, column: 4, scope: !8095)
!8166 = !DILocation(line: 3020, column: 15, scope: !8095)
!8167 = !DILocation(line: 3019, column: 9, scope: !8095)
!8168 = !DILocation(line: 3019, column: 7, scope: !8095)
!8169 = !DILocation(line: 3021, column: 6, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 3021, column: 6)
!8171 = !DILocation(line: 3021, column: 11, scope: !8170)
!8172 = !DILocation(line: 3021, column: 6, scope: !8095)
!8173 = !DILocation(line: 3022, column: 3, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 3021, column: 17)
!8175 = !DILocation(line: 3024, column: 3, scope: !8174)
!8176 = !DILocation(line: 3027, column: 3, scope: !8174)
!8177 = !DILocation(line: 3029, column: 16, scope: !8095)
!8178 = !DILocation(line: 3029, column: 2, scope: !8095)
!8179 = !DILocation(line: 3029, column: 10, scope: !8095)
!8180 = !DILocation(line: 3029, column: 14, scope: !8095)
!8181 = !DILocation(line: 3031, column: 49, scope: !8095)
!8182 = !DILocation(line: 3031, column: 15, scope: !8095)
!8183 = !DILocation(line: 3031, column: 13, scope: !8095)
!8184 = !DILocation(line: 3032, column: 37, scope: !8095)
!8185 = !DILocation(line: 3032, column: 43, scope: !8095)
!8186 = !DILocation(line: 3032, column: 49, scope: !8095)
!8187 = !DILocation(line: 3032, column: 54, scope: !8095)
!8188 = !DILocation(line: 3032, column: 64, scope: !8095)
!8189 = !DILocation(line: 3033, column: 4, scope: !8095)
!8190 = !DILocation(line: 3033, column: 10, scope: !8095)
!8191 = !DILocation(line: 3033, column: 15, scope: !8095)
!8192 = !DILocation(line: 3033, column: 25, scope: !8095)
!8193 = !DILocation(line: 3033, column: 34, scope: !8095)
!8194 = !DILocation(line: 3034, column: 4, scope: !8095)
!8195 = !DILocation(line: 3034, column: 16, scope: !8095)
!8196 = !DILocation(line: 3032, column: 2, scope: !8095)
!8197 = !DILocation(line: 3035, column: 1, scope: !8095)
!8198 = distinct !DISubprogram(name: "xhci_free_device_endpoint_resources", scope: !3, file: !3, line: 3662, type: !8199, scopeLine: 3664, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!8199 = !DISubroutineType(types: !8200)
!8200 = !{null, !4497, !5290, !569}
!8201 = !DILocalVariable(name: "xhci", arg: 1, scope: !8198, file: !3, line: 3662, type: !4497)
!8202 = !DILocation(line: 3662, column: 59, scope: !8198)
!8203 = !DILocalVariable(name: "virt_dev", arg: 2, scope: !8198, file: !3, line: 3663, type: !5290)
!8204 = !DILocation(line: 3663, column: 27, scope: !8198)
!8205 = !DILocalVariable(name: "drop_control_ep", arg: 3, scope: !8198, file: !3, line: 3663, type: !569)
!8206 = !DILocation(line: 3663, column: 42, scope: !8198)
!8207 = !DILocalVariable(name: "i", scope: !8198, file: !3, line: 3665, type: !265)
!8208 = !DILocation(line: 3665, column: 6, scope: !8198)
!8209 = !DILocalVariable(name: "num_dropped_eps", scope: !8198, file: !3, line: 3666, type: !7)
!8210 = !DILocation(line: 3666, column: 15, scope: !8198)
!8211 = !DILocalVariable(name: "drop_flags", scope: !8198, file: !3, line: 3667, type: !7)
!8212 = !DILocation(line: 3667, column: 15, scope: !8198)
!8213 = !DILocation(line: 3669, column: 12, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 3669, column: 2)
!8215 = !DILocation(line: 3669, column: 9, scope: !8214)
!8216 = !DILocation(line: 3669, column: 7, scope: !8214)
!8217 = !DILocation(line: 3669, column: 38, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8214, file: !3, line: 3669, column: 2)
!8219 = !DILocation(line: 3669, column: 40, scope: !8218)
!8220 = !DILocation(line: 3669, column: 2, scope: !8214)
!8221 = !DILocation(line: 3670, column: 7, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 3670, column: 7)
!8223 = distinct !DILexicalBlock(scope: !8218, file: !3, line: 3669, column: 51)
!8224 = !DILocation(line: 3670, column: 17, scope: !8222)
!8225 = !DILocation(line: 3670, column: 21, scope: !8222)
!8226 = !DILocation(line: 3670, column: 24, scope: !8222)
!8227 = !DILocation(line: 3670, column: 7, scope: !8223)
!8228 = !DILocation(line: 3671, column: 23, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8222, file: !3, line: 3670, column: 30)
!8230 = !DILocation(line: 3671, column: 20, scope: !8229)
!8231 = !DILocation(line: 3671, column: 15, scope: !8229)
!8232 = !DILocation(line: 3672, column: 19, scope: !8229)
!8233 = !DILocation(line: 3673, column: 3, scope: !8229)
!8234 = !DILocation(line: 3674, column: 2, scope: !8223)
!8235 = !DILocation(line: 3669, column: 47, scope: !8218)
!8236 = !DILocation(line: 3669, column: 2, scope: !8218)
!8237 = distinct !{!8237, !8220, !8238}
!8238 = !DILocation(line: 3674, column: 2, scope: !8214)
!8239 = !DILocation(line: 3675, column: 26, scope: !8198)
!8240 = !DILocation(line: 3675, column: 2, scope: !8198)
!8241 = !DILocation(line: 3675, column: 8, scope: !8198)
!8242 = !DILocation(line: 3675, column: 23, scope: !8198)
!8243 = !DILocation(line: 3676, column: 6, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 3676, column: 6)
!8245 = !DILocation(line: 3676, column: 6, scope: !8198)
!8246 = !DILocation(line: 3677, column: 18, scope: !8244)
!8247 = !DILocation(line: 3680, column: 5, scope: !8244)
!8248 = !DILocation(line: 3680, column: 22, scope: !8244)
!8249 = !DILocation(line: 3681, column: 5, scope: !8244)
!8250 = !DILocation(line: 3681, column: 11, scope: !8244)
!8251 = !DILocation(line: 3677, column: 3, scope: !8244)
!8252 = !DILocation(line: 3682, column: 1, scope: !8198)
!8253 = distinct !DISubprogram(name: "xhci_disable_slot", scope: !3, file: !3, line: 3903, type: !8254, scopeLine: 3904, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!8254 = !DISubroutineType(types: !8255)
!8255 = !{!265, !4497, !204}
!8256 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !8257)
!8257 = distinct !DILocation(line: 3929, column: 3, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 3928, column: 11)
!8259 = distinct !DILexicalBlock(scope: !8253, file: !3, line: 3928, column: 6)
!8260 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !8257)
!8261 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !8262)
!8262 = distinct !DILocation(line: 3921, column: 3, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 3920, column: 43)
!8264 = distinct !DILexicalBlock(scope: !8253, file: !3, line: 3919, column: 6)
!8265 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !8262)
!8266 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !8267)
!8267 = distinct !DILocation(line: 3934, column: 2, scope: !8253)
!8268 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !8267)
!8269 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !8270)
!8270 = distinct !DILocation(line: 3916, column: 2, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 3916, column: 2)
!8272 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 3916, column: 2)
!8273 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 3916, column: 2)
!8274 = distinct !DILexicalBlock(scope: !8275, file: !3, line: 3916, column: 2)
!8275 = distinct !DILexicalBlock(scope: !8253, file: !3, line: 3916, column: 2)
!8276 = !DILocalVariable(name: "xhci", arg: 1, scope: !8253, file: !3, line: 3903, type: !4497)
!8277 = !DILocation(line: 3903, column: 40, scope: !8253)
!8278 = !DILocalVariable(name: "slot_id", arg: 2, scope: !8253, file: !3, line: 3903, type: !204)
!8279 = !DILocation(line: 3903, column: 50, scope: !8253)
!8280 = !DILocalVariable(name: "command", scope: !8253, file: !3, line: 3905, type: !5247)
!8281 = !DILocation(line: 3905, column: 23, scope: !8253)
!8282 = !DILocalVariable(name: "flags", scope: !8253, file: !3, line: 3906, type: !248)
!8283 = !DILocation(line: 3906, column: 16, scope: !8253)
!8284 = !DILocalVariable(name: "state", scope: !8253, file: !3, line: 3907, type: !204)
!8285 = !DILocation(line: 3907, column: 6, scope: !8253)
!8286 = !DILocalVariable(name: "ret", scope: !8253, file: !3, line: 3908, type: !265)
!8287 = !DILocation(line: 3908, column: 6, scope: !8253)
!8288 = !DILocation(line: 3910, column: 31, scope: !8253)
!8289 = !DILocation(line: 3910, column: 12, scope: !8253)
!8290 = !DILocation(line: 3910, column: 10, scope: !8253)
!8291 = !DILocation(line: 3911, column: 7, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8253, file: !3, line: 3911, column: 6)
!8293 = !DILocation(line: 3911, column: 6, scope: !8253)
!8294 = !DILocation(line: 3912, column: 3, scope: !8292)
!8295 = !DILocation(line: 3914, column: 27, scope: !8253)
!8296 = !DILocation(line: 3914, column: 33, scope: !8253)
!8297 = !DILocation(line: 3914, column: 2, scope: !8253)
!8298 = !DILocation(line: 3916, column: 2, scope: !8253)
!8299 = !DILocation(line: 3916, column: 2, scope: !8275)
!8300 = !DILocalVariable(name: "__dummy", scope: !8301, file: !3, line: 3916, type: !248)
!8301 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 3916, column: 2)
!8302 = !DILocation(line: 3916, column: 2, scope: !8301)
!8303 = !DILocalVariable(name: "__dummy2", scope: !8301, file: !3, line: 3916, type: !248)
!8304 = !DILocation(line: 3916, column: 2, scope: !8274)
!8305 = !DILocation(line: 3916, column: 2, scope: !8273)
!8306 = !DILocation(line: 3916, column: 2, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 3916, column: 2)
!8308 = !DILocalVariable(name: "__dummy", scope: !8309, file: !3, line: 3916, type: !248)
!8309 = distinct !DILexicalBlock(scope: !8310, file: !3, line: 3916, column: 2)
!8310 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 3916, column: 2)
!8311 = !DILocation(line: 3916, column: 2, scope: !8309)
!8312 = !DILocalVariable(name: "__dummy2", scope: !8309, file: !3, line: 3916, type: !248)
!8313 = !DILocation(line: 3916, column: 2, scope: !8310)
!8314 = !DILocation(line: 3916, column: 2, scope: !8272)
!8315 = !{i32 -2140622568}
!8316 = !DILocation(line: 3916, column: 2, scope: !8271)
!8317 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !8270)
!8318 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !8270)
!8319 = !DILocation(line: 3918, column: 17, scope: !8253)
!8320 = !DILocation(line: 3918, column: 23, scope: !8253)
!8321 = !DILocation(line: 3918, column: 32, scope: !8253)
!8322 = !DILocation(line: 3918, column: 16, scope: !8253)
!8323 = !DILocation(line: 3918, column: 10, scope: !8253)
!8324 = !DILocation(line: 3918, column: 8, scope: !8253)
!8325 = !DILocation(line: 3919, column: 6, scope: !8264)
!8326 = !DILocation(line: 3919, column: 12, scope: !8264)
!8327 = !DILocation(line: 3919, column: 26, scope: !8264)
!8328 = !DILocation(line: 3919, column: 30, scope: !8264)
!8329 = !DILocation(line: 3919, column: 36, scope: !8264)
!8330 = !DILocation(line: 3919, column: 46, scope: !8264)
!8331 = !DILocation(line: 3919, column: 66, scope: !8264)
!8332 = !DILocation(line: 3920, column: 5, scope: !8264)
!8333 = !DILocation(line: 3920, column: 11, scope: !8264)
!8334 = !DILocation(line: 3920, column: 21, scope: !8264)
!8335 = !DILocation(line: 3919, column: 6, scope: !8253)
!8336 = !DILocation(line: 3921, column: 27, scope: !8263)
!8337 = !DILocation(line: 3921, column: 33, scope: !8263)
!8338 = !DILocation(line: 3921, column: 39, scope: !8263)
!8339 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !8262)
!8340 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !8262)
!8341 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !8262)
!8342 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !8262)
!8343 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !8262)
!8344 = !DILocation(line: 3922, column: 9, scope: !8263)
!8345 = !DILocation(line: 3922, column: 3, scope: !8263)
!8346 = !DILocation(line: 3923, column: 3, scope: !8263)
!8347 = !DILocation(line: 3926, column: 32, scope: !8253)
!8348 = !DILocation(line: 3926, column: 38, scope: !8253)
!8349 = !DILocation(line: 3927, column: 5, scope: !8253)
!8350 = !DILocation(line: 3926, column: 8, scope: !8253)
!8351 = !DILocation(line: 3926, column: 6, scope: !8253)
!8352 = !DILocation(line: 3928, column: 6, scope: !8259)
!8353 = !DILocation(line: 3928, column: 6, scope: !8253)
!8354 = !DILocation(line: 3929, column: 27, scope: !8258)
!8355 = !DILocation(line: 3929, column: 33, scope: !8258)
!8356 = !DILocation(line: 3929, column: 39, scope: !8258)
!8357 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !8257)
!8358 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !8257)
!8359 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !8257)
!8360 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !8257)
!8361 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !8257)
!8362 = !DILocation(line: 3930, column: 9, scope: !8258)
!8363 = !DILocation(line: 3930, column: 3, scope: !8258)
!8364 = !DILocation(line: 3931, column: 10, scope: !8258)
!8365 = !DILocation(line: 3931, column: 3, scope: !8258)
!8366 = !DILocation(line: 3933, column: 19, scope: !8253)
!8367 = !DILocation(line: 3933, column: 2, scope: !8253)
!8368 = !DILocation(line: 3934, column: 26, scope: !8253)
!8369 = !DILocation(line: 3934, column: 32, scope: !8253)
!8370 = !DILocation(line: 3934, column: 38, scope: !8253)
!8371 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !8267)
!8372 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !8267)
!8373 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !8267)
!8374 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !8267)
!8375 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !8267)
!8376 = !DILocation(line: 3935, column: 9, scope: !8253)
!8377 = !DILocation(line: 3935, column: 2, scope: !8253)
!8378 = !DILocation(line: 3936, column: 1, scope: !8253)
!8379 = distinct !DISubprogram(name: "xhci_debugfs_remove_slot", scope: !5655, file: !5655, line: 128, type: !8380, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!8380 = !DISubroutineType(types: !8381)
!8381 = !{null, !4497, !265}
!8382 = !DILocalVariable(name: "x", arg: 1, scope: !8379, file: !5655, line: 128, type: !4497)
!8383 = !DILocation(line: 128, column: 62, scope: !8379)
!8384 = !DILocalVariable(name: "s", arg: 2, scope: !8379, file: !5655, line: 128, type: !265)
!8385 = !DILocation(line: 128, column: 69, scope: !8379)
!8386 = !DILocation(line: 128, column: 74, scope: !8379)
!8387 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !8388, file: !8388, line: 666, type: !8389, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!8388 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!8389 = !DISubroutineType(types: !8390)
!8390 = !{!248}
!8391 = !DILocalVariable(name: "f", scope: !8387, file: !8388, line: 668, type: !248)
!8392 = !DILocation(line: 668, column: 16, scope: !8387)
!8393 = !DILocation(line: 670, column: 6, scope: !8387)
!8394 = !DILocation(line: 670, column: 4, scope: !8387)
!8395 = !DILocation(line: 671, column: 2, scope: !8387)
!8396 = !DILocation(line: 672, column: 9, scope: !8387)
!8397 = !DILocation(line: 672, column: 2, scope: !8387)
!8398 = distinct !DISubprogram(name: "xhci_alloc_dev", scope: !3, file: !3, line: 3965, type: !4965, scopeLine: 3966, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!8399 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !8400)
!8400 = distinct !DILocation(line: 4013, column: 3, scope: !8401)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 4003, column: 44)
!8402 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 4003, column: 6)
!8403 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !8400)
!8404 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !8405)
!8405 = distinct !DILocation(line: 4007, column: 4, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 4006, column: 12)
!8407 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 4006, column: 7)
!8408 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !8405)
!8409 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !8410)
!8410 = distinct !DILocation(line: 4004, column: 3, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 4004, column: 3)
!8412 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 4004, column: 3)
!8413 = distinct !DILexicalBlock(scope: !8414, file: !3, line: 4004, column: 3)
!8414 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 4004, column: 3)
!8415 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 4004, column: 3)
!8416 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !8417)
!8417 = distinct !DILocation(line: 3987, column: 2, scope: !8398)
!8418 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !8417)
!8419 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !8420)
!8420 = distinct !DILocation(line: 3981, column: 3, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8422, file: !3, line: 3980, column: 11)
!8422 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 3980, column: 6)
!8423 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !8420)
!8424 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !8425)
!8425 = distinct !DILocation(line: 3978, column: 2, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 3978, column: 2)
!8427 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 3978, column: 2)
!8428 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 3978, column: 2)
!8429 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 3978, column: 2)
!8430 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 3978, column: 2)
!8431 = !DILocalVariable(name: "hcd", arg: 1, scope: !8398, file: !3, line: 3965, type: !4501)
!8432 = !DILocation(line: 3965, column: 36, scope: !8398)
!8433 = !DILocalVariable(name: "udev", arg: 2, scope: !8398, file: !3, line: 3965, type: !4526)
!8434 = !DILocation(line: 3965, column: 60, scope: !8398)
!8435 = !DILocalVariable(name: "xhci", scope: !8398, file: !3, line: 3967, type: !4497)
!8436 = !DILocation(line: 3967, column: 19, scope: !8398)
!8437 = !DILocation(line: 3967, column: 38, scope: !8398)
!8438 = !DILocation(line: 3967, column: 26, scope: !8398)
!8439 = !DILocalVariable(name: "vdev", scope: !8398, file: !3, line: 3968, type: !5290)
!8440 = !DILocation(line: 3968, column: 27, scope: !8398)
!8441 = !DILocalVariable(name: "slot_ctx", scope: !8398, file: !3, line: 3969, type: !8442)
!8442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8443, size: 64)
!8443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_slot_ctx", file: !145, line: 616, size: 256, elements: !8444)
!8444 = !{!8445, !8446, !8447, !8448, !8449}
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "dev_info", scope: !8443, file: !145, line: 617, baseType: !4583, size: 32)
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "dev_info2", scope: !8443, file: !145, line: 618, baseType: !4583, size: 32, offset: 32)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "tt_info", scope: !8443, file: !145, line: 619, baseType: !4583, size: 32, offset: 64)
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !8443, file: !145, line: 620, baseType: !4583, size: 32, offset: 96)
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8443, file: !145, line: 622, baseType: !5103, size: 128, offset: 128)
!8450 = !DILocation(line: 3969, column: 24, scope: !8398)
!8451 = !DILocalVariable(name: "flags", scope: !8398, file: !3, line: 3970, type: !248)
!8452 = !DILocation(line: 3970, column: 16, scope: !8398)
!8453 = !DILocalVariable(name: "ret", scope: !8398, file: !3, line: 3971, type: !265)
!8454 = !DILocation(line: 3971, column: 6, scope: !8398)
!8455 = !DILocalVariable(name: "slot_id", scope: !8398, file: !3, line: 3971, type: !265)
!8456 = !DILocation(line: 3971, column: 11, scope: !8398)
!8457 = !DILocalVariable(name: "command", scope: !8398, file: !3, line: 3972, type: !5247)
!8458 = !DILocation(line: 3972, column: 23, scope: !8398)
!8459 = !DILocation(line: 3974, column: 31, scope: !8398)
!8460 = !DILocation(line: 3974, column: 12, scope: !8398)
!8461 = !DILocation(line: 3974, column: 10, scope: !8398)
!8462 = !DILocation(line: 3975, column: 7, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 3975, column: 6)
!8464 = !DILocation(line: 3975, column: 6, scope: !8398)
!8465 = !DILocation(line: 3976, column: 3, scope: !8463)
!8466 = !DILocation(line: 3978, column: 2, scope: !8398)
!8467 = !DILocation(line: 3978, column: 2, scope: !8430)
!8468 = !DILocalVariable(name: "__dummy", scope: !8469, file: !3, line: 3978, type: !248)
!8469 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 3978, column: 2)
!8470 = !DILocation(line: 3978, column: 2, scope: !8469)
!8471 = !DILocalVariable(name: "__dummy2", scope: !8469, file: !3, line: 3978, type: !248)
!8472 = !DILocation(line: 3978, column: 2, scope: !8429)
!8473 = !DILocation(line: 3978, column: 2, scope: !8428)
!8474 = !DILocation(line: 3978, column: 2, scope: !8475)
!8475 = distinct !DILexicalBlock(scope: !8428, file: !3, line: 3978, column: 2)
!8476 = !DILocalVariable(name: "__dummy", scope: !8477, file: !3, line: 3978, type: !248)
!8477 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 3978, column: 2)
!8478 = distinct !DILexicalBlock(scope: !8475, file: !3, line: 3978, column: 2)
!8479 = !DILocation(line: 3978, column: 2, scope: !8477)
!8480 = !DILocalVariable(name: "__dummy2", scope: !8477, file: !3, line: 3978, type: !248)
!8481 = !DILocation(line: 3978, column: 2, scope: !8478)
!8482 = !DILocation(line: 3978, column: 2, scope: !8427)
!8483 = !{i32 -2140621335}
!8484 = !DILocation(line: 3978, column: 2, scope: !8426)
!8485 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !8425)
!8486 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !8425)
!8487 = !DILocation(line: 3979, column: 32, scope: !8398)
!8488 = !DILocation(line: 3979, column: 38, scope: !8398)
!8489 = !DILocation(line: 3979, column: 8, scope: !8398)
!8490 = !DILocation(line: 3979, column: 6, scope: !8398)
!8491 = !DILocation(line: 3980, column: 6, scope: !8422)
!8492 = !DILocation(line: 3980, column: 6, scope: !8398)
!8493 = !DILocation(line: 3981, column: 27, scope: !8421)
!8494 = !DILocation(line: 3981, column: 33, scope: !8421)
!8495 = !DILocation(line: 3981, column: 39, scope: !8421)
!8496 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !8420)
!8497 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !8420)
!8498 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !8420)
!8499 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !8420)
!8500 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !8420)
!8501 = !DILocation(line: 3983, column: 21, scope: !8421)
!8502 = !DILocation(line: 3983, column: 27, scope: !8421)
!8503 = !DILocation(line: 3983, column: 3, scope: !8421)
!8504 = !DILocation(line: 3984, column: 3, scope: !8421)
!8505 = !DILocation(line: 3986, column: 19, scope: !8398)
!8506 = !DILocation(line: 3986, column: 2, scope: !8398)
!8507 = !DILocation(line: 3987, column: 26, scope: !8398)
!8508 = !DILocation(line: 3987, column: 32, scope: !8398)
!8509 = !DILocation(line: 3987, column: 38, scope: !8398)
!8510 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !8417)
!8511 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !8417)
!8512 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !8417)
!8513 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !8417)
!8514 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !8417)
!8515 = !DILocation(line: 3989, column: 22, scope: !8398)
!8516 = !DILocation(line: 3989, column: 31, scope: !8398)
!8517 = !DILocation(line: 3989, column: 2, scope: !8398)
!8518 = !DILocation(line: 3990, column: 12, scope: !8398)
!8519 = !DILocation(line: 3990, column: 21, scope: !8398)
!8520 = !DILocation(line: 3990, column: 10, scope: !8398)
!8521 = !DILocation(line: 3992, column: 7, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 3992, column: 6)
!8523 = !DILocation(line: 3992, column: 15, scope: !8522)
!8524 = !DILocation(line: 3992, column: 18, scope: !8522)
!8525 = !DILocation(line: 3992, column: 27, scope: !8522)
!8526 = !DILocation(line: 3992, column: 34, scope: !8522)
!8527 = !DILocation(line: 3992, column: 6, scope: !8398)
!8528 = !DILocation(line: 3993, column: 3, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 3992, column: 51)
!8530 = !DILocation(line: 3994, column: 3, scope: !8529)
!8531 = !DILocation(line: 3997, column: 21, scope: !8529)
!8532 = !DILocation(line: 3997, column: 27, scope: !8529)
!8533 = !DILocation(line: 3997, column: 3, scope: !8529)
!8534 = !DILocation(line: 3998, column: 3, scope: !8529)
!8535 = !DILocation(line: 4001, column: 20, scope: !8398)
!8536 = !DILocation(line: 4001, column: 26, scope: !8398)
!8537 = !DILocation(line: 4001, column: 2, scope: !8398)
!8538 = !DILocation(line: 4003, column: 7, scope: !8402)
!8539 = !DILocation(line: 4003, column: 13, scope: !8402)
!8540 = !DILocation(line: 4003, column: 20, scope: !8402)
!8541 = !DILocation(line: 4003, column: 6, scope: !8398)
!8542 = !DILocation(line: 4004, column: 3, scope: !8401)
!8543 = !DILocation(line: 4004, column: 3, scope: !8415)
!8544 = !DILocalVariable(name: "__dummy", scope: !8545, file: !3, line: 4004, type: !248)
!8545 = distinct !DILexicalBlock(scope: !8414, file: !3, line: 4004, column: 3)
!8546 = !DILocation(line: 4004, column: 3, scope: !8545)
!8547 = !DILocalVariable(name: "__dummy2", scope: !8545, file: !3, line: 4004, type: !248)
!8548 = !DILocation(line: 4004, column: 3, scope: !8414)
!8549 = !DILocation(line: 4004, column: 3, scope: !8413)
!8550 = !DILocation(line: 4004, column: 3, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 4004, column: 3)
!8552 = !DILocalVariable(name: "__dummy", scope: !8553, file: !3, line: 4004, type: !248)
!8553 = distinct !DILexicalBlock(scope: !8554, file: !3, line: 4004, column: 3)
!8554 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 4004, column: 3)
!8555 = !DILocation(line: 4004, column: 3, scope: !8553)
!8556 = !DILocalVariable(name: "__dummy2", scope: !8553, file: !3, line: 4004, type: !248)
!8557 = !DILocation(line: 4004, column: 3, scope: !8554)
!8558 = !DILocation(line: 4004, column: 3, scope: !8412)
!8559 = !{i32 -2140619099}
!8560 = !DILocation(line: 4004, column: 3, scope: !8411)
!8561 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !8410)
!8562 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !8410)
!8563 = !DILocation(line: 4005, column: 48, scope: !8401)
!8564 = !DILocation(line: 4005, column: 9, scope: !8401)
!8565 = !DILocation(line: 4005, column: 7, scope: !8401)
!8566 = !DILocation(line: 4006, column: 7, scope: !8407)
!8567 = !DILocation(line: 4006, column: 7, scope: !8401)
!8568 = !DILocation(line: 4007, column: 28, scope: !8406)
!8569 = !DILocation(line: 4007, column: 34, scope: !8406)
!8570 = !DILocation(line: 4007, column: 40, scope: !8406)
!8571 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !8405)
!8572 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !8405)
!8573 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !8405)
!8574 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !8405)
!8575 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !8405)
!8576 = !DILocation(line: 4008, column: 4, scope: !8406)
!8577 = !DILocation(line: 4011, column: 4, scope: !8406)
!8578 = !DILocation(line: 4013, column: 27, scope: !8401)
!8579 = !DILocation(line: 4013, column: 33, scope: !8401)
!8580 = !DILocation(line: 4013, column: 39, scope: !8401)
!8581 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !8400)
!8582 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !8400)
!8583 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !8400)
!8584 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !8400)
!8585 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !8400)
!8586 = !DILocation(line: 4014, column: 2, scope: !8401)
!8587 = !DILocation(line: 4019, column: 30, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 4019, column: 6)
!8589 = !DILocation(line: 4019, column: 36, scope: !8588)
!8590 = !DILocation(line: 4019, column: 45, scope: !8588)
!8591 = !DILocation(line: 4019, column: 7, scope: !8588)
!8592 = !DILocation(line: 4019, column: 6, scope: !8398)
!8593 = !DILocation(line: 4020, column: 3, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8588, file: !3, line: 4019, column: 62)
!8595 = !DILocation(line: 4021, column: 3, scope: !8594)
!8596 = !DILocation(line: 4023, column: 9, scope: !8398)
!8597 = !DILocation(line: 4023, column: 15, scope: !8398)
!8598 = !DILocation(line: 4023, column: 20, scope: !8398)
!8599 = !DILocation(line: 4023, column: 7, scope: !8398)
!8600 = !DILocation(line: 4024, column: 31, scope: !8398)
!8601 = !DILocation(line: 4024, column: 37, scope: !8398)
!8602 = !DILocation(line: 4024, column: 43, scope: !8398)
!8603 = !DILocation(line: 4024, column: 13, scope: !8398)
!8604 = !DILocation(line: 4024, column: 11, scope: !8398)
!8605 = !DILocation(line: 4025, column: 23, scope: !8398)
!8606 = !DILocation(line: 4025, column: 2, scope: !8398)
!8607 = !DILocation(line: 4027, column: 18, scope: !8398)
!8608 = !DILocation(line: 4027, column: 2, scope: !8398)
!8609 = !DILocation(line: 4027, column: 8, scope: !8398)
!8610 = !DILocation(line: 4027, column: 16, scope: !8398)
!8611 = !DILocation(line: 4029, column: 27, scope: !8398)
!8612 = !DILocation(line: 4029, column: 33, scope: !8398)
!8613 = !DILocation(line: 4029, column: 2, scope: !8398)
!8614 = !DILocation(line: 4042, column: 2, scope: !8398)
!8615 = !DILabel(scope: !8398, name: "disable_slot", file: !3, line: 4044)
!8616 = !DILocation(line: 4044, column: 1, scope: !8398)
!8617 = !DILocation(line: 4045, column: 26, scope: !8398)
!8618 = !DILocation(line: 4045, column: 32, scope: !8398)
!8619 = !DILocation(line: 4045, column: 38, scope: !8398)
!8620 = !DILocation(line: 4045, column: 8, scope: !8398)
!8621 = !DILocation(line: 4045, column: 6, scope: !8398)
!8622 = !DILocation(line: 4046, column: 6, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 4046, column: 6)
!8624 = !DILocation(line: 4046, column: 6, scope: !8398)
!8625 = !DILocation(line: 4047, column: 25, scope: !8623)
!8626 = !DILocation(line: 4047, column: 31, scope: !8623)
!8627 = !DILocation(line: 4047, column: 37, scope: !8623)
!8628 = !DILocation(line: 4047, column: 3, scope: !8623)
!8629 = !DILocation(line: 4049, column: 2, scope: !8398)
!8630 = !DILocation(line: 4050, column: 1, scope: !8398)
!8631 = distinct !DISubprogram(name: "xhci_reserve_host_control_ep_resources", scope: !3, file: !3, line: 3944, type: !5802, scopeLine: 3945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!8632 = !DILocalVariable(name: "xhci", arg: 1, scope: !8631, file: !3, line: 3944, type: !4497)
!8633 = !DILocation(line: 3944, column: 68, scope: !8631)
!8634 = !DILocation(line: 3946, column: 6, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 3946, column: 6)
!8636 = !DILocation(line: 3946, column: 12, scope: !8635)
!8637 = !DILocation(line: 3946, column: 27, scope: !8635)
!8638 = !DILocation(line: 3946, column: 33, scope: !8635)
!8639 = !DILocation(line: 3946, column: 39, scope: !8635)
!8640 = !DILocation(line: 3946, column: 31, scope: !8635)
!8641 = !DILocation(line: 3946, column: 6, scope: !8631)
!8642 = !DILocation(line: 3947, column: 18, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 3946, column: 57)
!8644 = !DILocation(line: 3950, column: 5, scope: !8643)
!8645 = !DILocation(line: 3950, column: 11, scope: !8643)
!8646 = !DILocation(line: 3950, column: 27, scope: !8643)
!8647 = !DILocation(line: 3950, column: 33, scope: !8643)
!8648 = !DILocation(line: 3947, column: 3, scope: !8643)
!8649 = !DILocation(line: 3951, column: 3, scope: !8643)
!8650 = !DILocation(line: 3953, column: 2, scope: !8631)
!8651 = !DILocation(line: 3953, column: 8, scope: !8631)
!8652 = !DILocation(line: 3953, column: 23, scope: !8631)
!8653 = !DILocation(line: 3954, column: 17, scope: !8631)
!8654 = !DILocation(line: 3956, column: 4, scope: !8631)
!8655 = !DILocation(line: 3956, column: 10, scope: !8631)
!8656 = !DILocation(line: 3954, column: 2, scope: !8631)
!8657 = !DILocation(line: 3957, column: 2, scope: !8631)
!8658 = !DILocation(line: 3958, column: 1, scope: !8631)
!8659 = distinct !DISubprogram(name: "trace_xhci_alloc_dev", scope: !5835, file: !5835, line: 384, type: !8660, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!8660 = !DISubroutineType(types: !8661)
!8661 = !{null, !8442}
!8662 = !DILocalVariable(name: "ctx", arg: 1, scope: !8659, file: !5835, line: 384, type: !8442)
!8663 = !DILocation(line: 384, column: 1, scope: !8659)
!8664 = distinct !DISubprogram(name: "xhci_debugfs_create_slot", scope: !5655, file: !5655, line: 127, type: !8380, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!8665 = !DILocalVariable(name: "x", arg: 1, scope: !8664, file: !5655, line: 127, type: !4497)
!8666 = !DILocation(line: 127, column: 62, scope: !8664)
!8667 = !DILocalVariable(name: "s", arg: 2, scope: !8664, file: !5655, line: 127, type: !265)
!8668 = !DILocation(line: 127, column: 69, scope: !8664)
!8669 = !DILocation(line: 127, column: 74, scope: !8664)
!8670 = distinct !DISubprogram(name: "xhci_find_raw_port_number", scope: !3, file: !3, line: 4255, type: !4960, scopeLine: 4256, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!8671 = !DILocalVariable(name: "hcd", arg: 1, scope: !8670, file: !3, line: 4255, type: !4501)
!8672 = !DILocation(line: 4255, column: 47, scope: !8670)
!8673 = !DILocalVariable(name: "port1", arg: 2, scope: !8670, file: !3, line: 4255, type: !265)
!8674 = !DILocation(line: 4255, column: 56, scope: !8670)
!8675 = !DILocalVariable(name: "rhub", scope: !8670, file: !3, line: 4257, type: !5408)
!8676 = !DILocation(line: 4257, column: 19, scope: !8670)
!8677 = !DILocation(line: 4259, column: 23, scope: !8670)
!8678 = !DILocation(line: 4259, column: 9, scope: !8670)
!8679 = !DILocation(line: 4259, column: 7, scope: !8670)
!8680 = !DILocation(line: 4260, column: 9, scope: !8670)
!8681 = !DILocation(line: 4260, column: 15, scope: !8670)
!8682 = !DILocation(line: 4260, column: 21, scope: !8670)
!8683 = !DILocation(line: 4260, column: 27, scope: !8670)
!8684 = !DILocation(line: 4260, column: 33, scope: !8670)
!8685 = !DILocation(line: 4260, column: 44, scope: !8670)
!8686 = !DILocation(line: 4260, column: 2, scope: !8670)
!8687 = !DILocalVariable(name: "hcd", arg: 1, scope: !5601, file: !3, line: 5130, type: !4501)
!8688 = !DILocation(line: 5130, column: 36, scope: !5601)
!8689 = !DILocalVariable(name: "get_quirks", arg: 2, scope: !5601, file: !3, line: 5130, type: !5604)
!8690 = !DILocation(line: 5130, column: 59, scope: !5601)
!8691 = !DILocalVariable(name: "xhci", scope: !5601, file: !3, line: 5132, type: !4497)
!8692 = !DILocation(line: 5132, column: 20, scope: !5601)
!8693 = !DILocalVariable(name: "dev", scope: !5601, file: !3, line: 5137, type: !305)
!8694 = !DILocation(line: 5137, column: 18, scope: !5601)
!8695 = !DILocation(line: 5137, column: 24, scope: !5601)
!8696 = !DILocation(line: 5137, column: 29, scope: !5601)
!8697 = !DILocation(line: 5137, column: 34, scope: !5601)
!8698 = !DILocalVariable(name: "minor_rev", scope: !5601, file: !3, line: 5138, type: !7)
!8699 = !DILocation(line: 5138, column: 16, scope: !5601)
!8700 = !DILocalVariable(name: "retval", scope: !5601, file: !3, line: 5139, type: !265)
!8701 = !DILocation(line: 5139, column: 8, scope: !5601)
!8702 = !DILocation(line: 5142, column: 2, scope: !5601)
!8703 = !DILocation(line: 5142, column: 7, scope: !5601)
!8704 = !DILocation(line: 5142, column: 12, scope: !5601)
!8705 = !DILocation(line: 5142, column: 25, scope: !5601)
!8706 = !DILocation(line: 5145, column: 2, scope: !5601)
!8707 = !DILocation(line: 5145, column: 7, scope: !5601)
!8708 = !DILocation(line: 5145, column: 12, scope: !5601)
!8709 = !DILocation(line: 5145, column: 29, scope: !5601)
!8710 = !DILocation(line: 5148, column: 2, scope: !5601)
!8711 = !DILocation(line: 5148, column: 7, scope: !5601)
!8712 = !DILocation(line: 5148, column: 12, scope: !5601)
!8713 = !DILocation(line: 5148, column: 29, scope: !5601)
!8714 = !DILocation(line: 5150, column: 21, scope: !5601)
!8715 = !DILocation(line: 5150, column: 9, scope: !5601)
!8716 = !DILocation(line: 5150, column: 7, scope: !5601)
!8717 = !DILocation(line: 5152, column: 29, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 5152, column: 6)
!8719 = !DILocation(line: 5152, column: 6, scope: !8718)
!8720 = !DILocation(line: 5152, column: 6, scope: !5601)
!8721 = !DILocation(line: 5153, column: 20, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 5152, column: 35)
!8723 = !DILocation(line: 5153, column: 3, scope: !8722)
!8724 = !DILocation(line: 5153, column: 9, scope: !8722)
!8725 = !DILocation(line: 5153, column: 18, scope: !8722)
!8726 = !DILocation(line: 5154, column: 25, scope: !8722)
!8727 = !DILocation(line: 5154, column: 3, scope: !8722)
!8728 = !DILocation(line: 5154, column: 9, scope: !8722)
!8729 = !DILocation(line: 5154, column: 19, scope: !8722)
!8730 = !DILocation(line: 5154, column: 23, scope: !8722)
!8731 = !DILocation(line: 5158, column: 3, scope: !8722)
!8732 = !DILocation(line: 5158, column: 8, scope: !8722)
!8733 = !DILocation(line: 5158, column: 14, scope: !8722)
!8734 = !DILocation(line: 5159, column: 3, scope: !8722)
!8735 = !DILocation(line: 5159, column: 8, scope: !8722)
!8736 = !DILocation(line: 5159, column: 13, scope: !8722)
!8737 = !DILocation(line: 5159, column: 23, scope: !8722)
!8738 = !DILocation(line: 5159, column: 29, scope: !8722)
!8739 = !DILocation(line: 5165, column: 3, scope: !8722)
!8740 = !DILocation(line: 5165, column: 8, scope: !8722)
!8741 = !DILocation(line: 5165, column: 15, scope: !8722)
!8742 = !DILocation(line: 5166, column: 2, scope: !8722)
!8743 = !DILocation(line: 5176, column: 7, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 5176, column: 7)
!8745 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 5166, column: 9)
!8746 = !DILocation(line: 5176, column: 13, scope: !8744)
!8747 = !DILocation(line: 5176, column: 23, scope: !8744)
!8748 = !DILocation(line: 5176, column: 31, scope: !8744)
!8749 = !DILocation(line: 5176, column: 7, scope: !8745)
!8750 = !DILocation(line: 5177, column: 14, scope: !8744)
!8751 = !DILocation(line: 5177, column: 4, scope: !8744)
!8752 = !DILocation(line: 5179, column: 16, scope: !8744)
!8753 = !DILocation(line: 5179, column: 22, scope: !8744)
!8754 = !DILocation(line: 5179, column: 32, scope: !8744)
!8755 = !DILocation(line: 5179, column: 40, scope: !8744)
!8756 = !DILocation(line: 5179, column: 14, scope: !8744)
!8757 = !DILocation(line: 5181, column: 11, scope: !8745)
!8758 = !DILocation(line: 5181, column: 3, scope: !8745)
!8759 = !DILocation(line: 5183, column: 4, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 5181, column: 22)
!8761 = !DILocation(line: 5183, column: 9, scope: !8760)
!8762 = !DILocation(line: 5183, column: 15, scope: !8760)
!8763 = !DILocation(line: 5184, column: 4, scope: !8760)
!8764 = !DILocation(line: 5184, column: 9, scope: !8760)
!8765 = !DILocation(line: 5184, column: 14, scope: !8760)
!8766 = !DILocation(line: 5184, column: 24, scope: !8760)
!8767 = !DILocation(line: 5184, column: 30, scope: !8760)
!8768 = !DILocation(line: 5185, column: 4, scope: !8760)
!8769 = !DILocation(line: 5185, column: 9, scope: !8760)
!8770 = !DILocation(line: 5185, column: 14, scope: !8760)
!8771 = !DILocation(line: 5185, column: 24, scope: !8760)
!8772 = !DILocation(line: 5185, column: 33, scope: !8760)
!8773 = !DILocation(line: 5186, column: 4, scope: !8760)
!8774 = !DILocation(line: 5186, column: 9, scope: !8760)
!8775 = !DILocation(line: 5186, column: 14, scope: !8760)
!8776 = !DILocation(line: 5186, column: 24, scope: !8760)
!8777 = !DILocation(line: 5186, column: 33, scope: !8760)
!8778 = !DILocation(line: 5187, column: 4, scope: !8760)
!8779 = !DILocation(line: 5189, column: 4, scope: !8760)
!8780 = !DILocation(line: 5189, column: 9, scope: !8760)
!8781 = !DILocation(line: 5189, column: 15, scope: !8760)
!8782 = !DILocation(line: 5190, column: 4, scope: !8760)
!8783 = !DILocation(line: 5190, column: 9, scope: !8760)
!8784 = !DILocation(line: 5190, column: 14, scope: !8760)
!8785 = !DILocation(line: 5190, column: 24, scope: !8760)
!8786 = !DILocation(line: 5190, column: 30, scope: !8760)
!8787 = !DILocation(line: 5191, column: 4, scope: !8760)
!8788 = !DILocation(line: 5193, column: 3, scope: !8745)
!8789 = !DILocation(line: 5197, column: 25, scope: !8745)
!8790 = !DILocation(line: 5197, column: 3, scope: !8745)
!8791 = !DILocation(line: 5197, column: 9, scope: !8745)
!8792 = !DILocation(line: 5197, column: 19, scope: !8745)
!8793 = !DILocation(line: 5197, column: 23, scope: !8745)
!8794 = !DILocation(line: 5201, column: 3, scope: !8745)
!8795 = !DILocation(line: 5204, column: 2, scope: !5601)
!8796 = !DILocation(line: 5204, column: 2, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 5204, column: 2)
!8798 = !DILocation(line: 5205, column: 19, scope: !5601)
!8799 = !DILocation(line: 5205, column: 24, scope: !5601)
!8800 = !DILocation(line: 5205, column: 2, scope: !5601)
!8801 = !DILocation(line: 5205, column: 8, scope: !5601)
!8802 = !DILocation(line: 5205, column: 17, scope: !5601)
!8803 = !DILocation(line: 5206, column: 18, scope: !5601)
!8804 = !DILocation(line: 5206, column: 23, scope: !5601)
!8805 = !DILocation(line: 5207, column: 3, scope: !5601)
!8806 = !DILocation(line: 5206, column: 28, scope: !5601)
!8807 = !DILocation(line: 5206, column: 2, scope: !5601)
!8808 = !DILocation(line: 5206, column: 8, scope: !5601)
!8809 = !DILocation(line: 5206, column: 16, scope: !5601)
!8810 = !DILocation(line: 5208, column: 19, scope: !5601)
!8811 = !DILocation(line: 5208, column: 24, scope: !5601)
!8812 = !DILocation(line: 5209, column: 11, scope: !5601)
!8813 = !DILocation(line: 5209, column: 17, scope: !5601)
!8814 = !DILocation(line: 5209, column: 27, scope: !5601)
!8815 = !DILocation(line: 5209, column: 10, scope: !5601)
!8816 = !DILocation(line: 5209, column: 4, scope: !5601)
!8817 = !DILocation(line: 5209, column: 41, scope: !5601)
!8818 = !DILocation(line: 5208, column: 29, scope: !5601)
!8819 = !DILocation(line: 5208, column: 2, scope: !5601)
!8820 = !DILocation(line: 5208, column: 8, scope: !5601)
!8821 = !DILocation(line: 5208, column: 17, scope: !5601)
!8822 = !DILocation(line: 5211, column: 29, scope: !5601)
!8823 = !DILocation(line: 5211, column: 35, scope: !5601)
!8824 = !DILocation(line: 5211, column: 45, scope: !5601)
!8825 = !DILocation(line: 5211, column: 28, scope: !5601)
!8826 = !DILocation(line: 5211, column: 22, scope: !5601)
!8827 = !DILocation(line: 5211, column: 2, scope: !5601)
!8828 = !DILocation(line: 5211, column: 8, scope: !5601)
!8829 = !DILocation(line: 5211, column: 20, scope: !5601)
!8830 = !DILocation(line: 5212, column: 29, scope: !5601)
!8831 = !DILocation(line: 5212, column: 35, scope: !5601)
!8832 = !DILocation(line: 5212, column: 45, scope: !5601)
!8833 = !DILocation(line: 5212, column: 28, scope: !5601)
!8834 = !DILocation(line: 5212, column: 22, scope: !5601)
!8835 = !DILocation(line: 5212, column: 2, scope: !5601)
!8836 = !DILocation(line: 5212, column: 8, scope: !5601)
!8837 = !DILocation(line: 5212, column: 20, scope: !5601)
!8838 = !DILocation(line: 5213, column: 29, scope: !5601)
!8839 = !DILocation(line: 5213, column: 35, scope: !5601)
!8840 = !DILocation(line: 5213, column: 45, scope: !5601)
!8841 = !DILocation(line: 5213, column: 28, scope: !5601)
!8842 = !DILocation(line: 5213, column: 22, scope: !5601)
!8843 = !DILocation(line: 5213, column: 2, scope: !5601)
!8844 = !DILocation(line: 5213, column: 8, scope: !5601)
!8845 = !DILocation(line: 5213, column: 20, scope: !5601)
!8846 = !DILocation(line: 5214, column: 28, scope: !5601)
!8847 = !DILocation(line: 5214, column: 34, scope: !5601)
!8848 = !DILocation(line: 5214, column: 44, scope: !5601)
!8849 = !DILocation(line: 5214, column: 27, scope: !5601)
!8850 = !DILocation(line: 5214, column: 21, scope: !5601)
!8851 = !DILocation(line: 5214, column: 2, scope: !5601)
!8852 = !DILocation(line: 5214, column: 8, scope: !5601)
!8853 = !DILocation(line: 5214, column: 19, scope: !5601)
!8854 = !DILocation(line: 5215, column: 22, scope: !5601)
!8855 = !DILocation(line: 5215, column: 2, scope: !5601)
!8856 = !DILocation(line: 5215, column: 8, scope: !5601)
!8857 = !DILocation(line: 5215, column: 20, scope: !5601)
!8858 = !DILocation(line: 5216, column: 28, scope: !5601)
!8859 = !DILocation(line: 5216, column: 34, scope: !5601)
!8860 = !DILocation(line: 5216, column: 44, scope: !5601)
!8861 = !DILocation(line: 5216, column: 27, scope: !5601)
!8862 = !DILocation(line: 5216, column: 21, scope: !5601)
!8863 = !DILocation(line: 5216, column: 2, scope: !5601)
!8864 = !DILocation(line: 5216, column: 8, scope: !5601)
!8865 = !DILocation(line: 5216, column: 19, scope: !5601)
!8866 = !DILocation(line: 5217, column: 6, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 5217, column: 6)
!8868 = !DILocation(line: 5217, column: 12, scope: !8867)
!8869 = !DILocation(line: 5217, column: 24, scope: !8867)
!8870 = !DILocation(line: 5217, column: 6, scope: !5601)
!8871 = !DILocation(line: 5218, column: 30, scope: !8867)
!8872 = !DILocation(line: 5218, column: 36, scope: !8867)
!8873 = !DILocation(line: 5218, column: 46, scope: !8867)
!8874 = !DILocation(line: 5218, column: 29, scope: !8867)
!8875 = !DILocation(line: 5218, column: 23, scope: !8867)
!8876 = !DILocation(line: 5218, column: 3, scope: !8867)
!8877 = !DILocation(line: 5218, column: 9, scope: !8867)
!8878 = !DILocation(line: 5218, column: 21, scope: !8867)
!8879 = !DILocation(line: 5220, column: 18, scope: !5601)
!8880 = !DILocation(line: 5220, column: 2, scope: !5601)
!8881 = !DILocation(line: 5220, column: 8, scope: !5601)
!8882 = !DILocation(line: 5220, column: 15, scope: !5601)
!8883 = !DILocation(line: 5222, column: 2, scope: !5601)
!8884 = !DILocation(line: 5222, column: 13, scope: !5601)
!8885 = !DILocation(line: 5222, column: 18, scope: !5601)
!8886 = !DILocation(line: 5228, column: 6, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 5228, column: 6)
!8888 = !DILocation(line: 5228, column: 12, scope: !8887)
!8889 = !DILocation(line: 5228, column: 24, scope: !8887)
!8890 = !DILocation(line: 5228, column: 6, scope: !5601)
!8891 = !DILocation(line: 5229, column: 3, scope: !8887)
!8892 = !DILocation(line: 5229, column: 9, scope: !8887)
!8893 = !DILocation(line: 5229, column: 16, scope: !8887)
!8894 = !DILocation(line: 5232, column: 21, scope: !5601)
!8895 = !DILocation(line: 5232, column: 11, scope: !5601)
!8896 = !DILocation(line: 5232, column: 9, scope: !5601)
!8897 = !DILocation(line: 5233, column: 6, scope: !8898)
!8898 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 5233, column: 6)
!8899 = !DILocation(line: 5233, column: 6, scope: !5601)
!8900 = !DILocation(line: 5234, column: 10, scope: !8898)
!8901 = !DILocation(line: 5234, column: 3, scope: !8898)
!8902 = !DILocation(line: 5236, column: 21, scope: !5601)
!8903 = !DILocation(line: 5236, column: 2, scope: !5601)
!8904 = !DILocation(line: 5240, column: 22, scope: !5601)
!8905 = !DILocation(line: 5240, column: 11, scope: !5601)
!8906 = !DILocation(line: 5240, column: 9, scope: !5601)
!8907 = !DILocation(line: 5241, column: 6, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 5241, column: 6)
!8909 = !DILocation(line: 5241, column: 6, scope: !5601)
!8910 = !DILocation(line: 5242, column: 10, scope: !8908)
!8911 = !DILocation(line: 5242, column: 3, scope: !8908)
!8912 = !DILocation(line: 5252, column: 6, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 5252, column: 6)
!8914 = !DILocation(line: 5252, column: 12, scope: !8913)
!8915 = !DILocation(line: 5252, column: 19, scope: !8913)
!8916 = !DILocation(line: 5252, column: 6, scope: !5601)
!8917 = !DILocation(line: 5253, column: 3, scope: !8913)
!8918 = !DILocation(line: 5253, column: 9, scope: !8913)
!8919 = !DILocation(line: 5253, column: 20, scope: !8913)
!8920 = !DILocation(line: 5257, column: 6, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 5257, column: 6)
!8922 = !DILocation(line: 5257, column: 39, scope: !8921)
!8923 = !DILocation(line: 5258, column: 18, scope: !8921)
!8924 = !DILocation(line: 5258, column: 5, scope: !8921)
!8925 = !DILocation(line: 5257, column: 6, scope: !5601)
!8926 = !DILocation(line: 5260, column: 25, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 5258, column: 42)
!8928 = !DILocation(line: 5260, column: 3, scope: !8927)
!8929 = !DILocation(line: 5261, column: 2, scope: !8927)
!8930 = !DILocation(line: 5266, column: 25, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 5261, column: 9)
!8932 = !DILocation(line: 5266, column: 12, scope: !8931)
!8933 = !DILocation(line: 5266, column: 10, scope: !8931)
!8934 = !DILocation(line: 5267, column: 7, scope: !8935)
!8935 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 5267, column: 7)
!8936 = !DILocation(line: 5267, column: 7, scope: !8931)
!8937 = !DILocation(line: 5268, column: 11, scope: !8935)
!8938 = !DILocation(line: 5268, column: 4, scope: !8935)
!8939 = !DILocation(line: 5270, column: 25, scope: !8931)
!8940 = !DILocation(line: 5270, column: 3, scope: !8931)
!8941 = !DILocation(line: 5275, column: 21, scope: !5601)
!8942 = !DILocation(line: 5275, column: 11, scope: !5601)
!8943 = !DILocation(line: 5275, column: 9, scope: !5601)
!8944 = !DILocation(line: 5276, column: 6, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 5276, column: 6)
!8946 = !DILocation(line: 5276, column: 6, scope: !5601)
!8947 = !DILocation(line: 5277, column: 10, scope: !8945)
!8948 = !DILocation(line: 5277, column: 3, scope: !8945)
!8949 = !DILocation(line: 5280, column: 2, scope: !5601)
!8950 = !DILocation(line: 5283, column: 2, scope: !5601)
!8951 = !DILocation(line: 5284, column: 1, scope: !5601)
!8952 = distinct !DISubprogram(name: "xhci_init_driver", scope: !3, file: !3, line: 5374, type: !8953, scopeLine: 5376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !336)
!8953 = !DISubroutineType(types: !8954)
!8954 = !{null, !8955, !8956}
!8955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4891, size: 64)
!8956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8957, size: 64)
!8957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8958)
!8958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xhci_driver_overrides", file: !145, line: 1914, size: 192, elements: !8959)
!8959 = !{!8960, !8961, !8962}
!8960 = !DIDerivedType(tag: DW_TAG_member, name: "extra_priv_size", scope: !8958, file: !145, line: 1915, baseType: !409, size: 64)
!8961 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8958, file: !145, line: 1916, baseType: !4903, size: 64, offset: 64)
!8962 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8958, file: !145, line: 1917, baseType: !4903, size: 64, offset: 128)
!8963 = !DILocalVariable(name: "drv", arg: 1, scope: !8952, file: !3, line: 5374, type: !8955)
!8964 = !DILocation(line: 5374, column: 41, scope: !8952)
!8965 = !DILocalVariable(name: "over", arg: 2, scope: !8952, file: !3, line: 5375, type: !8956)
!8966 = !DILocation(line: 5375, column: 45, scope: !8952)
!8967 = !DILocation(line: 5377, column: 2, scope: !8952)
!8968 = !DILocation(line: 5377, column: 2, scope: !8969)
!8969 = distinct !DILexicalBlock(scope: !8970, file: !3, line: 5377, column: 2)
!8970 = distinct !DILexicalBlock(scope: !8952, file: !3, line: 5377, column: 2)
!8971 = !DILocation(line: 5377, column: 2, scope: !8970)
!8972 = !DILocation(line: 5377, column: 2, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8969, file: !3, line: 5377, column: 2)
!8974 = !DILocation(line: 5377, column: 2, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8973, file: !3, line: 5377, column: 2)
!8976 = !DILocation(line: 5377, column: 2, scope: !8977)
!8977 = distinct !DILexicalBlock(scope: !8973, file: !3, line: 5377, column: 2)
!8978 = !{i32 -2140589555, i32 -2140589526, i32 -2140589480, i32 -2140589422, i32 -2140589368, i32 -2140589314, i32 -2140589259, i32 -2140589228}
!8979 = !DILocation(line: 5377, column: 2, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 5377, column: 2)
!8981 = distinct !DILexicalBlock(scope: !8973, file: !3, line: 5377, column: 2)
!8982 = !{i32 -2140588781, i32 -2140588774, i32 -2140588720, i32 -2140588689, i32 -2140588659}
!8983 = !DILocation(line: 5377, column: 2, scope: !8981)
!8984 = !DILocation(line: 5380, column: 3, scope: !8952)
!8985 = !DILocation(line: 5380, column: 9, scope: !8952)
!8986 = !DILocation(line: 5382, column: 6, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8952, file: !3, line: 5382, column: 6)
!8988 = !DILocation(line: 5382, column: 6, scope: !8952)
!8989 = !DILocation(line: 5383, column: 25, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8987, file: !3, line: 5382, column: 12)
!8991 = !DILocation(line: 5383, column: 31, scope: !8990)
!8992 = !DILocation(line: 5383, column: 3, scope: !8990)
!8993 = !DILocation(line: 5383, column: 8, scope: !8990)
!8994 = !DILocation(line: 5383, column: 22, scope: !8990)
!8995 = !DILocation(line: 5384, column: 7, scope: !8996)
!8996 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 5384, column: 7)
!8997 = !DILocation(line: 5384, column: 13, scope: !8996)
!8998 = !DILocation(line: 5384, column: 7, scope: !8990)
!8999 = !DILocation(line: 5385, column: 17, scope: !8996)
!9000 = !DILocation(line: 5385, column: 23, scope: !8996)
!9001 = !DILocation(line: 5385, column: 4, scope: !8996)
!9002 = !DILocation(line: 5385, column: 9, scope: !8996)
!9003 = !DILocation(line: 5385, column: 15, scope: !8996)
!9004 = !DILocation(line: 5386, column: 7, scope: !9005)
!9005 = distinct !DILexicalBlock(scope: !8990, file: !3, line: 5386, column: 7)
!9006 = !DILocation(line: 5386, column: 13, scope: !9005)
!9007 = !DILocation(line: 5386, column: 7, scope: !8990)
!9008 = !DILocation(line: 5387, column: 17, scope: !9005)
!9009 = !DILocation(line: 5387, column: 23, scope: !9005)
!9010 = !DILocation(line: 5387, column: 4, scope: !9005)
!9011 = !DILocation(line: 5387, column: 9, scope: !9005)
!9012 = !DILocation(line: 5387, column: 15, scope: !9005)
!9013 = !DILocation(line: 5388, column: 2, scope: !8990)
!9014 = !DILocation(line: 5389, column: 1, scope: !8952)
!9015 = distinct !DISubprogram(name: "xhci_hcd_fini", scope: !3, file: !3, line: 5428, type: !2610, scopeLine: 5429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9016 = !DILocation(line: 5430, column: 2, scope: !9015)
!9017 = !DILocation(line: 5431, column: 1, scope: !9015)
!9018 = distinct !DISubprogram(name: "xhci_hcd_init", scope: !3, file: !3, line: 5396, type: !9019, scopeLine: 5397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9019 = !DISubroutineType(types: !9020)
!9020 = !{!265}
!9021 = !DILocation(line: 5402, column: 2, scope: !9018)
!9022 = !DILocation(line: 5402, column: 2, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 5402, column: 2)
!9024 = !DILocation(line: 5403, column: 2, scope: !9018)
!9025 = !DILocation(line: 5403, column: 2, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 5403, column: 2)
!9027 = !DILocation(line: 5404, column: 2, scope: !9018)
!9028 = !DILocation(line: 5404, column: 2, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 5404, column: 2)
!9030 = !DILocation(line: 5408, column: 2, scope: !9018)
!9031 = !DILocation(line: 5408, column: 2, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 5408, column: 2)
!9033 = !DILocation(line: 5409, column: 2, scope: !9018)
!9034 = !DILocation(line: 5409, column: 2, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 5409, column: 2)
!9036 = !DILocation(line: 5410, column: 2, scope: !9018)
!9037 = !DILocation(line: 5410, column: 2, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 5410, column: 2)
!9039 = !DILocation(line: 5411, column: 2, scope: !9018)
!9040 = !DILocation(line: 5411, column: 2, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 5411, column: 2)
!9042 = !DILocation(line: 5412, column: 2, scope: !9018)
!9043 = !DILocation(line: 5412, column: 2, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 5412, column: 2)
!9045 = !DILocation(line: 5414, column: 2, scope: !9018)
!9046 = !DILocation(line: 5414, column: 2, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 5414, column: 2)
!9048 = !DILocation(line: 5416, column: 6, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9018, file: !3, line: 5416, column: 6)
!9050 = !DILocation(line: 5416, column: 6, scope: !9018)
!9051 = !DILocation(line: 5417, column: 3, scope: !9049)
!9052 = !DILocation(line: 5419, column: 2, scope: !9018)
!9053 = !DILocation(line: 5421, column: 2, scope: !9018)
!9054 = !DILocation(line: 5422, column: 1, scope: !9018)
!9055 = distinct !DISubprogram(name: "xhci_setup_msix", scope: !3, file: !3, line: 322, type: !5802, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9056 = !DILocalVariable(name: "xhci", arg: 1, scope: !9055, file: !3, line: 322, type: !4497)
!9057 = !DILocation(line: 322, column: 45, scope: !9055)
!9058 = !DILocalVariable(name: "i", scope: !9055, file: !3, line: 324, type: !265)
!9059 = !DILocation(line: 324, column: 6, scope: !9055)
!9060 = !DILocalVariable(name: "ret", scope: !9055, file: !3, line: 324, type: !265)
!9061 = !DILocation(line: 324, column: 9, scope: !9055)
!9062 = !DILocalVariable(name: "hcd", scope: !9055, file: !3, line: 325, type: !4501)
!9063 = !DILocation(line: 325, column: 18, scope: !9055)
!9064 = !DILocation(line: 325, column: 36, scope: !9055)
!9065 = !DILocation(line: 325, column: 24, scope: !9055)
!9066 = !DILocalVariable(name: "pdev", scope: !9055, file: !3, line: 326, type: !209)
!9067 = !DILocation(line: 326, column: 18, scope: !9055)
!9068 = !DILocalVariable(name: "__mptr", scope: !9069, file: !3, line: 326, type: !208)
!9069 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 326, column: 25)
!9070 = !DILocation(line: 326, column: 25, scope: !9069)
!9071 = !DILocation(line: 326, column: 25, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9069, file: !3, line: 326, column: 25)
!9073 = !DILocalVariable(name: "__UNIQUE_ID___x255", scope: !9074, file: !3, line: 335, type: !7)
!9074 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 335, column: 21)
!9075 = !DILocation(line: 335, column: 21, scope: !9074)
!9076 = !DILocalVariable(name: "__UNIQUE_ID___y256", scope: !9074, file: !3, line: 335, type: !7)
!9077 = !DILocation(line: 335, column: 2, scope: !9055)
!9078 = !DILocation(line: 335, column: 8, scope: !9055)
!9079 = !DILocation(line: 335, column: 19, scope: !9055)
!9080 = !DILocation(line: 338, column: 30, scope: !9055)
!9081 = !DILocation(line: 338, column: 36, scope: !9055)
!9082 = !DILocation(line: 338, column: 42, scope: !9055)
!9083 = !DILocation(line: 338, column: 54, scope: !9055)
!9084 = !DILocation(line: 338, column: 60, scope: !9055)
!9085 = !DILocation(line: 338, column: 8, scope: !9055)
!9086 = !DILocation(line: 338, column: 6, scope: !9055)
!9087 = !DILocation(line: 340, column: 6, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 340, column: 6)
!9089 = !DILocation(line: 340, column: 10, scope: !9088)
!9090 = !DILocation(line: 340, column: 6, scope: !9055)
!9091 = !DILocation(line: 341, column: 18, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9088, file: !3, line: 340, column: 15)
!9093 = !DILocation(line: 341, column: 3, scope: !9092)
!9094 = !DILocation(line: 343, column: 10, scope: !9092)
!9095 = !DILocation(line: 343, column: 3, scope: !9092)
!9096 = !DILocation(line: 346, column: 9, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 346, column: 2)
!9098 = !DILocation(line: 346, column: 7, scope: !9097)
!9099 = !DILocation(line: 346, column: 14, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 346, column: 2)
!9101 = !DILocation(line: 346, column: 18, scope: !9100)
!9102 = !DILocation(line: 346, column: 24, scope: !9100)
!9103 = !DILocation(line: 346, column: 16, scope: !9100)
!9104 = !DILocation(line: 346, column: 2, scope: !9097)
!9105 = !DILocation(line: 347, column: 36, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9100, file: !3, line: 346, column: 41)
!9107 = !DILocation(line: 347, column: 42, scope: !9106)
!9108 = !DILocation(line: 347, column: 21, scope: !9106)
!9109 = !DILocation(line: 348, column: 29, scope: !9106)
!9110 = !DILocation(line: 348, column: 17, scope: !9106)
!9111 = !DILocation(line: 347, column: 9, scope: !9106)
!9112 = !DILocation(line: 347, column: 7, scope: !9106)
!9113 = !DILocation(line: 349, column: 7, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9106, file: !3, line: 349, column: 7)
!9115 = !DILocation(line: 349, column: 7, scope: !9106)
!9116 = !DILocation(line: 350, column: 4, scope: !9114)
!9117 = !DILocation(line: 351, column: 2, scope: !9106)
!9118 = !DILocation(line: 346, column: 37, scope: !9100)
!9119 = !DILocation(line: 346, column: 2, scope: !9100)
!9120 = distinct !{!9120, !9104, !9121}
!9121 = !DILocation(line: 351, column: 2, scope: !9097)
!9122 = !DILocation(line: 353, column: 2, scope: !9055)
!9123 = !DILocation(line: 353, column: 7, scope: !9055)
!9124 = !DILocation(line: 353, column: 20, scope: !9055)
!9125 = !DILocation(line: 354, column: 9, scope: !9055)
!9126 = !DILocation(line: 354, column: 2, scope: !9055)
!9127 = !DILabel(scope: !9055, name: "disable_msix", file: !3, line: 356)
!9128 = !DILocation(line: 356, column: 1, scope: !9055)
!9129 = !DILocation(line: 357, column: 17, scope: !9055)
!9130 = !DILocation(line: 357, column: 2, scope: !9055)
!9131 = !DILocation(line: 358, column: 2, scope: !9055)
!9132 = !DILocation(line: 358, column: 9, scope: !9055)
!9133 = !DILocation(line: 358, column: 13, scope: !9055)
!9134 = !DILocation(line: 359, column: 27, scope: !9055)
!9135 = !DILocation(line: 359, column: 33, scope: !9055)
!9136 = !DILocation(line: 359, column: 12, scope: !9055)
!9137 = !DILocation(line: 359, column: 49, scope: !9055)
!9138 = !DILocation(line: 359, column: 37, scope: !9055)
!9139 = !DILocation(line: 359, column: 3, scope: !9055)
!9140 = distinct !{!9140, !9131, !9141}
!9141 = !DILocation(line: 359, column: 54, scope: !9055)
!9142 = !DILocation(line: 360, column: 23, scope: !9055)
!9143 = !DILocation(line: 360, column: 2, scope: !9055)
!9144 = !DILocation(line: 361, column: 9, scope: !9055)
!9145 = !DILocation(line: 361, column: 2, scope: !9055)
!9146 = !DILocation(line: 362, column: 1, scope: !9055)
!9147 = distinct !DISubprogram(name: "xhci_setup_msi", scope: !3, file: !3, line: 293, type: !5802, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9148 = !DILocalVariable(name: "xhci", arg: 1, scope: !9147, file: !3, line: 293, type: !4497)
!9149 = !DILocation(line: 293, column: 44, scope: !9147)
!9150 = !DILocalVariable(name: "ret", scope: !9147, file: !3, line: 295, type: !265)
!9151 = !DILocation(line: 295, column: 6, scope: !9147)
!9152 = !DILocalVariable(name: "pdev", scope: !9147, file: !3, line: 299, type: !209)
!9153 = !DILocation(line: 299, column: 19, scope: !9147)
!9154 = !DILocalVariable(name: "__mptr", scope: !9155, file: !3, line: 299, type: !208)
!9155 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 299, column: 26)
!9156 = !DILocation(line: 299, column: 26, scope: !9155)
!9157 = !DILocation(line: 299, column: 26, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9155, file: !3, line: 299, column: 26)
!9159 = !DILocation(line: 301, column: 30, scope: !9147)
!9160 = !DILocation(line: 301, column: 8, scope: !9147)
!9161 = !DILocation(line: 301, column: 6, scope: !9147)
!9162 = !DILocation(line: 302, column: 6, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 302, column: 6)
!9164 = !DILocation(line: 302, column: 10, scope: !9163)
!9165 = !DILocation(line: 302, column: 6, scope: !9147)
!9166 = !DILocation(line: 303, column: 18, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9163, file: !3, line: 302, column: 15)
!9168 = !DILocation(line: 303, column: 3, scope: !9167)
!9169 = !DILocation(line: 305, column: 10, scope: !9167)
!9170 = !DILocation(line: 305, column: 3, scope: !9167)
!9171 = !DILocation(line: 308, column: 20, scope: !9147)
!9172 = !DILocation(line: 308, column: 26, scope: !9147)
!9173 = !DILocation(line: 309, column: 32, scope: !9147)
!9174 = !DILocation(line: 309, column: 20, scope: !9147)
!9175 = !DILocation(line: 308, column: 8, scope: !9147)
!9176 = !DILocation(line: 308, column: 6, scope: !9147)
!9177 = !DILocation(line: 310, column: 6, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9147, file: !3, line: 310, column: 6)
!9179 = !DILocation(line: 310, column: 6, scope: !9147)
!9180 = !DILocation(line: 311, column: 18, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9178, file: !3, line: 310, column: 11)
!9182 = !DILocation(line: 311, column: 3, scope: !9181)
!9183 = !DILocation(line: 313, column: 24, scope: !9181)
!9184 = !DILocation(line: 313, column: 3, scope: !9181)
!9185 = !DILocation(line: 314, column: 2, scope: !9181)
!9186 = !DILocation(line: 316, column: 9, scope: !9147)
!9187 = !DILocation(line: 316, column: 2, scope: !9147)
!9188 = !DILocation(line: 317, column: 1, scope: !9147)
!9189 = distinct !DISubprogram(name: "request_irq", scope: !290, file: !290, line: 157, type: !9190, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9190 = !DISubroutineType(types: !9191)
!9191 = !{!265, !7, !9192, !248, !244, !208}
!9192 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_handler_t", file: !290, line: 92, baseType: !9193)
!9193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9194, size: 64)
!9194 = !DISubroutineType(types: !9195)
!9195 = !{!4900, !265, !208}
!9196 = !DILocalVariable(name: "irq", arg: 1, scope: !9189, file: !290, line: 157, type: !7)
!9197 = !DILocation(line: 157, column: 26, scope: !9189)
!9198 = !DILocalVariable(name: "handler", arg: 2, scope: !9189, file: !290, line: 157, type: !9192)
!9199 = !DILocation(line: 157, column: 45, scope: !9189)
!9200 = !DILocalVariable(name: "flags", arg: 3, scope: !9189, file: !290, line: 157, type: !248)
!9201 = !DILocation(line: 157, column: 68, scope: !9189)
!9202 = !DILocalVariable(name: "name", arg: 4, scope: !9189, file: !290, line: 158, type: !244)
!9203 = !DILocation(line: 158, column: 18, scope: !9189)
!9204 = !DILocalVariable(name: "dev", arg: 5, scope: !9189, file: !290, line: 158, type: !208)
!9205 = !DILocation(line: 158, column: 30, scope: !9189)
!9206 = !DILocation(line: 160, column: 30, scope: !9189)
!9207 = !DILocation(line: 160, column: 35, scope: !9189)
!9208 = !DILocation(line: 160, column: 50, scope: !9189)
!9209 = !DILocation(line: 160, column: 57, scope: !9189)
!9210 = !DILocation(line: 160, column: 63, scope: !9189)
!9211 = !DILocation(line: 160, column: 9, scope: !9189)
!9212 = !DILocation(line: 160, column: 2, scope: !9189)
!9213 = distinct !DISubprogram(name: "pci_alloc_irq_vectors", scope: !211, file: !211, line: 1800, type: !9214, scopeLine: 1802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9214 = !DISubroutineType(types: !9215)
!9215 = !{!265, !209, !7, !7, !7}
!9216 = !DILocalVariable(name: "dev", arg: 1, scope: !9213, file: !211, line: 1800, type: !209)
!9217 = !DILocation(line: 1800, column: 39, scope: !9213)
!9218 = !DILocalVariable(name: "min_vecs", arg: 2, scope: !9213, file: !211, line: 1800, type: !7)
!9219 = !DILocation(line: 1800, column: 57, scope: !9213)
!9220 = !DILocalVariable(name: "max_vecs", arg: 3, scope: !9213, file: !211, line: 1801, type: !7)
!9221 = !DILocation(line: 1801, column: 22, scope: !9213)
!9222 = !DILocalVariable(name: "flags", arg: 4, scope: !9213, file: !211, line: 1801, type: !7)
!9223 = !DILocation(line: 1801, column: 45, scope: !9213)
!9224 = !DILocation(line: 1803, column: 40, scope: !9213)
!9225 = !DILocation(line: 1803, column: 45, scope: !9213)
!9226 = !DILocation(line: 1803, column: 55, scope: !9213)
!9227 = !DILocation(line: 1803, column: 65, scope: !9213)
!9228 = !DILocation(line: 1803, column: 9, scope: !9213)
!9229 = !DILocation(line: 1803, column: 2, scope: !9213)
!9230 = distinct !DISubprogram(name: "lo_hi_readq", scope: !9231, file: !9231, line: 8, type: !9232, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9231 = !DIFile(filename: "./include/linux/io-64-nonatomic-lo-hi.h", directory: "/home/lizy2001/genbc/linux")
!9232 = !DISubroutineType(types: !9233)
!9233 = !{!240, !5726}
!9234 = !DILocalVariable(name: "addr", arg: 1, scope: !9230, file: !9231, line: 8, type: !5726)
!9235 = !DILocation(line: 8, column: 62, scope: !9230)
!9236 = !DILocalVariable(name: "p", scope: !9230, file: !9231, line: 10, type: !9237)
!9237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9238, size: 64)
!9238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9239)
!9239 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !204)
!9240 = !DILocation(line: 10, column: 30, scope: !9230)
!9241 = !DILocation(line: 10, column: 34, scope: !9230)
!9242 = !DILocalVariable(name: "low", scope: !9230, file: !9231, line: 11, type: !204)
!9243 = !DILocation(line: 11, column: 6, scope: !9230)
!9244 = !DILocalVariable(name: "high", scope: !9230, file: !9231, line: 11, type: !204)
!9245 = !DILocation(line: 11, column: 11, scope: !9230)
!9246 = !DILocation(line: 13, column: 14, scope: !9230)
!9247 = !DILocation(line: 13, column: 8, scope: !9230)
!9248 = !DILocation(line: 13, column: 6, scope: !9230)
!9249 = !DILocation(line: 14, column: 15, scope: !9230)
!9250 = !DILocation(line: 14, column: 17, scope: !9230)
!9251 = !DILocation(line: 14, column: 9, scope: !9230)
!9252 = !DILocation(line: 14, column: 7, scope: !9230)
!9253 = !DILocation(line: 16, column: 9, scope: !9230)
!9254 = !DILocation(line: 16, column: 21, scope: !9230)
!9255 = !DILocation(line: 16, column: 16, scope: !9230)
!9256 = !DILocation(line: 16, column: 26, scope: !9230)
!9257 = !DILocation(line: 16, column: 13, scope: !9230)
!9258 = !DILocation(line: 16, column: 2, scope: !9230)
!9259 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !8388, file: !8388, line: 656, type: !2610, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9260 = !DILocalVariable(name: "__edi", scope: !9261, file: !8388, line: 658, type: !248)
!9261 = distinct !DILexicalBlock(scope: !9259, file: !8388, line: 658, column: 2)
!9262 = !DILocation(line: 658, column: 2, scope: !9261)
!9263 = !DILocalVariable(name: "__esi", scope: !9261, file: !8388, line: 658, type: !248)
!9264 = !DILocalVariable(name: "__edx", scope: !9261, file: !8388, line: 658, type: !248)
!9265 = !DILocalVariable(name: "__ecx", scope: !9261, file: !8388, line: 658, type: !248)
!9266 = !DILocalVariable(name: "__eax", scope: !9261, file: !8388, line: 658, type: !248)
!9267 = !{i32 -2145469179, i32 -2145468447, i32 -2145468213, i32 -2145468162, i32 -2145468134, i32 -2145468109, i32 -2145468425, i32 -2145468412, i32 -2145467974, i32 -2145467855, i32 -2145468320, i32 -2145468293, i32 -2145468265, i32 -2145468235}
!9268 = !DILocation(line: 659, column: 1, scope: !9259)
!9269 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !8388, file: !8388, line: 661, type: !2610, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9270 = !DILocalVariable(name: "__edi", scope: !9271, file: !8388, line: 663, type: !248)
!9271 = distinct !DILexicalBlock(scope: !9269, file: !8388, line: 663, column: 2)
!9272 = !DILocation(line: 663, column: 2, scope: !9271)
!9273 = !DILocalVariable(name: "__esi", scope: !9271, file: !8388, line: 663, type: !248)
!9274 = !DILocalVariable(name: "__edx", scope: !9271, file: !8388, line: 663, type: !248)
!9275 = !DILocalVariable(name: "__ecx", scope: !9271, file: !8388, line: 663, type: !248)
!9276 = !DILocalVariable(name: "__eax", scope: !9271, file: !8388, line: 663, type: !248)
!9277 = !{i32 -2145466595, i32 -2145465865, i32 -2145465631, i32 -2145465580, i32 -2145465552, i32 -2145465527, i32 -2145465843, i32 -2145465830, i32 -2145465392, i32 -2145465273, i32 -2145465738, i32 -2145465711, i32 -2145465683, i32 -2145465653}
!9278 = !DILocation(line: 664, column: 1, scope: !9269)
!9279 = distinct !DISubprogram(name: "kasan_check_write", scope: !9280, file: !9280, line: 38, type: !9281, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9280 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!9281 = !DISubroutineType(types: !9282)
!9282 = !{!569, !5726, !7}
!9283 = !DILocalVariable(name: "p", arg: 1, scope: !9279, file: !9280, line: 38, type: !5726)
!9284 = !DILocation(line: 38, column: 59, scope: !9279)
!9285 = !DILocalVariable(name: "size", arg: 2, scope: !9279, file: !9280, line: 38, type: !7)
!9286 = !DILocation(line: 38, column: 75, scope: !9279)
!9287 = !DILocation(line: 40, column: 2, scope: !9279)
!9288 = distinct !DISubprogram(name: "kcsan_check_access", scope: !9289, file: !9289, line: 178, type: !9290, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9289 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!9290 = !DISubroutineType(types: !9291)
!9291 = !{null, !5726, !409, !265}
!9292 = !DILocalVariable(name: "ptr", arg: 1, scope: !9288, file: !9289, line: 178, type: !5726)
!9293 = !DILocation(line: 178, column: 60, scope: !9288)
!9294 = !DILocalVariable(name: "size", arg: 2, scope: !9288, file: !9289, line: 178, type: !409)
!9295 = !DILocation(line: 178, column: 72, scope: !9288)
!9296 = !DILocalVariable(name: "type", arg: 3, scope: !9288, file: !9289, line: 179, type: !265)
!9297 = !DILocation(line: 179, column: 15, scope: !9288)
!9298 = !DILocation(line: 179, column: 23, scope: !9288)
!9299 = distinct !DISubprogram(name: "xhci_write_64", scope: !145, file: !145, line: 1965, type: !9300, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9300 = !DISubroutineType(types: !9301)
!9301 = !{null, !4497, !5715, !6315}
!9302 = !DILocalVariable(name: "xhci", arg: 1, scope: !9299, file: !145, line: 1965, type: !4497)
!9303 = !DILocation(line: 1965, column: 51, scope: !9299)
!9304 = !DILocalVariable(name: "val", arg: 2, scope: !9299, file: !145, line: 1966, type: !5715)
!9305 = !DILocation(line: 1966, column: 16, scope: !9299)
!9306 = !DILocalVariable(name: "regs", arg: 3, scope: !9299, file: !145, line: 1966, type: !6315)
!9307 = !DILocation(line: 1966, column: 37, scope: !9299)
!9308 = !DILocation(line: 1968, column: 15, scope: !9299)
!9309 = !DILocation(line: 1968, column: 20, scope: !9299)
!9310 = !DILocation(line: 1968, column: 2, scope: !9299)
!9311 = !DILocation(line: 1969, column: 1, scope: !9299)
!9312 = distinct !DISubprogram(name: "lo_hi_writeq", scope: !9231, file: !9231, line: 19, type: !9313, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9313 = !DISubroutineType(types: !9314)
!9314 = !{null, !240, !5796}
!9315 = !DILocalVariable(name: "val", arg: 1, scope: !9312, file: !9231, line: 19, type: !240)
!9316 = !DILocation(line: 19, column: 39, scope: !9312)
!9317 = !DILocalVariable(name: "addr", arg: 2, scope: !9312, file: !9231, line: 19, type: !5796)
!9318 = !DILocation(line: 19, column: 67, scope: !9312)
!9319 = !DILocation(line: 21, column: 9, scope: !9312)
!9320 = !DILocation(line: 21, column: 14, scope: !9312)
!9321 = !DILocation(line: 21, column: 2, scope: !9312)
!9322 = !DILocation(line: 22, column: 9, scope: !9312)
!9323 = !DILocation(line: 22, column: 13, scope: !9312)
!9324 = !DILocation(line: 22, column: 20, scope: !9312)
!9325 = !DILocation(line: 22, column: 25, scope: !9312)
!9326 = !DILocation(line: 22, column: 2, scope: !9312)
!9327 = !DILocation(line: 23, column: 1, scope: !9312)
!9328 = distinct !DISubprogram(name: "device_iommu_mapped", scope: !73, file: !73, line: 601, type: !9329, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9329 = !DISubroutineType(types: !9330)
!9330 = !{!569, !305}
!9331 = !DILocalVariable(name: "dev", arg: 1, scope: !9328, file: !73, line: 601, type: !305)
!9332 = !DILocation(line: 601, column: 55, scope: !9328)
!9333 = !DILocation(line: 603, column: 10, scope: !9328)
!9334 = !DILocation(line: 603, column: 15, scope: !9328)
!9335 = !DILocation(line: 603, column: 27, scope: !9328)
!9336 = !DILocation(line: 603, column: 2, scope: !9328)
!9337 = distinct !DISubprogram(name: "xhci_compliance_mode_recovery_timer_quirk_check", scope: !3, file: !3, line: 541, type: !3687, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9338 = !DILocalVariable(name: "dmi_product_name", scope: !9337, file: !3, line: 543, type: !244)
!9339 = !DILocation(line: 543, column: 14, scope: !9337)
!9340 = !DILocalVariable(name: "dmi_sys_vendor", scope: !9337, file: !3, line: 543, type: !244)
!9341 = !DILocation(line: 543, column: 33, scope: !9337)
!9342 = !DILocation(line: 545, column: 21, scope: !9337)
!9343 = !DILocation(line: 545, column: 19, scope: !9337)
!9344 = !DILocation(line: 546, column: 19, scope: !9337)
!9345 = !DILocation(line: 546, column: 17, scope: !9337)
!9346 = !DILocation(line: 547, column: 7, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 547, column: 6)
!9348 = !DILocation(line: 547, column: 24, scope: !9347)
!9349 = !DILocation(line: 547, column: 28, scope: !9347)
!9350 = !DILocation(line: 547, column: 6, scope: !9337)
!9351 = !DILocation(line: 548, column: 3, scope: !9347)
!9352 = !DILocation(line: 550, column: 15, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 550, column: 6)
!9354 = !DILocation(line: 550, column: 8, scope: !9353)
!9355 = !DILocation(line: 550, column: 6, scope: !9337)
!9356 = !DILocation(line: 551, column: 3, scope: !9353)
!9357 = !DILocation(line: 553, column: 13, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 553, column: 6)
!9359 = !DILocation(line: 553, column: 6, scope: !9358)
!9360 = !DILocation(line: 553, column: 39, scope: !9358)
!9361 = !DILocation(line: 554, column: 11, scope: !9358)
!9362 = !DILocation(line: 554, column: 4, scope: !9358)
!9363 = !DILocation(line: 554, column: 37, scope: !9358)
!9364 = !DILocation(line: 555, column: 11, scope: !9358)
!9365 = !DILocation(line: 555, column: 4, scope: !9358)
!9366 = !DILocation(line: 555, column: 37, scope: !9358)
!9367 = !DILocation(line: 556, column: 11, scope: !9358)
!9368 = !DILocation(line: 556, column: 4, scope: !9358)
!9369 = !DILocation(line: 553, column: 6, scope: !9337)
!9370 = !DILocation(line: 557, column: 3, scope: !9358)
!9371 = !DILocation(line: 559, column: 2, scope: !9337)
!9372 = !DILocation(line: 560, column: 1, scope: !9337)
!9373 = distinct !DISubprogram(name: "compliance_mode_recovery", scope: !3, file: !3, line: 475, type: !4044, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9374 = !DILocation(line: 363, column: 74, scope: !7831, inlinedAt: !9375)
!9375 = distinct !DILocation(line: 509, column: 14, scope: !9376)
!9376 = distinct !DILexicalBlock(scope: !9373, file: !3, line: 507, column: 6)
!9377 = !DILocalVariable(name: "t", arg: 1, scope: !9373, file: !3, line: 475, type: !4046)
!9378 = !DILocation(line: 475, column: 57, scope: !9373)
!9379 = !DILocalVariable(name: "xhci", scope: !9373, file: !3, line: 477, type: !4497)
!9380 = !DILocation(line: 477, column: 19, scope: !9373)
!9381 = !DILocalVariable(name: "hcd", scope: !9373, file: !3, line: 478, type: !4501)
!9382 = !DILocation(line: 478, column: 18, scope: !9373)
!9383 = !DILocalVariable(name: "rhub", scope: !9373, file: !3, line: 479, type: !5408)
!9384 = !DILocation(line: 479, column: 19, scope: !9373)
!9385 = !DILocalVariable(name: "temp", scope: !9373, file: !3, line: 480, type: !204)
!9386 = !DILocation(line: 480, column: 6, scope: !9373)
!9387 = !DILocalVariable(name: "i", scope: !9373, file: !3, line: 481, type: !265)
!9388 = !DILocation(line: 481, column: 6, scope: !9373)
!9389 = !DILocalVariable(name: "__mptr", scope: !9390, file: !3, line: 483, type: !208)
!9390 = distinct !DILexicalBlock(scope: !9373, file: !3, line: 483, column: 9)
!9391 = !DILocation(line: 483, column: 9, scope: !9390)
!9392 = !DILocation(line: 483, column: 9, scope: !9393)
!9393 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 483, column: 9)
!9394 = !DILocation(line: 483, column: 7, scope: !9373)
!9395 = !DILocation(line: 484, column: 10, scope: !9373)
!9396 = !DILocation(line: 484, column: 16, scope: !9373)
!9397 = !DILocation(line: 484, column: 7, scope: !9373)
!9398 = !DILocation(line: 486, column: 9, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9373, file: !3, line: 486, column: 2)
!9400 = !DILocation(line: 486, column: 7, scope: !9399)
!9401 = !DILocation(line: 486, column: 14, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9399, file: !3, line: 486, column: 2)
!9403 = !DILocation(line: 486, column: 18, scope: !9402)
!9404 = !DILocation(line: 486, column: 24, scope: !9402)
!9405 = !DILocation(line: 486, column: 16, scope: !9402)
!9406 = !DILocation(line: 486, column: 2, scope: !9399)
!9407 = !DILocation(line: 487, column: 16, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9402, file: !3, line: 486, column: 40)
!9409 = !DILocation(line: 487, column: 22, scope: !9408)
!9410 = !DILocation(line: 487, column: 28, scope: !9408)
!9411 = !DILocation(line: 487, column: 32, scope: !9408)
!9412 = !DILocation(line: 487, column: 10, scope: !9408)
!9413 = !DILocation(line: 487, column: 8, scope: !9408)
!9414 = !DILocation(line: 488, column: 8, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9408, file: !3, line: 488, column: 7)
!9416 = !DILocation(line: 488, column: 13, scope: !9415)
!9417 = !DILocation(line: 488, column: 30, scope: !9415)
!9418 = !DILocation(line: 488, column: 7, scope: !9408)
!9419 = !DILocation(line: 493, column: 19, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 488, column: 58)
!9421 = !DILocation(line: 495, column: 6, scope: !9420)
!9422 = !DILocation(line: 495, column: 8, scope: !9420)
!9423 = !DILocation(line: 493, column: 4, scope: !9420)
!9424 = !DILocation(line: 496, column: 19, scope: !9420)
!9425 = !DILocation(line: 496, column: 4, scope: !9420)
!9426 = !DILocation(line: 498, column: 10, scope: !9420)
!9427 = !DILocation(line: 498, column: 16, scope: !9420)
!9428 = !DILocation(line: 498, column: 8, scope: !9420)
!9429 = !DILocation(line: 500, column: 8, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9420, file: !3, line: 500, column: 8)
!9431 = !DILocation(line: 500, column: 13, scope: !9430)
!9432 = !DILocation(line: 500, column: 19, scope: !9430)
!9433 = !DILocation(line: 500, column: 8, scope: !9420)
!9434 = !DILocation(line: 501, column: 29, scope: !9430)
!9435 = !DILocation(line: 501, column: 5, scope: !9430)
!9436 = !DILocation(line: 503, column: 27, scope: !9420)
!9437 = !DILocation(line: 503, column: 4, scope: !9420)
!9438 = !DILocation(line: 504, column: 3, scope: !9420)
!9439 = !DILocation(line: 505, column: 2, scope: !9408)
!9440 = !DILocation(line: 486, column: 36, scope: !9402)
!9441 = !DILocation(line: 486, column: 2, scope: !9402)
!9442 = distinct !{!9442, !9406, !9443}
!9443 = !DILocation(line: 505, column: 2, scope: !9399)
!9444 = !DILocation(line: 507, column: 6, scope: !9376)
!9445 = !DILocation(line: 507, column: 12, scope: !9376)
!9446 = !DILocation(line: 507, column: 37, scope: !9376)
!9447 = !DILocation(line: 507, column: 43, scope: !9376)
!9448 = !DILocation(line: 507, column: 34, scope: !9376)
!9449 = !DILocation(line: 507, column: 54, scope: !9376)
!9450 = !DILocation(line: 507, column: 27, scope: !9376)
!9451 = !DILocation(line: 507, column: 6, scope: !9373)
!9452 = !DILocation(line: 508, column: 14, scope: !9376)
!9453 = !DILocation(line: 508, column: 20, scope: !9376)
!9454 = !DILocation(line: 509, column: 4, scope: !9376)
!9455 = !DILocation(line: 365, column: 27, scope: !7845, inlinedAt: !9375)
!9456 = !DILocation(line: 365, column: 6, scope: !7845, inlinedAt: !9375)
!9457 = !DILocation(line: 365, column: 6, scope: !7831, inlinedAt: !9375)
!9458 = !DILocation(line: 366, column: 12, scope: !7849, inlinedAt: !9375)
!9459 = !DILocation(line: 366, column: 14, scope: !7849, inlinedAt: !9375)
!9460 = !DILocation(line: 366, column: 7, scope: !7850, inlinedAt: !9375)
!9461 = !DILocation(line: 367, column: 4, scope: !7849, inlinedAt: !9375)
!9462 = !DILocation(line: 368, column: 28, scope: !7850, inlinedAt: !9375)
!9463 = !DILocation(line: 368, column: 10, scope: !7850, inlinedAt: !9375)
!9464 = !DILocation(line: 368, column: 3, scope: !7850, inlinedAt: !9375)
!9465 = !DILocation(line: 370, column: 29, scope: !7858, inlinedAt: !9375)
!9466 = !DILocation(line: 370, column: 10, scope: !7858, inlinedAt: !9375)
!9467 = !DILocation(line: 370, column: 3, scope: !7858, inlinedAt: !9375)
!9468 = !DILocation(line: 372, column: 1, scope: !7831, inlinedAt: !9375)
!9469 = !DILocation(line: 509, column: 12, scope: !9376)
!9470 = !DILocation(line: 508, column: 3, scope: !9376)
!9471 = !DILocation(line: 510, column: 1, scope: !9373)
!9472 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !7832, file: !7832, line: 308, type: !7833, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9473 = !DILocalVariable(name: "m", arg: 1, scope: !9472, file: !7832, line: 308, type: !3542)
!9474 = !DILocation(line: 308, column: 66, scope: !9472)
!9475 = !DILocation(line: 310, column: 10, scope: !9472)
!9476 = !DILocation(line: 310, column: 12, scope: !9472)
!9477 = !DILocation(line: 310, column: 34, scope: !9472)
!9478 = !DILocation(line: 310, column: 39, scope: !9472)
!9479 = !DILocation(line: 310, column: 2, scope: !9472)
!9480 = distinct !DISubprogram(name: "xhci_get_endpoint_flag_from_index", scope: !3, file: !3, line: 1321, type: !7928, scopeLine: 1322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9481 = !DILocalVariable(name: "ep_index", arg: 1, scope: !9480, file: !3, line: 1321, type: !7)
!9482 = !DILocation(line: 1321, column: 68, scope: !9480)
!9483 = !DILocation(line: 1323, column: 15, scope: !9480)
!9484 = !DILocation(line: 1323, column: 24, scope: !9480)
!9485 = !DILocation(line: 1323, column: 11, scope: !9480)
!9486 = !DILocation(line: 1323, column: 2, scope: !9480)
!9487 = distinct !DISubprogram(name: "xhci_setup_input_ctx_for_config_ep", scope: !3, file: !3, line: 2986, type: !9488, scopeLine: 2991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9488 = !DISubroutineType(types: !9489)
!9489 = !{null, !4497, !5251, !5251, !8108, !204, !204}
!9490 = !DILocalVariable(name: "xhci", arg: 1, scope: !9487, file: !3, line: 2986, type: !4497)
!9491 = !DILocation(line: 2986, column: 65, scope: !9487)
!9492 = !DILocalVariable(name: "in_ctx", arg: 2, scope: !9487, file: !3, line: 2987, type: !5251)
!9493 = !DILocation(line: 2987, column: 30, scope: !9487)
!9494 = !DILocalVariable(name: "out_ctx", arg: 3, scope: !9487, file: !3, line: 2988, type: !5251)
!9495 = !DILocation(line: 2988, column: 30, scope: !9487)
!9496 = !DILocalVariable(name: "ctrl_ctx", arg: 4, scope: !9487, file: !3, line: 2989, type: !8108)
!9497 = !DILocation(line: 2989, column: 34, scope: !9487)
!9498 = !DILocalVariable(name: "add_flags", arg: 5, scope: !9487, file: !3, line: 2990, type: !204)
!9499 = !DILocation(line: 2990, column: 7, scope: !9487)
!9500 = !DILocalVariable(name: "drop_flags", arg: 6, scope: !9487, file: !3, line: 2990, type: !204)
!9501 = !DILocation(line: 2990, column: 22, scope: !9487)
!9502 = !DILocation(line: 2992, column: 24, scope: !9487)
!9503 = !DILocation(line: 2992, column: 2, scope: !9487)
!9504 = !DILocation(line: 2992, column: 12, scope: !9487)
!9505 = !DILocation(line: 2992, column: 22, scope: !9487)
!9506 = !DILocation(line: 2993, column: 25, scope: !9487)
!9507 = !DILocation(line: 2993, column: 2, scope: !9487)
!9508 = !DILocation(line: 2993, column: 12, scope: !9487)
!9509 = !DILocation(line: 2993, column: 23, scope: !9487)
!9510 = !DILocation(line: 2994, column: 17, scope: !9487)
!9511 = !DILocation(line: 2994, column: 23, scope: !9487)
!9512 = !DILocation(line: 2994, column: 31, scope: !9487)
!9513 = !DILocation(line: 2994, column: 2, scope: !9487)
!9514 = !DILocation(line: 2995, column: 2, scope: !9487)
!9515 = !DILocation(line: 2995, column: 12, scope: !9487)
!9516 = !DILocation(line: 2995, column: 22, scope: !9487)
!9517 = !DILocation(line: 2996, column: 1, scope: !9487)
!9518 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !8388, file: !8388, line: 646, type: !8389, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9519 = !DILocalVariable(name: "__ret", scope: !9520, file: !8388, line: 648, type: !248)
!9520 = distinct !DILexicalBlock(scope: !9518, file: !8388, line: 648, column: 9)
!9521 = !DILocation(line: 648, column: 9, scope: !9520)
!9522 = !DILocalVariable(name: "__edi", scope: !9520, file: !8388, line: 648, type: !248)
!9523 = !DILocalVariable(name: "__esi", scope: !9520, file: !8388, line: 648, type: !248)
!9524 = !DILocalVariable(name: "__edx", scope: !9520, file: !8388, line: 648, type: !248)
!9525 = !DILocalVariable(name: "__ecx", scope: !9520, file: !8388, line: 648, type: !248)
!9526 = !DILocalVariable(name: "__eax", scope: !9520, file: !8388, line: 648, type: !248)
!9527 = !DILocation(line: 648, column: 9, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9529, file: !8388, line: 648, column: 9)
!9529 = distinct !DILexicalBlock(scope: !9520, file: !8388, line: 648, column: 9)
!9530 = !{i32 -2145476273, i32 -2145473958, i32 -2145473724, i32 -2145473673, i32 -2145473645, i32 -2145473620, i32 -2145473936, i32 -2145473923, i32 -2145473485, i32 -2145473366, i32 -2145473831, i32 -2145473804, i32 -2145473776, i32 -2145473746}
!9531 = !DILocalVariable(name: "__mask", scope: !9532, file: !8388, line: 648, type: !248)
!9532 = distinct !DILexicalBlock(scope: !9528, file: !8388, line: 648, column: 9)
!9533 = !DILocation(line: 648, column: 9, scope: !9532)
!9534 = !DILocation(line: 648, column: 9, scope: !9529)
!9535 = !DILocation(line: 648, column: 2, scope: !9518)
!9536 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !8388, file: !8388, line: 651, type: !5053, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9537 = !DILocalVariable(name: "f", arg: 1, scope: !9536, file: !8388, line: 651, type: !248)
!9538 = !DILocation(line: 651, column: 65, scope: !9536)
!9539 = !DILocalVariable(name: "__edi", scope: !9540, file: !8388, line: 653, type: !248)
!9540 = distinct !DILexicalBlock(scope: !9536, file: !8388, line: 653, column: 2)
!9541 = !DILocation(line: 653, column: 2, scope: !9540)
!9542 = !DILocalVariable(name: "__esi", scope: !9540, file: !8388, line: 653, type: !248)
!9543 = !DILocalVariable(name: "__edx", scope: !9540, file: !8388, line: 653, type: !248)
!9544 = !DILocalVariable(name: "__ecx", scope: !9540, file: !8388, line: 653, type: !248)
!9545 = !DILocalVariable(name: "__eax", scope: !9540, file: !8388, line: 653, type: !248)
!9546 = !{i32 -2145471806, i32 -2145471056, i32 -2145470822, i32 -2145470771, i32 -2145470743, i32 -2145470718, i32 -2145471034, i32 -2145471021, i32 -2145470583, i32 -2145470464, i32 -2145470929, i32 -2145470902, i32 -2145470874, i32 -2145470844}
!9547 = !DILocation(line: 654, column: 1, scope: !9536)
!9548 = distinct !DISubprogram(name: "xhci_stop", scope: !3, file: !3, line: 712, type: !4914, scopeLine: 713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9549 = !DILocation(line: 402, column: 57, scope: !6334, inlinedAt: !9550)
!9550 = distinct !DILocation(line: 732, column: 2, scope: !9548)
!9551 = !DILocation(line: 377, column: 55, scope: !6341, inlinedAt: !9552)
!9552 = distinct !DILocation(line: 727, column: 2, scope: !9548)
!9553 = !DILocalVariable(name: "hcd", arg: 1, scope: !9548, file: !3, line: 712, type: !4501)
!9554 = !DILocation(line: 712, column: 39, scope: !9548)
!9555 = !DILocalVariable(name: "temp", scope: !9548, file: !3, line: 714, type: !204)
!9556 = !DILocation(line: 714, column: 6, scope: !9548)
!9557 = !DILocalVariable(name: "xhci", scope: !9548, file: !3, line: 715, type: !4497)
!9558 = !DILocation(line: 715, column: 19, scope: !9548)
!9559 = !DILocation(line: 715, column: 38, scope: !9548)
!9560 = !DILocation(line: 715, column: 26, scope: !9548)
!9561 = !DILocation(line: 717, column: 14, scope: !9548)
!9562 = !DILocation(line: 717, column: 20, scope: !9548)
!9563 = !DILocation(line: 717, column: 2, scope: !9548)
!9564 = !DILocation(line: 720, column: 30, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 720, column: 6)
!9566 = !DILocation(line: 720, column: 7, scope: !9565)
!9567 = !DILocation(line: 720, column: 6, scope: !9548)
!9568 = !DILocation(line: 721, column: 17, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9565, file: !3, line: 720, column: 36)
!9570 = !DILocation(line: 721, column: 23, scope: !9569)
!9571 = !DILocation(line: 721, column: 3, scope: !9569)
!9572 = !DILocation(line: 722, column: 3, scope: !9569)
!9573 = !DILocation(line: 725, column: 16, scope: !9548)
!9574 = !DILocation(line: 725, column: 2, scope: !9548)
!9575 = !DILocation(line: 727, column: 17, scope: !9548)
!9576 = !DILocation(line: 727, column: 23, scope: !9548)
!9577 = !DILocation(line: 379, column: 2, scope: !6364, inlinedAt: !9552)
!9578 = !DILocation(line: 379, column: 2, scope: !6367, inlinedAt: !9552)
!9579 = !DILocation(line: 379, column: 2, scope: !6370, inlinedAt: !9552)
!9580 = !DILocation(line: 728, column: 2, scope: !9548)
!9581 = !DILocation(line: 728, column: 8, scope: !9548)
!9582 = !DILocation(line: 728, column: 18, scope: !9548)
!9583 = !DILocation(line: 729, column: 2, scope: !9548)
!9584 = !DILocation(line: 729, column: 8, scope: !9548)
!9585 = !DILocation(line: 729, column: 23, scope: !9548)
!9586 = !DILocation(line: 730, column: 12, scope: !9548)
!9587 = !DILocation(line: 730, column: 2, scope: !9548)
!9588 = !DILocation(line: 731, column: 13, scope: !9548)
!9589 = !DILocation(line: 731, column: 2, scope: !9548)
!9590 = !DILocation(line: 732, column: 19, scope: !9548)
!9591 = !DILocation(line: 732, column: 25, scope: !9548)
!9592 = !DILocation(line: 404, column: 2, scope: !6383, inlinedAt: !9550)
!9593 = !DILocation(line: 404, column: 2, scope: !6386, inlinedAt: !9550)
!9594 = !DILocation(line: 404, column: 2, scope: !6389, inlinedAt: !9550)
!9595 = !DILocation(line: 734, column: 20, scope: !9548)
!9596 = !DILocation(line: 734, column: 2, scope: !9548)
!9597 = !DILocation(line: 737, column: 7, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 737, column: 6)
!9599 = !DILocation(line: 737, column: 13, scope: !9598)
!9600 = !DILocation(line: 737, column: 20, scope: !9598)
!9601 = !DILocation(line: 737, column: 44, scope: !9598)
!9602 = !DILocation(line: 738, column: 30, scope: !9598)
!9603 = !DILocation(line: 738, column: 7, scope: !9598)
!9604 = !DILocation(line: 737, column: 6, scope: !9548)
!9605 = !DILocation(line: 739, column: 3, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9598, file: !3, line: 738, column: 39)
!9607 = !DILocation(line: 740, column: 18, scope: !9606)
!9608 = !DILocation(line: 740, column: 3, scope: !9606)
!9609 = !DILocation(line: 743, column: 2, scope: !9606)
!9610 = !DILocation(line: 745, column: 6, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9548, file: !3, line: 745, column: 6)
!9612 = !DILocation(line: 745, column: 12, scope: !9611)
!9613 = !DILocation(line: 745, column: 19, scope: !9611)
!9614 = !DILocation(line: 745, column: 6, scope: !9548)
!9615 = !DILocation(line: 746, column: 3, scope: !9611)
!9616 = !DILocation(line: 748, column: 17, scope: !9548)
!9617 = !DILocation(line: 748, column: 2, scope: !9548)
!9618 = !DILocation(line: 750, column: 16, scope: !9548)
!9619 = !DILocation(line: 750, column: 22, scope: !9548)
!9620 = !DILocation(line: 750, column: 31, scope: !9548)
!9621 = !DILocation(line: 750, column: 15, scope: !9548)
!9622 = !DILocation(line: 750, column: 9, scope: !9548)
!9623 = !DILocation(line: 750, column: 7, scope: !9548)
!9624 = !DILocation(line: 751, column: 10, scope: !9548)
!9625 = !DILocation(line: 751, column: 15, scope: !9548)
!9626 = !DILocation(line: 751, column: 26, scope: !9548)
!9627 = !DILocation(line: 751, column: 39, scope: !9548)
!9628 = !DILocation(line: 751, column: 45, scope: !9548)
!9629 = !DILocation(line: 751, column: 54, scope: !9548)
!9630 = !DILocation(line: 751, column: 38, scope: !9548)
!9631 = !DILocation(line: 751, column: 2, scope: !9548)
!9632 = !DILocation(line: 752, column: 16, scope: !9548)
!9633 = !DILocation(line: 752, column: 22, scope: !9548)
!9634 = !DILocation(line: 752, column: 30, scope: !9548)
!9635 = !DILocation(line: 752, column: 15, scope: !9548)
!9636 = !DILocation(line: 752, column: 9, scope: !9548)
!9637 = !DILocation(line: 752, column: 7, scope: !9548)
!9638 = !DILocation(line: 753, column: 9, scope: !9548)
!9639 = !DILocation(line: 753, column: 32, scope: !9548)
!9640 = !DILocation(line: 753, column: 38, scope: !9548)
!9641 = !DILocation(line: 753, column: 46, scope: !9548)
!9642 = !DILocation(line: 753, column: 31, scope: !9548)
!9643 = !DILocation(line: 753, column: 2, scope: !9548)
!9644 = !DILocation(line: 755, column: 17, scope: !9548)
!9645 = !DILocation(line: 755, column: 2, scope: !9548)
!9646 = !DILocation(line: 756, column: 19, scope: !9548)
!9647 = !DILocation(line: 756, column: 2, scope: !9548)
!9648 = !DILocation(line: 757, column: 20, scope: !9548)
!9649 = !DILocation(line: 757, column: 2, scope: !9548)
!9650 = !DILocation(line: 758, column: 17, scope: !9548)
!9651 = !DILocation(line: 760, column: 11, scope: !9548)
!9652 = !DILocation(line: 760, column: 17, scope: !9548)
!9653 = !DILocation(line: 760, column: 26, scope: !9548)
!9654 = !DILocation(line: 760, column: 10, scope: !9548)
!9655 = !DILocation(line: 760, column: 4, scope: !9548)
!9656 = !DILocation(line: 758, column: 2, scope: !9548)
!9657 = !DILocation(line: 761, column: 16, scope: !9548)
!9658 = !DILocation(line: 761, column: 22, scope: !9548)
!9659 = !DILocation(line: 761, column: 2, scope: !9548)
!9660 = !DILocation(line: 762, column: 1, scope: !9548)
!9661 = distinct !DISubprogram(name: "xhci_get_frame", scope: !3, file: !3, line: 5123, type: !4904, scopeLine: 5124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9662 = !DILocalVariable(name: "hcd", arg: 1, scope: !9661, file: !3, line: 5123, type: !4501)
!9663 = !DILocation(line: 5123, column: 43, scope: !9661)
!9664 = !DILocalVariable(name: "xhci", scope: !9661, file: !3, line: 5125, type: !4497)
!9665 = !DILocation(line: 5125, column: 19, scope: !9661)
!9666 = !DILocation(line: 5125, column: 38, scope: !9661)
!9667 = !DILocation(line: 5125, column: 26, scope: !9661)
!9668 = !DILocation(line: 5127, column: 16, scope: !9661)
!9669 = !DILocation(line: 5127, column: 22, scope: !9661)
!9670 = !DILocation(line: 5127, column: 32, scope: !9661)
!9671 = !DILocation(line: 5127, column: 15, scope: !9661)
!9672 = !DILocation(line: 5127, column: 9, scope: !9661)
!9673 = !DILocation(line: 5127, column: 50, scope: !9661)
!9674 = !DILocation(line: 5127, column: 2, scope: !9661)
!9675 = distinct !DISubprogram(name: "xhci_urb_enqueue", scope: !3, file: !3, line: 1461, type: !4920, scopeLine: 1462, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9676 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !9677)
!9677 = distinct !DILocation(line: 1568, column: 2, scope: !9675)
!9678 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !9677)
!9679 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !9680)
!9680 = distinct !DILocation(line: 1524, column: 2, scope: !9681)
!9681 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 1524, column: 2)
!9682 = distinct !DILexicalBlock(scope: !9683, file: !3, line: 1524, column: 2)
!9683 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 1524, column: 2)
!9684 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 1524, column: 2)
!9685 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1524, column: 2)
!9686 = !DILocalVariable(name: "pfo_val__", scope: !9687, file: !9688, line: 26, type: !204)
!9687 = distinct !DILexicalBlock(scope: !9689, file: !9688, line: 26, column: 9)
!9688 = !DIFile(filename: "./arch/x86/include/asm/preempt.h", directory: "/home/lizy2001/genbc/linux")
!9689 = distinct !DISubprogram(name: "preempt_count", scope: !9688, file: !9688, line: 24, type: !9019, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9690 = !DILocation(line: 26, column: 9, scope: !9687, inlinedAt: !9691)
!9691 = distinct !DILocation(line: 1480, column: 8, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9693, file: !3, line: 1480, column: 7)
!9693 = distinct !DILexicalBlock(scope: !9694, file: !3, line: 1479, column: 31)
!9694 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1479, column: 6)
!9695 = !DILocalVariable(name: "hcd", arg: 1, scope: !9675, file: !3, line: 1461, type: !4501)
!9696 = !DILocation(line: 1461, column: 45, scope: !9675)
!9697 = !DILocalVariable(name: "urb", arg: 2, scope: !9675, file: !3, line: 1461, type: !4825)
!9698 = !DILocation(line: 1461, column: 62, scope: !9675)
!9699 = !DILocalVariable(name: "mem_flags", arg: 3, scope: !9675, file: !3, line: 1461, type: !875)
!9700 = !DILocation(line: 1461, column: 73, scope: !9675)
!9701 = !DILocalVariable(name: "xhci", scope: !9675, file: !3, line: 1463, type: !4497)
!9702 = !DILocation(line: 1463, column: 19, scope: !9675)
!9703 = !DILocation(line: 1463, column: 38, scope: !9675)
!9704 = !DILocation(line: 1463, column: 26, scope: !9675)
!9705 = !DILocalVariable(name: "flags", scope: !9675, file: !3, line: 1464, type: !248)
!9706 = !DILocation(line: 1464, column: 16, scope: !9675)
!9707 = !DILocalVariable(name: "ret", scope: !9675, file: !3, line: 1465, type: !265)
!9708 = !DILocation(line: 1465, column: 6, scope: !9675)
!9709 = !DILocalVariable(name: "slot_id", scope: !9675, file: !3, line: 1466, type: !7)
!9710 = !DILocation(line: 1466, column: 15, scope: !9675)
!9711 = !DILocalVariable(name: "ep_index", scope: !9675, file: !3, line: 1466, type: !7)
!9712 = !DILocation(line: 1466, column: 24, scope: !9675)
!9713 = !DILocalVariable(name: "ep_state", scope: !9675, file: !3, line: 1467, type: !3398)
!9714 = !DILocation(line: 1467, column: 16, scope: !9675)
!9715 = !DILocalVariable(name: "urb_priv", scope: !9675, file: !3, line: 1468, type: !9716)
!9716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9717, size: 64)
!9717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "urb_priv", file: !145, line: 1642, size: 64, elements: !9718)
!9718 = !{!9719, !9720, !9721}
!9719 = !DIDerivedType(tag: DW_TAG_member, name: "num_tds", scope: !9717, file: !145, line: 1643, baseType: !265, size: 32)
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "num_tds_done", scope: !9717, file: !145, line: 1644, baseType: !265, size: 32, offset: 32)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "td", scope: !9717, file: !145, line: 1645, baseType: !9722, offset: 64)
!9722 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8027, elements: !2233)
!9723 = !DILocation(line: 1468, column: 19, scope: !9675)
!9724 = !DILocalVariable(name: "num_tds", scope: !9675, file: !3, line: 1469, type: !265)
!9725 = !DILocation(line: 1469, column: 6, scope: !9675)
!9726 = !DILocation(line: 1471, column: 7, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1471, column: 6)
!9728 = !DILocation(line: 1471, column: 11, scope: !9727)
!9729 = !DILocation(line: 1471, column: 30, scope: !9727)
!9730 = !DILocation(line: 1471, column: 35, scope: !9727)
!9731 = !DILocation(line: 1471, column: 40, scope: !9727)
!9732 = !DILocation(line: 1471, column: 45, scope: !9727)
!9733 = !DILocation(line: 1471, column: 50, scope: !9727)
!9734 = !DILocation(line: 1471, column: 14, scope: !9727)
!9735 = !DILocation(line: 1472, column: 28, scope: !9727)
!9736 = !DILocation(line: 1471, column: 6, scope: !9675)
!9737 = !DILocation(line: 1473, column: 3, scope: !9727)
!9738 = !DILocation(line: 1475, column: 12, scope: !9675)
!9739 = !DILocation(line: 1475, column: 17, scope: !9675)
!9740 = !DILocation(line: 1475, column: 22, scope: !9675)
!9741 = !DILocation(line: 1475, column: 10, scope: !9675)
!9742 = !DILocation(line: 1476, column: 38, scope: !9675)
!9743 = !DILocation(line: 1476, column: 43, scope: !9675)
!9744 = !DILocation(line: 1476, column: 47, scope: !9675)
!9745 = !DILocation(line: 1476, column: 13, scope: !9675)
!9746 = !DILocation(line: 1476, column: 11, scope: !9675)
!9747 = !DILocation(line: 1477, column: 14, scope: !9675)
!9748 = !DILocation(line: 1477, column: 20, scope: !9675)
!9749 = !DILocation(line: 1477, column: 25, scope: !9675)
!9750 = !DILocation(line: 1477, column: 35, scope: !9675)
!9751 = !DILocation(line: 1477, column: 39, scope: !9675)
!9752 = !DILocation(line: 1477, column: 49, scope: !9675)
!9753 = !DILocation(line: 1477, column: 11, scope: !9675)
!9754 = !DILocation(line: 1479, column: 7, scope: !9694)
!9755 = !DILocation(line: 1479, column: 6, scope: !9675)
!9756 = !{i32 -2145292773}
!9757 = !DILocation(line: 26, column: 41, scope: !9689, inlinedAt: !9691)
!9758 = !DILocation(line: 1480, column: 8, scope: !9692)
!9759 = !DILocation(line: 1480, column: 7, scope: !9693)
!9760 = !DILocation(line: 1481, column: 4, scope: !9692)
!9761 = !DILocation(line: 1482, column: 3, scope: !9693)
!9762 = !DILocation(line: 1484, column: 6, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1484, column: 6)
!9764 = !DILocation(line: 1484, column: 12, scope: !9763)
!9765 = !DILocation(line: 1484, column: 17, scope: !9763)
!9766 = !DILocation(line: 1484, column: 27, scope: !9763)
!9767 = !DILocation(line: 1484, column: 33, scope: !9763)
!9768 = !DILocation(line: 1484, column: 6, scope: !9675)
!9769 = !DILocation(line: 1486, column: 3, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9763, file: !3, line: 1484, column: 52)
!9771 = !DILocation(line: 1489, column: 30, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1489, column: 6)
!9773 = !DILocation(line: 1489, column: 35, scope: !9772)
!9774 = !DILocation(line: 1489, column: 39, scope: !9772)
!9775 = !DILocation(line: 1489, column: 6, scope: !9772)
!9776 = !DILocation(line: 1489, column: 6, scope: !9675)
!9777 = !DILocation(line: 1490, column: 13, scope: !9772)
!9778 = !DILocation(line: 1490, column: 18, scope: !9772)
!9779 = !DILocation(line: 1490, column: 11, scope: !9772)
!9780 = !DILocation(line: 1490, column: 3, scope: !9772)
!9781 = !DILocation(line: 1491, column: 37, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 1491, column: 11)
!9783 = !DILocation(line: 1491, column: 42, scope: !9782)
!9784 = !DILocation(line: 1491, column: 46, scope: !9782)
!9785 = !DILocation(line: 1491, column: 11, scope: !9782)
!9786 = !DILocation(line: 1491, column: 52, scope: !9782)
!9787 = !DILocation(line: 1492, column: 6, scope: !9782)
!9788 = !DILocation(line: 1492, column: 11, scope: !9782)
!9789 = !DILocation(line: 1492, column: 34, scope: !9782)
!9790 = !DILocation(line: 1492, column: 38, scope: !9782)
!9791 = !DILocation(line: 1493, column: 6, scope: !9782)
!9792 = !DILocation(line: 1493, column: 11, scope: !9782)
!9793 = !DILocation(line: 1493, column: 26, scope: !9782)
!9794 = !DILocation(line: 1493, column: 44, scope: !9782)
!9795 = !DILocation(line: 1494, column: 8, scope: !9782)
!9796 = !DILocation(line: 1494, column: 13, scope: !9782)
!9797 = !DILocation(line: 1494, column: 57, scope: !9782)
!9798 = !DILocation(line: 1494, column: 62, scope: !9782)
!9799 = !DILocation(line: 1494, column: 66, scope: !9782)
!9800 = !DILocation(line: 1494, column: 38, scope: !9782)
!9801 = !DILocation(line: 1494, column: 36, scope: !9782)
!9802 = !DILocation(line: 1491, column: 11, scope: !9772)
!9803 = !DILocation(line: 1495, column: 11, scope: !9782)
!9804 = !DILocation(line: 1495, column: 3, scope: !9782)
!9805 = !DILocation(line: 1497, column: 11, scope: !9782)
!9806 = !DILocation(line: 1499, column: 21, scope: !9675)
!9807 = !DILocation(line: 1499, column: 57, scope: !9675)
!9808 = !DILocation(line: 1499, column: 13, scope: !9675)
!9809 = !DILocation(line: 1499, column: 11, scope: !9675)
!9810 = !DILocation(line: 1500, column: 7, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1500, column: 6)
!9812 = !DILocation(line: 1500, column: 6, scope: !9675)
!9813 = !DILocation(line: 1501, column: 3, scope: !9811)
!9814 = !DILocation(line: 1503, column: 22, scope: !9675)
!9815 = !DILocation(line: 1503, column: 2, scope: !9675)
!9816 = !DILocation(line: 1503, column: 12, scope: !9675)
!9817 = !DILocation(line: 1503, column: 20, scope: !9675)
!9818 = !DILocation(line: 1504, column: 2, scope: !9675)
!9819 = !DILocation(line: 1504, column: 12, scope: !9675)
!9820 = !DILocation(line: 1504, column: 25, scope: !9675)
!9821 = !DILocation(line: 1505, column: 16, scope: !9675)
!9822 = !DILocation(line: 1505, column: 2, scope: !9675)
!9823 = !DILocation(line: 1505, column: 7, scope: !9675)
!9824 = !DILocation(line: 1505, column: 14, scope: !9675)
!9825 = !DILocation(line: 1507, column: 25, scope: !9675)
!9826 = !DILocation(line: 1507, column: 2, scope: !9675)
!9827 = !DILocation(line: 1509, column: 33, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1509, column: 6)
!9829 = !DILocation(line: 1509, column: 38, scope: !9828)
!9830 = !DILocation(line: 1509, column: 42, scope: !9828)
!9831 = !DILocation(line: 1509, column: 6, scope: !9828)
!9832 = !DILocation(line: 1509, column: 6, scope: !9675)
!9833 = !DILocation(line: 1513, column: 7, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9835, file: !3, line: 1513, column: 7)
!9835 = distinct !DILexicalBlock(scope: !9828, file: !3, line: 1509, column: 49)
!9836 = !DILocation(line: 1513, column: 12, scope: !9834)
!9837 = !DILocation(line: 1513, column: 17, scope: !9834)
!9838 = !DILocation(line: 1513, column: 23, scope: !9834)
!9839 = !DILocation(line: 1513, column: 7, scope: !9835)
!9840 = !DILocation(line: 1514, column: 31, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 1513, column: 42)
!9842 = !DILocation(line: 1514, column: 37, scope: !9841)
!9843 = !DILocation(line: 1515, column: 6, scope: !9841)
!9844 = !DILocation(line: 1515, column: 16, scope: !9841)
!9845 = !DILocation(line: 1514, column: 10, scope: !9841)
!9846 = !DILocation(line: 1514, column: 8, scope: !9841)
!9847 = !DILocation(line: 1516, column: 8, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9841, file: !3, line: 1516, column: 8)
!9849 = !DILocation(line: 1516, column: 12, scope: !9848)
!9850 = !DILocation(line: 1516, column: 8, scope: !9841)
!9851 = !DILocation(line: 1517, column: 24, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 1516, column: 17)
!9853 = !DILocation(line: 1517, column: 5, scope: !9852)
!9854 = !DILocation(line: 1518, column: 5, scope: !9852)
!9855 = !DILocation(line: 1518, column: 10, scope: !9852)
!9856 = !DILocation(line: 1518, column: 17, scope: !9852)
!9857 = !DILocation(line: 1519, column: 12, scope: !9852)
!9858 = !DILocation(line: 1519, column: 5, scope: !9852)
!9859 = !DILocation(line: 1521, column: 3, scope: !9841)
!9860 = !DILocation(line: 1522, column: 2, scope: !9835)
!9861 = !DILocation(line: 1524, column: 2, scope: !9675)
!9862 = !DILocation(line: 1524, column: 2, scope: !9685)
!9863 = !DILocalVariable(name: "__dummy", scope: !9864, file: !3, line: 1524, type: !248)
!9864 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 1524, column: 2)
!9865 = !DILocation(line: 1524, column: 2, scope: !9864)
!9866 = !DILocalVariable(name: "__dummy2", scope: !9864, file: !3, line: 1524, type: !248)
!9867 = !DILocation(line: 1524, column: 2, scope: !9684)
!9868 = !DILocation(line: 1524, column: 2, scope: !9683)
!9869 = !DILocation(line: 1524, column: 2, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9683, file: !3, line: 1524, column: 2)
!9871 = !DILocalVariable(name: "__dummy", scope: !9872, file: !3, line: 1524, type: !248)
!9872 = distinct !DILexicalBlock(scope: !9873, file: !3, line: 1524, column: 2)
!9873 = distinct !DILexicalBlock(scope: !9870, file: !3, line: 1524, column: 2)
!9874 = !DILocation(line: 1524, column: 2, scope: !9872)
!9875 = !DILocalVariable(name: "__dummy2", scope: !9872, file: !3, line: 1524, type: !248)
!9876 = !DILocation(line: 1524, column: 2, scope: !9873)
!9877 = !DILocation(line: 1524, column: 2, scope: !9682)
!9878 = !{i32 -2140689964}
!9879 = !DILocation(line: 1524, column: 2, scope: !9681)
!9880 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !9680)
!9881 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !9680)
!9882 = !DILocation(line: 1526, column: 6, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1526, column: 6)
!9884 = !DILocation(line: 1526, column: 12, scope: !9883)
!9885 = !DILocation(line: 1526, column: 22, scope: !9883)
!9886 = !DILocation(line: 1526, column: 6, scope: !9675)
!9887 = !DILocation(line: 1529, column: 7, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9883, file: !3, line: 1526, column: 42)
!9889 = !DILocation(line: 1530, column: 3, scope: !9888)
!9890 = !DILocation(line: 1532, column: 7, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1532, column: 6)
!9892 = !DILocation(line: 1532, column: 6, scope: !9891)
!9893 = !DILocation(line: 1532, column: 16, scope: !9891)
!9894 = !DILocation(line: 1532, column: 6, scope: !9675)
!9895 = !DILocation(line: 1533, column: 3, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9891, file: !3, line: 1532, column: 64)
!9897 = !DILocation(line: 1535, column: 7, scope: !9896)
!9898 = !DILocation(line: 1536, column: 3, scope: !9896)
!9899 = !DILocation(line: 1538, column: 7, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1538, column: 6)
!9901 = !DILocation(line: 1538, column: 6, scope: !9900)
!9902 = !DILocation(line: 1538, column: 16, scope: !9900)
!9903 = !DILocation(line: 1538, column: 6, scope: !9675)
!9904 = !DILocation(line: 1539, column: 3, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 1538, column: 40)
!9906 = !DILocation(line: 1540, column: 7, scope: !9905)
!9907 = !DILocation(line: 1541, column: 3, scope: !9905)
!9908 = !DILocation(line: 1544, column: 29, scope: !9675)
!9909 = !DILocation(line: 1544, column: 34, scope: !9675)
!9910 = !DILocation(line: 1544, column: 38, scope: !9675)
!9911 = !DILocation(line: 1544, column: 10, scope: !9675)
!9912 = !DILocation(line: 1544, column: 2, scope: !9675)
!9913 = !DILocation(line: 1547, column: 28, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1544, column: 45)
!9915 = !DILocation(line: 1547, column: 46, scope: !9914)
!9916 = !DILocation(line: 1548, column: 7, scope: !9914)
!9917 = !DILocation(line: 1548, column: 16, scope: !9914)
!9918 = !DILocation(line: 1547, column: 9, scope: !9914)
!9919 = !DILocation(line: 1547, column: 7, scope: !9914)
!9920 = !DILocation(line: 1549, column: 3, scope: !9914)
!9921 = !DILocation(line: 1551, column: 28, scope: !9914)
!9922 = !DILocation(line: 1551, column: 46, scope: !9914)
!9923 = !DILocation(line: 1552, column: 7, scope: !9914)
!9924 = !DILocation(line: 1552, column: 16, scope: !9914)
!9925 = !DILocation(line: 1551, column: 9, scope: !9914)
!9926 = !DILocation(line: 1551, column: 7, scope: !9914)
!9927 = !DILocation(line: 1553, column: 3, scope: !9914)
!9928 = !DILocation(line: 1555, column: 28, scope: !9914)
!9929 = !DILocation(line: 1555, column: 46, scope: !9914)
!9930 = !DILocation(line: 1556, column: 5, scope: !9914)
!9931 = !DILocation(line: 1556, column: 14, scope: !9914)
!9932 = !DILocation(line: 1555, column: 9, scope: !9914)
!9933 = !DILocation(line: 1555, column: 7, scope: !9914)
!9934 = !DILocation(line: 1557, column: 3, scope: !9914)
!9935 = !DILocation(line: 1559, column: 36, scope: !9914)
!9936 = !DILocation(line: 1559, column: 54, scope: !9914)
!9937 = !DILocation(line: 1560, column: 5, scope: !9914)
!9938 = !DILocation(line: 1560, column: 14, scope: !9914)
!9939 = !DILocation(line: 1559, column: 9, scope: !9914)
!9940 = !DILocation(line: 1559, column: 7, scope: !9914)
!9941 = !DILocation(line: 1561, column: 2, scope: !9914)
!9942 = !DILocation(line: 1563, column: 6, scope: !9943)
!9943 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1563, column: 6)
!9944 = !DILocation(line: 1563, column: 6, scope: !9675)
!9945 = !DILocation(line: 1563, column: 11, scope: !9943)
!9946 = !DILabel(scope: !9947, name: "free_priv", file: !3, line: 1564)
!9947 = distinct !DILexicalBlock(scope: !9943, file: !3, line: 1563, column: 11)
!9948 = !DILocation(line: 1564, column: 1, scope: !9947)
!9949 = !DILocation(line: 1565, column: 22, scope: !9947)
!9950 = !DILocation(line: 1565, column: 3, scope: !9947)
!9951 = !DILocation(line: 1566, column: 3, scope: !9947)
!9952 = !DILocation(line: 1566, column: 8, scope: !9947)
!9953 = !DILocation(line: 1566, column: 15, scope: !9947)
!9954 = !DILocation(line: 1567, column: 2, scope: !9947)
!9955 = !DILocation(line: 1568, column: 26, scope: !9675)
!9956 = !DILocation(line: 1568, column: 32, scope: !9675)
!9957 = !DILocation(line: 1568, column: 38, scope: !9675)
!9958 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !9677)
!9959 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !9677)
!9960 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !9677)
!9961 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !9677)
!9962 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !9677)
!9963 = !DILocation(line: 1569, column: 9, scope: !9675)
!9964 = !DILocation(line: 1569, column: 2, scope: !9675)
!9965 = !DILocation(line: 1570, column: 1, scope: !9675)
!9966 = distinct !DISubprogram(name: "xhci_urb_dequeue", scope: !3, file: !3, line: 1603, type: !4924, scopeLine: 1604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!9967 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !9968)
!9968 = distinct !DILocation(line: 1710, column: 2, scope: !9966)
!9969 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !9968)
!9970 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !9971)
!9971 = distinct !DILocation(line: 1717, column: 2, scope: !9966)
!9972 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !9971)
!9973 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !9974)
!9974 = distinct !DILocation(line: 1618, column: 2, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9976, file: !3, line: 1618, column: 2)
!9976 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 1618, column: 2)
!9977 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 1618, column: 2)
!9978 = distinct !DILexicalBlock(scope: !9979, file: !3, line: 1618, column: 2)
!9979 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1618, column: 2)
!9980 = !DILocalVariable(name: "hcd", arg: 1, scope: !9966, file: !3, line: 1603, type: !4501)
!9981 = !DILocation(line: 1603, column: 45, scope: !9966)
!9982 = !DILocalVariable(name: "urb", arg: 2, scope: !9966, file: !3, line: 1603, type: !4825)
!9983 = !DILocation(line: 1603, column: 62, scope: !9966)
!9984 = !DILocalVariable(name: "status", arg: 3, scope: !9966, file: !3, line: 1603, type: !265)
!9985 = !DILocation(line: 1603, column: 71, scope: !9966)
!9986 = !DILocalVariable(name: "flags", scope: !9966, file: !3, line: 1605, type: !248)
!9987 = !DILocation(line: 1605, column: 16, scope: !9966)
!9988 = !DILocalVariable(name: "ret", scope: !9966, file: !3, line: 1606, type: !265)
!9989 = !DILocation(line: 1606, column: 6, scope: !9966)
!9990 = !DILocalVariable(name: "i", scope: !9966, file: !3, line: 1606, type: !265)
!9991 = !DILocation(line: 1606, column: 11, scope: !9966)
!9992 = !DILocalVariable(name: "temp", scope: !9966, file: !3, line: 1607, type: !204)
!9993 = !DILocation(line: 1607, column: 6, scope: !9966)
!9994 = !DILocalVariable(name: "xhci", scope: !9966, file: !3, line: 1608, type: !4497)
!9995 = !DILocation(line: 1608, column: 19, scope: !9966)
!9996 = !DILocalVariable(name: "urb_priv", scope: !9966, file: !3, line: 1609, type: !9716)
!9997 = !DILocation(line: 1609, column: 19, scope: !9966)
!9998 = !DILocalVariable(name: "td", scope: !9966, file: !3, line: 1610, type: !8026)
!9999 = !DILocation(line: 1610, column: 18, scope: !9966)
!10000 = !DILocalVariable(name: "ep_index", scope: !9966, file: !3, line: 1611, type: !7)
!10001 = !DILocation(line: 1611, column: 15, scope: !9966)
!10002 = !DILocalVariable(name: "ep_ring", scope: !9966, file: !3, line: 1612, type: !5179)
!10003 = !DILocation(line: 1612, column: 20, scope: !9966)
!10004 = !DILocalVariable(name: "ep", scope: !9966, file: !3, line: 1613, type: !5464)
!10005 = !DILocation(line: 1613, column: 23, scope: !9966)
!10006 = !DILocalVariable(name: "command", scope: !9966, file: !3, line: 1614, type: !5247)
!10007 = !DILocation(line: 1614, column: 23, scope: !9966)
!10008 = !DILocalVariable(name: "vdev", scope: !9966, file: !3, line: 1615, type: !5290)
!10009 = !DILocation(line: 1615, column: 27, scope: !9966)
!10010 = !DILocation(line: 1617, column: 21, scope: !9966)
!10011 = !DILocation(line: 1617, column: 9, scope: !9966)
!10012 = !DILocation(line: 1617, column: 7, scope: !9966)
!10013 = !DILocation(line: 1618, column: 2, scope: !9966)
!10014 = !DILocation(line: 1618, column: 2, scope: !9979)
!10015 = !DILocalVariable(name: "__dummy", scope: !10016, file: !3, line: 1618, type: !248)
!10016 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 1618, column: 2)
!10017 = !DILocation(line: 1618, column: 2, scope: !10016)
!10018 = !DILocalVariable(name: "__dummy2", scope: !10016, file: !3, line: 1618, type: !248)
!10019 = !DILocation(line: 1618, column: 2, scope: !9978)
!10020 = !DILocation(line: 1618, column: 2, scope: !9977)
!10021 = !DILocation(line: 1618, column: 2, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !9977, file: !3, line: 1618, column: 2)
!10023 = !DILocalVariable(name: "__dummy", scope: !10024, file: !3, line: 1618, type: !248)
!10024 = distinct !DILexicalBlock(scope: !10025, file: !3, line: 1618, column: 2)
!10025 = distinct !DILexicalBlock(scope: !10022, file: !3, line: 1618, column: 2)
!10026 = !DILocation(line: 1618, column: 2, scope: !10024)
!10027 = !DILocalVariable(name: "__dummy2", scope: !10024, file: !3, line: 1618, type: !248)
!10028 = !DILocation(line: 1618, column: 2, scope: !10025)
!10029 = !DILocation(line: 1618, column: 2, scope: !9976)
!10030 = !{i32 -2140687070}
!10031 = !DILocation(line: 1618, column: 2, scope: !9975)
!10032 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !9974)
!10033 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !9974)
!10034 = !DILocation(line: 1620, column: 25, scope: !9966)
!10035 = !DILocation(line: 1620, column: 2, scope: !9966)
!10036 = !DILocation(line: 1623, column: 33, scope: !9966)
!10037 = !DILocation(line: 1623, column: 38, scope: !9966)
!10038 = !DILocation(line: 1623, column: 43, scope: !9966)
!10039 = !DILocation(line: 1623, column: 8, scope: !9966)
!10040 = !DILocation(line: 1623, column: 6, scope: !9966)
!10041 = !DILocation(line: 1624, column: 6, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1624, column: 6)
!10043 = !DILocation(line: 1624, column: 6, scope: !9966)
!10044 = !DILocation(line: 1625, column: 3, scope: !10042)
!10045 = !DILocation(line: 1628, column: 9, scope: !9966)
!10046 = !DILocation(line: 1628, column: 15, scope: !9966)
!10047 = !DILocation(line: 1628, column: 20, scope: !9966)
!10048 = !DILocation(line: 1628, column: 25, scope: !9966)
!10049 = !DILocation(line: 1628, column: 30, scope: !9966)
!10050 = !DILocation(line: 1628, column: 7, scope: !9966)
!10051 = !DILocation(line: 1629, column: 13, scope: !9966)
!10052 = !DILocation(line: 1629, column: 18, scope: !9966)
!10053 = !DILocation(line: 1629, column: 11, scope: !9966)
!10054 = !DILocation(line: 1630, column: 7, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1630, column: 6)
!10056 = !DILocation(line: 1630, column: 12, scope: !10055)
!10057 = !DILocation(line: 1630, column: 16, scope: !10055)
!10058 = !DILocation(line: 1630, column: 6, scope: !9966)
!10059 = !DILocation(line: 1631, column: 3, scope: !10055)
!10060 = !DILocation(line: 1633, column: 38, scope: !9966)
!10061 = !DILocation(line: 1633, column: 43, scope: !9966)
!10062 = !DILocation(line: 1633, column: 47, scope: !9966)
!10063 = !DILocation(line: 1633, column: 13, scope: !9966)
!10064 = !DILocation(line: 1633, column: 11, scope: !9966)
!10065 = !DILocation(line: 1634, column: 8, scope: !9966)
!10066 = !DILocation(line: 1634, column: 14, scope: !9966)
!10067 = !DILocation(line: 1634, column: 18, scope: !9966)
!10068 = !DILocation(line: 1634, column: 5, scope: !9966)
!10069 = !DILocation(line: 1635, column: 38, scope: !9966)
!10070 = !DILocation(line: 1635, column: 44, scope: !9966)
!10071 = !DILocation(line: 1635, column: 12, scope: !9966)
!10072 = !DILocation(line: 1635, column: 10, scope: !9966)
!10073 = !DILocation(line: 1636, column: 7, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1636, column: 6)
!10075 = !DILocation(line: 1636, column: 10, scope: !10074)
!10076 = !DILocation(line: 1636, column: 14, scope: !10074)
!10077 = !DILocation(line: 1636, column: 6, scope: !9966)
!10078 = !DILocation(line: 1637, column: 3, scope: !10074)
!10079 = !DILocation(line: 1640, column: 16, scope: !9966)
!10080 = !DILocation(line: 1640, column: 22, scope: !9966)
!10081 = !DILocation(line: 1640, column: 31, scope: !9966)
!10082 = !DILocation(line: 1640, column: 15, scope: !9966)
!10083 = !DILocation(line: 1640, column: 9, scope: !9966)
!10084 = !DILocation(line: 1640, column: 7, scope: !9966)
!10085 = !DILocation(line: 1641, column: 6, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1641, column: 6)
!10087 = !DILocation(line: 1641, column: 11, scope: !10086)
!10088 = !DILocation(line: 1641, column: 22, scope: !10086)
!10089 = !DILocation(line: 1641, column: 25, scope: !10086)
!10090 = !DILocation(line: 1641, column: 31, scope: !10086)
!10091 = !DILocation(line: 1641, column: 41, scope: !10086)
!10092 = !DILocation(line: 1641, column: 6, scope: !9966)
!10093 = !DILocation(line: 1642, column: 16, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10086, file: !3, line: 1641, column: 61)
!10095 = !DILocation(line: 1642, column: 3, scope: !10094)
!10096 = !DILocation(line: 1643, column: 3, scope: !10094)
!10097 = !DILocation(line: 1651, column: 19, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1651, column: 6)
!10099 = !DILocation(line: 1651, column: 29, scope: !10098)
!10100 = !DILocation(line: 1651, column: 36, scope: !10098)
!10101 = !DILocation(line: 1651, column: 7, scope: !10098)
!10102 = !DILocation(line: 1651, column: 6, scope: !9966)
!10103 = !DILocation(line: 1652, column: 3, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10098, file: !3, line: 1651, column: 46)
!10105 = !DILocation(line: 1653, column: 12, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10104, file: !3, line: 1653, column: 3)
!10107 = !DILocation(line: 1653, column: 22, scope: !10106)
!10108 = !DILocation(line: 1653, column: 10, scope: !10106)
!10109 = !DILocation(line: 1653, column: 8, scope: !10106)
!10110 = !DILocation(line: 1653, column: 36, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10106, file: !3, line: 1653, column: 3)
!10112 = !DILocation(line: 1653, column: 40, scope: !10111)
!10113 = !DILocation(line: 1653, column: 50, scope: !10111)
!10114 = !DILocation(line: 1653, column: 38, scope: !10111)
!10115 = !DILocation(line: 1653, column: 3, scope: !10106)
!10116 = !DILocation(line: 1654, column: 10, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10111, file: !3, line: 1653, column: 64)
!10118 = !DILocation(line: 1654, column: 20, scope: !10117)
!10119 = !DILocation(line: 1654, column: 23, scope: !10117)
!10120 = !DILocation(line: 1654, column: 7, scope: !10117)
!10121 = !DILocation(line: 1655, column: 21, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10117, file: !3, line: 1655, column: 8)
!10123 = !DILocation(line: 1655, column: 25, scope: !10122)
!10124 = !DILocation(line: 1655, column: 9, scope: !10122)
!10125 = !DILocation(line: 1655, column: 8, scope: !10117)
!10126 = !DILocation(line: 1656, column: 20, scope: !10122)
!10127 = !DILocation(line: 1656, column: 24, scope: !10122)
!10128 = !DILocation(line: 1656, column: 5, scope: !10122)
!10129 = !DILocation(line: 1657, column: 3, scope: !10117)
!10130 = !DILocation(line: 1653, column: 60, scope: !10111)
!10131 = !DILocation(line: 1653, column: 3, scope: !10111)
!10132 = distinct !{!10132, !10115, !10133}
!10133 = !DILocation(line: 1657, column: 3, scope: !10106)
!10134 = !DILocation(line: 1658, column: 3, scope: !10104)
!10135 = !DILocation(line: 1661, column: 6, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1661, column: 6)
!10137 = !DILocation(line: 1661, column: 12, scope: !10136)
!10138 = !DILocation(line: 1661, column: 22, scope: !10136)
!10139 = !DILocation(line: 1661, column: 6, scope: !9966)
!10140 = !DILocation(line: 1662, column: 18, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10136, file: !3, line: 1661, column: 43)
!10142 = !DILocation(line: 1662, column: 3, scope: !10141)
!10143 = !DILocation(line: 1664, column: 12, scope: !10144)
!10144 = distinct !DILexicalBlock(scope: !10141, file: !3, line: 1664, column: 3)
!10145 = !DILocation(line: 1664, column: 22, scope: !10144)
!10146 = !DILocation(line: 1664, column: 10, scope: !10144)
!10147 = !DILocation(line: 1664, column: 8, scope: !10144)
!10148 = !DILocation(line: 1665, column: 8, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10144, file: !3, line: 1664, column: 3)
!10150 = !DILocation(line: 1665, column: 12, scope: !10149)
!10151 = !DILocation(line: 1665, column: 22, scope: !10149)
!10152 = !DILocation(line: 1665, column: 10, scope: !10149)
!10153 = !DILocation(line: 1664, column: 3, scope: !10144)
!10154 = !DILocation(line: 1667, column: 10, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10149, file: !3, line: 1666, column: 13)
!10156 = !DILocation(line: 1667, column: 20, scope: !10155)
!10157 = !DILocation(line: 1667, column: 23, scope: !10155)
!10158 = !DILocation(line: 1667, column: 7, scope: !10155)
!10159 = !DILocation(line: 1668, column: 21, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10155, file: !3, line: 1668, column: 8)
!10161 = !DILocation(line: 1668, column: 25, scope: !10160)
!10162 = !DILocation(line: 1668, column: 9, scope: !10160)
!10163 = !DILocation(line: 1668, column: 8, scope: !10155)
!10164 = !DILocation(line: 1669, column: 20, scope: !10160)
!10165 = !DILocation(line: 1669, column: 24, scope: !10160)
!10166 = !DILocation(line: 1669, column: 5, scope: !10160)
!10167 = !DILocation(line: 1670, column: 21, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10155, file: !3, line: 1670, column: 8)
!10169 = !DILocation(line: 1670, column: 25, scope: !10168)
!10170 = !DILocation(line: 1670, column: 9, scope: !10168)
!10171 = !DILocation(line: 1670, column: 8, scope: !10155)
!10172 = !DILocation(line: 1671, column: 20, scope: !10168)
!10173 = !DILocation(line: 1671, column: 24, scope: !10168)
!10174 = !DILocation(line: 1671, column: 5, scope: !10168)
!10175 = !DILocation(line: 1672, column: 3, scope: !10155)
!10176 = !DILocation(line: 1666, column: 9, scope: !10149)
!10177 = !DILocation(line: 1664, column: 3, scope: !10149)
!10178 = distinct !{!10178, !10153, !10179}
!10179 = !DILocation(line: 1672, column: 3, scope: !10144)
!10180 = !DILocation(line: 1673, column: 3, scope: !10141)
!10181 = !DILocation(line: 1676, column: 6, scope: !9966)
!10182 = !DILocation(line: 1676, column: 16, scope: !9966)
!10183 = !DILocation(line: 1676, column: 4, scope: !9966)
!10184 = !DILocation(line: 1677, column: 6, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1677, column: 6)
!10186 = !DILocation(line: 1677, column: 10, scope: !10185)
!10187 = !DILocation(line: 1677, column: 20, scope: !10185)
!10188 = !DILocation(line: 1677, column: 8, scope: !10185)
!10189 = !DILocation(line: 1677, column: 6, scope: !9966)
!10190 = !DILocation(line: 1678, column: 18, scope: !10185)
!10191 = !DILocation(line: 1681, column: 5, scope: !10185)
!10192 = !DILocation(line: 1681, column: 10, scope: !10185)
!10193 = !DILocation(line: 1681, column: 15, scope: !10185)
!10194 = !DILocation(line: 1681, column: 20, scope: !10185)
!10195 = !DILocation(line: 1682, column: 5, scope: !10185)
!10196 = !DILocation(line: 1682, column: 10, scope: !10185)
!10197 = !DILocation(line: 1682, column: 14, scope: !10185)
!10198 = !DILocation(line: 1682, column: 19, scope: !10185)
!10199 = !DILocation(line: 1684, column: 6, scope: !10185)
!10200 = !DILocation(line: 1684, column: 16, scope: !10185)
!10201 = !DILocation(line: 1684, column: 19, scope: !10185)
!10202 = !DILocation(line: 1684, column: 22, scope: !10185)
!10203 = !DILocation(line: 1685, column: 6, scope: !10185)
!10204 = !DILocation(line: 1685, column: 16, scope: !10185)
!10205 = !DILocation(line: 1685, column: 19, scope: !10185)
!10206 = !DILocation(line: 1685, column: 22, scope: !10185)
!10207 = !DILocation(line: 1683, column: 26, scope: !10185)
!10208 = !DILocation(line: 1678, column: 3, scope: !10185)
!10209 = !DILocation(line: 1687, column: 2, scope: !9966)
!10210 = !DILocation(line: 1687, column: 9, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10212, file: !3, line: 1687, column: 2)
!10212 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1687, column: 2)
!10213 = !DILocation(line: 1687, column: 13, scope: !10211)
!10214 = !DILocation(line: 1687, column: 23, scope: !10211)
!10215 = !DILocation(line: 1687, column: 11, scope: !10211)
!10216 = !DILocation(line: 1687, column: 2, scope: !10212)
!10217 = !DILocation(line: 1688, column: 9, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10211, file: !3, line: 1687, column: 37)
!10219 = !DILocation(line: 1688, column: 19, scope: !10218)
!10220 = !DILocation(line: 1688, column: 22, scope: !10218)
!10221 = !DILocation(line: 1688, column: 6, scope: !10218)
!10222 = !DILocation(line: 1689, column: 18, scope: !10218)
!10223 = !DILocation(line: 1689, column: 22, scope: !10218)
!10224 = !DILocation(line: 1689, column: 42, scope: !10218)
!10225 = !DILocation(line: 1689, column: 46, scope: !10218)
!10226 = !DILocation(line: 1689, column: 3, scope: !10218)
!10227 = !DILocation(line: 1690, column: 2, scope: !10218)
!10228 = !DILocation(line: 1687, column: 33, scope: !10211)
!10229 = !DILocation(line: 1687, column: 2, scope: !10211)
!10230 = distinct !{!10230, !10216, !10231}
!10231 = !DILocation(line: 1690, column: 2, scope: !10212)
!10232 = !DILocation(line: 1695, column: 8, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1695, column: 6)
!10234 = !DILocation(line: 1695, column: 12, scope: !10233)
!10235 = !DILocation(line: 1695, column: 21, scope: !10233)
!10236 = !DILocation(line: 1695, column: 6, scope: !9966)
!10237 = !DILocation(line: 1696, column: 32, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 1695, column: 45)
!10239 = !DILocation(line: 1696, column: 13, scope: !10238)
!10240 = !DILocation(line: 1696, column: 11, scope: !10238)
!10241 = !DILocation(line: 1697, column: 8, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 1697, column: 7)
!10243 = !DILocation(line: 1697, column: 7, scope: !10238)
!10244 = !DILocation(line: 1698, column: 8, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10242, file: !3, line: 1697, column: 17)
!10246 = !DILocation(line: 1699, column: 4, scope: !10245)
!10247 = !DILocation(line: 1701, column: 3, scope: !10238)
!10248 = !DILocation(line: 1701, column: 7, scope: !10238)
!10249 = !DILocation(line: 1701, column: 16, scope: !10238)
!10250 = !DILocation(line: 1702, column: 32, scope: !10238)
!10251 = !DILocation(line: 1702, column: 40, scope: !10238)
!10252 = !DILocation(line: 1702, column: 3, scope: !10238)
!10253 = !DILocation(line: 1702, column: 7, scope: !10238)
!10254 = !DILocation(line: 1702, column: 22, scope: !10238)
!10255 = !DILocation(line: 1702, column: 30, scope: !10238)
!10256 = !DILocation(line: 1704, column: 14, scope: !10238)
!10257 = !DILocation(line: 1704, column: 18, scope: !10238)
!10258 = !DILocation(line: 1704, column: 3, scope: !10238)
!10259 = !DILocation(line: 1705, column: 28, scope: !10238)
!10260 = !DILocation(line: 1705, column: 34, scope: !10238)
!10261 = !DILocation(line: 1705, column: 43, scope: !10238)
!10262 = !DILocation(line: 1705, column: 48, scope: !10238)
!10263 = !DILocation(line: 1705, column: 53, scope: !10238)
!10264 = !DILocation(line: 1706, column: 7, scope: !10238)
!10265 = !DILocation(line: 1705, column: 3, scope: !10238)
!10266 = !DILocation(line: 1707, column: 20, scope: !10238)
!10267 = !DILocation(line: 1707, column: 3, scope: !10238)
!10268 = !DILocation(line: 1708, column: 2, scope: !10238)
!10269 = !DILocation(line: 1695, column: 42, scope: !10233)
!10270 = !DILabel(scope: !9966, name: "done", file: !3, line: 1709)
!10271 = !DILocation(line: 1709, column: 1, scope: !9966)
!10272 = !DILocation(line: 1710, column: 26, scope: !9966)
!10273 = !DILocation(line: 1710, column: 32, scope: !9966)
!10274 = !DILocation(line: 1710, column: 38, scope: !9966)
!10275 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !9968)
!10276 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !9968)
!10277 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !9968)
!10278 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !9968)
!10279 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !9968)
!10280 = !DILocation(line: 1711, column: 9, scope: !9966)
!10281 = !DILocation(line: 1711, column: 2, scope: !9966)
!10282 = !DILabel(scope: !9966, name: "err_giveback", file: !3, line: 1713)
!10283 = !DILocation(line: 1713, column: 1, scope: !9966)
!10284 = !DILocation(line: 1714, column: 6, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 1714, column: 6)
!10286 = !DILocation(line: 1714, column: 6, scope: !9966)
!10287 = !DILocation(line: 1715, column: 22, scope: !10285)
!10288 = !DILocation(line: 1715, column: 3, scope: !10285)
!10289 = !DILocation(line: 1716, column: 29, scope: !9966)
!10290 = !DILocation(line: 1716, column: 34, scope: !9966)
!10291 = !DILocation(line: 1716, column: 2, scope: !9966)
!10292 = !DILocation(line: 1717, column: 26, scope: !9966)
!10293 = !DILocation(line: 1717, column: 32, scope: !9966)
!10294 = !DILocation(line: 1717, column: 38, scope: !9966)
!10295 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !9971)
!10296 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !9971)
!10297 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !9971)
!10298 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !9971)
!10299 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !9971)
!10300 = !DILocation(line: 1718, column: 23, scope: !9966)
!10301 = !DILocation(line: 1718, column: 28, scope: !9966)
!10302 = !DILocation(line: 1718, column: 2, scope: !9966)
!10303 = !DILocation(line: 1719, column: 9, scope: !9966)
!10304 = !DILocation(line: 1719, column: 2, scope: !9966)
!10305 = !DILocation(line: 1720, column: 1, scope: !9966)
!10306 = distinct !DISubprogram(name: "xhci_map_urb_for_dma", scope: !3, file: !3, line: 1268, type: !4920, scopeLine: 1270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!10307 = !DILocalVariable(name: "hcd", arg: 1, scope: !10306, file: !3, line: 1268, type: !4501)
!10308 = !DILocation(line: 1268, column: 49, scope: !10306)
!10309 = !DILocalVariable(name: "urb", arg: 2, scope: !10306, file: !3, line: 1268, type: !4825)
!10310 = !DILocation(line: 1268, column: 66, scope: !10306)
!10311 = !DILocalVariable(name: "mem_flags", arg: 3, scope: !10306, file: !3, line: 1269, type: !875)
!10312 = !DILocation(line: 1269, column: 11, scope: !10306)
!10313 = !DILocation(line: 1271, column: 32, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 1271, column: 6)
!10315 = !DILocation(line: 1271, column: 6, scope: !10314)
!10316 = !DILocation(line: 1271, column: 6, scope: !10306)
!10317 = !DILocation(line: 1272, column: 3, scope: !10314)
!10318 = !DILocation(line: 1274, column: 33, scope: !10306)
!10319 = !DILocation(line: 1274, column: 38, scope: !10306)
!10320 = !DILocation(line: 1274, column: 43, scope: !10306)
!10321 = !DILocation(line: 1274, column: 9, scope: !10306)
!10322 = !DILocation(line: 1274, column: 2, scope: !10306)
!10323 = !DILocation(line: 1275, column: 1, scope: !10306)
!10324 = distinct !DISubprogram(name: "xhci_endpoint_disable", scope: !3, file: !3, line: 3076, type: !4933, scopeLine: 3078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!10325 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !10326)
!10326 = distinct !DILocation(line: 3105, column: 3, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10328, file: !3, line: 3104, column: 37)
!10328 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 3104, column: 6)
!10329 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !10326)
!10330 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !10331)
!10331 = distinct !DILocation(line: 3115, column: 2, scope: !10324)
!10332 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !10331)
!10333 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !10334)
!10334 = distinct !DILocation(line: 3088, column: 2, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10336, file: !3, line: 3088, column: 2)
!10336 = distinct !DILexicalBlock(scope: !10337, file: !3, line: 3088, column: 2)
!10337 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 3088, column: 2)
!10338 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 3088, column: 2)
!10339 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 3088, column: 2)
!10340 = !DILocalVariable(name: "hcd", arg: 1, scope: !10324, file: !3, line: 3076, type: !4501)
!10341 = !DILocation(line: 3076, column: 51, scope: !10324)
!10342 = !DILocalVariable(name: "host_ep", arg: 2, scope: !10324, file: !3, line: 3077, type: !4725)
!10343 = !DILocation(line: 3077, column: 33, scope: !10324)
!10344 = !DILocalVariable(name: "xhci", scope: !10324, file: !3, line: 3079, type: !4497)
!10345 = !DILocation(line: 3079, column: 20, scope: !10324)
!10346 = !DILocalVariable(name: "vdev", scope: !10324, file: !3, line: 3080, type: !5290)
!10347 = !DILocation(line: 3080, column: 27, scope: !10324)
!10348 = !DILocalVariable(name: "ep", scope: !10324, file: !3, line: 3081, type: !5464)
!10349 = !DILocation(line: 3081, column: 23, scope: !10324)
!10350 = !DILocalVariable(name: "udev", scope: !10324, file: !3, line: 3082, type: !4526)
!10351 = !DILocation(line: 3082, column: 21, scope: !10324)
!10352 = !DILocalVariable(name: "flags", scope: !10324, file: !3, line: 3083, type: !248)
!10353 = !DILocation(line: 3083, column: 17, scope: !10324)
!10354 = !DILocalVariable(name: "ep_index", scope: !10324, file: !3, line: 3084, type: !7)
!10355 = !DILocation(line: 3084, column: 16, scope: !10324)
!10356 = !DILocation(line: 3086, column: 21, scope: !10324)
!10357 = !DILocation(line: 3086, column: 9, scope: !10324)
!10358 = !DILocation(line: 3086, column: 7, scope: !10324)
!10359 = !DILocation(line: 3086, column: 2, scope: !10324)
!10360 = !DILabel(scope: !10324, name: "rescan", file: !3, line: 3087)
!10361 = !DILocation(line: 3087, column: 1, scope: !10324)
!10362 = !DILocation(line: 3088, column: 2, scope: !10324)
!10363 = !DILocation(line: 3088, column: 2, scope: !10339)
!10364 = !DILocalVariable(name: "__dummy", scope: !10365, file: !3, line: 3088, type: !248)
!10365 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 3088, column: 2)
!10366 = !DILocation(line: 3088, column: 2, scope: !10365)
!10367 = !DILocalVariable(name: "__dummy2", scope: !10365, file: !3, line: 3088, type: !248)
!10368 = !DILocation(line: 3088, column: 2, scope: !10338)
!10369 = !DILocation(line: 3088, column: 2, scope: !10337)
!10370 = !DILocation(line: 3088, column: 2, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10337, file: !3, line: 3088, column: 2)
!10372 = !DILocalVariable(name: "__dummy", scope: !10373, file: !3, line: 3088, type: !248)
!10373 = distinct !DILexicalBlock(scope: !10374, file: !3, line: 3088, column: 2)
!10374 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 3088, column: 2)
!10375 = !DILocation(line: 3088, column: 2, scope: !10373)
!10376 = !DILocalVariable(name: "__dummy2", scope: !10373, file: !3, line: 3088, type: !248)
!10377 = !DILocation(line: 3088, column: 2, scope: !10374)
!10378 = !DILocation(line: 3088, column: 2, scope: !10336)
!10379 = !{i32 -2140648788}
!10380 = !DILocation(line: 3088, column: 2, scope: !10335)
!10381 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !10334)
!10382 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !10334)
!10383 = !DILocation(line: 3090, column: 30, scope: !10324)
!10384 = !DILocation(line: 3090, column: 39, scope: !10324)
!10385 = !DILocation(line: 3090, column: 9, scope: !10324)
!10386 = !DILocation(line: 3090, column: 7, scope: !10324)
!10387 = !DILocation(line: 3091, column: 7, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 3091, column: 6)
!10389 = !DILocation(line: 3091, column: 12, scope: !10388)
!10390 = !DILocation(line: 3091, column: 16, scope: !10388)
!10391 = !DILocation(line: 3091, column: 22, scope: !10388)
!10392 = !DILocation(line: 3091, column: 6, scope: !10324)
!10393 = !DILocation(line: 3092, column: 3, scope: !10388)
!10394 = !DILocation(line: 3094, column: 9, scope: !10324)
!10395 = !DILocation(line: 3094, column: 15, scope: !10324)
!10396 = !DILocation(line: 3094, column: 20, scope: !10324)
!10397 = !DILocation(line: 3094, column: 26, scope: !10324)
!10398 = !DILocation(line: 3094, column: 7, scope: !10324)
!10399 = !DILocation(line: 3095, column: 7, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 3095, column: 6)
!10401 = !DILocation(line: 3095, column: 6, scope: !10324)
!10402 = !DILocation(line: 3096, column: 3, scope: !10400)
!10403 = !DILocation(line: 3098, column: 38, scope: !10324)
!10404 = !DILocation(line: 3098, column: 47, scope: !10324)
!10405 = !DILocation(line: 3098, column: 13, scope: !10324)
!10406 = !DILocation(line: 3098, column: 11, scope: !10324)
!10407 = !DILocation(line: 3099, column: 8, scope: !10324)
!10408 = !DILocation(line: 3099, column: 14, scope: !10324)
!10409 = !DILocation(line: 3099, column: 18, scope: !10324)
!10410 = !DILocation(line: 3099, column: 5, scope: !10324)
!10411 = !DILocation(line: 3100, column: 7, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 3100, column: 6)
!10413 = !DILocation(line: 3100, column: 6, scope: !10324)
!10414 = !DILocation(line: 3101, column: 3, scope: !10412)
!10415 = !DILocation(line: 3104, column: 6, scope: !10328)
!10416 = !DILocation(line: 3104, column: 10, scope: !10328)
!10417 = !DILocation(line: 3104, column: 19, scope: !10328)
!10418 = !DILocation(line: 3104, column: 6, scope: !10324)
!10419 = !DILocation(line: 3105, column: 27, scope: !10327)
!10420 = !DILocation(line: 3105, column: 33, scope: !10327)
!10421 = !DILocation(line: 3105, column: 39, scope: !10327)
!10422 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !10326)
!10423 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !10326)
!10424 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !10326)
!10425 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !10326)
!10426 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !10326)
!10427 = !DILocation(line: 3106, column: 3, scope: !10327)
!10428 = !DILocation(line: 3107, column: 3, scope: !10327)
!10429 = !DILocation(line: 3110, column: 6, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 3110, column: 6)
!10431 = !DILocation(line: 3110, column: 10, scope: !10430)
!10432 = !DILocation(line: 3110, column: 6, scope: !10324)
!10433 = !DILocation(line: 3111, column: 3, scope: !10430)
!10434 = !DILabel(scope: !10324, name: "done", file: !3, line: 3113)
!10435 = !DILocation(line: 3113, column: 1, scope: !10324)
!10436 = !DILocation(line: 3114, column: 2, scope: !10324)
!10437 = !DILocation(line: 3114, column: 11, scope: !10324)
!10438 = !DILocation(line: 3114, column: 18, scope: !10324)
!10439 = !DILocation(line: 3115, column: 26, scope: !10324)
!10440 = !DILocation(line: 3115, column: 32, scope: !10324)
!10441 = !DILocation(line: 3115, column: 38, scope: !10324)
!10442 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !10331)
!10443 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !10331)
!10444 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !10331)
!10445 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !10331)
!10446 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !10331)
!10447 = !DILocation(line: 3116, column: 1, scope: !10324)
!10448 = distinct !DISubprogram(name: "xhci_endpoint_reset", scope: !3, file: !3, line: 3130, type: !4933, scopeLine: 3132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!10449 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !10450)
!10450 = distinct !DILocation(line: 3229, column: 3, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 3228, column: 15)
!10452 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3228, column: 6)
!10453 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !10450)
!10454 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !10455)
!10455 = distinct !DILocation(line: 3218, column: 2, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10457, file: !3, line: 3218, column: 2)
!10457 = distinct !DILexicalBlock(scope: !10458, file: !3, line: 3218, column: 2)
!10458 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 3218, column: 2)
!10459 = distinct !DILexicalBlock(scope: !10460, file: !3, line: 3218, column: 2)
!10460 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3218, column: 2)
!10461 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !10462)
!10462 = distinct !DILocation(line: 3214, column: 2, scope: !10448)
!10463 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !10462)
!10464 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !10465)
!10465 = distinct !DILocation(line: 3206, column: 3, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10467, file: !3, line: 3205, column: 15)
!10467 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3205, column: 6)
!10468 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !10465)
!10469 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !10470)
!10470 = distinct !DILocation(line: 3198, column: 3, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 3196, column: 39)
!10472 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3196, column: 6)
!10473 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !10470)
!10474 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !10475)
!10475 = distinct !DILocation(line: 3237, column: 2, scope: !10448)
!10476 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !10475)
!10477 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !10478)
!10478 = distinct !DILocation(line: 3185, column: 2, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10480, file: !3, line: 3185, column: 2)
!10480 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 3185, column: 2)
!10481 = distinct !DILexicalBlock(scope: !10482, file: !3, line: 3185, column: 2)
!10482 = distinct !DILexicalBlock(scope: !10483, file: !3, line: 3185, column: 2)
!10483 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3185, column: 2)
!10484 = !DILocalVariable(name: "hcd", arg: 1, scope: !10448, file: !3, line: 3130, type: !4501)
!10485 = !DILocation(line: 3130, column: 49, scope: !10448)
!10486 = !DILocalVariable(name: "host_ep", arg: 2, scope: !10448, file: !3, line: 3131, type: !4725)
!10487 = !DILocation(line: 3131, column: 29, scope: !10448)
!10488 = !DILocalVariable(name: "xhci", scope: !10448, file: !3, line: 3133, type: !4497)
!10489 = !DILocation(line: 3133, column: 19, scope: !10448)
!10490 = !DILocalVariable(name: "udev", scope: !10448, file: !3, line: 3134, type: !4526)
!10491 = !DILocation(line: 3134, column: 21, scope: !10448)
!10492 = !DILocalVariable(name: "vdev", scope: !10448, file: !3, line: 3135, type: !5290)
!10493 = !DILocation(line: 3135, column: 27, scope: !10448)
!10494 = !DILocalVariable(name: "ep", scope: !10448, file: !3, line: 3136, type: !5464)
!10495 = !DILocation(line: 3136, column: 23, scope: !10448)
!10496 = !DILocalVariable(name: "ctrl_ctx", scope: !10448, file: !3, line: 3137, type: !8108)
!10497 = !DILocation(line: 3137, column: 33, scope: !10448)
!10498 = !DILocalVariable(name: "stop_cmd", scope: !10448, file: !3, line: 3138, type: !5247)
!10499 = !DILocation(line: 3138, column: 23, scope: !10448)
!10500 = !DILocalVariable(name: "cfg_cmd", scope: !10448, file: !3, line: 3138, type: !5247)
!10501 = !DILocation(line: 3138, column: 34, scope: !10448)
!10502 = !DILocalVariable(name: "ep_index", scope: !10448, file: !3, line: 3139, type: !7)
!10503 = !DILocation(line: 3139, column: 15, scope: !10448)
!10504 = !DILocalVariable(name: "flags", scope: !10448, file: !3, line: 3140, type: !248)
!10505 = !DILocation(line: 3140, column: 16, scope: !10448)
!10506 = !DILocalVariable(name: "ep_flag", scope: !10448, file: !3, line: 3141, type: !204)
!10507 = !DILocation(line: 3141, column: 6, scope: !10448)
!10508 = !DILocalVariable(name: "err", scope: !10448, file: !3, line: 3142, type: !265)
!10509 = !DILocation(line: 3142, column: 6, scope: !10448)
!10510 = !DILocation(line: 3144, column: 21, scope: !10448)
!10511 = !DILocation(line: 3144, column: 9, scope: !10448)
!10512 = !DILocation(line: 3144, column: 7, scope: !10448)
!10513 = !DILocation(line: 3145, column: 7, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3145, column: 6)
!10515 = !DILocation(line: 3145, column: 16, scope: !10514)
!10516 = !DILocation(line: 3145, column: 6, scope: !10448)
!10517 = !DILocation(line: 3146, column: 3, scope: !10514)
!10518 = !DILocation(line: 3147, column: 31, scope: !10448)
!10519 = !DILocation(line: 3147, column: 40, scope: !10448)
!10520 = !DILocation(line: 3147, column: 9, scope: !10448)
!10521 = !DILocation(line: 3147, column: 7, scope: !10448)
!10522 = !DILocation(line: 3148, column: 9, scope: !10448)
!10523 = !DILocation(line: 3148, column: 15, scope: !10448)
!10524 = !DILocation(line: 3148, column: 20, scope: !10448)
!10525 = !DILocation(line: 3148, column: 26, scope: !10448)
!10526 = !DILocation(line: 3148, column: 7, scope: !10448)
!10527 = !DILocation(line: 3155, column: 7, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3155, column: 6)
!10529 = !DILocation(line: 3155, column: 13, scope: !10528)
!10530 = !DILocation(line: 3155, column: 21, scope: !10528)
!10531 = !DILocation(line: 3155, column: 25, scope: !10528)
!10532 = !DILocation(line: 3155, column: 6, scope: !10448)
!10533 = !DILocation(line: 3156, column: 3, scope: !10528)
!10534 = !DILocation(line: 3157, column: 38, scope: !10448)
!10535 = !DILocation(line: 3157, column: 47, scope: !10448)
!10536 = !DILocation(line: 3157, column: 13, scope: !10448)
!10537 = !DILocation(line: 3157, column: 11, scope: !10448)
!10538 = !DILocation(line: 3158, column: 8, scope: !10448)
!10539 = !DILocation(line: 3158, column: 14, scope: !10448)
!10540 = !DILocation(line: 3158, column: 18, scope: !10448)
!10541 = !DILocation(line: 3158, column: 5, scope: !10448)
!10542 = !DILocation(line: 3159, column: 7, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3159, column: 6)
!10544 = !DILocation(line: 3159, column: 6, scope: !10448)
!10545 = !DILocation(line: 3160, column: 3, scope: !10543)
!10546 = !DILocation(line: 3163, column: 6, scope: !10547)
!10547 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3163, column: 6)
!10548 = !DILocation(line: 3163, column: 10, scope: !10547)
!10549 = !DILocation(line: 3163, column: 19, scope: !10547)
!10550 = !DILocation(line: 3163, column: 6, scope: !10448)
!10551 = !DILocation(line: 3164, column: 3, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10547, file: !3, line: 3163, column: 43)
!10553 = !DILocation(line: 3164, column: 7, scope: !10552)
!10554 = !DILocation(line: 3164, column: 16, scope: !10552)
!10555 = !DILocation(line: 3165, column: 3, scope: !10552)
!10556 = !DILocation(line: 3168, column: 33, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3168, column: 6)
!10558 = !DILocation(line: 3168, column: 42, scope: !10557)
!10559 = !DILocation(line: 3168, column: 6, scope: !10557)
!10560 = !DILocation(line: 3168, column: 48, scope: !10557)
!10561 = !DILocation(line: 3169, column: 30, scope: !10557)
!10562 = !DILocation(line: 3169, column: 39, scope: !10557)
!10563 = !DILocation(line: 3169, column: 6, scope: !10557)
!10564 = !DILocation(line: 3168, column: 6, scope: !10448)
!10565 = !DILocation(line: 3170, column: 3, scope: !10557)
!10566 = !DILocation(line: 3172, column: 36, scope: !10448)
!10567 = !DILocation(line: 3172, column: 45, scope: !10448)
!10568 = !DILocation(line: 3172, column: 12, scope: !10448)
!10569 = !DILocation(line: 3172, column: 10, scope: !10448)
!10570 = !DILocation(line: 3174, column: 6, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3174, column: 6)
!10572 = !DILocation(line: 3174, column: 14, scope: !10571)
!10573 = !DILocation(line: 3174, column: 27, scope: !10571)
!10574 = !DILocation(line: 3174, column: 30, scope: !10571)
!10575 = !DILocation(line: 3174, column: 38, scope: !10571)
!10576 = !DILocation(line: 3174, column: 6, scope: !10448)
!10577 = !DILocation(line: 3175, column: 3, scope: !10571)
!10578 = !DILocation(line: 3177, column: 32, scope: !10448)
!10579 = !DILocation(line: 3177, column: 13, scope: !10448)
!10580 = !DILocation(line: 3177, column: 11, scope: !10448)
!10581 = !DILocation(line: 3178, column: 7, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3178, column: 6)
!10583 = !DILocation(line: 3178, column: 6, scope: !10448)
!10584 = !DILocation(line: 3179, column: 3, scope: !10582)
!10585 = !DILocation(line: 3181, column: 40, scope: !10448)
!10586 = !DILocation(line: 3181, column: 12, scope: !10448)
!10587 = !DILocation(line: 3181, column: 10, scope: !10448)
!10588 = !DILocation(line: 3182, column: 7, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3182, column: 6)
!10590 = !DILocation(line: 3182, column: 6, scope: !10448)
!10591 = !DILocation(line: 3183, column: 3, scope: !10589)
!10592 = !DILocation(line: 3185, column: 2, scope: !10448)
!10593 = !DILocation(line: 3185, column: 2, scope: !10483)
!10594 = !DILocalVariable(name: "__dummy", scope: !10595, file: !3, line: 3185, type: !248)
!10595 = distinct !DILexicalBlock(scope: !10482, file: !3, line: 3185, column: 2)
!10596 = !DILocation(line: 3185, column: 2, scope: !10595)
!10597 = !DILocalVariable(name: "__dummy2", scope: !10595, file: !3, line: 3185, type: !248)
!10598 = !DILocation(line: 3185, column: 2, scope: !10482)
!10599 = !DILocation(line: 3185, column: 2, scope: !10481)
!10600 = !DILocation(line: 3185, column: 2, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 3185, column: 2)
!10602 = !DILocalVariable(name: "__dummy", scope: !10603, file: !3, line: 3185, type: !248)
!10603 = distinct !DILexicalBlock(scope: !10604, file: !3, line: 3185, column: 2)
!10604 = distinct !DILexicalBlock(scope: !10601, file: !3, line: 3185, column: 2)
!10605 = !DILocation(line: 3185, column: 2, scope: !10603)
!10606 = !DILocalVariable(name: "__dummy2", scope: !10603, file: !3, line: 3185, type: !248)
!10607 = !DILocation(line: 3185, column: 2, scope: !10604)
!10608 = !DILocation(line: 3185, column: 2, scope: !10480)
!10609 = !{i32 -2140647205}
!10610 = !DILocation(line: 3185, column: 2, scope: !10479)
!10611 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !10478)
!10612 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !10478)
!10613 = !DILocation(line: 3188, column: 2, scope: !10448)
!10614 = !DILocation(line: 3188, column: 6, scope: !10448)
!10615 = !DILocation(line: 3188, column: 15, scope: !10448)
!10616 = !DILocation(line: 3196, column: 19, scope: !10472)
!10617 = !DILocation(line: 3196, column: 23, scope: !10472)
!10618 = !DILocation(line: 3196, column: 29, scope: !10472)
!10619 = !DILocation(line: 3196, column: 7, scope: !10472)
!10620 = !DILocation(line: 3196, column: 6, scope: !10448)
!10621 = !DILocation(line: 3197, column: 3, scope: !10471)
!10622 = !DILocation(line: 3198, column: 27, scope: !10471)
!10623 = !DILocation(line: 3198, column: 33, scope: !10471)
!10624 = !DILocation(line: 3198, column: 39, scope: !10471)
!10625 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !10470)
!10626 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !10470)
!10627 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !10470)
!10628 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !10470)
!10629 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !10470)
!10630 = !DILocation(line: 3199, column: 21, scope: !10471)
!10631 = !DILocation(line: 3199, column: 27, scope: !10471)
!10632 = !DILocation(line: 3199, column: 3, scope: !10471)
!10633 = !DILocation(line: 3200, column: 3, scope: !10471)
!10634 = !DILocation(line: 3203, column: 33, scope: !10448)
!10635 = !DILocation(line: 3203, column: 39, scope: !10448)
!10636 = !DILocation(line: 3203, column: 49, scope: !10448)
!10637 = !DILocation(line: 3203, column: 55, scope: !10448)
!10638 = !DILocation(line: 3204, column: 6, scope: !10448)
!10639 = !DILocation(line: 3203, column: 8, scope: !10448)
!10640 = !DILocation(line: 3203, column: 6, scope: !10448)
!10641 = !DILocation(line: 3205, column: 6, scope: !10467)
!10642 = !DILocation(line: 3205, column: 10, scope: !10467)
!10643 = !DILocation(line: 3205, column: 6, scope: !10448)
!10644 = !DILocation(line: 3206, column: 27, scope: !10466)
!10645 = !DILocation(line: 3206, column: 33, scope: !10466)
!10646 = !DILocation(line: 3206, column: 39, scope: !10466)
!10647 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !10465)
!10648 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !10465)
!10649 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !10465)
!10650 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !10465)
!10651 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !10465)
!10652 = !DILocation(line: 3207, column: 21, scope: !10466)
!10653 = !DILocation(line: 3207, column: 27, scope: !10466)
!10654 = !DILocation(line: 3207, column: 3, scope: !10466)
!10655 = !DILocation(line: 3210, column: 3, scope: !10466)
!10656 = !DILocation(line: 3213, column: 19, scope: !10448)
!10657 = !DILocation(line: 3213, column: 2, scope: !10448)
!10658 = !DILocation(line: 3214, column: 26, scope: !10448)
!10659 = !DILocation(line: 3214, column: 32, scope: !10448)
!10660 = !DILocation(line: 3214, column: 38, scope: !10448)
!10661 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !10462)
!10662 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !10462)
!10663 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !10462)
!10664 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !10462)
!10665 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !10462)
!10666 = !DILocation(line: 3216, column: 22, scope: !10448)
!10667 = !DILocation(line: 3216, column: 32, scope: !10448)
!10668 = !DILocation(line: 3216, column: 2, scope: !10448)
!10669 = !DILocation(line: 3218, column: 2, scope: !10448)
!10670 = !DILocation(line: 3218, column: 2, scope: !10460)
!10671 = !DILocalVariable(name: "__dummy", scope: !10672, file: !3, line: 3218, type: !248)
!10672 = distinct !DILexicalBlock(scope: !10459, file: !3, line: 3218, column: 2)
!10673 = !DILocation(line: 3218, column: 2, scope: !10672)
!10674 = !DILocalVariable(name: "__dummy2", scope: !10672, file: !3, line: 3218, type: !248)
!10675 = !DILocation(line: 3218, column: 2, scope: !10459)
!10676 = !DILocation(line: 3218, column: 2, scope: !10458)
!10677 = !DILocation(line: 3218, column: 2, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10458, file: !3, line: 3218, column: 2)
!10679 = !DILocalVariable(name: "__dummy", scope: !10680, file: !3, line: 3218, type: !248)
!10680 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 3218, column: 2)
!10681 = distinct !DILexicalBlock(scope: !10678, file: !3, line: 3218, column: 2)
!10682 = !DILocation(line: 3218, column: 2, scope: !10680)
!10683 = !DILocalVariable(name: "__dummy2", scope: !10680, file: !3, line: 3218, type: !248)
!10684 = !DILocation(line: 3218, column: 2, scope: !10681)
!10685 = !DILocation(line: 3218, column: 2, scope: !10457)
!10686 = !{i32 -2140645677}
!10687 = !DILocation(line: 3218, column: 2, scope: !10456)
!10688 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !10455)
!10689 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !10455)
!10690 = !DILocation(line: 3221, column: 40, scope: !10448)
!10691 = !DILocation(line: 3221, column: 49, scope: !10448)
!10692 = !DILocation(line: 3221, column: 13, scope: !10448)
!10693 = !DILocation(line: 3221, column: 11, scope: !10448)
!10694 = !DILocation(line: 3222, column: 37, scope: !10448)
!10695 = !DILocation(line: 3222, column: 43, scope: !10448)
!10696 = !DILocation(line: 3222, column: 52, scope: !10448)
!10697 = !DILocation(line: 3222, column: 60, scope: !10448)
!10698 = !DILocation(line: 3222, column: 66, scope: !10448)
!10699 = !DILocation(line: 3223, column: 9, scope: !10448)
!10700 = !DILocation(line: 3223, column: 19, scope: !10448)
!10701 = !DILocation(line: 3223, column: 28, scope: !10448)
!10702 = !DILocation(line: 3222, column: 2, scope: !10448)
!10703 = !DILocation(line: 3224, column: 21, scope: !10448)
!10704 = !DILocation(line: 3224, column: 27, scope: !10448)
!10705 = !DILocation(line: 3224, column: 36, scope: !10448)
!10706 = !DILocation(line: 3224, column: 44, scope: !10448)
!10707 = !DILocation(line: 3224, column: 50, scope: !10448)
!10708 = !DILocation(line: 3224, column: 59, scope: !10448)
!10709 = !DILocation(line: 3224, column: 2, scope: !10448)
!10710 = !DILocation(line: 3226, column: 38, scope: !10448)
!10711 = !DILocation(line: 3226, column: 44, scope: !10448)
!10712 = !DILocation(line: 3226, column: 53, scope: !10448)
!10713 = !DILocation(line: 3226, column: 62, scope: !10448)
!10714 = !DILocation(line: 3226, column: 70, scope: !10448)
!10715 = !DILocation(line: 3227, column: 11, scope: !10448)
!10716 = !DILocation(line: 3227, column: 17, scope: !10448)
!10717 = !DILocation(line: 3226, column: 8, scope: !10448)
!10718 = !DILocation(line: 3226, column: 6, scope: !10448)
!10719 = !DILocation(line: 3228, column: 6, scope: !10452)
!10720 = !DILocation(line: 3228, column: 10, scope: !10452)
!10721 = !DILocation(line: 3228, column: 6, scope: !10448)
!10722 = !DILocation(line: 3229, column: 27, scope: !10451)
!10723 = !DILocation(line: 3229, column: 33, scope: !10451)
!10724 = !DILocation(line: 3229, column: 39, scope: !10451)
!10725 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !10450)
!10726 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !10450)
!10727 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !10450)
!10728 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !10450)
!10729 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !10450)
!10730 = !DILocation(line: 3230, column: 21, scope: !10451)
!10731 = !DILocation(line: 3230, column: 27, scope: !10451)
!10732 = !DILocation(line: 3230, column: 3, scope: !10451)
!10733 = !DILocation(line: 3233, column: 3, scope: !10451)
!10734 = !DILocation(line: 3236, column: 19, scope: !10448)
!10735 = !DILocation(line: 3236, column: 2, scope: !10448)
!10736 = !DILocation(line: 3237, column: 26, scope: !10448)
!10737 = !DILocation(line: 3237, column: 32, scope: !10448)
!10738 = !DILocation(line: 3237, column: 38, scope: !10448)
!10739 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !10475)
!10740 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !10475)
!10741 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !10475)
!10742 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !10475)
!10743 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !10475)
!10744 = !DILocation(line: 3239, column: 22, scope: !10448)
!10745 = !DILocation(line: 3239, column: 31, scope: !10448)
!10746 = !DILocation(line: 3239, column: 2, scope: !10448)
!10747 = !DILocation(line: 3241, column: 20, scope: !10448)
!10748 = !DILocation(line: 3241, column: 26, scope: !10448)
!10749 = !DILocation(line: 3241, column: 2, scope: !10448)
!10750 = !DILabel(scope: !10448, name: "cleanup", file: !3, line: 3242)
!10751 = !DILocation(line: 3242, column: 1, scope: !10448)
!10752 = !DILocation(line: 3243, column: 20, scope: !10448)
!10753 = !DILocation(line: 3243, column: 26, scope: !10448)
!10754 = !DILocation(line: 3243, column: 2, scope: !10448)
!10755 = !DILocation(line: 3244, column: 6, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3244, column: 6)
!10757 = !DILocation(line: 3244, column: 10, scope: !10756)
!10758 = !DILocation(line: 3244, column: 19, scope: !10756)
!10759 = !DILocation(line: 3244, column: 6, scope: !10448)
!10760 = !DILocation(line: 3245, column: 3, scope: !10756)
!10761 = !DILocation(line: 3245, column: 7, scope: !10756)
!10762 = !DILocation(line: 3245, column: 16, scope: !10756)
!10763 = !DILocation(line: 3246, column: 1, scope: !10448)
!10764 = distinct !DISubprogram(name: "xhci_clear_tt_buffer_complete", scope: !3, file: !3, line: 5287, type: !4933, scopeLine: 5289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!10765 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !10766)
!10766 = distinct !DILocation(line: 5305, column: 2, scope: !10764)
!10767 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !10766)
!10768 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !10769)
!10769 = distinct !DILocation(line: 5298, column: 2, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10771, file: !3, line: 5298, column: 2)
!10771 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 5298, column: 2)
!10772 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 5298, column: 2)
!10773 = distinct !DILexicalBlock(scope: !10774, file: !3, line: 5298, column: 2)
!10774 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 5298, column: 2)
!10775 = !DILocalVariable(name: "hcd", arg: 1, scope: !10764, file: !3, line: 5287, type: !4501)
!10776 = !DILocation(line: 5287, column: 59, scope: !10764)
!10777 = !DILocalVariable(name: "ep", arg: 2, scope: !10764, file: !3, line: 5288, type: !4725)
!10778 = !DILocation(line: 5288, column: 29, scope: !10764)
!10779 = !DILocalVariable(name: "xhci", scope: !10764, file: !3, line: 5290, type: !4497)
!10780 = !DILocation(line: 5290, column: 19, scope: !10764)
!10781 = !DILocalVariable(name: "udev", scope: !10764, file: !3, line: 5291, type: !4526)
!10782 = !DILocation(line: 5291, column: 21, scope: !10764)
!10783 = !DILocalVariable(name: "slot_id", scope: !10764, file: !3, line: 5292, type: !7)
!10784 = !DILocation(line: 5292, column: 15, scope: !10764)
!10785 = !DILocalVariable(name: "ep_index", scope: !10764, file: !3, line: 5293, type: !7)
!10786 = !DILocation(line: 5293, column: 15, scope: !10764)
!10787 = !DILocalVariable(name: "flags", scope: !10764, file: !3, line: 5294, type: !248)
!10788 = !DILocation(line: 5294, column: 16, scope: !10764)
!10789 = !DILocation(line: 5296, column: 21, scope: !10764)
!10790 = !DILocation(line: 5296, column: 9, scope: !10764)
!10791 = !DILocation(line: 5296, column: 7, scope: !10764)
!10792 = !DILocation(line: 5298, column: 2, scope: !10764)
!10793 = !DILocation(line: 5298, column: 2, scope: !10774)
!10794 = !DILocalVariable(name: "__dummy", scope: !10795, file: !3, line: 5298, type: !248)
!10795 = distinct !DILexicalBlock(scope: !10773, file: !3, line: 5298, column: 2)
!10796 = !DILocation(line: 5298, column: 2, scope: !10795)
!10797 = !DILocalVariable(name: "__dummy2", scope: !10795, file: !3, line: 5298, type: !248)
!10798 = !DILocation(line: 5298, column: 2, scope: !10773)
!10799 = !DILocation(line: 5298, column: 2, scope: !10772)
!10800 = !DILocation(line: 5298, column: 2, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10772, file: !3, line: 5298, column: 2)
!10802 = !DILocalVariable(name: "__dummy", scope: !10803, file: !3, line: 5298, type: !248)
!10803 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 5298, column: 2)
!10804 = distinct !DILexicalBlock(scope: !10801, file: !3, line: 5298, column: 2)
!10805 = !DILocation(line: 5298, column: 2, scope: !10803)
!10806 = !DILocalVariable(name: "__dummy2", scope: !10803, file: !3, line: 5298, type: !248)
!10807 = !DILocation(line: 5298, column: 2, scope: !10804)
!10808 = !DILocation(line: 5298, column: 2, scope: !10771)
!10809 = !{i32 -2140589999}
!10810 = !DILocation(line: 5298, column: 2, scope: !10770)
!10811 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !10769)
!10812 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !10769)
!10813 = !DILocation(line: 5299, column: 30, scope: !10764)
!10814 = !DILocation(line: 5299, column: 34, scope: !10764)
!10815 = !DILocation(line: 5299, column: 9, scope: !10764)
!10816 = !DILocation(line: 5299, column: 7, scope: !10764)
!10817 = !DILocation(line: 5300, column: 12, scope: !10764)
!10818 = !DILocation(line: 5300, column: 18, scope: !10764)
!10819 = !DILocation(line: 5300, column: 10, scope: !10764)
!10820 = !DILocation(line: 5301, column: 38, scope: !10764)
!10821 = !DILocation(line: 5301, column: 42, scope: !10764)
!10822 = !DILocation(line: 5301, column: 13, scope: !10764)
!10823 = !DILocation(line: 5301, column: 11, scope: !10764)
!10824 = !DILocation(line: 5303, column: 2, scope: !10764)
!10825 = !DILocation(line: 5303, column: 8, scope: !10764)
!10826 = !DILocation(line: 5303, column: 13, scope: !10764)
!10827 = !DILocation(line: 5303, column: 23, scope: !10764)
!10828 = !DILocation(line: 5303, column: 27, scope: !10764)
!10829 = !DILocation(line: 5303, column: 37, scope: !10764)
!10830 = !DILocation(line: 5303, column: 46, scope: !10764)
!10831 = !DILocation(line: 5304, column: 38, scope: !10764)
!10832 = !DILocation(line: 5304, column: 44, scope: !10764)
!10833 = !DILocation(line: 5304, column: 53, scope: !10764)
!10834 = !DILocation(line: 5304, column: 2, scope: !10764)
!10835 = !DILocation(line: 5305, column: 26, scope: !10764)
!10836 = !DILocation(line: 5305, column: 32, scope: !10764)
!10837 = !DILocation(line: 5305, column: 38, scope: !10764)
!10838 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !10766)
!10839 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !10766)
!10840 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !10766)
!10841 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !10766)
!10842 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !10766)
!10843 = !DILocation(line: 5306, column: 1, scope: !10764)
!10844 = distinct !DISubprogram(name: "xhci_free_dev", scope: !3, file: !3, line: 3864, type: !4969, scopeLine: 3865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!10845 = !DILocalVariable(name: "hcd", arg: 1, scope: !10844, file: !3, line: 3864, type: !4501)
!10846 = !DILocation(line: 3864, column: 43, scope: !10844)
!10847 = !DILocalVariable(name: "udev", arg: 2, scope: !10844, file: !3, line: 3864, type: !4526)
!10848 = !DILocation(line: 3864, column: 67, scope: !10844)
!10849 = !DILocalVariable(name: "xhci", scope: !10844, file: !3, line: 3866, type: !4497)
!10850 = !DILocation(line: 3866, column: 19, scope: !10844)
!10851 = !DILocation(line: 3866, column: 38, scope: !10844)
!10852 = !DILocation(line: 3866, column: 26, scope: !10844)
!10853 = !DILocalVariable(name: "virt_dev", scope: !10844, file: !3, line: 3867, type: !5290)
!10854 = !DILocation(line: 3867, column: 27, scope: !10844)
!10855 = !DILocalVariable(name: "slot_ctx", scope: !10844, file: !3, line: 3868, type: !8442)
!10856 = !DILocation(line: 3868, column: 24, scope: !10844)
!10857 = !DILocalVariable(name: "i", scope: !10844, file: !3, line: 3869, type: !265)
!10858 = !DILocation(line: 3869, column: 6, scope: !10844)
!10859 = !DILocalVariable(name: "ret", scope: !10844, file: !3, line: 3869, type: !265)
!10860 = !DILocation(line: 3869, column: 9, scope: !10844)
!10861 = !DILocation(line: 3881, column: 24, scope: !10844)
!10862 = !DILocation(line: 3881, column: 29, scope: !10844)
!10863 = !DILocation(line: 3881, column: 8, scope: !10844)
!10864 = !DILocation(line: 3881, column: 6, scope: !10844)
!10865 = !DILocation(line: 3885, column: 6, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10844, file: !3, line: 3885, column: 6)
!10867 = !DILocation(line: 3885, column: 10, scope: !10866)
!10868 = !DILocation(line: 3885, column: 15, scope: !10866)
!10869 = !DILocation(line: 3885, column: 18, scope: !10866)
!10870 = !DILocation(line: 3885, column: 22, scope: !10866)
!10871 = !DILocation(line: 3885, column: 6, scope: !10844)
!10872 = !DILocation(line: 3886, column: 3, scope: !10866)
!10873 = !DILocation(line: 3888, column: 13, scope: !10844)
!10874 = !DILocation(line: 3888, column: 19, scope: !10844)
!10875 = !DILocation(line: 3888, column: 24, scope: !10844)
!10876 = !DILocation(line: 3888, column: 30, scope: !10844)
!10877 = !DILocation(line: 3888, column: 11, scope: !10844)
!10878 = !DILocation(line: 3889, column: 31, scope: !10844)
!10879 = !DILocation(line: 3889, column: 37, scope: !10844)
!10880 = !DILocation(line: 3889, column: 47, scope: !10844)
!10881 = !DILocation(line: 3889, column: 13, scope: !10844)
!10882 = !DILocation(line: 3889, column: 11, scope: !10844)
!10883 = !DILocation(line: 3890, column: 22, scope: !10844)
!10884 = !DILocation(line: 3890, column: 2, scope: !10844)
!10885 = !DILocation(line: 3893, column: 9, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10844, file: !3, line: 3893, column: 2)
!10887 = !DILocation(line: 3893, column: 7, scope: !10886)
!10888 = !DILocation(line: 3893, column: 14, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10886, file: !3, line: 3893, column: 2)
!10890 = !DILocation(line: 3893, column: 16, scope: !10889)
!10891 = !DILocation(line: 3893, column: 2, scope: !10886)
!10892 = !DILocation(line: 3894, column: 3, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10889, file: !3, line: 3893, column: 27)
!10894 = !DILocation(line: 3894, column: 13, scope: !10893)
!10895 = !DILocation(line: 3894, column: 17, scope: !10893)
!10896 = !DILocation(line: 3894, column: 20, scope: !10893)
!10897 = !DILocation(line: 3894, column: 29, scope: !10893)
!10898 = !DILocation(line: 3895, column: 3, scope: !10893)
!10899 = !DILocation(line: 3896, column: 2, scope: !10893)
!10900 = !DILocation(line: 3893, column: 23, scope: !10889)
!10901 = !DILocation(line: 3893, column: 2, scope: !10889)
!10902 = distinct !{!10902, !10891, !10903}
!10903 = !DILocation(line: 3896, column: 2, scope: !10886)
!10904 = !DILocation(line: 3897, column: 2, scope: !10844)
!10905 = !DILocation(line: 3897, column: 12, scope: !10844)
!10906 = !DILocation(line: 3897, column: 17, scope: !10844)
!10907 = !DILocation(line: 3898, column: 26, scope: !10844)
!10908 = !DILocation(line: 3898, column: 32, scope: !10844)
!10909 = !DILocation(line: 3898, column: 38, scope: !10844)
!10910 = !DILocation(line: 3898, column: 8, scope: !10844)
!10911 = !DILocation(line: 3898, column: 6, scope: !10844)
!10912 = !DILocation(line: 3899, column: 6, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10844, file: !3, line: 3899, column: 6)
!10914 = !DILocation(line: 3899, column: 6, scope: !10844)
!10915 = !DILocation(line: 3900, column: 25, scope: !10913)
!10916 = !DILocation(line: 3900, column: 31, scope: !10913)
!10917 = !DILocation(line: 3900, column: 37, scope: !10913)
!10918 = !DILocation(line: 3900, column: 3, scope: !10913)
!10919 = !DILocation(line: 3901, column: 1, scope: !10844)
!10920 = distinct !DISubprogram(name: "xhci_alloc_streams", scope: !3, file: !3, line: 3403, type: !4973, scopeLine: 3406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!10921 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !10922)
!10922 = distinct !DILocation(line: 3538, column: 2, scope: !10920)
!10923 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !10922)
!10924 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !10925)
!10925 = distinct !DILocation(line: 3529, column: 2, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10927, file: !3, line: 3529, column: 2)
!10927 = distinct !DILexicalBlock(scope: !10928, file: !3, line: 3529, column: 2)
!10928 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 3529, column: 2)
!10929 = distinct !DILexicalBlock(scope: !10930, file: !3, line: 3529, column: 2)
!10930 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3529, column: 2)
!10931 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !10932)
!10932 = distinct !DILocation(line: 3475, column: 2, scope: !10920)
!10933 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !10932)
!10934 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !10935)
!10935 = distinct !DILocation(line: 3464, column: 3, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10937, file: !3, line: 3460, column: 24)
!10937 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3460, column: 6)
!10938 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !10935)
!10939 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !10940)
!10940 = distinct !DILocation(line: 3457, column: 3, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10942, file: !3, line: 3455, column: 15)
!10942 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3455, column: 6)
!10943 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !10940)
!10944 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !10945)
!10945 = distinct !DILocation(line: 3452, column: 2, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10947, file: !3, line: 3452, column: 2)
!10947 = distinct !DILexicalBlock(scope: !10948, file: !3, line: 3452, column: 2)
!10948 = distinct !DILexicalBlock(scope: !10949, file: !3, line: 3452, column: 2)
!10949 = distinct !DILexicalBlock(scope: !10950, file: !3, line: 3452, column: 2)
!10950 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3452, column: 2)
!10951 = !DILocalVariable(name: "hcd", arg: 1, scope: !10920, file: !3, line: 3403, type: !4501)
!10952 = !DILocation(line: 3403, column: 47, scope: !10920)
!10953 = !DILocalVariable(name: "udev", arg: 2, scope: !10920, file: !3, line: 3403, type: !4526)
!10954 = !DILocation(line: 3403, column: 71, scope: !10920)
!10955 = !DILocalVariable(name: "eps", arg: 3, scope: !10920, file: !3, line: 3404, type: !4975)
!10956 = !DILocation(line: 3404, column: 30, scope: !10920)
!10957 = !DILocalVariable(name: "num_eps", arg: 4, scope: !10920, file: !3, line: 3404, type: !7)
!10958 = !DILocation(line: 3404, column: 48, scope: !10920)
!10959 = !DILocalVariable(name: "num_streams", arg: 5, scope: !10920, file: !3, line: 3405, type: !7)
!10960 = !DILocation(line: 3405, column: 16, scope: !10920)
!10961 = !DILocalVariable(name: "mem_flags", arg: 6, scope: !10920, file: !3, line: 3405, type: !875)
!10962 = !DILocation(line: 3405, column: 35, scope: !10920)
!10963 = !DILocalVariable(name: "i", scope: !10920, file: !3, line: 3407, type: !265)
!10964 = !DILocation(line: 3407, column: 6, scope: !10920)
!10965 = !DILocalVariable(name: "ret", scope: !10920, file: !3, line: 3407, type: !265)
!10966 = !DILocation(line: 3407, column: 9, scope: !10920)
!10967 = !DILocalVariable(name: "xhci", scope: !10920, file: !3, line: 3408, type: !4497)
!10968 = !DILocation(line: 3408, column: 19, scope: !10920)
!10969 = !DILocalVariable(name: "vdev", scope: !10920, file: !3, line: 3409, type: !5290)
!10970 = !DILocation(line: 3409, column: 27, scope: !10920)
!10971 = !DILocalVariable(name: "config_cmd", scope: !10920, file: !3, line: 3410, type: !5247)
!10972 = !DILocation(line: 3410, column: 23, scope: !10920)
!10973 = !DILocalVariable(name: "ctrl_ctx", scope: !10920, file: !3, line: 3411, type: !8108)
!10974 = !DILocation(line: 3411, column: 33, scope: !10920)
!10975 = !DILocalVariable(name: "ep_index", scope: !10920, file: !3, line: 3412, type: !7)
!10976 = !DILocation(line: 3412, column: 15, scope: !10920)
!10977 = !DILocalVariable(name: "num_stream_ctxs", scope: !10920, file: !3, line: 3413, type: !7)
!10978 = !DILocation(line: 3413, column: 15, scope: !10920)
!10979 = !DILocalVariable(name: "max_packet", scope: !10920, file: !3, line: 3414, type: !7)
!10980 = !DILocation(line: 3414, column: 15, scope: !10920)
!10981 = !DILocalVariable(name: "flags", scope: !10920, file: !3, line: 3415, type: !248)
!10982 = !DILocation(line: 3415, column: 16, scope: !10920)
!10983 = !DILocalVariable(name: "changed_ep_bitmask", scope: !10920, file: !3, line: 3416, type: !204)
!10984 = !DILocation(line: 3416, column: 6, scope: !10920)
!10985 = !DILocation(line: 3418, column: 7, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3418, column: 6)
!10987 = !DILocation(line: 3418, column: 6, scope: !10920)
!10988 = !DILocation(line: 3419, column: 3, scope: !10986)
!10989 = !DILocation(line: 3424, column: 14, scope: !10920)
!10990 = !DILocation(line: 3425, column: 21, scope: !10920)
!10991 = !DILocation(line: 3425, column: 9, scope: !10920)
!10992 = !DILocation(line: 3425, column: 7, scope: !10920)
!10993 = !DILocation(line: 3430, column: 7, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3430, column: 6)
!10995 = !DILocation(line: 3430, column: 13, scope: !10994)
!10996 = !DILocation(line: 3430, column: 20, scope: !10994)
!10997 = !DILocation(line: 3430, column: 43, scope: !10994)
!10998 = !DILocation(line: 3431, column: 4, scope: !10994)
!10999 = !DILocation(line: 3431, column: 34, scope: !10994)
!11000 = !DILocation(line: 3430, column: 6, scope: !10920)
!11001 = !DILocation(line: 3433, column: 3, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10994, file: !3, line: 3431, column: 39)
!11003 = !DILocation(line: 3436, column: 43, scope: !10920)
!11004 = !DILocation(line: 3436, column: 55, scope: !10920)
!11005 = !DILocation(line: 3436, column: 15, scope: !10920)
!11006 = !DILocation(line: 3436, column: 13, scope: !10920)
!11007 = !DILocation(line: 3437, column: 7, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3437, column: 6)
!11009 = !DILocation(line: 3437, column: 6, scope: !10920)
!11010 = !DILocation(line: 3438, column: 3, scope: !11008)
!11011 = !DILocation(line: 3440, column: 40, scope: !10920)
!11012 = !DILocation(line: 3440, column: 52, scope: !10920)
!11013 = !DILocation(line: 3440, column: 13, scope: !10920)
!11014 = !DILocation(line: 3440, column: 11, scope: !10920)
!11015 = !DILocation(line: 3441, column: 7, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3441, column: 6)
!11017 = !DILocation(line: 3441, column: 6, scope: !10920)
!11018 = !DILocation(line: 3442, column: 3, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 3441, column: 17)
!11020 = !DILocation(line: 3444, column: 21, scope: !11019)
!11021 = !DILocation(line: 3444, column: 27, scope: !11019)
!11022 = !DILocation(line: 3444, column: 3, scope: !11019)
!11023 = !DILocation(line: 3445, column: 3, scope: !11019)
!11024 = !DILocation(line: 3452, column: 2, scope: !10920)
!11025 = !DILocation(line: 3452, column: 2, scope: !10950)
!11026 = !DILocalVariable(name: "__dummy", scope: !11027, file: !3, line: 3452, type: !248)
!11027 = distinct !DILexicalBlock(scope: !10949, file: !3, line: 3452, column: 2)
!11028 = !DILocation(line: 3452, column: 2, scope: !11027)
!11029 = !DILocalVariable(name: "__dummy2", scope: !11027, file: !3, line: 3452, type: !248)
!11030 = !DILocation(line: 3452, column: 2, scope: !10949)
!11031 = !DILocation(line: 3452, column: 2, scope: !10948)
!11032 = !DILocation(line: 3452, column: 2, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !10948, file: !3, line: 3452, column: 2)
!11034 = !DILocalVariable(name: "__dummy", scope: !11035, file: !3, line: 3452, type: !248)
!11035 = distinct !DILexicalBlock(scope: !11036, file: !3, line: 3452, column: 2)
!11036 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 3452, column: 2)
!11037 = !DILocation(line: 3452, column: 2, scope: !11035)
!11038 = !DILocalVariable(name: "__dummy2", scope: !11035, file: !3, line: 3452, type: !248)
!11039 = !DILocation(line: 3452, column: 2, scope: !11036)
!11040 = !DILocation(line: 3452, column: 2, scope: !10947)
!11041 = !{i32 -2140635176}
!11042 = !DILocation(line: 3452, column: 2, scope: !10946)
!11043 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !10945)
!11044 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !10945)
!11045 = !DILocation(line: 3453, column: 43, scope: !10920)
!11046 = !DILocation(line: 3453, column: 49, scope: !10920)
!11047 = !DILocation(line: 3453, column: 55, scope: !10920)
!11048 = !DILocation(line: 3454, column: 4, scope: !10920)
!11049 = !DILocation(line: 3453, column: 8, scope: !10920)
!11050 = !DILocation(line: 3453, column: 6, scope: !10920)
!11051 = !DILocation(line: 3455, column: 6, scope: !10942)
!11052 = !DILocation(line: 3455, column: 10, scope: !10942)
!11053 = !DILocation(line: 3455, column: 6, scope: !10920)
!11054 = !DILocation(line: 3456, column: 21, scope: !10941)
!11055 = !DILocation(line: 3456, column: 27, scope: !10941)
!11056 = !DILocation(line: 3456, column: 3, scope: !10941)
!11057 = !DILocation(line: 3457, column: 27, scope: !10941)
!11058 = !DILocation(line: 3457, column: 33, scope: !10941)
!11059 = !DILocation(line: 3457, column: 39, scope: !10941)
!11060 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !10940)
!11061 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !10940)
!11062 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !10940)
!11063 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !10940)
!11064 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !10940)
!11065 = !DILocation(line: 3458, column: 10, scope: !10941)
!11066 = !DILocation(line: 3458, column: 3, scope: !10941)
!11067 = !DILocation(line: 3460, column: 6, scope: !10937)
!11068 = !DILocation(line: 3460, column: 18, scope: !10937)
!11069 = !DILocation(line: 3460, column: 6, scope: !10920)
!11070 = !DILocation(line: 3461, column: 3, scope: !10936)
!11071 = !DILocation(line: 3463, column: 21, scope: !10936)
!11072 = !DILocation(line: 3463, column: 27, scope: !10936)
!11073 = !DILocation(line: 3463, column: 3, scope: !10936)
!11074 = !DILocation(line: 3464, column: 27, scope: !10936)
!11075 = !DILocation(line: 3464, column: 33, scope: !10936)
!11076 = !DILocation(line: 3464, column: 39, scope: !10936)
!11077 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !10935)
!11078 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !10935)
!11079 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !10935)
!11080 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !10935)
!11081 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !10935)
!11082 = !DILocation(line: 3465, column: 3, scope: !10936)
!11083 = !DILocation(line: 3467, column: 9, scope: !10920)
!11084 = !DILocation(line: 3467, column: 15, scope: !10920)
!11085 = !DILocation(line: 3467, column: 20, scope: !10920)
!11086 = !DILocation(line: 3467, column: 26, scope: !10920)
!11087 = !DILocation(line: 3467, column: 7, scope: !10920)
!11088 = !DILocation(line: 3471, column: 9, scope: !11089)
!11089 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3471, column: 2)
!11090 = !DILocation(line: 3471, column: 7, scope: !11089)
!11091 = !DILocation(line: 3471, column: 14, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11089, file: !3, line: 3471, column: 2)
!11093 = !DILocation(line: 3471, column: 18, scope: !11092)
!11094 = !DILocation(line: 3471, column: 16, scope: !11092)
!11095 = !DILocation(line: 3471, column: 2, scope: !11089)
!11096 = !DILocation(line: 3472, column: 39, scope: !11097)
!11097 = distinct !DILexicalBlock(scope: !11092, file: !3, line: 3471, column: 32)
!11098 = !DILocation(line: 3472, column: 43, scope: !11097)
!11099 = !DILocation(line: 3472, column: 47, scope: !11097)
!11100 = !DILocation(line: 3472, column: 14, scope: !11097)
!11101 = !DILocation(line: 3472, column: 12, scope: !11097)
!11102 = !DILocation(line: 3473, column: 3, scope: !11097)
!11103 = !DILocation(line: 3473, column: 9, scope: !11097)
!11104 = !DILocation(line: 3473, column: 13, scope: !11097)
!11105 = !DILocation(line: 3473, column: 23, scope: !11097)
!11106 = !DILocation(line: 3473, column: 32, scope: !11097)
!11107 = !DILocation(line: 3474, column: 2, scope: !11097)
!11108 = !DILocation(line: 3471, column: 28, scope: !11092)
!11109 = !DILocation(line: 3471, column: 2, scope: !11092)
!11110 = distinct !{!11110, !11095, !11111}
!11111 = !DILocation(line: 3474, column: 2, scope: !11089)
!11112 = !DILocation(line: 3475, column: 26, scope: !10920)
!11113 = !DILocation(line: 3475, column: 32, scope: !10920)
!11114 = !DILocation(line: 3475, column: 38, scope: !10920)
!11115 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !10932)
!11116 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !10932)
!11117 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !10932)
!11118 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !10932)
!11119 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !10932)
!11120 = !DILocation(line: 3481, column: 33, scope: !10920)
!11121 = !DILocation(line: 3481, column: 2, scope: !10920)
!11122 = !DILocation(line: 3485, column: 9, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3485, column: 2)
!11124 = !DILocation(line: 3485, column: 7, scope: !11123)
!11125 = !DILocation(line: 3485, column: 14, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 3485, column: 2)
!11127 = !DILocation(line: 3485, column: 18, scope: !11126)
!11128 = !DILocation(line: 3485, column: 16, scope: !11126)
!11129 = !DILocation(line: 3485, column: 2, scope: !11123)
!11130 = !DILocation(line: 3486, column: 39, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11126, file: !3, line: 3485, column: 32)
!11132 = !DILocation(line: 3486, column: 43, scope: !11131)
!11133 = !DILocation(line: 3486, column: 47, scope: !11131)
!11134 = !DILocation(line: 3486, column: 14, scope: !11131)
!11135 = !DILocation(line: 3486, column: 12, scope: !11131)
!11136 = !DILocation(line: 3487, column: 35, scope: !11131)
!11137 = !DILocation(line: 3487, column: 39, scope: !11131)
!11138 = !DILocation(line: 3487, column: 43, scope: !11131)
!11139 = !DILocation(line: 3487, column: 16, scope: !11131)
!11140 = !DILocation(line: 3487, column: 14, scope: !11131)
!11141 = !DILocation(line: 3488, column: 60, scope: !11131)
!11142 = !DILocation(line: 3489, column: 5, scope: !11131)
!11143 = !DILocation(line: 3490, column: 5, scope: !11131)
!11144 = !DILocation(line: 3491, column: 5, scope: !11131)
!11145 = !DILocation(line: 3491, column: 17, scope: !11131)
!11146 = !DILocation(line: 3488, column: 37, scope: !11131)
!11147 = !DILocation(line: 3488, column: 3, scope: !11131)
!11148 = !DILocation(line: 3488, column: 9, scope: !11131)
!11149 = !DILocation(line: 3488, column: 13, scope: !11131)
!11150 = !DILocation(line: 3488, column: 23, scope: !11131)
!11151 = !DILocation(line: 3488, column: 35, scope: !11131)
!11152 = !DILocation(line: 3492, column: 8, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11131, file: !3, line: 3492, column: 7)
!11154 = !DILocation(line: 3492, column: 14, scope: !11153)
!11155 = !DILocation(line: 3492, column: 18, scope: !11153)
!11156 = !DILocation(line: 3492, column: 28, scope: !11153)
!11157 = !DILocation(line: 3492, column: 7, scope: !11131)
!11158 = !DILocation(line: 3493, column: 4, scope: !11153)
!11159 = !DILocation(line: 3497, column: 2, scope: !11131)
!11160 = !DILocation(line: 3485, column: 28, scope: !11126)
!11161 = !DILocation(line: 3485, column: 2, scope: !11126)
!11162 = distinct !{!11162, !11129, !11163}
!11163 = !DILocation(line: 3497, column: 2, scope: !11123)
!11164 = !DILocation(line: 3500, column: 9, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3500, column: 2)
!11166 = !DILocation(line: 3500, column: 7, scope: !11165)
!11167 = !DILocation(line: 3500, column: 14, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11165, file: !3, line: 3500, column: 2)
!11169 = !DILocation(line: 3500, column: 18, scope: !11168)
!11170 = !DILocation(line: 3500, column: 16, scope: !11168)
!11171 = !DILocation(line: 3500, column: 2, scope: !11165)
!11172 = !DILocalVariable(name: "ep_ctx", scope: !11173, file: !3, line: 3501, type: !8119)
!11173 = distinct !DILexicalBlock(scope: !11168, file: !3, line: 3500, column: 32)
!11174 = !DILocation(line: 3501, column: 23, scope: !11173)
!11175 = !DILocation(line: 3503, column: 39, scope: !11173)
!11176 = !DILocation(line: 3503, column: 43, scope: !11173)
!11177 = !DILocation(line: 3503, column: 47, scope: !11173)
!11178 = !DILocation(line: 3503, column: 14, scope: !11173)
!11179 = !DILocation(line: 3503, column: 12, scope: !11173)
!11180 = !DILocation(line: 3504, column: 28, scope: !11173)
!11181 = !DILocation(line: 3504, column: 34, scope: !11173)
!11182 = !DILocation(line: 3504, column: 46, scope: !11173)
!11183 = !DILocation(line: 3504, column: 54, scope: !11173)
!11184 = !DILocation(line: 3504, column: 12, scope: !11173)
!11185 = !DILocation(line: 3504, column: 10, scope: !11173)
!11186 = !DILocation(line: 3506, column: 22, scope: !11173)
!11187 = !DILocation(line: 3506, column: 28, scope: !11173)
!11188 = !DILocation(line: 3506, column: 40, scope: !11173)
!11189 = !DILocation(line: 3507, column: 5, scope: !11173)
!11190 = !DILocation(line: 3507, column: 11, scope: !11173)
!11191 = !DILocation(line: 3507, column: 20, scope: !11173)
!11192 = !DILocation(line: 3506, column: 3, scope: !11173)
!11193 = !DILocation(line: 3508, column: 35, scope: !11173)
!11194 = !DILocation(line: 3508, column: 41, scope: !11173)
!11195 = !DILocation(line: 3509, column: 5, scope: !11173)
!11196 = !DILocation(line: 3509, column: 11, scope: !11173)
!11197 = !DILocation(line: 3509, column: 15, scope: !11173)
!11198 = !DILocation(line: 3509, column: 25, scope: !11173)
!11199 = !DILocation(line: 3508, column: 3, scope: !11173)
!11200 = !DILocation(line: 3510, column: 2, scope: !11173)
!11201 = !DILocation(line: 3500, column: 28, scope: !11168)
!11202 = !DILocation(line: 3500, column: 2, scope: !11168)
!11203 = distinct !{!11203, !11171, !11204}
!11204 = !DILocation(line: 3510, column: 2, scope: !11165)
!11205 = !DILocation(line: 3514, column: 37, scope: !10920)
!11206 = !DILocation(line: 3514, column: 43, scope: !10920)
!11207 = !DILocation(line: 3514, column: 55, scope: !10920)
!11208 = !DILocation(line: 3515, column: 4, scope: !10920)
!11209 = !DILocation(line: 3515, column: 10, scope: !10920)
!11210 = !DILocation(line: 3515, column: 19, scope: !10920)
!11211 = !DILocation(line: 3516, column: 4, scope: !10920)
!11212 = !DILocation(line: 3516, column: 24, scope: !10920)
!11213 = !DILocation(line: 3514, column: 2, scope: !10920)
!11214 = !DILocation(line: 3519, column: 32, scope: !10920)
!11215 = !DILocation(line: 3519, column: 38, scope: !10920)
!11216 = !DILocation(line: 3519, column: 44, scope: !10920)
!11217 = !DILocation(line: 3519, column: 8, scope: !10920)
!11218 = !DILocation(line: 3519, column: 6, scope: !10920)
!11219 = !DILocation(line: 3526, column: 6, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3526, column: 6)
!11221 = !DILocation(line: 3526, column: 10, scope: !11220)
!11222 = !DILocation(line: 3526, column: 6, scope: !10920)
!11223 = !DILocation(line: 3527, column: 3, scope: !11220)
!11224 = !DILocation(line: 3529, column: 2, scope: !10920)
!11225 = !DILocation(line: 3529, column: 2, scope: !10930)
!11226 = !DILocalVariable(name: "__dummy", scope: !11227, file: !3, line: 3529, type: !248)
!11227 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 3529, column: 2)
!11228 = !DILocation(line: 3529, column: 2, scope: !11227)
!11229 = !DILocalVariable(name: "__dummy2", scope: !11227, file: !3, line: 3529, type: !248)
!11230 = !DILocation(line: 3529, column: 2, scope: !10929)
!11231 = !DILocation(line: 3529, column: 2, scope: !10928)
!11232 = !DILocation(line: 3529, column: 2, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !10928, file: !3, line: 3529, column: 2)
!11234 = !DILocalVariable(name: "__dummy", scope: !11235, file: !3, line: 3529, type: !248)
!11235 = distinct !DILexicalBlock(scope: !11236, file: !3, line: 3529, column: 2)
!11236 = distinct !DILexicalBlock(scope: !11233, file: !3, line: 3529, column: 2)
!11237 = !DILocation(line: 3529, column: 2, scope: !11235)
!11238 = !DILocalVariable(name: "__dummy2", scope: !11235, file: !3, line: 3529, type: !248)
!11239 = !DILocation(line: 3529, column: 2, scope: !11236)
!11240 = !DILocation(line: 3529, column: 2, scope: !10927)
!11241 = !{i32 -2140633377}
!11242 = !DILocation(line: 3529, column: 2, scope: !10926)
!11243 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !10925)
!11244 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !10925)
!11245 = !DILocation(line: 3530, column: 9, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3530, column: 2)
!11247 = !DILocation(line: 3530, column: 7, scope: !11246)
!11248 = !DILocation(line: 3530, column: 14, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11246, file: !3, line: 3530, column: 2)
!11250 = !DILocation(line: 3530, column: 18, scope: !11249)
!11251 = !DILocation(line: 3530, column: 16, scope: !11249)
!11252 = !DILocation(line: 3530, column: 2, scope: !11246)
!11253 = !DILocation(line: 3531, column: 39, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11249, file: !3, line: 3530, column: 32)
!11255 = !DILocation(line: 3531, column: 43, scope: !11254)
!11256 = !DILocation(line: 3531, column: 47, scope: !11254)
!11257 = !DILocation(line: 3531, column: 14, scope: !11254)
!11258 = !DILocation(line: 3531, column: 12, scope: !11254)
!11259 = !DILocation(line: 3532, column: 3, scope: !11254)
!11260 = !DILocation(line: 3532, column: 9, scope: !11254)
!11261 = !DILocation(line: 3532, column: 13, scope: !11254)
!11262 = !DILocation(line: 3532, column: 23, scope: !11254)
!11263 = !DILocation(line: 3532, column: 32, scope: !11254)
!11264 = !DILocation(line: 3535, column: 3, scope: !11254)
!11265 = !DILocation(line: 3535, column: 9, scope: !11254)
!11266 = !DILocation(line: 3535, column: 13, scope: !11254)
!11267 = !DILocation(line: 3535, column: 23, scope: !11254)
!11268 = !DILocation(line: 3535, column: 32, scope: !11254)
!11269 = !DILocation(line: 3536, column: 2, scope: !11254)
!11270 = !DILocation(line: 3530, column: 28, scope: !11249)
!11271 = !DILocation(line: 3530, column: 2, scope: !11249)
!11272 = distinct !{!11272, !11252, !11273}
!11273 = !DILocation(line: 3536, column: 2, scope: !11246)
!11274 = !DILocation(line: 3537, column: 20, scope: !10920)
!11275 = !DILocation(line: 3537, column: 26, scope: !10920)
!11276 = !DILocation(line: 3537, column: 2, scope: !10920)
!11277 = !DILocation(line: 3538, column: 26, scope: !10920)
!11278 = !DILocation(line: 3538, column: 32, scope: !10920)
!11279 = !DILocation(line: 3538, column: 38, scope: !10920)
!11280 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !10922)
!11281 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !10922)
!11282 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !10922)
!11283 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !10922)
!11284 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !10922)
!11285 = !DILocation(line: 3540, column: 9, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3540, column: 2)
!11287 = !DILocation(line: 3540, column: 7, scope: !11286)
!11288 = !DILocation(line: 3540, column: 14, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11286, file: !3, line: 3540, column: 2)
!11290 = !DILocation(line: 3540, column: 18, scope: !11289)
!11291 = !DILocation(line: 3540, column: 16, scope: !11289)
!11292 = !DILocation(line: 3540, column: 2, scope: !11286)
!11293 = !DILocation(line: 3541, column: 39, scope: !11294)
!11294 = distinct !DILexicalBlock(scope: !11289, file: !3, line: 3540, column: 32)
!11295 = !DILocation(line: 3541, column: 43, scope: !11294)
!11296 = !DILocation(line: 3541, column: 47, scope: !11294)
!11297 = !DILocation(line: 3541, column: 14, scope: !11294)
!11298 = !DILocation(line: 3541, column: 12, scope: !11294)
!11299 = !DILocation(line: 3542, column: 36, scope: !11294)
!11300 = !DILocation(line: 3542, column: 42, scope: !11294)
!11301 = !DILocation(line: 3542, column: 48, scope: !11294)
!11302 = !DILocation(line: 3542, column: 3, scope: !11294)
!11303 = !DILocation(line: 3543, column: 2, scope: !11294)
!11304 = !DILocation(line: 3540, column: 28, scope: !11289)
!11305 = !DILocation(line: 3540, column: 2, scope: !11289)
!11306 = distinct !{!11306, !11292, !11307}
!11307 = !DILocation(line: 3543, column: 2, scope: !11286)
!11308 = !DILocation(line: 3545, column: 9, scope: !10920)
!11309 = !DILocation(line: 3545, column: 21, scope: !10920)
!11310 = !DILocation(line: 3545, column: 2, scope: !10920)
!11311 = !DILabel(scope: !10920, name: "cleanup", file: !3, line: 3547)
!11312 = !DILocation(line: 3547, column: 1, scope: !10920)
!11313 = !DILocation(line: 3549, column: 9, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !10920, file: !3, line: 3549, column: 2)
!11315 = !DILocation(line: 3549, column: 7, scope: !11314)
!11316 = !DILocation(line: 3549, column: 14, scope: !11317)
!11317 = distinct !DILexicalBlock(scope: !11314, file: !3, line: 3549, column: 2)
!11318 = !DILocation(line: 3549, column: 18, scope: !11317)
!11319 = !DILocation(line: 3549, column: 16, scope: !11317)
!11320 = !DILocation(line: 3549, column: 2, scope: !11314)
!11321 = !DILocation(line: 3550, column: 39, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11317, file: !3, line: 3549, column: 32)
!11323 = !DILocation(line: 3550, column: 43, scope: !11322)
!11324 = !DILocation(line: 3550, column: 47, scope: !11322)
!11325 = !DILocation(line: 3550, column: 14, scope: !11322)
!11326 = !DILocation(line: 3550, column: 12, scope: !11322)
!11327 = !DILocation(line: 3551, column: 25, scope: !11322)
!11328 = !DILocation(line: 3551, column: 31, scope: !11322)
!11329 = !DILocation(line: 3551, column: 37, scope: !11322)
!11330 = !DILocation(line: 3551, column: 41, scope: !11322)
!11331 = !DILocation(line: 3551, column: 51, scope: !11322)
!11332 = !DILocation(line: 3551, column: 3, scope: !11322)
!11333 = !DILocation(line: 3552, column: 3, scope: !11322)
!11334 = !DILocation(line: 3552, column: 9, scope: !11322)
!11335 = !DILocation(line: 3552, column: 13, scope: !11322)
!11336 = !DILocation(line: 3552, column: 23, scope: !11322)
!11337 = !DILocation(line: 3552, column: 35, scope: !11322)
!11338 = !DILocation(line: 3556, column: 3, scope: !11322)
!11339 = !DILocation(line: 3556, column: 9, scope: !11322)
!11340 = !DILocation(line: 3556, column: 13, scope: !11322)
!11341 = !DILocation(line: 3556, column: 23, scope: !11322)
!11342 = !DILocation(line: 3556, column: 32, scope: !11322)
!11343 = !DILocation(line: 3557, column: 3, scope: !11322)
!11344 = !DILocation(line: 3557, column: 9, scope: !11322)
!11345 = !DILocation(line: 3557, column: 13, scope: !11322)
!11346 = !DILocation(line: 3557, column: 23, scope: !11322)
!11347 = !DILocation(line: 3557, column: 32, scope: !11322)
!11348 = !DILocation(line: 3558, column: 22, scope: !11322)
!11349 = !DILocation(line: 3558, column: 28, scope: !11322)
!11350 = !DILocation(line: 3558, column: 34, scope: !11322)
!11351 = !DILocation(line: 3558, column: 38, scope: !11322)
!11352 = !DILocation(line: 3558, column: 3, scope: !11322)
!11353 = !DILocation(line: 3559, column: 2, scope: !11322)
!11354 = !DILocation(line: 3549, column: 28, scope: !11317)
!11355 = !DILocation(line: 3549, column: 2, scope: !11317)
!11356 = distinct !{!11356, !11320, !11357}
!11357 = !DILocation(line: 3559, column: 2, scope: !11314)
!11358 = !DILocation(line: 3560, column: 20, scope: !10920)
!11359 = !DILocation(line: 3560, column: 26, scope: !10920)
!11360 = !DILocation(line: 3560, column: 2, scope: !10920)
!11361 = !DILocation(line: 3561, column: 2, scope: !10920)
!11362 = !DILocation(line: 3562, column: 1, scope: !10920)
!11363 = distinct !DISubprogram(name: "xhci_free_streams", scope: !3, file: !3, line: 3570, type: !4978, scopeLine: 3573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!11364 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !11365)
!11365 = distinct !DILocation(line: 3639, column: 2, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11367, file: !3, line: 3639, column: 2)
!11367 = distinct !DILexicalBlock(scope: !11368, file: !3, line: 3639, column: 2)
!11368 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 3639, column: 2)
!11369 = distinct !DILexicalBlock(scope: !11370, file: !3, line: 3639, column: 2)
!11370 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 3639, column: 2)
!11371 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !11372)
!11372 = distinct !DILocation(line: 3625, column: 2, scope: !11363)
!11373 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !11372)
!11374 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !11375)
!11375 = distinct !DILocation(line: 3603, column: 3, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 3602, column: 17)
!11377 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 3602, column: 6)
!11378 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !11375)
!11379 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !11380)
!11380 = distinct !DILocation(line: 3591, column: 3, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 3590, column: 31)
!11382 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 3590, column: 6)
!11383 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !11380)
!11384 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !11385)
!11385 = distinct !DILocation(line: 3650, column: 2, scope: !11363)
!11386 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !11385)
!11387 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !11388)
!11388 = distinct !DILocation(line: 3587, column: 2, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11390, file: !3, line: 3587, column: 2)
!11390 = distinct !DILexicalBlock(scope: !11391, file: !3, line: 3587, column: 2)
!11391 = distinct !DILexicalBlock(scope: !11392, file: !3, line: 3587, column: 2)
!11392 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 3587, column: 2)
!11393 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 3587, column: 2)
!11394 = !DILocalVariable(name: "hcd", arg: 1, scope: !11363, file: !3, line: 3570, type: !4501)
!11395 = !DILocation(line: 3570, column: 46, scope: !11363)
!11396 = !DILocalVariable(name: "udev", arg: 2, scope: !11363, file: !3, line: 3570, type: !4526)
!11397 = !DILocation(line: 3570, column: 70, scope: !11363)
!11398 = !DILocalVariable(name: "eps", arg: 3, scope: !11363, file: !3, line: 3571, type: !4975)
!11399 = !DILocation(line: 3571, column: 30, scope: !11363)
!11400 = !DILocalVariable(name: "num_eps", arg: 4, scope: !11363, file: !3, line: 3571, type: !7)
!11401 = !DILocation(line: 3571, column: 48, scope: !11363)
!11402 = !DILocalVariable(name: "mem_flags", arg: 5, scope: !11363, file: !3, line: 3572, type: !875)
!11403 = !DILocation(line: 3572, column: 9, scope: !11363)
!11404 = !DILocalVariable(name: "i", scope: !11363, file: !3, line: 3574, type: !265)
!11405 = !DILocation(line: 3574, column: 6, scope: !11363)
!11406 = !DILocalVariable(name: "ret", scope: !11363, file: !3, line: 3574, type: !265)
!11407 = !DILocation(line: 3574, column: 9, scope: !11363)
!11408 = !DILocalVariable(name: "xhci", scope: !11363, file: !3, line: 3575, type: !4497)
!11409 = !DILocation(line: 3575, column: 19, scope: !11363)
!11410 = !DILocalVariable(name: "vdev", scope: !11363, file: !3, line: 3576, type: !5290)
!11411 = !DILocation(line: 3576, column: 27, scope: !11363)
!11412 = !DILocalVariable(name: "command", scope: !11363, file: !3, line: 3577, type: !5247)
!11413 = !DILocation(line: 3577, column: 23, scope: !11363)
!11414 = !DILocalVariable(name: "ctrl_ctx", scope: !11363, file: !3, line: 3578, type: !8108)
!11415 = !DILocation(line: 3578, column: 33, scope: !11363)
!11416 = !DILocalVariable(name: "ep_index", scope: !11363, file: !3, line: 3579, type: !7)
!11417 = !DILocation(line: 3579, column: 15, scope: !11363)
!11418 = !DILocalVariable(name: "flags", scope: !11363, file: !3, line: 3580, type: !248)
!11419 = !DILocation(line: 3580, column: 16, scope: !11363)
!11420 = !DILocalVariable(name: "changed_ep_bitmask", scope: !11363, file: !3, line: 3581, type: !204)
!11421 = !DILocation(line: 3581, column: 6, scope: !11363)
!11422 = !DILocation(line: 3583, column: 21, scope: !11363)
!11423 = !DILocation(line: 3583, column: 9, scope: !11363)
!11424 = !DILocation(line: 3583, column: 7, scope: !11363)
!11425 = !DILocation(line: 3584, column: 9, scope: !11363)
!11426 = !DILocation(line: 3584, column: 15, scope: !11363)
!11427 = !DILocation(line: 3584, column: 20, scope: !11363)
!11428 = !DILocation(line: 3584, column: 26, scope: !11363)
!11429 = !DILocation(line: 3584, column: 7, scope: !11363)
!11430 = !DILocation(line: 3587, column: 2, scope: !11363)
!11431 = !DILocation(line: 3587, column: 2, scope: !11393)
!11432 = !DILocalVariable(name: "__dummy", scope: !11433, file: !3, line: 3587, type: !248)
!11433 = distinct !DILexicalBlock(scope: !11392, file: !3, line: 3587, column: 2)
!11434 = !DILocation(line: 3587, column: 2, scope: !11433)
!11435 = !DILocalVariable(name: "__dummy2", scope: !11433, file: !3, line: 3587, type: !248)
!11436 = !DILocation(line: 3587, column: 2, scope: !11392)
!11437 = !DILocation(line: 3587, column: 2, scope: !11391)
!11438 = !DILocation(line: 3587, column: 2, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11391, file: !3, line: 3587, column: 2)
!11440 = !DILocalVariable(name: "__dummy", scope: !11441, file: !3, line: 3587, type: !248)
!11441 = distinct !DILexicalBlock(scope: !11442, file: !3, line: 3587, column: 2)
!11442 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 3587, column: 2)
!11443 = !DILocation(line: 3587, column: 2, scope: !11441)
!11444 = !DILocalVariable(name: "__dummy2", scope: !11441, file: !3, line: 3587, type: !248)
!11445 = !DILocation(line: 3587, column: 2, scope: !11442)
!11446 = !DILocation(line: 3587, column: 2, scope: !11390)
!11447 = !{i32 -2140631919}
!11448 = !DILocation(line: 3587, column: 2, scope: !11389)
!11449 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !11388)
!11450 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !11388)
!11451 = !DILocation(line: 3588, column: 57, scope: !11363)
!11452 = !DILocation(line: 3589, column: 4, scope: !11363)
!11453 = !DILocation(line: 3589, column: 10, scope: !11363)
!11454 = !DILocation(line: 3589, column: 15, scope: !11363)
!11455 = !DILocation(line: 3588, column: 23, scope: !11363)
!11456 = !DILocation(line: 3588, column: 21, scope: !11363)
!11457 = !DILocation(line: 3590, column: 6, scope: !11382)
!11458 = !DILocation(line: 3590, column: 25, scope: !11382)
!11459 = !DILocation(line: 3590, column: 6, scope: !11363)
!11460 = !DILocation(line: 3591, column: 27, scope: !11381)
!11461 = !DILocation(line: 3591, column: 33, scope: !11381)
!11462 = !DILocation(line: 3591, column: 39, scope: !11381)
!11463 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !11380)
!11464 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !11380)
!11465 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !11380)
!11466 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !11380)
!11467 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !11380)
!11468 = !DILocation(line: 3592, column: 3, scope: !11381)
!11469 = !DILocation(line: 3599, column: 38, scope: !11363)
!11470 = !DILocation(line: 3599, column: 46, scope: !11363)
!11471 = !DILocation(line: 3599, column: 13, scope: !11363)
!11472 = !DILocation(line: 3599, column: 11, scope: !11363)
!11473 = !DILocation(line: 3600, column: 12, scope: !11363)
!11474 = !DILocation(line: 3600, column: 18, scope: !11363)
!11475 = !DILocation(line: 3600, column: 22, scope: !11363)
!11476 = !DILocation(line: 3600, column: 32, scope: !11363)
!11477 = !DILocation(line: 3600, column: 45, scope: !11363)
!11478 = !DILocation(line: 3600, column: 10, scope: !11363)
!11479 = !DILocation(line: 3601, column: 40, scope: !11363)
!11480 = !DILocation(line: 3601, column: 49, scope: !11363)
!11481 = !DILocation(line: 3601, column: 13, scope: !11363)
!11482 = !DILocation(line: 3601, column: 11, scope: !11363)
!11483 = !DILocation(line: 3602, column: 7, scope: !11377)
!11484 = !DILocation(line: 3602, column: 6, scope: !11363)
!11485 = !DILocation(line: 3603, column: 27, scope: !11376)
!11486 = !DILocation(line: 3603, column: 33, scope: !11376)
!11487 = !DILocation(line: 3603, column: 39, scope: !11376)
!11488 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !11375)
!11489 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !11375)
!11490 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !11375)
!11491 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !11375)
!11492 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !11375)
!11493 = !DILocation(line: 3604, column: 3, scope: !11376)
!11494 = !DILocation(line: 3606, column: 3, scope: !11376)
!11495 = !DILocation(line: 3609, column: 9, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 3609, column: 2)
!11497 = !DILocation(line: 3609, column: 7, scope: !11496)
!11498 = !DILocation(line: 3609, column: 14, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11496, file: !3, line: 3609, column: 2)
!11500 = !DILocation(line: 3609, column: 18, scope: !11499)
!11501 = !DILocation(line: 3609, column: 16, scope: !11499)
!11502 = !DILocation(line: 3609, column: 2, scope: !11496)
!11503 = !DILocalVariable(name: "ep_ctx", scope: !11504, file: !3, line: 3610, type: !8119)
!11504 = distinct !DILexicalBlock(scope: !11499, file: !3, line: 3609, column: 32)
!11505 = !DILocation(line: 3610, column: 23, scope: !11504)
!11506 = !DILocation(line: 3612, column: 39, scope: !11504)
!11507 = !DILocation(line: 3612, column: 43, scope: !11504)
!11508 = !DILocation(line: 3612, column: 47, scope: !11504)
!11509 = !DILocation(line: 3612, column: 14, scope: !11504)
!11510 = !DILocation(line: 3612, column: 12, scope: !11504)
!11511 = !DILocation(line: 3613, column: 28, scope: !11504)
!11512 = !DILocation(line: 3613, column: 34, scope: !11504)
!11513 = !DILocation(line: 3613, column: 43, scope: !11504)
!11514 = !DILocation(line: 3613, column: 51, scope: !11504)
!11515 = !DILocation(line: 3613, column: 12, scope: !11504)
!11516 = !DILocation(line: 3613, column: 10, scope: !11504)
!11517 = !DILocation(line: 3614, column: 3, scope: !11504)
!11518 = !DILocation(line: 3614, column: 9, scope: !11504)
!11519 = !DILocation(line: 3614, column: 14, scope: !11504)
!11520 = !DILocation(line: 3614, column: 20, scope: !11504)
!11521 = !DILocation(line: 3614, column: 30, scope: !11504)
!11522 = !DILocation(line: 3614, column: 34, scope: !11504)
!11523 = !DILocation(line: 3614, column: 44, scope: !11504)
!11524 = !DILocation(line: 3614, column: 53, scope: !11504)
!11525 = !DILocation(line: 3617, column: 22, scope: !11504)
!11526 = !DILocation(line: 3617, column: 28, scope: !11504)
!11527 = !DILocation(line: 3617, column: 37, scope: !11504)
!11528 = !DILocation(line: 3618, column: 5, scope: !11504)
!11529 = !DILocation(line: 3618, column: 11, scope: !11504)
!11530 = !DILocation(line: 3618, column: 20, scope: !11504)
!11531 = !DILocation(line: 3617, column: 3, scope: !11504)
!11532 = !DILocation(line: 3619, column: 38, scope: !11504)
!11533 = !DILocation(line: 3620, column: 6, scope: !11504)
!11534 = !DILocation(line: 3620, column: 12, scope: !11504)
!11535 = !DILocation(line: 3620, column: 16, scope: !11504)
!11536 = !DILocation(line: 3619, column: 3, scope: !11504)
!11537 = !DILocation(line: 3621, column: 2, scope: !11504)
!11538 = !DILocation(line: 3609, column: 28, scope: !11499)
!11539 = !DILocation(line: 3609, column: 2, scope: !11499)
!11540 = distinct !{!11540, !11502, !11541}
!11541 = !DILocation(line: 3621, column: 2, scope: !11496)
!11542 = !DILocation(line: 3622, column: 37, scope: !11363)
!11543 = !DILocation(line: 3622, column: 43, scope: !11363)
!11544 = !DILocation(line: 3622, column: 52, scope: !11363)
!11545 = !DILocation(line: 3623, column: 4, scope: !11363)
!11546 = !DILocation(line: 3623, column: 10, scope: !11363)
!11547 = !DILocation(line: 3623, column: 19, scope: !11363)
!11548 = !DILocation(line: 3624, column: 4, scope: !11363)
!11549 = !DILocation(line: 3624, column: 24, scope: !11363)
!11550 = !DILocation(line: 3622, column: 2, scope: !11363)
!11551 = !DILocation(line: 3625, column: 26, scope: !11363)
!11552 = !DILocation(line: 3625, column: 32, scope: !11363)
!11553 = !DILocation(line: 3625, column: 38, scope: !11363)
!11554 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !11372)
!11555 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !11372)
!11556 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !11372)
!11557 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !11372)
!11558 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !11372)
!11559 = !DILocation(line: 3630, column: 32, scope: !11363)
!11560 = !DILocation(line: 3630, column: 38, scope: !11363)
!11561 = !DILocation(line: 3630, column: 44, scope: !11363)
!11562 = !DILocation(line: 3630, column: 8, scope: !11363)
!11563 = !DILocation(line: 3630, column: 6, scope: !11363)
!11564 = !DILocation(line: 3636, column: 6, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 3636, column: 6)
!11566 = !DILocation(line: 3636, column: 10, scope: !11565)
!11567 = !DILocation(line: 3636, column: 6, scope: !11363)
!11568 = !DILocation(line: 3637, column: 10, scope: !11565)
!11569 = !DILocation(line: 3637, column: 3, scope: !11565)
!11570 = !DILocation(line: 3639, column: 2, scope: !11363)
!11571 = !DILocation(line: 3639, column: 2, scope: !11370)
!11572 = !DILocalVariable(name: "__dummy", scope: !11573, file: !3, line: 3639, type: !248)
!11573 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 3639, column: 2)
!11574 = !DILocation(line: 3639, column: 2, scope: !11573)
!11575 = !DILocalVariable(name: "__dummy2", scope: !11573, file: !3, line: 3639, type: !248)
!11576 = !DILocation(line: 3639, column: 2, scope: !11369)
!11577 = !DILocation(line: 3639, column: 2, scope: !11368)
!11578 = !DILocation(line: 3639, column: 2, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11368, file: !3, line: 3639, column: 2)
!11580 = !DILocalVariable(name: "__dummy", scope: !11581, file: !3, line: 3639, type: !248)
!11581 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 3639, column: 2)
!11582 = distinct !DILexicalBlock(scope: !11579, file: !3, line: 3639, column: 2)
!11583 = !DILocation(line: 3639, column: 2, scope: !11581)
!11584 = !DILocalVariable(name: "__dummy2", scope: !11581, file: !3, line: 3639, type: !248)
!11585 = !DILocation(line: 3639, column: 2, scope: !11582)
!11586 = !DILocation(line: 3639, column: 2, scope: !11367)
!11587 = !{i32 -2140630575}
!11588 = !DILocation(line: 3639, column: 2, scope: !11366)
!11589 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !11365)
!11590 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !11365)
!11591 = !DILocation(line: 3640, column: 9, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11363, file: !3, line: 3640, column: 2)
!11593 = !DILocation(line: 3640, column: 7, scope: !11592)
!11594 = !DILocation(line: 3640, column: 14, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11592, file: !3, line: 3640, column: 2)
!11596 = !DILocation(line: 3640, column: 18, scope: !11595)
!11597 = !DILocation(line: 3640, column: 16, scope: !11595)
!11598 = !DILocation(line: 3640, column: 2, scope: !11592)
!11599 = !DILocation(line: 3641, column: 39, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11595, file: !3, line: 3640, column: 32)
!11601 = !DILocation(line: 3641, column: 43, scope: !11600)
!11602 = !DILocation(line: 3641, column: 47, scope: !11600)
!11603 = !DILocation(line: 3641, column: 14, scope: !11600)
!11604 = !DILocation(line: 3641, column: 12, scope: !11600)
!11605 = !DILocation(line: 3642, column: 25, scope: !11600)
!11606 = !DILocation(line: 3642, column: 31, scope: !11600)
!11607 = !DILocation(line: 3642, column: 37, scope: !11600)
!11608 = !DILocation(line: 3642, column: 41, scope: !11600)
!11609 = !DILocation(line: 3642, column: 51, scope: !11600)
!11610 = !DILocation(line: 3642, column: 3, scope: !11600)
!11611 = !DILocation(line: 3643, column: 3, scope: !11600)
!11612 = !DILocation(line: 3643, column: 9, scope: !11600)
!11613 = !DILocation(line: 3643, column: 13, scope: !11600)
!11614 = !DILocation(line: 3643, column: 23, scope: !11600)
!11615 = !DILocation(line: 3643, column: 35, scope: !11600)
!11616 = !DILocation(line: 3647, column: 3, scope: !11600)
!11617 = !DILocation(line: 3647, column: 9, scope: !11600)
!11618 = !DILocation(line: 3647, column: 13, scope: !11600)
!11619 = !DILocation(line: 3647, column: 23, scope: !11600)
!11620 = !DILocation(line: 3647, column: 32, scope: !11600)
!11621 = !DILocation(line: 3648, column: 3, scope: !11600)
!11622 = !DILocation(line: 3648, column: 9, scope: !11600)
!11623 = !DILocation(line: 3648, column: 13, scope: !11600)
!11624 = !DILocation(line: 3648, column: 23, scope: !11600)
!11625 = !DILocation(line: 3648, column: 32, scope: !11600)
!11626 = !DILocation(line: 3649, column: 2, scope: !11600)
!11627 = !DILocation(line: 3640, column: 28, scope: !11595)
!11628 = !DILocation(line: 3640, column: 2, scope: !11595)
!11629 = distinct !{!11629, !11598, !11630}
!11630 = !DILocation(line: 3649, column: 2, scope: !11592)
!11631 = !DILocation(line: 3650, column: 26, scope: !11363)
!11632 = !DILocation(line: 3650, column: 32, scope: !11363)
!11633 = !DILocation(line: 3650, column: 38, scope: !11363)
!11634 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !11385)
!11635 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !11385)
!11636 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !11385)
!11637 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !11385)
!11638 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !11385)
!11639 = !DILocation(line: 3652, column: 2, scope: !11363)
!11640 = !DILocation(line: 3653, column: 1, scope: !11363)
!11641 = distinct !DISubprogram(name: "xhci_add_endpoint", scope: !3, file: !3, line: 1820, type: !4982, scopeLine: 1822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!11642 = !DILocalVariable(name: "hcd", arg: 1, scope: !11641, file: !3, line: 1820, type: !4501)
!11643 = !DILocation(line: 1820, column: 46, scope: !11641)
!11644 = !DILocalVariable(name: "udev", arg: 2, scope: !11641, file: !3, line: 1820, type: !4526)
!11645 = !DILocation(line: 1820, column: 70, scope: !11641)
!11646 = !DILocalVariable(name: "ep", arg: 3, scope: !11641, file: !3, line: 1821, type: !4725)
!11647 = !DILocation(line: 1821, column: 29, scope: !11641)
!11648 = !DILocalVariable(name: "xhci", scope: !11641, file: !3, line: 1823, type: !4497)
!11649 = !DILocation(line: 1823, column: 19, scope: !11641)
!11650 = !DILocalVariable(name: "in_ctx", scope: !11641, file: !3, line: 1824, type: !5251)
!11651 = !DILocation(line: 1824, column: 29, scope: !11641)
!11652 = !DILocalVariable(name: "ep_index", scope: !11641, file: !3, line: 1825, type: !7)
!11653 = !DILocation(line: 1825, column: 15, scope: !11641)
!11654 = !DILocalVariable(name: "ctrl_ctx", scope: !11641, file: !3, line: 1826, type: !8108)
!11655 = !DILocation(line: 1826, column: 33, scope: !11641)
!11656 = !DILocalVariable(name: "ep_ctx", scope: !11641, file: !3, line: 1827, type: !8119)
!11657 = !DILocation(line: 1827, column: 22, scope: !11641)
!11658 = !DILocalVariable(name: "added_ctxs", scope: !11641, file: !3, line: 1828, type: !204)
!11659 = !DILocation(line: 1828, column: 6, scope: !11641)
!11660 = !DILocalVariable(name: "new_add_flags", scope: !11641, file: !3, line: 1829, type: !204)
!11661 = !DILocation(line: 1829, column: 6, scope: !11641)
!11662 = !DILocalVariable(name: "new_drop_flags", scope: !11641, file: !3, line: 1829, type: !204)
!11663 = !DILocation(line: 1829, column: 21, scope: !11641)
!11664 = !DILocalVariable(name: "virt_dev", scope: !11641, file: !3, line: 1830, type: !5290)
!11665 = !DILocation(line: 1830, column: 27, scope: !11641)
!11666 = !DILocalVariable(name: "ret", scope: !11641, file: !3, line: 1831, type: !265)
!11667 = !DILocation(line: 1831, column: 6, scope: !11641)
!11668 = !DILocation(line: 1833, column: 24, scope: !11641)
!11669 = !DILocation(line: 1833, column: 29, scope: !11641)
!11670 = !DILocation(line: 1833, column: 35, scope: !11641)
!11671 = !DILocation(line: 1833, column: 8, scope: !11641)
!11672 = !DILocation(line: 1833, column: 6, scope: !11641)
!11673 = !DILocation(line: 1834, column: 6, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 1834, column: 6)
!11675 = !DILocation(line: 1834, column: 10, scope: !11674)
!11676 = !DILocation(line: 1834, column: 6, scope: !11641)
!11677 = !DILocation(line: 1836, column: 3, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 1834, column: 16)
!11679 = !DILocation(line: 1836, column: 7, scope: !11678)
!11680 = !DILocation(line: 1836, column: 14, scope: !11678)
!11681 = !DILocation(line: 1837, column: 10, scope: !11678)
!11682 = !DILocation(line: 1837, column: 3, scope: !11678)
!11683 = !DILocation(line: 1839, column: 21, scope: !11641)
!11684 = !DILocation(line: 1839, column: 9, scope: !11641)
!11685 = !DILocation(line: 1839, column: 7, scope: !11641)
!11686 = !DILocation(line: 1840, column: 6, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 1840, column: 6)
!11688 = !DILocation(line: 1840, column: 12, scope: !11687)
!11689 = !DILocation(line: 1840, column: 22, scope: !11687)
!11690 = !DILocation(line: 1840, column: 6, scope: !11641)
!11691 = !DILocation(line: 1841, column: 3, scope: !11687)
!11692 = !DILocation(line: 1843, column: 39, scope: !11641)
!11693 = !DILocation(line: 1843, column: 43, scope: !11641)
!11694 = !DILocation(line: 1843, column: 15, scope: !11641)
!11695 = !DILocation(line: 1843, column: 13, scope: !11641)
!11696 = !DILocation(line: 1844, column: 6, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 1844, column: 6)
!11698 = !DILocation(line: 1844, column: 17, scope: !11697)
!11699 = !DILocation(line: 1844, column: 30, scope: !11697)
!11700 = !DILocation(line: 1844, column: 33, scope: !11697)
!11701 = !DILocation(line: 1844, column: 44, scope: !11697)
!11702 = !DILocation(line: 1844, column: 6, scope: !11641)
!11703 = !DILocation(line: 1851, column: 3, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11697, file: !3, line: 1844, column: 57)
!11705 = !DILocation(line: 1854, column: 13, scope: !11641)
!11706 = !DILocation(line: 1854, column: 19, scope: !11641)
!11707 = !DILocation(line: 1854, column: 24, scope: !11641)
!11708 = !DILocation(line: 1854, column: 30, scope: !11641)
!11709 = !DILocation(line: 1854, column: 11, scope: !11641)
!11710 = !DILocation(line: 1855, column: 11, scope: !11641)
!11711 = !DILocation(line: 1855, column: 21, scope: !11641)
!11712 = !DILocation(line: 1855, column: 9, scope: !11641)
!11713 = !DILocation(line: 1856, column: 40, scope: !11641)
!11714 = !DILocation(line: 1856, column: 13, scope: !11641)
!11715 = !DILocation(line: 1856, column: 11, scope: !11641)
!11716 = !DILocation(line: 1857, column: 7, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 1857, column: 6)
!11718 = !DILocation(line: 1857, column: 6, scope: !11641)
!11719 = !DILocation(line: 1858, column: 3, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11717, file: !3, line: 1857, column: 17)
!11721 = !DILocation(line: 1860, column: 3, scope: !11720)
!11722 = !DILocation(line: 1863, column: 38, scope: !11641)
!11723 = !DILocation(line: 1863, column: 42, scope: !11641)
!11724 = !DILocation(line: 1863, column: 13, scope: !11641)
!11725 = !DILocation(line: 1863, column: 11, scope: !11641)
!11726 = !DILocation(line: 1867, column: 6, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 1867, column: 6)
!11728 = !DILocation(line: 1867, column: 16, scope: !11727)
!11729 = !DILocation(line: 1867, column: 20, scope: !11727)
!11730 = !DILocation(line: 1867, column: 30, scope: !11727)
!11731 = !DILocation(line: 1867, column: 35, scope: !11727)
!11732 = !DILocation(line: 1868, column: 6, scope: !11727)
!11733 = !DILocation(line: 1868, column: 42, scope: !11727)
!11734 = !DILocation(line: 1868, column: 40, scope: !11727)
!11735 = !DILocation(line: 1867, column: 6, scope: !11641)
!11736 = !DILocation(line: 1869, column: 3, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11727, file: !3, line: 1868, column: 55)
!11738 = !DILocation(line: 1872, column: 3, scope: !11737)
!11739 = !DILocation(line: 1878, column: 6, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 1878, column: 6)
!11741 = !DILocation(line: 1878, column: 41, scope: !11740)
!11742 = !DILocation(line: 1878, column: 39, scope: !11740)
!11743 = !DILocation(line: 1878, column: 6, scope: !11641)
!11744 = !DILocation(line: 1879, column: 3, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 1878, column: 53)
!11746 = !DILocation(line: 1881, column: 3, scope: !11745)
!11747 = !DILocation(line: 1889, column: 25, scope: !11748)
!11748 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 1889, column: 6)
!11749 = !DILocation(line: 1889, column: 31, scope: !11748)
!11750 = !DILocation(line: 1889, column: 41, scope: !11748)
!11751 = !DILocation(line: 1889, column: 47, scope: !11748)
!11752 = !DILocation(line: 1889, column: 6, scope: !11748)
!11753 = !DILocation(line: 1889, column: 61, scope: !11748)
!11754 = !DILocation(line: 1889, column: 6, scope: !11641)
!11755 = !DILocation(line: 1892, column: 3, scope: !11756)
!11756 = distinct !DILexicalBlock(scope: !11748, file: !3, line: 1889, column: 66)
!11757 = !DILocation(line: 1895, column: 6, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 1895, column: 6)
!11759 = !DILocation(line: 1895, column: 12, scope: !11758)
!11760 = !DILocation(line: 1895, column: 19, scope: !11758)
!11761 = !DILocation(line: 1895, column: 6, scope: !11641)
!11762 = !DILocation(line: 1896, column: 31, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11758, file: !3, line: 1895, column: 36)
!11764 = !DILocation(line: 1896, column: 36, scope: !11763)
!11765 = !DILocation(line: 1896, column: 42, scope: !11763)
!11766 = !DILocation(line: 1896, column: 9, scope: !11763)
!11767 = !DILocation(line: 1896, column: 7, scope: !11763)
!11768 = !DILocation(line: 1897, column: 7, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11763, file: !3, line: 1897, column: 7)
!11770 = !DILocation(line: 1897, column: 11, scope: !11769)
!11771 = !DILocation(line: 1897, column: 7, scope: !11763)
!11772 = !DILocation(line: 1898, column: 19, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11769, file: !3, line: 1897, column: 16)
!11774 = !DILocation(line: 1898, column: 25, scope: !11773)
!11775 = !DILocation(line: 1898, column: 35, scope: !11773)
!11776 = !DILocation(line: 1898, column: 39, scope: !11773)
!11777 = !DILocation(line: 1898, column: 49, scope: !11773)
!11778 = !DILocation(line: 1898, column: 4, scope: !11773)
!11779 = !DILocation(line: 1899, column: 4, scope: !11773)
!11780 = !DILocation(line: 1899, column: 14, scope: !11773)
!11781 = !DILocation(line: 1899, column: 18, scope: !11773)
!11782 = !DILocation(line: 1899, column: 28, scope: !11773)
!11783 = !DILocation(line: 1899, column: 37, scope: !11773)
!11784 = !DILocation(line: 1900, column: 11, scope: !11773)
!11785 = !DILocation(line: 1900, column: 4, scope: !11773)
!11786 = !DILocation(line: 1902, column: 2, scope: !11763)
!11787 = !DILocation(line: 1904, column: 25, scope: !11641)
!11788 = !DILocation(line: 1904, column: 2, scope: !11641)
!11789 = !DILocation(line: 1904, column: 12, scope: !11641)
!11790 = !DILocation(line: 1904, column: 22, scope: !11641)
!11791 = !DILocation(line: 1905, column: 18, scope: !11641)
!11792 = !DILocation(line: 1905, column: 16, scope: !11641)
!11793 = !DILocation(line: 1913, column: 19, scope: !11641)
!11794 = !DILocation(line: 1913, column: 17, scope: !11641)
!11795 = !DILocation(line: 1916, column: 15, scope: !11641)
!11796 = !DILocation(line: 1916, column: 2, scope: !11641)
!11797 = !DILocation(line: 1916, column: 6, scope: !11641)
!11798 = !DILocation(line: 1916, column: 13, scope: !11641)
!11799 = !DILocation(line: 1918, column: 27, scope: !11641)
!11800 = !DILocation(line: 1918, column: 33, scope: !11641)
!11801 = !DILocation(line: 1918, column: 43, scope: !11641)
!11802 = !DILocation(line: 1918, column: 51, scope: !11641)
!11803 = !DILocation(line: 1918, column: 11, scope: !11641)
!11804 = !DILocation(line: 1918, column: 9, scope: !11641)
!11805 = !DILocation(line: 1919, column: 26, scope: !11641)
!11806 = !DILocation(line: 1919, column: 2, scope: !11641)
!11807 = !DILocation(line: 1926, column: 2, scope: !11641)
!11808 = !DILocation(line: 1927, column: 1, scope: !11641)
!11809 = distinct !DISubprogram(name: "xhci_drop_endpoint", scope: !3, file: !3, line: 1735, type: !4982, scopeLine: 1737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!11810 = !DILocalVariable(name: "hcd", arg: 1, scope: !11809, file: !3, line: 1735, type: !4501)
!11811 = !DILocation(line: 1735, column: 47, scope: !11809)
!11812 = !DILocalVariable(name: "udev", arg: 2, scope: !11809, file: !3, line: 1735, type: !4526)
!11813 = !DILocation(line: 1735, column: 71, scope: !11809)
!11814 = !DILocalVariable(name: "ep", arg: 3, scope: !11809, file: !3, line: 1736, type: !4725)
!11815 = !DILocation(line: 1736, column: 29, scope: !11809)
!11816 = !DILocalVariable(name: "xhci", scope: !11809, file: !3, line: 1738, type: !4497)
!11817 = !DILocation(line: 1738, column: 19, scope: !11809)
!11818 = !DILocalVariable(name: "in_ctx", scope: !11809, file: !3, line: 1739, type: !5251)
!11819 = !DILocation(line: 1739, column: 29, scope: !11809)
!11820 = !DILocalVariable(name: "out_ctx", scope: !11809, file: !3, line: 1739, type: !5251)
!11821 = !DILocation(line: 1739, column: 38, scope: !11809)
!11822 = !DILocalVariable(name: "ctrl_ctx", scope: !11809, file: !3, line: 1740, type: !8108)
!11823 = !DILocation(line: 1740, column: 33, scope: !11809)
!11824 = !DILocalVariable(name: "ep_index", scope: !11809, file: !3, line: 1741, type: !7)
!11825 = !DILocation(line: 1741, column: 15, scope: !11809)
!11826 = !DILocalVariable(name: "ep_ctx", scope: !11809, file: !3, line: 1742, type: !8119)
!11827 = !DILocation(line: 1742, column: 22, scope: !11809)
!11828 = !DILocalVariable(name: "drop_flag", scope: !11809, file: !3, line: 1743, type: !204)
!11829 = !DILocation(line: 1743, column: 6, scope: !11809)
!11830 = !DILocalVariable(name: "new_add_flags", scope: !11809, file: !3, line: 1744, type: !204)
!11831 = !DILocation(line: 1744, column: 6, scope: !11809)
!11832 = !DILocalVariable(name: "new_drop_flags", scope: !11809, file: !3, line: 1744, type: !204)
!11833 = !DILocation(line: 1744, column: 21, scope: !11809)
!11834 = !DILocalVariable(name: "ret", scope: !11809, file: !3, line: 1745, type: !265)
!11835 = !DILocation(line: 1745, column: 6, scope: !11809)
!11836 = !DILocation(line: 1747, column: 24, scope: !11809)
!11837 = !DILocation(line: 1747, column: 29, scope: !11809)
!11838 = !DILocation(line: 1747, column: 35, scope: !11809)
!11839 = !DILocation(line: 1747, column: 8, scope: !11809)
!11840 = !DILocation(line: 1747, column: 6, scope: !11809)
!11841 = !DILocation(line: 1748, column: 6, scope: !11842)
!11842 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 1748, column: 6)
!11843 = !DILocation(line: 1748, column: 10, scope: !11842)
!11844 = !DILocation(line: 1748, column: 6, scope: !11809)
!11845 = !DILocation(line: 1749, column: 10, scope: !11842)
!11846 = !DILocation(line: 1749, column: 3, scope: !11842)
!11847 = !DILocation(line: 1750, column: 21, scope: !11809)
!11848 = !DILocation(line: 1750, column: 9, scope: !11809)
!11849 = !DILocation(line: 1750, column: 7, scope: !11809)
!11850 = !DILocation(line: 1751, column: 6, scope: !11851)
!11851 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 1751, column: 6)
!11852 = !DILocation(line: 1751, column: 12, scope: !11851)
!11853 = !DILocation(line: 1751, column: 22, scope: !11851)
!11854 = !DILocation(line: 1751, column: 6, scope: !11809)
!11855 = !DILocation(line: 1752, column: 3, scope: !11851)
!11856 = !DILocation(line: 1755, column: 38, scope: !11809)
!11857 = !DILocation(line: 1755, column: 42, scope: !11809)
!11858 = !DILocation(line: 1755, column: 14, scope: !11809)
!11859 = !DILocation(line: 1755, column: 12, scope: !11809)
!11860 = !DILocation(line: 1756, column: 6, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 1756, column: 6)
!11862 = !DILocation(line: 1756, column: 16, scope: !11861)
!11863 = !DILocation(line: 1756, column: 29, scope: !11861)
!11864 = !DILocation(line: 1756, column: 32, scope: !11861)
!11865 = !DILocation(line: 1756, column: 42, scope: !11861)
!11866 = !DILocation(line: 1756, column: 6, scope: !11809)
!11867 = !DILocation(line: 1759, column: 3, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11861, file: !3, line: 1756, column: 55)
!11869 = !DILocation(line: 1762, column: 11, scope: !11809)
!11870 = !DILocation(line: 1762, column: 17, scope: !11809)
!11871 = !DILocation(line: 1762, column: 22, scope: !11809)
!11872 = !DILocation(line: 1762, column: 28, scope: !11809)
!11873 = !DILocation(line: 1762, column: 38, scope: !11809)
!11874 = !DILocation(line: 1762, column: 9, scope: !11809)
!11875 = !DILocation(line: 1763, column: 12, scope: !11809)
!11876 = !DILocation(line: 1763, column: 18, scope: !11809)
!11877 = !DILocation(line: 1763, column: 23, scope: !11809)
!11878 = !DILocation(line: 1763, column: 29, scope: !11809)
!11879 = !DILocation(line: 1763, column: 39, scope: !11809)
!11880 = !DILocation(line: 1763, column: 10, scope: !11809)
!11881 = !DILocation(line: 1764, column: 40, scope: !11809)
!11882 = !DILocation(line: 1764, column: 13, scope: !11809)
!11883 = !DILocation(line: 1764, column: 11, scope: !11809)
!11884 = !DILocation(line: 1765, column: 7, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 1765, column: 6)
!11886 = !DILocation(line: 1765, column: 6, scope: !11809)
!11887 = !DILocation(line: 1766, column: 3, scope: !11888)
!11888 = distinct !DILexicalBlock(scope: !11885, file: !3, line: 1765, column: 17)
!11889 = !DILocation(line: 1768, column: 3, scope: !11888)
!11890 = !DILocation(line: 1771, column: 38, scope: !11809)
!11891 = !DILocation(line: 1771, column: 42, scope: !11809)
!11892 = !DILocation(line: 1771, column: 13, scope: !11809)
!11893 = !DILocation(line: 1771, column: 11, scope: !11809)
!11894 = !DILocation(line: 1772, column: 27, scope: !11809)
!11895 = !DILocation(line: 1772, column: 33, scope: !11809)
!11896 = !DILocation(line: 1772, column: 42, scope: !11809)
!11897 = !DILocation(line: 1772, column: 11, scope: !11809)
!11898 = !DILocation(line: 1772, column: 9, scope: !11809)
!11899 = !DILocation(line: 1776, column: 7, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 1776, column: 6)
!11901 = !DILocation(line: 1776, column: 32, scope: !11900)
!11902 = !DILocation(line: 1776, column: 54, scope: !11900)
!11903 = !DILocation(line: 1777, column: 6, scope: !11900)
!11904 = !DILocation(line: 1778, column: 30, scope: !11900)
!11905 = !DILocation(line: 1778, column: 34, scope: !11900)
!11906 = !DILocation(line: 1778, column: 6, scope: !11900)
!11907 = !DILocation(line: 1777, column: 40, scope: !11900)
!11908 = !DILocation(line: 1776, column: 6, scope: !11809)
!11909 = !DILocation(line: 1780, column: 7, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11911, file: !3, line: 1780, column: 7)
!11911 = distinct !DILexicalBlock(scope: !11900, file: !3, line: 1778, column: 41)
!11912 = !DILocation(line: 1780, column: 13, scope: !11910)
!11913 = !DILocation(line: 1780, column: 18, scope: !11910)
!11914 = !DILocation(line: 1780, column: 24, scope: !11910)
!11915 = !DILocation(line: 1780, column: 34, scope: !11910)
!11916 = !DILocation(line: 1780, column: 38, scope: !11910)
!11917 = !DILocation(line: 1780, column: 48, scope: !11910)
!11918 = !DILocation(line: 1780, column: 53, scope: !11910)
!11919 = !DILocation(line: 1780, column: 7, scope: !11911)
!11920 = !DILocation(line: 1781, column: 4, scope: !11910)
!11921 = !DILocation(line: 1783, column: 3, scope: !11911)
!11922 = !DILocation(line: 1786, column: 26, scope: !11809)
!11923 = !DILocation(line: 1786, column: 2, scope: !11809)
!11924 = !DILocation(line: 1786, column: 12, scope: !11809)
!11925 = !DILocation(line: 1786, column: 23, scope: !11809)
!11926 = !DILocation(line: 1787, column: 19, scope: !11809)
!11927 = !DILocation(line: 1787, column: 17, scope: !11809)
!11928 = !DILocation(line: 1789, column: 25, scope: !11809)
!11929 = !DILocation(line: 1789, column: 2, scope: !11809)
!11930 = !DILocation(line: 1789, column: 12, scope: !11809)
!11931 = !DILocation(line: 1789, column: 22, scope: !11809)
!11932 = !DILocation(line: 1790, column: 18, scope: !11809)
!11933 = !DILocation(line: 1790, column: 16, scope: !11809)
!11934 = !DILocation(line: 1792, column: 31, scope: !11809)
!11935 = !DILocation(line: 1792, column: 37, scope: !11809)
!11936 = !DILocation(line: 1792, column: 43, scope: !11809)
!11937 = !DILocation(line: 1792, column: 48, scope: !11809)
!11938 = !DILocation(line: 1792, column: 54, scope: !11809)
!11939 = !DILocation(line: 1792, column: 64, scope: !11809)
!11940 = !DILocation(line: 1792, column: 2, scope: !11809)
!11941 = !DILocation(line: 1794, column: 21, scope: !11809)
!11942 = !DILocation(line: 1794, column: 27, scope: !11809)
!11943 = !DILocation(line: 1794, column: 33, scope: !11809)
!11944 = !DILocation(line: 1794, column: 38, scope: !11809)
!11945 = !DILocation(line: 1794, column: 44, scope: !11809)
!11946 = !DILocation(line: 1794, column: 54, scope: !11809)
!11947 = !DILocation(line: 1794, column: 2, scope: !11809)
!11948 = !DILocation(line: 1796, column: 6, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 1796, column: 6)
!11950 = !DILocation(line: 1796, column: 12, scope: !11949)
!11951 = !DILocation(line: 1796, column: 19, scope: !11949)
!11952 = !DILocation(line: 1796, column: 6, scope: !11809)
!11953 = !DILocation(line: 1797, column: 26, scope: !11949)
!11954 = !DILocation(line: 1797, column: 31, scope: !11949)
!11955 = !DILocation(line: 1797, column: 37, scope: !11949)
!11956 = !DILocation(line: 1797, column: 3, scope: !11949)
!11957 = !DILocation(line: 1804, column: 2, scope: !11809)
!11958 = !DILocation(line: 1805, column: 1, scope: !11809)
!11959 = distinct !DISubprogram(name: "xhci_check_bandwidth", scope: !3, file: !3, line: 2864, type: !4965, scopeLine: 2865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!11960 = !DILocalVariable(name: "hcd", arg: 1, scope: !11959, file: !3, line: 2864, type: !4501)
!11961 = !DILocation(line: 2864, column: 49, scope: !11959)
!11962 = !DILocalVariable(name: "udev", arg: 2, scope: !11959, file: !3, line: 2864, type: !4526)
!11963 = !DILocation(line: 2864, column: 73, scope: !11959)
!11964 = !DILocalVariable(name: "i", scope: !11959, file: !3, line: 2866, type: !265)
!11965 = !DILocation(line: 2866, column: 6, scope: !11959)
!11966 = !DILocalVariable(name: "ret", scope: !11959, file: !3, line: 2867, type: !265)
!11967 = !DILocation(line: 2867, column: 6, scope: !11959)
!11968 = !DILocalVariable(name: "xhci", scope: !11959, file: !3, line: 2868, type: !4497)
!11969 = !DILocation(line: 2868, column: 19, scope: !11959)
!11970 = !DILocalVariable(name: "virt_dev", scope: !11959, file: !3, line: 2869, type: !5290)
!11971 = !DILocation(line: 2869, column: 27, scope: !11959)
!11972 = !DILocalVariable(name: "ctrl_ctx", scope: !11959, file: !3, line: 2870, type: !8108)
!11973 = !DILocation(line: 2870, column: 33, scope: !11959)
!11974 = !DILocalVariable(name: "slot_ctx", scope: !11959, file: !3, line: 2871, type: !8442)
!11975 = !DILocation(line: 2871, column: 24, scope: !11959)
!11976 = !DILocalVariable(name: "command", scope: !11959, file: !3, line: 2872, type: !5247)
!11977 = !DILocation(line: 2872, column: 23, scope: !11959)
!11978 = !DILocation(line: 2874, column: 24, scope: !11959)
!11979 = !DILocation(line: 2874, column: 29, scope: !11959)
!11980 = !DILocation(line: 2874, column: 8, scope: !11959)
!11981 = !DILocation(line: 2874, column: 6, scope: !11959)
!11982 = !DILocation(line: 2875, column: 6, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2875, column: 6)
!11984 = !DILocation(line: 2875, column: 10, scope: !11983)
!11985 = !DILocation(line: 2875, column: 6, scope: !11959)
!11986 = !DILocation(line: 2876, column: 10, scope: !11983)
!11987 = !DILocation(line: 2876, column: 3, scope: !11983)
!11988 = !DILocation(line: 2877, column: 21, scope: !11959)
!11989 = !DILocation(line: 2877, column: 9, scope: !11959)
!11990 = !DILocation(line: 2877, column: 7, scope: !11959)
!11991 = !DILocation(line: 2878, column: 7, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2878, column: 6)
!11993 = !DILocation(line: 2878, column: 13, scope: !11992)
!11994 = !DILocation(line: 2878, column: 23, scope: !11992)
!11995 = !DILocation(line: 2878, column: 43, scope: !11992)
!11996 = !DILocation(line: 2879, column: 4, scope: !11992)
!11997 = !DILocation(line: 2879, column: 10, scope: !11992)
!11998 = !DILocation(line: 2879, column: 20, scope: !11992)
!11999 = !DILocation(line: 2878, column: 6, scope: !11959)
!12000 = !DILocation(line: 2880, column: 3, scope: !11992)
!12001 = !DILocation(line: 2883, column: 13, scope: !11959)
!12002 = !DILocation(line: 2883, column: 19, scope: !11959)
!12003 = !DILocation(line: 2883, column: 24, scope: !11959)
!12004 = !DILocation(line: 2883, column: 30, scope: !11959)
!12005 = !DILocation(line: 2883, column: 11, scope: !11959)
!12006 = !DILocation(line: 2885, column: 31, scope: !11959)
!12007 = !DILocation(line: 2885, column: 12, scope: !11959)
!12008 = !DILocation(line: 2885, column: 10, scope: !11959)
!12009 = !DILocation(line: 2886, column: 7, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2886, column: 6)
!12011 = !DILocation(line: 2886, column: 6, scope: !11959)
!12012 = !DILocation(line: 2887, column: 3, scope: !12010)
!12013 = !DILocation(line: 2889, column: 20, scope: !11959)
!12014 = !DILocation(line: 2889, column: 30, scope: !11959)
!12015 = !DILocation(line: 2889, column: 2, scope: !11959)
!12016 = !DILocation(line: 2889, column: 11, scope: !11959)
!12017 = !DILocation(line: 2889, column: 18, scope: !11959)
!12018 = !DILocation(line: 2892, column: 40, scope: !11959)
!12019 = !DILocation(line: 2892, column: 49, scope: !11959)
!12020 = !DILocation(line: 2892, column: 13, scope: !11959)
!12021 = !DILocation(line: 2892, column: 11, scope: !11959)
!12022 = !DILocation(line: 2893, column: 7, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2893, column: 6)
!12024 = !DILocation(line: 2893, column: 6, scope: !11959)
!12025 = !DILocation(line: 2894, column: 3, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !12023, file: !3, line: 2893, column: 17)
!12027 = !DILocation(line: 2896, column: 7, scope: !12026)
!12028 = !DILocation(line: 2897, column: 3, scope: !12026)
!12029 = !DILocation(line: 2899, column: 2, scope: !11959)
!12030 = !DILocation(line: 2899, column: 12, scope: !11959)
!12031 = !DILocation(line: 2899, column: 22, scope: !11959)
!12032 = !DILocation(line: 2900, column: 2, scope: !11959)
!12033 = !DILocation(line: 2900, column: 12, scope: !11959)
!12034 = !DILocation(line: 2900, column: 22, scope: !11959)
!12035 = !DILocation(line: 2901, column: 2, scope: !11959)
!12036 = !DILocation(line: 2901, column: 12, scope: !11959)
!12037 = !DILocation(line: 2901, column: 23, scope: !11959)
!12038 = !DILocation(line: 2904, column: 6, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2904, column: 6)
!12040 = !DILocation(line: 2904, column: 16, scope: !12039)
!12041 = !DILocation(line: 2904, column: 26, scope: !12039)
!12042 = !DILocation(line: 2904, column: 52, scope: !12039)
!12043 = !DILocation(line: 2905, column: 6, scope: !12039)
!12044 = !DILocation(line: 2905, column: 16, scope: !12039)
!12045 = !DILocation(line: 2905, column: 27, scope: !12039)
!12046 = !DILocation(line: 2904, column: 6, scope: !11959)
!12047 = !DILocation(line: 2906, column: 7, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12039, file: !3, line: 2905, column: 33)
!12049 = !DILocation(line: 2907, column: 3, scope: !12048)
!12050 = !DILocation(line: 2910, column: 31, scope: !11959)
!12051 = !DILocation(line: 2910, column: 37, scope: !11959)
!12052 = !DILocation(line: 2910, column: 47, scope: !11959)
!12053 = !DILocation(line: 2910, column: 13, scope: !11959)
!12054 = !DILocation(line: 2910, column: 11, scope: !11959)
!12055 = !DILocation(line: 2911, column: 9, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2911, column: 2)
!12057 = !DILocation(line: 2911, column: 7, scope: !12056)
!12058 = !DILocation(line: 2911, column: 15, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12056, file: !3, line: 2911, column: 2)
!12060 = !DILocation(line: 2911, column: 17, scope: !12059)
!12061 = !DILocation(line: 2911, column: 2, scope: !12056)
!12062 = !DILocalVariable(name: "le32", scope: !12063, file: !3, line: 2912, type: !4583)
!12063 = distinct !DILexicalBlock(scope: !12059, file: !3, line: 2911, column: 28)
!12064 = !DILocation(line: 2912, column: 10, scope: !12063)
!12065 = !DILocation(line: 2912, column: 17, scope: !12063)
!12066 = !DILocation(line: 2914, column: 8, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !12063, file: !3, line: 2914, column: 7)
!12068 = !DILocation(line: 2914, column: 18, scope: !12067)
!12069 = !DILocation(line: 2914, column: 22, scope: !12067)
!12070 = !DILocation(line: 2914, column: 23, scope: !12067)
!12071 = !DILocation(line: 2914, column: 27, scope: !12067)
!12072 = !DILocation(line: 2914, column: 32, scope: !12067)
!12073 = !DILocation(line: 2914, column: 37, scope: !12067)
!12074 = !DILocation(line: 2914, column: 47, scope: !12067)
!12075 = !DILocation(line: 2914, column: 60, scope: !12067)
!12076 = !DILocation(line: 2914, column: 58, scope: !12067)
!12077 = !DILocation(line: 2915, column: 7, scope: !12067)
!12078 = !DILocation(line: 2915, column: 11, scope: !12067)
!12079 = !DILocation(line: 2915, column: 21, scope: !12067)
!12080 = !DILocation(line: 2915, column: 33, scope: !12067)
!12081 = !DILocation(line: 2915, column: 31, scope: !12067)
!12082 = !DILocation(line: 2915, column: 39, scope: !12067)
!12083 = !DILocation(line: 2915, column: 42, scope: !12067)
!12084 = !DILocation(line: 2915, column: 44, scope: !12067)
!12085 = !DILocation(line: 2914, column: 7, scope: !12063)
!12086 = !DILocation(line: 2916, column: 4, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12067, file: !3, line: 2915, column: 50)
!12088 = !DILocation(line: 2916, column: 14, scope: !12087)
!12089 = !DILocation(line: 2916, column: 23, scope: !12087)
!12090 = !DILocation(line: 2917, column: 26, scope: !12087)
!12091 = !DILocation(line: 2917, column: 4, scope: !12087)
!12092 = !DILocation(line: 2917, column: 14, scope: !12087)
!12093 = !DILocation(line: 2917, column: 23, scope: !12087)
!12094 = !DILocation(line: 2918, column: 4, scope: !12087)
!12095 = !DILocation(line: 2920, column: 2, scope: !12063)
!12096 = !DILocation(line: 2911, column: 24, scope: !12059)
!12097 = !DILocation(line: 2911, column: 2, scope: !12059)
!12098 = distinct !{!12098, !12061, !12099}
!12099 = !DILocation(line: 2920, column: 2, scope: !12056)
!12100 = !DILocation(line: 2922, column: 32, scope: !11959)
!12101 = !DILocation(line: 2922, column: 38, scope: !11959)
!12102 = !DILocation(line: 2922, column: 44, scope: !11959)
!12103 = !DILocation(line: 2922, column: 8, scope: !11959)
!12104 = !DILocation(line: 2922, column: 6, scope: !11959)
!12105 = !DILocation(line: 2924, column: 6, scope: !12106)
!12106 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2924, column: 6)
!12107 = !DILocation(line: 2924, column: 6, scope: !11959)
!12108 = !DILocation(line: 2926, column: 3, scope: !12106)
!12109 = !DILocation(line: 2929, column: 9, scope: !12110)
!12110 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2929, column: 2)
!12111 = !DILocation(line: 2929, column: 7, scope: !12110)
!12112 = !DILocation(line: 2929, column: 14, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 2929, column: 2)
!12114 = !DILocation(line: 2929, column: 16, scope: !12113)
!12115 = !DILocation(line: 2929, column: 2, scope: !12110)
!12116 = !DILocation(line: 2930, column: 8, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12118, file: !3, line: 2930, column: 7)
!12118 = distinct !DILexicalBlock(scope: !12113, file: !3, line: 2929, column: 27)
!12119 = !DILocation(line: 2930, column: 51, scope: !12117)
!12120 = !DILocation(line: 2930, column: 53, scope: !12117)
!12121 = !DILocation(line: 2930, column: 47, scope: !12117)
!12122 = !DILocation(line: 2930, column: 42, scope: !12117)
!12123 = !DILocation(line: 2930, column: 60, scope: !12117)
!12124 = !DILocation(line: 2931, column: 9, scope: !12117)
!12125 = !DILocation(line: 2931, column: 51, scope: !12117)
!12126 = !DILocation(line: 2931, column: 53, scope: !12117)
!12127 = !DILocation(line: 2931, column: 47, scope: !12117)
!12128 = !DILocation(line: 2931, column: 42, scope: !12117)
!12129 = !DILocation(line: 2930, column: 7, scope: !12118)
!12130 = !DILocation(line: 2932, column: 28, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !12117, file: !3, line: 2931, column: 61)
!12132 = !DILocation(line: 2932, column: 34, scope: !12131)
!12133 = !DILocation(line: 2932, column: 44, scope: !12131)
!12134 = !DILocation(line: 2932, column: 4, scope: !12131)
!12135 = !DILocation(line: 2933, column: 34, scope: !12131)
!12136 = !DILocation(line: 2933, column: 40, scope: !12131)
!12137 = !DILocation(line: 2933, column: 50, scope: !12131)
!12138 = !DILocation(line: 2933, column: 4, scope: !12131)
!12139 = !DILocation(line: 2934, column: 3, scope: !12131)
!12140 = !DILocation(line: 2935, column: 2, scope: !12118)
!12141 = !DILocation(line: 2929, column: 23, scope: !12113)
!12142 = !DILocation(line: 2929, column: 2, scope: !12113)
!12143 = distinct !{!12143, !12115, !12144}
!12144 = !DILocation(line: 2935, column: 2, scope: !12110)
!12145 = !DILocation(line: 2936, column: 19, scope: !11959)
!12146 = !DILocation(line: 2936, column: 25, scope: !11959)
!12147 = !DILocation(line: 2936, column: 2, scope: !11959)
!12148 = !DILocation(line: 2941, column: 9, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 2941, column: 2)
!12150 = !DILocation(line: 2941, column: 7, scope: !12149)
!12151 = !DILocation(line: 2941, column: 14, scope: !12152)
!12152 = distinct !DILexicalBlock(scope: !12149, file: !3, line: 2941, column: 2)
!12153 = !DILocation(line: 2941, column: 16, scope: !12152)
!12154 = !DILocation(line: 2941, column: 2, scope: !12149)
!12155 = !DILocation(line: 2942, column: 8, scope: !12156)
!12156 = distinct !DILexicalBlock(scope: !12157, file: !3, line: 2942, column: 7)
!12157 = distinct !DILexicalBlock(scope: !12152, file: !3, line: 2941, column: 27)
!12158 = !DILocation(line: 2942, column: 18, scope: !12156)
!12159 = !DILocation(line: 2942, column: 22, scope: !12156)
!12160 = !DILocation(line: 2942, column: 25, scope: !12156)
!12161 = !DILocation(line: 2942, column: 7, scope: !12157)
!12162 = !DILocation(line: 2943, column: 4, scope: !12156)
!12163 = !DILocation(line: 2947, column: 7, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12157, file: !3, line: 2947, column: 7)
!12165 = !DILocation(line: 2947, column: 17, scope: !12164)
!12166 = !DILocation(line: 2947, column: 21, scope: !12164)
!12167 = !DILocation(line: 2947, column: 24, scope: !12164)
!12168 = !DILocation(line: 2947, column: 7, scope: !12157)
!12169 = !DILocation(line: 2948, column: 28, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12164, file: !3, line: 2947, column: 30)
!12171 = !DILocation(line: 2948, column: 34, scope: !12170)
!12172 = !DILocation(line: 2948, column: 44, scope: !12170)
!12173 = !DILocation(line: 2948, column: 4, scope: !12170)
!12174 = !DILocation(line: 2949, column: 3, scope: !12170)
!12175 = !DILocation(line: 2950, column: 33, scope: !12157)
!12176 = !DILocation(line: 2950, column: 39, scope: !12157)
!12177 = !DILocation(line: 2950, column: 49, scope: !12157)
!12178 = !DILocation(line: 2950, column: 3, scope: !12157)
!12179 = !DILocation(line: 2951, column: 27, scope: !12157)
!12180 = !DILocation(line: 2951, column: 37, scope: !12157)
!12181 = !DILocation(line: 2951, column: 41, scope: !12157)
!12182 = !DILocation(line: 2951, column: 44, scope: !12157)
!12183 = !DILocation(line: 2951, column: 3, scope: !12157)
!12184 = !DILocation(line: 2951, column: 13, scope: !12157)
!12185 = !DILocation(line: 2951, column: 17, scope: !12157)
!12186 = !DILocation(line: 2951, column: 20, scope: !12157)
!12187 = !DILocation(line: 2951, column: 25, scope: !12157)
!12188 = !DILocation(line: 2952, column: 3, scope: !12157)
!12189 = !DILocation(line: 2952, column: 13, scope: !12157)
!12190 = !DILocation(line: 2952, column: 17, scope: !12157)
!12191 = !DILocation(line: 2952, column: 20, scope: !12157)
!12192 = !DILocation(line: 2952, column: 29, scope: !12157)
!12193 = !DILocation(line: 2953, column: 32, scope: !12157)
!12194 = !DILocation(line: 2953, column: 38, scope: !12157)
!12195 = !DILocation(line: 2953, column: 48, scope: !12157)
!12196 = !DILocation(line: 2953, column: 3, scope: !12157)
!12197 = !DILocation(line: 2954, column: 2, scope: !12157)
!12198 = !DILocation(line: 2941, column: 23, scope: !12152)
!12199 = !DILocation(line: 2941, column: 2, scope: !12152)
!12200 = distinct !{!12200, !12154, !12201}
!12201 = !DILocation(line: 2954, column: 2, scope: !12149)
!12202 = !DILabel(scope: !11959, name: "command_cleanup", file: !3, line: 2955)
!12203 = !DILocation(line: 2955, column: 1, scope: !11959)
!12204 = !DILocation(line: 2956, column: 8, scope: !11959)
!12205 = !DILocation(line: 2956, column: 17, scope: !11959)
!12206 = !DILocation(line: 2956, column: 2, scope: !11959)
!12207 = !DILocation(line: 2957, column: 8, scope: !11959)
!12208 = !DILocation(line: 2957, column: 2, scope: !11959)
!12209 = !DILocation(line: 2959, column: 9, scope: !11959)
!12210 = !DILocation(line: 2959, column: 2, scope: !11959)
!12211 = !DILocation(line: 2960, column: 1, scope: !11959)
!12212 = distinct !DISubprogram(name: "xhci_reset_bandwidth", scope: !3, file: !3, line: 2962, type: !4969, scopeLine: 2963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!12213 = !DILocalVariable(name: "hcd", arg: 1, scope: !12212, file: !3, line: 2962, type: !4501)
!12214 = !DILocation(line: 2962, column: 50, scope: !12212)
!12215 = !DILocalVariable(name: "udev", arg: 2, scope: !12212, file: !3, line: 2962, type: !4526)
!12216 = !DILocation(line: 2962, column: 74, scope: !12212)
!12217 = !DILocalVariable(name: "xhci", scope: !12212, file: !3, line: 2964, type: !4497)
!12218 = !DILocation(line: 2964, column: 19, scope: !12212)
!12219 = !DILocalVariable(name: "virt_dev", scope: !12212, file: !3, line: 2965, type: !5290)
!12220 = !DILocation(line: 2965, column: 27, scope: !12212)
!12221 = !DILocalVariable(name: "i", scope: !12212, file: !3, line: 2966, type: !265)
!12222 = !DILocation(line: 2966, column: 6, scope: !12212)
!12223 = !DILocalVariable(name: "ret", scope: !12212, file: !3, line: 2966, type: !265)
!12224 = !DILocation(line: 2966, column: 9, scope: !12212)
!12225 = !DILocation(line: 2968, column: 24, scope: !12212)
!12226 = !DILocation(line: 2968, column: 29, scope: !12212)
!12227 = !DILocation(line: 2968, column: 8, scope: !12212)
!12228 = !DILocation(line: 2968, column: 6, scope: !12212)
!12229 = !DILocation(line: 2969, column: 6, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12212, file: !3, line: 2969, column: 6)
!12231 = !DILocation(line: 2969, column: 10, scope: !12230)
!12232 = !DILocation(line: 2969, column: 6, scope: !12212)
!12233 = !DILocation(line: 2970, column: 3, scope: !12230)
!12234 = !DILocation(line: 2971, column: 21, scope: !12212)
!12235 = !DILocation(line: 2971, column: 9, scope: !12212)
!12236 = !DILocation(line: 2971, column: 7, scope: !12212)
!12237 = !DILocation(line: 2974, column: 13, scope: !12212)
!12238 = !DILocation(line: 2974, column: 19, scope: !12212)
!12239 = !DILocation(line: 2974, column: 24, scope: !12212)
!12240 = !DILocation(line: 2974, column: 30, scope: !12212)
!12241 = !DILocation(line: 2974, column: 11, scope: !12212)
!12242 = !DILocation(line: 2976, column: 9, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12212, file: !3, line: 2976, column: 2)
!12244 = !DILocation(line: 2976, column: 7, scope: !12243)
!12245 = !DILocation(line: 2976, column: 14, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12243, file: !3, line: 2976, column: 2)
!12247 = !DILocation(line: 2976, column: 16, scope: !12246)
!12248 = !DILocation(line: 2976, column: 2, scope: !12243)
!12249 = !DILocation(line: 2977, column: 7, scope: !12250)
!12250 = distinct !DILexicalBlock(scope: !12251, file: !3, line: 2977, column: 7)
!12251 = distinct !DILexicalBlock(scope: !12246, file: !3, line: 2976, column: 27)
!12252 = !DILocation(line: 2977, column: 17, scope: !12250)
!12253 = !DILocation(line: 2977, column: 21, scope: !12250)
!12254 = !DILocation(line: 2977, column: 24, scope: !12250)
!12255 = !DILocation(line: 2977, column: 7, scope: !12251)
!12256 = !DILocation(line: 2978, column: 33, scope: !12257)
!12257 = distinct !DILexicalBlock(scope: !12250, file: !3, line: 2977, column: 34)
!12258 = !DILocation(line: 2978, column: 39, scope: !12257)
!12259 = !DILocation(line: 2978, column: 49, scope: !12257)
!12260 = !DILocation(line: 2978, column: 4, scope: !12257)
!12261 = !DILocation(line: 2979, column: 19, scope: !12257)
!12262 = !DILocation(line: 2979, column: 25, scope: !12257)
!12263 = !DILocation(line: 2979, column: 35, scope: !12257)
!12264 = !DILocation(line: 2979, column: 39, scope: !12257)
!12265 = !DILocation(line: 2979, column: 42, scope: !12257)
!12266 = !DILocation(line: 2979, column: 4, scope: !12257)
!12267 = !DILocation(line: 2980, column: 4, scope: !12257)
!12268 = !DILocation(line: 2980, column: 14, scope: !12257)
!12269 = !DILocation(line: 2980, column: 18, scope: !12257)
!12270 = !DILocation(line: 2980, column: 21, scope: !12257)
!12271 = !DILocation(line: 2980, column: 30, scope: !12257)
!12272 = !DILocation(line: 2981, column: 3, scope: !12257)
!12273 = !DILocation(line: 2982, column: 2, scope: !12251)
!12274 = !DILocation(line: 2976, column: 23, scope: !12246)
!12275 = !DILocation(line: 2976, column: 2, scope: !12246)
!12276 = distinct !{!12276, !12248, !12277}
!12277 = !DILocation(line: 2982, column: 2, scope: !12243)
!12278 = !DILocation(line: 2983, column: 19, scope: !12212)
!12279 = !DILocation(line: 2983, column: 25, scope: !12212)
!12280 = !DILocation(line: 2983, column: 2, scope: !12212)
!12281 = !DILocation(line: 2984, column: 1, scope: !12212)
!12282 = distinct !DISubprogram(name: "xhci_address_device", scope: !3, file: !3, line: 4239, type: !4965, scopeLine: 4240, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!12283 = !DILocalVariable(name: "hcd", arg: 1, scope: !12282, file: !3, line: 4239, type: !4501)
!12284 = !DILocation(line: 4239, column: 48, scope: !12282)
!12285 = !DILocalVariable(name: "udev", arg: 2, scope: !12282, file: !3, line: 4239, type: !4526)
!12286 = !DILocation(line: 4239, column: 72, scope: !12282)
!12287 = !DILocation(line: 4241, column: 27, scope: !12282)
!12288 = !DILocation(line: 4241, column: 32, scope: !12282)
!12289 = !DILocation(line: 4241, column: 9, scope: !12282)
!12290 = !DILocation(line: 4241, column: 2, scope: !12282)
!12291 = distinct !DISubprogram(name: "xhci_enable_device", scope: !3, file: !3, line: 4244, type: !4965, scopeLine: 4245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!12292 = !DILocalVariable(name: "hcd", arg: 1, scope: !12291, file: !3, line: 4244, type: !4501)
!12293 = !DILocation(line: 4244, column: 47, scope: !12291)
!12294 = !DILocalVariable(name: "udev", arg: 2, scope: !12291, file: !3, line: 4244, type: !4526)
!12295 = !DILocation(line: 4244, column: 71, scope: !12291)
!12296 = !DILocation(line: 4246, column: 27, scope: !12291)
!12297 = !DILocation(line: 4246, column: 32, scope: !12291)
!12298 = !DILocation(line: 4246, column: 9, scope: !12291)
!12299 = !DILocation(line: 4246, column: 2, scope: !12291)
!12300 = distinct !DISubprogram(name: "xhci_update_hub_device", scope: !3, file: !3, line: 5022, type: !4991, scopeLine: 5024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!12301 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !12302)
!12302 = distinct !DILocation(line: 5103, column: 2, scope: !12300)
!12303 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !12302)
!12304 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !12305)
!12305 = distinct !DILocation(line: 5061, column: 3, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12307, file: !3, line: 5058, column: 58)
!12307 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 5057, column: 6)
!12308 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !12305)
!12309 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !12310)
!12310 = distinct !DILocation(line: 5056, column: 2, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12312, file: !3, line: 5056, column: 2)
!12312 = distinct !DILexicalBlock(scope: !12313, file: !3, line: 5056, column: 2)
!12313 = distinct !DILexicalBlock(scope: !12314, file: !3, line: 5056, column: 2)
!12314 = distinct !DILexicalBlock(scope: !12315, file: !3, line: 5056, column: 2)
!12315 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 5056, column: 2)
!12316 = !DILocalVariable(name: "hcd", arg: 1, scope: !12300, file: !3, line: 5022, type: !4501)
!12317 = !DILocation(line: 5022, column: 51, scope: !12300)
!12318 = !DILocalVariable(name: "hdev", arg: 2, scope: !12300, file: !3, line: 5022, type: !4526)
!12319 = !DILocation(line: 5022, column: 75, scope: !12300)
!12320 = !DILocalVariable(name: "tt", arg: 3, scope: !12300, file: !3, line: 5023, type: !4537)
!12321 = !DILocation(line: 5023, column: 19, scope: !12300)
!12322 = !DILocalVariable(name: "mem_flags", arg: 4, scope: !12300, file: !3, line: 5023, type: !875)
!12323 = !DILocation(line: 5023, column: 29, scope: !12300)
!12324 = !DILocalVariable(name: "xhci", scope: !12300, file: !3, line: 5025, type: !4497)
!12325 = !DILocation(line: 5025, column: 19, scope: !12300)
!12326 = !DILocation(line: 5025, column: 38, scope: !12300)
!12327 = !DILocation(line: 5025, column: 26, scope: !12300)
!12328 = !DILocalVariable(name: "vdev", scope: !12300, file: !3, line: 5026, type: !5290)
!12329 = !DILocation(line: 5026, column: 27, scope: !12300)
!12330 = !DILocalVariable(name: "config_cmd", scope: !12300, file: !3, line: 5027, type: !5247)
!12331 = !DILocation(line: 5027, column: 23, scope: !12300)
!12332 = !DILocalVariable(name: "ctrl_ctx", scope: !12300, file: !3, line: 5028, type: !8108)
!12333 = !DILocation(line: 5028, column: 33, scope: !12300)
!12334 = !DILocalVariable(name: "slot_ctx", scope: !12300, file: !3, line: 5029, type: !8442)
!12335 = !DILocation(line: 5029, column: 24, scope: !12300)
!12336 = !DILocalVariable(name: "flags", scope: !12300, file: !3, line: 5030, type: !248)
!12337 = !DILocation(line: 5030, column: 16, scope: !12300)
!12338 = !DILocalVariable(name: "think_time", scope: !12300, file: !3, line: 5031, type: !7)
!12339 = !DILocation(line: 5031, column: 11, scope: !12300)
!12340 = !DILocalVariable(name: "ret", scope: !12300, file: !3, line: 5032, type: !265)
!12341 = !DILocation(line: 5032, column: 6, scope: !12300)
!12342 = !DILocation(line: 5035, column: 7, scope: !12343)
!12343 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 5035, column: 6)
!12344 = !DILocation(line: 5035, column: 13, scope: !12343)
!12345 = !DILocation(line: 5035, column: 6, scope: !12300)
!12346 = !DILocation(line: 5036, column: 3, scope: !12343)
!12347 = !DILocation(line: 5038, column: 9, scope: !12300)
!12348 = !DILocation(line: 5038, column: 15, scope: !12300)
!12349 = !DILocation(line: 5038, column: 20, scope: !12300)
!12350 = !DILocation(line: 5038, column: 26, scope: !12300)
!12351 = !DILocation(line: 5038, column: 7, scope: !12300)
!12352 = !DILocation(line: 5039, column: 7, scope: !12353)
!12353 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 5039, column: 6)
!12354 = !DILocation(line: 5039, column: 6, scope: !12300)
!12355 = !DILocation(line: 5040, column: 3, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12353, file: !3, line: 5039, column: 13)
!12357 = !DILocation(line: 5041, column: 3, scope: !12356)
!12358 = !DILocation(line: 5044, column: 43, scope: !12300)
!12359 = !DILocation(line: 5044, column: 55, scope: !12300)
!12360 = !DILocation(line: 5044, column: 15, scope: !12300)
!12361 = !DILocation(line: 5044, column: 13, scope: !12300)
!12362 = !DILocation(line: 5045, column: 7, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 5045, column: 6)
!12364 = !DILocation(line: 5045, column: 6, scope: !12300)
!12365 = !DILocation(line: 5046, column: 3, scope: !12363)
!12366 = !DILocation(line: 5048, column: 40, scope: !12300)
!12367 = !DILocation(line: 5048, column: 52, scope: !12300)
!12368 = !DILocation(line: 5048, column: 13, scope: !12300)
!12369 = !DILocation(line: 5048, column: 11, scope: !12300)
!12370 = !DILocation(line: 5049, column: 7, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 5049, column: 6)
!12372 = !DILocation(line: 5049, column: 6, scope: !12300)
!12373 = !DILocation(line: 5050, column: 3, scope: !12374)
!12374 = distinct !DILexicalBlock(scope: !12371, file: !3, line: 5049, column: 17)
!12375 = !DILocation(line: 5052, column: 21, scope: !12374)
!12376 = !DILocation(line: 5052, column: 27, scope: !12374)
!12377 = !DILocation(line: 5052, column: 3, scope: !12374)
!12378 = !DILocation(line: 5053, column: 3, scope: !12374)
!12379 = !DILocation(line: 5056, column: 2, scope: !12300)
!12380 = !DILocation(line: 5056, column: 2, scope: !12315)
!12381 = !DILocalVariable(name: "__dummy", scope: !12382, file: !3, line: 5056, type: !248)
!12382 = distinct !DILexicalBlock(scope: !12314, file: !3, line: 5056, column: 2)
!12383 = !DILocation(line: 5056, column: 2, scope: !12382)
!12384 = !DILocalVariable(name: "__dummy2", scope: !12382, file: !3, line: 5056, type: !248)
!12385 = !DILocation(line: 5056, column: 2, scope: !12314)
!12386 = !DILocation(line: 5056, column: 2, scope: !12313)
!12387 = !DILocation(line: 5056, column: 2, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12313, file: !3, line: 5056, column: 2)
!12389 = !DILocalVariable(name: "__dummy", scope: !12390, file: !3, line: 5056, type: !248)
!12390 = distinct !DILexicalBlock(scope: !12391, file: !3, line: 5056, column: 2)
!12391 = distinct !DILexicalBlock(scope: !12388, file: !3, line: 5056, column: 2)
!12392 = !DILocation(line: 5056, column: 2, scope: !12390)
!12393 = !DILocalVariable(name: "__dummy2", scope: !12390, file: !3, line: 5056, type: !248)
!12394 = !DILocation(line: 5056, column: 2, scope: !12391)
!12395 = !DILocation(line: 5056, column: 2, scope: !12312)
!12396 = !{i32 -2140597026}
!12397 = !DILocation(line: 5056, column: 2, scope: !12311)
!12398 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !12310)
!12399 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !12310)
!12400 = !DILocation(line: 5057, column: 6, scope: !12307)
!12401 = !DILocation(line: 5057, column: 12, scope: !12307)
!12402 = !DILocation(line: 5057, column: 18, scope: !12307)
!12403 = !DILocation(line: 5057, column: 36, scope: !12307)
!12404 = !DILocation(line: 5058, column: 23, scope: !12307)
!12405 = !DILocation(line: 5058, column: 29, scope: !12307)
!12406 = !DILocation(line: 5058, column: 35, scope: !12307)
!12407 = !DILocation(line: 5058, column: 41, scope: !12307)
!12408 = !DILocation(line: 5058, column: 4, scope: !12307)
!12409 = !DILocation(line: 5057, column: 6, scope: !12300)
!12410 = !DILocation(line: 5060, column: 21, scope: !12306)
!12411 = !DILocation(line: 5060, column: 27, scope: !12306)
!12412 = !DILocation(line: 5060, column: 3, scope: !12306)
!12413 = !DILocation(line: 5061, column: 27, scope: !12306)
!12414 = !DILocation(line: 5061, column: 33, scope: !12306)
!12415 = !DILocation(line: 5061, column: 39, scope: !12306)
!12416 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !12305)
!12417 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !12305)
!12418 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !12305)
!12419 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !12305)
!12420 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !12305)
!12421 = !DILocation(line: 5062, column: 3, scope: !12306)
!12422 = !DILocation(line: 5065, column: 17, scope: !12300)
!12423 = !DILocation(line: 5065, column: 23, scope: !12300)
!12424 = !DILocation(line: 5065, column: 35, scope: !12300)
!12425 = !DILocation(line: 5065, column: 43, scope: !12300)
!12426 = !DILocation(line: 5065, column: 49, scope: !12300)
!12427 = !DILocation(line: 5065, column: 2, scope: !12300)
!12428 = !DILocation(line: 5066, column: 2, scope: !12300)
!12429 = !DILocation(line: 5066, column: 12, scope: !12300)
!12430 = !DILocation(line: 5066, column: 22, scope: !12300)
!12431 = !DILocation(line: 5067, column: 31, scope: !12300)
!12432 = !DILocation(line: 5067, column: 37, scope: !12300)
!12433 = !DILocation(line: 5067, column: 49, scope: !12300)
!12434 = !DILocation(line: 5067, column: 13, scope: !12300)
!12435 = !DILocation(line: 5067, column: 11, scope: !12300)
!12436 = !DILocation(line: 5068, column: 2, scope: !12300)
!12437 = !DILocation(line: 5068, column: 12, scope: !12300)
!12438 = !DILocation(line: 5068, column: 21, scope: !12300)
!12439 = !DILocation(line: 5074, column: 6, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 5074, column: 6)
!12441 = !DILocation(line: 5074, column: 10, scope: !12440)
!12442 = !DILocation(line: 5074, column: 6, scope: !12300)
!12443 = !DILocation(line: 5075, column: 3, scope: !12440)
!12444 = !DILocation(line: 5075, column: 13, scope: !12440)
!12445 = !DILocation(line: 5075, column: 22, scope: !12440)
!12446 = !DILocation(line: 5076, column: 11, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12440, file: !3, line: 5076, column: 11)
!12448 = !DILocation(line: 5076, column: 17, scope: !12447)
!12449 = !DILocation(line: 5076, column: 23, scope: !12447)
!12450 = !DILocation(line: 5076, column: 11, scope: !12440)
!12451 = !DILocation(line: 5077, column: 3, scope: !12447)
!12452 = !DILocation(line: 5077, column: 13, scope: !12447)
!12453 = !DILocation(line: 5077, column: 22, scope: !12447)
!12454 = !DILocation(line: 5079, column: 6, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 5079, column: 6)
!12456 = !DILocation(line: 5079, column: 12, scope: !12455)
!12457 = !DILocation(line: 5079, column: 24, scope: !12455)
!12458 = !DILocation(line: 5079, column: 6, scope: !12300)
!12459 = !DILocation(line: 5083, column: 26, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12455, file: !3, line: 5079, column: 32)
!12461 = !DILocation(line: 5083, column: 3, scope: !12460)
!12462 = !DILocation(line: 5083, column: 13, scope: !12460)
!12463 = !DILocation(line: 5083, column: 23, scope: !12460)
!12464 = !DILocation(line: 5091, column: 16, scope: !12460)
!12465 = !DILocation(line: 5091, column: 20, scope: !12460)
!12466 = !DILocation(line: 5091, column: 14, scope: !12460)
!12467 = !DILocation(line: 5092, column: 7, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12460, file: !3, line: 5092, column: 7)
!12469 = !DILocation(line: 5092, column: 18, scope: !12468)
!12470 = !DILocation(line: 5092, column: 7, scope: !12460)
!12471 = !DILocation(line: 5093, column: 18, scope: !12468)
!12472 = !DILocation(line: 5093, column: 29, scope: !12468)
!12473 = !DILocation(line: 5093, column: 36, scope: !12468)
!12474 = !DILocation(line: 5093, column: 15, scope: !12468)
!12475 = !DILocation(line: 5093, column: 4, scope: !12468)
!12476 = !DILocation(line: 5094, column: 7, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12460, file: !3, line: 5094, column: 7)
!12478 = !DILocation(line: 5094, column: 13, scope: !12477)
!12479 = !DILocation(line: 5094, column: 25, scope: !12477)
!12480 = !DILocation(line: 5094, column: 33, scope: !12477)
!12481 = !DILocation(line: 5094, column: 36, scope: !12477)
!12482 = !DILocation(line: 5094, column: 42, scope: !12477)
!12483 = !DILocation(line: 5094, column: 48, scope: !12477)
!12484 = !DILocation(line: 5094, column: 7, scope: !12460)
!12485 = !DILocation(line: 5096, column: 5, scope: !12477)
!12486 = !DILocation(line: 5095, column: 4, scope: !12477)
!12487 = !DILocation(line: 5095, column: 14, scope: !12477)
!12488 = !DILocation(line: 5095, column: 22, scope: !12477)
!12489 = !DILocation(line: 5097, column: 2, scope: !12460)
!12490 = !DILocation(line: 5102, column: 2, scope: !12300)
!12491 = !DILocation(line: 5102, column: 12, scope: !12300)
!12492 = !DILocation(line: 5102, column: 22, scope: !12300)
!12493 = !DILocation(line: 5103, column: 26, scope: !12300)
!12494 = !DILocation(line: 5103, column: 32, scope: !12300)
!12495 = !DILocation(line: 5103, column: 38, scope: !12300)
!12496 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !12302)
!12497 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !12302)
!12498 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !12302)
!12499 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !12302)
!12500 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !12302)
!12501 = !DILocation(line: 5112, column: 6, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12300, file: !3, line: 5112, column: 6)
!12503 = !DILocation(line: 5112, column: 12, scope: !12502)
!12504 = !DILocation(line: 5112, column: 24, scope: !12502)
!12505 = !DILocation(line: 5112, column: 6, scope: !12300)
!12506 = !DILocation(line: 5113, column: 33, scope: !12502)
!12507 = !DILocation(line: 5113, column: 39, scope: !12502)
!12508 = !DILocation(line: 5113, column: 45, scope: !12502)
!12509 = !DILocation(line: 5113, column: 9, scope: !12502)
!12510 = !DILocation(line: 5113, column: 7, scope: !12502)
!12511 = !DILocation(line: 5113, column: 3, scope: !12502)
!12512 = !DILocation(line: 5116, column: 33, scope: !12502)
!12513 = !DILocation(line: 5116, column: 39, scope: !12502)
!12514 = !DILocation(line: 5116, column: 45, scope: !12502)
!12515 = !DILocation(line: 5116, column: 9, scope: !12502)
!12516 = !DILocation(line: 5116, column: 7, scope: !12502)
!12517 = !DILocation(line: 5119, column: 20, scope: !12300)
!12518 = !DILocation(line: 5119, column: 26, scope: !12300)
!12519 = !DILocation(line: 5119, column: 2, scope: !12300)
!12520 = !DILocation(line: 5120, column: 9, scope: !12300)
!12521 = !DILocation(line: 5120, column: 2, scope: !12300)
!12522 = !DILocation(line: 5121, column: 1, scope: !12300)
!12523 = distinct !DISubprogram(name: "xhci_discover_or_reset_device", scope: !3, file: !3, line: 3702, type: !4965, scopeLine: 3704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!12524 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !12525)
!12525 = distinct !DILocation(line: 3821, column: 3, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12527, file: !3, line: 3817, column: 44)
!12527 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 3817, column: 6)
!12528 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !12525)
!12529 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !12530)
!12530 = distinct !DILocation(line: 3818, column: 3, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12532, file: !3, line: 3818, column: 3)
!12532 = distinct !DILexicalBlock(scope: !12533, file: !3, line: 3818, column: 3)
!12533 = distinct !DILexicalBlock(scope: !12534, file: !3, line: 3818, column: 3)
!12534 = distinct !DILexicalBlock(scope: !12535, file: !3, line: 3818, column: 3)
!12535 = distinct !DILexicalBlock(scope: !12526, file: !3, line: 3818, column: 3)
!12536 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !12537)
!12537 = distinct !DILocation(line: 3779, column: 2, scope: !12523)
!12538 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !12537)
!12539 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !12540)
!12540 = distinct !DILocation(line: 3775, column: 3, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12542, file: !3, line: 3773, column: 11)
!12542 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 3773, column: 6)
!12543 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !12540)
!12544 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !12545)
!12545 = distinct !DILocation(line: 3770, column: 2, scope: !12546)
!12546 = distinct !DILexicalBlock(scope: !12547, file: !3, line: 3770, column: 2)
!12547 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 3770, column: 2)
!12548 = distinct !DILexicalBlock(scope: !12549, file: !3, line: 3770, column: 2)
!12549 = distinct !DILexicalBlock(scope: !12550, file: !3, line: 3770, column: 2)
!12550 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 3770, column: 2)
!12551 = !DILocalVariable(name: "hcd", arg: 1, scope: !12523, file: !3, line: 3702, type: !4501)
!12552 = !DILocation(line: 3702, column: 58, scope: !12523)
!12553 = !DILocalVariable(name: "udev", arg: 2, scope: !12523, file: !3, line: 3703, type: !4526)
!12554 = !DILocation(line: 3703, column: 22, scope: !12523)
!12555 = !DILocalVariable(name: "ret", scope: !12523, file: !3, line: 3705, type: !265)
!12556 = !DILocation(line: 3705, column: 6, scope: !12523)
!12557 = !DILocalVariable(name: "i", scope: !12523, file: !3, line: 3705, type: !265)
!12558 = !DILocation(line: 3705, column: 11, scope: !12523)
!12559 = !DILocalVariable(name: "flags", scope: !12523, file: !3, line: 3706, type: !248)
!12560 = !DILocation(line: 3706, column: 16, scope: !12523)
!12561 = !DILocalVariable(name: "xhci", scope: !12523, file: !3, line: 3707, type: !4497)
!12562 = !DILocation(line: 3707, column: 19, scope: !12523)
!12563 = !DILocalVariable(name: "slot_id", scope: !12523, file: !3, line: 3708, type: !7)
!12564 = !DILocation(line: 3708, column: 15, scope: !12523)
!12565 = !DILocalVariable(name: "virt_dev", scope: !12523, file: !3, line: 3709, type: !5290)
!12566 = !DILocation(line: 3709, column: 27, scope: !12523)
!12567 = !DILocalVariable(name: "reset_device_cmd", scope: !12523, file: !3, line: 3710, type: !5247)
!12568 = !DILocation(line: 3710, column: 23, scope: !12523)
!12569 = !DILocalVariable(name: "slot_ctx", scope: !12523, file: !3, line: 3711, type: !8442)
!12570 = !DILocation(line: 3711, column: 24, scope: !12523)
!12571 = !DILocalVariable(name: "old_active_eps", scope: !12523, file: !3, line: 3712, type: !265)
!12572 = !DILocation(line: 3712, column: 6, scope: !12523)
!12573 = !DILocation(line: 3714, column: 24, scope: !12523)
!12574 = !DILocation(line: 3714, column: 29, scope: !12523)
!12575 = !DILocation(line: 3714, column: 8, scope: !12523)
!12576 = !DILocation(line: 3714, column: 6, scope: !12523)
!12577 = !DILocation(line: 3715, column: 6, scope: !12578)
!12578 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 3715, column: 6)
!12579 = !DILocation(line: 3715, column: 10, scope: !12578)
!12580 = !DILocation(line: 3715, column: 6, scope: !12523)
!12581 = !DILocation(line: 3716, column: 10, scope: !12578)
!12582 = !DILocation(line: 3716, column: 3, scope: !12578)
!12583 = !DILocation(line: 3717, column: 21, scope: !12523)
!12584 = !DILocation(line: 3717, column: 9, scope: !12523)
!12585 = !DILocation(line: 3717, column: 7, scope: !12523)
!12586 = !DILocation(line: 3718, column: 12, scope: !12523)
!12587 = !DILocation(line: 3718, column: 18, scope: !12523)
!12588 = !DILocation(line: 3718, column: 10, scope: !12523)
!12589 = !DILocation(line: 3719, column: 13, scope: !12523)
!12590 = !DILocation(line: 3719, column: 19, scope: !12523)
!12591 = !DILocation(line: 3719, column: 24, scope: !12523)
!12592 = !DILocation(line: 3719, column: 11, scope: !12523)
!12593 = !DILocation(line: 3720, column: 7, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 3720, column: 6)
!12595 = !DILocation(line: 3720, column: 6, scope: !12523)
!12596 = !DILocation(line: 3723, column: 24, scope: !12597)
!12597 = distinct !DILexicalBlock(scope: !12594, file: !3, line: 3720, column: 17)
!12598 = !DILocation(line: 3723, column: 29, scope: !12597)
!12599 = !DILocation(line: 3723, column: 9, scope: !12597)
!12600 = !DILocation(line: 3723, column: 7, scope: !12597)
!12601 = !DILocation(line: 3724, column: 7, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 3724, column: 7)
!12603 = !DILocation(line: 3724, column: 11, scope: !12602)
!12604 = !DILocation(line: 3724, column: 7, scope: !12597)
!12605 = !DILocation(line: 3725, column: 4, scope: !12602)
!12606 = !DILocation(line: 3727, column: 4, scope: !12602)
!12607 = !DILocation(line: 3730, column: 6, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 3730, column: 6)
!12609 = !DILocation(line: 3730, column: 16, scope: !12608)
!12610 = !DILocation(line: 3730, column: 6, scope: !12523)
!12611 = !DILocation(line: 3731, column: 20, scope: !12608)
!12612 = !DILocation(line: 3731, column: 30, scope: !12608)
!12613 = !DILocation(line: 3731, column: 39, scope: !12608)
!12614 = !DILocation(line: 3731, column: 18, scope: !12608)
!12615 = !DILocation(line: 3731, column: 3, scope: !12608)
!12616 = !DILocation(line: 3733, column: 6, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 3733, column: 6)
!12618 = !DILocation(line: 3733, column: 16, scope: !12617)
!12619 = !DILocation(line: 3733, column: 24, scope: !12617)
!12620 = !DILocation(line: 3733, column: 21, scope: !12617)
!12621 = !DILocation(line: 3733, column: 6, scope: !12523)
!12622 = !DILocation(line: 3741, column: 24, scope: !12623)
!12623 = distinct !DILexicalBlock(scope: !12617, file: !3, line: 3733, column: 30)
!12624 = !DILocation(line: 3741, column: 29, scope: !12623)
!12625 = !DILocation(line: 3741, column: 9, scope: !12623)
!12626 = !DILocation(line: 3741, column: 7, scope: !12623)
!12627 = !DILocation(line: 3742, column: 7, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 3742, column: 7)
!12629 = !DILocation(line: 3742, column: 11, scope: !12628)
!12630 = !DILocation(line: 3742, column: 7, scope: !12623)
!12631 = !DILocation(line: 3743, column: 4, scope: !12628)
!12632 = !DILocation(line: 3745, column: 4, scope: !12628)
!12633 = !DILocation(line: 3749, column: 31, scope: !12523)
!12634 = !DILocation(line: 3749, column: 37, scope: !12523)
!12635 = !DILocation(line: 3749, column: 47, scope: !12523)
!12636 = !DILocation(line: 3749, column: 13, scope: !12523)
!12637 = !DILocation(line: 3749, column: 11, scope: !12523)
!12638 = !DILocation(line: 3750, column: 6, scope: !12639)
!12639 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 3750, column: 6)
!12640 = !DILocation(line: 3750, column: 55, scope: !12639)
!12641 = !DILocation(line: 3750, column: 6, scope: !12523)
!12642 = !DILocation(line: 3752, column: 3, scope: !12639)
!12643 = !DILocation(line: 3754, column: 38, scope: !12523)
!12644 = !DILocation(line: 3754, column: 2, scope: !12523)
!12645 = !DILocation(line: 3763, column: 40, scope: !12523)
!12646 = !DILocation(line: 3763, column: 21, scope: !12523)
!12647 = !DILocation(line: 3763, column: 19, scope: !12523)
!12648 = !DILocation(line: 3764, column: 7, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 3764, column: 6)
!12650 = !DILocation(line: 3764, column: 6, scope: !12523)
!12651 = !DILocation(line: 3766, column: 3, scope: !12652)
!12652 = distinct !DILexicalBlock(scope: !12649, file: !3, line: 3764, column: 25)
!12653 = !DILocation(line: 3770, column: 2, scope: !12523)
!12654 = !DILocation(line: 3770, column: 2, scope: !12550)
!12655 = !DILocalVariable(name: "__dummy", scope: !12656, file: !3, line: 3770, type: !248)
!12656 = distinct !DILexicalBlock(scope: !12549, file: !3, line: 3770, column: 2)
!12657 = !DILocation(line: 3770, column: 2, scope: !12656)
!12658 = !DILocalVariable(name: "__dummy2", scope: !12656, file: !3, line: 3770, type: !248)
!12659 = !DILocation(line: 3770, column: 2, scope: !12549)
!12660 = !DILocation(line: 3770, column: 2, scope: !12548)
!12661 = !DILocation(line: 3770, column: 2, scope: !12662)
!12662 = distinct !DILexicalBlock(scope: !12548, file: !3, line: 3770, column: 2)
!12663 = !DILocalVariable(name: "__dummy", scope: !12664, file: !3, line: 3770, type: !248)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !3, line: 3770, column: 2)
!12665 = distinct !DILexicalBlock(scope: !12662, file: !3, line: 3770, column: 2)
!12666 = !DILocation(line: 3770, column: 2, scope: !12664)
!12667 = !DILocalVariable(name: "__dummy2", scope: !12664, file: !3, line: 3770, type: !248)
!12668 = !DILocation(line: 3770, column: 2, scope: !12665)
!12669 = !DILocation(line: 3770, column: 2, scope: !12547)
!12670 = !{i32 -2140627558}
!12671 = !DILocation(line: 3770, column: 2, scope: !12546)
!12672 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !12545)
!12673 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !12545)
!12674 = !DILocation(line: 3772, column: 32, scope: !12523)
!12675 = !DILocation(line: 3772, column: 38, scope: !12523)
!12676 = !DILocation(line: 3772, column: 56, scope: !12523)
!12677 = !DILocation(line: 3772, column: 8, scope: !12523)
!12678 = !DILocation(line: 3772, column: 6, scope: !12523)
!12679 = !DILocation(line: 3773, column: 6, scope: !12542)
!12680 = !DILocation(line: 3773, column: 6, scope: !12523)
!12681 = !DILocation(line: 3775, column: 27, scope: !12541)
!12682 = !DILocation(line: 3775, column: 33, scope: !12541)
!12683 = !DILocation(line: 3775, column: 39, scope: !12541)
!12684 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !12540)
!12685 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !12540)
!12686 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !12540)
!12687 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !12540)
!12688 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !12540)
!12689 = !DILocation(line: 3776, column: 3, scope: !12541)
!12690 = !DILocation(line: 3778, column: 19, scope: !12523)
!12691 = !DILocation(line: 3778, column: 2, scope: !12523)
!12692 = !DILocation(line: 3779, column: 26, scope: !12523)
!12693 = !DILocation(line: 3779, column: 32, scope: !12523)
!12694 = !DILocation(line: 3779, column: 38, scope: !12523)
!12695 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !12537)
!12696 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !12537)
!12697 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !12537)
!12698 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !12537)
!12699 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !12537)
!12700 = !DILocation(line: 3782, column: 22, scope: !12523)
!12701 = !DILocation(line: 3782, column: 40, scope: !12523)
!12702 = !DILocation(line: 3782, column: 2, scope: !12523)
!12703 = !DILocation(line: 3788, column: 8, scope: !12523)
!12704 = !DILocation(line: 3788, column: 26, scope: !12523)
!12705 = !DILocation(line: 3788, column: 6, scope: !12523)
!12706 = !DILocation(line: 3789, column: 10, scope: !12523)
!12707 = !DILocation(line: 3789, column: 2, scope: !12523)
!12708 = !DILocation(line: 3792, column: 3, scope: !12709)
!12709 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 3789, column: 15)
!12710 = !DILocation(line: 3793, column: 7, scope: !12709)
!12711 = !DILocation(line: 3794, column: 3, scope: !12709)
!12712 = !DILocation(line: 3802, column: 7, scope: !12709)
!12713 = !DILocation(line: 3803, column: 3, scope: !12709)
!12714 = !DILocation(line: 3806, column: 3, scope: !12709)
!12715 = !DILocation(line: 3808, column: 32, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12709, file: !3, line: 3808, column: 7)
!12717 = !DILocation(line: 3808, column: 38, scope: !12716)
!12718 = !DILocation(line: 3808, column: 7, scope: !12716)
!12719 = !DILocation(line: 3808, column: 7, scope: !12709)
!12720 = !DILocation(line: 3809, column: 4, scope: !12716)
!12721 = !DILocation(line: 3810, column: 3, scope: !12709)
!12722 = !DILocation(line: 3812, column: 7, scope: !12709)
!12723 = !DILocation(line: 3813, column: 3, scope: !12709)
!12724 = !DILocation(line: 3817, column: 7, scope: !12527)
!12725 = !DILocation(line: 3817, column: 13, scope: !12527)
!12726 = !DILocation(line: 3817, column: 20, scope: !12527)
!12727 = !DILocation(line: 3817, column: 6, scope: !12523)
!12728 = !DILocation(line: 3818, column: 3, scope: !12526)
!12729 = !DILocation(line: 3818, column: 3, scope: !12535)
!12730 = !DILocalVariable(name: "__dummy", scope: !12731, file: !3, line: 3818, type: !248)
!12731 = distinct !DILexicalBlock(scope: !12534, file: !3, line: 3818, column: 3)
!12732 = !DILocation(line: 3818, column: 3, scope: !12731)
!12733 = !DILocalVariable(name: "__dummy2", scope: !12731, file: !3, line: 3818, type: !248)
!12734 = !DILocation(line: 3818, column: 3, scope: !12534)
!12735 = !DILocation(line: 3818, column: 3, scope: !12533)
!12736 = !DILocation(line: 3818, column: 3, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12533, file: !3, line: 3818, column: 3)
!12738 = !DILocalVariable(name: "__dummy", scope: !12739, file: !3, line: 3818, type: !248)
!12739 = distinct !DILexicalBlock(scope: !12740, file: !3, line: 3818, column: 3)
!12740 = distinct !DILexicalBlock(scope: !12737, file: !3, line: 3818, column: 3)
!12741 = !DILocation(line: 3818, column: 3, scope: !12739)
!12742 = !DILocalVariable(name: "__dummy2", scope: !12739, file: !3, line: 3818, type: !248)
!12743 = !DILocation(line: 3818, column: 3, scope: !12740)
!12744 = !DILocation(line: 3818, column: 3, scope: !12532)
!12745 = !{i32 -2140624308}
!12746 = !DILocation(line: 3818, column: 3, scope: !12531)
!12747 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !12530)
!12748 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !12530)
!12749 = !DILocation(line: 3820, column: 39, scope: !12526)
!12750 = !DILocation(line: 3820, column: 45, scope: !12526)
!12751 = !DILocation(line: 3820, column: 3, scope: !12526)
!12752 = !DILocation(line: 3821, column: 27, scope: !12526)
!12753 = !DILocation(line: 3821, column: 33, scope: !12526)
!12754 = !DILocation(line: 3821, column: 39, scope: !12526)
!12755 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !12525)
!12756 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !12525)
!12757 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !12525)
!12758 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !12525)
!12759 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !12525)
!12760 = !DILocation(line: 3822, column: 2, scope: !12526)
!12761 = !DILocation(line: 3825, column: 9, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 3825, column: 2)
!12763 = !DILocation(line: 3825, column: 7, scope: !12762)
!12764 = !DILocation(line: 3825, column: 14, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12762, file: !3, line: 3825, column: 2)
!12766 = !DILocation(line: 3825, column: 16, scope: !12765)
!12767 = !DILocation(line: 3825, column: 2, scope: !12762)
!12768 = !DILocalVariable(name: "ep", scope: !12769, file: !3, line: 3826, type: !5464)
!12769 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 3825, column: 27)
!12770 = !DILocation(line: 3826, column: 24, scope: !12769)
!12771 = !DILocation(line: 3826, column: 30, scope: !12769)
!12772 = !DILocation(line: 3826, column: 40, scope: !12769)
!12773 = !DILocation(line: 3826, column: 44, scope: !12769)
!12774 = !DILocation(line: 3828, column: 7, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12769, file: !3, line: 3828, column: 7)
!12776 = !DILocation(line: 3828, column: 11, scope: !12775)
!12777 = !DILocation(line: 3828, column: 20, scope: !12775)
!12778 = !DILocation(line: 3828, column: 7, scope: !12769)
!12779 = !DILocation(line: 3829, column: 4, scope: !12780)
!12780 = distinct !DILexicalBlock(scope: !12775, file: !3, line: 3828, column: 38)
!12781 = !DILocation(line: 3831, column: 26, scope: !12780)
!12782 = !DILocation(line: 3831, column: 32, scope: !12780)
!12783 = !DILocation(line: 3831, column: 36, scope: !12780)
!12784 = !DILocation(line: 3831, column: 4, scope: !12780)
!12785 = !DILocation(line: 3832, column: 4, scope: !12780)
!12786 = !DILocation(line: 3832, column: 8, scope: !12780)
!12787 = !DILocation(line: 3832, column: 20, scope: !12780)
!12788 = !DILocation(line: 3833, column: 4, scope: !12780)
!12789 = !DILocation(line: 3833, column: 8, scope: !12780)
!12790 = !DILocation(line: 3833, column: 17, scope: !12780)
!12791 = !DILocation(line: 3834, column: 3, scope: !12780)
!12792 = !DILocation(line: 3836, column: 7, scope: !12793)
!12793 = distinct !DILexicalBlock(scope: !12769, file: !3, line: 3836, column: 7)
!12794 = !DILocation(line: 3836, column: 11, scope: !12793)
!12795 = !DILocation(line: 3836, column: 7, scope: !12769)
!12796 = !DILocation(line: 3837, column: 33, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12793, file: !3, line: 3836, column: 17)
!12798 = !DILocation(line: 3837, column: 39, scope: !12797)
!12799 = !DILocation(line: 3837, column: 49, scope: !12797)
!12800 = !DILocation(line: 3837, column: 4, scope: !12797)
!12801 = !DILocation(line: 3838, column: 28, scope: !12797)
!12802 = !DILocation(line: 3838, column: 34, scope: !12797)
!12803 = !DILocation(line: 3838, column: 44, scope: !12797)
!12804 = !DILocation(line: 3838, column: 4, scope: !12797)
!12805 = !DILocation(line: 3839, column: 3, scope: !12797)
!12806 = !DILocation(line: 3840, column: 20, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12769, file: !3, line: 3840, column: 7)
!12808 = !DILocation(line: 3840, column: 30, scope: !12807)
!12809 = !DILocation(line: 3840, column: 34, scope: !12807)
!12810 = !DILocation(line: 3840, column: 37, scope: !12807)
!12811 = !DILocation(line: 3840, column: 8, scope: !12807)
!12812 = !DILocation(line: 3840, column: 7, scope: !12769)
!12813 = !DILocation(line: 3841, column: 37, scope: !12807)
!12814 = !DILocation(line: 3842, column: 7, scope: !12807)
!12815 = !DILocation(line: 3842, column: 17, scope: !12807)
!12816 = !DILocation(line: 3842, column: 21, scope: !12807)
!12817 = !DILocation(line: 3842, column: 24, scope: !12807)
!12818 = !DILocation(line: 3843, column: 6, scope: !12807)
!12819 = !DILocation(line: 3843, column: 16, scope: !12807)
!12820 = !DILocation(line: 3844, column: 6, scope: !12807)
!12821 = !DILocation(line: 3845, column: 7, scope: !12807)
!12822 = !DILocation(line: 3845, column: 17, scope: !12807)
!12823 = !DILocation(line: 3845, column: 21, scope: !12807)
!12824 = !DILocation(line: 3846, column: 6, scope: !12807)
!12825 = !DILocation(line: 3846, column: 16, scope: !12807)
!12826 = !DILocation(line: 3841, column: 4, scope: !12807)
!12827 = !DILocation(line: 3847, column: 32, scope: !12769)
!12828 = !DILocation(line: 3847, column: 42, scope: !12769)
!12829 = !DILocation(line: 3847, column: 46, scope: !12769)
!12830 = !DILocation(line: 3847, column: 49, scope: !12769)
!12831 = !DILocation(line: 3847, column: 3, scope: !12769)
!12832 = !DILocation(line: 3848, column: 2, scope: !12769)
!12833 = !DILocation(line: 3825, column: 23, scope: !12765)
!12834 = !DILocation(line: 3825, column: 2, scope: !12765)
!12835 = distinct !{!12835, !12767, !12836}
!12836 = !DILocation(line: 3848, column: 2, scope: !12762)
!12837 = !DILocation(line: 3850, column: 28, scope: !12523)
!12838 = !DILocation(line: 3850, column: 34, scope: !12523)
!12839 = !DILocation(line: 3850, column: 44, scope: !12523)
!12840 = !DILocation(line: 3850, column: 2, scope: !12523)
!12841 = !DILocation(line: 3851, column: 2, scope: !12523)
!12842 = !DILocation(line: 3851, column: 12, scope: !12523)
!12843 = !DILocation(line: 3851, column: 18, scope: !12523)
!12844 = !DILocation(line: 3852, column: 6, scope: !12523)
!12845 = !DILocation(line: 3852, column: 2, scope: !12523)
!12846 = !DILabel(scope: !12523, name: "command_cleanup", file: !3, line: 3854)
!12847 = !DILocation(line: 3854, column: 1, scope: !12523)
!12848 = !DILocation(line: 3855, column: 20, scope: !12523)
!12849 = !DILocation(line: 3855, column: 26, scope: !12523)
!12850 = !DILocation(line: 3855, column: 2, scope: !12523)
!12851 = !DILocation(line: 3856, column: 9, scope: !12523)
!12852 = !DILocation(line: 3856, column: 2, scope: !12523)
!12853 = !DILocation(line: 3857, column: 1, scope: !12523)
!12854 = distinct !DISubprogram(name: "xhci_update_device", scope: !3, file: !3, line: 4519, type: !4965, scopeLine: 4520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!12855 = !DILocalVariable(name: "hcd", arg: 1, scope: !12854, file: !3, line: 4519, type: !4501)
!12856 = !DILocation(line: 4519, column: 47, scope: !12854)
!12857 = !DILocalVariable(name: "udev", arg: 2, scope: !12854, file: !3, line: 4519, type: !4526)
!12858 = !DILocation(line: 4519, column: 71, scope: !12854)
!12859 = !DILocalVariable(name: "xhci", scope: !12854, file: !3, line: 4521, type: !4497)
!12860 = !DILocation(line: 4521, column: 19, scope: !12854)
!12861 = !DILocation(line: 4521, column: 38, scope: !12854)
!12862 = !DILocation(line: 4521, column: 26, scope: !12854)
!12863 = !DILocalVariable(name: "portnum", scope: !12854, file: !3, line: 4522, type: !265)
!12864 = !DILocation(line: 4522, column: 7, scope: !12854)
!12865 = !DILocation(line: 4522, column: 17, scope: !12854)
!12866 = !DILocation(line: 4522, column: 23, scope: !12854)
!12867 = !DILocation(line: 4522, column: 31, scope: !12854)
!12868 = !DILocation(line: 4524, column: 6, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12854, file: !3, line: 4524, column: 6)
!12870 = !DILocation(line: 4524, column: 11, scope: !12869)
!12871 = !DILocation(line: 4524, column: 17, scope: !12869)
!12872 = !DILocation(line: 4524, column: 29, scope: !12869)
!12873 = !DILocation(line: 4524, column: 33, scope: !12869)
!12874 = !DILocation(line: 4524, column: 39, scope: !12869)
!12875 = !DILocation(line: 4524, column: 6, scope: !12854)
!12876 = !DILocation(line: 4525, column: 3, scope: !12869)
!12877 = !DILocation(line: 4528, column: 7, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !12854, file: !3, line: 4528, column: 6)
!12879 = !DILocation(line: 4528, column: 13, scope: !12878)
!12880 = !DILocation(line: 4528, column: 20, scope: !12878)
!12881 = !DILocation(line: 4528, column: 23, scope: !12878)
!12882 = !DILocation(line: 4528, column: 29, scope: !12878)
!12883 = !DILocation(line: 4528, column: 37, scope: !12878)
!12884 = !DILocation(line: 4528, column: 44, scope: !12878)
!12885 = !DILocation(line: 4529, column: 4, scope: !12878)
!12886 = !DILocation(line: 4529, column: 10, scope: !12878)
!12887 = !DILocation(line: 4529, column: 21, scope: !12878)
!12888 = !DILocation(line: 4529, column: 34, scope: !12878)
!12889 = !DILocation(line: 4528, column: 6, scope: !12854)
!12890 = !DILocation(line: 4530, column: 3, scope: !12878)
!12891 = !DILocation(line: 4532, column: 6, scope: !12892)
!12892 = distinct !DILexicalBlock(scope: !12854, file: !3, line: 4532, column: 6)
!12893 = !DILocation(line: 4532, column: 12, scope: !12892)
!12894 = !DILocation(line: 4532, column: 27, scope: !12892)
!12895 = !DILocation(line: 4532, column: 32, scope: !12892)
!12896 = !DILocation(line: 4534, column: 5, scope: !12892)
!12897 = !DILocation(line: 4534, column: 11, scope: !12892)
!12898 = !DILocation(line: 4533, column: 4, scope: !12892)
!12899 = !DILocation(line: 4532, column: 6, scope: !12854)
!12900 = !DILocation(line: 4535, column: 3, scope: !12901)
!12901 = distinct !DILexicalBlock(scope: !12892, file: !3, line: 4534, column: 31)
!12902 = !DILocation(line: 4535, column: 9, scope: !12901)
!12903 = !DILocation(line: 4535, column: 29, scope: !12901)
!12904 = !DILocation(line: 4536, column: 3, scope: !12901)
!12905 = !DILocation(line: 4536, column: 9, scope: !12901)
!12906 = !DILocation(line: 4536, column: 19, scope: !12901)
!12907 = !DILocation(line: 4536, column: 27, scope: !12901)
!12908 = !DILocation(line: 4537, column: 3, scope: !12901)
!12909 = !DILocation(line: 4537, column: 9, scope: !12901)
!12910 = !DILocation(line: 4537, column: 19, scope: !12901)
!12911 = !DILocation(line: 4537, column: 24, scope: !12901)
!12912 = !DILocation(line: 4538, column: 39, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12901, file: !3, line: 4538, column: 7)
!12914 = !DILocation(line: 4538, column: 45, scope: !12913)
!12915 = !DILocation(line: 4538, column: 7, scope: !12913)
!12916 = !DILocation(line: 4538, column: 7, scope: !12901)
!12917 = !DILocation(line: 4540, column: 4, scope: !12913)
!12918 = !DILocation(line: 4540, column: 10, scope: !12913)
!12919 = !DILocation(line: 4540, column: 35, scope: !12913)
!12920 = !DILocation(line: 4541, column: 2, scope: !12901)
!12921 = !DILocation(line: 4543, column: 2, scope: !12854)
!12922 = !DILocation(line: 4544, column: 1, scope: !12854)
!12923 = distinct !DISubprogram(name: "xhci_set_usb2_hardware_lpm", scope: !3, file: !3, line: 4389, type: !4997, scopeLine: 4391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!12924 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !12925)
!12925 = distinct !DILocation(line: 4481, column: 4, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12927, file: !3, line: 4480, column: 39)
!12927 = distinct !DILexicalBlock(scope: !12928, file: !3, line: 4480, column: 7)
!12928 = distinct !DILexicalBlock(scope: !12929, file: !3, line: 4475, column: 9)
!12929 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 4426, column: 6)
!12930 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !12925)
!12931 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !12932)
!12932 = distinct !DILocation(line: 4457, column: 4, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12934, file: !3, line: 4457, column: 4)
!12934 = distinct !DILexicalBlock(scope: !12935, file: !3, line: 4457, column: 4)
!12935 = distinct !DILexicalBlock(scope: !12936, file: !3, line: 4457, column: 4)
!12936 = distinct !DILexicalBlock(scope: !12937, file: !3, line: 4457, column: 4)
!12937 = distinct !DILexicalBlock(scope: !12938, file: !3, line: 4457, column: 4)
!12938 = distinct !DILexicalBlock(scope: !12939, file: !3, line: 4428, column: 39)
!12939 = distinct !DILexicalBlock(scope: !12940, file: !3, line: 4428, column: 7)
!12940 = distinct !DILexicalBlock(scope: !12929, file: !3, line: 4426, column: 14)
!12941 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !12942)
!12942 = distinct !DILocation(line: 4441, column: 4, scope: !12938)
!12943 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !12942)
!12944 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !12945)
!12945 = distinct !DILocation(line: 4492, column: 2, scope: !12923)
!12946 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !12945)
!12947 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !12948)
!12948 = distinct !DILocation(line: 4415, column: 2, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12950, file: !3, line: 4415, column: 2)
!12950 = distinct !DILexicalBlock(scope: !12951, file: !3, line: 4415, column: 2)
!12951 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 4415, column: 2)
!12952 = distinct !DILexicalBlock(scope: !12953, file: !3, line: 4415, column: 2)
!12953 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 4415, column: 2)
!12954 = !DILocalVariable(name: "hcd", arg: 1, scope: !12923, file: !3, line: 4389, type: !4501)
!12955 = !DILocation(line: 4389, column: 55, scope: !12923)
!12956 = !DILocalVariable(name: "udev", arg: 2, scope: !12923, file: !3, line: 4390, type: !4526)
!12957 = !DILocation(line: 4390, column: 23, scope: !12923)
!12958 = !DILocalVariable(name: "enable", arg: 3, scope: !12923, file: !3, line: 4390, type: !265)
!12959 = !DILocation(line: 4390, column: 33, scope: !12923)
!12960 = !DILocalVariable(name: "xhci", scope: !12923, file: !3, line: 4392, type: !4497)
!12961 = !DILocation(line: 4392, column: 19, scope: !12923)
!12962 = !DILocation(line: 4392, column: 38, scope: !12923)
!12963 = !DILocation(line: 4392, column: 26, scope: !12923)
!12964 = !DILocalVariable(name: "ports", scope: !12923, file: !3, line: 4393, type: !5412)
!12965 = !DILocation(line: 4393, column: 21, scope: !12923)
!12966 = !DILocalVariable(name: "pm_addr", scope: !12923, file: !3, line: 4394, type: !5404)
!12967 = !DILocation(line: 4394, column: 18, scope: !12923)
!12968 = !DILocalVariable(name: "hlpm_addr", scope: !12923, file: !3, line: 4394, type: !5404)
!12969 = !DILocation(line: 4394, column: 28, scope: !12923)
!12970 = !DILocalVariable(name: "pm_val", scope: !12923, file: !3, line: 4395, type: !204)
!12971 = !DILocation(line: 4395, column: 7, scope: !12923)
!12972 = !DILocalVariable(name: "hlpm_val", scope: !12923, file: !3, line: 4395, type: !204)
!12973 = !DILocation(line: 4395, column: 15, scope: !12923)
!12974 = !DILocalVariable(name: "field", scope: !12923, file: !3, line: 4395, type: !204)
!12975 = !DILocation(line: 4395, column: 25, scope: !12923)
!12976 = !DILocalVariable(name: "port_num", scope: !12923, file: !3, line: 4396, type: !7)
!12977 = !DILocation(line: 4396, column: 15, scope: !12923)
!12978 = !DILocalVariable(name: "flags", scope: !12923, file: !3, line: 4397, type: !248)
!12979 = !DILocation(line: 4397, column: 16, scope: !12923)
!12980 = !DILocalVariable(name: "hird", scope: !12923, file: !3, line: 4398, type: !265)
!12981 = !DILocation(line: 4398, column: 7, scope: !12923)
!12982 = !DILocalVariable(name: "exit_latency", scope: !12923, file: !3, line: 4398, type: !265)
!12983 = !DILocation(line: 4398, column: 13, scope: !12923)
!12984 = !DILocalVariable(name: "ret", scope: !12923, file: !3, line: 4399, type: !265)
!12985 = !DILocation(line: 4399, column: 7, scope: !12923)
!12986 = !DILocation(line: 4401, column: 6, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 4401, column: 6)
!12988 = !DILocation(line: 4401, column: 12, scope: !12987)
!12989 = !DILocation(line: 4401, column: 19, scope: !12987)
!12990 = !DILocation(line: 4401, column: 6, scope: !12923)
!12991 = !DILocation(line: 4402, column: 3, scope: !12987)
!12992 = !DILocation(line: 4404, column: 6, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 4404, column: 6)
!12994 = !DILocation(line: 4404, column: 11, scope: !12993)
!12995 = !DILocation(line: 4404, column: 17, scope: !12993)
!12996 = !DILocation(line: 4404, column: 29, scope: !12993)
!12997 = !DILocation(line: 4404, column: 33, scope: !12993)
!12998 = !DILocation(line: 4404, column: 39, scope: !12993)
!12999 = !DILocation(line: 4404, column: 54, scope: !12993)
!13000 = !DILocation(line: 4405, column: 5, scope: !12993)
!13001 = !DILocation(line: 4405, column: 11, scope: !12993)
!13002 = !DILocation(line: 4404, column: 6, scope: !12923)
!13003 = !DILocation(line: 4406, column: 3, scope: !12993)
!13004 = !DILocation(line: 4408, column: 7, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 4408, column: 6)
!13006 = !DILocation(line: 4408, column: 13, scope: !13005)
!13007 = !DILocation(line: 4408, column: 20, scope: !13005)
!13008 = !DILocation(line: 4408, column: 23, scope: !13005)
!13009 = !DILocation(line: 4408, column: 29, scope: !13005)
!13010 = !DILocation(line: 4408, column: 37, scope: !13005)
!13011 = !DILocation(line: 4408, column: 44, scope: !13005)
!13012 = !DILocation(line: 4409, column: 4, scope: !13005)
!13013 = !DILocation(line: 4409, column: 10, scope: !13005)
!13014 = !DILocation(line: 4409, column: 21, scope: !13005)
!13015 = !DILocation(line: 4409, column: 34, scope: !13005)
!13016 = !DILocation(line: 4408, column: 6, scope: !12923)
!13017 = !DILocation(line: 4410, column: 3, scope: !13005)
!13018 = !DILocation(line: 4412, column: 6, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 4412, column: 6)
!13020 = !DILocation(line: 4412, column: 12, scope: !13019)
!13021 = !DILocation(line: 4412, column: 32, scope: !13019)
!13022 = !DILocation(line: 4412, column: 6, scope: !12923)
!13023 = !DILocation(line: 4413, column: 3, scope: !13019)
!13024 = !DILocation(line: 4415, column: 2, scope: !12923)
!13025 = !DILocation(line: 4415, column: 2, scope: !12953)
!13026 = !DILocalVariable(name: "__dummy", scope: !13027, file: !3, line: 4415, type: !248)
!13027 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 4415, column: 2)
!13028 = !DILocation(line: 4415, column: 2, scope: !13027)
!13029 = !DILocalVariable(name: "__dummy2", scope: !13027, file: !3, line: 4415, type: !248)
!13030 = !DILocation(line: 4415, column: 2, scope: !12952)
!13031 = !DILocation(line: 4415, column: 2, scope: !12951)
!13032 = !DILocation(line: 4415, column: 2, scope: !13033)
!13033 = distinct !DILexicalBlock(scope: !12951, file: !3, line: 4415, column: 2)
!13034 = !DILocalVariable(name: "__dummy", scope: !13035, file: !3, line: 4415, type: !248)
!13035 = distinct !DILexicalBlock(scope: !13036, file: !3, line: 4415, column: 2)
!13036 = distinct !DILexicalBlock(scope: !13033, file: !3, line: 4415, column: 2)
!13037 = !DILocation(line: 4415, column: 2, scope: !13035)
!13038 = !DILocalVariable(name: "__dummy2", scope: !13035, file: !3, line: 4415, type: !248)
!13039 = !DILocation(line: 4415, column: 2, scope: !13036)
!13040 = !DILocation(line: 4415, column: 2, scope: !12950)
!13041 = !{i32 -2140608616}
!13042 = !DILocation(line: 4415, column: 2, scope: !12949)
!13043 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !12948)
!13044 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !12948)
!13045 = !DILocation(line: 4417, column: 10, scope: !12923)
!13046 = !DILocation(line: 4417, column: 16, scope: !12923)
!13047 = !DILocation(line: 4417, column: 26, scope: !12923)
!13048 = !DILocation(line: 4417, column: 8, scope: !12923)
!13049 = !DILocation(line: 4418, column: 13, scope: !12923)
!13050 = !DILocation(line: 4418, column: 19, scope: !12923)
!13051 = !DILocation(line: 4418, column: 27, scope: !12923)
!13052 = !DILocation(line: 4418, column: 11, scope: !12923)
!13053 = !DILocation(line: 4419, column: 12, scope: !12923)
!13054 = !DILocation(line: 4419, column: 18, scope: !12923)
!13055 = !DILocation(line: 4419, column: 29, scope: !12923)
!13056 = !DILocation(line: 4419, column: 34, scope: !12923)
!13057 = !DILocation(line: 4419, column: 10, scope: !12923)
!13058 = !DILocation(line: 4420, column: 17, scope: !12923)
!13059 = !DILocation(line: 4420, column: 11, scope: !12923)
!13060 = !DILocation(line: 4420, column: 9, scope: !12923)
!13061 = !DILocation(line: 4421, column: 14, scope: !12923)
!13062 = !DILocation(line: 4421, column: 20, scope: !12923)
!13063 = !DILocation(line: 4421, column: 31, scope: !12923)
!13064 = !DILocation(line: 4421, column: 36, scope: !12923)
!13065 = !DILocation(line: 4421, column: 12, scope: !12923)
!13066 = !DILocation(line: 4426, column: 6, scope: !12929)
!13067 = !DILocation(line: 4426, column: 6, scope: !12923)
!13068 = !DILocation(line: 4428, column: 7, scope: !12939)
!13069 = !DILocation(line: 4428, column: 13, scope: !12939)
!13070 = !DILocation(line: 4428, column: 7, scope: !12940)
!13071 = !DILocation(line: 4433, column: 12, scope: !12938)
!13072 = !DILocation(line: 4433, column: 10, scope: !12938)
!13073 = !DILocation(line: 4434, column: 9, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !12938, file: !3, line: 4434, column: 8)
!13075 = !DILocation(line: 4434, column: 15, scope: !13074)
!13076 = !DILocation(line: 4434, column: 35, scope: !13074)
!13077 = !DILocation(line: 4435, column: 9, scope: !13074)
!13078 = !DILocation(line: 4435, column: 15, scope: !13074)
!13079 = !DILocation(line: 4434, column: 8, scope: !12938)
!13080 = !DILocation(line: 4436, column: 12, scope: !13074)
!13081 = !DILocation(line: 4436, column: 10, scope: !13074)
!13082 = !DILocation(line: 4436, column: 5, scope: !13074)
!13083 = !DILocation(line: 4438, column: 12, scope: !13074)
!13084 = !DILocation(line: 4438, column: 18, scope: !13074)
!13085 = !DILocation(line: 4438, column: 28, scope: !13074)
!13086 = !DILocation(line: 4438, column: 10, scope: !13074)
!13087 = !DILocation(line: 4440, column: 38, scope: !12938)
!13088 = !DILocation(line: 4440, column: 19, scope: !12938)
!13089 = !DILocation(line: 4440, column: 17, scope: !12938)
!13090 = !DILocation(line: 4441, column: 28, scope: !12938)
!13091 = !DILocation(line: 4441, column: 34, scope: !12938)
!13092 = !DILocation(line: 4441, column: 40, scope: !12938)
!13093 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !12942)
!13094 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !12942)
!13095 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !12942)
!13096 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !12942)
!13097 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !12942)
!13098 = !DILocation(line: 4450, column: 15, scope: !12938)
!13099 = !DILocation(line: 4450, column: 20, scope: !12938)
!13100 = !DILocation(line: 4450, column: 4, scope: !12938)
!13101 = !DILocation(line: 4451, column: 39, scope: !12938)
!13102 = !DILocation(line: 4451, column: 45, scope: !12938)
!13103 = !DILocation(line: 4452, column: 11, scope: !12938)
!13104 = !DILocation(line: 4451, column: 10, scope: !12938)
!13105 = !DILocation(line: 4451, column: 8, scope: !12938)
!13106 = !DILocation(line: 4453, column: 17, scope: !12938)
!13107 = !DILocation(line: 4453, column: 22, scope: !12938)
!13108 = !DILocation(line: 4453, column: 4, scope: !12938)
!13109 = !DILocation(line: 4455, column: 8, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !12938, file: !3, line: 4455, column: 8)
!13111 = !DILocation(line: 4455, column: 12, scope: !13110)
!13112 = !DILocation(line: 4455, column: 8, scope: !12938)
!13113 = !DILocation(line: 4456, column: 12, scope: !13110)
!13114 = !DILocation(line: 4456, column: 5, scope: !13110)
!13115 = !DILocation(line: 4457, column: 4, scope: !12938)
!13116 = !DILocation(line: 4457, column: 4, scope: !12937)
!13117 = !DILocalVariable(name: "__dummy", scope: !13118, file: !3, line: 4457, type: !248)
!13118 = distinct !DILexicalBlock(scope: !12936, file: !3, line: 4457, column: 4)
!13119 = !DILocation(line: 4457, column: 4, scope: !13118)
!13120 = !DILocalVariable(name: "__dummy2", scope: !13118, file: !3, line: 4457, type: !248)
!13121 = !DILocation(line: 4457, column: 4, scope: !12936)
!13122 = !DILocation(line: 4457, column: 4, scope: !12935)
!13123 = !DILocation(line: 4457, column: 4, scope: !13124)
!13124 = distinct !DILexicalBlock(scope: !12935, file: !3, line: 4457, column: 4)
!13125 = !DILocalVariable(name: "__dummy", scope: !13126, file: !3, line: 4457, type: !248)
!13126 = distinct !DILexicalBlock(scope: !13127, file: !3, line: 4457, column: 4)
!13127 = distinct !DILexicalBlock(scope: !13124, file: !3, line: 4457, column: 4)
!13128 = !DILocation(line: 4457, column: 4, scope: !13126)
!13129 = !DILocalVariable(name: "__dummy2", scope: !13126, file: !3, line: 4457, type: !248)
!13130 = !DILocation(line: 4457, column: 4, scope: !13127)
!13131 = !DILocation(line: 4457, column: 4, scope: !12934)
!13132 = !{i32 -2140607051}
!13133 = !DILocation(line: 4457, column: 4, scope: !12933)
!13134 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !12932)
!13135 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !12932)
!13136 = !DILocation(line: 4459, column: 49, scope: !12938)
!13137 = !DILocation(line: 4459, column: 15, scope: !12938)
!13138 = !DILocation(line: 4459, column: 13, scope: !12938)
!13139 = !DILocation(line: 4460, column: 11, scope: !12938)
!13140 = !DILocation(line: 4460, column: 21, scope: !12938)
!13141 = !DILocation(line: 4460, column: 4, scope: !12938)
!13142 = !DILocation(line: 4462, column: 10, scope: !12938)
!13143 = !DILocation(line: 4462, column: 4, scope: !12938)
!13144 = !DILocation(line: 4463, column: 3, scope: !12938)
!13145 = !DILocation(line: 4464, column: 36, scope: !13146)
!13146 = distinct !DILexicalBlock(scope: !12939, file: !3, line: 4463, column: 10)
!13147 = !DILocation(line: 4464, column: 42, scope: !13146)
!13148 = !DILocation(line: 4464, column: 11, scope: !13146)
!13149 = !DILocation(line: 4464, column: 9, scope: !13146)
!13150 = !DILocation(line: 4467, column: 10, scope: !12940)
!13151 = !DILocation(line: 4468, column: 13, scope: !12940)
!13152 = !DILocation(line: 4468, column: 29, scope: !12940)
!13153 = !DILocation(line: 4468, column: 42, scope: !12940)
!13154 = !DILocation(line: 4468, column: 40, scope: !12940)
!13155 = !DILocation(line: 4468, column: 10, scope: !12940)
!13156 = !DILocation(line: 4469, column: 10, scope: !12940)
!13157 = !DILocation(line: 4469, column: 18, scope: !12940)
!13158 = !DILocation(line: 4469, column: 3, scope: !12940)
!13159 = !DILocation(line: 4470, column: 18, scope: !12940)
!13160 = !DILocation(line: 4470, column: 12, scope: !12940)
!13161 = !DILocation(line: 4470, column: 10, scope: !12940)
!13162 = !DILocation(line: 4471, column: 10, scope: !12940)
!13163 = !DILocation(line: 4472, column: 10, scope: !12940)
!13164 = !DILocation(line: 4472, column: 18, scope: !12940)
!13165 = !DILocation(line: 4472, column: 3, scope: !12940)
!13166 = !DILocation(line: 4474, column: 9, scope: !12940)
!13167 = !DILocation(line: 4474, column: 3, scope: !12940)
!13168 = !DILocation(line: 4475, column: 2, scope: !12940)
!13169 = !DILocation(line: 4476, column: 10, scope: !12928)
!13170 = !DILocation(line: 4477, column: 10, scope: !12928)
!13171 = !DILocation(line: 4477, column: 18, scope: !12928)
!13172 = !DILocation(line: 4477, column: 3, scope: !12928)
!13173 = !DILocation(line: 4479, column: 9, scope: !12928)
!13174 = !DILocation(line: 4479, column: 3, scope: !12928)
!13175 = !DILocation(line: 4480, column: 7, scope: !12927)
!13176 = !DILocation(line: 4480, column: 13, scope: !12927)
!13177 = !DILocation(line: 4480, column: 7, scope: !12928)
!13178 = !DILocation(line: 4481, column: 28, scope: !12926)
!13179 = !DILocation(line: 4481, column: 34, scope: !12926)
!13180 = !DILocation(line: 4481, column: 40, scope: !12926)
!13181 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !12925)
!13182 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !12925)
!13183 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !12925)
!13184 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !12925)
!13185 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !12925)
!13186 = !DILocation(line: 4482, column: 15, scope: !12926)
!13187 = !DILocation(line: 4482, column: 20, scope: !12926)
!13188 = !DILocation(line: 4482, column: 4, scope: !12926)
!13189 = !DILocation(line: 4483, column: 33, scope: !12926)
!13190 = !DILocation(line: 4483, column: 39, scope: !12926)
!13191 = !DILocation(line: 4483, column: 4, scope: !12926)
!13192 = !DILocation(line: 4484, column: 17, scope: !12926)
!13193 = !DILocation(line: 4484, column: 22, scope: !12926)
!13194 = !DILocation(line: 4484, column: 4, scope: !12926)
!13195 = !DILocalVariable(name: "__timeout_us", scope: !13196, file: !3, line: 4485, type: !239)
!13196 = distinct !DILexicalBlock(scope: !12926, file: !3, line: 4485, column: 4)
!13197 = !DILocation(line: 4485, column: 4, scope: !13196)
!13198 = !DILocalVariable(name: "__sleep_us", scope: !13196, file: !3, line: 4485, type: !248)
!13199 = !DILocalVariable(name: "__timeout", scope: !13196, file: !3, line: 4485, type: !1418)
!13200 = !DILocation(line: 4485, column: 4, scope: !13201)
!13201 = distinct !DILexicalBlock(scope: !13202, file: !3, line: 4485, column: 4)
!13202 = distinct !DILexicalBlock(scope: !13196, file: !3, line: 4485, column: 4)
!13203 = !DILocation(line: 4485, column: 4, scope: !13202)
!13204 = !DILocation(line: 4485, column: 4, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13201, file: !3, line: 4485, column: 4)
!13206 = !DILocation(line: 4485, column: 4, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13205, file: !3, line: 4485, column: 4)
!13208 = !DILocation(line: 4485, column: 4, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13210, file: !3, line: 4485, column: 4)
!13210 = distinct !DILexicalBlock(scope: !13211, file: !3, line: 4485, column: 4)
!13211 = distinct !DILexicalBlock(scope: !13196, file: !3, line: 4485, column: 4)
!13212 = !DILocation(line: 4485, column: 4, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13209, file: !3, line: 4485, column: 4)
!13214 = !DILocation(line: 4485, column: 4, scope: !13215)
!13215 = distinct !DILexicalBlock(scope: !13209, file: !3, line: 4485, column: 4)
!13216 = !DILocation(line: 4485, column: 4, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13215, file: !3, line: 4485, column: 4)
!13218 = !DILocation(line: 4485, column: 4, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13209, file: !3, line: 4485, column: 4)
!13220 = !DILocation(line: 4485, column: 4, scope: !13210)
!13221 = distinct !{!13221, !13222, !13222}
!13222 = !DILocation(line: 4485, column: 4, scope: !13211)
!13223 = !DILocation(line: 4488, column: 4, scope: !12926)
!13224 = !DILocation(line: 4492, column: 26, scope: !12923)
!13225 = !DILocation(line: 4492, column: 32, scope: !12923)
!13226 = !DILocation(line: 4492, column: 38, scope: !12923)
!13227 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !12945)
!13228 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !12945)
!13229 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !12945)
!13230 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !12945)
!13231 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !12945)
!13232 = !DILocation(line: 4493, column: 2, scope: !12923)
!13233 = !DILocation(line: 4494, column: 1, scope: !12923)
!13234 = distinct !DISubprogram(name: "xhci_enable_usb3_lpm_timeout", scope: !3, file: !3, line: 4946, type: !5001, scopeLine: 4948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13235 = !DILocalVariable(name: "hcd", arg: 1, scope: !13234, file: !3, line: 4946, type: !4501)
!13236 = !DILocation(line: 4946, column: 57, scope: !13234)
!13237 = !DILocalVariable(name: "udev", arg: 2, scope: !13234, file: !3, line: 4947, type: !4526)
!13238 = !DILocation(line: 4947, column: 23, scope: !13234)
!13239 = !DILocalVariable(name: "state", arg: 3, scope: !13234, file: !3, line: 4947, type: !132)
!13240 = !DILocation(line: 4947, column: 50, scope: !13234)
!13241 = !DILocalVariable(name: "xhci", scope: !13234, file: !3, line: 4949, type: !4497)
!13242 = !DILocation(line: 4949, column: 19, scope: !13234)
!13243 = !DILocalVariable(name: "hub_encoded_timeout", scope: !13234, file: !3, line: 4950, type: !984)
!13244 = !DILocation(line: 4950, column: 6, scope: !13234)
!13245 = !DILocalVariable(name: "mel", scope: !13234, file: !3, line: 4951, type: !265)
!13246 = !DILocation(line: 4951, column: 6, scope: !13234)
!13247 = !DILocalVariable(name: "ret", scope: !13234, file: !3, line: 4952, type: !265)
!13248 = !DILocation(line: 4952, column: 6, scope: !13234)
!13249 = !DILocation(line: 4954, column: 21, scope: !13234)
!13250 = !DILocation(line: 4954, column: 9, scope: !13234)
!13251 = !DILocation(line: 4954, column: 7, scope: !13234)
!13252 = !DILocation(line: 4959, column: 7, scope: !13253)
!13253 = distinct !DILexicalBlock(scope: !13234, file: !3, line: 4959, column: 6)
!13254 = !DILocation(line: 4959, column: 12, scope: !13253)
!13255 = !DILocation(line: 4959, column: 17, scope: !13253)
!13256 = !DILocation(line: 4959, column: 23, scope: !13253)
!13257 = !DILocation(line: 4959, column: 30, scope: !13253)
!13258 = !DILocation(line: 4959, column: 50, scope: !13253)
!13259 = !DILocation(line: 4960, column: 5, scope: !13253)
!13260 = !DILocation(line: 4960, column: 11, scope: !13253)
!13261 = !DILocation(line: 4960, column: 16, scope: !13253)
!13262 = !DILocation(line: 4960, column: 22, scope: !13253)
!13263 = !DILocation(line: 4959, column: 6, scope: !13234)
!13264 = !DILocation(line: 4961, column: 3, scope: !13253)
!13265 = !DILocation(line: 4963, column: 51, scope: !13234)
!13266 = !DILocation(line: 4963, column: 56, scope: !13234)
!13267 = !DILocation(line: 4963, column: 62, scope: !13234)
!13268 = !DILocation(line: 4963, column: 24, scope: !13234)
!13269 = !DILocation(line: 4963, column: 22, scope: !13234)
!13270 = !DILocation(line: 4964, column: 35, scope: !13234)
!13271 = !DILocation(line: 4964, column: 41, scope: !13234)
!13272 = !DILocation(line: 4964, column: 48, scope: !13234)
!13273 = !DILocation(line: 4964, column: 8, scope: !13234)
!13274 = !DILocation(line: 4964, column: 6, scope: !13234)
!13275 = !DILocation(line: 4965, column: 6, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13234, file: !3, line: 4965, column: 6)
!13277 = !DILocation(line: 4965, column: 10, scope: !13276)
!13278 = !DILocation(line: 4965, column: 6, scope: !13234)
!13279 = !DILocation(line: 4967, column: 23, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13276, file: !3, line: 4965, column: 15)
!13281 = !DILocation(line: 4968, column: 7, scope: !13280)
!13282 = !DILocation(line: 4969, column: 2, scope: !13280)
!13283 = !DILocation(line: 4971, column: 37, scope: !13234)
!13284 = !DILocation(line: 4971, column: 43, scope: !13234)
!13285 = !DILocation(line: 4971, column: 49, scope: !13234)
!13286 = !DILocation(line: 4971, column: 8, scope: !13234)
!13287 = !DILocation(line: 4971, column: 6, scope: !13234)
!13288 = !DILocation(line: 4972, column: 6, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13234, file: !3, line: 4972, column: 6)
!13290 = !DILocation(line: 4972, column: 6, scope: !13234)
!13291 = !DILocation(line: 4973, column: 10, scope: !13289)
!13292 = !DILocation(line: 4973, column: 3, scope: !13289)
!13293 = !DILocation(line: 4974, column: 9, scope: !13234)
!13294 = !DILocation(line: 4974, column: 2, scope: !13234)
!13295 = !DILocation(line: 4975, column: 1, scope: !13234)
!13296 = distinct !DISubprogram(name: "xhci_disable_usb3_lpm_timeout", scope: !3, file: !3, line: 4977, type: !5001, scopeLine: 4979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13297 = !DILocalVariable(name: "hcd", arg: 1, scope: !13296, file: !3, line: 4977, type: !4501)
!13298 = !DILocation(line: 4977, column: 58, scope: !13296)
!13299 = !DILocalVariable(name: "udev", arg: 2, scope: !13296, file: !3, line: 4978, type: !4526)
!13300 = !DILocation(line: 4978, column: 23, scope: !13296)
!13301 = !DILocalVariable(name: "state", arg: 3, scope: !13296, file: !3, line: 4978, type: !132)
!13302 = !DILocation(line: 4978, column: 50, scope: !13296)
!13303 = !DILocalVariable(name: "xhci", scope: !13296, file: !3, line: 4980, type: !4497)
!13304 = !DILocation(line: 4980, column: 19, scope: !13296)
!13305 = !DILocalVariable(name: "mel", scope: !13296, file: !3, line: 4981, type: !984)
!13306 = !DILocation(line: 4981, column: 6, scope: !13296)
!13307 = !DILocation(line: 4983, column: 21, scope: !13296)
!13308 = !DILocation(line: 4983, column: 9, scope: !13296)
!13309 = !DILocation(line: 4983, column: 7, scope: !13296)
!13310 = !DILocation(line: 4984, column: 7, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13296, file: !3, line: 4984, column: 6)
!13312 = !DILocation(line: 4984, column: 12, scope: !13311)
!13313 = !DILocation(line: 4984, column: 17, scope: !13311)
!13314 = !DILocation(line: 4984, column: 23, scope: !13311)
!13315 = !DILocation(line: 4984, column: 30, scope: !13311)
!13316 = !DILocation(line: 4984, column: 50, scope: !13311)
!13317 = !DILocation(line: 4985, column: 5, scope: !13311)
!13318 = !DILocation(line: 4985, column: 11, scope: !13311)
!13319 = !DILocation(line: 4985, column: 16, scope: !13311)
!13320 = !DILocation(line: 4985, column: 22, scope: !13311)
!13321 = !DILocation(line: 4984, column: 6, scope: !13296)
!13322 = !DILocation(line: 4986, column: 3, scope: !13311)
!13323 = !DILocation(line: 4988, column: 35, scope: !13296)
!13324 = !DILocation(line: 4988, column: 41, scope: !13296)
!13325 = !DILocation(line: 4988, column: 8, scope: !13296)
!13326 = !DILocation(line: 4988, column: 6, scope: !13296)
!13327 = !DILocation(line: 4989, column: 38, scope: !13296)
!13328 = !DILocation(line: 4989, column: 44, scope: !13296)
!13329 = !DILocation(line: 4989, column: 50, scope: !13296)
!13330 = !DILocation(line: 4989, column: 9, scope: !13296)
!13331 = !DILocation(line: 4989, column: 2, scope: !13296)
!13332 = !DILocation(line: 4990, column: 1, scope: !13296)
!13333 = distinct !DISubprogram(name: "xhci_dbc_exit", scope: !6324, file: !6324, line: 216, type: !5755, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13334 = !DILocalVariable(name: "xhci", arg: 1, scope: !13333, file: !6324, line: 216, type: !4497)
!13335 = !DILocation(line: 216, column: 51, scope: !13333)
!13336 = !DILocation(line: 218, column: 1, scope: !13333)
!13337 = distinct !DISubprogram(name: "xhci_check_args", scope: !3, file: !3, line: 1340, type: !13338, scopeLine: 1342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13338 = !DISubroutineType(types: !13339)
!13339 = !{!265, !4501, !4526, !4725, !265, !569, !244}
!13340 = !DILocalVariable(name: "hcd", arg: 1, scope: !13337, file: !3, line: 1340, type: !4501)
!13341 = !DILocation(line: 1340, column: 44, scope: !13337)
!13342 = !DILocalVariable(name: "udev", arg: 2, scope: !13337, file: !3, line: 1340, type: !4526)
!13343 = !DILocation(line: 1340, column: 68, scope: !13337)
!13344 = !DILocalVariable(name: "ep", arg: 3, scope: !13337, file: !3, line: 1341, type: !4725)
!13345 = !DILocation(line: 1341, column: 29, scope: !13337)
!13346 = !DILocalVariable(name: "check_ep", arg: 4, scope: !13337, file: !3, line: 1341, type: !265)
!13347 = !DILocation(line: 1341, column: 37, scope: !13337)
!13348 = !DILocalVariable(name: "check_virt_dev", arg: 5, scope: !13337, file: !3, line: 1341, type: !569)
!13349 = !DILocation(line: 1341, column: 52, scope: !13337)
!13350 = !DILocalVariable(name: "func", arg: 6, scope: !13337, file: !3, line: 1342, type: !244)
!13351 = !DILocation(line: 1342, column: 15, scope: !13337)
!13352 = !DILocalVariable(name: "xhci", scope: !13337, file: !3, line: 1343, type: !4497)
!13353 = !DILocation(line: 1343, column: 19, scope: !13337)
!13354 = !DILocalVariable(name: "virt_dev", scope: !13337, file: !3, line: 1344, type: !5290)
!13355 = !DILocation(line: 1344, column: 27, scope: !13337)
!13356 = !DILocation(line: 1346, column: 7, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13337, file: !3, line: 1346, column: 6)
!13358 = !DILocation(line: 1346, column: 11, scope: !13357)
!13359 = !DILocation(line: 1346, column: 15, scope: !13357)
!13360 = !DILocation(line: 1346, column: 24, scope: !13357)
!13361 = !DILocation(line: 1346, column: 28, scope: !13357)
!13362 = !DILocation(line: 1346, column: 32, scope: !13357)
!13363 = !DILocation(line: 1346, column: 36, scope: !13357)
!13364 = !DILocation(line: 1346, column: 6, scope: !13337)
!13365 = !DILocation(line: 1347, column: 3, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13367, file: !3, line: 1347, column: 3)
!13367 = distinct !DILexicalBlock(scope: !13368, file: !3, line: 1347, column: 3)
!13368 = distinct !DILexicalBlock(scope: !13357, file: !3, line: 1346, column: 42)
!13369 = !DILocation(line: 1347, column: 3, scope: !13367)
!13370 = !DILocation(line: 1348, column: 3, scope: !13368)
!13371 = !DILocation(line: 1350, column: 7, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13337, file: !3, line: 1350, column: 6)
!13373 = !DILocation(line: 1350, column: 13, scope: !13372)
!13374 = !DILocation(line: 1350, column: 6, scope: !13337)
!13375 = !DILocation(line: 1351, column: 3, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13377, file: !3, line: 1351, column: 3)
!13377 = distinct !DILexicalBlock(scope: !13378, file: !3, line: 1351, column: 3)
!13378 = distinct !DILexicalBlock(scope: !13372, file: !3, line: 1350, column: 21)
!13379 = !DILocation(line: 1351, column: 3, scope: !13377)
!13380 = !DILocation(line: 1352, column: 3, scope: !13378)
!13381 = !DILocation(line: 1355, column: 21, scope: !13337)
!13382 = !DILocation(line: 1355, column: 9, scope: !13337)
!13383 = !DILocation(line: 1355, column: 7, scope: !13337)
!13384 = !DILocation(line: 1356, column: 6, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13337, file: !3, line: 1356, column: 6)
!13386 = !DILocation(line: 1356, column: 6, scope: !13337)
!13387 = !DILocation(line: 1357, column: 8, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !13389, file: !3, line: 1357, column: 7)
!13389 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 1356, column: 22)
!13390 = !DILocation(line: 1357, column: 14, scope: !13388)
!13391 = !DILocation(line: 1357, column: 22, scope: !13388)
!13392 = !DILocation(line: 1357, column: 26, scope: !13388)
!13393 = !DILocation(line: 1357, column: 32, scope: !13388)
!13394 = !DILocation(line: 1357, column: 37, scope: !13388)
!13395 = !DILocation(line: 1357, column: 43, scope: !13388)
!13396 = !DILocation(line: 1357, column: 7, scope: !13389)
!13397 = !DILocation(line: 1360, column: 4, scope: !13398)
!13398 = distinct !DILexicalBlock(scope: !13388, file: !3, line: 1357, column: 53)
!13399 = !DILocation(line: 1363, column: 14, scope: !13389)
!13400 = !DILocation(line: 1363, column: 20, scope: !13389)
!13401 = !DILocation(line: 1363, column: 25, scope: !13389)
!13402 = !DILocation(line: 1363, column: 31, scope: !13389)
!13403 = !DILocation(line: 1363, column: 12, scope: !13389)
!13404 = !DILocation(line: 1364, column: 7, scope: !13405)
!13405 = distinct !DILexicalBlock(scope: !13389, file: !3, line: 1364, column: 7)
!13406 = !DILocation(line: 1364, column: 17, scope: !13405)
!13407 = !DILocation(line: 1364, column: 25, scope: !13405)
!13408 = !DILocation(line: 1364, column: 22, scope: !13405)
!13409 = !DILocation(line: 1364, column: 7, scope: !13389)
!13410 = !DILocation(line: 1367, column: 4, scope: !13411)
!13411 = distinct !DILexicalBlock(scope: !13405, file: !3, line: 1364, column: 31)
!13412 = !DILocation(line: 1369, column: 2, scope: !13389)
!13413 = !DILocation(line: 1371, column: 6, scope: !13414)
!13414 = distinct !DILexicalBlock(scope: !13337, file: !3, line: 1371, column: 6)
!13415 = !DILocation(line: 1371, column: 12, scope: !13414)
!13416 = !DILocation(line: 1371, column: 22, scope: !13414)
!13417 = !DILocation(line: 1371, column: 6, scope: !13337)
!13418 = !DILocation(line: 1372, column: 3, scope: !13414)
!13419 = !DILocation(line: 1374, column: 2, scope: !13337)
!13420 = !DILocation(line: 1375, column: 1, scope: !13337)
!13421 = distinct !DISubprogram(name: "usb_endpoint_xfer_isoc", scope: !94, file: !94, line: 556, type: !7901, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13422 = !DILocalVariable(name: "epd", arg: 1, scope: !13421, file: !94, line: 557, type: !7903)
!13423 = !DILocation(line: 557, column: 43, scope: !13421)
!13424 = !DILocation(line: 559, column: 11, scope: !13421)
!13425 = !DILocation(line: 559, column: 16, scope: !13421)
!13426 = !DILocation(line: 559, column: 29, scope: !13421)
!13427 = !DILocation(line: 559, column: 59, scope: !13421)
!13428 = !DILocation(line: 559, column: 2, scope: !13421)
!13429 = distinct !DISubprogram(name: "usb_endpoint_is_bulk_out", scope: !94, file: !94, line: 583, type: !7901, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13430 = !DILocalVariable(name: "epd", arg: 1, scope: !13429, file: !94, line: 584, type: !7903)
!13431 = !DILocation(line: 584, column: 43, scope: !13429)
!13432 = !DILocation(line: 586, column: 32, scope: !13429)
!13433 = !DILocation(line: 586, column: 9, scope: !13429)
!13434 = !DILocation(line: 586, column: 37, scope: !13429)
!13435 = !DILocation(line: 586, column: 61, scope: !13429)
!13436 = !DILocation(line: 586, column: 40, scope: !13429)
!13437 = !DILocation(line: 0, scope: !13429)
!13438 = !DILocation(line: 586, column: 2, scope: !13429)
!13439 = distinct !DISubprogram(name: "usb_endpoint_maxp", scope: !94, file: !94, line: 647, type: !7901, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13440 = !DILocalVariable(name: "epd", arg: 1, scope: !13439, file: !94, line: 647, type: !7903)
!13441 = !DILocation(line: 647, column: 75, scope: !13439)
!13442 = !DILocation(line: 649, column: 9, scope: !13439)
!13443 = !DILocation(line: 649, column: 44, scope: !13439)
!13444 = !DILocation(line: 649, column: 2, scope: !13439)
!13445 = distinct !DISubprogram(name: "kzalloc", scope: !188, file: !188, line: 662, type: !13446, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13446 = !DISubroutineType(types: !13447)
!13447 = !{!208, !409, !875}
!13448 = !DILocalVariable(name: "s", arg: 1, scope: !13449, file: !188, line: 445, type: !1060)
!13449 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !188, file: !188, line: 445, type: !13450, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13450 = !DISubroutineType(types: !13451)
!13451 = !{!208, !1060, !875, !409}
!13452 = !DILocation(line: 445, column: 72, scope: !13449, inlinedAt: !13453)
!13453 = distinct !DILocation(line: 552, column: 10, scope: !13454, inlinedAt: !13457)
!13454 = distinct !DILexicalBlock(scope: !13455, file: !188, line: 540, column: 34)
!13455 = distinct !DILexicalBlock(scope: !13456, file: !188, line: 540, column: 6)
!13456 = distinct !DISubprogram(name: "kmalloc", scope: !188, file: !188, line: 538, type: !13446, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13457 = distinct !DILocation(line: 664, column: 9, scope: !13445)
!13458 = !DILocalVariable(name: "flags", arg: 2, scope: !13449, file: !188, line: 446, type: !875)
!13459 = !DILocation(line: 446, column: 9, scope: !13449, inlinedAt: !13453)
!13460 = !DILocalVariable(name: "size", arg: 3, scope: !13449, file: !188, line: 446, type: !409)
!13461 = !DILocation(line: 446, column: 23, scope: !13449, inlinedAt: !13453)
!13462 = !DILocalVariable(name: "ret", scope: !13449, file: !188, line: 448, type: !208)
!13463 = !DILocation(line: 448, column: 8, scope: !13449, inlinedAt: !13453)
!13464 = !DILocalVariable(name: "flags", arg: 1, scope: !13465, file: !188, line: 318, type: !875)
!13465 = distinct !DISubprogram(name: "kmalloc_type", scope: !188, file: !188, line: 318, type: !13466, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13466 = !DISubroutineType(types: !13467)
!13467 = !{!187, !875}
!13468 = !DILocation(line: 318, column: 67, scope: !13465, inlinedAt: !13469)
!13469 = distinct !DILocation(line: 553, column: 20, scope: !13454, inlinedAt: !13457)
!13470 = !DILocalVariable(name: "size", arg: 1, scope: !13471, file: !188, line: 346, type: !409)
!13471 = distinct !DISubprogram(name: "kmalloc_index", scope: !188, file: !188, line: 346, type: !13472, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13472 = !DISubroutineType(types: !13473)
!13473 = !{!7, !409}
!13474 = !DILocation(line: 346, column: 58, scope: !13471, inlinedAt: !13475)
!13475 = distinct !DILocation(line: 547, column: 11, scope: !13454, inlinedAt: !13457)
!13476 = !DILocalVariable(name: "size", arg: 1, scope: !13477, file: !188, line: 472, type: !409)
!13477 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !188, file: !188, line: 472, type: !13478, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13478 = !DISubroutineType(types: !13479)
!13479 = !{!208, !409, !875, !7}
!13480 = !DILocation(line: 472, column: 28, scope: !13477, inlinedAt: !13481)
!13481 = distinct !DILocation(line: 481, column: 9, scope: !13482, inlinedAt: !13483)
!13482 = distinct !DISubprogram(name: "kmalloc_large", scope: !188, file: !188, line: 478, type: !13446, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13483 = distinct !DILocation(line: 545, column: 11, scope: !13484, inlinedAt: !13457)
!13484 = distinct !DILexicalBlock(scope: !13454, file: !188, line: 544, column: 7)
!13485 = !DILocalVariable(name: "flags", arg: 2, scope: !13477, file: !188, line: 472, type: !875)
!13486 = !DILocation(line: 472, column: 40, scope: !13477, inlinedAt: !13481)
!13487 = !DILocalVariable(name: "order", arg: 3, scope: !13477, file: !188, line: 472, type: !7)
!13488 = !DILocation(line: 472, column: 60, scope: !13477, inlinedAt: !13481)
!13489 = !DILocalVariable(name: "size", arg: 1, scope: !13482, file: !188, line: 478, type: !409)
!13490 = !DILocation(line: 478, column: 51, scope: !13482, inlinedAt: !13483)
!13491 = !DILocalVariable(name: "flags", arg: 2, scope: !13482, file: !188, line: 478, type: !875)
!13492 = !DILocation(line: 478, column: 63, scope: !13482, inlinedAt: !13483)
!13493 = !DILocalVariable(name: "order", scope: !13482, file: !188, line: 480, type: !7)
!13494 = !DILocation(line: 480, column: 15, scope: !13482, inlinedAt: !13483)
!13495 = !DILocalVariable(name: "size", arg: 1, scope: !13456, file: !188, line: 538, type: !409)
!13496 = !DILocation(line: 538, column: 45, scope: !13456, inlinedAt: !13457)
!13497 = !DILocalVariable(name: "flags", arg: 2, scope: !13456, file: !188, line: 538, type: !875)
!13498 = !DILocation(line: 538, column: 57, scope: !13456, inlinedAt: !13457)
!13499 = !DILocalVariable(name: "index", scope: !13454, file: !188, line: 542, type: !7)
!13500 = !DILocation(line: 542, column: 16, scope: !13454, inlinedAt: !13457)
!13501 = !DILocalVariable(name: "size", arg: 1, scope: !13445, file: !188, line: 662, type: !409)
!13502 = !DILocation(line: 662, column: 36, scope: !13445)
!13503 = !DILocalVariable(name: "flags", arg: 2, scope: !13445, file: !188, line: 662, type: !875)
!13504 = !DILocation(line: 662, column: 48, scope: !13445)
!13505 = !DILocation(line: 664, column: 17, scope: !13445)
!13506 = !DILocation(line: 664, column: 23, scope: !13445)
!13507 = !DILocation(line: 664, column: 29, scope: !13445)
!13508 = !DILocation(line: 540, column: 27, scope: !13455, inlinedAt: !13457)
!13509 = !DILocation(line: 540, column: 6, scope: !13455, inlinedAt: !13457)
!13510 = !DILocation(line: 540, column: 6, scope: !13456, inlinedAt: !13457)
!13511 = !DILocation(line: 544, column: 7, scope: !13484, inlinedAt: !13457)
!13512 = !DILocation(line: 544, column: 12, scope: !13484, inlinedAt: !13457)
!13513 = !DILocation(line: 544, column: 7, scope: !13454, inlinedAt: !13457)
!13514 = !DILocation(line: 545, column: 25, scope: !13484, inlinedAt: !13457)
!13515 = !DILocation(line: 545, column: 31, scope: !13484, inlinedAt: !13457)
!13516 = !DILocation(line: 480, column: 33, scope: !13482, inlinedAt: !13483)
!13517 = !DILocation(line: 480, column: 23, scope: !13482, inlinedAt: !13483)
!13518 = !DILocation(line: 481, column: 29, scope: !13482, inlinedAt: !13483)
!13519 = !DILocation(line: 481, column: 35, scope: !13482, inlinedAt: !13483)
!13520 = !DILocation(line: 481, column: 42, scope: !13482, inlinedAt: !13483)
!13521 = !DILocation(line: 474, column: 23, scope: !13477, inlinedAt: !13481)
!13522 = !DILocation(line: 474, column: 29, scope: !13477, inlinedAt: !13481)
!13523 = !DILocation(line: 474, column: 36, scope: !13477, inlinedAt: !13481)
!13524 = !DILocation(line: 474, column: 9, scope: !13477, inlinedAt: !13481)
!13525 = !DILocation(line: 545, column: 4, scope: !13484, inlinedAt: !13457)
!13526 = !DILocation(line: 547, column: 25, scope: !13454, inlinedAt: !13457)
!13527 = !DILocation(line: 348, column: 7, scope: !13528, inlinedAt: !13475)
!13528 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 348, column: 6)
!13529 = !DILocation(line: 348, column: 6, scope: !13471, inlinedAt: !13475)
!13530 = !DILocation(line: 349, column: 3, scope: !13528, inlinedAt: !13475)
!13531 = !DILocation(line: 351, column: 6, scope: !13532, inlinedAt: !13475)
!13532 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 351, column: 6)
!13533 = !DILocation(line: 351, column: 11, scope: !13532, inlinedAt: !13475)
!13534 = !DILocation(line: 351, column: 6, scope: !13471, inlinedAt: !13475)
!13535 = !DILocation(line: 352, column: 3, scope: !13532, inlinedAt: !13475)
!13536 = !DILocation(line: 354, column: 32, scope: !13537, inlinedAt: !13475)
!13537 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 354, column: 6)
!13538 = !DILocation(line: 354, column: 37, scope: !13537, inlinedAt: !13475)
!13539 = !DILocation(line: 354, column: 42, scope: !13537, inlinedAt: !13475)
!13540 = !DILocation(line: 354, column: 45, scope: !13537, inlinedAt: !13475)
!13541 = !DILocation(line: 354, column: 50, scope: !13537, inlinedAt: !13475)
!13542 = !DILocation(line: 354, column: 6, scope: !13471, inlinedAt: !13475)
!13543 = !DILocation(line: 355, column: 3, scope: !13537, inlinedAt: !13475)
!13544 = !DILocation(line: 356, column: 32, scope: !13545, inlinedAt: !13475)
!13545 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 356, column: 6)
!13546 = !DILocation(line: 356, column: 37, scope: !13545, inlinedAt: !13475)
!13547 = !DILocation(line: 356, column: 43, scope: !13545, inlinedAt: !13475)
!13548 = !DILocation(line: 356, column: 46, scope: !13545, inlinedAt: !13475)
!13549 = !DILocation(line: 356, column: 51, scope: !13545, inlinedAt: !13475)
!13550 = !DILocation(line: 356, column: 6, scope: !13471, inlinedAt: !13475)
!13551 = !DILocation(line: 357, column: 3, scope: !13545, inlinedAt: !13475)
!13552 = !DILocation(line: 358, column: 6, scope: !13553, inlinedAt: !13475)
!13553 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 358, column: 6)
!13554 = !DILocation(line: 358, column: 11, scope: !13553, inlinedAt: !13475)
!13555 = !DILocation(line: 358, column: 6, scope: !13471, inlinedAt: !13475)
!13556 = !DILocation(line: 358, column: 26, scope: !13553, inlinedAt: !13475)
!13557 = !DILocation(line: 359, column: 6, scope: !13558, inlinedAt: !13475)
!13558 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 359, column: 6)
!13559 = !DILocation(line: 359, column: 11, scope: !13558, inlinedAt: !13475)
!13560 = !DILocation(line: 359, column: 6, scope: !13471, inlinedAt: !13475)
!13561 = !DILocation(line: 359, column: 26, scope: !13558, inlinedAt: !13475)
!13562 = !DILocation(line: 360, column: 6, scope: !13563, inlinedAt: !13475)
!13563 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 360, column: 6)
!13564 = !DILocation(line: 360, column: 11, scope: !13563, inlinedAt: !13475)
!13565 = !DILocation(line: 360, column: 6, scope: !13471, inlinedAt: !13475)
!13566 = !DILocation(line: 360, column: 26, scope: !13563, inlinedAt: !13475)
!13567 = !DILocation(line: 361, column: 6, scope: !13568, inlinedAt: !13475)
!13568 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 361, column: 6)
!13569 = !DILocation(line: 361, column: 11, scope: !13568, inlinedAt: !13475)
!13570 = !DILocation(line: 361, column: 6, scope: !13471, inlinedAt: !13475)
!13571 = !DILocation(line: 361, column: 26, scope: !13568, inlinedAt: !13475)
!13572 = !DILocation(line: 362, column: 6, scope: !13573, inlinedAt: !13475)
!13573 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 362, column: 6)
!13574 = !DILocation(line: 362, column: 11, scope: !13573, inlinedAt: !13475)
!13575 = !DILocation(line: 362, column: 6, scope: !13471, inlinedAt: !13475)
!13576 = !DILocation(line: 362, column: 26, scope: !13573, inlinedAt: !13475)
!13577 = !DILocation(line: 363, column: 6, scope: !13578, inlinedAt: !13475)
!13578 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 363, column: 6)
!13579 = !DILocation(line: 363, column: 11, scope: !13578, inlinedAt: !13475)
!13580 = !DILocation(line: 363, column: 6, scope: !13471, inlinedAt: !13475)
!13581 = !DILocation(line: 363, column: 26, scope: !13578, inlinedAt: !13475)
!13582 = !DILocation(line: 364, column: 6, scope: !13583, inlinedAt: !13475)
!13583 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 364, column: 6)
!13584 = !DILocation(line: 364, column: 11, scope: !13583, inlinedAt: !13475)
!13585 = !DILocation(line: 364, column: 6, scope: !13471, inlinedAt: !13475)
!13586 = !DILocation(line: 364, column: 26, scope: !13583, inlinedAt: !13475)
!13587 = !DILocation(line: 365, column: 6, scope: !13588, inlinedAt: !13475)
!13588 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 365, column: 6)
!13589 = !DILocation(line: 365, column: 11, scope: !13588, inlinedAt: !13475)
!13590 = !DILocation(line: 365, column: 6, scope: !13471, inlinedAt: !13475)
!13591 = !DILocation(line: 365, column: 26, scope: !13588, inlinedAt: !13475)
!13592 = !DILocation(line: 366, column: 6, scope: !13593, inlinedAt: !13475)
!13593 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 366, column: 6)
!13594 = !DILocation(line: 366, column: 11, scope: !13593, inlinedAt: !13475)
!13595 = !DILocation(line: 366, column: 6, scope: !13471, inlinedAt: !13475)
!13596 = !DILocation(line: 366, column: 26, scope: !13593, inlinedAt: !13475)
!13597 = !DILocation(line: 367, column: 6, scope: !13598, inlinedAt: !13475)
!13598 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 367, column: 6)
!13599 = !DILocation(line: 367, column: 11, scope: !13598, inlinedAt: !13475)
!13600 = !DILocation(line: 367, column: 6, scope: !13471, inlinedAt: !13475)
!13601 = !DILocation(line: 367, column: 26, scope: !13598, inlinedAt: !13475)
!13602 = !DILocation(line: 368, column: 6, scope: !13603, inlinedAt: !13475)
!13603 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 368, column: 6)
!13604 = !DILocation(line: 368, column: 11, scope: !13603, inlinedAt: !13475)
!13605 = !DILocation(line: 368, column: 6, scope: !13471, inlinedAt: !13475)
!13606 = !DILocation(line: 368, column: 26, scope: !13603, inlinedAt: !13475)
!13607 = !DILocation(line: 369, column: 6, scope: !13608, inlinedAt: !13475)
!13608 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 369, column: 6)
!13609 = !DILocation(line: 369, column: 11, scope: !13608, inlinedAt: !13475)
!13610 = !DILocation(line: 369, column: 6, scope: !13471, inlinedAt: !13475)
!13611 = !DILocation(line: 369, column: 26, scope: !13608, inlinedAt: !13475)
!13612 = !DILocation(line: 370, column: 6, scope: !13613, inlinedAt: !13475)
!13613 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 370, column: 6)
!13614 = !DILocation(line: 370, column: 11, scope: !13613, inlinedAt: !13475)
!13615 = !DILocation(line: 370, column: 6, scope: !13471, inlinedAt: !13475)
!13616 = !DILocation(line: 370, column: 26, scope: !13613, inlinedAt: !13475)
!13617 = !DILocation(line: 371, column: 6, scope: !13618, inlinedAt: !13475)
!13618 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 371, column: 6)
!13619 = !DILocation(line: 371, column: 11, scope: !13618, inlinedAt: !13475)
!13620 = !DILocation(line: 371, column: 6, scope: !13471, inlinedAt: !13475)
!13621 = !DILocation(line: 371, column: 26, scope: !13618, inlinedAt: !13475)
!13622 = !DILocation(line: 372, column: 6, scope: !13623, inlinedAt: !13475)
!13623 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 372, column: 6)
!13624 = !DILocation(line: 372, column: 11, scope: !13623, inlinedAt: !13475)
!13625 = !DILocation(line: 372, column: 6, scope: !13471, inlinedAt: !13475)
!13626 = !DILocation(line: 372, column: 26, scope: !13623, inlinedAt: !13475)
!13627 = !DILocation(line: 373, column: 6, scope: !13628, inlinedAt: !13475)
!13628 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 373, column: 6)
!13629 = !DILocation(line: 373, column: 11, scope: !13628, inlinedAt: !13475)
!13630 = !DILocation(line: 373, column: 6, scope: !13471, inlinedAt: !13475)
!13631 = !DILocation(line: 373, column: 26, scope: !13628, inlinedAt: !13475)
!13632 = !DILocation(line: 374, column: 6, scope: !13633, inlinedAt: !13475)
!13633 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 374, column: 6)
!13634 = !DILocation(line: 374, column: 11, scope: !13633, inlinedAt: !13475)
!13635 = !DILocation(line: 374, column: 6, scope: !13471, inlinedAt: !13475)
!13636 = !DILocation(line: 374, column: 26, scope: !13633, inlinedAt: !13475)
!13637 = !DILocation(line: 375, column: 6, scope: !13638, inlinedAt: !13475)
!13638 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 375, column: 6)
!13639 = !DILocation(line: 375, column: 11, scope: !13638, inlinedAt: !13475)
!13640 = !DILocation(line: 375, column: 6, scope: !13471, inlinedAt: !13475)
!13641 = !DILocation(line: 375, column: 27, scope: !13638, inlinedAt: !13475)
!13642 = !DILocation(line: 376, column: 6, scope: !13643, inlinedAt: !13475)
!13643 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 376, column: 6)
!13644 = !DILocation(line: 376, column: 11, scope: !13643, inlinedAt: !13475)
!13645 = !DILocation(line: 376, column: 6, scope: !13471, inlinedAt: !13475)
!13646 = !DILocation(line: 376, column: 32, scope: !13643, inlinedAt: !13475)
!13647 = !DILocation(line: 377, column: 6, scope: !13648, inlinedAt: !13475)
!13648 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 377, column: 6)
!13649 = !DILocation(line: 377, column: 11, scope: !13648, inlinedAt: !13475)
!13650 = !DILocation(line: 377, column: 6, scope: !13471, inlinedAt: !13475)
!13651 = !DILocation(line: 377, column: 32, scope: !13648, inlinedAt: !13475)
!13652 = !DILocation(line: 378, column: 6, scope: !13653, inlinedAt: !13475)
!13653 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 378, column: 6)
!13654 = !DILocation(line: 378, column: 11, scope: !13653, inlinedAt: !13475)
!13655 = !DILocation(line: 378, column: 6, scope: !13471, inlinedAt: !13475)
!13656 = !DILocation(line: 378, column: 32, scope: !13653, inlinedAt: !13475)
!13657 = !DILocation(line: 379, column: 6, scope: !13658, inlinedAt: !13475)
!13658 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 379, column: 6)
!13659 = !DILocation(line: 379, column: 11, scope: !13658, inlinedAt: !13475)
!13660 = !DILocation(line: 379, column: 6, scope: !13471, inlinedAt: !13475)
!13661 = !DILocation(line: 379, column: 33, scope: !13658, inlinedAt: !13475)
!13662 = !DILocation(line: 380, column: 6, scope: !13663, inlinedAt: !13475)
!13663 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 380, column: 6)
!13664 = !DILocation(line: 380, column: 11, scope: !13663, inlinedAt: !13475)
!13665 = !DILocation(line: 380, column: 6, scope: !13471, inlinedAt: !13475)
!13666 = !DILocation(line: 380, column: 33, scope: !13663, inlinedAt: !13475)
!13667 = !DILocation(line: 381, column: 6, scope: !13668, inlinedAt: !13475)
!13668 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 381, column: 6)
!13669 = !DILocation(line: 381, column: 11, scope: !13668, inlinedAt: !13475)
!13670 = !DILocation(line: 381, column: 6, scope: !13471, inlinedAt: !13475)
!13671 = !DILocation(line: 381, column: 33, scope: !13668, inlinedAt: !13475)
!13672 = !DILocation(line: 382, column: 2, scope: !13673, inlinedAt: !13475)
!13673 = distinct !DILexicalBlock(scope: !13674, file: !188, line: 382, column: 2)
!13674 = distinct !DILexicalBlock(scope: !13471, file: !188, line: 382, column: 2)
!13675 = !{i32 -2143287130, i32 -2143287101, i32 -2143287055, i32 -2143286997, i32 -2143286943, i32 -2143286889, i32 -2143286834, i32 -2143286803}
!13676 = !DILocation(line: 382, column: 2, scope: !13677, inlinedAt: !13475)
!13677 = distinct !DILexicalBlock(scope: !13678, file: !188, line: 382, column: 2)
!13678 = distinct !DILexicalBlock(scope: !13674, file: !188, line: 382, column: 2)
!13679 = !{i32 -2143286360, i32 -2143286353, i32 -2143286299, i32 -2143286268, i32 -2143286238}
!13680 = !DILocation(line: 382, column: 2, scope: !13678, inlinedAt: !13475)
!13681 = !DILocation(line: 386, column: 1, scope: !13471, inlinedAt: !13475)
!13682 = !DILocation(line: 547, column: 9, scope: !13454, inlinedAt: !13457)
!13683 = !DILocation(line: 549, column: 8, scope: !13684, inlinedAt: !13457)
!13684 = distinct !DILexicalBlock(scope: !13454, file: !188, line: 549, column: 7)
!13685 = !DILocation(line: 549, column: 7, scope: !13454, inlinedAt: !13457)
!13686 = !DILocation(line: 550, column: 4, scope: !13684, inlinedAt: !13457)
!13687 = !DILocation(line: 553, column: 33, scope: !13454, inlinedAt: !13457)
!13688 = !DILocation(line: 325, column: 6, scope: !13689, inlinedAt: !13469)
!13689 = distinct !DILexicalBlock(scope: !13465, file: !188, line: 325, column: 6)
!13690 = !DILocation(line: 325, column: 6, scope: !13465, inlinedAt: !13469)
!13691 = !DILocation(line: 326, column: 3, scope: !13689, inlinedAt: !13469)
!13692 = !DILocation(line: 332, column: 9, scope: !13465, inlinedAt: !13469)
!13693 = !DILocation(line: 332, column: 15, scope: !13465, inlinedAt: !13469)
!13694 = !DILocation(line: 332, column: 2, scope: !13465, inlinedAt: !13469)
!13695 = !DILocation(line: 336, column: 1, scope: !13465, inlinedAt: !13469)
!13696 = !DILocation(line: 553, column: 5, scope: !13454, inlinedAt: !13457)
!13697 = !DILocation(line: 553, column: 41, scope: !13454, inlinedAt: !13457)
!13698 = !DILocation(line: 554, column: 5, scope: !13454, inlinedAt: !13457)
!13699 = !DILocation(line: 554, column: 12, scope: !13454, inlinedAt: !13457)
!13700 = !DILocation(line: 448, column: 31, scope: !13449, inlinedAt: !13453)
!13701 = !DILocation(line: 448, column: 34, scope: !13449, inlinedAt: !13453)
!13702 = !DILocation(line: 448, column: 14, scope: !13449, inlinedAt: !13453)
!13703 = !DILocation(line: 450, column: 22, scope: !13449, inlinedAt: !13453)
!13704 = !DILocation(line: 450, column: 25, scope: !13449, inlinedAt: !13453)
!13705 = !DILocation(line: 450, column: 30, scope: !13449, inlinedAt: !13453)
!13706 = !DILocation(line: 450, column: 36, scope: !13449, inlinedAt: !13453)
!13707 = !DILocation(line: 450, column: 8, scope: !13449, inlinedAt: !13453)
!13708 = !DILocation(line: 450, column: 6, scope: !13449, inlinedAt: !13453)
!13709 = !DILocation(line: 451, column: 9, scope: !13449, inlinedAt: !13453)
!13710 = !DILocation(line: 552, column: 3, scope: !13454, inlinedAt: !13457)
!13711 = !DILocation(line: 557, column: 19, scope: !13456, inlinedAt: !13457)
!13712 = !DILocation(line: 557, column: 25, scope: !13456, inlinedAt: !13457)
!13713 = !DILocation(line: 557, column: 9, scope: !13456, inlinedAt: !13457)
!13714 = !DILocation(line: 557, column: 2, scope: !13456, inlinedAt: !13457)
!13715 = !DILocation(line: 558, column: 1, scope: !13456, inlinedAt: !13457)
!13716 = !DILocation(line: 664, column: 2, scope: !13445)
!13717 = distinct !DISubprogram(name: "__ab_c_size", scope: !13718, file: !13718, line: 301, type: !13719, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13718 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!13719 = !DISubroutineType(types: !13720)
!13720 = !{!409, !409, !409, !409}
!13721 = !DILocalVariable(name: "a", arg: 1, scope: !13717, file: !13718, line: 301, type: !409)
!13722 = !DILocation(line: 301, column: 54, scope: !13717)
!13723 = !DILocalVariable(name: "b", arg: 2, scope: !13717, file: !13718, line: 301, type: !409)
!13724 = !DILocation(line: 301, column: 64, scope: !13717)
!13725 = !DILocalVariable(name: "c", arg: 3, scope: !13717, file: !13718, line: 301, type: !409)
!13726 = !DILocation(line: 301, column: 74, scope: !13717)
!13727 = !DILocalVariable(name: "bytes", scope: !13717, file: !13718, line: 303, type: !409)
!13728 = !DILocation(line: 303, column: 9, scope: !13717)
!13729 = !DILocalVariable(name: "__a", scope: !13730, file: !13718, line: 305, type: !409)
!13730 = distinct !DILexicalBlock(scope: !13731, file: !13718, line: 305, column: 6)
!13731 = distinct !DILexicalBlock(scope: !13717, file: !13718, line: 305, column: 6)
!13732 = !DILocation(line: 305, column: 6, scope: !13730)
!13733 = !DILocalVariable(name: "__b", scope: !13730, file: !13718, line: 305, type: !409)
!13734 = !DILocalVariable(name: "__d", scope: !13730, file: !13718, line: 305, type: !13735)
!13735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !409, size: 64)
!13736 = !DILocation(line: 305, column: 6, scope: !13731)
!13737 = !DILocation(line: 305, column: 6, scope: !13717)
!13738 = !DILocation(line: 306, column: 3, scope: !13731)
!13739 = !DILocalVariable(name: "__a", scope: !13740, file: !13718, line: 307, type: !409)
!13740 = distinct !DILexicalBlock(scope: !13741, file: !13718, line: 307, column: 6)
!13741 = distinct !DILexicalBlock(scope: !13717, file: !13718, line: 307, column: 6)
!13742 = !DILocation(line: 307, column: 6, scope: !13740)
!13743 = !DILocalVariable(name: "__b", scope: !13740, file: !13718, line: 307, type: !409)
!13744 = !DILocalVariable(name: "__d", scope: !13740, file: !13718, line: 307, type: !13735)
!13745 = !DILocation(line: 307, column: 6, scope: !13741)
!13746 = !DILocation(line: 307, column: 6, scope: !13717)
!13747 = !DILocation(line: 308, column: 3, scope: !13741)
!13748 = !DILocation(line: 310, column: 9, scope: !13717)
!13749 = !DILocation(line: 310, column: 2, scope: !13717)
!13750 = !DILocation(line: 311, column: 1, scope: !13717)
!13751 = distinct !DISubprogram(name: "trace_xhci_urb_enqueue", scope: !5835, file: !5835, line: 303, type: !4876, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13752 = !DILocalVariable(name: "urb", arg: 1, scope: !13751, file: !5835, line: 303, type: !4825)
!13753 = !DILocation(line: 303, column: 1, scope: !13751)
!13754 = distinct !DISubprogram(name: "xhci_check_maxpacket", scope: !3, file: !3, line: 1387, type: !13755, scopeLine: 1389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13755 = !DISubroutineType(types: !13756)
!13756 = !{!265, !4497, !7, !7, !4825}
!13757 = !DILocalVariable(name: "xhci", arg: 1, scope: !13754, file: !3, line: 1387, type: !4497)
!13758 = !DILocation(line: 1387, column: 50, scope: !13754)
!13759 = !DILocalVariable(name: "slot_id", arg: 2, scope: !13754, file: !3, line: 1387, type: !7)
!13760 = !DILocation(line: 1387, column: 69, scope: !13754)
!13761 = !DILocalVariable(name: "ep_index", arg: 3, scope: !13754, file: !3, line: 1388, type: !7)
!13762 = !DILocation(line: 1388, column: 16, scope: !13754)
!13763 = !DILocalVariable(name: "urb", arg: 4, scope: !13754, file: !3, line: 1388, type: !4825)
!13764 = !DILocation(line: 1388, column: 38, scope: !13754)
!13765 = !DILocalVariable(name: "out_ctx", scope: !13754, file: !3, line: 1390, type: !5251)
!13766 = !DILocation(line: 1390, column: 29, scope: !13754)
!13767 = !DILocalVariable(name: "ctrl_ctx", scope: !13754, file: !3, line: 1391, type: !8108)
!13768 = !DILocation(line: 1391, column: 33, scope: !13754)
!13769 = !DILocalVariable(name: "ep_ctx", scope: !13754, file: !3, line: 1392, type: !8119)
!13770 = !DILocation(line: 1392, column: 22, scope: !13754)
!13771 = !DILocalVariable(name: "command", scope: !13754, file: !3, line: 1393, type: !5247)
!13772 = !DILocation(line: 1393, column: 23, scope: !13754)
!13773 = !DILocalVariable(name: "max_packet_size", scope: !13754, file: !3, line: 1394, type: !265)
!13774 = !DILocation(line: 1394, column: 6, scope: !13754)
!13775 = !DILocalVariable(name: "hw_max_packet_size", scope: !13754, file: !3, line: 1395, type: !265)
!13776 = !DILocation(line: 1395, column: 6, scope: !13754)
!13777 = !DILocalVariable(name: "ret", scope: !13754, file: !3, line: 1396, type: !265)
!13778 = !DILocation(line: 1396, column: 6, scope: !13754)
!13779 = !DILocation(line: 1398, column: 12, scope: !13754)
!13780 = !DILocation(line: 1398, column: 18, scope: !13754)
!13781 = !DILocation(line: 1398, column: 23, scope: !13754)
!13782 = !DILocation(line: 1398, column: 33, scope: !13754)
!13783 = !DILocation(line: 1398, column: 10, scope: !13754)
!13784 = !DILocation(line: 1399, column: 27, scope: !13754)
!13785 = !DILocation(line: 1399, column: 33, scope: !13754)
!13786 = !DILocation(line: 1399, column: 42, scope: !13754)
!13787 = !DILocation(line: 1399, column: 11, scope: !13754)
!13788 = !DILocation(line: 1399, column: 9, scope: !13754)
!13789 = !DILocation(line: 1400, column: 23, scope: !13754)
!13790 = !DILocation(line: 1400, column: 21, scope: !13754)
!13791 = !DILocation(line: 1401, column: 39, scope: !13754)
!13792 = !DILocation(line: 1401, column: 44, scope: !13754)
!13793 = !DILocation(line: 1401, column: 49, scope: !13754)
!13794 = !DILocation(line: 1401, column: 53, scope: !13754)
!13795 = !DILocation(line: 1401, column: 20, scope: !13754)
!13796 = !DILocation(line: 1401, column: 18, scope: !13754)
!13797 = !DILocation(line: 1402, column: 6, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 1402, column: 6)
!13799 = !DILocation(line: 1402, column: 28, scope: !13798)
!13800 = !DILocation(line: 1402, column: 25, scope: !13798)
!13801 = !DILocation(line: 1402, column: 6, scope: !13754)
!13802 = !DILocation(line: 1403, column: 18, scope: !13803)
!13803 = distinct !DILexicalBlock(scope: !13798, file: !3, line: 1402, column: 45)
!13804 = !DILocation(line: 1403, column: 3, scope: !13803)
!13805 = !DILocation(line: 1405, column: 18, scope: !13803)
!13806 = !DILocation(line: 1407, column: 5, scope: !13803)
!13807 = !DILocation(line: 1405, column: 3, scope: !13803)
!13808 = !DILocation(line: 1408, column: 18, scope: !13803)
!13809 = !DILocation(line: 1410, column: 5, scope: !13803)
!13810 = !DILocation(line: 1408, column: 3, scope: !13803)
!13811 = !DILocation(line: 1411, column: 18, scope: !13803)
!13812 = !DILocation(line: 1411, column: 3, scope: !13803)
!13813 = !DILocation(line: 1419, column: 32, scope: !13803)
!13814 = !DILocation(line: 1419, column: 13, scope: !13803)
!13815 = !DILocation(line: 1419, column: 11, scope: !13803)
!13816 = !DILocation(line: 1420, column: 8, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13803, file: !3, line: 1420, column: 7)
!13818 = !DILocation(line: 1420, column: 7, scope: !13803)
!13819 = !DILocation(line: 1421, column: 4, scope: !13817)
!13820 = !DILocation(line: 1423, column: 21, scope: !13803)
!13821 = !DILocation(line: 1423, column: 27, scope: !13803)
!13822 = !DILocation(line: 1423, column: 32, scope: !13803)
!13823 = !DILocation(line: 1423, column: 42, scope: !13803)
!13824 = !DILocation(line: 1423, column: 3, scope: !13803)
!13825 = !DILocation(line: 1423, column: 12, scope: !13803)
!13826 = !DILocation(line: 1423, column: 19, scope: !13803)
!13827 = !DILocation(line: 1424, column: 41, scope: !13803)
!13828 = !DILocation(line: 1424, column: 50, scope: !13803)
!13829 = !DILocation(line: 1424, column: 14, scope: !13803)
!13830 = !DILocation(line: 1424, column: 12, scope: !13803)
!13831 = !DILocation(line: 1425, column: 8, scope: !13832)
!13832 = distinct !DILexicalBlock(scope: !13803, file: !3, line: 1425, column: 7)
!13833 = !DILocation(line: 1425, column: 7, scope: !13803)
!13834 = !DILocation(line: 1426, column: 4, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13832, file: !3, line: 1425, column: 18)
!13836 = !DILocation(line: 1428, column: 8, scope: !13835)
!13837 = !DILocation(line: 1429, column: 4, scope: !13835)
!13838 = !DILocation(line: 1432, column: 22, scope: !13803)
!13839 = !DILocation(line: 1432, column: 28, scope: !13803)
!13840 = !DILocation(line: 1432, column: 34, scope: !13803)
!13841 = !DILocation(line: 1432, column: 39, scope: !13803)
!13842 = !DILocation(line: 1432, column: 49, scope: !13803)
!13843 = !DILocation(line: 1433, column: 5, scope: !13803)
!13844 = !DILocation(line: 1433, column: 11, scope: !13803)
!13845 = !DILocation(line: 1433, column: 16, scope: !13803)
!13846 = !DILocation(line: 1433, column: 26, scope: !13803)
!13847 = !DILocation(line: 1433, column: 35, scope: !13803)
!13848 = !DILocation(line: 1432, column: 3, scope: !13803)
!13849 = !DILocation(line: 1435, column: 28, scope: !13803)
!13850 = !DILocation(line: 1435, column: 34, scope: !13803)
!13851 = !DILocation(line: 1435, column: 43, scope: !13803)
!13852 = !DILocation(line: 1435, column: 51, scope: !13803)
!13853 = !DILocation(line: 1435, column: 12, scope: !13803)
!13854 = !DILocation(line: 1435, column: 10, scope: !13803)
!13855 = !DILocation(line: 1436, column: 3, scope: !13803)
!13856 = !DILocation(line: 1436, column: 11, scope: !13803)
!13857 = !DILocation(line: 1436, column: 19, scope: !13803)
!13858 = !DILocation(line: 1437, column: 3, scope: !13803)
!13859 = !DILocation(line: 1437, column: 11, scope: !13803)
!13860 = !DILocation(line: 1437, column: 20, scope: !13803)
!13861 = !DILocation(line: 1438, column: 23, scope: !13803)
!13862 = !DILocation(line: 1438, column: 3, scope: !13803)
!13863 = !DILocation(line: 1438, column: 11, scope: !13803)
!13864 = !DILocation(line: 1438, column: 20, scope: !13803)
!13865 = !DILocation(line: 1440, column: 3, scope: !13803)
!13866 = !DILocation(line: 1440, column: 13, scope: !13803)
!13867 = !DILocation(line: 1440, column: 23, scope: !13803)
!13868 = !DILocation(line: 1441, column: 3, scope: !13803)
!13869 = !DILocation(line: 1441, column: 13, scope: !13803)
!13870 = !DILocation(line: 1441, column: 24, scope: !13803)
!13871 = !DILocation(line: 1443, column: 33, scope: !13803)
!13872 = !DILocation(line: 1443, column: 39, scope: !13803)
!13873 = !DILocation(line: 1443, column: 44, scope: !13803)
!13874 = !DILocation(line: 1443, column: 49, scope: !13803)
!13875 = !DILocation(line: 1443, column: 9, scope: !13803)
!13876 = !DILocation(line: 1443, column: 7, scope: !13803)
!13877 = !DILocation(line: 1449, column: 3, scope: !13803)
!13878 = !DILocation(line: 1449, column: 13, scope: !13803)
!13879 = !DILocation(line: 1449, column: 23, scope: !13803)
!13880 = !DILabel(scope: !13803, name: "command_cleanup", file: !3, line: 1450)
!13881 = !DILocation(line: 1450, column: 1, scope: !13803)
!13882 = !DILocation(line: 1451, column: 9, scope: !13803)
!13883 = !DILocation(line: 1451, column: 18, scope: !13803)
!13884 = !DILocation(line: 1451, column: 3, scope: !13803)
!13885 = !DILocation(line: 1452, column: 9, scope: !13803)
!13886 = !DILocation(line: 1452, column: 3, scope: !13803)
!13887 = !DILocation(line: 1453, column: 2, scope: !13803)
!13888 = !DILocation(line: 1454, column: 9, scope: !13754)
!13889 = !DILocation(line: 1454, column: 2, scope: !13754)
!13890 = !DILocation(line: 1455, column: 1, scope: !13754)
!13891 = distinct !DISubprogram(name: "usb_endpoint_type", scope: !94, file: !94, line: 481, type: !7901, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13892 = !DILocalVariable(name: "epd", arg: 1, scope: !13891, file: !94, line: 481, type: !7903)
!13893 = !DILocation(line: 481, column: 75, scope: !13891)
!13894 = !DILocation(line: 483, column: 9, scope: !13891)
!13895 = !DILocation(line: 483, column: 14, scope: !13891)
!13896 = !DILocation(line: 483, column: 27, scope: !13891)
!13897 = !DILocation(line: 483, column: 2, scope: !13891)
!13898 = distinct !DISubprogram(name: "usb_endpoint_xfer_bulk", scope: !94, file: !94, line: 515, type: !7901, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13899 = !DILocalVariable(name: "epd", arg: 1, scope: !13898, file: !94, line: 516, type: !7903)
!13900 = !DILocation(line: 516, column: 43, scope: !13898)
!13901 = !DILocation(line: 518, column: 11, scope: !13898)
!13902 = !DILocation(line: 518, column: 16, scope: !13898)
!13903 = !DILocation(line: 518, column: 29, scope: !13898)
!13904 = !DILocation(line: 518, column: 59, scope: !13898)
!13905 = !DILocation(line: 518, column: 2, scope: !13898)
!13906 = distinct !DISubprogram(name: "usb_endpoint_dir_out", scope: !94, file: !94, line: 503, type: !7901, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13907 = !DILocalVariable(name: "epd", arg: 1, scope: !13906, file: !94, line: 504, type: !7903)
!13908 = !DILocation(line: 504, column: 43, scope: !13906)
!13909 = !DILocation(line: 506, column: 11, scope: !13906)
!13910 = !DILocation(line: 506, column: 16, scope: !13906)
!13911 = !DILocation(line: 506, column: 33, scope: !13906)
!13912 = !DILocation(line: 506, column: 58, scope: !13906)
!13913 = !DILocation(line: 506, column: 2, scope: !13906)
!13914 = distinct !DISubprogram(name: "get_order", scope: !13915, file: !13915, line: 29, type: !13916, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13915 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!13916 = !DISubroutineType(types: !13917)
!13917 = !{!265, !248}
!13918 = !DILocalVariable(name: "x", arg: 1, scope: !13919, file: !6830, line: 366, type: !240)
!13919 = distinct !DISubprogram(name: "fls64", scope: !6830, file: !6830, line: 366, type: !13920, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13920 = !DISubroutineType(types: !13921)
!13921 = !{!265, !240}
!13922 = !DILocation(line: 366, column: 40, scope: !13919, inlinedAt: !13923)
!13923 = distinct !DILocation(line: 46, column: 9, scope: !13914)
!13924 = !DILocalVariable(name: "bitpos", scope: !13919, file: !6830, line: 368, type: !265)
!13925 = !DILocation(line: 368, column: 6, scope: !13919, inlinedAt: !13923)
!13926 = !DILocalVariable(name: "size", arg: 1, scope: !13914, file: !13915, line: 29, type: !248)
!13927 = !DILocation(line: 29, column: 63, scope: !13914)
!13928 = !DILocation(line: 31, column: 27, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13914, file: !13915, line: 31, column: 6)
!13930 = !DILocation(line: 31, column: 6, scope: !13929)
!13931 = !DILocation(line: 31, column: 6, scope: !13914)
!13932 = !DILocation(line: 32, column: 8, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13934, file: !13915, line: 32, column: 7)
!13934 = distinct !DILexicalBlock(scope: !13929, file: !13915, line: 31, column: 34)
!13935 = !DILocation(line: 32, column: 7, scope: !13934)
!13936 = !DILocation(line: 33, column: 4, scope: !13933)
!13937 = !DILocation(line: 35, column: 7, scope: !13938)
!13938 = distinct !DILexicalBlock(scope: !13934, file: !13915, line: 35, column: 7)
!13939 = !DILocation(line: 35, column: 12, scope: !13938)
!13940 = !DILocation(line: 35, column: 7, scope: !13934)
!13941 = !DILocation(line: 36, column: 4, scope: !13938)
!13942 = !DILocation(line: 38, column: 10, scope: !13934)
!13943 = !DILocation(line: 38, column: 28, scope: !13934)
!13944 = !DILocation(line: 38, column: 41, scope: !13934)
!13945 = !DILocation(line: 38, column: 3, scope: !13934)
!13946 = !DILocation(line: 41, column: 6, scope: !13914)
!13947 = !DILocation(line: 42, column: 7, scope: !13914)
!13948 = !DILocation(line: 46, column: 15, scope: !13914)
!13949 = !DILocation(line: 374, column: 2, scope: !13919, inlinedAt: !13923)
!13950 = !DILocation(line: 376, column: 14, scope: !13919, inlinedAt: !13923)
!13951 = !{i32 910252}
!13952 = !DILocation(line: 377, column: 9, scope: !13919, inlinedAt: !13923)
!13953 = !DILocation(line: 377, column: 16, scope: !13919, inlinedAt: !13923)
!13954 = !DILocation(line: 46, column: 2, scope: !13914)
!13955 = !DILocation(line: 48, column: 1, scope: !13914)
!13956 = distinct !DISubprogram(name: "__ilog2_u64", scope: !13957, file: !13957, line: 30, type: !13958, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13957 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!13958 = !DISubroutineType(types: !13959)
!13959 = !{!265, !239}
!13960 = !DILocation(line: 366, column: 40, scope: !13919, inlinedAt: !13961)
!13961 = distinct !DILocation(line: 32, column: 9, scope: !13956)
!13962 = !DILocation(line: 368, column: 6, scope: !13919, inlinedAt: !13961)
!13963 = !DILocalVariable(name: "n", arg: 1, scope: !13956, file: !13957, line: 30, type: !239)
!13964 = !DILocation(line: 30, column: 21, scope: !13956)
!13965 = !DILocation(line: 32, column: 15, scope: !13956)
!13966 = !DILocation(line: 374, column: 2, scope: !13919, inlinedAt: !13961)
!13967 = !DILocation(line: 376, column: 14, scope: !13919, inlinedAt: !13961)
!13968 = !DILocation(line: 377, column: 9, scope: !13919, inlinedAt: !13961)
!13969 = !DILocation(line: 377, column: 16, scope: !13919, inlinedAt: !13961)
!13970 = !DILocation(line: 32, column: 18, scope: !13956)
!13971 = !DILocation(line: 32, column: 2, scope: !13956)
!13972 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !13973, file: !13973, line: 137, type: !13974, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13973 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!13974 = !DISubroutineType(types: !13975)
!13975 = !{!208, !1060, !2845, !409, !875}
!13976 = !DILocalVariable(name: "s", arg: 1, scope: !13972, file: !13973, line: 137, type: !1060)
!13977 = !DILocation(line: 137, column: 54, scope: !13972)
!13978 = !DILocalVariable(name: "object", arg: 2, scope: !13972, file: !13973, line: 137, type: !2845)
!13979 = !DILocation(line: 137, column: 69, scope: !13972)
!13980 = !DILocalVariable(name: "size", arg: 3, scope: !13972, file: !13973, line: 138, type: !409)
!13981 = !DILocation(line: 138, column: 12, scope: !13972)
!13982 = !DILocalVariable(name: "flags", arg: 4, scope: !13972, file: !13973, line: 138, type: !875)
!13983 = !DILocation(line: 138, column: 24, scope: !13972)
!13984 = !DILocation(line: 140, column: 17, scope: !13972)
!13985 = !DILocation(line: 140, column: 2, scope: !13972)
!13986 = distinct !DISubprogram(name: "__must_check_overflow", scope: !13718, file: !13718, line: 52, type: !13987, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13987 = !DISubroutineType(types: !13988)
!13988 = !{!569, !569}
!13989 = !DILocalVariable(name: "overflow", arg: 1, scope: !13986, file: !13718, line: 52, type: !569)
!13990 = !DILocation(line: 52, column: 60, scope: !13986)
!13991 = !DILocation(line: 54, column: 9, scope: !13986)
!13992 = !DILocation(line: 54, column: 2, scope: !13986)
!13993 = distinct !DISubprogram(name: "trace_xhci_dbg_context_change", scope: !5835, file: !5835, line: 45, type: !5836, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13994 = !DILocalVariable(name: "vaf", arg: 1, scope: !13993, file: !5835, line: 45, type: !5838)
!13995 = !DILocation(line: 45, column: 1, scope: !13993)
!13996 = distinct !DISubprogram(name: "xhci_configure_endpoint", scope: !3, file: !3, line: 2744, type: !13997, scopeLine: 2748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!13997 = !DISubroutineType(types: !13998)
!13998 = !{!265, !4497, !4526, !5247, !569, !569}
!13999 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !14000)
!14000 = distinct !DILocation(line: 2827, column: 3, scope: !14001)
!14001 = distinct !DILexicalBlock(scope: !14002, file: !3, line: 2827, column: 3)
!14002 = distinct !DILexicalBlock(scope: !14003, file: !3, line: 2827, column: 3)
!14003 = distinct !DILexicalBlock(scope: !14004, file: !3, line: 2827, column: 3)
!14004 = distinct !DILexicalBlock(scope: !14005, file: !3, line: 2827, column: 3)
!14005 = distinct !DILexicalBlock(scope: !14006, file: !3, line: 2827, column: 3)
!14006 = distinct !DILexicalBlock(scope: !14007, file: !3, line: 2826, column: 44)
!14007 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 2826, column: 6)
!14008 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !14009)
!14009 = distinct !DILocation(line: 2814, column: 2, scope: !13996)
!14010 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !14009)
!14011 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !14012)
!14012 = distinct !DILocation(line: 2808, column: 3, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14014, file: !3, line: 2805, column: 15)
!14014 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 2805, column: 6)
!14015 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !14012)
!14016 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !14017)
!14017 = distinct !DILocation(line: 2787, column: 3, scope: !14018)
!14018 = distinct !DILexicalBlock(scope: !14019, file: !3, line: 2784, column: 63)
!14019 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 2783, column: 6)
!14020 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !14017)
!14021 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !14022)
!14022 = distinct !DILocation(line: 2777, column: 3, scope: !14023)
!14023 = distinct !DILexicalBlock(scope: !14024, file: !3, line: 2776, column: 49)
!14024 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 2775, column: 6)
!14025 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !14022)
!14026 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !14027)
!14027 = distinct !DILocation(line: 2769, column: 3, scope: !14028)
!14028 = distinct !DILexicalBlock(scope: !14029, file: !3, line: 2768, column: 17)
!14029 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 2768, column: 6)
!14030 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !14027)
!14031 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !14032)
!14032 = distinct !DILocation(line: 2761, column: 3, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !14034, file: !3, line: 2760, column: 42)
!14034 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 2760, column: 6)
!14035 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !14032)
!14036 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !14037)
!14037 = distinct !DILocation(line: 2835, column: 3, scope: !14006)
!14038 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !14037)
!14039 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !14040)
!14040 = distinct !DILocation(line: 2758, column: 2, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14042, file: !3, line: 2758, column: 2)
!14042 = distinct !DILexicalBlock(scope: !14043, file: !3, line: 2758, column: 2)
!14043 = distinct !DILexicalBlock(scope: !14044, file: !3, line: 2758, column: 2)
!14044 = distinct !DILexicalBlock(scope: !14045, file: !3, line: 2758, column: 2)
!14045 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 2758, column: 2)
!14046 = !DILocalVariable(name: "xhci", arg: 1, scope: !13996, file: !3, line: 2744, type: !4497)
!14047 = !DILocation(line: 2744, column: 53, scope: !13996)
!14048 = !DILocalVariable(name: "udev", arg: 2, scope: !13996, file: !3, line: 2745, type: !4526)
!14049 = !DILocation(line: 2745, column: 22, scope: !13996)
!14050 = !DILocalVariable(name: "command", arg: 3, scope: !13996, file: !3, line: 2746, type: !5247)
!14051 = !DILocation(line: 2746, column: 24, scope: !13996)
!14052 = !DILocalVariable(name: "ctx_change", arg: 4, scope: !13996, file: !3, line: 2747, type: !569)
!14053 = !DILocation(line: 2747, column: 8, scope: !13996)
!14054 = !DILocalVariable(name: "must_succeed", arg: 5, scope: !13996, file: !3, line: 2747, type: !569)
!14055 = !DILocation(line: 2747, column: 25, scope: !13996)
!14056 = !DILocalVariable(name: "ret", scope: !13996, file: !3, line: 2749, type: !265)
!14057 = !DILocation(line: 2749, column: 6, scope: !13996)
!14058 = !DILocalVariable(name: "flags", scope: !13996, file: !3, line: 2750, type: !248)
!14059 = !DILocation(line: 2750, column: 16, scope: !13996)
!14060 = !DILocalVariable(name: "ctrl_ctx", scope: !13996, file: !3, line: 2751, type: !8108)
!14061 = !DILocation(line: 2751, column: 33, scope: !13996)
!14062 = !DILocalVariable(name: "virt_dev", scope: !13996, file: !3, line: 2752, type: !5290)
!14063 = !DILocation(line: 2752, column: 27, scope: !13996)
!14064 = !DILocalVariable(name: "slot_ctx", scope: !13996, file: !3, line: 2753, type: !8442)
!14065 = !DILocation(line: 2753, column: 24, scope: !13996)
!14066 = !DILocation(line: 2755, column: 7, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 2755, column: 6)
!14068 = !DILocation(line: 2755, column: 6, scope: !13996)
!14069 = !DILocation(line: 2756, column: 3, scope: !14067)
!14070 = !DILocation(line: 2758, column: 2, scope: !13996)
!14071 = !DILocation(line: 2758, column: 2, scope: !14045)
!14072 = !DILocalVariable(name: "__dummy", scope: !14073, file: !3, line: 2758, type: !248)
!14073 = distinct !DILexicalBlock(scope: !14044, file: !3, line: 2758, column: 2)
!14074 = !DILocation(line: 2758, column: 2, scope: !14073)
!14075 = !DILocalVariable(name: "__dummy2", scope: !14073, file: !3, line: 2758, type: !248)
!14076 = !DILocation(line: 2758, column: 2, scope: !14044)
!14077 = !DILocation(line: 2758, column: 2, scope: !14043)
!14078 = !DILocation(line: 2758, column: 2, scope: !14079)
!14079 = distinct !DILexicalBlock(scope: !14043, file: !3, line: 2758, column: 2)
!14080 = !DILocalVariable(name: "__dummy", scope: !14081, file: !3, line: 2758, type: !248)
!14081 = distinct !DILexicalBlock(scope: !14082, file: !3, line: 2758, column: 2)
!14082 = distinct !DILexicalBlock(scope: !14079, file: !3, line: 2758, column: 2)
!14083 = !DILocation(line: 2758, column: 2, scope: !14081)
!14084 = !DILocalVariable(name: "__dummy2", scope: !14081, file: !3, line: 2758, type: !248)
!14085 = !DILocation(line: 2758, column: 2, scope: !14082)
!14086 = !DILocation(line: 2758, column: 2, scope: !14042)
!14087 = !{i32 -2140655964}
!14088 = !DILocation(line: 2758, column: 2, scope: !14041)
!14089 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !14040)
!14090 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !14040)
!14091 = !DILocation(line: 2760, column: 6, scope: !14034)
!14092 = !DILocation(line: 2760, column: 12, scope: !14034)
!14093 = !DILocation(line: 2760, column: 22, scope: !14034)
!14094 = !DILocation(line: 2760, column: 6, scope: !13996)
!14095 = !DILocation(line: 2761, column: 27, scope: !14033)
!14096 = !DILocation(line: 2761, column: 33, scope: !14033)
!14097 = !DILocation(line: 2761, column: 39, scope: !14033)
!14098 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !14032)
!14099 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !14032)
!14100 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !14032)
!14101 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !14032)
!14102 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !14032)
!14103 = !DILocation(line: 2762, column: 3, scope: !14033)
!14104 = !DILocation(line: 2765, column: 13, scope: !13996)
!14105 = !DILocation(line: 2765, column: 19, scope: !13996)
!14106 = !DILocation(line: 2765, column: 24, scope: !13996)
!14107 = !DILocation(line: 2765, column: 30, scope: !13996)
!14108 = !DILocation(line: 2765, column: 11, scope: !13996)
!14109 = !DILocation(line: 2767, column: 40, scope: !13996)
!14110 = !DILocation(line: 2767, column: 49, scope: !13996)
!14111 = !DILocation(line: 2767, column: 13, scope: !13996)
!14112 = !DILocation(line: 2767, column: 11, scope: !13996)
!14113 = !DILocation(line: 2768, column: 7, scope: !14029)
!14114 = !DILocation(line: 2768, column: 6, scope: !13996)
!14115 = !DILocation(line: 2769, column: 27, scope: !14028)
!14116 = !DILocation(line: 2769, column: 33, scope: !14028)
!14117 = !DILocation(line: 2769, column: 39, scope: !14028)
!14118 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !14027)
!14119 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !14027)
!14120 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !14027)
!14121 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !14027)
!14122 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !14027)
!14123 = !DILocation(line: 2770, column: 3, scope: !14028)
!14124 = !DILocation(line: 2772, column: 3, scope: !14028)
!14125 = !DILocation(line: 2775, column: 7, scope: !14024)
!14126 = !DILocation(line: 2775, column: 13, scope: !14024)
!14127 = !DILocation(line: 2775, column: 20, scope: !14024)
!14128 = !DILocation(line: 2775, column: 43, scope: !14024)
!14129 = !DILocation(line: 2776, column: 32, scope: !14024)
!14130 = !DILocation(line: 2776, column: 38, scope: !14024)
!14131 = !DILocation(line: 2776, column: 4, scope: !14024)
!14132 = !DILocation(line: 2775, column: 6, scope: !13996)
!14133 = !DILocation(line: 2777, column: 27, scope: !14023)
!14134 = !DILocation(line: 2777, column: 33, scope: !14023)
!14135 = !DILocation(line: 2777, column: 39, scope: !14023)
!14136 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !14022)
!14137 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !14022)
!14138 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !14022)
!14139 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !14022)
!14140 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !14022)
!14141 = !DILocation(line: 2778, column: 3, scope: !14023)
!14142 = !DILocation(line: 2781, column: 3, scope: !14023)
!14143 = !DILocation(line: 2783, column: 7, scope: !14019)
!14144 = !DILocation(line: 2783, column: 13, scope: !14019)
!14145 = !DILocation(line: 2783, column: 20, scope: !14019)
!14146 = !DILocation(line: 2783, column: 43, scope: !14019)
!14147 = !DILocation(line: 2784, column: 29, scope: !14019)
!14148 = !DILocation(line: 2784, column: 35, scope: !14019)
!14149 = !DILocation(line: 2784, column: 45, scope: !14019)
!14150 = !DILocation(line: 2784, column: 54, scope: !14019)
!14151 = !DILocation(line: 2784, column: 6, scope: !14019)
!14152 = !DILocation(line: 2783, column: 6, scope: !13996)
!14153 = !DILocation(line: 2785, column: 8, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14018, file: !3, line: 2785, column: 7)
!14155 = !DILocation(line: 2785, column: 14, scope: !14154)
!14156 = !DILocation(line: 2785, column: 21, scope: !14154)
!14157 = !DILocation(line: 2785, column: 7, scope: !14018)
!14158 = !DILocation(line: 2786, column: 29, scope: !14154)
!14159 = !DILocation(line: 2786, column: 35, scope: !14154)
!14160 = !DILocation(line: 2786, column: 4, scope: !14154)
!14161 = !DILocation(line: 2787, column: 27, scope: !14018)
!14162 = !DILocation(line: 2787, column: 33, scope: !14018)
!14163 = !DILocation(line: 2787, column: 39, scope: !14018)
!14164 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !14017)
!14165 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !14017)
!14166 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !14017)
!14167 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !14017)
!14168 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !14017)
!14169 = !DILocation(line: 2788, column: 3, scope: !14018)
!14170 = !DILocation(line: 2789, column: 3, scope: !14018)
!14171 = !DILocation(line: 2792, column: 31, scope: !13996)
!14172 = !DILocation(line: 2792, column: 37, scope: !13996)
!14173 = !DILocation(line: 2792, column: 46, scope: !13996)
!14174 = !DILocation(line: 2792, column: 13, scope: !13996)
!14175 = !DILocation(line: 2792, column: 11, scope: !13996)
!14176 = !DILocation(line: 2794, column: 41, scope: !13996)
!14177 = !DILocation(line: 2794, column: 2, scope: !13996)
!14178 = !DILocation(line: 2795, column: 32, scope: !13996)
!14179 = !DILocation(line: 2795, column: 2, scope: !13996)
!14180 = !DILocation(line: 2797, column: 7, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 2797, column: 6)
!14182 = !DILocation(line: 2797, column: 6, scope: !13996)
!14183 = !DILocation(line: 2798, column: 39, scope: !14181)
!14184 = !DILocation(line: 2798, column: 45, scope: !14181)
!14185 = !DILocation(line: 2799, column: 5, scope: !14181)
!14186 = !DILocation(line: 2799, column: 14, scope: !14181)
!14187 = !DILocation(line: 2799, column: 22, scope: !14181)
!14188 = !DILocation(line: 2800, column: 5, scope: !14181)
!14189 = !DILocation(line: 2800, column: 11, scope: !14181)
!14190 = !DILocation(line: 2800, column: 20, scope: !14181)
!14191 = !DILocation(line: 2798, column: 9, scope: !14181)
!14192 = !DILocation(line: 2798, column: 7, scope: !14181)
!14193 = !DILocation(line: 2798, column: 3, scope: !14181)
!14194 = !DILocation(line: 2802, column: 37, scope: !14181)
!14195 = !DILocation(line: 2802, column: 43, scope: !14181)
!14196 = !DILocation(line: 2803, column: 5, scope: !14181)
!14197 = !DILocation(line: 2803, column: 14, scope: !14181)
!14198 = !DILocation(line: 2803, column: 22, scope: !14181)
!14199 = !DILocation(line: 2804, column: 5, scope: !14181)
!14200 = !DILocation(line: 2804, column: 11, scope: !14181)
!14201 = !DILocation(line: 2804, column: 20, scope: !14181)
!14202 = !DILocation(line: 2802, column: 9, scope: !14181)
!14203 = !DILocation(line: 2802, column: 7, scope: !14181)
!14204 = !DILocation(line: 2805, column: 6, scope: !14014)
!14205 = !DILocation(line: 2805, column: 10, scope: !14014)
!14206 = !DILocation(line: 2805, column: 6, scope: !13996)
!14207 = !DILocation(line: 2806, column: 8, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14013, file: !3, line: 2806, column: 7)
!14209 = !DILocation(line: 2806, column: 14, scope: !14208)
!14210 = !DILocation(line: 2806, column: 21, scope: !14208)
!14211 = !DILocation(line: 2806, column: 7, scope: !14013)
!14212 = !DILocation(line: 2807, column: 29, scope: !14208)
!14213 = !DILocation(line: 2807, column: 35, scope: !14208)
!14214 = !DILocation(line: 2807, column: 4, scope: !14208)
!14215 = !DILocation(line: 2808, column: 27, scope: !14013)
!14216 = !DILocation(line: 2808, column: 33, scope: !14013)
!14217 = !DILocation(line: 2808, column: 39, scope: !14013)
!14218 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !14012)
!14219 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !14012)
!14220 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !14012)
!14221 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !14012)
!14222 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !14012)
!14223 = !DILocation(line: 2809, column: 18, scope: !14013)
!14224 = !DILocation(line: 2809, column: 3, scope: !14013)
!14225 = !DILocation(line: 2811, column: 3, scope: !14013)
!14226 = !DILocation(line: 2813, column: 19, scope: !13996)
!14227 = !DILocation(line: 2813, column: 2, scope: !13996)
!14228 = !DILocation(line: 2814, column: 26, scope: !13996)
!14229 = !DILocation(line: 2814, column: 32, scope: !13996)
!14230 = !DILocation(line: 2814, column: 38, scope: !13996)
!14231 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !14009)
!14232 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !14009)
!14233 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !14009)
!14234 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !14009)
!14235 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !14009)
!14236 = !DILocation(line: 2817, column: 22, scope: !13996)
!14237 = !DILocation(line: 2817, column: 31, scope: !13996)
!14238 = !DILocation(line: 2817, column: 2, scope: !13996)
!14239 = !DILocation(line: 2819, column: 7, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !13996, file: !3, line: 2819, column: 6)
!14241 = !DILocation(line: 2819, column: 6, scope: !13996)
!14242 = !DILocation(line: 2820, column: 40, scope: !14240)
!14243 = !DILocation(line: 2820, column: 46, scope: !14240)
!14244 = !DILocation(line: 2821, column: 13, scope: !14240)
!14245 = !DILocation(line: 2821, column: 22, scope: !14240)
!14246 = !DILocation(line: 2820, column: 9, scope: !14240)
!14247 = !DILocation(line: 2820, column: 7, scope: !14240)
!14248 = !DILocation(line: 2820, column: 3, scope: !14240)
!14249 = !DILocation(line: 2823, column: 38, scope: !14240)
!14250 = !DILocation(line: 2823, column: 44, scope: !14240)
!14251 = !DILocation(line: 2824, column: 11, scope: !14240)
!14252 = !DILocation(line: 2824, column: 20, scope: !14240)
!14253 = !DILocation(line: 2823, column: 9, scope: !14240)
!14254 = !DILocation(line: 2823, column: 7, scope: !14240)
!14255 = !DILocation(line: 2826, column: 7, scope: !14007)
!14256 = !DILocation(line: 2826, column: 13, scope: !14007)
!14257 = !DILocation(line: 2826, column: 20, scope: !14007)
!14258 = !DILocation(line: 2826, column: 6, scope: !13996)
!14259 = !DILocation(line: 2827, column: 3, scope: !14006)
!14260 = !DILocation(line: 2827, column: 3, scope: !14005)
!14261 = !DILocalVariable(name: "__dummy", scope: !14262, file: !3, line: 2827, type: !248)
!14262 = distinct !DILexicalBlock(scope: !14004, file: !3, line: 2827, column: 3)
!14263 = !DILocation(line: 2827, column: 3, scope: !14262)
!14264 = !DILocalVariable(name: "__dummy2", scope: !14262, file: !3, line: 2827, type: !248)
!14265 = !DILocation(line: 2827, column: 3, scope: !14004)
!14266 = !DILocation(line: 2827, column: 3, scope: !14003)
!14267 = !DILocation(line: 2827, column: 3, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14003, file: !3, line: 2827, column: 3)
!14269 = !DILocalVariable(name: "__dummy", scope: !14270, file: !3, line: 2827, type: !248)
!14270 = distinct !DILexicalBlock(scope: !14271, file: !3, line: 2827, column: 3)
!14271 = distinct !DILexicalBlock(scope: !14268, file: !3, line: 2827, column: 3)
!14272 = !DILocation(line: 2827, column: 3, scope: !14270)
!14273 = !DILocalVariable(name: "__dummy2", scope: !14270, file: !3, line: 2827, type: !248)
!14274 = !DILocation(line: 2827, column: 3, scope: !14271)
!14275 = !DILocation(line: 2827, column: 3, scope: !14002)
!14276 = !{i32 -2140653527}
!14277 = !DILocation(line: 2827, column: 3, scope: !14001)
!14278 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !14000)
!14279 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !14000)
!14280 = !DILocation(line: 2831, column: 7, scope: !14281)
!14281 = distinct !DILexicalBlock(scope: !14006, file: !3, line: 2831, column: 7)
!14282 = !DILocation(line: 2831, column: 7, scope: !14006)
!14283 = !DILocation(line: 2832, column: 29, scope: !14281)
!14284 = !DILocation(line: 2832, column: 35, scope: !14281)
!14285 = !DILocation(line: 2832, column: 4, scope: !14281)
!14286 = !DILocation(line: 2834, column: 37, scope: !14281)
!14287 = !DILocation(line: 2834, column: 43, scope: !14281)
!14288 = !DILocation(line: 2834, column: 4, scope: !14281)
!14289 = !DILocation(line: 2835, column: 27, scope: !14006)
!14290 = !DILocation(line: 2835, column: 33, scope: !14006)
!14291 = !DILocation(line: 2835, column: 39, scope: !14006)
!14292 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !14037)
!14293 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !14037)
!14294 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !14037)
!14295 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !14037)
!14296 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !14037)
!14297 = !DILocation(line: 2836, column: 2, scope: !14006)
!14298 = !DILocation(line: 2837, column: 9, scope: !13996)
!14299 = !DILocation(line: 2837, column: 2, scope: !13996)
!14300 = !DILocation(line: 2838, column: 1, scope: !13996)
!14301 = distinct !DISubprogram(name: "xhci_reserve_host_resources", scope: !3, file: !3, line: 2110, type: !14302, scopeLine: 2112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!14302 = !DISubroutineType(types: !14303)
!14303 = !{!265, !4497, !8108}
!14304 = !DILocalVariable(name: "xhci", arg: 1, scope: !14301, file: !3, line: 2110, type: !4497)
!14305 = !DILocation(line: 2110, column: 57, scope: !14301)
!14306 = !DILocalVariable(name: "ctrl_ctx", arg: 2, scope: !14301, file: !3, line: 2111, type: !8108)
!14307 = !DILocation(line: 2111, column: 34, scope: !14301)
!14308 = !DILocalVariable(name: "added_eps", scope: !14301, file: !3, line: 2113, type: !204)
!14309 = !DILocation(line: 2113, column: 6, scope: !14301)
!14310 = !DILocation(line: 2115, column: 43, scope: !14301)
!14311 = !DILocation(line: 2115, column: 49, scope: !14301)
!14312 = !DILocation(line: 2115, column: 14, scope: !14301)
!14313 = !DILocation(line: 2115, column: 12, scope: !14301)
!14314 = !DILocation(line: 2116, column: 6, scope: !14315)
!14315 = distinct !DILexicalBlock(scope: !14301, file: !3, line: 2116, column: 6)
!14316 = !DILocation(line: 2116, column: 12, scope: !14315)
!14317 = !DILocation(line: 2116, column: 29, scope: !14315)
!14318 = !DILocation(line: 2116, column: 27, scope: !14315)
!14319 = !DILocation(line: 2116, column: 41, scope: !14315)
!14320 = !DILocation(line: 2116, column: 47, scope: !14315)
!14321 = !DILocation(line: 2116, column: 39, scope: !14315)
!14322 = !DILocation(line: 2116, column: 6, scope: !14301)
!14323 = !DILocation(line: 2117, column: 18, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14315, file: !3, line: 2116, column: 65)
!14325 = !DILocation(line: 2120, column: 5, scope: !14324)
!14326 = !DILocation(line: 2120, column: 11, scope: !14324)
!14327 = !DILocation(line: 2120, column: 27, scope: !14324)
!14328 = !DILocation(line: 2121, column: 5, scope: !14324)
!14329 = !DILocation(line: 2121, column: 11, scope: !14324)
!14330 = !DILocation(line: 2117, column: 3, scope: !14324)
!14331 = !DILocation(line: 2122, column: 3, scope: !14324)
!14332 = !DILocation(line: 2124, column: 26, scope: !14301)
!14333 = !DILocation(line: 2124, column: 2, scope: !14301)
!14334 = !DILocation(line: 2124, column: 8, scope: !14301)
!14335 = !DILocation(line: 2124, column: 23, scope: !14301)
!14336 = !DILocation(line: 2125, column: 17, scope: !14301)
!14337 = !DILocation(line: 2126, column: 41, scope: !14301)
!14338 = !DILocation(line: 2127, column: 4, scope: !14301)
!14339 = !DILocation(line: 2127, column: 10, scope: !14301)
!14340 = !DILocation(line: 2125, column: 2, scope: !14301)
!14341 = !DILocation(line: 2128, column: 2, scope: !14301)
!14342 = !DILocation(line: 2129, column: 1, scope: !14301)
!14343 = distinct !DISubprogram(name: "xhci_reserve_bandwidth", scope: !3, file: !3, line: 2651, type: !14344, scopeLine: 2654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!14344 = !DISubroutineType(types: !14345)
!14345 = !{!265, !4497, !5290, !5251}
!14346 = !DILocalVariable(name: "xhci", arg: 1, scope: !14343, file: !3, line: 2651, type: !4497)
!14347 = !DILocation(line: 2651, column: 52, scope: !14343)
!14348 = !DILocalVariable(name: "virt_dev", arg: 2, scope: !14343, file: !3, line: 2652, type: !5290)
!14349 = !DILocation(line: 2652, column: 28, scope: !14343)
!14350 = !DILocalVariable(name: "in_ctx", arg: 3, scope: !14343, file: !3, line: 2653, type: !5251)
!14351 = !DILocation(line: 2653, column: 30, scope: !14343)
!14352 = !DILocalVariable(name: "ep_bw_info", scope: !14343, file: !3, line: 2655, type: !14353)
!14353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5328, size: 5952, elements: !5339)
!14354 = !DILocation(line: 2655, column: 22, scope: !14343)
!14355 = !DILocalVariable(name: "i", scope: !14343, file: !3, line: 2656, type: !265)
!14356 = !DILocation(line: 2656, column: 6, scope: !14343)
!14357 = !DILocalVariable(name: "ctrl_ctx", scope: !14343, file: !3, line: 2657, type: !8108)
!14358 = !DILocation(line: 2657, column: 33, scope: !14343)
!14359 = !DILocalVariable(name: "old_active_eps", scope: !14343, file: !3, line: 2658, type: !265)
!14360 = !DILocation(line: 2658, column: 6, scope: !14343)
!14361 = !DILocation(line: 2660, column: 6, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14343, file: !3, line: 2660, column: 6)
!14363 = !DILocation(line: 2660, column: 16, scope: !14362)
!14364 = !DILocation(line: 2660, column: 6, scope: !14343)
!14365 = !DILocation(line: 2661, column: 20, scope: !14362)
!14366 = !DILocation(line: 2661, column: 30, scope: !14362)
!14367 = !DILocation(line: 2661, column: 39, scope: !14362)
!14368 = !DILocation(line: 2661, column: 18, scope: !14362)
!14369 = !DILocation(line: 2661, column: 3, scope: !14362)
!14370 = !DILocation(line: 2663, column: 40, scope: !14343)
!14371 = !DILocation(line: 2663, column: 13, scope: !14343)
!14372 = !DILocation(line: 2663, column: 11, scope: !14343)
!14373 = !DILocation(line: 2664, column: 7, scope: !14374)
!14374 = distinct !DILexicalBlock(scope: !14343, file: !3, line: 2664, column: 6)
!14375 = !DILocation(line: 2664, column: 6, scope: !14343)
!14376 = !DILocation(line: 2665, column: 3, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14374, file: !3, line: 2664, column: 17)
!14378 = !DILocation(line: 2667, column: 3, scope: !14377)
!14379 = !DILocation(line: 2670, column: 9, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !14343, file: !3, line: 2670, column: 2)
!14381 = !DILocation(line: 2670, column: 7, scope: !14380)
!14382 = !DILocation(line: 2670, column: 14, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14380, file: !3, line: 2670, column: 2)
!14384 = !DILocation(line: 2670, column: 16, scope: !14383)
!14385 = !DILocation(line: 2670, column: 2, scope: !14380)
!14386 = !DILocation(line: 2671, column: 8, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14388, file: !3, line: 2671, column: 7)
!14388 = distinct !DILexicalBlock(scope: !14383, file: !3, line: 2670, column: 27)
!14389 = !DILocation(line: 2671, column: 33, scope: !14387)
!14390 = !DILocation(line: 2671, column: 37, scope: !14387)
!14391 = !DILocation(line: 2671, column: 7, scope: !14388)
!14392 = !DILocation(line: 2672, column: 4, scope: !14387)
!14393 = !DILocation(line: 2675, column: 22, scope: !14388)
!14394 = !DILocation(line: 2675, column: 11, scope: !14388)
!14395 = !DILocation(line: 2675, column: 3, scope: !14388)
!14396 = !DILocation(line: 2675, column: 27, scope: !14388)
!14397 = !DILocation(line: 2675, column: 37, scope: !14388)
!14398 = !DILocation(line: 2675, column: 41, scope: !14388)
!14399 = !DILocation(line: 2675, column: 44, scope: !14388)
!14400 = !DILocation(line: 2680, column: 7, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14388, file: !3, line: 2680, column: 7)
!14402 = !DILocation(line: 2680, column: 7, scope: !14388)
!14403 = !DILocation(line: 2681, column: 37, scope: !14401)
!14404 = !DILocation(line: 2682, column: 7, scope: !14401)
!14405 = !DILocation(line: 2682, column: 17, scope: !14401)
!14406 = !DILocation(line: 2682, column: 21, scope: !14401)
!14407 = !DILocation(line: 2682, column: 24, scope: !14401)
!14408 = !DILocation(line: 2683, column: 6, scope: !14401)
!14409 = !DILocation(line: 2683, column: 16, scope: !14401)
!14410 = !DILocation(line: 2684, column: 6, scope: !14401)
!14411 = !DILocation(line: 2684, column: 16, scope: !14401)
!14412 = !DILocation(line: 2685, column: 7, scope: !14401)
!14413 = !DILocation(line: 2685, column: 17, scope: !14401)
!14414 = !DILocation(line: 2685, column: 21, scope: !14401)
!14415 = !DILocation(line: 2686, column: 6, scope: !14401)
!14416 = !DILocation(line: 2686, column: 16, scope: !14401)
!14417 = !DILocation(line: 2681, column: 4, scope: !14401)
!14418 = !DILocation(line: 2687, column: 2, scope: !14388)
!14419 = !DILocation(line: 2670, column: 23, scope: !14383)
!14420 = !DILocation(line: 2670, column: 2, scope: !14383)
!14421 = distinct !{!14421, !14385, !14422}
!14422 = !DILocation(line: 2687, column: 2, scope: !14380)
!14423 = !DILocation(line: 2689, column: 22, scope: !14343)
!14424 = !DILocation(line: 2689, column: 28, scope: !14343)
!14425 = !DILocation(line: 2689, column: 38, scope: !14343)
!14426 = !DILocation(line: 2689, column: 46, scope: !14343)
!14427 = !DILocation(line: 2689, column: 56, scope: !14343)
!14428 = !DILocation(line: 2689, column: 2, scope: !14343)
!14429 = !DILocation(line: 2690, column: 9, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !14343, file: !3, line: 2690, column: 2)
!14431 = !DILocation(line: 2690, column: 7, scope: !14430)
!14432 = !DILocation(line: 2690, column: 14, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14430, file: !3, line: 2690, column: 2)
!14434 = !DILocation(line: 2690, column: 16, scope: !14433)
!14435 = !DILocation(line: 2690, column: 2, scope: !14430)
!14436 = !DILocation(line: 2692, column: 7, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14438, file: !3, line: 2692, column: 7)
!14438 = distinct !DILexicalBlock(scope: !14433, file: !3, line: 2690, column: 27)
!14439 = !DILocation(line: 2692, column: 7, scope: !14438)
!14440 = !DILocation(line: 2693, column: 34, scope: !14437)
!14441 = !DILocation(line: 2694, column: 7, scope: !14437)
!14442 = !DILocation(line: 2694, column: 17, scope: !14437)
!14443 = !DILocation(line: 2694, column: 21, scope: !14437)
!14444 = !DILocation(line: 2694, column: 24, scope: !14437)
!14445 = !DILocation(line: 2695, column: 6, scope: !14437)
!14446 = !DILocation(line: 2695, column: 16, scope: !14437)
!14447 = !DILocation(line: 2696, column: 6, scope: !14437)
!14448 = !DILocation(line: 2696, column: 16, scope: !14437)
!14449 = !DILocation(line: 2697, column: 7, scope: !14437)
!14450 = !DILocation(line: 2697, column: 17, scope: !14437)
!14451 = !DILocation(line: 2697, column: 21, scope: !14437)
!14452 = !DILocation(line: 2698, column: 6, scope: !14437)
!14453 = !DILocation(line: 2698, column: 16, scope: !14437)
!14454 = !DILocation(line: 2693, column: 4, scope: !14437)
!14455 = !DILocation(line: 2699, column: 2, scope: !14438)
!14456 = !DILocation(line: 2690, column: 23, scope: !14433)
!14457 = !DILocation(line: 2690, column: 2, scope: !14433)
!14458 = distinct !{!14458, !14435, !14459}
!14459 = !DILocation(line: 2699, column: 2, scope: !14430)
!14460 = !DILocation(line: 2701, column: 27, scope: !14461)
!14461 = distinct !DILexicalBlock(scope: !14343, file: !3, line: 2701, column: 6)
!14462 = !DILocation(line: 2701, column: 33, scope: !14461)
!14463 = !DILocation(line: 2701, column: 43, scope: !14461)
!14464 = !DILocation(line: 2701, column: 7, scope: !14461)
!14465 = !DILocation(line: 2701, column: 6, scope: !14343)
!14466 = !DILocation(line: 2705, column: 29, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14461, file: !3, line: 2701, column: 60)
!14468 = !DILocation(line: 2705, column: 35, scope: !14467)
!14469 = !DILocation(line: 2705, column: 45, scope: !14467)
!14470 = !DILocation(line: 2705, column: 3, scope: !14467)
!14471 = !DILocation(line: 2706, column: 3, scope: !14467)
!14472 = !DILocation(line: 2710, column: 9, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14343, file: !3, line: 2710, column: 2)
!14474 = !DILocation(line: 2710, column: 7, scope: !14473)
!14475 = !DILocation(line: 2710, column: 14, scope: !14476)
!14476 = distinct !DILexicalBlock(scope: !14473, file: !3, line: 2710, column: 2)
!14477 = !DILocation(line: 2710, column: 16, scope: !14476)
!14478 = !DILocation(line: 2710, column: 2, scope: !14473)
!14479 = !DILocation(line: 2711, column: 8, scope: !14480)
!14480 = distinct !DILexicalBlock(scope: !14481, file: !3, line: 2711, column: 7)
!14481 = distinct !DILexicalBlock(scope: !14476, file: !3, line: 2710, column: 27)
!14482 = !DILocation(line: 2711, column: 33, scope: !14480)
!14483 = !DILocation(line: 2711, column: 37, scope: !14480)
!14484 = !DILocation(line: 2711, column: 7, scope: !14481)
!14485 = !DILocation(line: 2712, column: 4, scope: !14480)
!14486 = !DILocation(line: 2717, column: 7, scope: !14487)
!14487 = distinct !DILexicalBlock(scope: !14481, file: !3, line: 2717, column: 7)
!14488 = !DILocation(line: 2717, column: 7, scope: !14481)
!14489 = !DILocation(line: 2718, column: 37, scope: !14490)
!14490 = distinct !DILexicalBlock(scope: !14487, file: !3, line: 2717, column: 33)
!14491 = !DILocation(line: 2719, column: 7, scope: !14490)
!14492 = !DILocation(line: 2719, column: 17, scope: !14490)
!14493 = !DILocation(line: 2719, column: 21, scope: !14490)
!14494 = !DILocation(line: 2719, column: 24, scope: !14490)
!14495 = !DILocation(line: 2720, column: 6, scope: !14490)
!14496 = !DILocation(line: 2720, column: 16, scope: !14490)
!14497 = !DILocation(line: 2721, column: 6, scope: !14490)
!14498 = !DILocation(line: 2721, column: 16, scope: !14490)
!14499 = !DILocation(line: 2722, column: 7, scope: !14490)
!14500 = !DILocation(line: 2722, column: 17, scope: !14490)
!14501 = !DILocation(line: 2722, column: 21, scope: !14490)
!14502 = !DILocation(line: 2723, column: 6, scope: !14490)
!14503 = !DILocation(line: 2723, column: 16, scope: !14490)
!14504 = !DILocation(line: 2718, column: 4, scope: !14490)
!14505 = !DILocation(line: 2724, column: 3, scope: !14490)
!14506 = !DILocation(line: 2726, column: 11, scope: !14481)
!14507 = !DILocation(line: 2726, column: 21, scope: !14481)
!14508 = !DILocation(line: 2726, column: 25, scope: !14481)
!14509 = !DILocation(line: 2726, column: 28, scope: !14481)
!14510 = !DILocation(line: 2726, column: 3, scope: !14481)
!14511 = !DILocation(line: 2726, column: 49, scope: !14481)
!14512 = !DILocation(line: 2726, column: 38, scope: !14481)
!14513 = !DILocation(line: 2729, column: 7, scope: !14514)
!14514 = distinct !DILexicalBlock(scope: !14481, file: !3, line: 2729, column: 7)
!14515 = !DILocation(line: 2729, column: 7, scope: !14481)
!14516 = !DILocation(line: 2730, column: 34, scope: !14514)
!14517 = !DILocation(line: 2731, column: 7, scope: !14514)
!14518 = !DILocation(line: 2731, column: 17, scope: !14514)
!14519 = !DILocation(line: 2731, column: 21, scope: !14514)
!14520 = !DILocation(line: 2731, column: 24, scope: !14514)
!14521 = !DILocation(line: 2732, column: 6, scope: !14514)
!14522 = !DILocation(line: 2732, column: 16, scope: !14514)
!14523 = !DILocation(line: 2733, column: 6, scope: !14514)
!14524 = !DILocation(line: 2733, column: 16, scope: !14514)
!14525 = !DILocation(line: 2734, column: 7, scope: !14514)
!14526 = !DILocation(line: 2734, column: 17, scope: !14514)
!14527 = !DILocation(line: 2734, column: 21, scope: !14514)
!14528 = !DILocation(line: 2735, column: 6, scope: !14514)
!14529 = !DILocation(line: 2735, column: 16, scope: !14514)
!14530 = !DILocation(line: 2730, column: 4, scope: !14514)
!14531 = !DILocation(line: 2736, column: 2, scope: !14481)
!14532 = !DILocation(line: 2710, column: 23, scope: !14476)
!14533 = !DILocation(line: 2710, column: 2, scope: !14476)
!14534 = distinct !{!14534, !14478, !14535}
!14535 = !DILocation(line: 2736, column: 2, scope: !14473)
!14536 = !DILocation(line: 2737, column: 2, scope: !14343)
!14537 = !DILocation(line: 2738, column: 1, scope: !14343)
!14538 = distinct !DISubprogram(name: "xhci_free_host_resources", scope: !3, file: !3, line: 2137, type: !14539, scopeLine: 2139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!14539 = !DISubroutineType(types: !14540)
!14540 = !{null, !4497, !8108}
!14541 = !DILocalVariable(name: "xhci", arg: 1, scope: !14538, file: !3, line: 2137, type: !4497)
!14542 = !DILocation(line: 2137, column: 55, scope: !14538)
!14543 = !DILocalVariable(name: "ctrl_ctx", arg: 2, scope: !14538, file: !3, line: 2138, type: !8108)
!14544 = !DILocation(line: 2138, column: 34, scope: !14538)
!14545 = !DILocalVariable(name: "num_failed_eps", scope: !14538, file: !3, line: 2140, type: !204)
!14546 = !DILocation(line: 2140, column: 6, scope: !14538)
!14547 = !DILocation(line: 2142, column: 48, scope: !14538)
!14548 = !DILocation(line: 2142, column: 54, scope: !14538)
!14549 = !DILocation(line: 2142, column: 19, scope: !14538)
!14550 = !DILocation(line: 2142, column: 17, scope: !14538)
!14551 = !DILocation(line: 2143, column: 26, scope: !14538)
!14552 = !DILocation(line: 2143, column: 2, scope: !14538)
!14553 = !DILocation(line: 2143, column: 8, scope: !14538)
!14554 = !DILocation(line: 2143, column: 23, scope: !14538)
!14555 = !DILocation(line: 2144, column: 17, scope: !14538)
!14556 = !DILocation(line: 2146, column: 4, scope: !14538)
!14557 = !DILocation(line: 2147, column: 4, scope: !14538)
!14558 = !DILocation(line: 2147, column: 10, scope: !14538)
!14559 = !DILocation(line: 2144, column: 2, scope: !14538)
!14560 = !DILocation(line: 2148, column: 1, scope: !14538)
!14561 = distinct !DISubprogram(name: "trace_xhci_configure_endpoint_ctrl_ctx", scope: !5835, file: !5835, line: 449, type: !14562, scopeLine: 449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!14562 = !DISubroutineType(types: !14563)
!14563 = !{null, !8108}
!14564 = !DILocalVariable(name: "ctrl_ctx", arg: 1, scope: !14561, file: !5835, line: 449, type: !8108)
!14565 = !DILocation(line: 449, column: 1, scope: !14561)
!14566 = distinct !DISubprogram(name: "trace_xhci_configure_endpoint", scope: !5835, file: !5835, line: 424, type: !8660, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!14567 = !DILocalVariable(name: "ctx", arg: 1, scope: !14566, file: !5835, line: 424, type: !8442)
!14568 = !DILocation(line: 424, column: 1, scope: !14566)
!14569 = distinct !DISubprogram(name: "xhci_configure_endpoint_result", scope: !3, file: !3, line: 1963, type: !14570, scopeLine: 1965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!14570 = !DISubroutineType(types: !14571)
!14571 = !{!265, !4497, !4526, !278}
!14572 = !DILocalVariable(name: "xhci", arg: 1, scope: !14569, file: !3, line: 1963, type: !4497)
!14573 = !DILocation(line: 1963, column: 60, scope: !14569)
!14574 = !DILocalVariable(name: "udev", arg: 2, scope: !14569, file: !3, line: 1964, type: !4526)
!14575 = !DILocation(line: 1964, column: 22, scope: !14569)
!14576 = !DILocalVariable(name: "cmd_status", arg: 3, scope: !14569, file: !3, line: 1964, type: !278)
!14577 = !DILocation(line: 1964, column: 33, scope: !14569)
!14578 = !DILocalVariable(name: "ret", scope: !14569, file: !3, line: 1966, type: !265)
!14579 = !DILocation(line: 1966, column: 6, scope: !14569)
!14580 = !DILocation(line: 1968, column: 11, scope: !14569)
!14581 = !DILocation(line: 1968, column: 10, scope: !14569)
!14582 = !DILocation(line: 1968, column: 2, scope: !14569)
!14583 = !DILocation(line: 1971, column: 3, scope: !14584)
!14584 = distinct !DILexicalBlock(scope: !14569, file: !3, line: 1968, column: 23)
!14585 = !DILocation(line: 1972, column: 7, scope: !14584)
!14586 = !DILocation(line: 1973, column: 3, scope: !14584)
!14587 = !DILocation(line: 1975, column: 3, scope: !14584)
!14588 = !DILocation(line: 1977, column: 7, scope: !14584)
!14589 = !DILocation(line: 1979, column: 3, scope: !14584)
!14590 = !DILocation(line: 1982, column: 3, scope: !14584)
!14591 = !DILocation(line: 1984, column: 7, scope: !14584)
!14592 = !DILocation(line: 1986, column: 3, scope: !14584)
!14593 = !DILocation(line: 1989, column: 3, scope: !14584)
!14594 = !DILocation(line: 1992, column: 7, scope: !14584)
!14595 = !DILocation(line: 1993, column: 3, scope: !14584)
!14596 = !DILocation(line: 1995, column: 3, scope: !14584)
!14597 = !DILocation(line: 1997, column: 7, scope: !14584)
!14598 = !DILocation(line: 1998, column: 3, scope: !14584)
!14599 = !DILocation(line: 2000, column: 18, scope: !14584)
!14600 = !DILocation(line: 2000, column: 3, scope: !14584)
!14601 = !DILocation(line: 2002, column: 7, scope: !14584)
!14602 = !DILocation(line: 2003, column: 3, scope: !14584)
!14603 = !DILocation(line: 2005, column: 3, scope: !14584)
!14604 = !DILocation(line: 2007, column: 7, scope: !14584)
!14605 = !DILocation(line: 2008, column: 3, scope: !14584)
!14606 = !DILocation(line: 2010, column: 9, scope: !14569)
!14607 = !DILocation(line: 2010, column: 2, scope: !14569)
!14608 = distinct !DISubprogram(name: "xhci_evaluate_context_result", scope: !3, file: !3, line: 2013, type: !14570, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!14609 = !DILocalVariable(name: "xhci", arg: 1, scope: !14608, file: !3, line: 2013, type: !4497)
!14610 = !DILocation(line: 2013, column: 58, scope: !14608)
!14611 = !DILocalVariable(name: "udev", arg: 2, scope: !14608, file: !3, line: 2014, type: !4526)
!14612 = !DILocation(line: 2014, column: 22, scope: !14608)
!14613 = !DILocalVariable(name: "cmd_status", arg: 3, scope: !14608, file: !3, line: 2014, type: !278)
!14614 = !DILocation(line: 2014, column: 33, scope: !14608)
!14615 = !DILocalVariable(name: "ret", scope: !14608, file: !3, line: 2016, type: !265)
!14616 = !DILocation(line: 2016, column: 6, scope: !14608)
!14617 = !DILocation(line: 2018, column: 11, scope: !14608)
!14618 = !DILocation(line: 2018, column: 10, scope: !14608)
!14619 = !DILocation(line: 2018, column: 2, scope: !14608)
!14620 = !DILocation(line: 2021, column: 3, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14608, file: !3, line: 2018, column: 23)
!14622 = !DILocation(line: 2022, column: 7, scope: !14621)
!14623 = !DILocation(line: 2023, column: 3, scope: !14621)
!14624 = !DILocation(line: 2025, column: 3, scope: !14621)
!14625 = !DILocation(line: 2027, column: 7, scope: !14621)
!14626 = !DILocation(line: 2028, column: 3, scope: !14621)
!14627 = !DILocation(line: 2030, column: 3, scope: !14621)
!14628 = !DILocation(line: 2032, column: 7, scope: !14621)
!14629 = !DILocation(line: 2033, column: 3, scope: !14621)
!14630 = !DILocation(line: 2035, column: 3, scope: !14621)
!14631 = !DILocation(line: 2037, column: 7, scope: !14621)
!14632 = !DILocation(line: 2038, column: 3, scope: !14621)
!14633 = !DILocation(line: 2040, column: 3, scope: !14621)
!14634 = !DILocation(line: 2042, column: 7, scope: !14621)
!14635 = !DILocation(line: 2043, column: 3, scope: !14621)
!14636 = !DILocation(line: 2046, column: 3, scope: !14621)
!14637 = !DILocation(line: 2047, column: 7, scope: !14621)
!14638 = !DILocation(line: 2048, column: 3, scope: !14621)
!14639 = !DILocation(line: 2050, column: 18, scope: !14621)
!14640 = !DILocation(line: 2050, column: 3, scope: !14621)
!14641 = !DILocation(line: 2052, column: 7, scope: !14621)
!14642 = !DILocation(line: 2053, column: 3, scope: !14621)
!14643 = !DILocation(line: 2055, column: 3, scope: !14621)
!14644 = !DILocation(line: 2057, column: 7, scope: !14621)
!14645 = !DILocation(line: 2058, column: 3, scope: !14621)
!14646 = !DILocation(line: 2060, column: 9, scope: !14608)
!14647 = !DILocation(line: 2060, column: 2, scope: !14608)
!14648 = distinct !DISubprogram(name: "xhci_finish_resource_reservation", scope: !3, file: !3, line: 2156, type: !14539, scopeLine: 2158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!14649 = !DILocalVariable(name: "xhci", arg: 1, scope: !14648, file: !3, line: 2156, type: !4497)
!14650 = !DILocation(line: 2156, column: 63, scope: !14648)
!14651 = !DILocalVariable(name: "ctrl_ctx", arg: 2, scope: !14648, file: !3, line: 2157, type: !8108)
!14652 = !DILocation(line: 2157, column: 34, scope: !14648)
!14653 = !DILocalVariable(name: "num_dropped_eps", scope: !14648, file: !3, line: 2159, type: !204)
!14654 = !DILocation(line: 2159, column: 6, scope: !14648)
!14655 = !DILocation(line: 2161, column: 53, scope: !14648)
!14656 = !DILocation(line: 2161, column: 59, scope: !14648)
!14657 = !DILocation(line: 2161, column: 20, scope: !14648)
!14658 = !DILocation(line: 2161, column: 18, scope: !14648)
!14659 = !DILocation(line: 2162, column: 26, scope: !14648)
!14660 = !DILocation(line: 2162, column: 2, scope: !14648)
!14661 = !DILocation(line: 2162, column: 8, scope: !14648)
!14662 = !DILocation(line: 2162, column: 23, scope: !14648)
!14663 = !DILocation(line: 2163, column: 6, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14648, file: !3, line: 2163, column: 6)
!14665 = !DILocation(line: 2163, column: 6, scope: !14648)
!14666 = !DILocation(line: 2164, column: 18, scope: !14664)
!14667 = !DILocation(line: 2166, column: 5, scope: !14664)
!14668 = !DILocation(line: 2167, column: 5, scope: !14664)
!14669 = !DILocation(line: 2167, column: 11, scope: !14664)
!14670 = !DILocation(line: 2164, column: 3, scope: !14664)
!14671 = !DILocation(line: 2168, column: 1, scope: !14648)
!14672 = distinct !DISubprogram(name: "xhci_count_num_new_endpoints", scope: !3, file: !3, line: 2063, type: !14673, scopeLine: 2065, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!14673 = !DISubroutineType(types: !14674)
!14674 = !{!204, !4497, !8108}
!14675 = !DILocalVariable(name: "w", arg: 1, scope: !14676, file: !14677, line: 15, type: !7)
!14676 = distinct !DISubprogram(name: "__arch_hweight32", scope: !14677, file: !14677, line: 15, type: !7928, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!14677 = !DIFile(filename: "./arch/x86/include/asm/arch_hweight.h", directory: "/home/lizy2001/genbc/linux")
!14678 = !DILocation(line: 15, column: 67, scope: !14676, inlinedAt: !14679)
!14679 = distinct !DILocation(line: 2081, column: 3, scope: !14672)
!14680 = !DILocalVariable(name: "res", scope: !14676, file: !14677, line: 17, type: !7)
!14681 = !DILocation(line: 17, column: 15, scope: !14676, inlinedAt: !14679)
!14682 = !DILocation(line: 15, column: 67, scope: !14676, inlinedAt: !14683)
!14683 = distinct !DILocation(line: 2080, column: 9, scope: !14672)
!14684 = !DILocation(line: 17, column: 15, scope: !14676, inlinedAt: !14683)
!14685 = !DILocalVariable(name: "xhci", arg: 1, scope: !14672, file: !3, line: 2063, type: !4497)
!14686 = !DILocation(line: 2063, column: 58, scope: !14672)
!14687 = !DILocalVariable(name: "ctrl_ctx", arg: 2, scope: !14672, file: !3, line: 2064, type: !8108)
!14688 = !DILocation(line: 2064, column: 34, scope: !14672)
!14689 = !DILocalVariable(name: "valid_add_flags", scope: !14672, file: !3, line: 2066, type: !204)
!14690 = !DILocation(line: 2066, column: 6, scope: !14672)
!14691 = !DILocalVariable(name: "valid_drop_flags", scope: !14672, file: !3, line: 2067, type: !204)
!14692 = !DILocation(line: 2067, column: 6, scope: !14672)
!14693 = !DILocation(line: 2073, column: 20, scope: !14672)
!14694 = !DILocation(line: 2073, column: 53, scope: !14672)
!14695 = !DILocation(line: 2073, column: 18, scope: !14672)
!14696 = !DILocation(line: 2074, column: 21, scope: !14672)
!14697 = !DILocation(line: 2074, column: 55, scope: !14672)
!14698 = !DILocation(line: 2074, column: 19, scope: !14672)
!14699 = !DILocation(line: 2080, column: 9, scope: !14672)
!14700 = !DILocation(line: 21, column: 15, scope: !14676, inlinedAt: !14683)
!14701 = !DILocation(line: 19, column: 2, scope: !14676, inlinedAt: !14683)
!14702 = !{i32 -2146556171, i32 -2146556143, i32 -2146556137, i32 -2146556121, i32 -2146556105, i32 -2146556078, i32 -2146555745, i32 -2146556463, i32 -2146555739, i32 -2146555691, i32 -2146555627, i32 -2146555565, i32 -2146555508, i32 -2146555452, i32 -2146556383, i32 -2146556358, i32 -2146555218, i32 -2146555088, i32 -2146555157, i32 -2146555074, i32 -2146556258}
!14703 = !DILocation(line: 23, column: 9, scope: !14676, inlinedAt: !14683)
!14704 = !DILocation(line: 2081, column: 3, scope: !14672)
!14705 = !DILocation(line: 21, column: 15, scope: !14676, inlinedAt: !14679)
!14706 = !DILocation(line: 19, column: 2, scope: !14676, inlinedAt: !14679)
!14707 = !DILocation(line: 23, column: 9, scope: !14676, inlinedAt: !14679)
!14708 = !DILocation(line: 2080, column: 36, scope: !14672)
!14709 = !DILocation(line: 2080, column: 2, scope: !14672)
!14710 = distinct !DISubprogram(name: "xhci_drop_ep_from_interval_table", scope: !3, file: !3, line: 2493, type: !14711, scopeLine: 2499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!14711 = !DISubroutineType(types: !14712)
!14712 = !{null, !4497, !14713, !5344, !4526, !5464, !5360}
!14713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5328, size: 64)
!14714 = !DILocalVariable(name: "xhci", arg: 1, scope: !14710, file: !3, line: 2493, type: !4497)
!14715 = !DILocation(line: 2493, column: 63, scope: !14710)
!14716 = !DILocalVariable(name: "ep_bw", arg: 2, scope: !14710, file: !3, line: 2494, type: !14713)
!14717 = !DILocation(line: 2494, column: 24, scope: !14710)
!14718 = !DILocalVariable(name: "bw_table", arg: 3, scope: !14710, file: !3, line: 2495, type: !5344)
!14719 = !DILocation(line: 2495, column: 34, scope: !14710)
!14720 = !DILocalVariable(name: "udev", arg: 4, scope: !14710, file: !3, line: 2496, type: !4526)
!14721 = !DILocation(line: 2496, column: 22, scope: !14710)
!14722 = !DILocalVariable(name: "virt_ep", arg: 5, scope: !14710, file: !3, line: 2497, type: !5464)
!14723 = !DILocation(line: 2497, column: 24, scope: !14710)
!14724 = !DILocalVariable(name: "tt_info", arg: 6, scope: !14710, file: !3, line: 2498, type: !5360)
!14725 = !DILocation(line: 2498, column: 27, scope: !14710)
!14726 = !DILocalVariable(name: "interval_bw", scope: !14710, file: !3, line: 2500, type: !14727)
!14727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5350, size: 64)
!14728 = !DILocation(line: 2500, column: 27, scope: !14710)
!14729 = !DILocalVariable(name: "normalized_interval", scope: !14710, file: !3, line: 2501, type: !265)
!14730 = !DILocation(line: 2501, column: 6, scope: !14710)
!14731 = !DILocation(line: 2503, column: 23, scope: !14732)
!14732 = distinct !DILexicalBlock(scope: !14710, file: !3, line: 2503, column: 6)
!14733 = !DILocation(line: 2503, column: 30, scope: !14732)
!14734 = !DILocation(line: 2503, column: 6, scope: !14732)
!14735 = !DILocation(line: 2503, column: 6, scope: !14710)
!14736 = !DILocation(line: 2504, column: 3, scope: !14732)
!14737 = !DILocation(line: 2506, column: 6, scope: !14738)
!14738 = distinct !DILexicalBlock(scope: !14710, file: !3, line: 2506, column: 6)
!14739 = !DILocation(line: 2506, column: 12, scope: !14738)
!14740 = !DILocation(line: 2506, column: 18, scope: !14738)
!14741 = !DILocation(line: 2506, column: 6, scope: !14710)
!14742 = !DILocation(line: 2507, column: 26, scope: !14743)
!14743 = distinct !DILexicalBlock(scope: !14744, file: !3, line: 2507, column: 7)
!14744 = distinct !DILexicalBlock(scope: !14738, file: !3, line: 2506, column: 38)
!14745 = !DILocation(line: 2507, column: 33, scope: !14743)
!14746 = !DILocation(line: 2507, column: 7, scope: !14743)
!14747 = !DILocation(line: 2507, column: 7, scope: !14744)
!14748 = !DILocation(line: 2509, column: 29, scope: !14743)
!14749 = !DILocation(line: 2509, column: 5, scope: !14743)
!14750 = !DILocation(line: 2508, column: 4, scope: !14743)
!14751 = !DILocation(line: 2508, column: 10, scope: !14743)
!14752 = !DILocation(line: 2508, column: 15, scope: !14743)
!14753 = !DILocation(line: 2508, column: 21, scope: !14743)
!14754 = !DILocation(line: 2508, column: 31, scope: !14743)
!14755 = !DILocation(line: 2508, column: 41, scope: !14743)
!14756 = !DILocation(line: 2508, column: 50, scope: !14743)
!14757 = !DILocation(line: 2512, column: 29, scope: !14743)
!14758 = !DILocation(line: 2512, column: 5, scope: !14743)
!14759 = !DILocation(line: 2511, column: 4, scope: !14743)
!14760 = !DILocation(line: 2511, column: 10, scope: !14743)
!14761 = !DILocation(line: 2511, column: 15, scope: !14743)
!14762 = !DILocation(line: 2511, column: 21, scope: !14743)
!14763 = !DILocation(line: 2511, column: 31, scope: !14743)
!14764 = !DILocation(line: 2511, column: 41, scope: !14743)
!14765 = !DILocation(line: 2511, column: 51, scope: !14743)
!14766 = !DILocation(line: 2513, column: 3, scope: !14744)
!14767 = !DILocation(line: 2519, column: 18, scope: !14768)
!14768 = distinct !DILexicalBlock(scope: !14710, file: !3, line: 2519, column: 6)
!14769 = !DILocation(line: 2519, column: 27, scope: !14768)
!14770 = !DILocation(line: 2519, column: 6, scope: !14768)
!14771 = !DILocation(line: 2519, column: 6, scope: !14710)
!14772 = !DILocation(line: 2520, column: 3, scope: !14768)
!14773 = !DILocation(line: 2524, column: 6, scope: !14774)
!14774 = distinct !DILexicalBlock(scope: !14710, file: !3, line: 2524, column: 6)
!14775 = !DILocation(line: 2524, column: 12, scope: !14774)
!14776 = !DILocation(line: 2524, column: 18, scope: !14774)
!14777 = !DILocation(line: 2524, column: 6, scope: !14710)
!14778 = !DILocation(line: 2525, column: 25, scope: !14774)
!14779 = !DILocation(line: 2525, column: 32, scope: !14774)
!14780 = !DILocation(line: 2525, column: 23, scope: !14774)
!14781 = !DILocation(line: 2525, column: 3, scope: !14774)
!14782 = !DILocation(line: 2527, column: 25, scope: !14774)
!14783 = !DILocation(line: 2527, column: 32, scope: !14774)
!14784 = !DILocation(line: 2527, column: 44, scope: !14774)
!14785 = !DILocation(line: 2527, column: 23, scope: !14774)
!14786 = !DILocation(line: 2529, column: 6, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14710, file: !3, line: 2529, column: 6)
!14788 = !DILocation(line: 2529, column: 26, scope: !14787)
!14789 = !DILocation(line: 2529, column: 6, scope: !14710)
!14790 = !DILocation(line: 2530, column: 39, scope: !14787)
!14791 = !DILocation(line: 2530, column: 46, scope: !14787)
!14792 = !DILocation(line: 2530, column: 3, scope: !14787)
!14793 = !DILocation(line: 2530, column: 13, scope: !14787)
!14794 = !DILocation(line: 2530, column: 36, scope: !14787)
!14795 = !DILocation(line: 2531, column: 17, scope: !14710)
!14796 = !DILocation(line: 2531, column: 27, scope: !14710)
!14797 = !DILocation(line: 2531, column: 39, scope: !14710)
!14798 = !DILocation(line: 2531, column: 14, scope: !14710)
!14799 = !DILocation(line: 2532, column: 30, scope: !14710)
!14800 = !DILocation(line: 2532, column: 37, scope: !14710)
!14801 = !DILocation(line: 2532, column: 2, scope: !14710)
!14802 = !DILocation(line: 2532, column: 15, scope: !14710)
!14803 = !DILocation(line: 2532, column: 27, scope: !14710)
!14804 = !DILocation(line: 2533, column: 10, scope: !14710)
!14805 = !DILocation(line: 2533, column: 16, scope: !14710)
!14806 = !DILocation(line: 2533, column: 2, scope: !14710)
!14807 = !DILocation(line: 2535, column: 3, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14710, file: !3, line: 2533, column: 23)
!14809 = !DILocation(line: 2535, column: 16, scope: !14808)
!14810 = !DILocation(line: 2535, column: 43, scope: !14808)
!14811 = !DILocation(line: 2536, column: 3, scope: !14808)
!14812 = !DILocation(line: 2538, column: 3, scope: !14808)
!14813 = !DILocation(line: 2538, column: 16, scope: !14808)
!14814 = !DILocation(line: 2538, column: 43, scope: !14808)
!14815 = !DILocation(line: 2539, column: 3, scope: !14808)
!14816 = !DILocation(line: 2541, column: 3, scope: !14808)
!14817 = !DILocation(line: 2541, column: 16, scope: !14808)
!14818 = !DILocation(line: 2541, column: 43, scope: !14808)
!14819 = !DILocation(line: 2542, column: 3, scope: !14808)
!14820 = !DILocation(line: 2550, column: 3, scope: !14808)
!14821 = !DILocation(line: 2552, column: 6, scope: !14822)
!14822 = distinct !DILexicalBlock(scope: !14710, file: !3, line: 2552, column: 6)
!14823 = !DILocation(line: 2552, column: 6, scope: !14710)
!14824 = !DILocation(line: 2553, column: 3, scope: !14822)
!14825 = !DILocation(line: 2553, column: 12, scope: !14822)
!14826 = !DILocation(line: 2553, column: 23, scope: !14822)
!14827 = !DILocation(line: 2554, column: 17, scope: !14710)
!14828 = !DILocation(line: 2554, column: 26, scope: !14710)
!14829 = !DILocation(line: 2554, column: 2, scope: !14710)
!14830 = !DILocation(line: 2555, column: 1, scope: !14710)
!14831 = distinct !DISubprogram(name: "xhci_add_ep_to_interval_table", scope: !3, file: !3, line: 2557, type: !14711, scopeLine: 2563, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!14832 = !DILocalVariable(name: "xhci", arg: 1, scope: !14831, file: !3, line: 2557, type: !4497)
!14833 = !DILocation(line: 2557, column: 60, scope: !14831)
!14834 = !DILocalVariable(name: "ep_bw", arg: 2, scope: !14831, file: !3, line: 2558, type: !14713)
!14835 = !DILocation(line: 2558, column: 24, scope: !14831)
!14836 = !DILocalVariable(name: "bw_table", arg: 3, scope: !14831, file: !3, line: 2559, type: !5344)
!14837 = !DILocation(line: 2559, column: 34, scope: !14831)
!14838 = !DILocalVariable(name: "udev", arg: 4, scope: !14831, file: !3, line: 2560, type: !4526)
!14839 = !DILocation(line: 2560, column: 22, scope: !14831)
!14840 = !DILocalVariable(name: "virt_ep", arg: 5, scope: !14831, file: !3, line: 2561, type: !5464)
!14841 = !DILocation(line: 2561, column: 24, scope: !14831)
!14842 = !DILocalVariable(name: "tt_info", arg: 6, scope: !14831, file: !3, line: 2562, type: !5360)
!14843 = !DILocation(line: 2562, column: 27, scope: !14831)
!14844 = !DILocalVariable(name: "interval_bw", scope: !14831, file: !3, line: 2564, type: !14727)
!14845 = !DILocation(line: 2564, column: 27, scope: !14831)
!14846 = !DILocalVariable(name: "smaller_ep", scope: !14831, file: !3, line: 2565, type: !5464)
!14847 = !DILocation(line: 2565, column: 23, scope: !14831)
!14848 = !DILocalVariable(name: "normalized_interval", scope: !14831, file: !3, line: 2566, type: !265)
!14849 = !DILocation(line: 2566, column: 6, scope: !14831)
!14850 = !DILocation(line: 2568, column: 23, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 2568, column: 6)
!14852 = !DILocation(line: 2568, column: 30, scope: !14851)
!14853 = !DILocation(line: 2568, column: 6, scope: !14851)
!14854 = !DILocation(line: 2568, column: 6, scope: !14831)
!14855 = !DILocation(line: 2569, column: 3, scope: !14851)
!14856 = !DILocation(line: 2571, column: 6, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 2571, column: 6)
!14858 = !DILocation(line: 2571, column: 12, scope: !14857)
!14859 = !DILocation(line: 2571, column: 18, scope: !14857)
!14860 = !DILocation(line: 2571, column: 6, scope: !14831)
!14861 = !DILocation(line: 2572, column: 26, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14863, file: !3, line: 2572, column: 7)
!14863 = distinct !DILexicalBlock(scope: !14857, file: !3, line: 2571, column: 38)
!14864 = !DILocation(line: 2572, column: 33, scope: !14862)
!14865 = !DILocation(line: 2572, column: 7, scope: !14862)
!14866 = !DILocation(line: 2572, column: 7, scope: !14863)
!14867 = !DILocation(line: 2574, column: 29, scope: !14862)
!14868 = !DILocation(line: 2574, column: 5, scope: !14862)
!14869 = !DILocation(line: 2573, column: 4, scope: !14862)
!14870 = !DILocation(line: 2573, column: 10, scope: !14862)
!14871 = !DILocation(line: 2573, column: 15, scope: !14862)
!14872 = !DILocation(line: 2573, column: 21, scope: !14862)
!14873 = !DILocation(line: 2573, column: 31, scope: !14862)
!14874 = !DILocation(line: 2573, column: 41, scope: !14862)
!14875 = !DILocation(line: 2573, column: 50, scope: !14862)
!14876 = !DILocation(line: 2577, column: 29, scope: !14862)
!14877 = !DILocation(line: 2577, column: 5, scope: !14862)
!14878 = !DILocation(line: 2576, column: 4, scope: !14862)
!14879 = !DILocation(line: 2576, column: 10, scope: !14862)
!14880 = !DILocation(line: 2576, column: 15, scope: !14862)
!14881 = !DILocation(line: 2576, column: 21, scope: !14862)
!14882 = !DILocation(line: 2576, column: 31, scope: !14862)
!14883 = !DILocation(line: 2576, column: 41, scope: !14862)
!14884 = !DILocation(line: 2576, column: 51, scope: !14862)
!14885 = !DILocation(line: 2578, column: 3, scope: !14863)
!14886 = !DILocation(line: 2584, column: 6, scope: !14887)
!14887 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 2584, column: 6)
!14888 = !DILocation(line: 2584, column: 12, scope: !14887)
!14889 = !DILocation(line: 2584, column: 18, scope: !14887)
!14890 = !DILocation(line: 2584, column: 6, scope: !14831)
!14891 = !DILocation(line: 2585, column: 25, scope: !14887)
!14892 = !DILocation(line: 2585, column: 32, scope: !14887)
!14893 = !DILocation(line: 2585, column: 23, scope: !14887)
!14894 = !DILocation(line: 2585, column: 3, scope: !14887)
!14895 = !DILocation(line: 2587, column: 25, scope: !14887)
!14896 = !DILocation(line: 2587, column: 32, scope: !14887)
!14897 = !DILocation(line: 2587, column: 44, scope: !14887)
!14898 = !DILocation(line: 2587, column: 23, scope: !14887)
!14899 = !DILocation(line: 2589, column: 6, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 2589, column: 6)
!14901 = !DILocation(line: 2589, column: 26, scope: !14900)
!14902 = !DILocation(line: 2589, column: 6, scope: !14831)
!14903 = !DILocation(line: 2590, column: 39, scope: !14900)
!14904 = !DILocation(line: 2590, column: 46, scope: !14900)
!14905 = !DILocation(line: 2590, column: 3, scope: !14900)
!14906 = !DILocation(line: 2590, column: 13, scope: !14900)
!14907 = !DILocation(line: 2590, column: 36, scope: !14900)
!14908 = !DILocation(line: 2591, column: 17, scope: !14831)
!14909 = !DILocation(line: 2591, column: 27, scope: !14831)
!14910 = !DILocation(line: 2591, column: 39, scope: !14831)
!14911 = !DILocation(line: 2591, column: 14, scope: !14831)
!14912 = !DILocation(line: 2592, column: 30, scope: !14831)
!14913 = !DILocation(line: 2592, column: 37, scope: !14831)
!14914 = !DILocation(line: 2592, column: 2, scope: !14831)
!14915 = !DILocation(line: 2592, column: 15, scope: !14831)
!14916 = !DILocation(line: 2592, column: 27, scope: !14831)
!14917 = !DILocation(line: 2593, column: 10, scope: !14831)
!14918 = !DILocation(line: 2593, column: 16, scope: !14831)
!14919 = !DILocation(line: 2593, column: 2, scope: !14831)
!14920 = !DILocation(line: 2595, column: 3, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 2593, column: 23)
!14922 = !DILocation(line: 2595, column: 16, scope: !14921)
!14923 = !DILocation(line: 2595, column: 43, scope: !14921)
!14924 = !DILocation(line: 2596, column: 3, scope: !14921)
!14925 = !DILocation(line: 2598, column: 3, scope: !14921)
!14926 = !DILocation(line: 2598, column: 16, scope: !14921)
!14927 = !DILocation(line: 2598, column: 43, scope: !14921)
!14928 = !DILocation(line: 2599, column: 3, scope: !14921)
!14929 = !DILocation(line: 2601, column: 3, scope: !14921)
!14930 = !DILocation(line: 2601, column: 16, scope: !14921)
!14931 = !DILocation(line: 2601, column: 43, scope: !14921)
!14932 = !DILocation(line: 2602, column: 3, scope: !14921)
!14933 = !DILocation(line: 2610, column: 3, scope: !14921)
!14934 = !DILocation(line: 2613, column: 6, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 2613, column: 6)
!14936 = !DILocation(line: 2613, column: 6, scope: !14831)
!14937 = !DILocation(line: 2614, column: 3, scope: !14935)
!14938 = !DILocation(line: 2614, column: 12, scope: !14935)
!14939 = !DILocation(line: 2614, column: 23, scope: !14935)
!14940 = !DILocalVariable(name: "__mptr", scope: !14941, file: !3, line: 2616, type: !208)
!14941 = distinct !DILexicalBlock(scope: !14942, file: !3, line: 2616, column: 2)
!14942 = distinct !DILexicalBlock(scope: !14831, file: !3, line: 2616, column: 2)
!14943 = !DILocation(line: 2616, column: 2, scope: !14941)
!14944 = !DILocation(line: 2616, column: 2, scope: !14945)
!14945 = distinct !DILexicalBlock(scope: !14941, file: !3, line: 2616, column: 2)
!14946 = !DILocation(line: 2616, column: 2, scope: !14942)
!14947 = !DILocation(line: 2616, column: 2, scope: !14948)
!14948 = distinct !DILexicalBlock(scope: !14942, file: !3, line: 2616, column: 2)
!14949 = !DILocation(line: 2618, column: 7, scope: !14950)
!14950 = distinct !DILexicalBlock(scope: !14951, file: !3, line: 2618, column: 7)
!14951 = distinct !DILexicalBlock(scope: !14948, file: !3, line: 2617, column: 22)
!14952 = !DILocation(line: 2618, column: 14, scope: !14950)
!14953 = !DILocation(line: 2619, column: 5, scope: !14950)
!14954 = !DILocation(line: 2619, column: 17, scope: !14950)
!14955 = !DILocation(line: 2619, column: 25, scope: !14950)
!14956 = !DILocation(line: 2618, column: 30, scope: !14950)
!14957 = !DILocation(line: 2618, column: 7, scope: !14951)
!14958 = !DILocation(line: 2621, column: 19, scope: !14959)
!14959 = distinct !DILexicalBlock(scope: !14950, file: !3, line: 2619, column: 42)
!14960 = !DILocation(line: 2621, column: 28, scope: !14959)
!14961 = !DILocation(line: 2622, column: 7, scope: !14959)
!14962 = !DILocation(line: 2622, column: 19, scope: !14959)
!14963 = !DILocation(line: 2621, column: 4, scope: !14959)
!14964 = !DILocation(line: 2623, column: 4, scope: !14959)
!14965 = !DILocation(line: 2625, column: 2, scope: !14951)
!14966 = !DILocalVariable(name: "__mptr", scope: !14967, file: !3, line: 2616, type: !208)
!14967 = distinct !DILexicalBlock(scope: !14948, file: !3, line: 2616, column: 2)
!14968 = !DILocation(line: 2616, column: 2, scope: !14967)
!14969 = !DILocation(line: 2616, column: 2, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14967, file: !3, line: 2616, column: 2)
!14971 = distinct !{!14971, !14946, !14972}
!14972 = !DILocation(line: 2625, column: 2, scope: !14942)
!14973 = !DILocation(line: 2627, column: 17, scope: !14831)
!14974 = !DILocation(line: 2627, column: 26, scope: !14831)
!14975 = !DILocation(line: 2628, column: 5, scope: !14831)
!14976 = !DILocation(line: 2628, column: 18, scope: !14831)
!14977 = !DILocation(line: 2627, column: 2, scope: !14831)
!14978 = !DILocation(line: 2629, column: 1, scope: !14831)
!14979 = distinct !DISubprogram(name: "xhci_check_bw_table", scope: !3, file: !3, line: 2290, type: !14980, scopeLine: 2293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!14980 = !DISubroutineType(types: !14981)
!14981 = !{!265, !4497, !5290, !265}
!14982 = !DILocalVariable(name: "xhci", arg: 1, scope: !14979, file: !3, line: 2290, type: !4497)
!14983 = !DILocation(line: 2290, column: 49, scope: !14979)
!14984 = !DILocalVariable(name: "virt_dev", arg: 2, scope: !14979, file: !3, line: 2291, type: !5290)
!14985 = !DILocation(line: 2291, column: 28, scope: !14979)
!14986 = !DILocalVariable(name: "old_active_eps", arg: 3, scope: !14979, file: !3, line: 2292, type: !265)
!14987 = !DILocation(line: 2292, column: 7, scope: !14979)
!14988 = !DILocalVariable(name: "bw_reserved", scope: !14979, file: !3, line: 2294, type: !7)
!14989 = !DILocation(line: 2294, column: 15, scope: !14979)
!14990 = !DILocalVariable(name: "max_bandwidth", scope: !14979, file: !3, line: 2295, type: !7)
!14991 = !DILocation(line: 2295, column: 15, scope: !14979)
!14992 = !DILocalVariable(name: "bw_used", scope: !14979, file: !3, line: 2296, type: !7)
!14993 = !DILocation(line: 2296, column: 15, scope: !14979)
!14994 = !DILocalVariable(name: "block_size", scope: !14979, file: !3, line: 2297, type: !7)
!14995 = !DILocation(line: 2297, column: 15, scope: !14979)
!14996 = !DILocalVariable(name: "bw_table", scope: !14979, file: !3, line: 2298, type: !5344)
!14997 = !DILocation(line: 2298, column: 33, scope: !14979)
!14998 = !DILocalVariable(name: "packet_size", scope: !14979, file: !3, line: 2299, type: !7)
!14999 = !DILocation(line: 2299, column: 15, scope: !14979)
!15000 = !DILocalVariable(name: "overhead", scope: !14979, file: !3, line: 2300, type: !7)
!15001 = !DILocation(line: 2300, column: 15, scope: !14979)
!15002 = !DILocalVariable(name: "packets_transmitted", scope: !14979, file: !3, line: 2301, type: !7)
!15003 = !DILocation(line: 2301, column: 15, scope: !14979)
!15004 = !DILocalVariable(name: "packets_remaining", scope: !14979, file: !3, line: 2302, type: !7)
!15005 = !DILocation(line: 2302, column: 15, scope: !14979)
!15006 = !DILocalVariable(name: "i", scope: !14979, file: !3, line: 2303, type: !7)
!15007 = !DILocation(line: 2303, column: 15, scope: !14979)
!15008 = !DILocation(line: 2305, column: 6, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !14979, file: !3, line: 2305, column: 6)
!15010 = !DILocation(line: 2305, column: 16, scope: !15009)
!15011 = !DILocation(line: 2305, column: 22, scope: !15009)
!15012 = !DILocation(line: 2305, column: 28, scope: !15009)
!15013 = !DILocation(line: 2305, column: 6, scope: !14979)
!15014 = !DILocation(line: 2306, column: 27, scope: !15009)
!15015 = !DILocation(line: 2306, column: 33, scope: !15009)
!15016 = !DILocation(line: 2306, column: 10, scope: !15009)
!15017 = !DILocation(line: 2306, column: 3, scope: !15009)
!15018 = !DILocation(line: 2308, column: 6, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !14979, file: !3, line: 2308, column: 6)
!15020 = !DILocation(line: 2308, column: 16, scope: !15019)
!15021 = !DILocation(line: 2308, column: 22, scope: !15019)
!15022 = !DILocation(line: 2308, column: 28, scope: !15019)
!15023 = !DILocation(line: 2308, column: 6, scope: !14979)
!15024 = !DILocation(line: 2309, column: 17, scope: !15025)
!15025 = distinct !DILexicalBlock(scope: !15019, file: !3, line: 2308, column: 47)
!15026 = !DILocation(line: 2311, column: 17, scope: !15025)
!15027 = !DILocation(line: 2311, column: 15, scope: !15025)
!15028 = !DILocation(line: 2312, column: 2, scope: !15025)
!15029 = !DILocation(line: 2313, column: 17, scope: !15030)
!15030 = distinct !DILexicalBlock(scope: !15019, file: !3, line: 2312, column: 9)
!15031 = !DILocation(line: 2314, column: 17, scope: !15030)
!15032 = !DILocation(line: 2314, column: 15, scope: !15030)
!15033 = !DILocation(line: 2317, column: 13, scope: !14979)
!15034 = !DILocation(line: 2317, column: 23, scope: !14979)
!15035 = !DILocation(line: 2317, column: 11, scope: !14979)
!15036 = !DILocation(line: 2321, column: 35, scope: !14979)
!15037 = !DILocation(line: 2321, column: 45, scope: !14979)
!15038 = !DILocation(line: 2321, column: 15, scope: !14979)
!15039 = !DILocation(line: 2321, column: 13, scope: !14979)
!15040 = !DILocation(line: 2326, column: 6, scope: !15041)
!15041 = distinct !DILexicalBlock(scope: !14979, file: !3, line: 2326, column: 6)
!15042 = !DILocation(line: 2326, column: 16, scope: !15041)
!15043 = !DILocation(line: 2326, column: 6, scope: !14979)
!15044 = !DILocation(line: 2327, column: 18, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15041, file: !3, line: 2326, column: 25)
!15046 = !DILocation(line: 2329, column: 5, scope: !15045)
!15047 = !DILocation(line: 2329, column: 15, scope: !15045)
!15048 = !DILocation(line: 2327, column: 3, scope: !15045)
!15049 = !DILocation(line: 2330, column: 30, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !15045, file: !3, line: 2330, column: 7)
!15051 = !DILocation(line: 2330, column: 36, scope: !15050)
!15052 = !DILocation(line: 2330, column: 46, scope: !15050)
!15053 = !DILocation(line: 2330, column: 7, scope: !15050)
!15054 = !DILocation(line: 2330, column: 7, scope: !15045)
!15055 = !DILocation(line: 2331, column: 4, scope: !15056)
!15056 = distinct !DILexicalBlock(scope: !15050, file: !3, line: 2330, column: 63)
!15057 = !DILocation(line: 2333, column: 4, scope: !15056)
!15058 = !DILocation(line: 2335, column: 18, scope: !15045)
!15059 = !DILocation(line: 2337, column: 5, scope: !15045)
!15060 = !DILocation(line: 2337, column: 15, scope: !15045)
!15061 = !DILocation(line: 2337, column: 24, scope: !15045)
!15062 = !DILocation(line: 2338, column: 5, scope: !15045)
!15063 = !DILocation(line: 2338, column: 15, scope: !15045)
!15064 = !DILocation(line: 2338, column: 24, scope: !15045)
!15065 = !DILocation(line: 2335, column: 3, scope: !15045)
!15066 = !DILocation(line: 2339, column: 2, scope: !15045)
!15067 = !DILocation(line: 2340, column: 18, scope: !15068)
!15068 = distinct !DILexicalBlock(scope: !15041, file: !3, line: 2339, column: 9)
!15069 = !DILocation(line: 2342, column: 5, scope: !15068)
!15070 = !DILocation(line: 2342, column: 15, scope: !15068)
!15071 = !DILocation(line: 2340, column: 3, scope: !15068)
!15072 = !DILocation(line: 2348, column: 12, scope: !14979)
!15073 = !DILocation(line: 2349, column: 3, scope: !14979)
!15074 = !DILocation(line: 2349, column: 13, scope: !14979)
!15075 = !DILocation(line: 2349, column: 28, scope: !14979)
!15076 = !DILocation(line: 2350, column: 30, scope: !14979)
!15077 = !DILocation(line: 2350, column: 40, scope: !14979)
!15078 = !DILocation(line: 2350, column: 3, scope: !14979)
!15079 = !DILocation(line: 2349, column: 40, scope: !14979)
!15080 = !DILocation(line: 2348, column: 71, scope: !14979)
!15081 = !DILocation(line: 2348, column: 10, scope: !14979)
!15082 = !DILocation(line: 2352, column: 9, scope: !15083)
!15083 = distinct !DILexicalBlock(scope: !14979, file: !3, line: 2352, column: 2)
!15084 = !DILocation(line: 2352, column: 7, scope: !15083)
!15085 = !DILocation(line: 2352, column: 14, scope: !15086)
!15086 = distinct !DILexicalBlock(scope: !15083, file: !3, line: 2352, column: 2)
!15087 = !DILocation(line: 2352, column: 16, scope: !15086)
!15088 = !DILocation(line: 2352, column: 2, scope: !15083)
!15089 = !DILocalVariable(name: "bw_added", scope: !15090, file: !3, line: 2353, type: !7)
!15090 = distinct !DILexicalBlock(scope: !15086, file: !3, line: 2352, column: 42)
!15091 = !DILocation(line: 2353, column: 16, scope: !15090)
!15092 = !DILocalVariable(name: "largest_mps", scope: !15090, file: !3, line: 2354, type: !7)
!15093 = !DILocation(line: 2354, column: 16, scope: !15090)
!15094 = !DILocalVariable(name: "interval_overhead", scope: !15090, file: !3, line: 2355, type: !7)
!15095 = !DILocation(line: 2355, column: 16, scope: !15090)
!15096 = !DILocation(line: 2362, column: 27, scope: !15090)
!15097 = !DILocation(line: 2362, column: 25, scope: !15090)
!15098 = !DILocation(line: 2363, column: 4, scope: !15090)
!15099 = !DILocation(line: 2363, column: 14, scope: !15090)
!15100 = !DILocation(line: 2363, column: 26, scope: !15090)
!15101 = !DILocation(line: 2363, column: 29, scope: !15090)
!15102 = !DILocation(line: 2362, column: 45, scope: !15090)
!15103 = !DILocation(line: 2362, column: 21, scope: !15090)
!15104 = !DILocation(line: 2368, column: 19, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15090, file: !3, line: 2368, column: 7)
!15106 = !DILocation(line: 2368, column: 29, scope: !15105)
!15107 = !DILocation(line: 2368, column: 41, scope: !15105)
!15108 = !DILocation(line: 2368, column: 44, scope: !15105)
!15109 = !DILocation(line: 2368, column: 7, scope: !15105)
!15110 = !DILocation(line: 2368, column: 7, scope: !15090)
!15111 = !DILocation(line: 2369, column: 16, scope: !15105)
!15112 = !DILocation(line: 2369, column: 4, scope: !15105)
!15113 = !DILocalVariable(name: "virt_ep", scope: !15114, file: !3, line: 2371, type: !5464)
!15114 = distinct !DILexicalBlock(scope: !15105, file: !3, line: 2370, column: 8)
!15115 = !DILocation(line: 2371, column: 25, scope: !15114)
!15116 = !DILocalVariable(name: "ep_entry", scope: !15114, file: !3, line: 2372, type: !218)
!15117 = !DILocation(line: 2372, column: 22, scope: !15114)
!15118 = !DILocation(line: 2374, column: 15, scope: !15114)
!15119 = !DILocation(line: 2374, column: 25, scope: !15114)
!15120 = !DILocation(line: 2374, column: 37, scope: !15114)
!15121 = !DILocation(line: 2374, column: 40, scope: !15114)
!15122 = !DILocation(line: 2374, column: 50, scope: !15114)
!15123 = !DILocation(line: 2374, column: 13, scope: !15114)
!15124 = !DILocalVariable(name: "__mptr", scope: !15125, file: !3, line: 2375, type: !208)
!15125 = distinct !DILexicalBlock(scope: !15114, file: !3, line: 2375, column: 14)
!15126 = !DILocation(line: 2375, column: 14, scope: !15125)
!15127 = !DILocation(line: 2375, column: 14, scope: !15128)
!15128 = distinct !DILexicalBlock(scope: !15125, file: !3, line: 2375, column: 14)
!15129 = !DILocation(line: 2375, column: 12, scope: !15114)
!15130 = !DILocation(line: 2378, column: 18, scope: !15114)
!15131 = !DILocation(line: 2378, column: 16, scope: !15114)
!15132 = !DILocation(line: 2382, column: 7, scope: !15133)
!15133 = distinct !DILexicalBlock(scope: !15090, file: !3, line: 2382, column: 7)
!15134 = !DILocation(line: 2382, column: 21, scope: !15133)
!15135 = !DILocation(line: 2382, column: 19, scope: !15133)
!15136 = !DILocation(line: 2382, column: 7, scope: !15090)
!15137 = !DILocation(line: 2383, column: 18, scope: !15133)
!15138 = !DILocation(line: 2383, column: 16, scope: !15133)
!15139 = !DILocation(line: 2383, column: 4, scope: !15133)
!15140 = !DILocation(line: 2387, column: 6, scope: !15090)
!15141 = !DILocation(line: 2387, column: 16, scope: !15090)
!15142 = !DILocation(line: 2387, column: 28, scope: !15090)
!15143 = !DILocation(line: 2386, column: 23, scope: !15090)
!15144 = !DILocation(line: 2386, column: 21, scope: !15090)
!15145 = !DILocation(line: 2388, column: 7, scope: !15146)
!15146 = distinct !DILexicalBlock(scope: !15090, file: !3, line: 2388, column: 7)
!15147 = !DILocation(line: 2388, column: 27, scope: !15146)
!15148 = !DILocation(line: 2388, column: 25, scope: !15146)
!15149 = !DILocation(line: 2388, column: 7, scope: !15090)
!15150 = !DILocation(line: 2389, column: 15, scope: !15146)
!15151 = !DILocation(line: 2389, column: 13, scope: !15146)
!15152 = !DILocation(line: 2389, column: 4, scope: !15146)
!15153 = !DILocation(line: 2394, column: 25, scope: !15090)
!15154 = !DILocation(line: 2394, column: 47, scope: !15090)
!15155 = !DILocation(line: 2394, column: 49, scope: !15090)
!15156 = !DILocation(line: 2394, column: 43, scope: !15090)
!15157 = !DILocation(line: 2394, column: 23, scope: !15090)
!15158 = !DILocation(line: 2397, column: 14, scope: !15090)
!15159 = !DILocation(line: 2397, column: 37, scope: !15090)
!15160 = !DILocation(line: 2397, column: 48, scope: !15090)
!15161 = !DILocation(line: 2397, column: 46, scope: !15090)
!15162 = !DILocation(line: 2397, column: 34, scope: !15090)
!15163 = !DILocation(line: 2397, column: 12, scope: !15090)
!15164 = !DILocation(line: 2400, column: 23, scope: !15090)
!15165 = !DILocation(line: 2400, column: 50, scope: !15090)
!15166 = !DILocation(line: 2400, column: 52, scope: !15090)
!15167 = !DILocation(line: 2400, column: 46, scope: !15090)
!15168 = !DILocation(line: 2400, column: 41, scope: !15090)
!15169 = !DILocation(line: 2400, column: 21, scope: !15090)
!15170 = !DILocation(line: 2406, column: 7, scope: !15171)
!15171 = distinct !DILexicalBlock(scope: !15090, file: !3, line: 2406, column: 7)
!15172 = !DILocation(line: 2406, column: 25, scope: !15171)
!15173 = !DILocation(line: 2406, column: 7, scope: !15090)
!15174 = !DILocation(line: 2407, column: 16, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !15171, file: !3, line: 2406, column: 31)
!15176 = !DILocation(line: 2408, column: 13, scope: !15175)
!15177 = !DILocation(line: 2409, column: 3, scope: !15175)
!15178 = !DILocation(line: 2409, column: 14, scope: !15179)
!15179 = distinct !DILexicalBlock(scope: !15171, file: !3, line: 2409, column: 14)
!15180 = !DILocation(line: 2409, column: 34, scope: !15179)
!15181 = !DILocation(line: 2409, column: 14, scope: !15171)
!15182 = !DILocation(line: 2415, column: 18, scope: !15183)
!15183 = distinct !DILexicalBlock(scope: !15179, file: !3, line: 2409, column: 39)
!15184 = !DILocation(line: 2415, column: 16, scope: !15183)
!15185 = !DILocation(line: 2416, column: 15, scope: !15183)
!15186 = !DILocation(line: 2416, column: 13, scope: !15183)
!15187 = !DILocation(line: 2417, column: 3, scope: !15183)
!15188 = !DILocation(line: 2421, column: 14, scope: !15090)
!15189 = !DILocation(line: 2421, column: 11, scope: !15090)
!15190 = !DILocation(line: 2422, column: 7, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !15090, file: !3, line: 2422, column: 7)
!15192 = !DILocation(line: 2422, column: 17, scope: !15191)
!15193 = !DILocation(line: 2422, column: 15, scope: !15191)
!15194 = !DILocation(line: 2422, column: 7, scope: !15090)
!15195 = !DILocation(line: 2423, column: 4, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15191, file: !3, line: 2422, column: 32)
!15197 = !DILocation(line: 2426, column: 4, scope: !15196)
!15198 = !DILocation(line: 2428, column: 2, scope: !15090)
!15199 = !DILocation(line: 2352, column: 38, scope: !15086)
!15200 = !DILocation(line: 2352, column: 2, scope: !15086)
!15201 = distinct !{!15201, !15088, !15202}
!15202 = !DILocation(line: 2428, column: 2, scope: !15083)
!15203 = !DILocation(line: 2435, column: 6, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !14979, file: !3, line: 2435, column: 6)
!15205 = !DILocation(line: 2435, column: 24, scope: !15204)
!15206 = !DILocation(line: 2435, column: 6, scope: !14979)
!15207 = !DILocation(line: 2436, column: 14, scope: !15204)
!15208 = !DILocation(line: 2436, column: 25, scope: !15204)
!15209 = !DILocation(line: 2436, column: 23, scope: !15204)
!15210 = !DILocation(line: 2436, column: 11, scope: !15204)
!15211 = !DILocation(line: 2436, column: 3, scope: !15204)
!15212 = !DILocation(line: 2438, column: 7, scope: !15213)
!15213 = distinct !DILexicalBlock(scope: !14979, file: !3, line: 2438, column: 6)
!15214 = !DILocation(line: 2438, column: 17, scope: !15213)
!15215 = !DILocation(line: 2438, column: 25, scope: !15213)
!15216 = !DILocation(line: 2438, column: 28, scope: !15213)
!15217 = !DILocation(line: 2438, column: 38, scope: !15213)
!15218 = !DILocation(line: 2438, column: 44, scope: !15213)
!15219 = !DILocation(line: 2438, column: 50, scope: !15213)
!15220 = !DILocation(line: 2438, column: 6, scope: !14979)
!15221 = !DILocalVariable(name: "port_index", scope: !15222, file: !3, line: 2439, type: !7)
!15222 = distinct !DILexicalBlock(scope: !15213, file: !3, line: 2438, column: 69)
!15223 = !DILocation(line: 2439, column: 16, scope: !15222)
!15224 = !DILocation(line: 2439, column: 29, scope: !15222)
!15225 = !DILocation(line: 2439, column: 39, scope: !15222)
!15226 = !DILocation(line: 2439, column: 49, scope: !15222)
!15227 = !DILocation(line: 2446, column: 4, scope: !15222)
!15228 = !DILocation(line: 2446, column: 10, scope: !15222)
!15229 = !DILocation(line: 2446, column: 16, scope: !15222)
!15230 = !DILocation(line: 2446, column: 28, scope: !15222)
!15231 = !DILocation(line: 2445, column: 29, scope: !15222)
!15232 = !DILocation(line: 2445, column: 11, scope: !15222)
!15233 = !DILocation(line: 2447, column: 2, scope: !15222)
!15234 = !DILocation(line: 2449, column: 17, scope: !14979)
!15235 = !DILocation(line: 2452, column: 3, scope: !14979)
!15236 = !DILocation(line: 2452, column: 12, scope: !14979)
!15237 = !DILocation(line: 2452, column: 27, scope: !14979)
!15238 = !DILocation(line: 2453, column: 4, scope: !14979)
!15239 = !DILocation(line: 2453, column: 20, scope: !14979)
!15240 = !DILocation(line: 2453, column: 18, scope: !14979)
!15241 = !DILocation(line: 2453, column: 30, scope: !14979)
!15242 = !DILocation(line: 2453, column: 28, scope: !14979)
!15243 = !DILocation(line: 2453, column: 43, scope: !14979)
!15244 = !DILocation(line: 2454, column: 3, scope: !14979)
!15245 = !DILocation(line: 2453, column: 49, scope: !14979)
!15246 = !DILocation(line: 2449, column: 2, scope: !14979)
!15247 = !DILocation(line: 2456, column: 13, scope: !14979)
!15248 = !DILocation(line: 2456, column: 10, scope: !14979)
!15249 = !DILocation(line: 2457, column: 6, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !14979, file: !3, line: 2457, column: 6)
!15251 = !DILocation(line: 2457, column: 16, scope: !15250)
!15252 = !DILocation(line: 2457, column: 14, scope: !15250)
!15253 = !DILocation(line: 2457, column: 6, scope: !14979)
!15254 = !DILocation(line: 2458, column: 3, scope: !15255)
!15255 = distinct !DILexicalBlock(scope: !15250, file: !3, line: 2457, column: 31)
!15256 = !DILocation(line: 2460, column: 3, scope: !15255)
!15257 = !DILocation(line: 2463, column: 22, scope: !14979)
!15258 = !DILocation(line: 2463, column: 2, scope: !14979)
!15259 = !DILocation(line: 2463, column: 12, scope: !14979)
!15260 = !DILocation(line: 2463, column: 20, scope: !14979)
!15261 = !DILocation(line: 2464, column: 2, scope: !14979)
!15262 = !DILocation(line: 2465, column: 1, scope: !14979)
!15263 = distinct !DISubprogram(name: "xhci_is_async_ep", scope: !3, file: !3, line: 2467, type: !15264, scopeLine: 2468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15264 = !DISubroutineType(types: !15265)
!15265 = !{!569, !7}
!15266 = !DILocalVariable(name: "ep_type", arg: 1, scope: !15263, file: !3, line: 2467, type: !7)
!15267 = !DILocation(line: 2467, column: 43, scope: !15263)
!15268 = !DILocation(line: 2469, column: 10, scope: !15263)
!15269 = !DILocation(line: 2469, column: 18, scope: !15263)
!15270 = !DILocation(line: 2469, column: 33, scope: !15263)
!15271 = !DILocation(line: 2469, column: 36, scope: !15263)
!15272 = !DILocation(line: 2469, column: 44, scope: !15263)
!15273 = !DILocation(line: 2469, column: 58, scope: !15263)
!15274 = !DILocation(line: 2470, column: 6, scope: !15263)
!15275 = !DILocation(line: 2470, column: 14, scope: !15263)
!15276 = !DILocation(line: 2470, column: 28, scope: !15263)
!15277 = !DILocation(line: 2471, column: 6, scope: !15263)
!15278 = !DILocation(line: 2471, column: 14, scope: !15263)
!15279 = !DILocation(line: 0, scope: !15263)
!15280 = !DILocation(line: 2469, column: 2, scope: !15263)
!15281 = distinct !DISubprogram(name: "xhci_is_sync_in_ep", scope: !3, file: !3, line: 2474, type: !15264, scopeLine: 2475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15282 = !DILocalVariable(name: "ep_type", arg: 1, scope: !15281, file: !3, line: 2474, type: !7)
!15283 = !DILocation(line: 2474, column: 45, scope: !15281)
!15284 = !DILocation(line: 2476, column: 10, scope: !15281)
!15285 = !DILocation(line: 2476, column: 18, scope: !15281)
!15286 = !DILocation(line: 2476, column: 32, scope: !15281)
!15287 = !DILocation(line: 2476, column: 35, scope: !15281)
!15288 = !DILocation(line: 2476, column: 43, scope: !15281)
!15289 = !DILocation(line: 2476, column: 2, scope: !15281)
!15290 = distinct !DISubprogram(name: "xhci_get_ss_bw_consumed", scope: !3, file: !3, line: 2479, type: !15291, scopeLine: 2480, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15291 = !DISubroutineType(types: !15292)
!15292 = !{!7, !14713}
!15293 = !DILocalVariable(name: "ep_bw", arg: 1, scope: !15290, file: !3, line: 2479, type: !14713)
!15294 = !DILocation(line: 2479, column: 66, scope: !15290)
!15295 = !DILocalVariable(name: "mps", scope: !15290, file: !3, line: 2481, type: !7)
!15296 = !DILocation(line: 2481, column: 15, scope: !15290)
!15297 = !DILocation(line: 2481, column: 21, scope: !15290)
!15298 = !DILocation(line: 2483, column: 6, scope: !15299)
!15299 = distinct !DILexicalBlock(scope: !15290, file: !3, line: 2483, column: 6)
!15300 = !DILocation(line: 2483, column: 13, scope: !15299)
!15301 = !DILocation(line: 2483, column: 25, scope: !15299)
!15302 = !DILocation(line: 2483, column: 6, scope: !15290)
!15303 = !DILocation(line: 2485, column: 5, scope: !15299)
!15304 = !DILocation(line: 2485, column: 12, scope: !15299)
!15305 = !DILocation(line: 2485, column: 19, scope: !15299)
!15306 = !DILocation(line: 2485, column: 26, scope: !15299)
!15307 = !DILocation(line: 2485, column: 17, scope: !15299)
!15308 = !DILocation(line: 2486, column: 21, scope: !15299)
!15309 = !DILocation(line: 2486, column: 19, scope: !15299)
!15310 = !DILocation(line: 2485, column: 38, scope: !15299)
!15311 = !DILocation(line: 2484, column: 28, scope: !15299)
!15312 = !DILocation(line: 2484, column: 3, scope: !15299)
!15313 = !DILocation(line: 2487, column: 9, scope: !15290)
!15314 = !DILocation(line: 2487, column: 2, scope: !15290)
!15315 = !DILocation(line: 2491, column: 1, scope: !15290)
!15316 = distinct !DISubprogram(name: "list_empty", scope: !15317, file: !15317, line: 280, type: !15318, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15317 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!15318 = !DISubroutineType(types: !15319)
!15319 = !{!265, !15320}
!15320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15321, size: 64)
!15321 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !214)
!15322 = !DILocalVariable(name: "head", arg: 1, scope: !15316, file: !15317, line: 280, type: !15320)
!15323 = !DILocation(line: 280, column: 54, scope: !15316)
!15324 = !DILocation(line: 282, column: 9, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15316, file: !15317, line: 282, column: 9)
!15326 = !DILocation(line: 282, column: 9, scope: !15327)
!15327 = distinct !DILexicalBlock(scope: !15325, file: !15317, line: 282, column: 9)
!15328 = !DILocation(line: 282, column: 34, scope: !15316)
!15329 = !DILocation(line: 282, column: 31, scope: !15316)
!15330 = !DILocation(line: 282, column: 2, scope: !15316)
!15331 = distinct !DISubprogram(name: "list_del_init", scope: !15317, file: !15317, line: 202, type: !15332, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15332 = !DISubroutineType(types: !15333)
!15333 = !{null, !218}
!15334 = !DILocalVariable(name: "entry", arg: 1, scope: !15331, file: !15317, line: 202, type: !218)
!15335 = !DILocation(line: 202, column: 52, scope: !15331)
!15336 = !DILocation(line: 204, column: 19, scope: !15331)
!15337 = !DILocation(line: 204, column: 2, scope: !15331)
!15338 = !DILocation(line: 205, column: 17, scope: !15331)
!15339 = !DILocation(line: 205, column: 2, scope: !15331)
!15340 = !DILocation(line: 206, column: 1, scope: !15331)
!15341 = distinct !DISubprogram(name: "__list_del_entry", scope: !15317, file: !15317, line: 130, type: !15332, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15342 = !DILocalVariable(name: "entry", arg: 1, scope: !15341, file: !15317, line: 130, type: !218)
!15343 = !DILocation(line: 130, column: 55, scope: !15341)
!15344 = !DILocation(line: 132, column: 30, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15341, file: !15317, line: 132, column: 6)
!15346 = !DILocation(line: 132, column: 7, scope: !15345)
!15347 = !DILocation(line: 132, column: 6, scope: !15341)
!15348 = !DILocation(line: 133, column: 3, scope: !15345)
!15349 = !DILocation(line: 135, column: 13, scope: !15341)
!15350 = !DILocation(line: 135, column: 20, scope: !15341)
!15351 = !DILocation(line: 135, column: 26, scope: !15341)
!15352 = !DILocation(line: 135, column: 33, scope: !15341)
!15353 = !DILocation(line: 135, column: 2, scope: !15341)
!15354 = !DILocation(line: 136, column: 1, scope: !15341)
!15355 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !15317, file: !15317, line: 33, type: !15332, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15356 = !DILocalVariable(name: "list", arg: 1, scope: !15355, file: !15317, line: 33, type: !218)
!15357 = !DILocation(line: 33, column: 53, scope: !15355)
!15358 = !DILocation(line: 35, column: 2, scope: !15355)
!15359 = !DILocation(line: 35, column: 2, scope: !15360)
!15360 = distinct !DILexicalBlock(scope: !15355, file: !15317, line: 35, column: 2)
!15361 = !DILocation(line: 35, column: 2, scope: !15362)
!15362 = distinct !DILexicalBlock(scope: !15360, file: !15317, line: 35, column: 2)
!15363 = !DILocation(line: 35, column: 2, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15360, file: !15317, line: 35, column: 2)
!15365 = !DILocation(line: 36, column: 15, scope: !15355)
!15366 = !DILocation(line: 36, column: 2, scope: !15355)
!15367 = !DILocation(line: 36, column: 8, scope: !15355)
!15368 = !DILocation(line: 36, column: 13, scope: !15355)
!15369 = !DILocation(line: 37, column: 1, scope: !15355)
!15370 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !15317, file: !15317, line: 51, type: !15371, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15371 = !DISubroutineType(types: !15372)
!15372 = !{!569, !218}
!15373 = !DILocalVariable(name: "entry", arg: 1, scope: !15370, file: !15317, line: 51, type: !218)
!15374 = !DILocation(line: 51, column: 61, scope: !15370)
!15375 = !DILocation(line: 53, column: 2, scope: !15370)
!15376 = distinct !DISubprogram(name: "__list_del", scope: !15317, file: !15317, line: 110, type: !15377, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15377 = !DISubroutineType(types: !15378)
!15378 = !{null, !218, !218}
!15379 = !DILocalVariable(name: "prev", arg: 1, scope: !15376, file: !15317, line: 110, type: !218)
!15380 = !DILocation(line: 110, column: 50, scope: !15376)
!15381 = !DILocalVariable(name: "next", arg: 2, scope: !15376, file: !15317, line: 110, type: !218)
!15382 = !DILocation(line: 110, column: 75, scope: !15376)
!15383 = !DILocation(line: 112, column: 15, scope: !15376)
!15384 = !DILocation(line: 112, column: 2, scope: !15376)
!15385 = !DILocation(line: 112, column: 8, scope: !15376)
!15386 = !DILocation(line: 112, column: 13, scope: !15376)
!15387 = !DILocation(line: 113, column: 2, scope: !15376)
!15388 = !DILocation(line: 113, column: 2, scope: !15389)
!15389 = distinct !DILexicalBlock(scope: !15376, file: !15317, line: 113, column: 2)
!15390 = !DILocation(line: 113, column: 2, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15389, file: !15317, line: 113, column: 2)
!15392 = !DILocation(line: 113, column: 2, scope: !15393)
!15393 = distinct !DILexicalBlock(scope: !15389, file: !15317, line: 113, column: 2)
!15394 = !DILocation(line: 114, column: 1, scope: !15376)
!15395 = distinct !DISubprogram(name: "list_add_tail", scope: !15317, file: !15317, line: 98, type: !15377, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15396 = !DILocalVariable(name: "new", arg: 1, scope: !15395, file: !15317, line: 98, type: !218)
!15397 = !DILocation(line: 98, column: 52, scope: !15395)
!15398 = !DILocalVariable(name: "head", arg: 2, scope: !15395, file: !15317, line: 98, type: !218)
!15399 = !DILocation(line: 98, column: 75, scope: !15395)
!15400 = !DILocation(line: 100, column: 13, scope: !15395)
!15401 = !DILocation(line: 100, column: 18, scope: !15395)
!15402 = !DILocation(line: 100, column: 24, scope: !15395)
!15403 = !DILocation(line: 100, column: 30, scope: !15395)
!15404 = !DILocation(line: 100, column: 2, scope: !15395)
!15405 = !DILocation(line: 101, column: 1, scope: !15395)
!15406 = distinct !DISubprogram(name: "__list_add", scope: !15317, file: !15317, line: 63, type: !15407, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15407 = !DISubroutineType(types: !15408)
!15408 = !{null, !218, !218, !218}
!15409 = !DILocalVariable(name: "new", arg: 1, scope: !15406, file: !15317, line: 63, type: !218)
!15410 = !DILocation(line: 63, column: 49, scope: !15406)
!15411 = !DILocalVariable(name: "prev", arg: 2, scope: !15406, file: !15317, line: 64, type: !218)
!15412 = !DILocation(line: 64, column: 28, scope: !15406)
!15413 = !DILocalVariable(name: "next", arg: 3, scope: !15406, file: !15317, line: 65, type: !218)
!15414 = !DILocation(line: 65, column: 28, scope: !15406)
!15415 = !DILocation(line: 67, column: 24, scope: !15416)
!15416 = distinct !DILexicalBlock(scope: !15406, file: !15317, line: 67, column: 6)
!15417 = !DILocation(line: 67, column: 29, scope: !15416)
!15418 = !DILocation(line: 67, column: 35, scope: !15416)
!15419 = !DILocation(line: 67, column: 7, scope: !15416)
!15420 = !DILocation(line: 67, column: 6, scope: !15406)
!15421 = !DILocation(line: 68, column: 3, scope: !15416)
!15422 = !DILocation(line: 70, column: 15, scope: !15406)
!15423 = !DILocation(line: 70, column: 2, scope: !15406)
!15424 = !DILocation(line: 70, column: 8, scope: !15406)
!15425 = !DILocation(line: 70, column: 13, scope: !15406)
!15426 = !DILocation(line: 71, column: 14, scope: !15406)
!15427 = !DILocation(line: 71, column: 2, scope: !15406)
!15428 = !DILocation(line: 71, column: 7, scope: !15406)
!15429 = !DILocation(line: 71, column: 12, scope: !15406)
!15430 = !DILocation(line: 72, column: 14, scope: !15406)
!15431 = !DILocation(line: 72, column: 2, scope: !15406)
!15432 = !DILocation(line: 72, column: 7, scope: !15406)
!15433 = !DILocation(line: 72, column: 12, scope: !15406)
!15434 = !DILocation(line: 73, column: 2, scope: !15406)
!15435 = !DILocation(line: 73, column: 2, scope: !15436)
!15436 = distinct !DILexicalBlock(scope: !15406, file: !15317, line: 73, column: 2)
!15437 = !DILocation(line: 73, column: 2, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15436, file: !15317, line: 73, column: 2)
!15439 = !DILocation(line: 73, column: 2, scope: !15440)
!15440 = distinct !DILexicalBlock(scope: !15436, file: !15317, line: 73, column: 2)
!15441 = !DILocation(line: 74, column: 1, scope: !15406)
!15442 = distinct !DISubprogram(name: "__list_add_valid", scope: !15317, file: !15317, line: 45, type: !15443, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15443 = !DISubroutineType(types: !15444)
!15444 = !{!569, !218, !218, !218}
!15445 = !DILocalVariable(name: "new", arg: 1, scope: !15442, file: !15317, line: 45, type: !218)
!15446 = !DILocation(line: 45, column: 55, scope: !15442)
!15447 = !DILocalVariable(name: "prev", arg: 2, scope: !15442, file: !15317, line: 46, type: !218)
!15448 = !DILocation(line: 46, column: 23, scope: !15442)
!15449 = !DILocalVariable(name: "next", arg: 3, scope: !15442, file: !15317, line: 47, type: !218)
!15450 = !DILocation(line: 47, column: 23, scope: !15442)
!15451 = !DILocation(line: 49, column: 2, scope: !15442)
!15452 = distinct !DISubprogram(name: "xhci_check_ss_bw", scope: !3, file: !3, line: 2233, type: !15453, scopeLine: 2235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15453 = !DISubroutineType(types: !15454)
!15454 = !{!265, !4497, !5290}
!15455 = !DILocalVariable(name: "xhci", arg: 1, scope: !15452, file: !3, line: 2233, type: !4497)
!15456 = !DILocation(line: 2233, column: 46, scope: !15452)
!15457 = !DILocalVariable(name: "virt_dev", arg: 2, scope: !15452, file: !3, line: 2234, type: !5290)
!15458 = !DILocation(line: 2234, column: 28, scope: !15452)
!15459 = !DILocalVariable(name: "bw_reserved", scope: !15452, file: !3, line: 2236, type: !7)
!15460 = !DILocation(line: 2236, column: 15, scope: !15452)
!15461 = !DILocation(line: 2238, column: 14, scope: !15452)
!15462 = !DILocation(line: 2239, column: 6, scope: !15463)
!15463 = distinct !DILexicalBlock(scope: !15452, file: !3, line: 2239, column: 6)
!15464 = !DILocation(line: 2239, column: 16, scope: !15463)
!15465 = !DILocation(line: 2239, column: 26, scope: !15463)
!15466 = !DILocation(line: 2239, column: 55, scope: !15463)
!15467 = !DILocation(line: 2239, column: 53, scope: !15463)
!15468 = !DILocation(line: 2239, column: 35, scope: !15463)
!15469 = !DILocation(line: 2239, column: 6, scope: !15452)
!15470 = !DILocation(line: 2240, column: 3, scope: !15463)
!15471 = !DILocation(line: 2242, column: 14, scope: !15452)
!15472 = !DILocation(line: 2243, column: 6, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15452, file: !3, line: 2243, column: 6)
!15474 = !DILocation(line: 2243, column: 16, scope: !15473)
!15475 = !DILocation(line: 2243, column: 26, scope: !15473)
!15476 = !DILocation(line: 2243, column: 57, scope: !15473)
!15477 = !DILocation(line: 2243, column: 55, scope: !15473)
!15478 = !DILocation(line: 2243, column: 36, scope: !15473)
!15479 = !DILocation(line: 2243, column: 6, scope: !15452)
!15480 = !DILocation(line: 2244, column: 3, scope: !15473)
!15481 = !DILocation(line: 2246, column: 2, scope: !15452)
!15482 = !DILocation(line: 2247, column: 1, scope: !15452)
!15483 = distinct !DISubprogram(name: "xhci_get_block_size", scope: !3, file: !3, line: 2170, type: !15484, scopeLine: 2171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15484 = !DISubroutineType(types: !15485)
!15485 = !{!7, !4526}
!15486 = !DILocalVariable(name: "udev", arg: 1, scope: !15483, file: !3, line: 2170, type: !4526)
!15487 = !DILocation(line: 2170, column: 60, scope: !15483)
!15488 = !DILocation(line: 2172, column: 10, scope: !15483)
!15489 = !DILocation(line: 2172, column: 16, scope: !15483)
!15490 = !DILocation(line: 2172, column: 2, scope: !15483)
!15491 = !DILocation(line: 2175, column: 3, scope: !15492)
!15492 = distinct !DILexicalBlock(scope: !15483, file: !3, line: 2172, column: 23)
!15493 = !DILocation(line: 2177, column: 3, scope: !15492)
!15494 = !DILocation(line: 2180, column: 3, scope: !15492)
!15495 = !DILocation(line: 2185, column: 3, scope: !15492)
!15496 = !DILocation(line: 2187, column: 1, scope: !15483)
!15497 = distinct !DISubprogram(name: "xhci_check_tt_bw_table", scope: !3, file: !3, line: 2203, type: !14980, scopeLine: 2206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15498 = !DILocalVariable(name: "xhci", arg: 1, scope: !15497, file: !3, line: 2203, type: !4497)
!15499 = !DILocation(line: 2203, column: 52, scope: !15497)
!15500 = !DILocalVariable(name: "virt_dev", arg: 2, scope: !15497, file: !3, line: 2204, type: !5290)
!15501 = !DILocation(line: 2204, column: 28, scope: !15497)
!15502 = !DILocalVariable(name: "old_active_eps", arg: 3, scope: !15497, file: !3, line: 2205, type: !265)
!15503 = !DILocation(line: 2205, column: 7, scope: !15497)
!15504 = !DILocalVariable(name: "bw_table", scope: !15497, file: !3, line: 2207, type: !5344)
!15505 = !DILocation(line: 2207, column: 33, scope: !15497)
!15506 = !DILocalVariable(name: "tt_info", scope: !15497, file: !3, line: 2208, type: !5360)
!15507 = !DILocation(line: 2208, column: 26, scope: !15497)
!15508 = !DILocation(line: 2211, column: 14, scope: !15497)
!15509 = !DILocation(line: 2211, column: 20, scope: !15497)
!15510 = !DILocation(line: 2211, column: 26, scope: !15497)
!15511 = !DILocation(line: 2211, column: 36, scope: !15497)
!15512 = !DILocation(line: 2211, column: 46, scope: !15497)
!15513 = !DILocation(line: 2211, column: 51, scope: !15497)
!15514 = !DILocation(line: 2211, column: 11, scope: !15497)
!15515 = !DILocation(line: 2212, column: 12, scope: !15497)
!15516 = !DILocation(line: 2212, column: 22, scope: !15497)
!15517 = !DILocation(line: 2212, column: 10, scope: !15497)
!15518 = !DILocation(line: 2217, column: 6, scope: !15519)
!15519 = distinct !DILexicalBlock(scope: !15497, file: !3, line: 2217, column: 6)
!15520 = !DILocation(line: 2217, column: 6, scope: !15497)
!15521 = !DILocation(line: 2218, column: 3, scope: !15519)
!15522 = !DILocation(line: 2219, column: 6, scope: !15523)
!15523 = distinct !DILexicalBlock(scope: !15497, file: !3, line: 2219, column: 6)
!15524 = !DILocation(line: 2219, column: 21, scope: !15523)
!15525 = !DILocation(line: 2219, column: 26, scope: !15523)
!15526 = !DILocation(line: 2219, column: 29, scope: !15523)
!15527 = !DILocation(line: 2219, column: 38, scope: !15523)
!15528 = !DILocation(line: 2219, column: 49, scope: !15523)
!15529 = !DILocation(line: 2219, column: 6, scope: !15497)
!15530 = !DILocation(line: 2220, column: 7, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15532, file: !3, line: 2220, column: 7)
!15532 = distinct !DILexicalBlock(scope: !15523, file: !3, line: 2219, column: 55)
!15533 = !DILocation(line: 2220, column: 17, scope: !15531)
!15534 = !DILocation(line: 2220, column: 25, scope: !15531)
!15535 = !DILocation(line: 2220, column: 42, scope: !15531)
!15536 = !DILocation(line: 2220, column: 7, scope: !15532)
!15537 = !DILocation(line: 2221, column: 4, scope: !15531)
!15538 = !DILocation(line: 2222, column: 3, scope: !15532)
!15539 = !DILocation(line: 2230, column: 2, scope: !15497)
!15540 = !DILocation(line: 2231, column: 1, scope: !15497)
!15541 = distinct !DISubprogram(name: "xhci_get_largest_overhead", scope: !3, file: !3, line: 2190, type: !15542, scopeLine: 2191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15542 = !DISubroutineType(types: !15543)
!15543 = !{!7, !14727}
!15544 = !DILocalVariable(name: "interval_bw", arg: 1, scope: !15541, file: !3, line: 2190, type: !14727)
!15545 = !DILocation(line: 2190, column: 52, scope: !15541)
!15546 = !DILocation(line: 2192, column: 6, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15541, file: !3, line: 2192, column: 6)
!15548 = !DILocation(line: 2192, column: 19, scope: !15547)
!15549 = !DILocation(line: 2192, column: 6, scope: !15541)
!15550 = !DILocation(line: 2193, column: 3, scope: !15547)
!15551 = !DILocation(line: 2194, column: 6, scope: !15552)
!15552 = distinct !DILexicalBlock(scope: !15541, file: !3, line: 2194, column: 6)
!15553 = !DILocation(line: 2194, column: 19, scope: !15552)
!15554 = !DILocation(line: 2194, column: 6, scope: !15541)
!15555 = !DILocation(line: 2195, column: 3, scope: !15552)
!15556 = !DILocation(line: 2196, column: 2, scope: !15541)
!15557 = !DILocation(line: 2197, column: 1, scope: !15541)
!15558 = distinct !DISubprogram(name: "xhci_count_num_dropped_endpoints", scope: !3, file: !3, line: 2084, type: !15559, scopeLine: 2086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15559 = !DISubroutineType(types: !15560)
!15560 = !{!7, !4497, !8108}
!15561 = !DILocation(line: 15, column: 67, scope: !14676, inlinedAt: !15562)
!15562 = distinct !DILocation(line: 2094, column: 3, scope: !15558)
!15563 = !DILocation(line: 17, column: 15, scope: !14676, inlinedAt: !15562)
!15564 = !DILocation(line: 15, column: 67, scope: !14676, inlinedAt: !15565)
!15565 = distinct !DILocation(line: 2093, column: 9, scope: !15558)
!15566 = !DILocation(line: 17, column: 15, scope: !14676, inlinedAt: !15565)
!15567 = !DILocalVariable(name: "xhci", arg: 1, scope: !15558, file: !3, line: 2084, type: !4497)
!15568 = !DILocation(line: 2084, column: 71, scope: !15558)
!15569 = !DILocalVariable(name: "ctrl_ctx", arg: 2, scope: !15558, file: !3, line: 2085, type: !8108)
!15570 = !DILocation(line: 2085, column: 34, scope: !15558)
!15571 = !DILocalVariable(name: "valid_add_flags", scope: !15558, file: !3, line: 2087, type: !204)
!15572 = !DILocation(line: 2087, column: 6, scope: !15558)
!15573 = !DILocalVariable(name: "valid_drop_flags", scope: !15558, file: !3, line: 2088, type: !204)
!15574 = !DILocation(line: 2088, column: 6, scope: !15558)
!15575 = !DILocation(line: 2090, column: 20, scope: !15558)
!15576 = !DILocation(line: 2090, column: 53, scope: !15558)
!15577 = !DILocation(line: 2090, column: 18, scope: !15558)
!15578 = !DILocation(line: 2091, column: 21, scope: !15558)
!15579 = !DILocation(line: 2091, column: 55, scope: !15558)
!15580 = !DILocation(line: 2091, column: 19, scope: !15558)
!15581 = !DILocation(line: 2093, column: 9, scope: !15558)
!15582 = !DILocation(line: 21, column: 15, scope: !14676, inlinedAt: !15565)
!15583 = !DILocation(line: 19, column: 2, scope: !14676, inlinedAt: !15565)
!15584 = !DILocation(line: 23, column: 9, scope: !14676, inlinedAt: !15565)
!15585 = !DILocation(line: 2094, column: 3, scope: !15558)
!15586 = !DILocation(line: 21, column: 15, scope: !14676, inlinedAt: !15562)
!15587 = !DILocation(line: 19, column: 2, scope: !14676, inlinedAt: !15562)
!15588 = !DILocation(line: 23, column: 9, scope: !14676, inlinedAt: !15562)
!15589 = !DILocation(line: 2093, column: 37, scope: !15558)
!15590 = !DILocation(line: 2093, column: 2, scope: !15558)
!15591 = distinct !DISubprogram(name: "trace_xhci_urb_dequeue", scope: !5835, file: !5835, line: 313, type: !4876, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15592 = !DILocalVariable(name: "urb", arg: 1, scope: !15591, file: !5835, line: 313, type: !4825)
!15593 = !DILocation(line: 313, column: 1, scope: !15591)
!15594 = distinct !DISubprogram(name: "xhci_urb_to_transfer_ring", scope: !145, file: !145, line: 2178, type: !15595, scopeLine: 2180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15595 = !DISubroutineType(types: !15596)
!15596 = !{!5179, !4497, !4825}
!15597 = !DILocalVariable(name: "xhci", arg: 1, scope: !15594, file: !145, line: 2178, type: !4497)
!15598 = !DILocation(line: 2178, column: 76, scope: !15594)
!15599 = !DILocalVariable(name: "urb", arg: 2, scope: !15594, file: !145, line: 2179, type: !4825)
!15600 = !DILocation(line: 2179, column: 21, scope: !15594)
!15601 = !DILocation(line: 2181, column: 37, scope: !15594)
!15602 = !DILocation(line: 2181, column: 43, scope: !15594)
!15603 = !DILocation(line: 2181, column: 48, scope: !15594)
!15604 = !DILocation(line: 2181, column: 53, scope: !15594)
!15605 = !DILocation(line: 2182, column: 31, scope: !15594)
!15606 = !DILocation(line: 2182, column: 36, scope: !15594)
!15607 = !DILocation(line: 2182, column: 40, scope: !15594)
!15608 = !DILocation(line: 2182, column: 6, scope: !15594)
!15609 = !DILocation(line: 2183, column: 6, scope: !15594)
!15610 = !DILocation(line: 2183, column: 11, scope: !15594)
!15611 = !DILocation(line: 2181, column: 9, scope: !15594)
!15612 = !DILocation(line: 2181, column: 2, scope: !15594)
!15613 = distinct !DISubprogram(name: "td_on_ring", scope: !3, file: !3, line: 41, type: !15614, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15614 = !DISubroutineType(types: !15615)
!15615 = !{!569, !8026, !5179}
!15616 = !DILocalVariable(name: "td", arg: 1, scope: !15613, file: !3, line: 41, type: !8026)
!15617 = !DILocation(line: 41, column: 40, scope: !15613)
!15618 = !DILocalVariable(name: "ring", arg: 2, scope: !15613, file: !3, line: 41, type: !5179)
!15619 = !DILocation(line: 41, column: 62, scope: !15613)
!15620 = !DILocalVariable(name: "seg", scope: !15613, file: !3, line: 43, type: !5183)
!15621 = !DILocation(line: 43, column: 23, scope: !15613)
!15622 = !DILocation(line: 43, column: 29, scope: !15613)
!15623 = !DILocation(line: 43, column: 35, scope: !15613)
!15624 = !DILocation(line: 45, column: 7, scope: !15625)
!15625 = distinct !DILexicalBlock(scope: !15613, file: !3, line: 45, column: 6)
!15626 = !DILocation(line: 45, column: 10, scope: !15625)
!15627 = !DILocation(line: 45, column: 14, scope: !15625)
!15628 = !DILocation(line: 45, column: 18, scope: !15625)
!15629 = !DILocation(line: 45, column: 6, scope: !15613)
!15630 = !DILocation(line: 46, column: 3, scope: !15625)
!15631 = !DILocation(line: 47, column: 2, scope: !15613)
!15632 = !DILocation(line: 48, column: 7, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15634, file: !3, line: 48, column: 7)
!15634 = distinct !DILexicalBlock(scope: !15613, file: !3, line: 47, column: 5)
!15635 = !DILocation(line: 48, column: 14, scope: !15633)
!15636 = !DILocation(line: 48, column: 18, scope: !15633)
!15637 = !DILocation(line: 48, column: 11, scope: !15633)
!15638 = !DILocation(line: 48, column: 7, scope: !15634)
!15639 = !DILocation(line: 49, column: 4, scope: !15633)
!15640 = !DILocation(line: 50, column: 9, scope: !15634)
!15641 = !DILocation(line: 50, column: 14, scope: !15634)
!15642 = !DILocation(line: 50, column: 7, scope: !15634)
!15643 = !DILocation(line: 51, column: 2, scope: !15634)
!15644 = !DILocation(line: 51, column: 11, scope: !15613)
!15645 = !DILocation(line: 51, column: 15, scope: !15613)
!15646 = !DILocation(line: 51, column: 18, scope: !15613)
!15647 = !DILocation(line: 51, column: 25, scope: !15613)
!15648 = !DILocation(line: 51, column: 31, scope: !15613)
!15649 = !DILocation(line: 51, column: 22, scope: !15613)
!15650 = !DILocation(line: 0, scope: !15613)
!15651 = distinct !{!15651, !15631, !15652}
!15652 = !DILocation(line: 51, column: 40, scope: !15613)
!15653 = !DILocation(line: 53, column: 2, scope: !15613)
!15654 = !DILocation(line: 54, column: 1, scope: !15613)
!15655 = distinct !DISubprogram(name: "trace_xhci_dbg_cancel_urb", scope: !5835, file: !5835, line: 60, type: !5836, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15656 = !DILocalVariable(name: "vaf", arg: 1, scope: !15655, file: !5835, line: 60, type: !5838)
!15657 = !DILocation(line: 60, column: 1, scope: !15655)
!15658 = distinct !DISubprogram(name: "xhci_urb_suitable_for_idt", scope: !145, file: !145, line: 2191, type: !15659, scopeLine: 2192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15659 = !DISubroutineType(types: !15660)
!15660 = !{!569, !4825}
!15661 = !DILocalVariable(name: "urb", arg: 1, scope: !15658, file: !145, line: 2191, type: !4825)
!15662 = !DILocation(line: 2191, column: 58, scope: !15658)
!15663 = !DILocation(line: 2193, column: 31, scope: !15664)
!15664 = distinct !DILexicalBlock(scope: !15658, file: !145, line: 2193, column: 6)
!15665 = !DILocation(line: 2193, column: 36, scope: !15664)
!15666 = !DILocation(line: 2193, column: 40, scope: !15664)
!15667 = !DILocation(line: 2193, column: 7, scope: !15664)
!15668 = !DILocation(line: 2193, column: 46, scope: !15664)
!15669 = !DILocation(line: 2193, column: 65, scope: !15664)
!15670 = !DILocation(line: 2193, column: 49, scope: !15664)
!15671 = !DILocation(line: 2193, column: 70, scope: !15664)
!15672 = !DILocation(line: 2194, column: 25, scope: !15664)
!15673 = !DILocation(line: 2194, column: 30, scope: !15664)
!15674 = !DILocation(line: 2194, column: 34, scope: !15664)
!15675 = !DILocation(line: 2194, column: 6, scope: !15664)
!15676 = !DILocation(line: 2194, column: 40, scope: !15664)
!15677 = !DILocation(line: 2194, column: 60, scope: !15664)
!15678 = !DILocation(line: 2195, column: 6, scope: !15664)
!15679 = !DILocation(line: 2195, column: 11, scope: !15664)
!15680 = !DILocation(line: 2195, column: 34, scope: !15664)
!15681 = !DILocation(line: 2195, column: 54, scope: !15664)
!15682 = !DILocation(line: 2196, column: 8, scope: !15664)
!15683 = !DILocation(line: 2196, column: 13, scope: !15664)
!15684 = !DILocation(line: 2196, column: 28, scope: !15664)
!15685 = !DILocation(line: 2196, column: 55, scope: !15664)
!15686 = !DILocation(line: 2197, column: 7, scope: !15664)
!15687 = !DILocation(line: 2197, column: 12, scope: !15664)
!15688 = !DILocation(line: 2193, column: 6, scope: !15658)
!15689 = !DILocation(line: 2198, column: 3, scope: !15664)
!15690 = !DILocation(line: 2200, column: 2, scope: !15658)
!15691 = !DILocation(line: 2201, column: 1, scope: !15658)
!15692 = distinct !DISubprogram(name: "usb_urb_dir_out", scope: !115, file: !115, line: 1762, type: !15693, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15693 = !DISubroutineType(types: !15694)
!15694 = !{!265, !4825}
!15695 = !DILocalVariable(name: "urb", arg: 1, scope: !15692, file: !115, line: 1762, type: !4825)
!15696 = !DILocation(line: 1762, column: 47, scope: !15692)
!15697 = !DILocation(line: 1764, column: 10, scope: !15692)
!15698 = !DILocation(line: 1764, column: 15, scope: !15692)
!15699 = !DILocation(line: 1764, column: 30, scope: !15692)
!15700 = !DILocation(line: 1764, column: 46, scope: !15692)
!15701 = !DILocation(line: 1764, column: 2, scope: !15692)
!15702 = distinct !DISubprogram(name: "xhci_get_endpoint_flag", scope: !3, file: !3, line: 1312, type: !7874, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15703 = !DILocalVariable(name: "desc", arg: 1, scope: !15702, file: !3, line: 1312, type: !7876)
!15704 = !DILocation(line: 1312, column: 76, scope: !15702)
!15705 = !DILocation(line: 1314, column: 39, scope: !15702)
!15706 = !DILocation(line: 1314, column: 15, scope: !15702)
!15707 = !DILocation(line: 1314, column: 45, scope: !15702)
!15708 = !DILocation(line: 1314, column: 11, scope: !15702)
!15709 = !DILocation(line: 1314, column: 2, scope: !15702)
!15710 = distinct !DISubprogram(name: "trace_xhci_free_dev", scope: !5835, file: !5835, line: 389, type: !8660, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15711 = !DILocalVariable(name: "ctx", arg: 1, scope: !15710, file: !5835, line: 389, type: !8442)
!15712 = !DILocation(line: 389, column: 1, scope: !15710)
!15713 = distinct !DISubprogram(name: "xhci_calculate_streams_and_bitmask", scope: !3, file: !3, line: 3314, type: !15714, scopeLine: 3318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15714 = !DISubroutineType(types: !15715)
!15715 = !{!265, !4497, !4526, !4975, !7, !3398, !278}
!15716 = !DILocalVariable(name: "xhci", arg: 1, scope: !15713, file: !3, line: 3314, type: !4497)
!15717 = !DILocation(line: 3314, column: 64, scope: !15713)
!15718 = !DILocalVariable(name: "udev", arg: 2, scope: !15713, file: !3, line: 3315, type: !4526)
!15719 = !DILocation(line: 3315, column: 22, scope: !15713)
!15720 = !DILocalVariable(name: "eps", arg: 3, scope: !15713, file: !3, line: 3316, type: !4975)
!15721 = !DILocation(line: 3316, column: 30, scope: !15713)
!15722 = !DILocalVariable(name: "num_eps", arg: 4, scope: !15713, file: !3, line: 3316, type: !7)
!15723 = !DILocation(line: 3316, column: 48, scope: !15713)
!15724 = !DILocalVariable(name: "num_streams", arg: 5, scope: !15713, file: !3, line: 3317, type: !3398)
!15725 = !DILocation(line: 3317, column: 17, scope: !15713)
!15726 = !DILocalVariable(name: "changed_ep_bitmask", arg: 6, scope: !15713, file: !3, line: 3317, type: !278)
!15727 = !DILocation(line: 3317, column: 35, scope: !15713)
!15728 = !DILocalVariable(name: "max_streams", scope: !15713, file: !3, line: 3319, type: !7)
!15729 = !DILocation(line: 3319, column: 15, scope: !15713)
!15730 = !DILocalVariable(name: "endpoint_flag", scope: !15713, file: !3, line: 3320, type: !7)
!15731 = !DILocation(line: 3320, column: 15, scope: !15713)
!15732 = !DILocalVariable(name: "i", scope: !15713, file: !3, line: 3321, type: !265)
!15733 = !DILocation(line: 3321, column: 6, scope: !15713)
!15734 = !DILocalVariable(name: "ret", scope: !15713, file: !3, line: 3322, type: !265)
!15735 = !DILocation(line: 3322, column: 6, scope: !15713)
!15736 = !DILocation(line: 3324, column: 9, scope: !15737)
!15737 = distinct !DILexicalBlock(scope: !15713, file: !3, line: 3324, column: 2)
!15738 = !DILocation(line: 3324, column: 7, scope: !15737)
!15739 = !DILocation(line: 3324, column: 14, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15737, file: !3, line: 3324, column: 2)
!15741 = !DILocation(line: 3324, column: 18, scope: !15740)
!15742 = !DILocation(line: 3324, column: 16, scope: !15740)
!15743 = !DILocation(line: 3324, column: 2, scope: !15737)
!15744 = !DILocation(line: 3325, column: 37, scope: !15745)
!15745 = distinct !DILexicalBlock(scope: !15740, file: !3, line: 3324, column: 32)
!15746 = !DILocation(line: 3325, column: 43, scope: !15745)
!15747 = !DILocation(line: 3326, column: 5, scope: !15745)
!15748 = !DILocation(line: 3326, column: 9, scope: !15745)
!15749 = !DILocation(line: 3326, column: 13, scope: !15745)
!15750 = !DILocation(line: 3326, column: 19, scope: !15745)
!15751 = !DILocation(line: 3325, column: 9, scope: !15745)
!15752 = !DILocation(line: 3325, column: 7, scope: !15745)
!15753 = !DILocation(line: 3327, column: 7, scope: !15754)
!15754 = distinct !DILexicalBlock(scope: !15745, file: !3, line: 3327, column: 7)
!15755 = !DILocation(line: 3327, column: 11, scope: !15754)
!15756 = !DILocation(line: 3327, column: 7, scope: !15745)
!15757 = !DILocation(line: 3328, column: 11, scope: !15754)
!15758 = !DILocation(line: 3328, column: 4, scope: !15754)
!15759 = !DILocation(line: 3330, column: 37, scope: !15745)
!15760 = !DILocation(line: 3330, column: 41, scope: !15745)
!15761 = !DILocation(line: 3330, column: 45, scope: !15745)
!15762 = !DILocation(line: 3330, column: 17, scope: !15745)
!15763 = !DILocation(line: 3330, column: 15, scope: !15745)
!15764 = !DILocation(line: 3331, column: 7, scope: !15765)
!15765 = distinct !DILexicalBlock(scope: !15745, file: !3, line: 3331, column: 7)
!15766 = !DILocation(line: 3331, column: 23, scope: !15765)
!15767 = !DILocation(line: 3331, column: 22, scope: !15765)
!15768 = !DILocation(line: 3331, column: 35, scope: !15765)
!15769 = !DILocation(line: 3331, column: 19, scope: !15765)
!15770 = !DILocation(line: 3331, column: 7, scope: !15745)
!15771 = !DILocation(line: 3335, column: 19, scope: !15772)
!15772 = distinct !DILexicalBlock(scope: !15765, file: !3, line: 3331, column: 41)
!15773 = !DILocation(line: 3335, column: 30, scope: !15772)
!15774 = !DILocation(line: 3335, column: 5, scope: !15772)
!15775 = !DILocation(line: 3335, column: 17, scope: !15772)
!15776 = !DILocation(line: 3336, column: 3, scope: !15772)
!15777 = !DILocation(line: 3338, column: 43, scope: !15745)
!15778 = !DILocation(line: 3338, column: 47, scope: !15745)
!15779 = !DILocation(line: 3338, column: 51, scope: !15745)
!15780 = !DILocation(line: 3338, column: 19, scope: !15745)
!15781 = !DILocation(line: 3338, column: 17, scope: !15745)
!15782 = !DILocation(line: 3339, column: 8, scope: !15783)
!15783 = distinct !DILexicalBlock(scope: !15745, file: !3, line: 3339, column: 7)
!15784 = !DILocation(line: 3339, column: 7, scope: !15783)
!15785 = !DILocation(line: 3339, column: 29, scope: !15783)
!15786 = !DILocation(line: 3339, column: 27, scope: !15783)
!15787 = !DILocation(line: 3339, column: 7, scope: !15745)
!15788 = !DILocation(line: 3340, column: 4, scope: !15783)
!15789 = !DILocation(line: 3341, column: 26, scope: !15745)
!15790 = !DILocation(line: 3341, column: 4, scope: !15745)
!15791 = !DILocation(line: 3341, column: 23, scope: !15745)
!15792 = !DILocation(line: 3342, column: 2, scope: !15745)
!15793 = !DILocation(line: 3324, column: 28, scope: !15740)
!15794 = !DILocation(line: 3324, column: 2, scope: !15740)
!15795 = distinct !{!15795, !15743, !15796}
!15796 = !DILocation(line: 3342, column: 2, scope: !15737)
!15797 = !DILocation(line: 3343, column: 2, scope: !15713)
!15798 = !DILocation(line: 3344, column: 1, scope: !15713)
!15799 = distinct !DISubprogram(name: "xhci_calculate_streams_entries", scope: !3, file: !3, line: 3288, type: !15800, scopeLine: 3290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15800 = !DISubroutineType(types: !15801)
!15801 = !{null, !4497, !3398, !3398}
!15802 = !DILocalVariable(name: "xhci", arg: 1, scope: !15799, file: !3, line: 3288, type: !4497)
!15803 = !DILocation(line: 3288, column: 61, scope: !15799)
!15804 = !DILocalVariable(name: "num_streams", arg: 2, scope: !15799, file: !3, line: 3289, type: !3398)
!15805 = !DILocation(line: 3289, column: 17, scope: !15799)
!15806 = !DILocalVariable(name: "num_stream_ctxs", arg: 3, scope: !15799, file: !3, line: 3289, type: !3398)
!15807 = !DILocation(line: 3289, column: 44, scope: !15799)
!15808 = !DILocalVariable(name: "max_streams", scope: !15799, file: !3, line: 3291, type: !7)
!15809 = !DILocation(line: 3291, column: 15, scope: !15799)
!15810 = !DILocation(line: 3294, column: 21, scope: !15799)
!15811 = !DILocation(line: 3294, column: 3, scope: !15799)
!15812 = !DILocation(line: 3294, column: 19, scope: !15799)
!15813 = !DILocation(line: 3301, column: 16, scope: !15799)
!15814 = !DILocation(line: 3301, column: 14, scope: !15799)
!15815 = !DILocation(line: 3302, column: 7, scope: !15816)
!15816 = distinct !DILexicalBlock(scope: !15799, file: !3, line: 3302, column: 6)
!15817 = !DILocation(line: 3302, column: 6, scope: !15816)
!15818 = !DILocation(line: 3302, column: 25, scope: !15816)
!15819 = !DILocation(line: 3302, column: 23, scope: !15816)
!15820 = !DILocation(line: 3302, column: 6, scope: !15799)
!15821 = !DILocation(line: 3305, column: 22, scope: !15822)
!15822 = distinct !DILexicalBlock(scope: !15816, file: !3, line: 3302, column: 38)
!15823 = !DILocation(line: 3305, column: 4, scope: !15822)
!15824 = !DILocation(line: 3305, column: 20, scope: !15822)
!15825 = !DILocation(line: 3306, column: 18, scope: !15822)
!15826 = !DILocation(line: 3306, column: 4, scope: !15822)
!15827 = !DILocation(line: 3306, column: 16, scope: !15822)
!15828 = !DILocation(line: 3307, column: 2, scope: !15822)
!15829 = !DILocation(line: 3308, column: 1, scope: !15799)
!15830 = distinct !DISubprogram(name: "xhci_debugfs_create_stream_files", scope: !5655, file: !5655, line: 138, type: !7965, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15831 = !DILocalVariable(name: "xhci", arg: 1, scope: !15830, file: !5655, line: 138, type: !4497)
!15832 = !DILocation(line: 138, column: 51, scope: !15830)
!15833 = !DILocalVariable(name: "virt_dev", arg: 2, scope: !15830, file: !5655, line: 139, type: !5290)
!15834 = !DILocation(line: 139, column: 31, scope: !15830)
!15835 = !DILocalVariable(name: "ep_index", arg: 3, scope: !15830, file: !5655, line: 140, type: !265)
!15836 = !DILocation(line: 140, column: 10, scope: !15830)
!15837 = !DILocation(line: 140, column: 22, scope: !15830)
!15838 = distinct !DISubprogram(name: "xhci_check_streams_endpoint", scope: !3, file: !3, line: 3248, type: !15839, scopeLine: 3251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15839 = !DISubroutineType(types: !15840)
!15840 = !{!265, !4497, !4526, !4725, !7}
!15841 = !DILocalVariable(name: "xhci", arg: 1, scope: !15838, file: !3, line: 3248, type: !4497)
!15842 = !DILocation(line: 3248, column: 57, scope: !15838)
!15843 = !DILocalVariable(name: "udev", arg: 2, scope: !15838, file: !3, line: 3249, type: !4526)
!15844 = !DILocation(line: 3249, column: 22, scope: !15838)
!15845 = !DILocalVariable(name: "ep", arg: 3, scope: !15838, file: !3, line: 3249, type: !4725)
!15846 = !DILocation(line: 3249, column: 54, scope: !15838)
!15847 = !DILocalVariable(name: "slot_id", arg: 4, scope: !15838, file: !3, line: 3250, type: !7)
!15848 = !DILocation(line: 3250, column: 16, scope: !15838)
!15849 = !DILocalVariable(name: "ret", scope: !15838, file: !3, line: 3252, type: !265)
!15850 = !DILocation(line: 3252, column: 6, scope: !15838)
!15851 = !DILocalVariable(name: "ep_index", scope: !15838, file: !3, line: 3253, type: !7)
!15852 = !DILocation(line: 3253, column: 15, scope: !15838)
!15853 = !DILocalVariable(name: "ep_state", scope: !15838, file: !3, line: 3254, type: !7)
!15854 = !DILocation(line: 3254, column: 15, scope: !15838)
!15855 = !DILocation(line: 3256, column: 7, scope: !15856)
!15856 = distinct !DILexicalBlock(scope: !15838, file: !3, line: 3256, column: 6)
!15857 = !DILocation(line: 3256, column: 6, scope: !15838)
!15858 = !DILocation(line: 3257, column: 3, scope: !15856)
!15859 = !DILocation(line: 3258, column: 36, scope: !15838)
!15860 = !DILocation(line: 3258, column: 24, scope: !15838)
!15861 = !DILocation(line: 3258, column: 43, scope: !15838)
!15862 = !DILocation(line: 3258, column: 49, scope: !15838)
!15863 = !DILocation(line: 3258, column: 8, scope: !15838)
!15864 = !DILocation(line: 3258, column: 6, scope: !15838)
!15865 = !DILocation(line: 3259, column: 6, scope: !15866)
!15866 = distinct !DILexicalBlock(scope: !15838, file: !3, line: 3259, column: 6)
!15867 = !DILocation(line: 3259, column: 10, scope: !15866)
!15868 = !DILocation(line: 3259, column: 6, scope: !15838)
!15869 = !DILocation(line: 3260, column: 3, scope: !15866)
!15870 = !DILocation(line: 3261, column: 26, scope: !15871)
!15871 = distinct !DILexicalBlock(scope: !15838, file: !3, line: 3261, column: 6)
!15872 = !DILocation(line: 3261, column: 30, scope: !15871)
!15873 = !DILocation(line: 3261, column: 6, scope: !15871)
!15874 = !DILocation(line: 3261, column: 42, scope: !15871)
!15875 = !DILocation(line: 3261, column: 6, scope: !15838)
!15876 = !DILocation(line: 3262, column: 3, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 3261, column: 48)
!15878 = !DILocation(line: 3265, column: 3, scope: !15877)
!15879 = !DILocation(line: 3268, column: 38, scope: !15838)
!15880 = !DILocation(line: 3268, column: 42, scope: !15838)
!15881 = !DILocation(line: 3268, column: 13, scope: !15838)
!15882 = !DILocation(line: 3268, column: 11, scope: !15838)
!15883 = !DILocation(line: 3269, column: 13, scope: !15838)
!15884 = !DILocation(line: 3269, column: 19, scope: !15838)
!15885 = !DILocation(line: 3269, column: 24, scope: !15838)
!15886 = !DILocation(line: 3269, column: 34, scope: !15838)
!15887 = !DILocation(line: 3269, column: 38, scope: !15838)
!15888 = !DILocation(line: 3269, column: 48, scope: !15838)
!15889 = !DILocation(line: 3269, column: 11, scope: !15838)
!15890 = !DILocation(line: 3270, column: 6, scope: !15891)
!15891 = distinct !DILexicalBlock(scope: !15838, file: !3, line: 3270, column: 6)
!15892 = !DILocation(line: 3270, column: 15, scope: !15891)
!15893 = !DILocation(line: 3270, column: 32, scope: !15891)
!15894 = !DILocation(line: 3271, column: 4, scope: !15891)
!15895 = !DILocation(line: 3271, column: 13, scope: !15891)
!15896 = !DILocation(line: 3270, column: 6, scope: !15838)
!15897 = !DILocation(line: 3272, column: 3, scope: !15898)
!15898 = distinct !DILexicalBlock(scope: !15891, file: !3, line: 3271, column: 35)
!15899 = !DILocation(line: 3275, column: 3, scope: !15898)
!15900 = !DILocation(line: 3277, column: 3, scope: !15898)
!15901 = !DILocation(line: 3279, column: 19, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15838, file: !3, line: 3279, column: 6)
!15903 = !DILocation(line: 3279, column: 25, scope: !15902)
!15904 = !DILocation(line: 3279, column: 30, scope: !15902)
!15905 = !DILocation(line: 3279, column: 40, scope: !15902)
!15906 = !DILocation(line: 3279, column: 44, scope: !15902)
!15907 = !DILocation(line: 3279, column: 54, scope: !15902)
!15908 = !DILocation(line: 3279, column: 60, scope: !15902)
!15909 = !DILocation(line: 3279, column: 7, scope: !15902)
!15910 = !DILocation(line: 3279, column: 6, scope: !15838)
!15911 = !DILocation(line: 3280, column: 3, scope: !15912)
!15912 = distinct !DILexicalBlock(scope: !15902, file: !3, line: 3279, column: 70)
!15913 = !DILocation(line: 3283, column: 3, scope: !15912)
!15914 = !DILocation(line: 3285, column: 2, scope: !15838)
!15915 = !DILocation(line: 3286, column: 1, scope: !15838)
!15916 = distinct !DISubprogram(name: "usb_ss_max_streams", scope: !94, file: !94, line: 702, type: !15917, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15917 = !DISubroutineType(types: !15918)
!15918 = !{!265, !15919}
!15919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15920, size: 64)
!15920 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4569)
!15921 = !DILocalVariable(name: "comp", arg: 1, scope: !15916, file: !94, line: 702, type: !15919)
!15922 = !DILocation(line: 702, column: 60, scope: !15916)
!15923 = !DILocalVariable(name: "max_streams", scope: !15916, file: !94, line: 704, type: !265)
!15924 = !DILocation(line: 704, column: 7, scope: !15916)
!15925 = !DILocation(line: 706, column: 7, scope: !15926)
!15926 = distinct !DILexicalBlock(scope: !15916, file: !94, line: 706, column: 6)
!15927 = !DILocation(line: 706, column: 6, scope: !15916)
!15928 = !DILocation(line: 707, column: 3, scope: !15926)
!15929 = !DILocation(line: 709, column: 16, scope: !15916)
!15930 = !DILocation(line: 709, column: 22, scope: !15916)
!15931 = !DILocation(line: 709, column: 35, scope: !15916)
!15932 = !DILocation(line: 709, column: 14, scope: !15916)
!15933 = !DILocation(line: 711, column: 7, scope: !15934)
!15934 = distinct !DILexicalBlock(scope: !15916, file: !94, line: 711, column: 6)
!15935 = !DILocation(line: 711, column: 6, scope: !15916)
!15936 = !DILocation(line: 712, column: 3, scope: !15934)
!15937 = !DILocation(line: 714, column: 21, scope: !15916)
!15938 = !DILocation(line: 714, column: 18, scope: !15916)
!15939 = !DILocation(line: 714, column: 14, scope: !15916)
!15940 = !DILocation(line: 716, column: 9, scope: !15916)
!15941 = !DILocation(line: 716, column: 2, scope: !15916)
!15942 = !DILocation(line: 717, column: 1, scope: !15916)
!15943 = distinct !DISubprogram(name: "__ilog2_u32", scope: !13957, file: !13957, line: 22, type: !15944, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15944 = !DISubroutineType(types: !15945)
!15945 = !{!265, !204}
!15946 = !DILocation(line: 324, column: 45, scope: !7947, inlinedAt: !15947)
!15947 = distinct !DILocation(line: 24, column: 9, scope: !15943)
!15948 = !DILocation(line: 326, column: 6, scope: !7947, inlinedAt: !15947)
!15949 = !DILocalVariable(name: "n", arg: 1, scope: !15943, file: !13957, line: 22, type: !204)
!15950 = !DILocation(line: 22, column: 21, scope: !15943)
!15951 = !DILocation(line: 24, column: 13, scope: !15943)
!15952 = !DILocation(line: 340, column: 14, scope: !7947, inlinedAt: !15947)
!15953 = !DILocation(line: 338, column: 2, scope: !7947, inlinedAt: !15947)
!15954 = !DILocation(line: 351, column: 9, scope: !7947, inlinedAt: !15947)
!15955 = !DILocation(line: 351, column: 11, scope: !7947, inlinedAt: !15947)
!15956 = !DILocation(line: 24, column: 16, scope: !15943)
!15957 = !DILocation(line: 24, column: 2, scope: !15943)
!15958 = distinct !DISubprogram(name: "__roundup_pow_of_two", scope: !13957, file: !13957, line: 55, type: !15959, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15959 = !DISubroutineType(types: !15960)
!15960 = !{!248, !248}
!15961 = !DILocalVariable(name: "n", arg: 1, scope: !15958, file: !13957, line: 55, type: !248)
!15962 = !DILocation(line: 55, column: 50, scope: !15958)
!15963 = !DILocation(line: 57, column: 25, scope: !15958)
!15964 = !DILocation(line: 57, column: 27, scope: !15958)
!15965 = !DILocation(line: 57, column: 16, scope: !15958)
!15966 = !DILocation(line: 57, column: 13, scope: !15958)
!15967 = !DILocation(line: 57, column: 2, scope: !15958)
!15968 = distinct !DISubprogram(name: "fls_long", scope: !15969, file: !15969, line: 182, type: !15970, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15969 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!15970 = !DISubroutineType(types: !15971)
!15971 = !{!7, !248}
!15972 = !DILocation(line: 366, column: 40, scope: !13919, inlinedAt: !15973)
!15973 = distinct !DILocation(line: 186, column: 9, scope: !15968)
!15974 = !DILocation(line: 368, column: 6, scope: !13919, inlinedAt: !15973)
!15975 = !DILocalVariable(name: "l", arg: 1, scope: !15968, file: !15969, line: 182, type: !248)
!15976 = !DILocation(line: 182, column: 47, scope: !15968)
!15977 = !DILocation(line: 186, column: 15, scope: !15968)
!15978 = !DILocation(line: 374, column: 2, scope: !13919, inlinedAt: !15973)
!15979 = !DILocation(line: 376, column: 14, scope: !13919, inlinedAt: !15973)
!15980 = !DILocation(line: 377, column: 9, scope: !13919, inlinedAt: !15973)
!15981 = !DILocation(line: 377, column: 16, scope: !13919, inlinedAt: !15973)
!15982 = !DILocation(line: 186, column: 2, scope: !15968)
!15983 = distinct !DISubprogram(name: "xhci_calculate_no_streams_bitmask", scope: !3, file: !3, line: 3346, type: !15984, scopeLine: 3349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!15984 = !DISubroutineType(types: !15985)
!15985 = !{!204, !4497, !4526, !4975, !7}
!15986 = !DILocalVariable(name: "xhci", arg: 1, scope: !15983, file: !3, line: 3346, type: !4497)
!15987 = !DILocation(line: 3346, column: 63, scope: !15983)
!15988 = !DILocalVariable(name: "udev", arg: 2, scope: !15983, file: !3, line: 3347, type: !4526)
!15989 = !DILocation(line: 3347, column: 22, scope: !15983)
!15990 = !DILocalVariable(name: "eps", arg: 3, scope: !15983, file: !3, line: 3348, type: !4975)
!15991 = !DILocation(line: 3348, column: 30, scope: !15983)
!15992 = !DILocalVariable(name: "num_eps", arg: 4, scope: !15983, file: !3, line: 3348, type: !7)
!15993 = !DILocation(line: 3348, column: 48, scope: !15983)
!15994 = !DILocalVariable(name: "changed_ep_bitmask", scope: !15983, file: !3, line: 3350, type: !204)
!15995 = !DILocation(line: 3350, column: 6, scope: !15983)
!15996 = !DILocalVariable(name: "slot_id", scope: !15983, file: !3, line: 3351, type: !7)
!15997 = !DILocation(line: 3351, column: 15, scope: !15983)
!15998 = !DILocalVariable(name: "ep_index", scope: !15983, file: !3, line: 3352, type: !7)
!15999 = !DILocation(line: 3352, column: 15, scope: !15983)
!16000 = !DILocalVariable(name: "ep_state", scope: !15983, file: !3, line: 3353, type: !7)
!16001 = !DILocation(line: 3353, column: 15, scope: !15983)
!16002 = !DILocalVariable(name: "i", scope: !15983, file: !3, line: 3354, type: !265)
!16003 = !DILocation(line: 3354, column: 6, scope: !15983)
!16004 = !DILocation(line: 3356, column: 12, scope: !15983)
!16005 = !DILocation(line: 3356, column: 18, scope: !15983)
!16006 = !DILocation(line: 3356, column: 10, scope: !15983)
!16007 = !DILocation(line: 3357, column: 7, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !15983, file: !3, line: 3357, column: 6)
!16009 = !DILocation(line: 3357, column: 13, scope: !16008)
!16010 = !DILocation(line: 3357, column: 18, scope: !16008)
!16011 = !DILocation(line: 3357, column: 6, scope: !15983)
!16012 = !DILocation(line: 3358, column: 3, scope: !16008)
!16013 = !DILocation(line: 3360, column: 9, scope: !16014)
!16014 = distinct !DILexicalBlock(scope: !15983, file: !3, line: 3360, column: 2)
!16015 = !DILocation(line: 3360, column: 7, scope: !16014)
!16016 = !DILocation(line: 3360, column: 14, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !16014, file: !3, line: 3360, column: 2)
!16018 = !DILocation(line: 3360, column: 18, scope: !16017)
!16019 = !DILocation(line: 3360, column: 16, scope: !16017)
!16020 = !DILocation(line: 3360, column: 2, scope: !16014)
!16021 = !DILocation(line: 3361, column: 39, scope: !16022)
!16022 = distinct !DILexicalBlock(scope: !16017, file: !3, line: 3360, column: 32)
!16023 = !DILocation(line: 3361, column: 43, scope: !16022)
!16024 = !DILocation(line: 3361, column: 47, scope: !16022)
!16025 = !DILocation(line: 3361, column: 14, scope: !16022)
!16026 = !DILocation(line: 3361, column: 12, scope: !16022)
!16027 = !DILocation(line: 3362, column: 14, scope: !16022)
!16028 = !DILocation(line: 3362, column: 20, scope: !16022)
!16029 = !DILocation(line: 3362, column: 25, scope: !16022)
!16030 = !DILocation(line: 3362, column: 35, scope: !16022)
!16031 = !DILocation(line: 3362, column: 39, scope: !16022)
!16032 = !DILocation(line: 3362, column: 49, scope: !16022)
!16033 = !DILocation(line: 3362, column: 12, scope: !16022)
!16034 = !DILocation(line: 3364, column: 7, scope: !16035)
!16035 = distinct !DILexicalBlock(scope: !16022, file: !3, line: 3364, column: 7)
!16036 = !DILocation(line: 3364, column: 16, scope: !16035)
!16037 = !DILocation(line: 3364, column: 7, scope: !16022)
!16038 = !DILocation(line: 3365, column: 4, scope: !16039)
!16039 = distinct !DILexicalBlock(scope: !16035, file: !3, line: 3364, column: 41)
!16040 = !DILocation(line: 3369, column: 4, scope: !16039)
!16041 = !DILocation(line: 3372, column: 9, scope: !16042)
!16042 = distinct !DILexicalBlock(scope: !16022, file: !3, line: 3372, column: 7)
!16043 = !DILocation(line: 3372, column: 18, scope: !16042)
!16044 = !DILocation(line: 3372, column: 36, scope: !16042)
!16045 = !DILocation(line: 3373, column: 7, scope: !16042)
!16046 = !DILocation(line: 3373, column: 16, scope: !16042)
!16047 = !DILocation(line: 3372, column: 7, scope: !16022)
!16048 = !DILocation(line: 3374, column: 4, scope: !16049)
!16049 = distinct !DILexicalBlock(scope: !16042, file: !3, line: 3373, column: 39)
!16050 = !DILocation(line: 3378, column: 4, scope: !16049)
!16051 = !DILocation(line: 3380, column: 4, scope: !16049)
!16052 = !DILocation(line: 3382, column: 49, scope: !16022)
!16053 = !DILocation(line: 3382, column: 53, scope: !16022)
!16054 = !DILocation(line: 3382, column: 57, scope: !16022)
!16055 = !DILocation(line: 3382, column: 25, scope: !16022)
!16056 = !DILocation(line: 3382, column: 22, scope: !16022)
!16057 = !DILocation(line: 3383, column: 2, scope: !16022)
!16058 = !DILocation(line: 3360, column: 28, scope: !16017)
!16059 = !DILocation(line: 3360, column: 2, scope: !16017)
!16060 = distinct !{!16060, !16020, !16061}
!16061 = !DILocation(line: 3383, column: 2, scope: !16014)
!16062 = !DILocation(line: 3384, column: 9, scope: !15983)
!16063 = !DILocation(line: 3384, column: 2, scope: !15983)
!16064 = !DILocation(line: 3385, column: 1, scope: !15983)
!16065 = distinct !DISubprogram(name: "xhci_mtk_add_ep_quirk", scope: !16066, file: !16066, line: 171, type: !4982, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16066 = !DIFile(filename: "drivers/usb/host/xhci-mtk.h", directory: "/home/lizy2001/genbc/linux")
!16067 = !DILocalVariable(name: "hcd", arg: 1, scope: !16065, file: !16066, line: 171, type: !4501)
!16068 = !DILocation(line: 171, column: 57, scope: !16065)
!16069 = !DILocalVariable(name: "udev", arg: 2, scope: !16065, file: !16066, line: 172, type: !4526)
!16070 = !DILocation(line: 172, column: 21, scope: !16065)
!16071 = !DILocalVariable(name: "ep", arg: 3, scope: !16065, file: !16066, line: 172, type: !4725)
!16072 = !DILocation(line: 172, column: 53, scope: !16065)
!16073 = !DILocation(line: 174, column: 2, scope: !16065)
!16074 = distinct !DISubprogram(name: "trace_xhci_add_endpoint", scope: !5835, file: !5835, line: 358, type: !16075, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16075 = !DISubroutineType(types: !16076)
!16076 = !{null, !8119}
!16077 = !DILocalVariable(name: "ctx", arg: 1, scope: !16074, file: !5835, line: 358, type: !8119)
!16078 = !DILocation(line: 358, column: 1, scope: !16074)
!16079 = distinct !DISubprogram(name: "xhci_debugfs_remove_endpoint", scope: !5655, file: !5655, line: 134, type: !7965, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16080 = !DILocalVariable(name: "xhci", arg: 1, scope: !16079, file: !5655, line: 134, type: !4497)
!16081 = !DILocation(line: 134, column: 47, scope: !16079)
!16082 = !DILocalVariable(name: "virt_dev", arg: 2, scope: !16079, file: !5655, line: 135, type: !5290)
!16083 = !DILocation(line: 135, column: 34, scope: !16079)
!16084 = !DILocalVariable(name: "ep_index", arg: 3, scope: !16079, file: !5655, line: 136, type: !265)
!16085 = !DILocation(line: 136, column: 13, scope: !16079)
!16086 = !DILocation(line: 136, column: 25, scope: !16079)
!16087 = distinct !DISubprogram(name: "xhci_mtk_drop_ep_quirk", scope: !16066, file: !16066, line: 177, type: !16088, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16088 = !DISubroutineType(types: !16089)
!16089 = !{null, !4501, !4526, !4725}
!16090 = !DILocalVariable(name: "hcd", arg: 1, scope: !16087, file: !16066, line: 177, type: !4501)
!16091 = !DILocation(line: 177, column: 59, scope: !16087)
!16092 = !DILocalVariable(name: "udev", arg: 2, scope: !16087, file: !16066, line: 178, type: !4526)
!16093 = !DILocation(line: 178, column: 21, scope: !16087)
!16094 = !DILocalVariable(name: "ep", arg: 3, scope: !16087, file: !16066, line: 178, type: !4725)
!16095 = !DILocation(line: 178, column: 53, scope: !16087)
!16096 = !DILocation(line: 180, column: 1, scope: !16087)
!16097 = distinct !DISubprogram(name: "xhci_check_bw_drop_ep_streams", scope: !3, file: !3, line: 2840, type: !7965, scopeLine: 2842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16098 = !DILocalVariable(name: "xhci", arg: 1, scope: !16097, file: !3, line: 2840, type: !4497)
!16099 = !DILocation(line: 2840, column: 60, scope: !16097)
!16100 = !DILocalVariable(name: "vdev", arg: 2, scope: !16097, file: !3, line: 2841, type: !5290)
!16101 = !DILocation(line: 2841, column: 27, scope: !16097)
!16102 = !DILocalVariable(name: "i", arg: 3, scope: !16097, file: !3, line: 2841, type: !265)
!16103 = !DILocation(line: 2841, column: 37, scope: !16097)
!16104 = !DILocalVariable(name: "ep", scope: !16097, file: !3, line: 2843, type: !5464)
!16105 = !DILocation(line: 2843, column: 23, scope: !16097)
!16106 = !DILocation(line: 2843, column: 29, scope: !16097)
!16107 = !DILocation(line: 2843, column: 35, scope: !16097)
!16108 = !DILocation(line: 2843, column: 39, scope: !16097)
!16109 = !DILocation(line: 2845, column: 6, scope: !16110)
!16110 = distinct !DILexicalBlock(scope: !16097, file: !3, line: 2845, column: 6)
!16111 = !DILocation(line: 2845, column: 10, scope: !16110)
!16112 = !DILocation(line: 2845, column: 19, scope: !16110)
!16113 = !DILocation(line: 2845, column: 6, scope: !16097)
!16114 = !DILocation(line: 2846, column: 3, scope: !16115)
!16115 = distinct !DILexicalBlock(scope: !16110, file: !3, line: 2845, column: 37)
!16116 = !DILocation(line: 2848, column: 25, scope: !16115)
!16117 = !DILocation(line: 2848, column: 31, scope: !16115)
!16118 = !DILocation(line: 2848, column: 35, scope: !16115)
!16119 = !DILocation(line: 2848, column: 3, scope: !16115)
!16120 = !DILocation(line: 2849, column: 3, scope: !16115)
!16121 = !DILocation(line: 2849, column: 7, scope: !16115)
!16122 = !DILocation(line: 2849, column: 19, scope: !16115)
!16123 = !DILocation(line: 2850, column: 3, scope: !16115)
!16124 = !DILocation(line: 2850, column: 7, scope: !16115)
!16125 = !DILocation(line: 2850, column: 16, scope: !16115)
!16126 = !DILocation(line: 2851, column: 2, scope: !16115)
!16127 = !DILocation(line: 2852, column: 1, scope: !16097)
!16128 = distinct !DISubprogram(name: "xhci_zero_in_ctx", scope: !3, file: !3, line: 1929, type: !16129, scopeLine: 1930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16129 = !DISubroutineType(types: !16130)
!16130 = !{null, !4497, !5290}
!16131 = !DILocalVariable(name: "xhci", arg: 1, scope: !16128, file: !3, line: 1929, type: !4497)
!16132 = !DILocation(line: 1929, column: 47, scope: !16128)
!16133 = !DILocalVariable(name: "virt_dev", arg: 2, scope: !16128, file: !3, line: 1929, type: !5290)
!16134 = !DILocation(line: 1929, column: 78, scope: !16128)
!16135 = !DILocalVariable(name: "ctrl_ctx", scope: !16128, file: !3, line: 1931, type: !8108)
!16136 = !DILocation(line: 1931, column: 33, scope: !16128)
!16137 = !DILocalVariable(name: "ep_ctx", scope: !16128, file: !3, line: 1932, type: !8119)
!16138 = !DILocation(line: 1932, column: 22, scope: !16128)
!16139 = !DILocalVariable(name: "slot_ctx", scope: !16128, file: !3, line: 1933, type: !8442)
!16140 = !DILocation(line: 1933, column: 24, scope: !16128)
!16141 = !DILocalVariable(name: "i", scope: !16128, file: !3, line: 1934, type: !265)
!16142 = !DILocation(line: 1934, column: 6, scope: !16128)
!16143 = !DILocation(line: 1936, column: 40, scope: !16128)
!16144 = !DILocation(line: 1936, column: 50, scope: !16128)
!16145 = !DILocation(line: 1936, column: 13, scope: !16128)
!16146 = !DILocation(line: 1936, column: 11, scope: !16128)
!16147 = !DILocation(line: 1937, column: 7, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16128, file: !3, line: 1937, column: 6)
!16149 = !DILocation(line: 1937, column: 6, scope: !16128)
!16150 = !DILocation(line: 1938, column: 3, scope: !16151)
!16151 = distinct !DILexicalBlock(scope: !16148, file: !3, line: 1937, column: 17)
!16152 = !DILocation(line: 1940, column: 3, scope: !16151)
!16153 = !DILocation(line: 1948, column: 2, scope: !16128)
!16154 = !DILocation(line: 1948, column: 12, scope: !16128)
!16155 = !DILocation(line: 1948, column: 23, scope: !16128)
!16156 = !DILocation(line: 1949, column: 2, scope: !16128)
!16157 = !DILocation(line: 1949, column: 12, scope: !16128)
!16158 = !DILocation(line: 1949, column: 22, scope: !16128)
!16159 = !DILocation(line: 1950, column: 31, scope: !16128)
!16160 = !DILocation(line: 1950, column: 37, scope: !16128)
!16161 = !DILocation(line: 1950, column: 47, scope: !16128)
!16162 = !DILocation(line: 1950, column: 13, scope: !16128)
!16163 = !DILocation(line: 1950, column: 11, scope: !16128)
!16164 = !DILocation(line: 1951, column: 2, scope: !16128)
!16165 = !DILocation(line: 1951, column: 12, scope: !16128)
!16166 = !DILocation(line: 1951, column: 21, scope: !16128)
!16167 = !DILocation(line: 1953, column: 2, scope: !16128)
!16168 = !DILocation(line: 1953, column: 12, scope: !16128)
!16169 = !DILocation(line: 1953, column: 21, scope: !16128)
!16170 = !DILocation(line: 1954, column: 9, scope: !16171)
!16171 = distinct !DILexicalBlock(scope: !16128, file: !3, line: 1954, column: 2)
!16172 = !DILocation(line: 1954, column: 7, scope: !16171)
!16173 = !DILocation(line: 1954, column: 14, scope: !16174)
!16174 = distinct !DILexicalBlock(scope: !16171, file: !3, line: 1954, column: 2)
!16175 = !DILocation(line: 1954, column: 16, scope: !16174)
!16176 = !DILocation(line: 1954, column: 2, scope: !16171)
!16177 = !DILocation(line: 1955, column: 28, scope: !16178)
!16178 = distinct !DILexicalBlock(scope: !16174, file: !3, line: 1954, column: 27)
!16179 = !DILocation(line: 1955, column: 34, scope: !16178)
!16180 = !DILocation(line: 1955, column: 44, scope: !16178)
!16181 = !DILocation(line: 1955, column: 52, scope: !16178)
!16182 = !DILocation(line: 1955, column: 12, scope: !16178)
!16183 = !DILocation(line: 1955, column: 10, scope: !16178)
!16184 = !DILocation(line: 1956, column: 3, scope: !16178)
!16185 = !DILocation(line: 1956, column: 11, scope: !16178)
!16186 = !DILocation(line: 1956, column: 19, scope: !16178)
!16187 = !DILocation(line: 1957, column: 3, scope: !16178)
!16188 = !DILocation(line: 1957, column: 11, scope: !16178)
!16189 = !DILocation(line: 1957, column: 20, scope: !16178)
!16190 = !DILocation(line: 1958, column: 3, scope: !16178)
!16191 = !DILocation(line: 1958, column: 11, scope: !16178)
!16192 = !DILocation(line: 1958, column: 15, scope: !16178)
!16193 = !DILocation(line: 1959, column: 3, scope: !16178)
!16194 = !DILocation(line: 1959, column: 11, scope: !16178)
!16195 = !DILocation(line: 1959, column: 19, scope: !16178)
!16196 = !DILocation(line: 1960, column: 2, scope: !16178)
!16197 = !DILocation(line: 1954, column: 23, scope: !16174)
!16198 = !DILocation(line: 1954, column: 2, scope: !16174)
!16199 = distinct !{!16199, !16176, !16200}
!16200 = !DILocation(line: 1960, column: 2, scope: !16171)
!16201 = !DILocation(line: 1961, column: 1, scope: !16128)
!16202 = distinct !DISubprogram(name: "xhci_debugfs_create_endpoint", scope: !5655, file: !5655, line: 130, type: !7965, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16203 = !DILocalVariable(name: "xhci", arg: 1, scope: !16202, file: !5655, line: 130, type: !4497)
!16204 = !DILocation(line: 130, column: 47, scope: !16202)
!16205 = !DILocalVariable(name: "virt_dev", arg: 2, scope: !16202, file: !5655, line: 131, type: !5290)
!16206 = !DILocation(line: 131, column: 34, scope: !16202)
!16207 = !DILocalVariable(name: "ep_index", arg: 3, scope: !16202, file: !5655, line: 132, type: !265)
!16208 = !DILocation(line: 132, column: 13, scope: !16202)
!16209 = !DILocation(line: 132, column: 25, scope: !16202)
!16210 = distinct !DISubprogram(name: "xhci_setup_device", scope: !3, file: !3, line: 4056, type: !16211, scopeLine: 4058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16211 = !DISubroutineType(types: !16212)
!16212 = !{!265, !4501, !4526, !199}
!16213 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !16214)
!16214 = distinct !DILocation(line: 4151, column: 2, scope: !16210)
!16215 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !16214)
!16216 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !16217)
!16217 = distinct !DILocation(line: 4145, column: 3, scope: !16218)
!16218 = distinct !DILexicalBlock(scope: !16219, file: !3, line: 4144, column: 11)
!16219 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 4144, column: 6)
!16220 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !16217)
!16221 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !16222)
!16222 = distinct !DILocation(line: 4140, column: 2, scope: !16223)
!16223 = distinct !DILexicalBlock(scope: !16224, file: !3, line: 4140, column: 2)
!16224 = distinct !DILexicalBlock(scope: !16225, file: !3, line: 4140, column: 2)
!16225 = distinct !DILexicalBlock(scope: !16226, file: !3, line: 4140, column: 2)
!16226 = distinct !DILexicalBlock(scope: !16227, file: !3, line: 4140, column: 2)
!16227 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 4140, column: 2)
!16228 = !DILocalVariable(name: "hcd", arg: 1, scope: !16210, file: !3, line: 4056, type: !4501)
!16229 = !DILocation(line: 4056, column: 46, scope: !16210)
!16230 = !DILocalVariable(name: "udev", arg: 2, scope: !16210, file: !3, line: 4056, type: !4526)
!16231 = !DILocation(line: 4056, column: 70, scope: !16210)
!16232 = !DILocalVariable(name: "setup", arg: 3, scope: !16210, file: !3, line: 4057, type: !199)
!16233 = !DILocation(line: 4057, column: 29, scope: !16210)
!16234 = !DILocalVariable(name: "act", scope: !16210, file: !3, line: 4059, type: !244)
!16235 = !DILocation(line: 4059, column: 14, scope: !16210)
!16236 = !DILocation(line: 4059, column: 20, scope: !16210)
!16237 = !DILocation(line: 4059, column: 26, scope: !16210)
!16238 = !DILocalVariable(name: "flags", scope: !16210, file: !3, line: 4060, type: !248)
!16239 = !DILocation(line: 4060, column: 16, scope: !16210)
!16240 = !DILocalVariable(name: "virt_dev", scope: !16210, file: !3, line: 4061, type: !5290)
!16241 = !DILocation(line: 4061, column: 27, scope: !16210)
!16242 = !DILocalVariable(name: "ret", scope: !16210, file: !3, line: 4062, type: !265)
!16243 = !DILocation(line: 4062, column: 6, scope: !16210)
!16244 = !DILocalVariable(name: "xhci", scope: !16210, file: !3, line: 4063, type: !4497)
!16245 = !DILocation(line: 4063, column: 19, scope: !16210)
!16246 = !DILocation(line: 4063, column: 38, scope: !16210)
!16247 = !DILocation(line: 4063, column: 26, scope: !16210)
!16248 = !DILocalVariable(name: "slot_ctx", scope: !16210, file: !3, line: 4064, type: !8442)
!16249 = !DILocation(line: 4064, column: 24, scope: !16210)
!16250 = !DILocalVariable(name: "ctrl_ctx", scope: !16210, file: !3, line: 4065, type: !8108)
!16251 = !DILocation(line: 4065, column: 33, scope: !16210)
!16252 = !DILocalVariable(name: "temp_64", scope: !16210, file: !3, line: 4066, type: !239)
!16253 = !DILocation(line: 4066, column: 6, scope: !16210)
!16254 = !DILocalVariable(name: "command", scope: !16210, file: !3, line: 4067, type: !5247)
!16255 = !DILocation(line: 4067, column: 23, scope: !16210)
!16256 = !DILocation(line: 4069, column: 14, scope: !16210)
!16257 = !DILocation(line: 4069, column: 20, scope: !16210)
!16258 = !DILocation(line: 4069, column: 2, scope: !16210)
!16259 = !DILocation(line: 4071, column: 6, scope: !16260)
!16260 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 4071, column: 6)
!16261 = !DILocation(line: 4071, column: 12, scope: !16260)
!16262 = !DILocation(line: 4071, column: 6, scope: !16210)
!16263 = !DILocation(line: 4072, column: 7, scope: !16264)
!16264 = distinct !DILexicalBlock(scope: !16260, file: !3, line: 4071, column: 23)
!16265 = !DILocation(line: 4073, column: 3, scope: !16264)
!16266 = !DILocation(line: 4076, column: 7, scope: !16267)
!16267 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 4076, column: 6)
!16268 = !DILocation(line: 4076, column: 13, scope: !16267)
!16269 = !DILocation(line: 4076, column: 6, scope: !16210)
!16270 = !DILocation(line: 4077, column: 18, scope: !16271)
!16271 = distinct !DILexicalBlock(scope: !16267, file: !3, line: 4076, column: 22)
!16272 = !DILocation(line: 4078, column: 23, scope: !16271)
!16273 = !DILocation(line: 4078, column: 29, scope: !16271)
!16274 = !DILocation(line: 4077, column: 3, scope: !16271)
!16275 = !DILocation(line: 4079, column: 7, scope: !16271)
!16276 = !DILocation(line: 4080, column: 3, scope: !16271)
!16277 = !DILocation(line: 4083, column: 13, scope: !16210)
!16278 = !DILocation(line: 4083, column: 19, scope: !16210)
!16279 = !DILocation(line: 4083, column: 24, scope: !16210)
!16280 = !DILocation(line: 4083, column: 30, scope: !16210)
!16281 = !DILocation(line: 4083, column: 11, scope: !16210)
!16282 = !DILocalVariable(name: "__ret_warn_on", scope: !16283, file: !3, line: 4085, type: !265)
!16283 = distinct !DILexicalBlock(scope: !16284, file: !3, line: 4085, column: 6)
!16284 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 4085, column: 6)
!16285 = !DILocation(line: 4085, column: 6, scope: !16283)
!16286 = !DILocation(line: 4085, column: 6, scope: !16287)
!16287 = distinct !DILexicalBlock(scope: !16283, file: !3, line: 4085, column: 6)
!16288 = !DILocation(line: 4085, column: 6, scope: !16289)
!16289 = distinct !DILexicalBlock(scope: !16287, file: !3, line: 4085, column: 6)
!16290 = !DILocation(line: 4085, column: 6, scope: !16291)
!16291 = distinct !DILexicalBlock(scope: !16289, file: !3, line: 4085, column: 6)
!16292 = !DILocation(line: 4085, column: 6, scope: !16293)
!16293 = distinct !DILexicalBlock(scope: !16289, file: !3, line: 4085, column: 6)
!16294 = !{i32 -2140617652, i32 -2140617623, i32 -2140617577, i32 -2140617519, i32 -2140617465, i32 -2140617411, i32 -2140617356, i32 -2140617325}
!16295 = !DILocation(line: 4085, column: 6, scope: !16296)
!16296 = distinct !DILexicalBlock(scope: !16289, file: !3, line: 4085, column: 6)
!16297 = !{i32 -2140616919, i32 -2140616912, i32 -2140616860, i32 -2140616829, i32 -2140616799}
!16298 = !DILocation(line: 4085, column: 6, scope: !16299)
!16299 = distinct !DILexicalBlock(scope: !16289, file: !3, line: 4085, column: 6)
!16300 = !DILocation(line: 4085, column: 6, scope: !16284)
!16301 = !DILocation(line: 4085, column: 6, scope: !16210)
!16302 = !DILocation(line: 4091, column: 3, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16284, file: !3, line: 4085, column: 26)
!16304 = !DILocation(line: 4093, column: 7, scope: !16303)
!16305 = !DILocation(line: 4094, column: 3, scope: !16303)
!16306 = !DILocation(line: 4096, column: 31, scope: !16210)
!16307 = !DILocation(line: 4096, column: 37, scope: !16210)
!16308 = !DILocation(line: 4096, column: 47, scope: !16210)
!16309 = !DILocation(line: 4096, column: 13, scope: !16210)
!16310 = !DILocation(line: 4096, column: 11, scope: !16210)
!16311 = !DILocation(line: 4097, column: 31, scope: !16210)
!16312 = !DILocation(line: 4097, column: 2, scope: !16210)
!16313 = !DILocation(line: 4099, column: 6, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 4099, column: 6)
!16315 = !DILocation(line: 4099, column: 12, scope: !16314)
!16316 = !DILocation(line: 4099, column: 6, scope: !16210)
!16317 = !DILocation(line: 4100, column: 7, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !16319, file: !3, line: 4100, column: 7)
!16319 = distinct !DILexicalBlock(scope: !16314, file: !3, line: 4099, column: 35)
!16320 = !DILocation(line: 4100, column: 56, scope: !16318)
!16321 = !DILocation(line: 4100, column: 7, scope: !16319)
!16322 = !DILocation(line: 4103, column: 4, scope: !16323)
!16323 = distinct !DILexicalBlock(scope: !16318, file: !3, line: 4101, column: 27)
!16324 = !DILocation(line: 4105, column: 2, scope: !16319)
!16325 = !DILocation(line: 4107, column: 31, scope: !16210)
!16326 = !DILocation(line: 4107, column: 12, scope: !16210)
!16327 = !DILocation(line: 4107, column: 10, scope: !16210)
!16328 = !DILocation(line: 4108, column: 7, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 4108, column: 6)
!16330 = !DILocation(line: 4108, column: 6, scope: !16210)
!16331 = !DILocation(line: 4109, column: 7, scope: !16332)
!16332 = distinct !DILexicalBlock(scope: !16329, file: !3, line: 4108, column: 16)
!16333 = !DILocation(line: 4110, column: 3, scope: !16332)
!16334 = !DILocation(line: 4113, column: 20, scope: !16210)
!16335 = !DILocation(line: 4113, column: 30, scope: !16210)
!16336 = !DILocation(line: 4113, column: 2, scope: !16210)
!16337 = !DILocation(line: 4113, column: 11, scope: !16210)
!16338 = !DILocation(line: 4113, column: 18, scope: !16210)
!16339 = !DILocation(line: 4115, column: 31, scope: !16210)
!16340 = !DILocation(line: 4115, column: 37, scope: !16210)
!16341 = !DILocation(line: 4115, column: 47, scope: !16210)
!16342 = !DILocation(line: 4115, column: 13, scope: !16210)
!16343 = !DILocation(line: 4115, column: 11, scope: !16210)
!16344 = !DILocation(line: 4116, column: 40, scope: !16210)
!16345 = !DILocation(line: 4116, column: 50, scope: !16210)
!16346 = !DILocation(line: 4116, column: 13, scope: !16210)
!16347 = !DILocation(line: 4116, column: 11, scope: !16210)
!16348 = !DILocation(line: 4117, column: 7, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 4117, column: 6)
!16350 = !DILocation(line: 4117, column: 6, scope: !16210)
!16351 = !DILocation(line: 4118, column: 3, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !16349, file: !3, line: 4117, column: 17)
!16353 = !DILocation(line: 4120, column: 7, scope: !16352)
!16354 = !DILocation(line: 4121, column: 3, scope: !16352)
!16355 = !DILocation(line: 4128, column: 7, scope: !16356)
!16356 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 4128, column: 6)
!16357 = !DILocation(line: 4128, column: 17, scope: !16356)
!16358 = !DILocation(line: 4128, column: 6, scope: !16210)
!16359 = !DILocation(line: 4129, column: 35, scope: !16356)
!16360 = !DILocation(line: 4129, column: 41, scope: !16356)
!16361 = !DILocation(line: 4129, column: 3, scope: !16356)
!16362 = !DILocation(line: 4132, column: 40, scope: !16356)
!16363 = !DILocation(line: 4132, column: 46, scope: !16356)
!16364 = !DILocation(line: 4132, column: 3, scope: !16356)
!16365 = !DILocation(line: 4133, column: 2, scope: !16210)
!16366 = !DILocation(line: 4133, column: 12, scope: !16210)
!16367 = !DILocation(line: 4133, column: 22, scope: !16210)
!16368 = !DILocation(line: 4134, column: 2, scope: !16210)
!16369 = !DILocation(line: 4134, column: 12, scope: !16210)
!16370 = !DILocation(line: 4134, column: 23, scope: !16210)
!16371 = !DILocation(line: 4136, column: 25, scope: !16210)
!16372 = !DILocation(line: 4136, column: 31, scope: !16210)
!16373 = !DILocation(line: 4136, column: 41, scope: !16210)
!16374 = !DILocation(line: 4137, column: 5, scope: !16210)
!16375 = !DILocation(line: 4137, column: 37, scope: !16210)
!16376 = !DILocation(line: 4136, column: 2, scope: !16210)
!16377 = !DILocation(line: 4139, column: 30, scope: !16210)
!16378 = !DILocation(line: 4139, column: 2, scope: !16210)
!16379 = !DILocation(line: 4140, column: 2, scope: !16210)
!16380 = !DILocation(line: 4140, column: 2, scope: !16227)
!16381 = !DILocalVariable(name: "__dummy", scope: !16382, file: !3, line: 4140, type: !248)
!16382 = distinct !DILexicalBlock(scope: !16226, file: !3, line: 4140, column: 2)
!16383 = !DILocation(line: 4140, column: 2, scope: !16382)
!16384 = !DILocalVariable(name: "__dummy2", scope: !16382, file: !3, line: 4140, type: !248)
!16385 = !DILocation(line: 4140, column: 2, scope: !16226)
!16386 = !DILocation(line: 4140, column: 2, scope: !16225)
!16387 = !DILocation(line: 4140, column: 2, scope: !16388)
!16388 = distinct !DILexicalBlock(scope: !16225, file: !3, line: 4140, column: 2)
!16389 = !DILocalVariable(name: "__dummy", scope: !16390, file: !3, line: 4140, type: !248)
!16390 = distinct !DILexicalBlock(scope: !16391, file: !3, line: 4140, column: 2)
!16391 = distinct !DILexicalBlock(scope: !16388, file: !3, line: 4140, column: 2)
!16392 = !DILocation(line: 4140, column: 2, scope: !16390)
!16393 = !DILocalVariable(name: "__dummy2", scope: !16390, file: !3, line: 4140, type: !248)
!16394 = !DILocation(line: 4140, column: 2, scope: !16391)
!16395 = !DILocation(line: 4140, column: 2, scope: !16224)
!16396 = !{i32 -2140614411}
!16397 = !DILocation(line: 4140, column: 2, scope: !16223)
!16398 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !16222)
!16399 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !16222)
!16400 = !DILocation(line: 4141, column: 26, scope: !16210)
!16401 = !DILocation(line: 4141, column: 2, scope: !16210)
!16402 = !DILocation(line: 4142, column: 34, scope: !16210)
!16403 = !DILocation(line: 4142, column: 40, scope: !16210)
!16404 = !DILocation(line: 4142, column: 49, scope: !16210)
!16405 = !DILocation(line: 4142, column: 59, scope: !16210)
!16406 = !DILocation(line: 4142, column: 67, scope: !16210)
!16407 = !DILocation(line: 4143, column: 6, scope: !16210)
!16408 = !DILocation(line: 4143, column: 12, scope: !16210)
!16409 = !DILocation(line: 4143, column: 21, scope: !16210)
!16410 = !DILocation(line: 4142, column: 8, scope: !16210)
!16411 = !DILocation(line: 4142, column: 6, scope: !16210)
!16412 = !DILocation(line: 4144, column: 6, scope: !16219)
!16413 = !DILocation(line: 4144, column: 6, scope: !16210)
!16414 = !DILocation(line: 4145, column: 27, scope: !16218)
!16415 = !DILocation(line: 4145, column: 33, scope: !16218)
!16416 = !DILocation(line: 4145, column: 39, scope: !16218)
!16417 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !16217)
!16418 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !16217)
!16419 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !16217)
!16420 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !16217)
!16421 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !16217)
!16422 = !DILocation(line: 4146, column: 18, scope: !16218)
!16423 = !DILocation(line: 4146, column: 3, scope: !16218)
!16424 = !DILocation(line: 4148, column: 3, scope: !16218)
!16425 = !DILocation(line: 4150, column: 19, scope: !16210)
!16426 = !DILocation(line: 4150, column: 2, scope: !16210)
!16427 = !DILocation(line: 4151, column: 26, scope: !16210)
!16428 = !DILocation(line: 4151, column: 32, scope: !16210)
!16429 = !DILocation(line: 4151, column: 38, scope: !16210)
!16430 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !16214)
!16431 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !16214)
!16432 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !16214)
!16433 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !16214)
!16434 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !16214)
!16435 = !DILocation(line: 4154, column: 22, scope: !16210)
!16436 = !DILocation(line: 4154, column: 31, scope: !16210)
!16437 = !DILocation(line: 4154, column: 2, scope: !16210)
!16438 = !DILocation(line: 4160, column: 10, scope: !16210)
!16439 = !DILocation(line: 4160, column: 19, scope: !16210)
!16440 = !DILocation(line: 4160, column: 2, scope: !16210)
!16441 = !DILocation(line: 4163, column: 3, scope: !16442)
!16442 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 4160, column: 27)
!16443 = !DILocation(line: 4164, column: 7, scope: !16442)
!16444 = !DILocation(line: 4165, column: 3, scope: !16442)
!16445 = !DILocation(line: 4168, column: 3, scope: !16442)
!16446 = !DILocation(line: 4170, column: 7, scope: !16442)
!16447 = !DILocation(line: 4171, column: 3, scope: !16442)
!16448 = !DILocation(line: 4173, column: 3, scope: !16442)
!16449 = !DILocation(line: 4175, column: 17, scope: !16442)
!16450 = !DILocation(line: 4175, column: 23, scope: !16442)
!16451 = !DILocation(line: 4175, column: 3, scope: !16442)
!16452 = !DILocation(line: 4176, column: 27, scope: !16442)
!16453 = !DILocation(line: 4176, column: 33, scope: !16442)
!16454 = !DILocation(line: 4176, column: 39, scope: !16442)
!16455 = !DILocation(line: 4176, column: 9, scope: !16442)
!16456 = !DILocation(line: 4176, column: 7, scope: !16442)
!16457 = !DILocation(line: 4177, column: 8, scope: !16458)
!16458 = distinct !DILexicalBlock(scope: !16442, file: !3, line: 4177, column: 7)
!16459 = !DILocation(line: 4177, column: 7, scope: !16442)
!16460 = !DILocation(line: 4178, column: 19, scope: !16458)
!16461 = !DILocation(line: 4178, column: 24, scope: !16458)
!16462 = !DILocation(line: 4178, column: 4, scope: !16458)
!16463 = !DILocation(line: 4179, column: 9, scope: !16442)
!16464 = !DILocation(line: 4179, column: 18, scope: !16442)
!16465 = !DILocation(line: 4179, column: 3, scope: !16442)
!16466 = !DILocation(line: 4180, column: 9, scope: !16442)
!16467 = !DILocation(line: 4180, column: 3, scope: !16442)
!16468 = !DILocation(line: 4181, column: 3, scope: !16442)
!16469 = !DILocation(line: 4183, column: 3, scope: !16442)
!16470 = !DILocation(line: 4185, column: 7, scope: !16442)
!16471 = !DILocation(line: 4186, column: 3, scope: !16442)
!16472 = !DILocation(line: 4188, column: 18, scope: !16442)
!16473 = !DILocation(line: 4189, column: 42, scope: !16442)
!16474 = !DILocation(line: 4188, column: 3, scope: !16442)
!16475 = !DILocation(line: 4190, column: 3, scope: !16442)
!16476 = !DILocation(line: 4192, column: 3, scope: !16442)
!16477 = !DILocation(line: 4195, column: 26, scope: !16442)
!16478 = !DILocation(line: 4195, column: 32, scope: !16442)
!16479 = !DILocation(line: 4195, column: 42, scope: !16442)
!16480 = !DILocation(line: 4195, column: 3, scope: !16442)
!16481 = !DILocation(line: 4196, column: 7, scope: !16442)
!16482 = !DILocation(line: 4197, column: 3, scope: !16442)
!16483 = !DILocation(line: 4199, column: 6, scope: !16484)
!16484 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 4199, column: 6)
!16485 = !DILocation(line: 4199, column: 6, scope: !16210)
!16486 = !DILocation(line: 4200, column: 3, scope: !16484)
!16487 = !DILocation(line: 4201, column: 25, scope: !16210)
!16488 = !DILocation(line: 4201, column: 32, scope: !16210)
!16489 = !DILocation(line: 4201, column: 38, scope: !16210)
!16490 = !DILocation(line: 4201, column: 47, scope: !16210)
!16491 = !DILocation(line: 4201, column: 12, scope: !16210)
!16492 = !DILocation(line: 4201, column: 10, scope: !16210)
!16493 = !DILocation(line: 4202, column: 17, scope: !16210)
!16494 = !DILocation(line: 4203, column: 36, scope: !16210)
!16495 = !DILocation(line: 4202, column: 2, scope: !16210)
!16496 = !DILocation(line: 4204, column: 17, scope: !16210)
!16497 = !DILocation(line: 4206, column: 3, scope: !16210)
!16498 = !DILocation(line: 4206, column: 9, scope: !16210)
!16499 = !DILocation(line: 4207, column: 4, scope: !16210)
!16500 = !DILocation(line: 4207, column: 10, scope: !16210)
!16501 = !DILocation(line: 4207, column: 17, scope: !16210)
!16502 = !DILocation(line: 4207, column: 34, scope: !16210)
!16503 = !DILocation(line: 4207, column: 40, scope: !16210)
!16504 = !DILocation(line: 4209, column: 3, scope: !16210)
!16505 = !DILocation(line: 4204, column: 2, scope: !16210)
!16506 = !DILocation(line: 4210, column: 17, scope: !16210)
!16507 = !DILocation(line: 4212, column: 24, scope: !16210)
!16508 = !DILocation(line: 4212, column: 34, scope: !16210)
!16509 = !DILocation(line: 4212, column: 43, scope: !16210)
!16510 = !DILocation(line: 4210, column: 2, scope: !16210)
!16511 = !DILocation(line: 4213, column: 25, scope: !16210)
!16512 = !DILocation(line: 4213, column: 31, scope: !16210)
!16513 = !DILocation(line: 4213, column: 41, scope: !16210)
!16514 = !DILocation(line: 4214, column: 5, scope: !16210)
!16515 = !DILocation(line: 4214, column: 37, scope: !16210)
!16516 = !DILocation(line: 4213, column: 2, scope: !16210)
!16517 = !DILocation(line: 4219, column: 25, scope: !16210)
!16518 = !DILocation(line: 4219, column: 31, scope: !16210)
!16519 = !DILocation(line: 4219, column: 41, scope: !16210)
!16520 = !DILocation(line: 4220, column: 5, scope: !16210)
!16521 = !DILocation(line: 4220, column: 37, scope: !16210)
!16522 = !DILocation(line: 4219, column: 2, scope: !16210)
!16523 = !DILocation(line: 4222, column: 2, scope: !16210)
!16524 = !DILocation(line: 4222, column: 12, scope: !16210)
!16525 = !DILocation(line: 4222, column: 22, scope: !16210)
!16526 = !DILocation(line: 4223, column: 2, scope: !16210)
!16527 = !DILocation(line: 4223, column: 12, scope: !16210)
!16528 = !DILocation(line: 4223, column: 23, scope: !16210)
!16529 = !DILocation(line: 4224, column: 31, scope: !16210)
!16530 = !DILocation(line: 4224, column: 37, scope: !16210)
!16531 = !DILocation(line: 4224, column: 47, scope: !16210)
!16532 = !DILocation(line: 4224, column: 13, scope: !16210)
!16533 = !DILocation(line: 4224, column: 11, scope: !16210)
!16534 = !DILocation(line: 4225, column: 23, scope: !16210)
!16535 = !DILocation(line: 4225, column: 56, scope: !16210)
!16536 = !DILocation(line: 4225, column: 18, scope: !16210)
!16537 = !DILocation(line: 4225, column: 2, scope: !16210)
!16538 = !DILocation(line: 4225, column: 8, scope: !16210)
!16539 = !DILocation(line: 4225, column: 16, scope: !16210)
!16540 = !DILocation(line: 4227, column: 17, scope: !16210)
!16541 = !DILocation(line: 4229, column: 10, scope: !16210)
!16542 = !DILocation(line: 4229, column: 43, scope: !16210)
!16543 = !DILocation(line: 4227, column: 2, scope: !16210)
!16544 = !DILabel(scope: !16210, name: "out", file: !3, line: 4230)
!16545 = !DILocation(line: 4230, column: 1, scope: !16210)
!16546 = !DILocation(line: 4231, column: 16, scope: !16210)
!16547 = !DILocation(line: 4231, column: 22, scope: !16210)
!16548 = !DILocation(line: 4231, column: 2, scope: !16210)
!16549 = !DILocation(line: 4232, column: 6, scope: !16550)
!16550 = distinct !DILexicalBlock(scope: !16210, file: !3, line: 4232, column: 6)
!16551 = !DILocation(line: 4232, column: 6, scope: !16210)
!16552 = !DILocation(line: 4233, column: 9, scope: !16553)
!16553 = distinct !DILexicalBlock(scope: !16550, file: !3, line: 4232, column: 15)
!16554 = !DILocation(line: 4233, column: 18, scope: !16553)
!16555 = !DILocation(line: 4233, column: 3, scope: !16553)
!16556 = !DILocation(line: 4234, column: 9, scope: !16553)
!16557 = !DILocation(line: 4234, column: 3, scope: !16553)
!16558 = !DILocation(line: 4235, column: 2, scope: !16553)
!16559 = !DILocation(line: 4236, column: 9, scope: !16210)
!16560 = !DILocation(line: 4236, column: 2, scope: !16210)
!16561 = !DILocation(line: 4237, column: 1, scope: !16210)
!16562 = distinct !DISubprogram(name: "trace_xhci_dbg_address", scope: !5835, file: !5835, line: 40, type: !5836, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16563 = !DILocalVariable(name: "vaf", arg: 1, scope: !16562, file: !5835, line: 40, type: !5838)
!16564 = !DILocation(line: 40, column: 1, scope: !16562)
!16565 = distinct !DISubprogram(name: "trace_xhci_setup_device_slot", scope: !5835, file: !5835, line: 404, type: !8660, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16566 = !DILocalVariable(name: "ctx", arg: 1, scope: !16565, file: !5835, line: 404, type: !8442)
!16567 = !DILocation(line: 404, column: 1, scope: !16565)
!16568 = distinct !DISubprogram(name: "trace_xhci_address_ctx", scope: !5835, file: !5835, line: 110, type: !16569, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16569 = !DISubroutineType(types: !16570)
!16570 = !{null, !4497, !5251, !7}
!16571 = !DILocalVariable(name: "xhci", arg: 1, scope: !16568, file: !5835, line: 110, type: !4497)
!16572 = !DILocation(line: 110, column: 1, scope: !16568)
!16573 = !DILocalVariable(name: "ctx", arg: 2, scope: !16568, file: !5835, line: 110, type: !5251)
!16574 = !DILocalVariable(name: "ep_num", arg: 3, scope: !16568, file: !5835, line: 110, type: !7)
!16575 = distinct !DISubprogram(name: "trace_xhci_address_ctrl_ctx", scope: !5835, file: !5835, line: 444, type: !14562, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16576 = !DILocalVariable(name: "ctrl_ctx", arg: 1, scope: !16575, file: !5835, line: 444, type: !8108)
!16577 = !DILocation(line: 444, column: 1, scope: !16575)
!16578 = distinct !DISubprogram(name: "trace_xhci_setup_device", scope: !5835, file: !5835, line: 242, type: !16579, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16579 = !DISubroutineType(types: !16580)
!16580 = !{null, !5290}
!16581 = !DILocalVariable(name: "vdev", arg: 1, scope: !16578, file: !5835, line: 242, type: !5290)
!16582 = !DILocation(line: 242, column: 1, scope: !16578)
!16583 = distinct !DISubprogram(name: "trace_xhci_discover_or_reset_device", scope: !5835, file: !5835, line: 399, type: !8660, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16584 = !DILocalVariable(name: "ctx", arg: 1, scope: !16583, file: !5835, line: 399, type: !8442)
!16585 = !DILocation(line: 399, column: 1, scope: !16583)
!16586 = distinct !DISubprogram(name: "xhci_check_usb2_port_capability", scope: !3, file: !3, line: 4500, type: !16587, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16587 = !DISubroutineType(types: !16588)
!16588 = !{!265, !4497, !265, !7}
!16589 = !DILocalVariable(name: "xhci", arg: 1, scope: !16586, file: !3, line: 4500, type: !4497)
!16590 = !DILocation(line: 4500, column: 61, scope: !16586)
!16591 = !DILocalVariable(name: "port", arg: 2, scope: !16586, file: !3, line: 4500, type: !265)
!16592 = !DILocation(line: 4500, column: 71, scope: !16586)
!16593 = !DILocalVariable(name: "capability", arg: 3, scope: !16586, file: !3, line: 4501, type: !7)
!16594 = !DILocation(line: 4501, column: 18, scope: !16586)
!16595 = !DILocalVariable(name: "port_offset", scope: !16586, file: !3, line: 4503, type: !204)
!16596 = !DILocation(line: 4503, column: 6, scope: !16586)
!16597 = !DILocalVariable(name: "port_count", scope: !16586, file: !3, line: 4503, type: !204)
!16598 = !DILocation(line: 4503, column: 19, scope: !16586)
!16599 = !DILocalVariable(name: "i", scope: !16586, file: !3, line: 4504, type: !265)
!16600 = !DILocation(line: 4504, column: 6, scope: !16586)
!16601 = !DILocation(line: 4506, column: 9, scope: !16602)
!16602 = distinct !DILexicalBlock(scope: !16586, file: !3, line: 4506, column: 2)
!16603 = !DILocation(line: 4506, column: 7, scope: !16602)
!16604 = !DILocation(line: 4506, column: 14, scope: !16605)
!16605 = distinct !DILexicalBlock(scope: !16602, file: !3, line: 4506, column: 2)
!16606 = !DILocation(line: 4506, column: 18, scope: !16605)
!16607 = !DILocation(line: 4506, column: 24, scope: !16605)
!16608 = !DILocation(line: 4506, column: 16, scope: !16605)
!16609 = !DILocation(line: 4506, column: 2, scope: !16602)
!16610 = !DILocation(line: 4507, column: 7, scope: !16611)
!16611 = distinct !DILexicalBlock(scope: !16612, file: !3, line: 4507, column: 7)
!16612 = distinct !DILexicalBlock(scope: !16605, file: !3, line: 4506, column: 43)
!16613 = !DILocation(line: 4507, column: 13, scope: !16611)
!16614 = !DILocation(line: 4507, column: 22, scope: !16611)
!16615 = !DILocation(line: 4507, column: 27, scope: !16611)
!16616 = !DILocation(line: 4507, column: 25, scope: !16611)
!16617 = !DILocation(line: 4507, column: 7, scope: !16612)
!16618 = !DILocation(line: 4509, column: 18, scope: !16619)
!16619 = distinct !DILexicalBlock(scope: !16611, file: !3, line: 4507, column: 39)
!16620 = !DILocation(line: 4509, column: 55, scope: !16619)
!16621 = !DILocation(line: 4509, column: 16, scope: !16619)
!16622 = !DILocation(line: 4510, column: 17, scope: !16619)
!16623 = !DILocation(line: 4510, column: 15, scope: !16619)
!16624 = !DILocation(line: 4511, column: 8, scope: !16625)
!16625 = distinct !DILexicalBlock(scope: !16619, file: !3, line: 4511, column: 8)
!16626 = !DILocation(line: 4511, column: 16, scope: !16625)
!16627 = !DILocation(line: 4511, column: 13, scope: !16625)
!16628 = !DILocation(line: 4511, column: 28, scope: !16625)
!16629 = !DILocation(line: 4512, column: 8, scope: !16625)
!16630 = !DILocation(line: 4512, column: 15, scope: !16625)
!16631 = !DILocation(line: 4512, column: 29, scope: !16625)
!16632 = !DILocation(line: 4512, column: 27, scope: !16625)
!16633 = !DILocation(line: 4512, column: 13, scope: !16625)
!16634 = !DILocation(line: 4511, column: 8, scope: !16619)
!16635 = !DILocation(line: 4513, column: 5, scope: !16625)
!16636 = !DILocation(line: 4514, column: 3, scope: !16619)
!16637 = !DILocation(line: 4515, column: 2, scope: !16612)
!16638 = !DILocation(line: 4506, column: 39, scope: !16605)
!16639 = !DILocation(line: 4506, column: 2, scope: !16605)
!16640 = distinct !{!16640, !16609, !16641}
!16641 = !DILocation(line: 4515, column: 2, scope: !16602)
!16642 = !DILocation(line: 4516, column: 2, scope: !16586)
!16643 = !DILocation(line: 4517, column: 1, scope: !16586)
!16644 = distinct !DISubprogram(name: "xhci_change_max_exit_latency", scope: !3, file: !3, line: 4267, type: !16645, scopeLine: 4269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16645 = !DISubroutineType(types: !16646)
!16646 = !{!265, !4497, !4526, !984}
!16647 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !16648)
!16648 = distinct !DILocation(line: 4319, column: 3, scope: !16649)
!16649 = distinct !DILexicalBlock(scope: !16650, file: !3, line: 4319, column: 3)
!16650 = distinct !DILexicalBlock(scope: !16651, file: !3, line: 4319, column: 3)
!16651 = distinct !DILexicalBlock(scope: !16652, file: !3, line: 4319, column: 3)
!16652 = distinct !DILexicalBlock(scope: !16653, file: !3, line: 4319, column: 3)
!16653 = distinct !DILexicalBlock(scope: !16654, file: !3, line: 4319, column: 3)
!16654 = distinct !DILexicalBlock(scope: !16655, file: !3, line: 4318, column: 12)
!16655 = distinct !DILexicalBlock(scope: !16644, file: !3, line: 4318, column: 6)
!16656 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !16657)
!16657 = distinct !DILocation(line: 4303, column: 2, scope: !16644)
!16658 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !16657)
!16659 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !16660)
!16660 = distinct !DILocation(line: 4296, column: 3, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16662, file: !3, line: 4295, column: 17)
!16662 = distinct !DILexicalBlock(scope: !16644, file: !3, line: 4295, column: 6)
!16663 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !16660)
!16664 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !16665)
!16665 = distinct !DILocation(line: 4288, column: 3, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16667, file: !3, line: 4287, column: 62)
!16667 = distinct !DILexicalBlock(scope: !16644, file: !3, line: 4287, column: 6)
!16668 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !16665)
!16669 = !DILocation(line: 407, column: 64, scope: !6666, inlinedAt: !16670)
!16670 = distinct !DILocation(line: 4321, column: 3, scope: !16654)
!16671 = !DILocation(line: 407, column: 84, scope: !6666, inlinedAt: !16670)
!16672 = !DILocation(line: 327, column: 67, scope: !6674, inlinedAt: !16673)
!16673 = distinct !DILocation(line: 4277, column: 2, scope: !16674)
!16674 = distinct !DILexicalBlock(scope: !16675, file: !3, line: 4277, column: 2)
!16675 = distinct !DILexicalBlock(scope: !16676, file: !3, line: 4277, column: 2)
!16676 = distinct !DILexicalBlock(scope: !16677, file: !3, line: 4277, column: 2)
!16677 = distinct !DILexicalBlock(scope: !16678, file: !3, line: 4277, column: 2)
!16678 = distinct !DILexicalBlock(scope: !16644, file: !3, line: 4277, column: 2)
!16679 = !DILocalVariable(name: "xhci", arg: 1, scope: !16644, file: !3, line: 4267, type: !4497)
!16680 = !DILocation(line: 4267, column: 73, scope: !16644)
!16681 = !DILocalVariable(name: "udev", arg: 2, scope: !16644, file: !3, line: 4268, type: !4526)
!16682 = !DILocation(line: 4268, column: 23, scope: !16644)
!16683 = !DILocalVariable(name: "max_exit_latency", arg: 3, scope: !16644, file: !3, line: 4268, type: !984)
!16684 = !DILocation(line: 4268, column: 33, scope: !16644)
!16685 = !DILocalVariable(name: "virt_dev", scope: !16644, file: !3, line: 4270, type: !5290)
!16686 = !DILocation(line: 4270, column: 27, scope: !16644)
!16687 = !DILocalVariable(name: "command", scope: !16644, file: !3, line: 4271, type: !5247)
!16688 = !DILocation(line: 4271, column: 23, scope: !16644)
!16689 = !DILocalVariable(name: "ctrl_ctx", scope: !16644, file: !3, line: 4272, type: !8108)
!16690 = !DILocation(line: 4272, column: 33, scope: !16644)
!16691 = !DILocalVariable(name: "slot_ctx", scope: !16644, file: !3, line: 4273, type: !8442)
!16692 = !DILocation(line: 4273, column: 24, scope: !16644)
!16693 = !DILocalVariable(name: "flags", scope: !16644, file: !3, line: 4274, type: !248)
!16694 = !DILocation(line: 4274, column: 16, scope: !16644)
!16695 = !DILocalVariable(name: "ret", scope: !16644, file: !3, line: 4275, type: !265)
!16696 = !DILocation(line: 4275, column: 6, scope: !16644)
!16697 = !DILocation(line: 4277, column: 2, scope: !16644)
!16698 = !DILocation(line: 4277, column: 2, scope: !16678)
!16699 = !DILocalVariable(name: "__dummy", scope: !16700, file: !3, line: 4277, type: !248)
!16700 = distinct !DILexicalBlock(scope: !16677, file: !3, line: 4277, column: 2)
!16701 = !DILocation(line: 4277, column: 2, scope: !16700)
!16702 = !DILocalVariable(name: "__dummy2", scope: !16700, file: !3, line: 4277, type: !248)
!16703 = !DILocation(line: 4277, column: 2, scope: !16677)
!16704 = !DILocation(line: 4277, column: 2, scope: !16676)
!16705 = !DILocation(line: 4277, column: 2, scope: !16706)
!16706 = distinct !DILexicalBlock(scope: !16676, file: !3, line: 4277, column: 2)
!16707 = !DILocalVariable(name: "__dummy", scope: !16708, file: !3, line: 4277, type: !248)
!16708 = distinct !DILexicalBlock(scope: !16709, file: !3, line: 4277, column: 2)
!16709 = distinct !DILexicalBlock(scope: !16706, file: !3, line: 4277, column: 2)
!16710 = !DILocation(line: 4277, column: 2, scope: !16708)
!16711 = !DILocalVariable(name: "__dummy2", scope: !16708, file: !3, line: 4277, type: !248)
!16712 = !DILocation(line: 4277, column: 2, scope: !16709)
!16713 = !DILocation(line: 4277, column: 2, scope: !16675)
!16714 = !{i32 -2140611664}
!16715 = !DILocation(line: 4277, column: 2, scope: !16674)
!16716 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !16673)
!16717 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !16673)
!16718 = !DILocation(line: 4279, column: 13, scope: !16644)
!16719 = !DILocation(line: 4279, column: 19, scope: !16644)
!16720 = !DILocation(line: 4279, column: 24, scope: !16644)
!16721 = !DILocation(line: 4279, column: 30, scope: !16644)
!16722 = !DILocation(line: 4279, column: 11, scope: !16644)
!16723 = !DILocation(line: 4287, column: 7, scope: !16667)
!16724 = !DILocation(line: 4287, column: 16, scope: !16667)
!16725 = !DILocation(line: 4287, column: 19, scope: !16667)
!16726 = !DILocation(line: 4287, column: 39, scope: !16667)
!16727 = !DILocation(line: 4287, column: 49, scope: !16667)
!16728 = !DILocation(line: 4287, column: 36, scope: !16667)
!16729 = !DILocation(line: 4287, column: 6, scope: !16644)
!16730 = !DILocation(line: 4288, column: 27, scope: !16666)
!16731 = !DILocation(line: 4288, column: 33, scope: !16666)
!16732 = !DILocation(line: 4288, column: 39, scope: !16666)
!16733 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !16665)
!16734 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !16665)
!16735 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !16665)
!16736 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !16665)
!16737 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !16665)
!16738 = !DILocation(line: 4289, column: 3, scope: !16666)
!16739 = !DILocation(line: 4293, column: 12, scope: !16644)
!16740 = !DILocation(line: 4293, column: 18, scope: !16644)
!16741 = !DILocation(line: 4293, column: 10, scope: !16644)
!16742 = !DILocation(line: 4294, column: 40, scope: !16644)
!16743 = !DILocation(line: 4294, column: 49, scope: !16644)
!16744 = !DILocation(line: 4294, column: 13, scope: !16644)
!16745 = !DILocation(line: 4294, column: 11, scope: !16644)
!16746 = !DILocation(line: 4295, column: 7, scope: !16662)
!16747 = !DILocation(line: 4295, column: 6, scope: !16644)
!16748 = !DILocation(line: 4296, column: 27, scope: !16661)
!16749 = !DILocation(line: 4296, column: 33, scope: !16661)
!16750 = !DILocation(line: 4296, column: 39, scope: !16661)
!16751 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !16660)
!16752 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !16660)
!16753 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !16660)
!16754 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !16660)
!16755 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !16660)
!16756 = !DILocation(line: 4297, column: 3, scope: !16661)
!16757 = !DILocation(line: 4299, column: 3, scope: !16661)
!16758 = !DILocation(line: 4302, column: 17, scope: !16644)
!16759 = !DILocation(line: 4302, column: 23, scope: !16644)
!16760 = !DILocation(line: 4302, column: 32, scope: !16644)
!16761 = !DILocation(line: 4302, column: 40, scope: !16644)
!16762 = !DILocation(line: 4302, column: 50, scope: !16644)
!16763 = !DILocation(line: 4302, column: 2, scope: !16644)
!16764 = !DILocation(line: 4303, column: 26, scope: !16644)
!16765 = !DILocation(line: 4303, column: 32, scope: !16644)
!16766 = !DILocation(line: 4303, column: 38, scope: !16644)
!16767 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !16657)
!16768 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !16657)
!16769 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !16657)
!16770 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !16657)
!16771 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !16657)
!16772 = !DILocation(line: 4305, column: 2, scope: !16644)
!16773 = !DILocation(line: 4305, column: 12, scope: !16644)
!16774 = !DILocation(line: 4305, column: 22, scope: !16644)
!16775 = !DILocation(line: 4306, column: 31, scope: !16644)
!16776 = !DILocation(line: 4306, column: 37, scope: !16644)
!16777 = !DILocation(line: 4306, column: 46, scope: !16644)
!16778 = !DILocation(line: 4306, column: 13, scope: !16644)
!16779 = !DILocation(line: 4306, column: 11, scope: !16644)
!16780 = !DILocation(line: 4307, column: 2, scope: !16644)
!16781 = !DILocation(line: 4307, column: 12, scope: !16644)
!16782 = !DILocation(line: 4307, column: 22, scope: !16644)
!16783 = !DILocation(line: 4308, column: 25, scope: !16644)
!16784 = !DILocation(line: 4308, column: 2, scope: !16644)
!16785 = !DILocation(line: 4308, column: 12, scope: !16644)
!16786 = !DILocation(line: 4308, column: 22, scope: !16644)
!16787 = !DILocation(line: 4309, column: 2, scope: !16644)
!16788 = !DILocation(line: 4309, column: 12, scope: !16644)
!16789 = !DILocation(line: 4309, column: 22, scope: !16644)
!16790 = !DILocation(line: 4311, column: 17, scope: !16644)
!16791 = !DILocation(line: 4311, column: 2, scope: !16644)
!16792 = !DILocation(line: 4315, column: 32, scope: !16644)
!16793 = !DILocation(line: 4315, column: 38, scope: !16644)
!16794 = !DILocation(line: 4315, column: 44, scope: !16644)
!16795 = !DILocation(line: 4315, column: 8, scope: !16644)
!16796 = !DILocation(line: 4315, column: 6, scope: !16644)
!16797 = !DILocation(line: 4318, column: 7, scope: !16655)
!16798 = !DILocation(line: 4318, column: 6, scope: !16644)
!16799 = !DILocation(line: 4319, column: 3, scope: !16654)
!16800 = !DILocation(line: 4319, column: 3, scope: !16653)
!16801 = !DILocalVariable(name: "__dummy", scope: !16802, file: !3, line: 4319, type: !248)
!16802 = distinct !DILexicalBlock(scope: !16652, file: !3, line: 4319, column: 3)
!16803 = !DILocation(line: 4319, column: 3, scope: !16802)
!16804 = !DILocalVariable(name: "__dummy2", scope: !16802, file: !3, line: 4319, type: !248)
!16805 = !DILocation(line: 4319, column: 3, scope: !16652)
!16806 = !DILocation(line: 4319, column: 3, scope: !16651)
!16807 = !DILocation(line: 4319, column: 3, scope: !16808)
!16808 = distinct !DILexicalBlock(scope: !16651, file: !3, line: 4319, column: 3)
!16809 = !DILocalVariable(name: "__dummy", scope: !16810, file: !3, line: 4319, type: !248)
!16810 = distinct !DILexicalBlock(scope: !16811, file: !3, line: 4319, column: 3)
!16811 = distinct !DILexicalBlock(scope: !16808, file: !3, line: 4319, column: 3)
!16812 = !DILocation(line: 4319, column: 3, scope: !16810)
!16813 = !DILocalVariable(name: "__dummy2", scope: !16810, file: !3, line: 4319, type: !248)
!16814 = !DILocation(line: 4319, column: 3, scope: !16811)
!16815 = !DILocation(line: 4319, column: 3, scope: !16650)
!16816 = !{i32 -2140610140}
!16817 = !DILocation(line: 4319, column: 3, scope: !16649)
!16818 = !DILocation(line: 329, column: 10, scope: !6674, inlinedAt: !16648)
!16819 = !DILocation(line: 329, column: 16, scope: !6674, inlinedAt: !16648)
!16820 = !DILocation(line: 4320, column: 27, scope: !16654)
!16821 = !DILocation(line: 4320, column: 3, scope: !16654)
!16822 = !DILocation(line: 4320, column: 13, scope: !16654)
!16823 = !DILocation(line: 4320, column: 25, scope: !16654)
!16824 = !DILocation(line: 4321, column: 27, scope: !16654)
!16825 = !DILocation(line: 4321, column: 33, scope: !16654)
!16826 = !DILocation(line: 4321, column: 39, scope: !16654)
!16827 = !DILocation(line: 409, column: 2, scope: !6800, inlinedAt: !16670)
!16828 = !DILocation(line: 409, column: 2, scope: !6805, inlinedAt: !16670)
!16829 = !DILocation(line: 409, column: 2, scope: !6806, inlinedAt: !16670)
!16830 = !DILocation(line: 409, column: 2, scope: !6813, inlinedAt: !16670)
!16831 = !DILocation(line: 409, column: 2, scope: !6816, inlinedAt: !16670)
!16832 = !DILocation(line: 4322, column: 2, scope: !16654)
!16833 = !DILocation(line: 4323, column: 9, scope: !16644)
!16834 = !DILocation(line: 4323, column: 2, scope: !16644)
!16835 = !DILocation(line: 4324, column: 1, scope: !16644)
!16836 = distinct !DISubprogram(name: "xhci_calculate_usb2_hw_lpm_params", scope: !3, file: !3, line: 4368, type: !16837, scopeLine: 4369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16837 = !DISubroutineType(types: !16838)
!16838 = !{!265, !4526}
!16839 = !DILocalVariable(name: "udev", arg: 1, scope: !16836, file: !3, line: 4368, type: !4526)
!16840 = !DILocation(line: 4368, column: 65, scope: !16836)
!16841 = !DILocalVariable(name: "field", scope: !16836, file: !3, line: 4370, type: !204)
!16842 = !DILocation(line: 4370, column: 6, scope: !16836)
!16843 = !DILocalVariable(name: "l1", scope: !16836, file: !3, line: 4371, type: !265)
!16844 = !DILocation(line: 4371, column: 6, scope: !16836)
!16845 = !DILocalVariable(name: "besld", scope: !16836, file: !3, line: 4372, type: !265)
!16846 = !DILocation(line: 4372, column: 6, scope: !16836)
!16847 = !DILocalVariable(name: "hirdm", scope: !16836, file: !3, line: 4373, type: !265)
!16848 = !DILocation(line: 4373, column: 6, scope: !16836)
!16849 = !DILocation(line: 4375, column: 10, scope: !16836)
!16850 = !DILocation(line: 4375, column: 8, scope: !16836)
!16851 = !DILocation(line: 4378, column: 7, scope: !16836)
!16852 = !DILocation(line: 4378, column: 13, scope: !16836)
!16853 = !DILocation(line: 4378, column: 23, scope: !16836)
!16854 = !DILocation(line: 4378, column: 31, scope: !16836)
!16855 = !DILocation(line: 4378, column: 5, scope: !16836)
!16856 = !DILocation(line: 4381, column: 6, scope: !16857)
!16857 = distinct !DILexicalBlock(scope: !16836, file: !3, line: 4381, column: 6)
!16858 = !DILocation(line: 4381, column: 12, scope: !16857)
!16859 = !DILocation(line: 4381, column: 6, scope: !16836)
!16860 = !DILocation(line: 4382, column: 11, scope: !16861)
!16861 = distinct !DILexicalBlock(scope: !16857, file: !3, line: 4381, column: 35)
!16862 = !DILocation(line: 4382, column: 9, scope: !16861)
!16863 = !DILocation(line: 4383, column: 9, scope: !16861)
!16864 = !DILocation(line: 4384, column: 2, scope: !16861)
!16865 = !DILocation(line: 4386, column: 9, scope: !16836)
!16866 = !DILocation(line: 4386, column: 29, scope: !16836)
!16867 = !DILocation(line: 4386, column: 27, scope: !16836)
!16868 = !DILocation(line: 4386, column: 51, scope: !16836)
!16869 = !DILocation(line: 4386, column: 49, scope: !16836)
!16870 = !DILocation(line: 4386, column: 2, scope: !16836)
!16871 = distinct !DISubprogram(name: "xhci_calculate_hird_besl", scope: !3, file: !3, line: 4333, type: !16872, scopeLine: 4335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16872 = !DISubroutineType(types: !16873)
!16873 = !{!265, !4497, !4526}
!16874 = !DILocalVariable(name: "xhci", arg: 1, scope: !16871, file: !3, line: 4333, type: !4497)
!16875 = !DILocation(line: 4333, column: 54, scope: !16871)
!16876 = !DILocalVariable(name: "udev", arg: 2, scope: !16871, file: !3, line: 4334, type: !4526)
!16877 = !DILocation(line: 4334, column: 25, scope: !16871)
!16878 = !DILocalVariable(name: "u2del", scope: !16871, file: !3, line: 4336, type: !265)
!16879 = !DILocation(line: 4336, column: 6, scope: !16871)
!16880 = !DILocalVariable(name: "besl", scope: !16871, file: !3, line: 4336, type: !265)
!16881 = !DILocation(line: 4336, column: 13, scope: !16871)
!16882 = !DILocalVariable(name: "besl_host", scope: !16871, file: !3, line: 4336, type: !265)
!16883 = !DILocation(line: 4336, column: 19, scope: !16871)
!16884 = !DILocalVariable(name: "besl_device", scope: !16871, file: !3, line: 4337, type: !265)
!16885 = !DILocation(line: 4337, column: 6, scope: !16871)
!16886 = !DILocalVariable(name: "field", scope: !16871, file: !3, line: 4338, type: !204)
!16887 = !DILocation(line: 4338, column: 6, scope: !16871)
!16888 = !DILocation(line: 4340, column: 10, scope: !16871)
!16889 = !DILocation(line: 4340, column: 8, scope: !16871)
!16890 = !DILocation(line: 4341, column: 10, scope: !16871)
!16891 = !DILocation(line: 4341, column: 8, scope: !16871)
!16892 = !DILocation(line: 4343, column: 6, scope: !16893)
!16893 = distinct !DILexicalBlock(scope: !16871, file: !3, line: 4343, column: 6)
!16894 = !DILocation(line: 4343, column: 12, scope: !16893)
!16895 = !DILocation(line: 4343, column: 6, scope: !16871)
!16896 = !DILocation(line: 4344, column: 18, scope: !16897)
!16897 = distinct !DILexicalBlock(scope: !16898, file: !3, line: 4344, column: 3)
!16898 = distinct !DILexicalBlock(scope: !16893, file: !3, line: 4343, column: 32)
!16899 = !DILocation(line: 4344, column: 8, scope: !16897)
!16900 = !DILocation(line: 4344, column: 23, scope: !16901)
!16901 = distinct !DILexicalBlock(scope: !16897, file: !3, line: 4344, column: 3)
!16902 = !DILocation(line: 4344, column: 33, scope: !16901)
!16903 = !DILocation(line: 4344, column: 3, scope: !16897)
!16904 = !DILocation(line: 4345, column: 27, scope: !16905)
!16905 = distinct !DILexicalBlock(scope: !16906, file: !3, line: 4345, column: 8)
!16906 = distinct !DILexicalBlock(scope: !16901, file: !3, line: 4344, column: 52)
!16907 = !DILocation(line: 4345, column: 8, scope: !16905)
!16908 = !DILocation(line: 4345, column: 41, scope: !16905)
!16909 = !DILocation(line: 4345, column: 38, scope: !16905)
!16910 = !DILocation(line: 4345, column: 8, scope: !16906)
!16911 = !DILocation(line: 4346, column: 5, scope: !16905)
!16912 = !DILocation(line: 4347, column: 3, scope: !16906)
!16913 = !DILocation(line: 4344, column: 48, scope: !16901)
!16914 = !DILocation(line: 4344, column: 3, scope: !16901)
!16915 = distinct !{!16915, !16903, !16916}
!16916 = !DILocation(line: 4347, column: 3, scope: !16897)
!16917 = !DILocation(line: 4349, column: 7, scope: !16918)
!16918 = distinct !DILexicalBlock(scope: !16898, file: !3, line: 4349, column: 7)
!16919 = !DILocation(line: 4349, column: 13, scope: !16918)
!16920 = !DILocation(line: 4349, column: 7, scope: !16898)
!16921 = !DILocation(line: 4350, column: 18, scope: !16918)
!16922 = !DILocation(line: 4350, column: 16, scope: !16918)
!16923 = !DILocation(line: 4350, column: 4, scope: !16918)
!16924 = !DILocation(line: 4351, column: 12, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16918, file: !3, line: 4351, column: 12)
!16926 = !DILocation(line: 4351, column: 18, scope: !16925)
!16927 = !DILocation(line: 4351, column: 12, scope: !16918)
!16928 = !DILocation(line: 4352, column: 18, scope: !16925)
!16929 = !DILocation(line: 4352, column: 16, scope: !16925)
!16930 = !DILocation(line: 4352, column: 4, scope: !16925)
!16931 = !DILocation(line: 4353, column: 2, scope: !16898)
!16932 = !DILocation(line: 4354, column: 7, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16934, file: !3, line: 4354, column: 7)
!16934 = distinct !DILexicalBlock(scope: !16893, file: !3, line: 4353, column: 9)
!16935 = !DILocation(line: 4354, column: 13, scope: !16933)
!16936 = !DILocation(line: 4354, column: 7, scope: !16934)
!16937 = !DILocation(line: 4355, column: 14, scope: !16933)
!16938 = !DILocation(line: 4355, column: 4, scope: !16933)
!16939 = !DILocation(line: 4357, column: 17, scope: !16933)
!16940 = !DILocation(line: 4357, column: 23, scope: !16933)
!16941 = !DILocation(line: 4357, column: 29, scope: !16933)
!16942 = !DILocation(line: 4357, column: 34, scope: !16933)
!16943 = !DILocation(line: 4357, column: 14, scope: !16933)
!16944 = !DILocation(line: 4360, column: 9, scope: !16871)
!16945 = !DILocation(line: 4360, column: 21, scope: !16871)
!16946 = !DILocation(line: 4360, column: 19, scope: !16871)
!16947 = !DILocation(line: 4360, column: 7, scope: !16871)
!16948 = !DILocation(line: 4361, column: 6, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16871, file: !3, line: 4361, column: 6)
!16950 = !DILocation(line: 4361, column: 11, scope: !16949)
!16951 = !DILocation(line: 4361, column: 6, scope: !16871)
!16952 = !DILocation(line: 4362, column: 8, scope: !16949)
!16953 = !DILocation(line: 4362, column: 3, scope: !16949)
!16954 = !DILocation(line: 4364, column: 9, scope: !16871)
!16955 = !DILocation(line: 4364, column: 2, scope: !16871)
!16956 = distinct !DISubprogram(name: "xhci_calculate_lpm_timeout", scope: !3, file: !3, line: 4833, type: !16957, scopeLine: 4835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!16957 = !DISubroutineType(types: !16958)
!16958 = !{!984, !4501, !4526, !132}
!16959 = !DILocalVariable(name: "hcd", arg: 1, scope: !16956, file: !3, line: 4833, type: !4501)
!16960 = !DILocation(line: 4833, column: 55, scope: !16956)
!16961 = !DILocalVariable(name: "udev", arg: 2, scope: !16956, file: !3, line: 4834, type: !4526)
!16962 = !DILocation(line: 4834, column: 23, scope: !16956)
!16963 = !DILocalVariable(name: "state", arg: 3, scope: !16956, file: !3, line: 4834, type: !132)
!16964 = !DILocation(line: 4834, column: 50, scope: !16956)
!16965 = !DILocalVariable(name: "xhci", scope: !16956, file: !3, line: 4836, type: !4497)
!16966 = !DILocation(line: 4836, column: 19, scope: !16956)
!16967 = !DILocation(line: 4836, column: 38, scope: !16956)
!16968 = !DILocation(line: 4836, column: 26, scope: !16956)
!16969 = !DILocalVariable(name: "config", scope: !16956, file: !3, line: 4837, type: !4673)
!16970 = !DILocation(line: 4837, column: 26, scope: !16956)
!16971 = !DILocalVariable(name: "state_name", scope: !16956, file: !3, line: 4838, type: !363)
!16972 = !DILocation(line: 4838, column: 8, scope: !16956)
!16973 = !DILocalVariable(name: "i", scope: !16956, file: !3, line: 4839, type: !265)
!16974 = !DILocation(line: 4839, column: 6, scope: !16956)
!16975 = !DILocalVariable(name: "timeout", scope: !16956, file: !3, line: 4840, type: !984)
!16976 = !DILocation(line: 4840, column: 6, scope: !16956)
!16977 = !DILocation(line: 4842, column: 6, scope: !16978)
!16978 = distinct !DILexicalBlock(scope: !16956, file: !3, line: 4842, column: 6)
!16979 = !DILocation(line: 4842, column: 12, scope: !16978)
!16980 = !DILocation(line: 4842, column: 6, scope: !16956)
!16981 = !DILocation(line: 4843, column: 14, scope: !16978)
!16982 = !DILocation(line: 4843, column: 3, scope: !16978)
!16983 = !DILocation(line: 4844, column: 11, scope: !16984)
!16984 = distinct !DILexicalBlock(scope: !16978, file: !3, line: 4844, column: 11)
!16985 = !DILocation(line: 4844, column: 17, scope: !16984)
!16986 = !DILocation(line: 4844, column: 11, scope: !16978)
!16987 = !DILocation(line: 4845, column: 14, scope: !16984)
!16988 = !DILocation(line: 4845, column: 3, scope: !16984)
!16989 = !DILocation(line: 4847, column: 3, scope: !16990)
!16990 = distinct !DILexicalBlock(scope: !16984, file: !3, line: 4846, column: 7)
!16991 = !DILocation(line: 4849, column: 10, scope: !16990)
!16992 = !DILocation(line: 4849, column: 3, scope: !16990)
!16993 = !DILocation(line: 4852, column: 29, scope: !16994)
!16994 = distinct !DILexicalBlock(scope: !16956, file: !3, line: 4852, column: 6)
!16995 = !DILocation(line: 4852, column: 35, scope: !16994)
!16996 = !DILocation(line: 4852, column: 41, scope: !16994)
!16997 = !DILocation(line: 4852, column: 6, scope: !16994)
!16998 = !DILocation(line: 4852, column: 48, scope: !16994)
!16999 = !DILocation(line: 4852, column: 6, scope: !16956)
!17000 = !DILocation(line: 4853, column: 10, scope: !16994)
!17001 = !DILocation(line: 4853, column: 3, scope: !16994)
!17002 = !DILocation(line: 4858, column: 39, scope: !17003)
!17003 = distinct !DILexicalBlock(scope: !16956, file: !3, line: 4858, column: 6)
!17004 = !DILocation(line: 4858, column: 45, scope: !17003)
!17005 = !DILocation(line: 4858, column: 52, scope: !17003)
!17006 = !DILocation(line: 4858, column: 58, scope: !17003)
!17007 = !DILocation(line: 4858, column: 62, scope: !17003)
!17008 = !DILocation(line: 4859, column: 4, scope: !17003)
!17009 = !DILocation(line: 4858, column: 6, scope: !17003)
!17010 = !DILocation(line: 4858, column: 6, scope: !16956)
!17011 = !DILocation(line: 4860, column: 10, scope: !17003)
!17012 = !DILocation(line: 4860, column: 3, scope: !17003)
!17013 = !DILocation(line: 4862, column: 11, scope: !16956)
!17014 = !DILocation(line: 4862, column: 17, scope: !16956)
!17015 = !DILocation(line: 4862, column: 9, scope: !16956)
!17016 = !DILocation(line: 4863, column: 7, scope: !17017)
!17017 = distinct !DILexicalBlock(scope: !16956, file: !3, line: 4863, column: 6)
!17018 = !DILocation(line: 4863, column: 6, scope: !16956)
!17019 = !DILocation(line: 4864, column: 10, scope: !17017)
!17020 = !DILocation(line: 4864, column: 3, scope: !17017)
!17021 = !DILocation(line: 4866, column: 9, scope: !17022)
!17022 = distinct !DILexicalBlock(scope: !16956, file: !3, line: 4866, column: 2)
!17023 = !DILocation(line: 4866, column: 7, scope: !17022)
!17024 = !DILocation(line: 4866, column: 14, scope: !17025)
!17025 = distinct !DILexicalBlock(scope: !17022, file: !3, line: 4866, column: 2)
!17026 = !DILocation(line: 4866, column: 18, scope: !17025)
!17027 = !DILocation(line: 4866, column: 26, scope: !17025)
!17028 = !DILocation(line: 4866, column: 31, scope: !17025)
!17029 = !DILocation(line: 4866, column: 16, scope: !17025)
!17030 = !DILocation(line: 4866, column: 2, scope: !17022)
!17031 = !DILocalVariable(name: "driver", scope: !17032, file: !3, line: 4867, type: !5465)
!17032 = distinct !DILexicalBlock(scope: !17025, file: !3, line: 4866, column: 52)
!17033 = !DILocation(line: 4867, column: 22, scope: !17032)
!17034 = !DILocalVariable(name: "intf", scope: !17032, file: !3, line: 4868, type: !4703)
!17035 = !DILocation(line: 4868, column: 25, scope: !17032)
!17036 = !DILocation(line: 4868, column: 32, scope: !17032)
!17037 = !DILocation(line: 4868, column: 40, scope: !17032)
!17038 = !DILocation(line: 4868, column: 50, scope: !17032)
!17039 = !DILocation(line: 4870, column: 8, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !17032, file: !3, line: 4870, column: 7)
!17041 = !DILocation(line: 4870, column: 7, scope: !17032)
!17042 = !DILocation(line: 4871, column: 4, scope: !17040)
!17043 = !DILocation(line: 4876, column: 7, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !17032, file: !3, line: 4876, column: 7)
!17045 = !DILocation(line: 4876, column: 13, scope: !17044)
!17046 = !DILocation(line: 4876, column: 17, scope: !17044)
!17047 = !DILocation(line: 4876, column: 7, scope: !17032)
!17048 = !DILocalVariable(name: "__mptr", scope: !17049, file: !3, line: 4877, type: !208)
!17049 = distinct !DILexicalBlock(scope: !17050, file: !3, line: 4877, column: 13)
!17050 = distinct !DILexicalBlock(scope: !17044, file: !3, line: 4876, column: 25)
!17051 = !DILocation(line: 4877, column: 13, scope: !17049)
!17052 = !DILocation(line: 4877, column: 13, scope: !17053)
!17053 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 4877, column: 13)
!17054 = !DILocation(line: 4877, column: 11, scope: !17050)
!17055 = !DILocation(line: 4878, column: 8, scope: !17056)
!17056 = distinct !DILexicalBlock(scope: !17050, file: !3, line: 4878, column: 8)
!17057 = !DILocation(line: 4878, column: 15, scope: !17056)
!17058 = !DILocation(line: 4878, column: 18, scope: !17056)
!17059 = !DILocation(line: 4878, column: 26, scope: !17056)
!17060 = !DILocation(line: 4878, column: 8, scope: !17050)
!17061 = !DILocation(line: 4881, column: 43, scope: !17062)
!17062 = distinct !DILexicalBlock(scope: !17056, file: !3, line: 4878, column: 53)
!17063 = !DILocation(line: 4882, column: 15, scope: !17062)
!17064 = !DILocation(line: 4881, column: 15, scope: !17062)
!17065 = !DILocation(line: 4881, column: 13, scope: !17062)
!17066 = !DILocation(line: 4883, column: 9, scope: !17067)
!17067 = distinct !DILexicalBlock(scope: !17062, file: !3, line: 4883, column: 9)
!17068 = !DILocation(line: 4883, column: 17, scope: !17067)
!17069 = !DILocation(line: 4883, column: 9, scope: !17062)
!17070 = !DILocation(line: 4884, column: 13, scope: !17067)
!17071 = !DILocation(line: 4884, column: 6, scope: !17067)
!17072 = !DILocation(line: 4885, column: 4, scope: !17062)
!17073 = !DILocation(line: 4886, column: 3, scope: !17050)
!17074 = !DILocation(line: 4889, column: 8, scope: !17075)
!17075 = distinct !DILexicalBlock(scope: !17032, file: !3, line: 4889, column: 7)
!17076 = !DILocation(line: 4889, column: 14, scope: !17075)
!17077 = !DILocation(line: 4889, column: 7, scope: !17032)
!17078 = !DILocation(line: 4890, column: 4, scope: !17075)
!17079 = !DILocation(line: 4892, column: 41, scope: !17080)
!17080 = distinct !DILexicalBlock(scope: !17032, file: !3, line: 4892, column: 7)
!17081 = !DILocation(line: 4892, column: 47, scope: !17080)
!17082 = !DILocation(line: 4893, column: 6, scope: !17080)
!17083 = !DILocation(line: 4893, column: 12, scope: !17080)
!17084 = !DILocation(line: 4894, column: 6, scope: !17080)
!17085 = !DILocation(line: 4892, column: 7, scope: !17080)
!17086 = !DILocation(line: 4892, column: 7, scope: !17032)
!17087 = !DILocation(line: 4895, column: 11, scope: !17080)
!17088 = !DILocation(line: 4895, column: 4, scope: !17080)
!17089 = !DILocation(line: 4896, column: 2, scope: !17032)
!17090 = !DILocation(line: 4866, column: 48, scope: !17025)
!17091 = !DILocation(line: 4866, column: 2, scope: !17025)
!17092 = distinct !{!17092, !17030, !17093}
!17093 = !DILocation(line: 4896, column: 2, scope: !17022)
!17094 = !DILocation(line: 4897, column: 9, scope: !16956)
!17095 = !DILocation(line: 4897, column: 2, scope: !16956)
!17096 = !DILocation(line: 4898, column: 1, scope: !16956)
!17097 = distinct !DISubprogram(name: "calculate_max_exit_latency", scope: !3, file: !3, line: 4900, type: !17098, scopeLine: 4903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17098 = !DISubroutineType(types: !17099)
!17099 = !{!265, !4526, !132, !984}
!17100 = !DILocalVariable(name: "udev", arg: 1, scope: !17097, file: !3, line: 4900, type: !4526)
!17101 = !DILocation(line: 4900, column: 58, scope: !17097)
!17102 = !DILocalVariable(name: "state_changed", arg: 2, scope: !17097, file: !3, line: 4901, type: !132)
!17103 = !DILocation(line: 4901, column: 24, scope: !17097)
!17104 = !DILocalVariable(name: "hub_encoded_timeout", arg: 3, scope: !17097, file: !3, line: 4902, type: !984)
!17105 = !DILocation(line: 4902, column: 7, scope: !17097)
!17106 = !DILocalVariable(name: "u1_mel_us", scope: !17097, file: !3, line: 4904, type: !241)
!17107 = !DILocation(line: 4904, column: 21, scope: !17097)
!17108 = !DILocalVariable(name: "u2_mel_us", scope: !17097, file: !3, line: 4905, type: !241)
!17109 = !DILocation(line: 4905, column: 21, scope: !17097)
!17110 = !DILocalVariable(name: "mel_us", scope: !17097, file: !3, line: 4906, type: !241)
!17111 = !DILocation(line: 4906, column: 21, scope: !17097)
!17112 = !DILocalVariable(name: "disabling_u1", scope: !17097, file: !3, line: 4907, type: !569)
!17113 = !DILocation(line: 4907, column: 7, scope: !17097)
!17114 = !DILocalVariable(name: "disabling_u2", scope: !17097, file: !3, line: 4908, type: !569)
!17115 = !DILocation(line: 4908, column: 7, scope: !17097)
!17116 = !DILocalVariable(name: "enabling_u1", scope: !17097, file: !3, line: 4909, type: !569)
!17117 = !DILocation(line: 4909, column: 7, scope: !17097)
!17118 = !DILocalVariable(name: "enabling_u2", scope: !17097, file: !3, line: 4910, type: !569)
!17119 = !DILocation(line: 4910, column: 7, scope: !17097)
!17120 = !DILocation(line: 4912, column: 18, scope: !17097)
!17121 = !DILocation(line: 4912, column: 32, scope: !17097)
!17122 = !DILocation(line: 4912, column: 47, scope: !17097)
!17123 = !DILocation(line: 4913, column: 4, scope: !17097)
!17124 = !DILocation(line: 4913, column: 24, scope: !17097)
!17125 = !DILocation(line: 0, scope: !17097)
!17126 = !DILocation(line: 4912, column: 15, scope: !17097)
!17127 = !DILocation(line: 4914, column: 18, scope: !17097)
!17128 = !DILocation(line: 4914, column: 32, scope: !17097)
!17129 = !DILocation(line: 4914, column: 47, scope: !17097)
!17130 = !DILocation(line: 4915, column: 4, scope: !17097)
!17131 = !DILocation(line: 4915, column: 24, scope: !17097)
!17132 = !DILocation(line: 4914, column: 15, scope: !17097)
!17133 = !DILocation(line: 4917, column: 17, scope: !17097)
!17134 = !DILocation(line: 4917, column: 31, scope: !17097)
!17135 = !DILocation(line: 4917, column: 46, scope: !17097)
!17136 = !DILocation(line: 4918, column: 4, scope: !17097)
!17137 = !DILocation(line: 4918, column: 24, scope: !17097)
!17138 = !DILocation(line: 4917, column: 14, scope: !17097)
!17139 = !DILocation(line: 4919, column: 17, scope: !17097)
!17140 = !DILocation(line: 4919, column: 31, scope: !17097)
!17141 = !DILocation(line: 4919, column: 46, scope: !17097)
!17142 = !DILocation(line: 4920, column: 4, scope: !17097)
!17143 = !DILocation(line: 4920, column: 24, scope: !17097)
!17144 = !DILocation(line: 4919, column: 14, scope: !17097)
!17145 = !DILocation(line: 4925, column: 7, scope: !17146)
!17146 = distinct !DILexicalBlock(scope: !17097, file: !3, line: 4925, column: 6)
!17147 = !DILocation(line: 4925, column: 13, scope: !17146)
!17148 = !DILocation(line: 4925, column: 23, scope: !17146)
!17149 = !DILocation(line: 4925, column: 31, scope: !17146)
!17150 = !DILocation(line: 4925, column: 52, scope: !17146)
!17151 = !DILocation(line: 4925, column: 56, scope: !17146)
!17152 = !DILocation(line: 4925, column: 70, scope: !17146)
!17153 = !DILocation(line: 4926, column: 4, scope: !17146)
!17154 = !DILocation(line: 4925, column: 6, scope: !17097)
!17155 = !DILocation(line: 4927, column: 15, scope: !17146)
!17156 = !DILocation(line: 4927, column: 13, scope: !17146)
!17157 = !DILocation(line: 4927, column: 3, scope: !17146)
!17158 = !DILocation(line: 4928, column: 7, scope: !17159)
!17159 = distinct !DILexicalBlock(scope: !17097, file: !3, line: 4928, column: 6)
!17160 = !DILocation(line: 4928, column: 13, scope: !17159)
!17161 = !DILocation(line: 4928, column: 23, scope: !17159)
!17162 = !DILocation(line: 4928, column: 31, scope: !17159)
!17163 = !DILocation(line: 4928, column: 52, scope: !17159)
!17164 = !DILocation(line: 4928, column: 56, scope: !17159)
!17165 = !DILocation(line: 4928, column: 70, scope: !17159)
!17166 = !DILocation(line: 4929, column: 4, scope: !17159)
!17167 = !DILocation(line: 4928, column: 6, scope: !17097)
!17168 = !DILocation(line: 4930, column: 15, scope: !17159)
!17169 = !DILocation(line: 4930, column: 13, scope: !17159)
!17170 = !DILocation(line: 4930, column: 3, scope: !17159)
!17171 = !DILocation(line: 4932, column: 6, scope: !17172)
!17172 = distinct !DILexicalBlock(scope: !17097, file: !3, line: 4932, column: 6)
!17173 = !DILocation(line: 4932, column: 18, scope: !17172)
!17174 = !DILocation(line: 4932, column: 16, scope: !17172)
!17175 = !DILocation(line: 4932, column: 6, scope: !17097)
!17176 = !DILocation(line: 4933, column: 12, scope: !17172)
!17177 = !DILocation(line: 4933, column: 10, scope: !17172)
!17178 = !DILocation(line: 4933, column: 3, scope: !17172)
!17179 = !DILocation(line: 4935, column: 12, scope: !17172)
!17180 = !DILocation(line: 4935, column: 10, scope: !17172)
!17181 = !DILocation(line: 4937, column: 6, scope: !17182)
!17182 = distinct !DILexicalBlock(scope: !17097, file: !3, line: 4937, column: 6)
!17183 = !DILocation(line: 4937, column: 13, scope: !17182)
!17184 = !DILocation(line: 4937, column: 6, scope: !17097)
!17185 = !DILocation(line: 4938, column: 3, scope: !17186)
!17186 = distinct !DILexicalBlock(scope: !17182, file: !3, line: 4937, column: 25)
!17187 = !DILocation(line: 4940, column: 3, scope: !17186)
!17188 = !DILocation(line: 4942, column: 9, scope: !17097)
!17189 = !DILocation(line: 4942, column: 2, scope: !17097)
!17190 = !DILocation(line: 4943, column: 1, scope: !17097)
!17191 = distinct !DISubprogram(name: "xhci_check_tier_policy", scope: !3, file: !3, line: 4818, type: !17192, scopeLine: 4821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17192 = !DISubroutineType(types: !17193)
!17193 = !{!265, !4497, !4526, !132}
!17194 = !DILocalVariable(name: "xhci", arg: 1, scope: !17191, file: !3, line: 4818, type: !4497)
!17195 = !DILocation(line: 4818, column: 52, scope: !17191)
!17196 = !DILocalVariable(name: "udev", arg: 2, scope: !17191, file: !3, line: 4819, type: !4526)
!17197 = !DILocation(line: 4819, column: 22, scope: !17191)
!17198 = !DILocalVariable(name: "state", arg: 3, scope: !17191, file: !3, line: 4820, type: !132)
!17199 = !DILocation(line: 4820, column: 24, scope: !17191)
!17200 = !DILocation(line: 4822, column: 6, scope: !17201)
!17201 = distinct !DILexicalBlock(scope: !17191, file: !3, line: 4822, column: 6)
!17202 = !DILocation(line: 4822, column: 12, scope: !17201)
!17203 = !DILocation(line: 4822, column: 19, scope: !17201)
!17204 = !DILocation(line: 4822, column: 6, scope: !17191)
!17205 = !DILocation(line: 4823, column: 39, scope: !17201)
!17206 = !DILocation(line: 4823, column: 45, scope: !17201)
!17207 = !DILocation(line: 4823, column: 10, scope: !17201)
!17208 = !DILocation(line: 4823, column: 3, scope: !17201)
!17209 = !DILocation(line: 4825, column: 3, scope: !17201)
!17210 = !DILocation(line: 4826, column: 1, scope: !17191)
!17211 = distinct !DISubprogram(name: "xhci_update_timeout_for_endpoint", scope: !3, file: !3, line: 4752, type: !17212, scopeLine: 4757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17212 = !DISubroutineType(types: !17213)
!17213 = !{!265, !4497, !4526, !7876, !132, !17214}
!17214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!17215 = !DILocalVariable(name: "xhci", arg: 1, scope: !17211, file: !3, line: 4752, type: !4497)
!17216 = !DILocation(line: 4752, column: 62, scope: !17211)
!17217 = !DILocalVariable(name: "udev", arg: 2, scope: !17211, file: !3, line: 4753, type: !4526)
!17218 = !DILocation(line: 4753, column: 22, scope: !17211)
!17219 = !DILocalVariable(name: "desc", arg: 3, scope: !17211, file: !3, line: 4754, type: !7876)
!17220 = !DILocation(line: 4754, column: 35, scope: !17211)
!17221 = !DILocalVariable(name: "state", arg: 4, scope: !17211, file: !3, line: 4755, type: !132)
!17222 = !DILocation(line: 4755, column: 24, scope: !17211)
!17223 = !DILocalVariable(name: "timeout", arg: 5, scope: !17211, file: !3, line: 4756, type: !17214)
!17224 = !DILocation(line: 4756, column: 8, scope: !17211)
!17225 = !DILocalVariable(name: "alt_timeout", scope: !17211, file: !3, line: 4758, type: !984)
!17226 = !DILocation(line: 4758, column: 6, scope: !17211)
!17227 = !DILocation(line: 4760, column: 59, scope: !17211)
!17228 = !DILocation(line: 4760, column: 65, scope: !17211)
!17229 = !DILocation(line: 4761, column: 3, scope: !17211)
!17230 = !DILocation(line: 4761, column: 9, scope: !17211)
!17231 = !DILocation(line: 4761, column: 16, scope: !17211)
!17232 = !DILocation(line: 4760, column: 16, scope: !17211)
!17233 = !DILocation(line: 4760, column: 14, scope: !17211)
!17234 = !DILocation(line: 4768, column: 6, scope: !17235)
!17235 = distinct !DILexicalBlock(scope: !17211, file: !3, line: 4768, column: 6)
!17236 = !DILocation(line: 4768, column: 18, scope: !17235)
!17237 = !DILocation(line: 4768, column: 6, scope: !17211)
!17238 = !DILocation(line: 4769, column: 14, scope: !17239)
!17239 = distinct !DILexicalBlock(scope: !17235, file: !3, line: 4768, column: 40)
!17240 = !DILocation(line: 4769, column: 4, scope: !17239)
!17241 = !DILocation(line: 4769, column: 12, scope: !17239)
!17242 = !DILocation(line: 4770, column: 3, scope: !17239)
!17243 = !DILocation(line: 4772, column: 6, scope: !17244)
!17244 = distinct !DILexicalBlock(scope: !17211, file: !3, line: 4772, column: 6)
!17245 = !DILocation(line: 4772, column: 21, scope: !17244)
!17246 = !DILocation(line: 4772, column: 20, scope: !17244)
!17247 = !DILocation(line: 4772, column: 18, scope: !17244)
!17248 = !DILocation(line: 4772, column: 6, scope: !17211)
!17249 = !DILocation(line: 4773, column: 14, scope: !17244)
!17250 = !DILocation(line: 4773, column: 4, scope: !17244)
!17251 = !DILocation(line: 4773, column: 12, scope: !17244)
!17252 = !DILocation(line: 4773, column: 3, scope: !17244)
!17253 = !DILocation(line: 4774, column: 2, scope: !17211)
!17254 = !DILocation(line: 4775, column: 1, scope: !17211)
!17255 = distinct !DISubprogram(name: "xhci_get_timeout_no_hub_lpm", scope: !3, file: !3, line: 4555, type: !17256, scopeLine: 4557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17256 = !DISubroutineType(types: !17257)
!17257 = !{!984, !4526, !132}
!17258 = !DILocalVariable(name: "udev", arg: 1, scope: !17255, file: !3, line: 4555, type: !4526)
!17259 = !DILocation(line: 4555, column: 59, scope: !17255)
!17260 = !DILocalVariable(name: "state", arg: 2, scope: !17255, file: !3, line: 4556, type: !132)
!17261 = !DILocation(line: 4556, column: 24, scope: !17255)
!17262 = !DILocalVariable(name: "sel", scope: !17255, file: !3, line: 4558, type: !241)
!17263 = !DILocation(line: 4558, column: 21, scope: !17255)
!17264 = !DILocalVariable(name: "pel", scope: !17255, file: !3, line: 4559, type: !241)
!17265 = !DILocation(line: 4559, column: 21, scope: !17255)
!17266 = !DILocalVariable(name: "max_sel_pel", scope: !17255, file: !3, line: 4560, type: !7)
!17267 = !DILocation(line: 4560, column: 15, scope: !17255)
!17268 = !DILocalVariable(name: "state_name", scope: !17255, file: !3, line: 4561, type: !363)
!17269 = !DILocation(line: 4561, column: 8, scope: !17255)
!17270 = !DILocation(line: 4563, column: 10, scope: !17255)
!17271 = !DILocation(line: 4563, column: 2, scope: !17255)
!17272 = !DILocation(line: 4566, column: 9, scope: !17273)
!17273 = distinct !DILexicalBlock(scope: !17255, file: !3, line: 4563, column: 17)
!17274 = !DILocation(line: 4566, column: 7, scope: !17273)
!17275 = !DILocation(line: 4567, column: 9, scope: !17273)
!17276 = !DILocation(line: 4567, column: 7, scope: !17273)
!17277 = !DILocation(line: 4568, column: 15, scope: !17273)
!17278 = !DILocation(line: 4569, column: 14, scope: !17273)
!17279 = !DILocation(line: 4570, column: 3, scope: !17273)
!17280 = !DILocation(line: 4572, column: 9, scope: !17273)
!17281 = !DILocation(line: 4572, column: 7, scope: !17273)
!17282 = !DILocation(line: 4573, column: 9, scope: !17273)
!17283 = !DILocation(line: 4573, column: 7, scope: !17273)
!17284 = !DILocation(line: 4574, column: 15, scope: !17273)
!17285 = !DILocation(line: 4575, column: 14, scope: !17273)
!17286 = !DILocation(line: 4576, column: 3, scope: !17273)
!17287 = !DILocation(line: 4578, column: 3, scope: !17273)
!17288 = !DILocation(line: 4580, column: 3, scope: !17273)
!17289 = !DILocation(line: 4583, column: 6, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17255, file: !3, line: 4583, column: 6)
!17291 = !DILocation(line: 4583, column: 13, scope: !17290)
!17292 = !DILocation(line: 4583, column: 10, scope: !17290)
!17293 = !DILocation(line: 4583, column: 25, scope: !17290)
!17294 = !DILocation(line: 4583, column: 28, scope: !17290)
!17295 = !DILocation(line: 4583, column: 35, scope: !17290)
!17296 = !DILocation(line: 4583, column: 32, scope: !17290)
!17297 = !DILocation(line: 4583, column: 6, scope: !17255)
!17298 = !DILocation(line: 4584, column: 3, scope: !17290)
!17299 = !DILocation(line: 4586, column: 6, scope: !17300)
!17300 = distinct !DILexicalBlock(scope: !17255, file: !3, line: 4586, column: 6)
!17301 = !DILocation(line: 4586, column: 12, scope: !17300)
!17302 = !DILocation(line: 4586, column: 10, scope: !17300)
!17303 = !DILocation(line: 4586, column: 6, scope: !17255)
!17304 = !DILocation(line: 4587, column: 3, scope: !17300)
!17305 = !DILocation(line: 4594, column: 2, scope: !17255)
!17306 = !DILocation(line: 4595, column: 1, scope: !17255)
!17307 = distinct !DISubprogram(name: "xhci_update_timeout_for_interface", scope: !3, file: !3, line: 4777, type: !17308, scopeLine: 4782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17308 = !DISubroutineType(types: !17309)
!17309 = !{!265, !4497, !4526, !4707, !132, !17214}
!17310 = !DILocalVariable(name: "xhci", arg: 1, scope: !17307, file: !3, line: 4777, type: !4497)
!17311 = !DILocation(line: 4777, column: 63, scope: !17307)
!17312 = !DILocalVariable(name: "udev", arg: 2, scope: !17307, file: !3, line: 4778, type: !4526)
!17313 = !DILocation(line: 4778, column: 22, scope: !17307)
!17314 = !DILocalVariable(name: "alt", arg: 3, scope: !17307, file: !3, line: 4779, type: !4707)
!17315 = !DILocation(line: 4779, column: 30, scope: !17307)
!17316 = !DILocalVariable(name: "state", arg: 4, scope: !17307, file: !3, line: 4780, type: !132)
!17317 = !DILocation(line: 4780, column: 24, scope: !17307)
!17318 = !DILocalVariable(name: "timeout", arg: 5, scope: !17307, file: !3, line: 4781, type: !17214)
!17319 = !DILocation(line: 4781, column: 8, scope: !17307)
!17320 = !DILocalVariable(name: "j", scope: !17307, file: !3, line: 4783, type: !265)
!17321 = !DILocation(line: 4783, column: 6, scope: !17307)
!17322 = !DILocation(line: 4785, column: 9, scope: !17323)
!17323 = distinct !DILexicalBlock(scope: !17307, file: !3, line: 4785, column: 2)
!17324 = !DILocation(line: 4785, column: 7, scope: !17323)
!17325 = !DILocation(line: 4785, column: 14, scope: !17326)
!17326 = distinct !DILexicalBlock(scope: !17323, file: !3, line: 4785, column: 2)
!17327 = !DILocation(line: 4785, column: 18, scope: !17326)
!17328 = !DILocation(line: 4785, column: 23, scope: !17326)
!17329 = !DILocation(line: 4785, column: 28, scope: !17326)
!17330 = !DILocation(line: 4785, column: 16, scope: !17326)
!17331 = !DILocation(line: 4785, column: 2, scope: !17323)
!17332 = !DILocation(line: 4786, column: 40, scope: !17333)
!17333 = distinct !DILexicalBlock(scope: !17334, file: !3, line: 4786, column: 7)
!17334 = distinct !DILexicalBlock(scope: !17326, file: !3, line: 4785, column: 48)
!17335 = !DILocation(line: 4786, column: 46, scope: !17333)
!17336 = !DILocation(line: 4787, column: 7, scope: !17333)
!17337 = !DILocation(line: 4787, column: 12, scope: !17333)
!17338 = !DILocation(line: 4787, column: 21, scope: !17333)
!17339 = !DILocation(line: 4787, column: 24, scope: !17333)
!17340 = !DILocation(line: 4787, column: 30, scope: !17333)
!17341 = !DILocation(line: 4787, column: 37, scope: !17333)
!17342 = !DILocation(line: 4786, column: 7, scope: !17333)
!17343 = !DILocation(line: 4786, column: 7, scope: !17334)
!17344 = !DILocation(line: 4788, column: 4, scope: !17333)
!17345 = !DILocation(line: 4789, column: 3, scope: !17334)
!17346 = !DILocation(line: 4785, column: 44, scope: !17326)
!17347 = !DILocation(line: 4785, column: 2, scope: !17326)
!17348 = distinct !{!17348, !17331, !17349}
!17349 = !DILocation(line: 4790, column: 2, scope: !17323)
!17350 = !DILocation(line: 4791, column: 2, scope: !17307)
!17351 = !DILocation(line: 4792, column: 1, scope: !17307)
!17352 = distinct !DISubprogram(name: "xhci_check_intel_tier_policy", scope: !3, file: !3, line: 4794, type: !17353, scopeLine: 4796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17353 = !DISubroutineType(types: !17354)
!17354 = !{!265, !4526, !132}
!17355 = !DILocalVariable(name: "udev", arg: 1, scope: !17352, file: !3, line: 4794, type: !4526)
!17356 = !DILocation(line: 4794, column: 60, scope: !17352)
!17357 = !DILocalVariable(name: "state", arg: 2, scope: !17352, file: !3, line: 4795, type: !132)
!17358 = !DILocation(line: 4795, column: 24, scope: !17352)
!17359 = !DILocalVariable(name: "parent", scope: !17352, file: !3, line: 4797, type: !4526)
!17360 = !DILocation(line: 4797, column: 21, scope: !17352)
!17361 = !DILocalVariable(name: "num_hubs", scope: !17352, file: !3, line: 4798, type: !7)
!17362 = !DILocation(line: 4798, column: 15, scope: !17352)
!17363 = !DILocation(line: 4800, column: 6, scope: !17364)
!17364 = distinct !DILexicalBlock(scope: !17352, file: !3, line: 4800, column: 6)
!17365 = !DILocation(line: 4800, column: 12, scope: !17364)
!17366 = !DILocation(line: 4800, column: 6, scope: !17352)
!17367 = !DILocation(line: 4801, column: 3, scope: !17364)
!17368 = !DILocation(line: 4804, column: 16, scope: !17369)
!17369 = distinct !DILexicalBlock(scope: !17352, file: !3, line: 4804, column: 2)
!17370 = !DILocation(line: 4804, column: 22, scope: !17369)
!17371 = !DILocation(line: 4804, column: 14, scope: !17369)
!17372 = !DILocation(line: 4804, column: 39, scope: !17369)
!17373 = !DILocation(line: 4804, column: 7, scope: !17369)
!17374 = !DILocation(line: 4804, column: 44, scope: !17375)
!17375 = distinct !DILexicalBlock(scope: !17369, file: !3, line: 4804, column: 2)
!17376 = !DILocation(line: 4804, column: 52, scope: !17375)
!17377 = !DILocation(line: 4804, column: 2, scope: !17369)
!17378 = !DILocation(line: 4806, column: 11, scope: !17375)
!17379 = !DILocation(line: 4806, column: 3, scope: !17375)
!17380 = !DILocation(line: 4805, column: 13, scope: !17375)
!17381 = !DILocation(line: 4805, column: 21, scope: !17375)
!17382 = !DILocation(line: 4805, column: 11, scope: !17375)
!17383 = !DILocation(line: 4804, column: 2, scope: !17375)
!17384 = distinct !{!17384, !17377, !17385}
!17385 = !DILocation(line: 4806, column: 11, scope: !17369)
!17386 = !DILocation(line: 4808, column: 6, scope: !17387)
!17387 = distinct !DILexicalBlock(scope: !17352, file: !3, line: 4808, column: 6)
!17388 = !DILocation(line: 4808, column: 15, scope: !17387)
!17389 = !DILocation(line: 4808, column: 6, scope: !17352)
!17390 = !DILocation(line: 4809, column: 3, scope: !17387)
!17391 = !DILocation(line: 4815, column: 2, scope: !17352)
!17392 = !DILocation(line: 4816, column: 1, scope: !17352)
!17393 = distinct !DISubprogram(name: "xhci_call_host_update_timeout_for_endpoint", scope: !3, file: !3, line: 4738, type: !17394, scopeLine: 4743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17394 = !DISubroutineType(types: !17395)
!17395 = !{!984, !4497, !4526, !7876, !132, !17214}
!17396 = !DILocalVariable(name: "xhci", arg: 1, scope: !17393, file: !3, line: 4738, type: !4497)
!17397 = !DILocation(line: 4738, column: 72, scope: !17393)
!17398 = !DILocalVariable(name: "udev", arg: 2, scope: !17393, file: !3, line: 4739, type: !4526)
!17399 = !DILocation(line: 4739, column: 22, scope: !17393)
!17400 = !DILocalVariable(name: "desc", arg: 3, scope: !17393, file: !3, line: 4740, type: !7876)
!17401 = !DILocation(line: 4740, column: 35, scope: !17393)
!17402 = !DILocalVariable(name: "state", arg: 4, scope: !17393, file: !3, line: 4741, type: !132)
!17403 = !DILocation(line: 4741, column: 24, scope: !17393)
!17404 = !DILocalVariable(name: "timeout", arg: 5, scope: !17393, file: !3, line: 4742, type: !17214)
!17405 = !DILocation(line: 4742, column: 8, scope: !17393)
!17406 = !DILocation(line: 4744, column: 6, scope: !17407)
!17407 = distinct !DILexicalBlock(scope: !17393, file: !3, line: 4744, column: 6)
!17408 = !DILocation(line: 4744, column: 12, scope: !17407)
!17409 = !DILocation(line: 4744, column: 6, scope: !17393)
!17410 = !DILocation(line: 4745, column: 36, scope: !17407)
!17411 = !DILocation(line: 4745, column: 42, scope: !17407)
!17412 = !DILocation(line: 4745, column: 48, scope: !17407)
!17413 = !DILocation(line: 4745, column: 10, scope: !17407)
!17414 = !DILocation(line: 4745, column: 3, scope: !17407)
!17415 = !DILocation(line: 4746, column: 11, scope: !17416)
!17416 = distinct !DILexicalBlock(scope: !17407, file: !3, line: 4746, column: 11)
!17417 = !DILocation(line: 4746, column: 17, scope: !17416)
!17418 = !DILocation(line: 4746, column: 11, scope: !17407)
!17419 = !DILocation(line: 4747, column: 36, scope: !17416)
!17420 = !DILocation(line: 4747, column: 42, scope: !17416)
!17421 = !DILocation(line: 4747, column: 48, scope: !17416)
!17422 = !DILocation(line: 4747, column: 10, scope: !17416)
!17423 = !DILocation(line: 4747, column: 3, scope: !17416)
!17424 = !DILocation(line: 4749, column: 2, scope: !17393)
!17425 = !DILocation(line: 4750, column: 1, scope: !17393)
!17426 = distinct !DISubprogram(name: "xhci_calculate_u1_timeout", scope: !3, file: !3, line: 4643, type: !17427, scopeLine: 4646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17427 = !DISubroutineType(types: !17428)
!17428 = !{!984, !4497, !4526, !7876}
!17429 = !DILocalVariable(name: "xhci", arg: 1, scope: !17426, file: !3, line: 4643, type: !4497)
!17430 = !DILocation(line: 4643, column: 55, scope: !17426)
!17431 = !DILocalVariable(name: "udev", arg: 2, scope: !17426, file: !3, line: 4644, type: !4526)
!17432 = !DILocation(line: 4644, column: 22, scope: !17426)
!17433 = !DILocalVariable(name: "desc", arg: 3, scope: !17426, file: !3, line: 4645, type: !7876)
!17434 = !DILocation(line: 4645, column: 35, scope: !17426)
!17435 = !DILocalVariable(name: "timeout_ns", scope: !17426, file: !3, line: 4647, type: !241)
!17436 = !DILocation(line: 4647, column: 21, scope: !17426)
!17437 = !DILocation(line: 4650, column: 28, scope: !17438)
!17438 = distinct !DILexicalBlock(scope: !17426, file: !3, line: 4650, column: 6)
!17439 = !DILocation(line: 4650, column: 6, scope: !17438)
!17440 = !DILocation(line: 4650, column: 34, scope: !17438)
!17441 = !DILocation(line: 4650, column: 60, scope: !17438)
!17442 = !DILocation(line: 4650, column: 37, scope: !17438)
!17443 = !DILocation(line: 4650, column: 6, scope: !17426)
!17444 = !DILocation(line: 4651, column: 35, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17446, file: !3, line: 4651, column: 7)
!17446 = distinct !DILexicalBlock(scope: !17438, file: !3, line: 4650, column: 67)
!17447 = !DILocation(line: 4651, column: 7, scope: !17445)
!17448 = !DILocation(line: 4651, column: 44, scope: !17445)
!17449 = !DILocation(line: 4651, column: 50, scope: !17445)
!17450 = !DILocation(line: 4651, column: 60, scope: !17445)
!17451 = !DILocation(line: 4651, column: 41, scope: !17445)
!17452 = !DILocation(line: 4651, column: 7, scope: !17446)
!17453 = !DILocation(line: 4653, column: 4, scope: !17454)
!17454 = distinct !DILexicalBlock(scope: !17445, file: !3, line: 4651, column: 65)
!17455 = !DILocation(line: 4655, column: 2, scope: !17446)
!17456 = !DILocation(line: 4657, column: 6, scope: !17457)
!17457 = distinct !DILexicalBlock(scope: !17426, file: !3, line: 4657, column: 6)
!17458 = !DILocation(line: 4657, column: 12, scope: !17457)
!17459 = !DILocation(line: 4657, column: 19, scope: !17457)
!17460 = !DILocation(line: 4657, column: 6, scope: !17426)
!17461 = !DILocation(line: 4658, column: 48, scope: !17457)
!17462 = !DILocation(line: 4658, column: 54, scope: !17457)
!17463 = !DILocation(line: 4658, column: 16, scope: !17457)
!17464 = !DILocation(line: 4658, column: 14, scope: !17457)
!17465 = !DILocation(line: 4658, column: 3, scope: !17457)
!17466 = !DILocation(line: 4660, column: 16, scope: !17457)
!17467 = !DILocation(line: 4660, column: 22, scope: !17457)
!17468 = !DILocation(line: 4660, column: 32, scope: !17457)
!17469 = !DILocation(line: 4660, column: 14, scope: !17457)
!17470 = !DILocation(line: 4665, column: 6, scope: !17471)
!17471 = distinct !DILexicalBlock(scope: !17426, file: !3, line: 4665, column: 6)
!17472 = !DILocation(line: 4665, column: 17, scope: !17471)
!17473 = !DILocation(line: 4665, column: 6, scope: !17426)
!17474 = !DILocation(line: 4666, column: 14, scope: !17471)
!17475 = !DILocation(line: 4666, column: 3, scope: !17471)
!17476 = !DILocalVariable(name: "_tmp", scope: !17477, file: !3, line: 4668, type: !241)
!17477 = distinct !DILexicalBlock(scope: !17471, file: !3, line: 4668, column: 16)
!17478 = !DILocation(line: 4668, column: 16, scope: !17477)
!17479 = !DILocalVariable(name: "__base", scope: !17480, file: !3, line: 4668, type: !638)
!17480 = distinct !DILexicalBlock(scope: !17477, file: !3, line: 4668, column: 16)
!17481 = !DILocation(line: 4668, column: 16, scope: !17480)
!17482 = !DILocalVariable(name: "__rem", scope: !17480, file: !3, line: 4668, type: !638)
!17483 = !DILocation(line: 4668, column: 14, scope: !17471)
!17484 = !DILocation(line: 4673, column: 6, scope: !17485)
!17485 = distinct !DILexicalBlock(scope: !17426, file: !3, line: 4673, column: 6)
!17486 = !DILocation(line: 4673, column: 17, scope: !17485)
!17487 = !DILocation(line: 4673, column: 6, scope: !17426)
!17488 = !DILocation(line: 4674, column: 10, scope: !17485)
!17489 = !DILocation(line: 4674, column: 3, scope: !17485)
!17490 = !DILocation(line: 4677, column: 37, scope: !17426)
!17491 = !DILocation(line: 4677, column: 9, scope: !17426)
!17492 = !DILocation(line: 4677, column: 2, scope: !17426)
!17493 = !DILocation(line: 4678, column: 1, scope: !17426)
!17494 = distinct !DISubprogram(name: "xhci_calculate_u2_timeout", scope: !3, file: !3, line: 4707, type: !17427, scopeLine: 4710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17495 = !DILocalVariable(name: "xhci", arg: 1, scope: !17494, file: !3, line: 4707, type: !4497)
!17496 = !DILocation(line: 4707, column: 55, scope: !17494)
!17497 = !DILocalVariable(name: "udev", arg: 2, scope: !17494, file: !3, line: 4708, type: !4526)
!17498 = !DILocation(line: 4708, column: 22, scope: !17494)
!17499 = !DILocalVariable(name: "desc", arg: 3, scope: !17494, file: !3, line: 4709, type: !7876)
!17500 = !DILocation(line: 4709, column: 35, scope: !17494)
!17501 = !DILocalVariable(name: "timeout_ns", scope: !17494, file: !3, line: 4711, type: !241)
!17502 = !DILocation(line: 4711, column: 21, scope: !17494)
!17503 = !DILocation(line: 4714, column: 28, scope: !17504)
!17504 = distinct !DILexicalBlock(scope: !17494, file: !3, line: 4714, column: 6)
!17505 = !DILocation(line: 4714, column: 6, scope: !17504)
!17506 = !DILocation(line: 4714, column: 34, scope: !17504)
!17507 = !DILocation(line: 4714, column: 60, scope: !17504)
!17508 = !DILocation(line: 4714, column: 37, scope: !17504)
!17509 = !DILocation(line: 4714, column: 6, scope: !17494)
!17510 = !DILocation(line: 4715, column: 35, scope: !17511)
!17511 = distinct !DILexicalBlock(scope: !17512, file: !3, line: 4715, column: 7)
!17512 = distinct !DILexicalBlock(scope: !17504, file: !3, line: 4714, column: 67)
!17513 = !DILocation(line: 4715, column: 7, scope: !17511)
!17514 = !DILocation(line: 4715, column: 44, scope: !17511)
!17515 = !DILocation(line: 4715, column: 50, scope: !17511)
!17516 = !DILocation(line: 4715, column: 60, scope: !17511)
!17517 = !DILocation(line: 4715, column: 41, scope: !17511)
!17518 = !DILocation(line: 4715, column: 7, scope: !17512)
!17519 = !DILocation(line: 4717, column: 4, scope: !17520)
!17520 = distinct !DILexicalBlock(scope: !17511, file: !3, line: 4715, column: 65)
!17521 = !DILocation(line: 4719, column: 2, scope: !17512)
!17522 = !DILocation(line: 4721, column: 6, scope: !17523)
!17523 = distinct !DILexicalBlock(scope: !17494, file: !3, line: 4721, column: 6)
!17524 = !DILocation(line: 4721, column: 12, scope: !17523)
!17525 = !DILocation(line: 4721, column: 19, scope: !17523)
!17526 = !DILocation(line: 4721, column: 6, scope: !17494)
!17527 = !DILocation(line: 4722, column: 48, scope: !17523)
!17528 = !DILocation(line: 4722, column: 54, scope: !17523)
!17529 = !DILocation(line: 4722, column: 16, scope: !17523)
!17530 = !DILocation(line: 4722, column: 14, scope: !17523)
!17531 = !DILocation(line: 4722, column: 3, scope: !17523)
!17532 = !DILocation(line: 4724, column: 16, scope: !17523)
!17533 = !DILocation(line: 4724, column: 22, scope: !17523)
!17534 = !DILocation(line: 4724, column: 32, scope: !17523)
!17535 = !DILocation(line: 4724, column: 14, scope: !17523)
!17536 = !DILocalVariable(name: "_tmp", scope: !17537, file: !3, line: 4727, type: !241)
!17537 = distinct !DILexicalBlock(scope: !17494, file: !3, line: 4727, column: 15)
!17538 = !DILocation(line: 4727, column: 15, scope: !17537)
!17539 = !DILocalVariable(name: "__base", scope: !17540, file: !3, line: 4727, type: !638)
!17540 = distinct !DILexicalBlock(scope: !17537, file: !3, line: 4727, column: 15)
!17541 = !DILocation(line: 4727, column: 15, scope: !17540)
!17542 = !DILocalVariable(name: "__rem", scope: !17540, file: !3, line: 4727, type: !638)
!17543 = !DILocation(line: 4727, column: 13, scope: !17494)
!17544 = !DILocation(line: 4731, column: 6, scope: !17545)
!17545 = distinct !DILexicalBlock(scope: !17494, file: !3, line: 4731, column: 6)
!17546 = !DILocation(line: 4731, column: 17, scope: !17545)
!17547 = !DILocation(line: 4731, column: 6, scope: !17494)
!17548 = !DILocation(line: 4732, column: 10, scope: !17545)
!17549 = !DILocation(line: 4732, column: 3, scope: !17545)
!17550 = !DILocation(line: 4735, column: 37, scope: !17494)
!17551 = !DILocation(line: 4735, column: 9, scope: !17494)
!17552 = !DILocation(line: 4735, column: 2, scope: !17494)
!17553 = !DILocation(line: 4736, column: 1, scope: !17494)
!17554 = distinct !DISubprogram(name: "usb_endpoint_xfer_int", scope: !94, file: !94, line: 542, type: !7901, scopeLine: 544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17555 = !DILocalVariable(name: "epd", arg: 1, scope: !17554, file: !94, line: 543, type: !7903)
!17556 = !DILocation(line: 543, column: 43, scope: !17554)
!17557 = !DILocation(line: 545, column: 11, scope: !17554)
!17558 = !DILocation(line: 545, column: 16, scope: !17554)
!17559 = !DILocation(line: 545, column: 29, scope: !17554)
!17560 = !DILocation(line: 545, column: 59, scope: !17554)
!17561 = !DILocation(line: 545, column: 2, scope: !17554)
!17562 = distinct !DISubprogram(name: "xhci_service_interval_to_ns", scope: !3, file: !3, line: 4549, type: !17563, scopeLine: 4551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17563 = !DISubroutineType(types: !17564)
!17564 = !{!241, !7876}
!17565 = !DILocalVariable(name: "desc", arg: 1, scope: !17562, file: !3, line: 4550, type: !7876)
!17566 = !DILocation(line: 4550, column: 35, scope: !17562)
!17567 = !DILocation(line: 4552, column: 19, scope: !17562)
!17568 = !DILocation(line: 4552, column: 25, scope: !17562)
!17569 = !DILocation(line: 4552, column: 35, scope: !17562)
!17570 = !DILocation(line: 4552, column: 15, scope: !17562)
!17571 = !DILocation(line: 4552, column: 41, scope: !17562)
!17572 = !DILocation(line: 4552, column: 47, scope: !17562)
!17573 = !DILocation(line: 4552, column: 2, scope: !17562)
!17574 = distinct !DISubprogram(name: "xhci_calculate_intel_u1_timeout", scope: !3, file: !3, line: 4605, type: !17575, scopeLine: 4608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17575 = !DISubroutineType(types: !17576)
!17576 = !{!241, !4526, !7876}
!17577 = !DILocalVariable(name: "udev", arg: 1, scope: !17574, file: !3, line: 4606, type: !4526)
!17578 = !DILocation(line: 4606, column: 22, scope: !17574)
!17579 = !DILocalVariable(name: "desc", arg: 2, scope: !17574, file: !3, line: 4607, type: !7876)
!17580 = !DILocation(line: 4607, column: 35, scope: !17574)
!17581 = !DILocalVariable(name: "timeout_ns", scope: !17574, file: !3, line: 4609, type: !241)
!17582 = !DILocation(line: 4609, column: 21, scope: !17574)
!17583 = !DILocalVariable(name: "ep_type", scope: !17574, file: !3, line: 4610, type: !265)
!17584 = !DILocation(line: 4610, column: 6, scope: !17574)
!17585 = !DILocalVariable(name: "intr_type", scope: !17574, file: !3, line: 4611, type: !265)
!17586 = !DILocation(line: 4611, column: 6, scope: !17574)
!17587 = !DILocation(line: 4613, column: 30, scope: !17574)
!17588 = !DILocation(line: 4613, column: 12, scope: !17574)
!17589 = !DILocation(line: 4613, column: 10, scope: !17574)
!17590 = !DILocation(line: 4614, column: 10, scope: !17574)
!17591 = !DILocation(line: 4614, column: 2, scope: !17574)
!17592 = !DILocation(line: 4616, column: 16, scope: !17593)
!17593 = distinct !DILexicalBlock(scope: !17574, file: !3, line: 4614, column: 19)
!17594 = !DILocation(line: 4616, column: 22, scope: !17593)
!17595 = !DILocation(line: 4616, column: 32, scope: !17593)
!17596 = !DILocation(line: 4616, column: 36, scope: !17593)
!17597 = !DILocation(line: 4616, column: 14, scope: !17593)
!17598 = !DILocation(line: 4617, column: 3, scope: !17593)
!17599 = !DILocation(line: 4619, column: 16, scope: !17593)
!17600 = !DILocation(line: 4619, column: 22, scope: !17593)
!17601 = !DILocation(line: 4619, column: 32, scope: !17593)
!17602 = !DILocation(line: 4619, column: 36, scope: !17593)
!17603 = !DILocation(line: 4619, column: 14, scope: !17593)
!17604 = !DILocation(line: 4620, column: 3, scope: !17593)
!17605 = !DILocation(line: 4622, column: 43, scope: !17593)
!17606 = !DILocation(line: 4622, column: 15, scope: !17593)
!17607 = !DILocation(line: 4622, column: 13, scope: !17593)
!17608 = !DILocation(line: 4623, column: 7, scope: !17609)
!17609 = distinct !DILexicalBlock(scope: !17593, file: !3, line: 4623, column: 7)
!17610 = !DILocation(line: 4623, column: 17, scope: !17609)
!17611 = !DILocation(line: 4623, column: 7, scope: !17593)
!17612 = !DILocation(line: 4624, column: 17, scope: !17613)
!17613 = distinct !DILexicalBlock(scope: !17609, file: !3, line: 4623, column: 52)
!17614 = !DILocation(line: 4624, column: 23, scope: !17613)
!17615 = !DILocation(line: 4624, column: 33, scope: !17613)
!17616 = !DILocation(line: 4624, column: 37, scope: !17613)
!17617 = !DILocation(line: 4624, column: 15, scope: !17613)
!17618 = !DILocation(line: 4625, column: 4, scope: !17613)
!17619 = !DILocation(line: 4623, column: 20, scope: !17609)
!17620 = !DILocation(line: 4630, column: 44, scope: !17593)
!17621 = !DILocation(line: 4630, column: 16, scope: !17593)
!17622 = !DILocation(line: 4630, column: 14, scope: !17593)
!17623 = !DILocalVariable(name: "_tmp", scope: !17624, file: !3, line: 4631, type: !241)
!17624 = distinct !DILexicalBlock(scope: !17593, file: !3, line: 4631, column: 16)
!17625 = !DILocation(line: 4631, column: 16, scope: !17624)
!17626 = !DILocalVariable(name: "__base", scope: !17627, file: !3, line: 4631, type: !638)
!17627 = distinct !DILexicalBlock(scope: !17624, file: !3, line: 4631, column: 16)
!17628 = !DILocation(line: 4631, column: 16, scope: !17627)
!17629 = !DILocalVariable(name: "__rem", scope: !17627, file: !3, line: 4631, type: !638)
!17630 = !DILocation(line: 4631, column: 14, scope: !17593)
!17631 = !DILocation(line: 4632, column: 7, scope: !17632)
!17632 = distinct !DILexicalBlock(scope: !17593, file: !3, line: 4632, column: 7)
!17633 = !DILocation(line: 4632, column: 20, scope: !17632)
!17634 = !DILocation(line: 4632, column: 26, scope: !17632)
!17635 = !DILocation(line: 4632, column: 36, scope: !17632)
!17636 = !DILocation(line: 4632, column: 40, scope: !17632)
!17637 = !DILocation(line: 4632, column: 18, scope: !17632)
!17638 = !DILocation(line: 4632, column: 7, scope: !17593)
!17639 = !DILocation(line: 4633, column: 17, scope: !17632)
!17640 = !DILocation(line: 4633, column: 23, scope: !17632)
!17641 = !DILocation(line: 4633, column: 33, scope: !17632)
!17642 = !DILocation(line: 4633, column: 37, scope: !17632)
!17643 = !DILocation(line: 4633, column: 15, scope: !17632)
!17644 = !DILocation(line: 4633, column: 4, scope: !17632)
!17645 = !DILocation(line: 4634, column: 3, scope: !17593)
!17646 = !DILocation(line: 4636, column: 3, scope: !17593)
!17647 = !DILocation(line: 4639, column: 9, scope: !17574)
!17648 = !DILocation(line: 4639, column: 2, scope: !17574)
!17649 = !DILocation(line: 4640, column: 1, scope: !17574)
!17650 = distinct !DISubprogram(name: "usb_endpoint_interrupt_type", scope: !94, file: !94, line: 666, type: !7901, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17651 = !DILocalVariable(name: "epd", arg: 1, scope: !17650, file: !94, line: 667, type: !7903)
!17652 = !DILocation(line: 667, column: 41, scope: !17650)
!17653 = !DILocation(line: 669, column: 9, scope: !17650)
!17654 = !DILocation(line: 669, column: 14, scope: !17650)
!17655 = !DILocation(line: 669, column: 27, scope: !17650)
!17656 = !DILocation(line: 669, column: 2, scope: !17650)
!17657 = distinct !DISubprogram(name: "xhci_calculate_intel_u2_timeout", scope: !3, file: !3, line: 4686, type: !17575, scopeLine: 4689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17658 = !DILocalVariable(name: "udev", arg: 1, scope: !17657, file: !3, line: 4687, type: !4526)
!17659 = !DILocation(line: 4687, column: 22, scope: !17657)
!17660 = !DILocalVariable(name: "desc", arg: 2, scope: !17657, file: !3, line: 4688, type: !7876)
!17661 = !DILocation(line: 4688, column: 35, scope: !17657)
!17662 = !DILocalVariable(name: "timeout_ns", scope: !17657, file: !3, line: 4690, type: !241)
!17663 = !DILocation(line: 4690, column: 21, scope: !17657)
!17664 = !DILocalVariable(name: "u2_del_ns", scope: !17657, file: !3, line: 4691, type: !241)
!17665 = !DILocation(line: 4691, column: 21, scope: !17657)
!17666 = !DILocation(line: 4693, column: 13, scope: !17657)
!17667 = !DILocation(line: 4695, column: 29, scope: !17668)
!17668 = distinct !DILexicalBlock(scope: !17657, file: !3, line: 4695, column: 6)
!17669 = !DILocation(line: 4695, column: 7, scope: !17668)
!17670 = !DILocation(line: 4695, column: 35, scope: !17668)
!17671 = !DILocation(line: 4695, column: 61, scope: !17668)
!17672 = !DILocation(line: 4695, column: 38, scope: !17668)
!17673 = !DILocation(line: 4695, column: 68, scope: !17668)
!17674 = !DILocation(line: 4696, column: 33, scope: !17668)
!17675 = !DILocation(line: 4696, column: 5, scope: !17668)
!17676 = !DILocation(line: 4696, column: 41, scope: !17668)
!17677 = !DILocation(line: 4696, column: 39, scope: !17668)
!17678 = !DILocation(line: 4695, column: 6, scope: !17657)
!17679 = !DILocation(line: 4697, column: 44, scope: !17668)
!17680 = !DILocation(line: 4697, column: 16, scope: !17668)
!17681 = !DILocation(line: 4697, column: 14, scope: !17668)
!17682 = !DILocation(line: 4697, column: 3, scope: !17668)
!17683 = !DILocation(line: 4699, column: 14, scope: !17657)
!17684 = !DILocation(line: 4699, column: 60, scope: !17657)
!17685 = !DILocation(line: 4699, column: 12, scope: !17657)
!17686 = !DILocation(line: 4700, column: 6, scope: !17687)
!17687 = distinct !DILexicalBlock(scope: !17657, file: !3, line: 4700, column: 6)
!17688 = !DILocation(line: 4700, column: 18, scope: !17687)
!17689 = !DILocation(line: 4700, column: 16, scope: !17687)
!17690 = !DILocation(line: 4700, column: 6, scope: !17657)
!17691 = !DILocation(line: 4701, column: 16, scope: !17687)
!17692 = !DILocation(line: 4701, column: 14, scope: !17687)
!17693 = !DILocation(line: 4701, column: 3, scope: !17687)
!17694 = !DILocation(line: 4703, column: 9, scope: !17657)
!17695 = !DILocation(line: 4703, column: 2, scope: !17657)
!17696 = distinct !DISubprogram(name: "xhci_debugfs_create_root", scope: !5655, file: !5655, line: 125, type: !2610, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !336)
!17697 = !DILocation(line: 125, column: 60, scope: !17696)
