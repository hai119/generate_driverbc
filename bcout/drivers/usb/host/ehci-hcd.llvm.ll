; ModuleID = '../bcout/drivers/usb/host/ehci-hcd.llvm.bc'
source_filename = "drivers/usb/host/ehci-hcd.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_ehci_hcd_init6:\09\09\09"
module asm ".long\09ehci_hcd_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.52, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.55 }
%union.anon.52 = type { %struct.anon.53 }
%struct.anon.53 = type { i64, i64 }
%union.anon.55 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.51, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.page = type { i64, %union.anon.3, %union.anon.58, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.60, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.61, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.62, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.65, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.68, %struct.list_head, %struct.list_head, %union.anon.69 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.66 }
%union.anon.66 = type { %struct.anon.67 }
%struct.anon.67 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.vfsmount = type opaque
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%union.anon.68 = type { %struct.list_head }
%union.anon.69 = type { %struct.hlist_node }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.59, i32 }
%union.anon.59 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.70, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.70 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.poll_table_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.36, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.36 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.kmem_cache = type opaque
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.71, %union.anon.72, %union.anon.73, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.76, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.71 = type { %struct.hlist_node }
%union.anon.72 = type { %struct.rb_node }
%union.anon.73 = type { %struct.anon.75 }
%struct.anon.75 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.76 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.77, void (i8*)*, i8* }
%union.anon.77 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.78, i16, i16 }
%struct.llist_node = type { %struct.llist_node* }
%union.anon.78 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.37, %union.anon.38, i32 }
%union.anon.37 = type { %struct.list_head }
%union.anon.38 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.60 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%union.anon.61 = type { %struct.callback_head }
%union.anon.62 = type { %struct.file_operations* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.iov_iter = type opaque
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.63 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.63 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.65 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.swap_info_struct = type { i64, i16, %struct.plist_node, i8, i32, i8*, %struct.swap_cluster_info*, %struct.swap_cluster_list, i32, i32, i32, i32, i32, i32, i32*, %struct.percpu_cluster*, %struct.rb_root, %struct.block_device*, %struct.file*, i32, %struct.spinlock, %struct.spinlock, %struct.work_struct, %struct.swap_cluster_list, [0 x %struct.plist_node] }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.swap_cluster_info = type { %struct.spinlock, i32 }
%struct.percpu_cluster = type { %struct.swap_cluster_info, i32 }
%struct.swap_cluster_list = type { %struct.swap_cluster_info, %struct.swap_cluster_info }
%union.anon.58 = type { %struct.atomic_t }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.31 }
%union.anon.31 = type { %struct.anon.32, [48 x i8] }
%struct.anon.32 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.33, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.33 = type { %struct.anon.34 }
%struct.anon.34 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.mmu_notifier_subscriptions = type opaque
%struct.atomic_t = type { i32 }
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.35 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.35 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type { i64 }
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.percpu_counter = type { i64 }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.43 }
%struct.anon.43 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.rseq = type { i32, i32, %union.anon.50, i32, [12 x i8] }
%union.anon.50 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.51 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.ehci_hcd = type { i32, i32, [12 x i64], %struct.hrtimer, i32, i32, i32, %struct.ehci_caps*, %struct.ehci_regs*, %struct.ehci_dbg_port*, i32, %struct.spinlock, i32, i8, %struct.ehci_qh*, %struct.ehci_qh*, %struct.ehci_qh*, %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, i32*, i64, %struct.list_head, i32, %union.ehci_shadow*, %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, i32, i32, i32, %struct.list_head, %struct.ehci_itd*, %struct.list_head, %struct.ehci_sitd*, [15 x i64], i64, i64, i64, i64, i64, i64, %struct.dma_pool*, %struct.dma_pool*, %struct.dma_pool*, %struct.dma_pool*, i32, i64, i64, i32, i16, i32*, i8, i8, [64 x i8], [64 x i8], %struct.list_head, [0 x i64] }
%struct.ehci_caps = type { i32, i32, i32, [8 x i8] }
%struct.ehci_regs = type { i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, [6 x i32], i32, [0 x i32], [9 x i32], i32, [6 x i32], [0 x i32], [17 x i32], i32 }
%struct.ehci_dbg_port = type { i32, i32, i32, i32, i32 }
%struct.ehci_qh = type { %struct.ehci_qh_hw*, i64, %union.ehci_shadow, %struct.list_head, %struct.list_head, %struct.ehci_qtd*, %struct.list_head, %struct.ehci_per_sched, i32, i8, i8, i8, i8, i8 }
%struct.ehci_qh_hw = type { i32, i32, i32, i32, i32, i32, i32, [5 x i32], [5 x i32], [28 x i8] }
%union.ehci_shadow = type { %struct.ehci_qh* }
%struct.ehci_qtd = type { i32, i32, i32, [5 x i32], [5 x i32], i64, %struct.list_head, %struct.urb*, i64 }
%struct.urb = type { %struct.kref, i32, i8*, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.usb_anchor*, %struct.usb_device*, %struct.usb_host_endpoint*, i32, i32, i32, i32, i8*, i64, %struct.scatterlist*, i32, i32, i32, i32, i8*, i64, i32, i32, i32, i32, i8*, void (%struct.urb*)*, [0 x %struct.usb_iso_packet_descriptor] }
%struct.usb_anchor = type { %struct.list_head, %struct.wait_queue_head, %struct.spinlock, %struct.atomic_t, i8 }
%struct.usb_device = type <{ i32, [16 x i8], i32, i32, i32, i32, i32, %struct.usb_tt*, i32, [2 x i32], [4 x i8], %struct.usb_device*, %struct.usb_bus*, %struct.usb_host_endpoint, %struct.device, %struct.usb_device_descriptor, [6 x i8], %struct.usb_host_bos*, %struct.usb_host_config*, %struct.usb_host_config*, [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*], i8**, i16, i8, i8, i8, i16, i8, i32, [4 x i8], i8*, i8*, i8*, %struct.list_head, i32, i32, %struct.atomic_t, [4 x i8], i64, i64, i8, [7 x i8], %struct.wusb_dev*, i32, i32, %struct.usb2_lpm_parameters, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters, i32, i16, i8, i8 }>
%struct.usb_tt = type { %struct.usb_device*, i32, i32, i8*, %struct.spinlock, %struct.list_head, %struct.work_struct }
%struct.usb_bus = type { %struct.device*, %struct.device*, i32, i8*, i8, i8, i8, i32, i32, %struct.mutex, %struct.usb_devmap, %struct.usb_device*, %struct.usb_bus*, i32, i32, i32, i32 }
%struct.usb_devmap = type { [2 x i64] }
%struct.usb_host_endpoint = type <{ %struct.usb_endpoint_descriptor, %struct.usb_ss_ep_comp_descriptor, %struct.usb_ssp_isoc_ep_comp_descriptor, i8, %struct.list_head, i8*, %struct.ep_device*, i8*, i32, i32, i32, [4 x i8] }>
%struct.usb_endpoint_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8 }>
%struct.usb_ss_ep_comp_descriptor = type { i8, i8, i8, i8, i16 }
%struct.usb_ssp_isoc_ep_comp_descriptor = type { i8, i8, i16, i32 }
%struct.ep_device = type opaque
%struct.usb_device_descriptor = type { i8, i8, i16, i8, i8, i8, i8, i16, i16, i16, i8, i8, i8, i8 }
%struct.usb_host_bos = type { %struct.usb_bos_descriptor*, %struct.usb_ext_cap_descriptor*, %struct.usb_ss_cap_descriptor*, %struct.usb_ssp_cap_descriptor*, %struct.usb_ss_container_id_descriptor*, %struct.usb_ptm_cap_descriptor* }
%struct.usb_bos_descriptor = type <{ i8, i8, i16, i8 }>
%struct.usb_ext_cap_descriptor = type <{ i8, i8, i8, i32 }>
%struct.usb_ss_cap_descriptor = type { i8, i8, i8, i8, i16, i8, i8, i16 }
%struct.usb_ssp_cap_descriptor = type { i8, i8, i8, i8, i32, i16, i16, [1 x i32] }
%struct.usb_ss_container_id_descriptor = type { i8, i8, i8, i8, [16 x i8] }
%struct.usb_ptm_cap_descriptor = type { i8, i8, i8 }
%struct.usb_host_config = type { %struct.usb_config_descriptor, i8*, [16 x %struct.usb_interface_assoc_descriptor*], [32 x %struct.usb_interface*], [32 x %struct.usb_interface_cache*], i8*, i32 }
%struct.usb_config_descriptor = type <{ i8, i8, i16, i8, i8, i8, i8, i8 }>
%struct.usb_interface_assoc_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.usb_interface = type { %struct.usb_host_interface*, %struct.usb_host_interface*, i32, %struct.usb_interface_assoc_descriptor*, i32, i32, i8, %struct.device, %struct.device*, %struct.work_struct }
%struct.usb_host_interface = type { %struct.usb_interface_descriptor, i32, i8*, %struct.usb_host_endpoint*, i8* }
%struct.usb_interface_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.usb_interface_cache = type { i32, %struct.kref, [0 x %struct.usb_host_interface] }
%struct.wusb_dev = type opaque
%struct.usb2_lpm_parameters = type { i32, i32 }
%struct.usb3_lpm_parameters = type { i32, i32, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.usb_iso_packet_descriptor = type { i32, i32, i32, i32 }
%struct.ehci_per_sched = type { %struct.usb_device*, %struct.usb_host_endpoint*, %struct.list_head, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8 }
%struct.ehci_itd = type { i32, [8 x i32], [7 x i32], [7 x i32], i64, %union.ehci_shadow, %struct.urb*, %struct.ehci_iso_stream*, %struct.list_head, i32, i32, [8 x i32], [8 x i8] }
%struct.ehci_iso_stream = type { %struct.ehci_qh_hw*, i8, i8, %struct.list_head, %struct.list_head, %struct.ehci_per_sched, i32, i32, i16, i16, i32, i32, i32, i32, i32 }
%struct.ehci_sitd = type { i32, i32, i32, i32, [2 x i32], i32, [2 x i32], i64, %union.ehci_shadow, %struct.urb*, %struct.ehci_iso_stream*, %struct.list_head, i32, i32 }
%struct.dma_pool = type opaque
%struct.usb_hcd = type { %struct.usb_bus, %struct.kref, i8*, i32, [24 x i8], %struct.timer_list, %struct.urb*, %struct.work_struct, %struct.work_struct, %struct.hc_driver*, %struct.usb_phy*, %struct.usb_phy_roothub*, i64, i32, i16, i32, i8*, i64, i64, i32, %struct.giveback_urb_bh, %struct.giveback_urb_bh, %struct.mutex*, %struct.mutex*, %struct.usb_hcd*, %struct.usb_hcd*, [4 x %struct.dma_pool*], i32, %struct.gen_pool*, [0 x i64] }
%struct.hc_driver = type { i8*, i8*, i64, i32 (%struct.usb_hcd*)*, i32, {}*, {}*, i32 (%struct.usb_hcd*, i1)*, i32 (%struct.usb_hcd*, i1)*, void (%struct.usb_hcd*)*, void (%struct.usb_hcd*)*, {}*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, void (%struct.usb_hcd*, %struct.urb*)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, i8*)*, i32 (%struct.usb_hcd*, i16, i16, i16, i8*, i16)*, {}*, {}*, i32 (%struct.usb_hcd*, i32)*, i64 (%struct.usb_hcd*)*, void (%struct.usb_hcd*, i32)*, i32 (%struct.usb_hcd*, i32)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, void (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint**, i32, i32, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint**, i32, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, void (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_tt*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, i32)*, i32 (%struct.usb_hcd*, i32, i1)* }
%struct.usb_phy = type { %struct.device*, i8*, i32, i32, i32, %struct.usb_otg*, %struct.device*, %struct.usb_phy_io_ops*, i8*, %struct.extcon_dev*, %struct.extcon_dev*, %struct.notifier_block, %struct.notifier_block, %struct.notifier_block, i32, i32, %struct.usb_charger_current, %struct.work_struct, %struct.atomic_notifier_head, i16, i16, %struct.list_head, i32 (%struct.usb_phy*)*, void (%struct.usb_phy*)*, i32 (%struct.usb_phy*, i32)*, i32 (%struct.usb_phy*, i32)*, i32 (%struct.usb_phy*, i32)*, i32 (%struct.usb_phy*, i1)*, i32 (%struct.usb_phy*, i32)*, i32 (%struct.usb_phy*, i32)*, i32 (%struct.usb_phy*)* }
%struct.usb_otg = type { i8, %struct.phy*, %struct.usb_phy*, %struct.usb_bus*, %struct.usb_gadget*, i32, i32 (%struct.usb_otg*, %struct.usb_bus*)*, i32 (%struct.usb_otg*, %struct.usb_gadget*)*, i32 (%struct.usb_otg*, i1)*, i32 (%struct.usb_otg*)*, i32 (%struct.usb_otg*)* }
%struct.phy = type { %struct.device, i32, %struct.phy_ops*, %struct.mutex, i32, i32, %struct.phy_attrs, %struct.regulator* }
%struct.phy_ops = type { i32 (%struct.phy*)*, i32 (%struct.phy*)*, i32 (%struct.phy*)*, i32 (%struct.phy*)*, i32 (%struct.phy*, i32, i32)*, i32 (%struct.phy*, %union.phy_configure_opts*)*, i32 (%struct.phy*, i32, i32, %union.phy_configure_opts*)*, i32 (%struct.phy*)*, i32 (%struct.phy*)*, void (%struct.phy*)*, %struct.module* }
%union.phy_configure_opts = type { %struct.phy_configure_opts_mipi_dphy }
%struct.phy_configure_opts_mipi_dphy = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i8 }
%struct.phy_attrs = type { i32, i32, i32 }
%struct.regulator = type opaque
%struct.usb_gadget = type opaque
%struct.usb_phy_io_ops = type { i32 (%struct.usb_phy*, i32)*, i32 (%struct.usb_phy*, i32, i32)* }
%struct.extcon_dev = type opaque
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.usb_charger_current = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.atomic_notifier_head = type { %struct.spinlock, %struct.notifier_block* }
%struct.usb_phy_roothub = type opaque
%struct.giveback_urb_bh = type { i8, %struct.spinlock, %struct.list_head, %struct.tasklet_struct, %struct.usb_host_endpoint* }
%struct.tasklet_struct = type { %struct.tasklet_struct*, i64, %struct.atomic_t, i8, %union.anon.80, i64 }
%union.anon.80 = type { void (i64)* }
%struct.gen_pool = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.usb_hub_descriptor = type <{ i8, i8, i8, i16, i8, i8, %union.anon.81 }>
%union.anon.81 = type { %struct.anon.82 }
%struct.anon.82 = type { [4 x i8], [4 x i8] }
%struct.ehci_driver_overrides = type { i64, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*, i32, i1)* }
%struct.ehci_tt = type { [8 x i16], %struct.list_head, %struct.list_head, %struct.usb_tt*, i32 }
%struct.ehci_fstn = type { i32, i32, i64, %union.ehci_shadow, [8 x i8] }
%struct.ehci_iso_sched = type { %struct.list_head, i32, i32, [0 x %struct.ehci_iso_packet] }
%struct.ehci_iso_packet = type { i64, i32, i8, i32 }

@__param_str_log2_irq_thresh = internal constant [25 x i8] c"ehci_hcd.log2_irq_thresh\00", align 16, !dbg !0
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@log2_irq_thresh = internal global i32 0, align 4, !dbg !6216
@__param_log2_irq_thresh = internal constant %struct.kernel_param { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__param_str_log2_irq_thresh, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 292, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @log2_irq_thresh to i8*) } }, section "__param", align 8, !dbg !6107
@__UNIQUE_ID_log2_irq_threshtype302 = internal constant [38 x i8] c"ehci_hcd.parmtype=log2_irq_thresh:int\00", section ".modinfo", align 1, !dbg !6158
@__UNIQUE_ID_log2_irq_thresh303 = internal constant [65 x i8] c"ehci_hcd.parm=log2_irq_thresh:log2 IRQ latency, 1-64 microframes\00", section ".modinfo", align 1, !dbg !6163
@__param_str_park = internal constant [14 x i8] c"ehci_hcd.park\00", align 1, !dbg !6218
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 8
@park = internal global i32 0, align 4, !dbg !6223
@__param_park = internal constant %struct.kernel_param { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__param_str_park, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 292, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @park to i8*) } }, section "__param", align 8, !dbg !6168
@__UNIQUE_ID_parktype304 = internal constant [28 x i8] c"ehci_hcd.parmtype=park:uint\00", section ".modinfo", align 1, !dbg !6170
@__UNIQUE_ID_park305 = internal constant [64 x i8] c"ehci_hcd.parm=park:park setting; 1-3 back-to-back async packets\00", section ".modinfo", align 1, !dbg !6175
@__param_str_ignore_oc = internal constant [19 x i8] c"ehci_hcd.ignore_oc\00", align 16, !dbg !6225
@param_ops_bool = external dso_local constant %struct.kernel_param_ops, align 8
@ignore_oc = internal global i8 0, align 1, !dbg !6214
@__param_ignore_oc = internal constant %struct.kernel_param { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__param_str_ignore_oc, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 292, i8 -1, i8 0, %union.anon { i8* @ignore_oc } }, section "__param", align 8, !dbg !6178
@__UNIQUE_ID_ignore_octype306 = internal constant [33 x i8] c"ehci_hcd.parmtype=ignore_oc:bool\00", section ".modinfo", align 1, !dbg !6180
@__UNIQUE_ID_ignore_oc307 = internal constant [70 x i8] c"ehci_hcd.parm=ignore_oc:ignore bogus hardware overcurrent indications\00", section ".modinfo", align 1, !dbg !6185
@.str = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.1 = private unnamed_addr constant [25 x i8] c"port %d resume error %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"port %d reset error %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"GetStatus\00", align 1
@__UNIQUE_ID_description374 = internal constant [70 x i8] c"ehci_hcd.description=USB 2.0 'Enhanced' Host Controller (EHCI) Driver\00", section ".modinfo", align 1, !dbg !6190
@__UNIQUE_ID_author375 = internal constant [31 x i8] c"ehci_hcd.author=David Brownell\00", section ".modinfo", align 1, !dbg !6192
@__UNIQUE_ID_file376 = internal constant [40 x i8] c"ehci_hcd.file=drivers/usb/host/ehci-hcd\00", section ".modinfo", align 1, !dbg !6197
@__UNIQUE_ID_license377 = internal constant [21 x i8] c"ehci_hcd.license=GPL\00", section ".modinfo", align 1, !dbg !6202
@__UNIQUE_ID___addressable_ehci_hcd_init378 = internal global i8* bitcast (i32 ()* @ehci_hcd_init to i8*), section ".discard.addressable", align 8, !dbg !6207
@usb_hcds_loaded = external dso_local global i64, align 8
@__exitcall_ehci_hcd_cleanup = internal global void ()* @ehci_hcd_cleanup, section ".exitcall.exit", align 8, !dbg !6209
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@event_handlers = internal global [12 x void (%struct.ehci_hcd*)*] [void (%struct.ehci_hcd*)* @ehci_poll_ASS, void (%struct.ehci_hcd*)* @ehci_poll_PSS, void (%struct.ehci_hcd*)* @ehci_handle_controller_death, void (%struct.ehci_hcd*)* @ehci_handle_intr_unlinks, void (%struct.ehci_hcd*)* @end_free_itds, void (%struct.ehci_hcd*)* @end_unlink_async, void (%struct.ehci_hcd*)* @ehci_handle_start_intr_unlinks, void (%struct.ehci_hcd*)* @unlink_empty_async, void (%struct.ehci_hcd*)* @ehci_iaa_watchdog, void (%struct.ehci_hcd*)* @ehci_disable_PSE, void (%struct.ehci_hcd*)* @ehci_disable_ASE, void (%struct.ehci_hcd*)* @ehci_work], align 16, !dbg !6230
@.str.4 = private unnamed_addr constant [55 x i8] c"Waited too long for the controller to stop, giving up\0A\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"can't reschedule qh %p, err %d\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.6 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@max_tt_usecs = internal constant [8 x i8] c"}}}}}}\1E\00", align 1, !dbg !6237
@.str.7 = private unnamed_addr constant [5 x i8] c"intr\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"qh %p should be inactive!\0A\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"drivers/usb/host/ehci-q.c\00", align 1
@event_delays_ns = internal global [12 x i32] [i32 1000000, i32 1000000, i32 1000000, i32 1125000, i32 2000000, i32 2000000, i32 5000000, i32 6000000, i32 10000000, i32 10000000, i32 15000000, i32 100000000], align 16, !dbg !6241
@.str.10 = private unnamed_addr constant [9 x i8] c"ehci_qtd\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"ehci_qh\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"ehci_itd\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"ehci_sitd\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"drivers/usb/host/ehci-mem.c\00", align 1
@hcd_name = internal constant [9 x i8] c"ehci_hcd\00", align 1, !dbg !6246
@.str.15 = private unnamed_addr constant [21 x i8] c"EHCI Host Controller\00", align 1
@ehci_hc_driver = internal constant { i8*, i8*, i64, i32 (%struct.usb_hcd*)*, i32, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*, i1)*, i32 (%struct.usb_hcd*, i1)*, void (%struct.usb_hcd*)*, void (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, void (%struct.usb_hcd*, %struct.urb*)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, i8*)*, i32 (%struct.usb_hcd*, i16, i16, i16, i8*, i16)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*, i32)*, i64 (%struct.usb_hcd*)*, void (%struct.usb_hcd*, i32)*, i32 (%struct.usb_hcd*, i32)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, void (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint**, i32, i32, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint**, i32, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, void (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_tt*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, i32)*, i32 (%struct.usb_hcd*, i32, i1)* } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @hcd_name, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i32 0, i32 0), i64 856, i32 (%struct.usb_hcd*)* @ehci_irq, i32 291, i32 (%struct.usb_hcd*)* @ehci_setup, i32 (%struct.usb_hcd*)* @ehci_run, i32 (%struct.usb_hcd*, i1)* null, i32 (%struct.usb_hcd*, i1)* null, void (%struct.usb_hcd*)* @ehci_stop, void (%struct.usb_hcd*)* @ehci_shutdown, i32 (%struct.usb_hcd*)* @ehci_get_frame, i32 (%struct.usb_hcd*, %struct.urb*, i32)* @ehci_urb_enqueue, i32 (%struct.usb_hcd*, %struct.urb*, i32)* @ehci_urb_dequeue, i32 (%struct.usb_hcd*, %struct.urb*, i32)* null, void (%struct.usb_hcd*, %struct.urb*)* null, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)* @ehci_endpoint_disable, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)* @ehci_endpoint_reset, i32 (%struct.usb_hcd*, i8*)* @ehci_hub_status_data, i32 (%struct.usb_hcd*, i16, i16, i16, i8*, i16)* @ehci_hub_control, i32 (%struct.usb_hcd*)* @ehci_bus_suspend, i32 (%struct.usb_hcd*)* @ehci_bus_resume, i32 (%struct.usb_hcd*, i32)* null, i64 (%struct.usb_hcd*)* @ehci_get_resuming_ports, void (%struct.usb_hcd*, i32)* @ehci_relinquish_port, i32 (%struct.usb_hcd*, i32)* @ehci_port_handed_over, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)* @ehci_clear_tt_buffer_complete, i32 (%struct.usb_hcd*, %struct.usb_device*)* null, void (%struct.usb_hcd*, %struct.usb_device*)* @ehci_remove_device, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint**, i32, i32, i32)* null, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint**, i32, i32)* null, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint*)* null, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint*)* null, i32 (%struct.usb_hcd*, %struct.usb_device*)* null, void (%struct.usb_hcd*, %struct.usb_device*)* null, i32 (%struct.usb_hcd*, %struct.usb_device*)* null, i32 (%struct.usb_hcd*, %struct.usb_device*)* null, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_tt*, i32)* null, i32 (%struct.usb_hcd*, %struct.usb_device*)* null, i32 (%struct.usb_hcd*, %struct.usb_device*)* null, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)* null, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)* null, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)* null, i32 (%struct.usb_hcd*, i32)* null, i32 (%struct.usb_hcd*, i32, i1)* null }, align 8, !dbg !6244
@.str.17 = private unnamed_addr constant [13 x i8] c"fatal error\0A\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"fatal\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"init\00", align 1
@ehci_cf_port_reset_rwsem = external dso_local global %struct.rw_semaphore, align 8
@.str.20 = private unnamed_addr constant [35 x i8] c"USB %x.%x started, EHCI %x.%02x%s\0A\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c", overcurrent ignored\00", align 1
@.str.22 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@dev_attr_companion = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @companion_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @companion_store }, align 8, !dbg !6249
@dev_attr_uframe_periodic_max = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @uframe_periodic_max_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @uframe_periodic_max_store }, align 8, !dbg !6264
@.str.23 = private unnamed_addr constant [10 x i8] c"companion\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.26 = private unnamed_addr constant [20 x i8] c"uframe_periodic_max\00", align 1
@.str.27 = private unnamed_addr constant [54 x i8] c"rejecting invalid request for uframe_periodic_max=%u\0A\00", align 1
@.str.28 = private unnamed_addr constant [95 x i8] c"cannot decrease uframe_periodic_max because periodic bandwidth is already allocated (%u > %u)\0A\00", align 1
@.str.29 = private unnamed_addr constant [60 x i8] c"setting max periodic bandwidth to %u%% (== %u usec/uframe)\0A\00", align 1
@.str.30 = private unnamed_addr constant [44 x i8] c"max periodic bandwidth set is non-standard\0A\00", align 1
@.str.31 = private unnamed_addr constant [20 x i8] c"ehci_stop completed\00", align 1
@.str.32 = private unnamed_addr constant [20 x i8] c"include/linux/usb.h\00", align 1
@.str.33 = private unnamed_addr constant [30 x i8] c"drivers/usb/host/ehci-sched.c\00", align 1
@iso_stream_init.smask_out = internal constant [6 x i8] c"\01\03\07\0F\1F?", align 1, !dbg !6266
@.str.34 = private unnamed_addr constant [4 x i8] c"iso\00", align 1
@.str.35 = private unnamed_addr constant [28 x i8] c"drivers/usb/host/ehci-hcd.c\00", align 1
@.str.36 = private unnamed_addr constant [26 x i8] c"qh %p (#%02x) state %d%s\0A\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"(has tds)\00", align 1
@ehci_endpoint_reset.__warned = internal global i8 0, section ".data.once", align 1, !dbg !6273
@.str.38 = private unnamed_addr constant [32 x i8] c"clear_halt for a busy endpoint\0A\00", align 1
@.str.39 = private unnamed_addr constant [56 x i8] c"\016%s: USB 2.0 'Enhanced' Host Controller (EHCI) Driver\0A\00", align 1
@.str.40 = private unnamed_addr constant [85 x i8] c"\014Warning! ehci_hcd should always be loaded before uhci_hcd and ohci_hcd, not after\0A\00", align 1
@llvm.used = appending global [16 x i8*] [i8* bitcast (%struct.kernel_param* @__param_log2_irq_thresh to i8*), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_log2_irq_threshtype302, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__UNIQUE_ID_log2_irq_thresh303, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_park to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_parktype304, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__UNIQUE_ID_park305, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ignore_oc to i8*), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_ignore_octype306, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__UNIQUE_ID_ignore_oc307, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__UNIQUE_ID_description374, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_author375, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @__UNIQUE_ID_file376, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_license377, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_ehci_hcd_init378 to i8*), i8* bitcast (void ()* @ehci_hcd_cleanup to i8*), i8* bitcast (void ()** @__exitcall_ehci_hcd_cleanup to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ehci_handshake(%struct.ehci_hcd* %ehci, i8* %ptr, i32 %mask, i32 %done, i32 %usec) #0 !dbg !6285 {
entry:
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %ptr.addr = alloca i8*, align 8
  %mask.addr = alloca i32, align 4
  %done.addr = alloca i32, align 4
  %usec.addr = alloca i32, align 4
  %result = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !6288, metadata !DIExpression()), !dbg !6289
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6290, metadata !DIExpression()), !dbg !6291
  store i32 %mask, i32* %mask.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mask.addr, metadata !6292, metadata !DIExpression()), !dbg !6293
  store i32 %done, i32* %done.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %done.addr, metadata !6294, metadata !DIExpression()), !dbg !6295
  store i32 %usec, i32* %usec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %usec.addr, metadata !6296, metadata !DIExpression()), !dbg !6297
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6298, metadata !DIExpression()), !dbg !6299
  br label %do.body, !dbg !6300

do.body:                                          ; preds = %do.cond, %entry
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6301
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !6303
  %2 = bitcast i8* %1 to i32*, !dbg !6303
  %call = call i32 @ehci_readl(%struct.ehci_hcd* %0, i32* %2) #11, !dbg !6304
  store i32 %call, i32* %result, align 4, !dbg !6305
  %3 = load i32, i32* %result, align 4, !dbg !6306
  %cmp = icmp eq i32 %3, -1, !dbg !6308
  br i1 %cmp, label %if.then, label %if.end, !dbg !6309

if.then:                                          ; preds = %do.body
  store i32 -19, i32* %retval, align 4, !dbg !6310
  br label %return, !dbg !6310

if.end:                                           ; preds = %do.body
  %4 = load i32, i32* %mask.addr, align 4, !dbg !6311
  %5 = load i32, i32* %result, align 4, !dbg !6312
  %and = and i32 %5, %4, !dbg !6312
  store i32 %and, i32* %result, align 4, !dbg !6312
  %6 = load i32, i32* %result, align 4, !dbg !6313
  %7 = load i32, i32* %done.addr, align 4, !dbg !6315
  %cmp1 = icmp eq i32 %6, %7, !dbg !6316
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6317

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6318
  br label %return, !dbg !6318

if.end3:                                          ; preds = %if.end
  call void @__const_udelay(i64 4295) #11, !dbg !6319
  %8 = load i32, i32* %usec.addr, align 4, !dbg !6324
  %dec = add i32 %8, -1, !dbg !6324
  store i32 %dec, i32* %usec.addr, align 4, !dbg !6324
  br label %do.cond, !dbg !6325

do.cond:                                          ; preds = %if.end3
  %9 = load i32, i32* %usec.addr, align 4, !dbg !6326
  %cmp4 = icmp sgt i32 %9, 0, !dbg !6327
  br i1 %cmp4, label %do.body, label %do.end, !dbg !6325, !llvm.loop !6328

do.end:                                           ; preds = %do.cond
  store i32 -110, i32* %retval, align 4, !dbg !6330
  br label %return, !dbg !6330

return:                                           ; preds = %do.end, %if.then2, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !6331
  ret i32 %10, !dbg !6331
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_readl(%struct.ehci_hcd* %ehci, i32* %regs) #0 !dbg !6332 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %regs.addr = alloca i32*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !6338, metadata !DIExpression()), !dbg !6339
  store i32* %regs, i32** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %regs.addr, metadata !6340, metadata !DIExpression()), !dbg !6341
  %0 = load i32*, i32** %regs.addr, align 8, !dbg !6342
  %1 = bitcast i32* %0 to i8*, !dbg !6342
  %call = call i32 @readl(i8* %1) #11, !dbg !6343
  ret i32 %call, !dbg !6344
}

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ehci_reset(%struct.ehci_hcd* %ehci) #0 !dbg !6345 {
entry:
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %retval1 = alloca i32, align 4
  %command = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !6348, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6350, metadata !DIExpression()), !dbg !6351
  call void @llvm.dbg.declare(metadata i32* %command, metadata !6352, metadata !DIExpression()), !dbg !6353
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6354
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6355
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 8, !dbg !6356
  %2 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !6356
  %command2 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %2, i32 0, i32 0, !dbg !6357
  %call = call i32 @ehci_readl(%struct.ehci_hcd* %0, i32* %command2) #11, !dbg !6358
  store i32 %call, i32* %command, align 4, !dbg !6353
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6359
  %debug = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 9, !dbg !6361
  %4 = load %struct.ehci_dbg_port*, %struct.ehci_dbg_port** %debug, align 8, !dbg !6361
  %tobool = icmp ne %struct.ehci_dbg_port* %4, null, !dbg !6359
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6362

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6363
  %call3 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %5) #11, !dbg !6364
  %call4 = call i32 @dbgp_reset_prep(%struct.usb_hcd* %call3) #11, !dbg !6365
  %tobool5 = icmp ne i32 %call4, 0, !dbg !6365
  br i1 %tobool5, label %if.end, label %if.then, !dbg !6366

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6367
  %debug6 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 9, !dbg !6368
  store %struct.ehci_dbg_port* null, %struct.ehci_dbg_port** %debug6, align 8, !dbg !6369
  br label %if.end, !dbg !6367

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %command, align 4, !dbg !6370
  %or = or i32 %7, 2, !dbg !6370
  store i32 %or, i32* %command, align 4, !dbg !6370
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6371
  %9 = load i32, i32* %command, align 4, !dbg !6372
  call void @dbg_cmd(%struct.ehci_hcd* %8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 %9) #11, !dbg !6373
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6374
  %11 = load i32, i32* %command, align 4, !dbg !6375
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6376
  %regs7 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 8, !dbg !6377
  %13 = load %struct.ehci_regs*, %struct.ehci_regs** %regs7, align 8, !dbg !6377
  %command8 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %13, i32 0, i32 0, !dbg !6378
  call void @ehci_writel(%struct.ehci_hcd* %10, i32 %11, i32* %command8) #11, !dbg !6379
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6380
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 12, !dbg !6381
  store i32 0, i32* %rh_state, align 4, !dbg !6382
  %15 = load volatile i64, i64* @jiffies, align 8, !dbg !6383
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6384
  %next_statechange = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %16, i32 0, i32 55, !dbg !6385
  store i64 %15, i64* %next_statechange, align 8, !dbg !6386
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6387
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6388
  %regs9 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %18, i32 0, i32 8, !dbg !6389
  %19 = load %struct.ehci_regs*, %struct.ehci_regs** %regs9, align 8, !dbg !6389
  %command10 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %19, i32 0, i32 0, !dbg !6390
  %20 = bitcast i32* %command10 to i8*, !dbg !6391
  %call11 = call i32 @ehci_handshake(%struct.ehci_hcd* %17, i8* %20, i32 2, i32 0, i32 250000) #11, !dbg !6392
  store i32 %call11, i32* %retval1, align 4, !dbg !6393
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6394
  %has_hostpc = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %21, i32 0, i32 60, !dbg !6396
  %bf.load = load i8, i8* %has_hostpc, align 8, !dbg !6396
  %bf.clear = and i8 %bf.load, 1, !dbg !6396
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6396
  %tobool12 = icmp ne i32 %bf.cast, 0, !dbg !6394
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !6397

if.then13:                                        ; preds = %if.end
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6398
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6400
  %regs14 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %23, i32 0, i32 8, !dbg !6401
  %24 = load %struct.ehci_regs*, %struct.ehci_regs** %regs14, align 8, !dbg !6401
  %usbmode_ex = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %24, i32 0, i32 17, !dbg !6402
  call void @ehci_writel(%struct.ehci_hcd* %22, i32 35, i32* %usbmode_ex) #11, !dbg !6403
  %25 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6404
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6405
  %regs15 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %26, i32 0, i32 8, !dbg !6406
  %27 = load %struct.ehci_regs*, %struct.ehci_regs** %regs15, align 8, !dbg !6406
  %txfill_tuning = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %27, i32 0, i32 8, !dbg !6407
  call void @ehci_writel(%struct.ehci_hcd* %25, i32 524288, i32* %txfill_tuning) #11, !dbg !6408
  br label %if.end16, !dbg !6409

if.end16:                                         ; preds = %if.then13, %if.end
  %28 = load i32, i32* %retval1, align 4, !dbg !6410
  %tobool17 = icmp ne i32 %28, 0, !dbg !6410
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !6412

if.then18:                                        ; preds = %if.end16
  %29 = load i32, i32* %retval1, align 4, !dbg !6413
  store i32 %29, i32* %retval, align 4, !dbg !6414
  br label %return, !dbg !6414

if.end19:                                         ; preds = %if.end16
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6415
  %debug20 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %30, i32 0, i32 9, !dbg !6417
  %31 = load %struct.ehci_dbg_port*, %struct.ehci_dbg_port** %debug20, align 8, !dbg !6417
  %tobool21 = icmp ne %struct.ehci_dbg_port* %31, null, !dbg !6415
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !6418

if.then22:                                        ; preds = %if.end19
  %32 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6419
  %call23 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %32) #11, !dbg !6420
  %call24 = call i32 @dbgp_external_startup(%struct.usb_hcd* %call23) #11, !dbg !6421
  br label %if.end25, !dbg !6421

if.end25:                                         ; preds = %if.then22, %if.end19
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6422
  %resuming_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %33, i32 0, i32 49, !dbg !6423
  store i64 0, i64* %resuming_ports, align 8, !dbg !6424
  %34 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6425
  %suspended_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %34, i32 0, i32 48, !dbg !6426
  store i64 0, i64* %suspended_ports, align 8, !dbg !6427
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6428
  %port_c_suspend = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %35, i32 0, i32 47, !dbg !6429
  store i64 0, i64* %port_c_suspend, align 8, !dbg !6430
  %36 = load i32, i32* %retval1, align 4, !dbg !6431
  store i32 %36, i32* %retval, align 4, !dbg !6432
  br label %return, !dbg !6432

return:                                           ; preds = %if.end25, %if.then18
  %37 = load i32, i32* %retval, align 4, !dbg !6433
  ret i32 %37, !dbg !6433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dbgp_reset_prep(%struct.usb_hcd* %hcd) #0 !dbg !6434 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !6435, metadata !DIExpression()), !dbg !6436
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6437
  %call = call i32 @xen_dbgp_reset_prep(%struct.usb_hcd* %0) #11, !dbg !6438
  ret i32 %call, !dbg !6439
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %ehci) #0 !dbg !6440 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.usb_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !6443, metadata !DIExpression()), !dbg !6444
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6445, metadata !DIExpression()), !dbg !6447
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6447
  %1 = bitcast %struct.ehci_hcd* %0 to i8*, !dbg !6447
  store i8* %1, i8** %__mptr, align 8, !dbg !6447
  br label %do.body, !dbg !6447

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6448

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6447
  %add.ptr = getelementptr i8, i8* %2, i64 -584, !dbg !6447
  %3 = bitcast i8* %add.ptr to %struct.usb_hcd*, !dbg !6447
  store %struct.usb_hcd* %3, %struct.usb_hcd** %tmp, align 8, !dbg !6448
  %4 = load %struct.usb_hcd*, %struct.usb_hcd** %tmp, align 8, !dbg !6447
  ret %struct.usb_hcd* %4, !dbg !6450
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dbg_cmd(%struct.ehci_hcd* %ehci, i8* %label, i32 %command) #0 !dbg !6451 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %label.addr = alloca i8*, align 8
  %command.addr = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !6455, metadata !DIExpression()), !dbg !6456
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !6457, metadata !DIExpression()), !dbg !6458
  store i32 %command, i32* %command.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %command.addr, metadata !6459, metadata !DIExpression()), !dbg !6460
  ret void, !dbg !6461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_writel(%struct.ehci_hcd* %ehci, i32 %val, i32* %regs) #0 !dbg !6462 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %val.addr = alloca i32, align 4
  %regs.addr = alloca i32*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !6465, metadata !DIExpression()), !dbg !6466
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !6467, metadata !DIExpression()), !dbg !6468
  store i32* %regs, i32** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %regs.addr, metadata !6469, metadata !DIExpression()), !dbg !6470
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6471
  %imx28_write_fix = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 58, !dbg !6473
  %bf.load = load i16, i16* %imx28_write_fix, align 4, !dbg !6473
  %bf.lshr = lshr i16 %bf.load, 14, !dbg !6473
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6473
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6473
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6471
  br i1 %tobool, label %if.then, label %if.else, !dbg !6474

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %val.addr, align 4, !dbg !6475
  %2 = load i32*, i32** %regs.addr, align 8, !dbg !6476
  call void @imx28_ehci_writel(i32 %1, i32* %2) #11, !dbg !6477
  br label %if.end, !dbg !6477

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %val.addr, align 4, !dbg !6478
  %4 = load i32*, i32** %regs.addr, align 8, !dbg !6479
  %5 = bitcast i32* %4 to i8*, !dbg !6479
  call void @writel(i32 %3, i8* %5) #11, !dbg !6480
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !6481
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dbgp_external_startup(%struct.usb_hcd* %hcd) #0 !dbg !6482 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !6483, metadata !DIExpression()), !dbg !6484
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6485
  %call = call i32 @xen_dbgp_external_startup(%struct.usb_hcd* %0) #11, !dbg !6486
  ret i32 %call, !dbg !6487
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ehci_adjust_port_wakeup_flags(%struct.ehci_hcd* %ehci, i1 zeroext %suspending, i1 zeroext %do_wakeup) #0 !dbg !6488 {
entry:
  %lock.addr.i70 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i70, metadata !6492, metadata !DIExpression()), !dbg !6497
  %lock.addr.i68 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i68, metadata !6499, metadata !DIExpression()), !dbg !6501
  %lock.addr.i66 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i66, metadata !6492, metadata !DIExpression()), !dbg !6505
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6499, metadata !DIExpression()), !dbg !6507
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %suspending.addr = alloca i8, align 1
  %do_wakeup.addr = alloca i8, align 1
  %port = alloca i32, align 4
  %temp = alloca i32, align 4
  %hostpc_reg = alloca i32*, align 8
  %reg = alloca i32*, align 8
  %t1 = alloca i32, align 4
  %t2 = alloca i32, align 4
  %hostpc_reg50 = alloca i32*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !6509, metadata !DIExpression()), !dbg !6510
  %frombool = zext i1 %suspending to i8
  store i8 %frombool, i8* %suspending.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %suspending.addr, metadata !6511, metadata !DIExpression()), !dbg !6512
  %frombool1 = zext i1 %do_wakeup to i8
  store i8 %frombool1, i8* %do_wakeup.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_wakeup.addr, metadata !6513, metadata !DIExpression()), !dbg !6514
  call void @llvm.dbg.declare(metadata i32* %port, metadata !6515, metadata !DIExpression()), !dbg !6516
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !6517, metadata !DIExpression()), !dbg !6518
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6519
  %call = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %0) #11, !dbg !6521
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call, i32 0, i32 0, !dbg !6522
  %root_hub = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 11, !dbg !6523
  %1 = load %struct.usb_device*, %struct.usb_device** %root_hub, align 8, !dbg !6523
  %do_remote_wakeup = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 41, !dbg !6524
  %bf.load = load i8, i8* %do_remote_wakeup, align 8, !dbg !6524
  %bf.clear = and i8 %bf.load, 1, !dbg !6524
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6524
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6521
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6525

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8, i8* %do_wakeup.addr, align 1, !dbg !6526
  %tobool2 = trunc i8 %2 to i1, !dbg !6526
  br i1 %tobool2, label %if.then, label %if.end, !dbg !6527

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !6528

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6529
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 11, !dbg !6530
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !6531
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6534, !srcloc !6536
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6537
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !6537
  %rlock.i = bitcast %union.anon.0* %5 to %struct.raw_spinlock*, !dbg !6537
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6539
  %has_tdi_phy_lpm = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 60, !dbg !6540
  %bf.load3 = load i8, i8* %has_tdi_phy_lpm, align 8, !dbg !6540
  %bf.lshr = lshr i8 %bf.load3, 1, !dbg !6540
  %bf.clear4 = and i8 %bf.lshr, 1, !dbg !6540
  %bf.cast5 = zext i8 %bf.clear4 to i32, !dbg !6540
  %tobool6 = icmp ne i32 %bf.cast5, 0, !dbg !6539
  br i1 %tobool6, label %if.then7, label %if.end13, !dbg !6541

if.then7:                                         ; preds = %if.end
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6542
  %hcs_params = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 10, !dbg !6542
  %8 = load i32, i32* %hcs_params, align 8, !dbg !6542
  %shr = lshr i32 %8, 0, !dbg !6542
  %and = and i32 %shr, 15, !dbg !6542
  store i32 %and, i32* %port, align 4, !dbg !6543
  br label %while.cond, !dbg !6544

while.cond:                                       ; preds = %while.body, %if.then7
  %9 = load i32, i32* %port, align 4, !dbg !6545
  %dec = add i32 %9, -1, !dbg !6545
  store i32 %dec, i32* %port, align 4, !dbg !6545
  %tobool8 = icmp ne i32 %9, 0, !dbg !6544
  br i1 %tobool8, label %while.body, label %while.end, !dbg !6544

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32** %hostpc_reg, metadata !6546, metadata !DIExpression()), !dbg !6548
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6549
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 8, !dbg !6550
  %11 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !6550
  %hostpc = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %11, i32 0, i32 15, !dbg !6551
  %12 = load i32, i32* %port, align 4, !dbg !6552
  %idxprom = sext i32 %12 to i64, !dbg !6549
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %hostpc, i64 0, i64 %idxprom, !dbg !6549
  store i32* %arrayidx, i32** %hostpc_reg, align 8, !dbg !6548
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6553
  %14 = load i32*, i32** %hostpc_reg, align 8, !dbg !6554
  %call9 = call i32 @ehci_readl(%struct.ehci_hcd* %13, i32* %14) #11, !dbg !6555
  store i32 %call9, i32* %temp, align 4, !dbg !6556
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6557
  %16 = load i32, i32* %temp, align 4, !dbg !6558
  %and10 = and i32 %16, -4194305, !dbg !6559
  %17 = load i32*, i32** %hostpc_reg, align 8, !dbg !6560
  call void @ehci_writel(%struct.ehci_hcd* %15, i32 %and10, i32* %17) #11, !dbg !6561
  br label %while.cond, !dbg !6544, !llvm.loop !6562

while.end:                                        ; preds = %while.cond
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6564
  %lock11 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %18, i32 0, i32 11, !dbg !6565
  store %struct.spinlock* %lock11, %struct.spinlock** %lock.addr.i66, align 8
  call void @arch_local_irq_enable() #12, !dbg !6566
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6569, !srcloc !6571
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i66, align 8, !dbg !6572
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !6572
  %rlock.i67 = bitcast %union.anon.0* %20 to %struct.raw_spinlock*, !dbg !6572
  call void @msleep(i32 5) #11, !dbg !6574
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6575
  %lock12 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %21, i32 0, i32 11, !dbg !6576
  store %struct.spinlock* %lock12, %struct.spinlock** %lock.addr.i68, align 8
  call void @arch_local_irq_disable() #12, !dbg !6577
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6578, !srcloc !6536
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i68, align 8, !dbg !6579
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !6579
  %rlock.i69 = bitcast %union.anon.0* %23 to %struct.raw_spinlock*, !dbg !6579
  br label %if.end13, !dbg !6580

if.end13:                                         ; preds = %while.end, %if.end
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6581
  %hcs_params14 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %24, i32 0, i32 10, !dbg !6581
  %25 = load i32, i32* %hcs_params14, align 8, !dbg !6581
  %shr15 = lshr i32 %25, 0, !dbg !6581
  %and16 = and i32 %shr15, 15, !dbg !6581
  store i32 %and16, i32* %port, align 4, !dbg !6582
  br label %while.cond17, !dbg !6583

while.cond17:                                     ; preds = %if.end34, %if.end13
  %26 = load i32, i32* %port, align 4, !dbg !6584
  %dec18 = add i32 %26, -1, !dbg !6584
  store i32 %dec18, i32* %port, align 4, !dbg !6584
  %tobool19 = icmp ne i32 %26, 0, !dbg !6583
  br i1 %tobool19, label %while.body20, label %while.end35, !dbg !6583

while.body20:                                     ; preds = %while.cond17
  call void @llvm.dbg.declare(metadata i32** %reg, metadata !6585, metadata !DIExpression()), !dbg !6587
  %27 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6588
  %regs21 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %27, i32 0, i32 8, !dbg !6589
  %28 = load %struct.ehci_regs*, %struct.ehci_regs** %regs21, align 8, !dbg !6589
  %port_status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %28, i32 0, i32 11, !dbg !6590
  %29 = load i32, i32* %port, align 4, !dbg !6591
  %idxprom22 = sext i32 %29 to i64, !dbg !6588
  %arrayidx23 = getelementptr [0 x i32], [0 x i32]* %port_status, i64 0, i64 %idxprom22, !dbg !6588
  store i32* %arrayidx23, i32** %reg, align 8, !dbg !6587
  call void @llvm.dbg.declare(metadata i32* %t1, metadata !6592, metadata !DIExpression()), !dbg !6593
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6594
  %31 = load i32*, i32** %reg, align 8, !dbg !6595
  %call24 = call i32 @ehci_readl(%struct.ehci_hcd* %30, i32* %31) #11, !dbg !6596
  %and25 = and i32 %call24, -43, !dbg !6597
  store i32 %and25, i32* %t1, align 4, !dbg !6593
  call void @llvm.dbg.declare(metadata i32* %t2, metadata !6598, metadata !DIExpression()), !dbg !6599
  %32 = load i32, i32* %t1, align 4, !dbg !6600
  %and26 = and i32 %32, -7340033, !dbg !6601
  store i32 %and26, i32* %t2, align 4, !dbg !6599
  %33 = load i8, i8* %suspending.addr, align 1, !dbg !6602
  %tobool27 = trunc i8 %33 to i1, !dbg !6602
  br i1 %tobool27, label %if.end34, label %if.then28, !dbg !6604

if.then28:                                        ; preds = %while.body20
  %34 = load i32, i32* %t1, align 4, !dbg !6605
  %and29 = and i32 %34, 1, !dbg !6608
  %tobool30 = icmp ne i32 %and29, 0, !dbg !6608
  br i1 %tobool30, label %if.then31, label %if.else, !dbg !6609

if.then31:                                        ; preds = %if.then28
  %35 = load i32, i32* %t2, align 4, !dbg !6610
  %or = or i32 %35, 6291456, !dbg !6610
  store i32 %or, i32* %t2, align 4, !dbg !6610
  br label %if.end33, !dbg !6611

if.else:                                          ; preds = %if.then28
  %36 = load i32, i32* %t2, align 4, !dbg !6612
  %or32 = or i32 %36, 5242880, !dbg !6612
  store i32 %or32, i32* %t2, align 4, !dbg !6612
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then31
  br label %if.end34, !dbg !6613

if.end34:                                         ; preds = %if.end33, %while.body20
  %37 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6614
  %38 = load i32, i32* %t2, align 4, !dbg !6615
  %39 = load i32*, i32** %reg, align 8, !dbg !6616
  call void @ehci_writel(%struct.ehci_hcd* %37, i32 %38, i32* %39) #11, !dbg !6617
  br label %while.cond17, !dbg !6583, !llvm.loop !6618

while.end35:                                      ; preds = %while.cond17
  %40 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6620
  %has_tdi_phy_lpm36 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %40, i32 0, i32 60, !dbg !6622
  %bf.load37 = load i8, i8* %has_tdi_phy_lpm36, align 8, !dbg !6622
  %bf.lshr38 = lshr i8 %bf.load37, 1, !dbg !6622
  %bf.clear39 = and i8 %bf.lshr38, 1, !dbg !6622
  %bf.cast40 = zext i8 %bf.clear39 to i32, !dbg !6622
  %tobool41 = icmp ne i32 %bf.cast40, 0, !dbg !6620
  br i1 %tobool41, label %if.then42, label %if.end58, !dbg !6623

if.then42:                                        ; preds = %while.end35
  %41 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6624
  %hcs_params43 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %41, i32 0, i32 10, !dbg !6624
  %42 = load i32, i32* %hcs_params43, align 8, !dbg !6624
  %shr44 = lshr i32 %42, 0, !dbg !6624
  %and45 = and i32 %shr44, 15, !dbg !6624
  store i32 %and45, i32* %port, align 4, !dbg !6626
  br label %while.cond46, !dbg !6627

while.cond46:                                     ; preds = %while.body49, %if.then42
  %43 = load i32, i32* %port, align 4, !dbg !6628
  %dec47 = add i32 %43, -1, !dbg !6628
  store i32 %dec47, i32* %port, align 4, !dbg !6628
  %tobool48 = icmp ne i32 %43, 0, !dbg !6627
  br i1 %tobool48, label %while.body49, label %while.end57, !dbg !6627

while.body49:                                     ; preds = %while.cond46
  call void @llvm.dbg.declare(metadata i32** %hostpc_reg50, metadata !6629, metadata !DIExpression()), !dbg !6631
  %44 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6632
  %regs51 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %44, i32 0, i32 8, !dbg !6633
  %45 = load %struct.ehci_regs*, %struct.ehci_regs** %regs51, align 8, !dbg !6633
  %hostpc52 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %45, i32 0, i32 15, !dbg !6634
  %46 = load i32, i32* %port, align 4, !dbg !6635
  %idxprom53 = sext i32 %46 to i64, !dbg !6632
  %arrayidx54 = getelementptr [0 x i32], [0 x i32]* %hostpc52, i64 0, i64 %idxprom53, !dbg !6632
  store i32* %arrayidx54, i32** %hostpc_reg50, align 8, !dbg !6631
  %47 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6636
  %48 = load i32*, i32** %hostpc_reg50, align 8, !dbg !6637
  %call55 = call i32 @ehci_readl(%struct.ehci_hcd* %47, i32* %48) #11, !dbg !6638
  store i32 %call55, i32* %temp, align 4, !dbg !6639
  %49 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6640
  %50 = load i32, i32* %temp, align 4, !dbg !6641
  %or56 = or i32 %50, 4194304, !dbg !6642
  %51 = load i32*, i32** %hostpc_reg50, align 8, !dbg !6643
  call void @ehci_writel(%struct.ehci_hcd* %49, i32 %or56, i32* %51) #11, !dbg !6644
  br label %while.cond46, !dbg !6627, !llvm.loop !6645

while.end57:                                      ; preds = %while.cond46
  br label %if.end58, !dbg !6647

if.end58:                                         ; preds = %while.end57, %while.end35
  %52 = load i8, i8* %suspending.addr, align 1, !dbg !6648
  %tobool59 = trunc i8 %52 to i1, !dbg !6648
  br i1 %tobool59, label %if.end64, label %land.lhs.true, !dbg !6650

land.lhs.true:                                    ; preds = %if.end58
  %53 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6651
  %call60 = call i32 @ehci_port_change(%struct.ehci_hcd* %53) #11, !dbg !6652
  %tobool61 = icmp ne i32 %call60, 0, !dbg !6652
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !6653

if.then62:                                        ; preds = %land.lhs.true
  %54 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6654
  %call63 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %54) #11, !dbg !6655
  call void @usb_hcd_resume_root_hub(%struct.usb_hcd* %call63) #11, !dbg !6656
  br label %if.end64, !dbg !6656

if.end64:                                         ; preds = %if.then62, %land.lhs.true, %if.end58
  %55 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6657
  %lock65 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %55, i32 0, i32 11, !dbg !6658
  store %struct.spinlock* %lock65, %struct.spinlock** %lock.addr.i70, align 8
  call void @arch_local_irq_enable() #12, !dbg !6659
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6660, !srcloc !6571
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i70, align 8, !dbg !6661
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !6661
  %rlock.i71 = bitcast %union.anon.0* %57 to %struct.raw_spinlock*, !dbg !6661
  br label %return, !dbg !6662

return:                                           ; preds = %if.end64, %if.then
  ret void, !dbg !6662
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_port_change(%struct.ehci_hcd* %ehci) #0 !dbg !6663 {
entry:
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %i = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !6664, metadata !DIExpression()), !dbg !6665
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6666, metadata !DIExpression()), !dbg !6667
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6668
  %hcs_params = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 10, !dbg !6668
  %1 = load i32, i32* %hcs_params, align 8, !dbg !6668
  %shr = lshr i32 %1, 0, !dbg !6668
  %and = and i32 %shr, 15, !dbg !6668
  store i32 %and, i32* %i, align 4, !dbg !6667
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6669
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6671
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 8, !dbg !6672
  %4 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !6672
  %status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %4, i32 0, i32 1, !dbg !6673
  %call = call i32 @ehci_readl(%struct.ehci_hcd* %2, i32* %status) #11, !dbg !6674
  %and1 = and i32 %call, 4, !dbg !6675
  %tobool = icmp ne i32 %and1, 0, !dbg !6675
  br i1 %tobool, label %if.then, label %if.end, !dbg !6676

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !6677
  br label %return, !dbg !6677

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !6678

while.cond:                                       ; preds = %if.end8, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !6679
  %dec = add i32 %5, -1, !dbg !6679
  store i32 %dec, i32* %i, align 4, !dbg !6679
  %tobool2 = icmp ne i32 %5, 0, !dbg !6678
  br i1 %tobool2, label %while.body, label %while.end, !dbg !6678

while.body:                                       ; preds = %while.cond
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6680
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !6682
  %regs3 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 8, !dbg !6683
  %8 = load %struct.ehci_regs*, %struct.ehci_regs** %regs3, align 8, !dbg !6683
  %port_status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %8, i32 0, i32 11, !dbg !6684
  %9 = load i32, i32* %i, align 4, !dbg !6685
  %idxprom = sext i32 %9 to i64, !dbg !6682
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %port_status, i64 0, i64 %idxprom, !dbg !6682
  %call4 = call i32 @ehci_readl(%struct.ehci_hcd* %6, i32* %arrayidx) #11, !dbg !6686
  %and5 = and i32 %call4, 2, !dbg !6687
  %tobool6 = icmp ne i32 %and5, 0, !dbg !6687
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !6688

if.then7:                                         ; preds = %while.body
  store i32 1, i32* %retval, align 4, !dbg !6689
  br label %return, !dbg !6689

if.end8:                                          ; preds = %while.body
  br label %while.cond, !dbg !6678, !llvm.loop !6690

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !6692
  br label %return, !dbg !6692

return:                                           ; preds = %while.end, %if.then7, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !6693
  ret i32 %10, !dbg !6693
}

; Function Attrs: noredzone
declare dso_local void @usb_hcd_resume_root_hub(%struct.usb_hcd*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ehci_hub_control(%struct.usb_hcd* %hcd, i16 zeroext %typeReq, i16 zeroext %wValue, i16 zeroext %wIndex, i8* %buf, i16 zeroext %wLength) #0 !dbg !6694 {
entry:
  %lock.addr.i746 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i746, metadata !6695, metadata !DIExpression()), !dbg !6700
  %lock.addr.i741 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i741, metadata !6709, metadata !DIExpression()), !dbg !6713
  %flags.addr.i742 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i742, metadata !6715, metadata !DIExpression()), !dbg !6716
  %tmp.i743 = alloca i32, align 4
  %tmp8.i744 = alloca i32, align 4
  %lock.addr.i739 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i739, metadata !6695, metadata !DIExpression()), !dbg !6717
  %lock.addr.i734 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i734, metadata !6709, metadata !DIExpression()), !dbg !6724
  %flags.addr.i735 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i735, metadata !6715, metadata !DIExpression()), !dbg !6726
  %tmp.i736 = alloca i32, align 4
  %tmp8.i737 = alloca i32, align 4
  %retval.i724 = alloca i64, align 8
  %m.addr.i725 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i725, metadata !6727, metadata !DIExpression()), !dbg !6732
  %lock.addr.i722 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i722, metadata !6695, metadata !DIExpression()), !dbg !6736
  %lock.addr.i717 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i717, metadata !6709, metadata !DIExpression()), !dbg !6745
  %flags.addr.i718 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i718, metadata !6715, metadata !DIExpression()), !dbg !6747
  %tmp.i719 = alloca i32, align 4
  %tmp8.i720 = alloca i32, align 4
  %lock.addr.i715 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i715, metadata !6695, metadata !DIExpression()), !dbg !6748
  %lock.addr.i710 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i710, metadata !6709, metadata !DIExpression()), !dbg !6757
  %flags.addr.i711 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i711, metadata !6715, metadata !DIExpression()), !dbg !6759
  %tmp.i712 = alloca i32, align 4
  %tmp8.i713 = alloca i32, align 4
  %lock.addr.i708 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i708, metadata !6695, metadata !DIExpression()), !dbg !6760
  %lock.addr.i703 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i703, metadata !6709, metadata !DIExpression()), !dbg !6769
  %flags.addr.i704 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i704, metadata !6715, metadata !DIExpression()), !dbg !6771
  %tmp.i705 = alloca i32, align 4
  %tmp8.i706 = alloca i32, align 4
  %val.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr.i, metadata !6772, metadata !DIExpression()), !dbg !6777
  %p.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr.i, metadata !6779, metadata !DIExpression()), !dbg !6780
  %retval.i693 = alloca i64, align 8
  %m.addr.i694 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i694, metadata !6727, metadata !DIExpression()), !dbg !6781
  %lock.addr.i691 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i691, metadata !6695, metadata !DIExpression()), !dbg !6787
  %lock.addr.i686 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i686, metadata !6709, metadata !DIExpression()), !dbg !6798
  %flags.addr.i687 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i687, metadata !6715, metadata !DIExpression()), !dbg !6800
  %tmp.i688 = alloca i32, align 4
  %tmp8.i689 = alloca i32, align 4
  %lock.addr.i684 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i684, metadata !6695, metadata !DIExpression()), !dbg !6801
  %lock.addr.i679 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i679, metadata !6709, metadata !DIExpression()), !dbg !6811
  %flags.addr.i680 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i680, metadata !6715, metadata !DIExpression()), !dbg !6813
  %tmp.i681 = alloca i32, align 4
  %tmp8.i682 = alloca i32, align 4
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !6727, metadata !DIExpression()), !dbg !6814
  %lock.addr.i677 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i677, metadata !6695, metadata !DIExpression()), !dbg !6816
  %lock.addr.i672 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i672, metadata !6709, metadata !DIExpression()), !dbg !6825
  %flags.addr.i673 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i673, metadata !6715, metadata !DIExpression()), !dbg !6827
  %tmp.i674 = alloca i32, align 4
  %tmp8.i675 = alloca i32, align 4
  %lock.addr.i670 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i670, metadata !6709, metadata !DIExpression()), !dbg !6828
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !6830
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !6831
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %typeReq.addr = alloca i16, align 2
  %wValue.addr = alloca i16, align 2
  %wIndex.addr = alloca i16, align 2
  %buf.addr = alloca i8*, align 8
  %wLength.addr = alloca i16, align 2
  %ehci = alloca %struct.ehci_hcd*, align 8
  %ports = alloca i32, align 4
  %status_reg = alloca i32*, align 8
  %hostpc_reg = alloca i32*, align 8
  %temp = alloca i32, align 4
  %temp1 = alloca i32, align 4
  %status = alloca i32, align 4
  %flags = alloca i64, align 8
  %retval1 = alloca i32, align 4
  %selector = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  %__dummy68 = alloca i64, align 8
  %__dummy269 = alloca i64, align 8
  %tmp72 = alloca i32, align 4
  %__dummy76 = alloca i64, align 8
  %__dummy277 = alloca i64, align 8
  %tmp80 = alloca i32, align 4
  %__dummy113 = alloca i64, align 8
  %__dummy2114 = alloca i64, align 8
  %tmp117 = alloca i32, align 4
  %__dummy121 = alloca i64, align 8
  %__dummy2122 = alloca i64, align 8
  %tmp125 = alloca i32, align 4
  %__dummy193 = alloca i64, align 8
  %__dummy2194 = alloca i64, align 8
  %tmp197 = alloca i32, align 4
  %__dummy201 = alloca i64, align 8
  %__dummy2202 = alloca i64, align 8
  %tmp205 = alloca i32, align 4
  %__dummy458 = alloca i64, align 8
  %__dummy2459 = alloca i64, align 8
  %tmp462 = alloca i32, align 4
  %__dummy466 = alloca i64, align 8
  %__dummy2467 = alloca i64, align 8
  %tmp470 = alloca i32, align 4
  %__dummy496 = alloca i64, align 8
  %__dummy2497 = alloca i64, align 8
  %tmp500 = alloca i32, align 4
  %__dummy504 = alloca i64, align 8
  %__dummy2505 = alloca i64, align 8
  %tmp508 = alloca i32, align 4
  %__dummy534 = alloca i64, align 8
  %__dummy2535 = alloca i64, align 8
  %tmp538 = alloca i32, align 4
  %__dummy542 = alloca i64, align 8
  %__dummy2543 = alloca i64, align 8
  %tmp546 = alloca i32, align 4
  %__dummy593 = alloca i64, align 8
  %__dummy2594 = alloca i64, align 8
  %tmp597 = alloca i32, align 4
  %__dummy601 = alloca i64, align 8
  %__dummy2602 = alloca i64, align 8
  %tmp605 = alloca i32, align 4
  %sreg = alloca i32*, align 8
  %__dummy635 = alloca i64, align 8
  %__dummy2636 = alloca i64, align 8
  %tmp639 = alloca i32, align 4
  %__dummy643 = alloca i64, align 8
  %__dummy2644 = alloca i64, align 8
  %tmp647 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !6838, metadata !DIExpression()), !dbg !6839
  store i16 %typeReq, i16* %typeReq.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %typeReq.addr, metadata !6840, metadata !DIExpression()), !dbg !6841
  store i16 %wValue, i16* %wValue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %wValue.addr, metadata !6842, metadata !DIExpression()), !dbg !6843
  store i16 %wIndex, i16* %wIndex.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %wIndex.addr, metadata !6844, metadata !DIExpression()), !dbg !6845
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6846, metadata !DIExpression()), !dbg !6847
  store i16 %wLength, i16* %wLength.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %wLength.addr, metadata !6848, metadata !DIExpression()), !dbg !6849
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !6850, metadata !DIExpression()), !dbg !6851
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !6852
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !6853
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !6851
  call void @llvm.dbg.declare(metadata i32* %ports, metadata !6854, metadata !DIExpression()), !dbg !6855
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !6856
  %hcs_params = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 10, !dbg !6856
  %2 = load i32, i32* %hcs_params, align 8, !dbg !6856
  %shr = lshr i32 %2, 0, !dbg !6856
  %and = and i32 %shr, 15, !dbg !6856
  store i32 %and, i32* %ports, align 4, !dbg !6855
  call void @llvm.dbg.declare(metadata i32** %status_reg, metadata !6857, metadata !DIExpression()), !dbg !6858
  call void @llvm.dbg.declare(metadata i32** %hostpc_reg, metadata !6859, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !6861, metadata !DIExpression()), !dbg !6862
  call void @llvm.dbg.declare(metadata i32* %temp1, metadata !6863, metadata !DIExpression()), !dbg !6864
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6865, metadata !DIExpression()), !dbg !6866
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6867, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !6869, metadata !DIExpression()), !dbg !6870
  store i32 0, i32* %retval1, align 4, !dbg !6870
  call void @llvm.dbg.declare(metadata i32* %selector, metadata !6871, metadata !DIExpression()), !dbg !6872
  %3 = load i16, i16* %wIndex.addr, align 2, !dbg !6873
  %conv = zext i16 %3 to i32, !dbg !6873
  %and2 = and i32 %conv, 255, !dbg !6874
  store i32 %and2, i32* %temp, align 4, !dbg !6875
  %4 = load i32, i32* %temp, align 4, !dbg !6876
  %cmp = icmp ugt i32 %4, 0, !dbg !6877
  %conv3 = zext i1 %cmp to i32, !dbg !6877
  %5 = load i32, i32* %temp, align 4, !dbg !6878
  %sub = sub i32 %5, %conv3, !dbg !6878
  store i32 %sub, i32* %temp, align 4, !dbg !6878
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !6879
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 8, !dbg !6880
  %7 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !6880
  %port_status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %7, i32 0, i32 11, !dbg !6881
  %8 = load i32, i32* %temp, align 4, !dbg !6882
  %idxprom = zext i32 %8 to i64, !dbg !6879
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %port_status, i64 0, i64 %idxprom, !dbg !6879
  store i32* %arrayidx, i32** %status_reg, align 8, !dbg !6883
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !6884
  %regs4 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %9, i32 0, i32 8, !dbg !6885
  %10 = load %struct.ehci_regs*, %struct.ehci_regs** %regs4, align 8, !dbg !6885
  %hostpc = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %10, i32 0, i32 15, !dbg !6886
  %11 = load i32, i32* %temp, align 4, !dbg !6887
  %idxprom5 = zext i32 %11 to i64, !dbg !6884
  %arrayidx6 = getelementptr [0 x i32], [0 x i32]* %hostpc, i64 0, i64 %idxprom5, !dbg !6884
  store i32* %arrayidx6, i32** %hostpc_reg, align 8, !dbg !6888
  br label %do.body, !dbg !6889

do.body:                                          ; preds = %entry
  br label %do.body7, !dbg !6890

do.body7:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6891, metadata !DIExpression()), !dbg !6893
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6894, metadata !DIExpression()), !dbg !6893
  %cmp8 = icmp eq i64* %__dummy, %__dummy2, !dbg !6893
  %conv9 = zext i1 %cmp8 to i32, !dbg !6893
  store i32 1, i32* %tmp, align 4, !dbg !6893
  %12 = load i32, i32* %tmp, align 4, !dbg !6893
  br label %do.body10, !dbg !6895

do.body10:                                        ; preds = %do.body7
  br label %do.body11, !dbg !6896

do.body11:                                        ; preds = %do.body10
  br label %do.body12, !dbg !6897

do.body12:                                        ; preds = %do.body11
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !6899, metadata !DIExpression()), !dbg !6902
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !6903, metadata !DIExpression()), !dbg !6902
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !6902
  %conv16 = zext i1 %cmp15 to i32, !dbg !6902
  store i32 1, i32* %tmp17, align 4, !dbg !6902
  %13 = load i32, i32* %tmp17, align 4, !dbg !6902
  %call18 = call i64 @arch_local_irq_save() #11, !dbg !6904
  store i64 %call18, i64* %flags, align 8, !dbg !6904
  br label %do.end, !dbg !6904

do.end:                                           ; preds = %do.body12
  br label %do.end19, !dbg !6897

do.end19:                                         ; preds = %do.end
  br label %do.body20, !dbg !6896

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6905, !srcloc !6906
  br label %do.body21, !dbg !6905

do.body21:                                        ; preds = %do.body20
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !6907
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 11, !dbg !6907
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6908
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !6909
  %rlock.i = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !6909
  br label %do.end23, !dbg !6907

do.end23:                                         ; preds = %do.body21
  br label %do.end24, !dbg !6905

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !6896

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !6895

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !6890

do.end27:                                         ; preds = %do.end26
  %17 = load i16, i16* %typeReq.addr, align 2, !dbg !6910
  %conv28 = zext i16 %17 to i32, !dbg !6910
  switch i32 %conv28, label %sw.default667 [
    i32 8193, label %sw.bb
    i32 8961, label %sw.bb31
    i32 40966, label %sw.bb148
    i32 40960, label %sw.bb149
    i32 41728, label %sw.bb150
    i32 8195, label %sw.bb383
    i32 8963, label %sw.bb388
  ], !dbg !6911

sw.bb:                                            ; preds = %do.end27
  %18 = load i16, i16* %wValue.addr, align 2, !dbg !6912
  %conv29 = zext i16 %18 to i32, !dbg !6912
  switch i32 %conv29, label %sw.default [
    i32 0, label %sw.bb30
    i32 1, label %sw.bb30
  ], !dbg !6913

sw.bb30:                                          ; preds = %sw.bb, %sw.bb
  br label %sw.epilog, !dbg !6914

sw.default:                                       ; preds = %sw.bb
  br label %error, !dbg !6916

sw.epilog:                                        ; preds = %sw.bb30
  br label %sw.epilog668, !dbg !6917

sw.bb31:                                          ; preds = %do.end27
  %19 = load i16, i16* %wIndex.addr, align 2, !dbg !6918
  %tobool = icmp ne i16 %19, 0, !dbg !6918
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6920

lor.lhs.false:                                    ; preds = %sw.bb31
  %20 = load i16, i16* %wIndex.addr, align 2, !dbg !6921
  %conv32 = zext i16 %20 to i32, !dbg !6921
  %21 = load i32, i32* %ports, align 4, !dbg !6922
  %cmp33 = icmp sgt i32 %conv32, %21, !dbg !6923
  br i1 %cmp33, label %if.then, label %if.end, !dbg !6924

if.then:                                          ; preds = %lor.lhs.false, %sw.bb31
  br label %error, !dbg !6925

if.end:                                           ; preds = %lor.lhs.false
  %22 = load i16, i16* %wIndex.addr, align 2, !dbg !6926
  %dec = add i16 %22, -1, !dbg !6926
  store i16 %dec, i16* %wIndex.addr, align 2, !dbg !6926
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !6927
  %24 = load i32*, i32** %status_reg, align 8, !dbg !6928
  %call35 = call i32 @ehci_readl(%struct.ehci_hcd* %23, i32* %24) #11, !dbg !6929
  store i32 %call35, i32* %temp, align 4, !dbg !6930
  %25 = load i32, i32* %temp, align 4, !dbg !6931
  %and36 = and i32 %25, -43, !dbg !6931
  store i32 %and36, i32* %temp, align 4, !dbg !6931
  %26 = load i16, i16* %wValue.addr, align 2, !dbg !6932
  %conv37 = zext i16 %26 to i32, !dbg !6932
  switch i32 %conv37, label %sw.default144 [
    i32 1, label %sw.bb38
    i32 17, label %sw.bb40
    i32 2, label %sw.bb41
    i32 18, label %sw.bb101
    i32 8, label %sw.bb103
    i32 16, label %sw.bb139
    i32 19, label %sw.bb141
    i32 20, label %sw.bb143
  ], !dbg !6933

sw.bb38:                                          ; preds = %if.end
  %27 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !6934
  %28 = load i32, i32* %temp, align 4, !dbg !6935
  %and39 = and i32 %28, -5, !dbg !6936
  %29 = load i32*, i32** %status_reg, align 8, !dbg !6937
  call void @ehci_writel(%struct.ehci_hcd* %27, i32 %and39, i32* %29) #11, !dbg !6938
  br label %sw.epilog145, !dbg !6939

sw.bb40:                                          ; preds = %if.end
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !6940
  %31 = load i32, i32* %temp, align 4, !dbg !6941
  %or = or i32 %31, 8, !dbg !6942
  %32 = load i32*, i32** %status_reg, align 8, !dbg !6943
  call void @ehci_writel(%struct.ehci_hcd* %30, i32 %or, i32* %32) #11, !dbg !6944
  br label %sw.epilog145, !dbg !6945

sw.bb41:                                          ; preds = %if.end
  %33 = load i32, i32* %temp, align 4, !dbg !6946
  %and42 = and i32 %33, 256, !dbg !6948
  %tobool43 = icmp ne i32 %and42, 0, !dbg !6948
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !6949

if.then44:                                        ; preds = %sw.bb41
  br label %error, !dbg !6950

if.end45:                                         ; preds = %sw.bb41
  %34 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !6951
  %no_selective_suspend = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %34, i32 0, i32 58, !dbg !6953
  %bf.load = load i16, i16* %no_selective_suspend, align 4, !dbg !6953
  %bf.clear = and i16 %bf.load, 1, !dbg !6953
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6953
  %tobool46 = icmp ne i32 %bf.cast, 0, !dbg !6951
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !6954

if.then47:                                        ; preds = %if.end45
  br label %sw.epilog145, !dbg !6955

if.end48:                                         ; preds = %if.end45
  %35 = load i32, i32* %temp, align 4, !dbg !6956
  %and49 = and i32 %35, 128, !dbg !6958
  %tobool50 = icmp ne i32 %and49, 0, !dbg !6958
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !6959

if.then51:                                        ; preds = %if.end48
  br label %sw.epilog145, !dbg !6960

if.end52:                                         ; preds = %if.end48
  %36 = load i32, i32* %temp, align 4, !dbg !6961
  %and53 = and i32 %36, 4, !dbg !6963
  %cmp54 = icmp eq i32 %and53, 0, !dbg !6964
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !6965

if.then56:                                        ; preds = %if.end52
  br label %error, !dbg !6966

if.end57:                                         ; preds = %if.end52
  %37 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !6967
  %has_tdi_phy_lpm = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %37, i32 0, i32 60, !dbg !6968
  %bf.load58 = load i8, i8* %has_tdi_phy_lpm, align 8, !dbg !6968
  %bf.lshr = lshr i8 %bf.load58, 1, !dbg !6968
  %bf.clear59 = and i8 %bf.lshr, 1, !dbg !6968
  %bf.cast60 = zext i8 %bf.clear59 to i32, !dbg !6968
  %tobool61 = icmp ne i32 %bf.cast60, 0, !dbg !6967
  br i1 %tobool61, label %if.then62, label %if.end93, !dbg !6969

if.then62:                                        ; preds = %if.end57
  %38 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !6970
  %39 = load i32*, i32** %hostpc_reg, align 8, !dbg !6971
  %call63 = call i32 @ehci_readl(%struct.ehci_hcd* %38, i32* %39) #11, !dbg !6972
  store i32 %call63, i32* %temp1, align 4, !dbg !6973
  %40 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !6974
  %41 = load i32, i32* %temp1, align 4, !dbg !6975
  %and64 = and i32 %41, -4194305, !dbg !6976
  %42 = load i32*, i32** %hostpc_reg, align 8, !dbg !6977
  call void @ehci_writel(%struct.ehci_hcd* %40, i32 %and64, i32* %42) #11, !dbg !6978
  %43 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !6979
  %lock65 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %43, i32 0, i32 11, !dbg !6980
  %44 = load i64, i64* %flags, align 8, !dbg !6981
  store %struct.spinlock* %lock65, %struct.spinlock** %lock.addr.i672, align 8
  store i64 %44, i64* %flags.addr.i673, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !6985
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !6985
  store i32 1, i32* %tmp.i674, align 4, !dbg !6985
  %45 = load i32, i32* %tmp.i674, align 4, !dbg !6985
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !6992
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !6992
  store i32 1, i32* %tmp8.i675, align 4, !dbg !6992
  %46 = load i32, i32* %tmp8.i675, align 4, !dbg !6992
  %47 = load i64, i64* %flags.addr.i673, align 8, !dbg !6994
  call void @arch_local_irq_restore(i64 %47) #12, !dbg !6994
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6995, !srcloc !6997
  %48 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i672, align 8, !dbg !6998
  %49 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %48, i32 0, i32 0, !dbg !6998
  %rlock.i676 = bitcast %union.anon.0* %49 to %struct.raw_spinlock*, !dbg !6998
  call void @msleep(i32 5) #11, !dbg !7000
  br label %do.body66, !dbg !7001

do.body66:                                        ; preds = %if.then62
  br label %do.body67, !dbg !7002

do.body67:                                        ; preds = %do.body66
  call void @llvm.dbg.declare(metadata i64* %__dummy68, metadata !7003, metadata !DIExpression()), !dbg !7005
  call void @llvm.dbg.declare(metadata i64* %__dummy269, metadata !7006, metadata !DIExpression()), !dbg !7005
  %cmp70 = icmp eq i64* %__dummy68, %__dummy269, !dbg !7005
  %conv71 = zext i1 %cmp70 to i32, !dbg !7005
  store i32 1, i32* %tmp72, align 4, !dbg !7005
  %50 = load i32, i32* %tmp72, align 4, !dbg !7005
  br label %do.body73, !dbg !7007

do.body73:                                        ; preds = %do.body67
  br label %do.body74, !dbg !7008

do.body74:                                        ; preds = %do.body73
  br label %do.body75, !dbg !7009

do.body75:                                        ; preds = %do.body74
  call void @llvm.dbg.declare(metadata i64* %__dummy76, metadata !7011, metadata !DIExpression()), !dbg !7014
  call void @llvm.dbg.declare(metadata i64* %__dummy277, metadata !7015, metadata !DIExpression()), !dbg !7014
  %cmp78 = icmp eq i64* %__dummy76, %__dummy277, !dbg !7014
  %conv79 = zext i1 %cmp78 to i32, !dbg !7014
  store i32 1, i32* %tmp80, align 4, !dbg !7014
  %51 = load i32, i32* %tmp80, align 4, !dbg !7014
  %call81 = call i64 @arch_local_irq_save() #11, !dbg !7016
  store i64 %call81, i64* %flags, align 8, !dbg !7016
  br label %do.end82, !dbg !7016

do.end82:                                         ; preds = %do.body75
  br label %do.end83, !dbg !7009

do.end83:                                         ; preds = %do.end82
  br label %do.body84, !dbg !7008

do.body84:                                        ; preds = %do.end83
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7017, !srcloc !7018
  br label %do.body85, !dbg !7017

do.body85:                                        ; preds = %do.body84
  %52 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7019
  %lock86 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %52, i32 0, i32 11, !dbg !7019
  store %struct.spinlock* %lock86, %struct.spinlock** %lock.addr.i677, align 8
  %53 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i677, align 8, !dbg !7020
  %54 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %53, i32 0, i32 0, !dbg !7021
  %rlock.i678 = bitcast %union.anon.0* %54 to %struct.raw_spinlock*, !dbg !7021
  br label %do.end88, !dbg !7019

do.end88:                                         ; preds = %do.body85
  br label %do.end89, !dbg !7017

do.end89:                                         ; preds = %do.end88
  br label %do.end90, !dbg !7008

do.end90:                                         ; preds = %do.end89
  br label %do.end91, !dbg !7007

do.end91:                                         ; preds = %do.end90
  br label %do.end92, !dbg !7002

do.end92:                                         ; preds = %do.end91
  br label %if.end93, !dbg !7022

if.end93:                                         ; preds = %do.end92, %if.end57
  %55 = load i32, i32* %temp, align 4, !dbg !7023
  %and94 = and i32 %55, -7340033, !dbg !7023
  store i32 %and94, i32* %temp, align 4, !dbg !7023
  %56 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7024
  %57 = load i32, i32* %temp, align 4, !dbg !7025
  %or95 = or i32 %57, 64, !dbg !7026
  %58 = load i32*, i32** %status_reg, align 8, !dbg !7027
  call void @ehci_writel(%struct.ehci_hcd* %56, i32 %or95, i32* %58) #11, !dbg !7028
  %59 = load volatile i64, i64* @jiffies, align 8, !dbg !7029
  store i32 40, i32* %m.addr.i, align 4
  %60 = load i32, i32* %m.addr.i, align 4, !dbg !7030
  %61 = call i1 @llvm.is.constant.i32(i32 %60) #7, !dbg !7032
  br i1 %61, label %if.then.i, label %if.else.i, !dbg !7033

if.then.i:                                        ; preds = %if.end93
  %62 = load i32, i32* %m.addr.i, align 4, !dbg !7034
  %cmp.i = icmp slt i32 %62, 0, !dbg !7037
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7038

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !7039
  br label %msecs_to_jiffies.exit, !dbg !7039

if.end.i:                                         ; preds = %if.then.i
  %63 = load i32, i32* %m.addr.i, align 4, !dbg !7040
  %call.i = call i64 @_msecs_to_jiffies(i32 %63) #12, !dbg !7041
  store i64 %call.i, i64* %retval.i, align 8, !dbg !7042
  br label %msecs_to_jiffies.exit, !dbg !7042

if.else.i:                                        ; preds = %if.end93
  %64 = load i32, i32* %m.addr.i, align 4, !dbg !7043
  %call2.i = call i64 @__msecs_to_jiffies(i32 %64) #12, !dbg !7045
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !7046
  br label %msecs_to_jiffies.exit, !dbg !7046

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %65 = load i64, i64* %retval.i, align 8, !dbg !7047
  %add = add i64 %59, %65, !dbg !7048
  %66 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7049
  %reset_done = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %66, i32 0, i32 43, !dbg !7050
  %67 = load i16, i16* %wIndex.addr, align 2, !dbg !7051
  %idxprom97 = zext i16 %67 to i64, !dbg !7049
  %arrayidx98 = getelementptr [15 x i64], [15 x i64]* %reset_done, i64 0, i64 %idxprom97, !dbg !7049
  store i64 %add, i64* %arrayidx98, align 8, !dbg !7052
  %68 = load i16, i16* %wIndex.addr, align 2, !dbg !7053
  %conv99 = zext i16 %68 to i64, !dbg !7053
  %69 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7054
  %resuming_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %69, i32 0, i32 49, !dbg !7055
  call void @set_bit(i64 %conv99, i64* %resuming_ports) #11, !dbg !7056
  %70 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !7057
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %70, i32 0, i32 0, !dbg !7058
  %71 = load i16, i16* %wIndex.addr, align 2, !dbg !7059
  %conv100 = zext i16 %71 to i32, !dbg !7059
  call void @usb_hcd_start_port_resume(%struct.usb_bus* %self, i32 %conv100) #11, !dbg !7060
  br label %sw.epilog145, !dbg !7061

sw.bb101:                                         ; preds = %if.end
  %72 = load i16, i16* %wIndex.addr, align 2, !dbg !7062
  %conv102 = zext i16 %72 to i64, !dbg !7062
  %73 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7063
  %port_c_suspend = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %73, i32 0, i32 47, !dbg !7064
  call void @clear_bit(i64 %conv102, i64* %port_c_suspend) #11, !dbg !7065
  br label %sw.epilog145, !dbg !7066

sw.bb103:                                         ; preds = %if.end
  %74 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7067
  %hcs_params104 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %74, i32 0, i32 10, !dbg !7067
  %75 = load i32, i32* %hcs_params104, align 8, !dbg !7067
  %and105 = and i32 %75, 16, !dbg !7067
  %tobool106 = icmp ne i32 %and105, 0, !dbg !7067
  br i1 %tobool106, label %if.then107, label %if.end138, !dbg !7068

if.then107:                                       ; preds = %sw.bb103
  %76 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7069
  %lock108 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %76, i32 0, i32 11, !dbg !7070
  %77 = load i64, i64* %flags, align 8, !dbg !7071
  store %struct.spinlock* %lock108, %struct.spinlock** %lock.addr.i679, align 8
  store i64 %77, i64* %flags.addr.i680, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !7072
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !7072
  store i32 1, i32* %tmp.i681, align 4, !dbg !7072
  %78 = load i32, i32* %tmp.i681, align 4, !dbg !7072
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !7073
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !7073
  store i32 1, i32* %tmp8.i682, align 4, !dbg !7073
  %79 = load i32, i32* %tmp8.i682, align 4, !dbg !7073
  %80 = load i64, i64* %flags.addr.i680, align 8, !dbg !7074
  call void @arch_local_irq_restore(i64 %80) #12, !dbg !7074
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7075, !srcloc !6997
  %81 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i679, align 8, !dbg !7076
  %82 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %81, i32 0, i32 0, !dbg !7076
  %rlock.i683 = bitcast %union.anon.0* %82 to %struct.raw_spinlock*, !dbg !7076
  %83 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7077
  %84 = load i16, i16* %wIndex.addr, align 2, !dbg !7078
  %conv109 = zext i16 %84 to i32, !dbg !7078
  %call110 = call i32 @ehci_port_power(%struct.ehci_hcd* %83, i32 %conv109, i1 zeroext false) #11, !dbg !7079
  br label %do.body111, !dbg !7080

do.body111:                                       ; preds = %if.then107
  br label %do.body112, !dbg !7081

do.body112:                                       ; preds = %do.body111
  call void @llvm.dbg.declare(metadata i64* %__dummy113, metadata !7082, metadata !DIExpression()), !dbg !7084
  call void @llvm.dbg.declare(metadata i64* %__dummy2114, metadata !7085, metadata !DIExpression()), !dbg !7084
  %cmp115 = icmp eq i64* %__dummy113, %__dummy2114, !dbg !7084
  %conv116 = zext i1 %cmp115 to i32, !dbg !7084
  store i32 1, i32* %tmp117, align 4, !dbg !7084
  %85 = load i32, i32* %tmp117, align 4, !dbg !7084
  br label %do.body118, !dbg !7086

do.body118:                                       ; preds = %do.body112
  br label %do.body119, !dbg !7087

do.body119:                                       ; preds = %do.body118
  br label %do.body120, !dbg !7088

do.body120:                                       ; preds = %do.body119
  call void @llvm.dbg.declare(metadata i64* %__dummy121, metadata !7090, metadata !DIExpression()), !dbg !7093
  call void @llvm.dbg.declare(metadata i64* %__dummy2122, metadata !7094, metadata !DIExpression()), !dbg !7093
  %cmp123 = icmp eq i64* %__dummy121, %__dummy2122, !dbg !7093
  %conv124 = zext i1 %cmp123 to i32, !dbg !7093
  store i32 1, i32* %tmp125, align 4, !dbg !7093
  %86 = load i32, i32* %tmp125, align 4, !dbg !7093
  %call126 = call i64 @arch_local_irq_save() #11, !dbg !7095
  store i64 %call126, i64* %flags, align 8, !dbg !7095
  br label %do.end127, !dbg !7095

do.end127:                                        ; preds = %do.body120
  br label %do.end128, !dbg !7088

do.end128:                                        ; preds = %do.end127
  br label %do.body129, !dbg !7087

do.body129:                                       ; preds = %do.end128
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7096, !srcloc !7097
  br label %do.body130, !dbg !7096

do.body130:                                       ; preds = %do.body129
  %87 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7098
  %lock131 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %87, i32 0, i32 11, !dbg !7098
  store %struct.spinlock* %lock131, %struct.spinlock** %lock.addr.i684, align 8
  %88 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i684, align 8, !dbg !7099
  %89 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %88, i32 0, i32 0, !dbg !7100
  %rlock.i685 = bitcast %union.anon.0* %89 to %struct.raw_spinlock*, !dbg !7100
  br label %do.end133, !dbg !7098

do.end133:                                        ; preds = %do.body130
  br label %do.end134, !dbg !7096

do.end134:                                        ; preds = %do.end133
  br label %do.end135, !dbg !7087

do.end135:                                        ; preds = %do.end134
  br label %do.end136, !dbg !7086

do.end136:                                        ; preds = %do.end135
  br label %do.end137, !dbg !7081

do.end137:                                        ; preds = %do.end136
  br label %if.end138, !dbg !7101

if.end138:                                        ; preds = %do.end137, %sw.bb103
  br label %sw.epilog145, !dbg !7102

sw.bb139:                                         ; preds = %if.end
  %90 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7103
  %91 = load i32, i32* %temp, align 4, !dbg !7104
  %or140 = or i32 %91, 2, !dbg !7105
  %92 = load i32*, i32** %status_reg, align 8, !dbg !7106
  call void @ehci_writel(%struct.ehci_hcd* %90, i32 %or140, i32* %92) #11, !dbg !7107
  br label %sw.epilog145, !dbg !7108

sw.bb141:                                         ; preds = %if.end
  %93 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7109
  %94 = load i32, i32* %temp, align 4, !dbg !7110
  %or142 = or i32 %94, 32, !dbg !7111
  %95 = load i32*, i32** %status_reg, align 8, !dbg !7112
  call void @ehci_writel(%struct.ehci_hcd* %93, i32 %or142, i32* %95) #11, !dbg !7113
  br label %sw.epilog145, !dbg !7114

sw.bb143:                                         ; preds = %if.end
  br label %sw.epilog145, !dbg !7115

sw.default144:                                    ; preds = %if.end
  br label %error, !dbg !7116

sw.epilog145:                                     ; preds = %sw.bb143, %sw.bb141, %sw.bb139, %if.end138, %sw.bb101, %msecs_to_jiffies.exit, %if.then51, %if.then47, %sw.bb40, %sw.bb38
  %96 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7117
  %97 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7118
  %regs146 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %97, i32 0, i32 8, !dbg !7119
  %98 = load %struct.ehci_regs*, %struct.ehci_regs** %regs146, align 8, !dbg !7119
  %command = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %98, i32 0, i32 0, !dbg !7120
  %call147 = call i32 @ehci_readl(%struct.ehci_hcd* %96, i32* %command) #11, !dbg !7121
  br label %sw.epilog668, !dbg !7122

sw.bb148:                                         ; preds = %do.end27
  %99 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7123
  %100 = load i8*, i8** %buf.addr, align 8, !dbg !7124
  %101 = bitcast i8* %100 to %struct.usb_hub_descriptor*, !dbg !7125
  call void @ehci_hub_descriptor(%struct.ehci_hcd* %99, %struct.usb_hub_descriptor* %101) #11, !dbg !7126
  br label %sw.epilog668, !dbg !7127

sw.bb149:                                         ; preds = %do.end27
  %102 = load i8*, i8** %buf.addr, align 8, !dbg !7128
  call void @llvm.memset.p0i8.i64(i8* align 1 %102, i8 0, i64 4, i1 false), !dbg !7129
  br label %sw.epilog668, !dbg !7130

sw.bb150:                                         ; preds = %do.end27
  %103 = load i16, i16* %wIndex.addr, align 2, !dbg !7131
  %tobool151 = icmp ne i16 %103, 0, !dbg !7131
  br i1 %tobool151, label %lor.lhs.false152, label %if.then156, !dbg !7133

lor.lhs.false152:                                 ; preds = %sw.bb150
  %104 = load i16, i16* %wIndex.addr, align 2, !dbg !7134
  %conv153 = zext i16 %104 to i32, !dbg !7134
  %105 = load i32, i32* %ports, align 4, !dbg !7135
  %cmp154 = icmp sgt i32 %conv153, %105, !dbg !7136
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !7137

if.then156:                                       ; preds = %lor.lhs.false152, %sw.bb150
  br label %error, !dbg !7138

if.end157:                                        ; preds = %lor.lhs.false152
  %106 = load i16, i16* %wIndex.addr, align 2, !dbg !7139
  %dec158 = add i16 %106, -1, !dbg !7139
  store i16 %dec158, i16* %wIndex.addr, align 2, !dbg !7139
  store i32 0, i32* %status, align 4, !dbg !7140
  %107 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7141
  %108 = load i32*, i32** %status_reg, align 8, !dbg !7142
  %call159 = call i32 @ehci_readl(%struct.ehci_hcd* %107, i32* %108) #11, !dbg !7143
  store i32 %call159, i32* %temp, align 4, !dbg !7144
  %109 = load i32, i32* %temp, align 4, !dbg !7145
  %and160 = and i32 %109, 2, !dbg !7147
  %tobool161 = icmp ne i32 %and160, 0, !dbg !7147
  br i1 %tobool161, label %if.then162, label %if.end164, !dbg !7148

if.then162:                                       ; preds = %if.end157
  %110 = load i32, i32* %status, align 4, !dbg !7149
  %or163 = or i32 %110, 65536, !dbg !7149
  store i32 %or163, i32* %status, align 4, !dbg !7149
  br label %if.end164, !dbg !7150

if.end164:                                        ; preds = %if.then162, %if.end157
  %111 = load i32, i32* %temp, align 4, !dbg !7151
  %and165 = and i32 %111, 8, !dbg !7153
  %tobool166 = icmp ne i32 %and165, 0, !dbg !7153
  br i1 %tobool166, label %if.then167, label %if.end169, !dbg !7154

if.then167:                                       ; preds = %if.end164
  %112 = load i32, i32* %status, align 4, !dbg !7155
  %or168 = or i32 %112, 131072, !dbg !7155
  store i32 %or168, i32* %status, align 4, !dbg !7155
  br label %if.end169, !dbg !7156

if.end169:                                        ; preds = %if.then167, %if.end164
  %113 = load i32, i32* %temp, align 4, !dbg !7157
  %and170 = and i32 %113, 32, !dbg !7158
  %tobool171 = icmp ne i32 %and170, 0, !dbg !7158
  br i1 %tobool171, label %land.lhs.true, label %if.end220, !dbg !7159

land.lhs.true:                                    ; preds = %if.end169
  %114 = load i8, i8* @ignore_oc, align 1, !dbg !7160
  %tobool172 = trunc i8 %114 to i1, !dbg !7160
  br i1 %tobool172, label %if.end220, label %if.then173, !dbg !7161

if.then173:                                       ; preds = %land.lhs.true
  %115 = load i32, i32* %status, align 4, !dbg !7162
  %or174 = or i32 %115, 524288, !dbg !7162
  store i32 %or174, i32* %status, align 4, !dbg !7162
  %116 = load i32, i32* %temp, align 4, !dbg !7163
  %and175 = and i32 %116, 16, !dbg !7164
  %tobool176 = icmp ne i32 %and175, 0, !dbg !7164
  br i1 %tobool176, label %land.lhs.true183, label %lor.lhs.false177, !dbg !7165

lor.lhs.false177:                                 ; preds = %if.then173
  %117 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7166
  %need_oc_pp_cycle = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %117, i32 0, i32 58, !dbg !7167
  %bf.load178 = load i16, i16* %need_oc_pp_cycle, align 4, !dbg !7167
  %bf.lshr179 = lshr i16 %bf.load178, 13, !dbg !7167
  %bf.clear180 = and i16 %bf.lshr179, 1, !dbg !7167
  %bf.cast181 = zext i16 %bf.clear180 to i32, !dbg !7167
  %tobool182 = icmp ne i32 %bf.cast181, 0, !dbg !7168
  br i1 %tobool182, label %land.lhs.true183, label %if.end219, !dbg !7169

land.lhs.true183:                                 ; preds = %lor.lhs.false177, %if.then173
  %118 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7170
  %hcs_params184 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %118, i32 0, i32 10, !dbg !7170
  %119 = load i32, i32* %hcs_params184, align 8, !dbg !7170
  %and185 = and i32 %119, 16, !dbg !7170
  %tobool186 = icmp ne i32 %and185, 0, !dbg !7170
  br i1 %tobool186, label %if.then187, label %if.end219, !dbg !7171

if.then187:                                       ; preds = %land.lhs.true183
  %120 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7172
  %lock188 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %120, i32 0, i32 11, !dbg !7173
  %121 = load i64, i64* %flags, align 8, !dbg !7174
  store %struct.spinlock* %lock188, %struct.spinlock** %lock.addr.i686, align 8
  store i64 %121, i64* %flags.addr.i687, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !7175
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !7175
  store i32 1, i32* %tmp.i688, align 4, !dbg !7175
  %122 = load i32, i32* %tmp.i688, align 4, !dbg !7175
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !7176
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !7176
  store i32 1, i32* %tmp8.i689, align 4, !dbg !7176
  %123 = load i32, i32* %tmp8.i689, align 4, !dbg !7176
  %124 = load i64, i64* %flags.addr.i687, align 8, !dbg !7177
  call void @arch_local_irq_restore(i64 %124) #12, !dbg !7177
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7178, !srcloc !6997
  %125 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i686, align 8, !dbg !7179
  %126 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %125, i32 0, i32 0, !dbg !7179
  %rlock.i690 = bitcast %union.anon.0* %126 to %struct.raw_spinlock*, !dbg !7179
  %127 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7180
  %128 = load i16, i16* %wIndex.addr, align 2, !dbg !7181
  %conv189 = zext i16 %128 to i32, !dbg !7181
  %call190 = call i32 @ehci_port_power(%struct.ehci_hcd* %127, i32 %conv189, i1 zeroext false) #11, !dbg !7182
  br label %do.body191, !dbg !7183

do.body191:                                       ; preds = %if.then187
  br label %do.body192, !dbg !7184

do.body192:                                       ; preds = %do.body191
  call void @llvm.dbg.declare(metadata i64* %__dummy193, metadata !7185, metadata !DIExpression()), !dbg !7187
  call void @llvm.dbg.declare(metadata i64* %__dummy2194, metadata !7188, metadata !DIExpression()), !dbg !7187
  %cmp195 = icmp eq i64* %__dummy193, %__dummy2194, !dbg !7187
  %conv196 = zext i1 %cmp195 to i32, !dbg !7187
  store i32 1, i32* %tmp197, align 4, !dbg !7187
  %129 = load i32, i32* %tmp197, align 4, !dbg !7187
  br label %do.body198, !dbg !7189

do.body198:                                       ; preds = %do.body192
  br label %do.body199, !dbg !7190

do.body199:                                       ; preds = %do.body198
  br label %do.body200, !dbg !7191

do.body200:                                       ; preds = %do.body199
  call void @llvm.dbg.declare(metadata i64* %__dummy201, metadata !7193, metadata !DIExpression()), !dbg !7196
  call void @llvm.dbg.declare(metadata i64* %__dummy2202, metadata !7197, metadata !DIExpression()), !dbg !7196
  %cmp203 = icmp eq i64* %__dummy201, %__dummy2202, !dbg !7196
  %conv204 = zext i1 %cmp203 to i32, !dbg !7196
  store i32 1, i32* %tmp205, align 4, !dbg !7196
  %130 = load i32, i32* %tmp205, align 4, !dbg !7196
  %call206 = call i64 @arch_local_irq_save() #11, !dbg !7198
  store i64 %call206, i64* %flags, align 8, !dbg !7198
  br label %do.end207, !dbg !7198

do.end207:                                        ; preds = %do.body200
  br label %do.end208, !dbg !7191

do.end208:                                        ; preds = %do.end207
  br label %do.body209, !dbg !7190

do.body209:                                       ; preds = %do.end208
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7199, !srcloc !7200
  br label %do.body210, !dbg !7199

do.body210:                                       ; preds = %do.body209
  %131 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7201
  %lock211 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %131, i32 0, i32 11, !dbg !7201
  store %struct.spinlock* %lock211, %struct.spinlock** %lock.addr.i691, align 8
  %132 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i691, align 8, !dbg !7202
  %133 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %132, i32 0, i32 0, !dbg !7203
  %rlock.i692 = bitcast %union.anon.0* %133 to %struct.raw_spinlock*, !dbg !7203
  br label %do.end213, !dbg !7201

do.end213:                                        ; preds = %do.body210
  br label %do.end214, !dbg !7199

do.end214:                                        ; preds = %do.end213
  br label %do.end215, !dbg !7190

do.end215:                                        ; preds = %do.end214
  br label %do.end216, !dbg !7189

do.end216:                                        ; preds = %do.end215
  br label %do.end217, !dbg !7184

do.end217:                                        ; preds = %do.end216
  %134 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7204
  %135 = load i32*, i32** %status_reg, align 8, !dbg !7205
  %call218 = call i32 @ehci_readl(%struct.ehci_hcd* %134, i32* %135) #11, !dbg !7206
  store i32 %call218, i32* %temp, align 4, !dbg !7207
  br label %if.end219, !dbg !7208

if.end219:                                        ; preds = %do.end217, %land.lhs.true183, %lor.lhs.false177
  br label %if.end220, !dbg !7209

if.end220:                                        ; preds = %if.end219, %land.lhs.true, %if.end169
  %136 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7210
  %reset_done221 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %136, i32 0, i32 43, !dbg !7211
  %137 = load i16, i16* %wIndex.addr, align 2, !dbg !7212
  %idxprom222 = zext i16 %137 to i64, !dbg !7210
  %arrayidx223 = getelementptr [15 x i64], [15 x i64]* %reset_done221, i64 0, i64 %idxprom222, !dbg !7210
  %138 = load i64, i64* %arrayidx223, align 8, !dbg !7210
  %tobool224 = icmp ne i64 %138, 0, !dbg !7210
  br i1 %tobool224, label %if.else, label %if.then225, !dbg !7213

if.then225:                                       ; preds = %if.end220
  %139 = load i32, i32* %temp, align 4, !dbg !7214
  %and226 = and i32 %139, 64, !dbg !7215
  %tobool227 = icmp ne i32 %and226, 0, !dbg !7215
  br i1 %tobool227, label %if.then228, label %if.end243, !dbg !7216

if.then228:                                       ; preds = %if.then225
  %140 = load volatile i64, i64* @jiffies, align 8, !dbg !7217
  store i32 20, i32* %m.addr.i694, align 4
  %141 = load i32, i32* %m.addr.i694, align 4, !dbg !7218
  %142 = call i1 @llvm.is.constant.i32(i32 %141) #7, !dbg !7219
  br i1 %142, label %if.then.i696, label %if.else.i701, !dbg !7220

if.then.i696:                                     ; preds = %if.then228
  %143 = load i32, i32* %m.addr.i694, align 4, !dbg !7221
  %cmp.i695 = icmp slt i32 %143, 0, !dbg !7222
  br i1 %cmp.i695, label %if.then1.i697, label %if.end.i699, !dbg !7223

if.then1.i697:                                    ; preds = %if.then.i696
  store i64 4611686018427387902, i64* %retval.i693, align 8, !dbg !7224
  br label %msecs_to_jiffies.exit702, !dbg !7224

if.end.i699:                                      ; preds = %if.then.i696
  %144 = load i32, i32* %m.addr.i694, align 4, !dbg !7225
  %call.i698 = call i64 @_msecs_to_jiffies(i32 %144) #12, !dbg !7226
  store i64 %call.i698, i64* %retval.i693, align 8, !dbg !7227
  br label %msecs_to_jiffies.exit702, !dbg !7227

if.else.i701:                                     ; preds = %if.then228
  %145 = load i32, i32* %m.addr.i694, align 4, !dbg !7228
  %call2.i700 = call i64 @__msecs_to_jiffies(i32 %145) #12, !dbg !7229
  store i64 %call2.i700, i64* %retval.i693, align 8, !dbg !7230
  br label %msecs_to_jiffies.exit702, !dbg !7230

msecs_to_jiffies.exit702:                         ; preds = %if.then1.i697, %if.end.i699, %if.else.i701
  %146 = load i64, i64* %retval.i693, align 8, !dbg !7231
  %add230 = add i64 %140, %146, !dbg !7232
  %147 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7233
  %reset_done231 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %147, i32 0, i32 43, !dbg !7234
  %148 = load i16, i16* %wIndex.addr, align 2, !dbg !7235
  %idxprom232 = zext i16 %148 to i64, !dbg !7233
  %arrayidx233 = getelementptr [15 x i64], [15 x i64]* %reset_done231, i64 0, i64 %idxprom232, !dbg !7233
  store i64 %add230, i64* %arrayidx233, align 8, !dbg !7236
  %149 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !7237
  %self234 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %149, i32 0, i32 0, !dbg !7238
  %150 = load i16, i16* %wIndex.addr, align 2, !dbg !7239
  %conv235 = zext i16 %150 to i32, !dbg !7239
  call void @usb_hcd_start_port_resume(%struct.usb_bus* %self234, i32 %conv235) #11, !dbg !7240
  %151 = load i16, i16* %wIndex.addr, align 2, !dbg !7241
  %conv236 = zext i16 %151 to i64, !dbg !7241
  %152 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7242
  %resuming_ports237 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %152, i32 0, i32 49, !dbg !7243
  call void @set_bit(i64 %conv236, i64* %resuming_ports237) #11, !dbg !7244
  %153 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7245
  %call238 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %153) #11, !dbg !7246
  %rh_timer = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call238, i32 0, i32 5, !dbg !7247
  %154 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7248
  %reset_done239 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %154, i32 0, i32 43, !dbg !7249
  %155 = load i16, i16* %wIndex.addr, align 2, !dbg !7250
  %idxprom240 = zext i16 %155 to i64, !dbg !7248
  %arrayidx241 = getelementptr [15 x i64], [15 x i64]* %reset_done239, i64 0, i64 %idxprom240, !dbg !7248
  %156 = load i64, i64* %arrayidx241, align 8, !dbg !7248
  %call242 = call i32 @mod_timer(%struct.timer_list* %rh_timer, i64 %156) #11, !dbg !7251
  br label %if.end243, !dbg !7252

if.end243:                                        ; preds = %msecs_to_jiffies.exit702, %if.then225
  br label %if.end298, !dbg !7253

if.else:                                          ; preds = %if.end220
  %157 = load volatile i64, i64* @jiffies, align 8, !dbg !7254
  %158 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7254
  %reset_done244 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %158, i32 0, i32 43, !dbg !7254
  %159 = load i16, i16* %wIndex.addr, align 2, !dbg !7254
  %idxprom245 = zext i16 %159 to i64, !dbg !7254
  %arrayidx246 = getelementptr [15 x i64], [15 x i64]* %reset_done244, i64 0, i64 %idxprom245, !dbg !7254
  %160 = load i64, i64* %arrayidx246, align 8, !dbg !7254
  %sub247 = sub i64 %157, %160, !dbg !7254
  %cmp248 = icmp sge i64 %sub247, 0, !dbg !7254
  br i1 %cmp248, label %if.else251, label %if.then250, !dbg !7256

if.then250:                                       ; preds = %if.else
  br label %if.end297, !dbg !7257

if.else251:                                       ; preds = %if.else
  %161 = load i16, i16* %wIndex.addr, align 2, !dbg !7259
  %conv252 = zext i16 %161 to i64, !dbg !7259
  %162 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7261
  %resuming_ports253 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %162, i32 0, i32 49, !dbg !7262
  %call254 = call zeroext i1 @test_bit(i64 %conv252, i64* %resuming_ports253) #11, !dbg !7263
  br i1 %call254, label %if.then255, label %if.else277, !dbg !7264

if.then255:                                       ; preds = %if.else251
  %163 = load i16, i16* %wIndex.addr, align 2, !dbg !7265
  %conv256 = zext i16 %163 to i64, !dbg !7265
  %164 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7267
  %suspended_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %164, i32 0, i32 48, !dbg !7268
  call void @clear_bit(i64 %conv256, i64* %suspended_ports) #11, !dbg !7269
  %165 = load i16, i16* %wIndex.addr, align 2, !dbg !7270
  %conv257 = zext i16 %165 to i64, !dbg !7270
  %166 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7271
  %port_c_suspend258 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %166, i32 0, i32 47, !dbg !7272
  call void @set_bit(i64 %conv257, i64* %port_c_suspend258) #11, !dbg !7273
  %167 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7274
  %reset_done259 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %167, i32 0, i32 43, !dbg !7275
  %168 = load i16, i16* %wIndex.addr, align 2, !dbg !7276
  %idxprom260 = zext i16 %168 to i64, !dbg !7274
  %arrayidx261 = getelementptr [15 x i64], [15 x i64]* %reset_done259, i64 0, i64 %idxprom260, !dbg !7274
  store i64 0, i64* %arrayidx261, align 8, !dbg !7277
  %169 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !7278
  %self262 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %169, i32 0, i32 0, !dbg !7279
  %170 = load i16, i16* %wIndex.addr, align 2, !dbg !7280
  %conv263 = zext i16 %170 to i32, !dbg !7280
  call void @usb_hcd_end_port_resume(%struct.usb_bus* %self262, i32 %conv263) #11, !dbg !7281
  %171 = load i32, i32* %temp, align 4, !dbg !7282
  %and264 = and i32 %171, -235, !dbg !7282
  store i32 %and264, i32* %temp, align 4, !dbg !7282
  %172 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7283
  %173 = load i32, i32* %temp, align 4, !dbg !7284
  %174 = load i32*, i32** %status_reg, align 8, !dbg !7285
  call void @ehci_writel(%struct.ehci_hcd* %172, i32 %173, i32* %174) #11, !dbg !7286
  %175 = load i16, i16* %wIndex.addr, align 2, !dbg !7287
  %conv265 = zext i16 %175 to i64, !dbg !7287
  %176 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7288
  %resuming_ports266 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %176, i32 0, i32 49, !dbg !7289
  call void @clear_bit(i64 %conv265, i64* %resuming_ports266) #11, !dbg !7290
  %177 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7291
  %178 = load i32*, i32** %status_reg, align 8, !dbg !7292
  %179 = bitcast i32* %178 to i8*, !dbg !7292
  %call267 = call i32 @ehci_handshake(%struct.ehci_hcd* %177, i8* %179, i32 64, i32 0, i32 2000) #11, !dbg !7293
  store i32 %call267, i32* %retval1, align 4, !dbg !7294
  %180 = load i32, i32* %retval1, align 4, !dbg !7295
  %cmp268 = icmp ne i32 %180, 0, !dbg !7297
  br i1 %cmp268, label %if.then270, label %if.end275, !dbg !7298

if.then270:                                       ; preds = %if.then255
  %181 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7299
  %call271 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %181) #11, !dbg !7299
  %self272 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call271, i32 0, i32 0, !dbg !7299
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self272, i32 0, i32 0, !dbg !7299
  %182 = load %struct.device*, %struct.device** %controller, align 8, !dbg !7299
  %183 = load i16, i16* %wIndex.addr, align 2, !dbg !7299
  %conv273 = zext i16 %183 to i32, !dbg !7299
  %add274 = add i32 %conv273, 1, !dbg !7299
  %184 = load i32, i32* %retval1, align 4, !dbg !7299
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %182, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i32 %add274, i32 %184) #13, !dbg !7299
  br label %error, !dbg !7301

if.end275:                                        ; preds = %if.then255
  %185 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7302
  %186 = load i32*, i32** %status_reg, align 8, !dbg !7303
  %call276 = call i32 @ehci_readl(%struct.ehci_hcd* %185, i32* %186) #11, !dbg !7304
  store i32 %call276, i32* %temp, align 4, !dbg !7305
  br label %if.end296, !dbg !7306

if.else277:                                       ; preds = %if.else251
  %187 = load i32, i32* %status, align 4, !dbg !7307
  %or278 = or i32 %187, 1048576, !dbg !7307
  store i32 %or278, i32* %status, align 4, !dbg !7307
  %188 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7309
  %reset_done279 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %188, i32 0, i32 43, !dbg !7310
  %189 = load i16, i16* %wIndex.addr, align 2, !dbg !7311
  %idxprom280 = zext i16 %189 to i64, !dbg !7309
  %arrayidx281 = getelementptr [15 x i64], [15 x i64]* %reset_done279, i64 0, i64 %idxprom280, !dbg !7309
  store i64 0, i64* %arrayidx281, align 8, !dbg !7312
  %190 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7313
  %191 = load i32, i32* %temp, align 4, !dbg !7314
  %and282 = and i32 %191, -299, !dbg !7315
  %192 = load i32*, i32** %status_reg, align 8, !dbg !7316
  call void @ehci_writel(%struct.ehci_hcd* %190, i32 %and282, i32* %192) #11, !dbg !7317
  %193 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7318
  %194 = load i32*, i32** %status_reg, align 8, !dbg !7319
  %195 = bitcast i32* %194 to i8*, !dbg !7319
  %call283 = call i32 @ehci_handshake(%struct.ehci_hcd* %193, i8* %195, i32 256, i32 0, i32 1000) #11, !dbg !7320
  store i32 %call283, i32* %retval1, align 4, !dbg !7321
  %196 = load i32, i32* %retval1, align 4, !dbg !7322
  %cmp284 = icmp ne i32 %196, 0, !dbg !7324
  br i1 %cmp284, label %if.then286, label %if.end292, !dbg !7325

if.then286:                                       ; preds = %if.else277
  %197 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7326
  %call287 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %197) #11, !dbg !7326
  %self288 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call287, i32 0, i32 0, !dbg !7326
  %controller289 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self288, i32 0, i32 0, !dbg !7326
  %198 = load %struct.device*, %struct.device** %controller289, align 8, !dbg !7326
  %199 = load i16, i16* %wIndex.addr, align 2, !dbg !7326
  %conv290 = zext i16 %199 to i32, !dbg !7326
  %add291 = add i32 %conv290, 1, !dbg !7326
  %200 = load i32, i32* %retval1, align 4, !dbg !7326
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %198, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i32 %add291, i32 %200) #13, !dbg !7326
  br label %error, !dbg !7328

if.end292:                                        ; preds = %if.else277
  %201 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7329
  %202 = load i16, i16* %wIndex.addr, align 2, !dbg !7330
  %conv293 = zext i16 %202 to i32, !dbg !7330
  %203 = load i32*, i32** %status_reg, align 8, !dbg !7331
  %204 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7332
  %205 = load i32*, i32** %status_reg, align 8, !dbg !7333
  %call294 = call i32 @ehci_readl(%struct.ehci_hcd* %204, i32* %205) #11, !dbg !7334
  %call295 = call i32 @check_reset_complete(%struct.ehci_hcd* %201, i32 %conv293, i32* %203, i32 %call294) #11, !dbg !7335
  store i32 %call295, i32* %temp, align 4, !dbg !7336
  br label %if.end296

if.end296:                                        ; preds = %if.end292, %if.end275
  br label %if.end297

if.end297:                                        ; preds = %if.end296, %if.then250
  br label %if.end298

if.end298:                                        ; preds = %if.end297, %if.end243
  %206 = load i32, i32* %temp, align 4, !dbg !7337
  %and299 = and i32 %206, 1, !dbg !7339
  %tobool300 = icmp ne i32 %and299, 0, !dbg !7339
  br i1 %tobool300, label %land.lhs.true301, label %if.end309, !dbg !7340

land.lhs.true301:                                 ; preds = %if.end298
  %207 = load i16, i16* %wIndex.addr, align 2, !dbg !7341
  %conv302 = zext i16 %207 to i64, !dbg !7341
  %208 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7342
  %companion_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %208, i32 0, i32 45, !dbg !7343
  %call303 = call zeroext i1 @test_bit(i64 %conv302, i64* %companion_ports) #11, !dbg !7344
  br i1 %call303, label %if.then305, label %if.end309, !dbg !7345

if.then305:                                       ; preds = %land.lhs.true301
  %209 = load i32, i32* %temp, align 4, !dbg !7346
  %and306 = and i32 %209, -43, !dbg !7346
  store i32 %and306, i32* %temp, align 4, !dbg !7346
  %210 = load i32, i32* %temp, align 4, !dbg !7348
  %or307 = or i32 %210, 8192, !dbg !7348
  store i32 %or307, i32* %temp, align 4, !dbg !7348
  %211 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7349
  %212 = load i32, i32* %temp, align 4, !dbg !7350
  %213 = load i32*, i32** %status_reg, align 8, !dbg !7351
  call void @ehci_writel(%struct.ehci_hcd* %211, i32 %212, i32* %213) #11, !dbg !7352
  %214 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7353
  %215 = load i32*, i32** %status_reg, align 8, !dbg !7354
  %call308 = call i32 @ehci_readl(%struct.ehci_hcd* %214, i32* %215) #11, !dbg !7355
  store i32 %call308, i32* %temp, align 4, !dbg !7356
  br label %if.end309, !dbg !7357

if.end309:                                        ; preds = %if.then305, %land.lhs.true301, %if.end298
  %216 = load i32, i32* %temp, align 4, !dbg !7358
  %and310 = and i32 %216, 1, !dbg !7360
  %tobool311 = icmp ne i32 %and310, 0, !dbg !7360
  br i1 %tobool311, label %if.then312, label %if.end324, !dbg !7361

if.then312:                                       ; preds = %if.end309
  %217 = load i32, i32* %status, align 4, !dbg !7362
  %or313 = or i32 %217, 1, !dbg !7362
  store i32 %or313, i32* %status, align 4, !dbg !7362
  %218 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7364
  %has_hostpc = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %218, i32 0, i32 60, !dbg !7366
  %bf.load314 = load i8, i8* %has_hostpc, align 8, !dbg !7366
  %bf.clear315 = and i8 %bf.load314, 1, !dbg !7366
  %bf.cast316 = zext i8 %bf.clear315 to i32, !dbg !7366
  %tobool317 = icmp ne i32 %bf.cast316, 0, !dbg !7364
  br i1 %tobool317, label %if.then318, label %if.else321, !dbg !7367

if.then318:                                       ; preds = %if.then312
  %219 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7368
  %220 = load i32*, i32** %hostpc_reg, align 8, !dbg !7370
  %call319 = call i32 @ehci_readl(%struct.ehci_hcd* %219, i32* %220) #11, !dbg !7371
  store i32 %call319, i32* %temp1, align 4, !dbg !7372
  %221 = load i32, i32* %status, align 4, !dbg !7373
  %or320 = or i32 %221, 1024, !dbg !7373
  store i32 %or320, i32* %status, align 4, !dbg !7373
  br label %if.end323, !dbg !7374

if.else321:                                       ; preds = %if.then312
  %222 = load i32, i32* %status, align 4, !dbg !7375
  %or322 = or i32 %222, 1024, !dbg !7375
  store i32 %or322, i32* %status, align 4, !dbg !7375
  br label %if.end323

if.end323:                                        ; preds = %if.else321, %if.then318
  br label %if.end324, !dbg !7376

if.end324:                                        ; preds = %if.end323, %if.end309
  %223 = load i32, i32* %temp, align 4, !dbg !7377
  %and325 = and i32 %223, 4, !dbg !7379
  %tobool326 = icmp ne i32 %and325, 0, !dbg !7379
  br i1 %tobool326, label %if.then327, label %if.end329, !dbg !7380

if.then327:                                       ; preds = %if.end324
  %224 = load i32, i32* %status, align 4, !dbg !7381
  %or328 = or i32 %224, 2, !dbg !7381
  store i32 %or328, i32* %status, align 4, !dbg !7381
  br label %if.end329, !dbg !7382

if.end329:                                        ; preds = %if.then327, %if.end324
  %225 = load i32, i32* %temp, align 4, !dbg !7383
  %and330 = and i32 %225, 192, !dbg !7385
  %tobool331 = icmp ne i32 %and330, 0, !dbg !7385
  br i1 %tobool331, label %if.then332, label %if.else334, !dbg !7386

if.then332:                                       ; preds = %if.end329
  %226 = load i32, i32* %status, align 4, !dbg !7387
  %or333 = or i32 %226, 4, !dbg !7387
  store i32 %or333, i32* %status, align 4, !dbg !7387
  br label %if.end355, !dbg !7389

if.else334:                                       ; preds = %if.end329
  %227 = load i16, i16* %wIndex.addr, align 2, !dbg !7390
  %conv335 = zext i16 %227 to i64, !dbg !7390
  %228 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7392
  %suspended_ports336 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %228, i32 0, i32 48, !dbg !7393
  %call337 = call zeroext i1 @test_bit(i64 %conv335, i64* %suspended_ports336) #11, !dbg !7394
  br i1 %call337, label %if.then338, label %if.end354, !dbg !7395

if.then338:                                       ; preds = %if.else334
  %229 = load i16, i16* %wIndex.addr, align 2, !dbg !7396
  %conv339 = zext i16 %229 to i64, !dbg !7396
  %230 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7398
  %suspended_ports340 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %230, i32 0, i32 48, !dbg !7399
  call void @clear_bit(i64 %conv339, i64* %suspended_ports340) #11, !dbg !7400
  %231 = load i16, i16* %wIndex.addr, align 2, !dbg !7401
  %conv341 = zext i16 %231 to i64, !dbg !7401
  %232 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7402
  %resuming_ports342 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %232, i32 0, i32 49, !dbg !7403
  call void @clear_bit(i64 %conv341, i64* %resuming_ports342) #11, !dbg !7404
  %233 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7405
  %reset_done343 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %233, i32 0, i32 43, !dbg !7406
  %234 = load i16, i16* %wIndex.addr, align 2, !dbg !7407
  %idxprom344 = zext i16 %234 to i64, !dbg !7405
  %arrayidx345 = getelementptr [15 x i64], [15 x i64]* %reset_done343, i64 0, i64 %idxprom344, !dbg !7405
  store i64 0, i64* %arrayidx345, align 8, !dbg !7408
  %235 = load i32, i32* %temp, align 4, !dbg !7409
  %and346 = and i32 %235, 4, !dbg !7411
  %tobool347 = icmp ne i32 %and346, 0, !dbg !7411
  br i1 %tobool347, label %if.then348, label %if.end351, !dbg !7412

if.then348:                                       ; preds = %if.then338
  %236 = load i16, i16* %wIndex.addr, align 2, !dbg !7413
  %conv349 = zext i16 %236 to i64, !dbg !7413
  %237 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7414
  %port_c_suspend350 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %237, i32 0, i32 47, !dbg !7415
  call void @set_bit(i64 %conv349, i64* %port_c_suspend350) #11, !dbg !7416
  br label %if.end351, !dbg !7416

if.end351:                                        ; preds = %if.then348, %if.then338
  %238 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !7417
  %self352 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %238, i32 0, i32 0, !dbg !7418
  %239 = load i16, i16* %wIndex.addr, align 2, !dbg !7419
  %conv353 = zext i16 %239 to i32, !dbg !7419
  call void @usb_hcd_end_port_resume(%struct.usb_bus* %self352, i32 %conv353) #11, !dbg !7420
  br label %if.end354, !dbg !7421

if.end354:                                        ; preds = %if.end351, %if.else334
  br label %if.end355

if.end355:                                        ; preds = %if.end354, %if.then332
  %240 = load i32, i32* %temp, align 4, !dbg !7422
  %and356 = and i32 %240, 16, !dbg !7424
  %tobool357 = icmp ne i32 %and356, 0, !dbg !7424
  br i1 %tobool357, label %if.then358, label %if.end360, !dbg !7425

if.then358:                                       ; preds = %if.end355
  %241 = load i32, i32* %status, align 4, !dbg !7426
  %or359 = or i32 %241, 8, !dbg !7426
  store i32 %or359, i32* %status, align 4, !dbg !7426
  br label %if.end360, !dbg !7427

if.end360:                                        ; preds = %if.then358, %if.end355
  %242 = load i32, i32* %temp, align 4, !dbg !7428
  %and361 = and i32 %242, 256, !dbg !7430
  %tobool362 = icmp ne i32 %and361, 0, !dbg !7430
  br i1 %tobool362, label %if.then363, label %if.end365, !dbg !7431

if.then363:                                       ; preds = %if.end360
  %243 = load i32, i32* %status, align 4, !dbg !7432
  %or364 = or i32 %243, 16, !dbg !7432
  store i32 %or364, i32* %status, align 4, !dbg !7432
  br label %if.end365, !dbg !7433

if.end365:                                        ; preds = %if.then363, %if.end360
  %244 = load i32, i32* %temp, align 4, !dbg !7434
  %and366 = and i32 %244, 4096, !dbg !7436
  %tobool367 = icmp ne i32 %and366, 0, !dbg !7436
  br i1 %tobool367, label %if.then368, label %if.end370, !dbg !7437

if.then368:                                       ; preds = %if.end365
  %245 = load i32, i32* %status, align 4, !dbg !7438
  %or369 = or i32 %245, 256, !dbg !7438
  store i32 %or369, i32* %status, align 4, !dbg !7438
  br label %if.end370, !dbg !7439

if.end370:                                        ; preds = %if.then368, %if.end365
  %246 = load i16, i16* %wIndex.addr, align 2, !dbg !7440
  %conv371 = zext i16 %246 to i64, !dbg !7440
  %247 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7442
  %port_c_suspend372 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %247, i32 0, i32 47, !dbg !7443
  %call373 = call zeroext i1 @test_bit(i64 %conv371, i64* %port_c_suspend372) #11, !dbg !7444
  br i1 %call373, label %if.then374, label %if.end376, !dbg !7445

if.then374:                                       ; preds = %if.end370
  %248 = load i32, i32* %status, align 4, !dbg !7446
  %or375 = or i32 %248, 262144, !dbg !7446
  store i32 %or375, i32* %status, align 4, !dbg !7446
  br label %if.end376, !dbg !7447

if.end376:                                        ; preds = %if.then374, %if.end370
  %249 = load i32, i32* %status, align 4, !dbg !7448
  %and377 = and i32 %249, -65536, !dbg !7450
  %tobool378 = icmp ne i32 %and377, 0, !dbg !7450
  br i1 %tobool378, label %if.then379, label %if.end382, !dbg !7451

if.then379:                                       ; preds = %if.end376
  %250 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7452
  %251 = load i16, i16* %wIndex.addr, align 2, !dbg !7453
  %conv380 = zext i16 %251 to i32, !dbg !7453
  %add381 = add i32 %conv380, 1, !dbg !7454
  %252 = load i32, i32* %temp, align 4, !dbg !7455
  call void @dbg_port(%struct.ehci_hcd* %250, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i32 %add381, i32 %252) #11, !dbg !7456
  br label %if.end382, !dbg !7456

if.end382:                                        ; preds = %if.then379, %if.end376
  %253 = load i32, i32* %status, align 4, !dbg !7457
  %254 = load i8*, i8** %buf.addr, align 8, !dbg !7458
  store i32 %253, i32* %val.addr.i, align 4
  store i8* %254, i8** %p.addr.i, align 8
  %255 = load i32, i32* %val.addr.i, align 4, !dbg !7459
  %256 = load i8*, i8** %p.addr.i, align 8, !dbg !7460
  %257 = bitcast i8* %256 to i32*, !dbg !7461
  store i32 %255, i32* %257, align 4, !dbg !7462
  br label %sw.epilog668, !dbg !7463

sw.bb383:                                         ; preds = %do.end27
  %258 = load i16, i16* %wValue.addr, align 2, !dbg !7464
  %conv384 = zext i16 %258 to i32, !dbg !7464
  switch i32 %conv384, label %sw.default386 [
    i32 0, label %sw.bb385
    i32 1, label %sw.bb385
  ], !dbg !7465

sw.bb385:                                         ; preds = %sw.bb383, %sw.bb383
  br label %sw.epilog387, !dbg !7466

sw.default386:                                    ; preds = %sw.bb383
  br label %error, !dbg !7468

sw.epilog387:                                     ; preds = %sw.bb385
  br label %sw.epilog668, !dbg !7469

sw.bb388:                                         ; preds = %do.end27
  %259 = load i16, i16* %wIndex.addr, align 2, !dbg !7470
  %conv389 = zext i16 %259 to i32, !dbg !7470
  %shr390 = ashr i32 %conv389, 8, !dbg !7471
  store i32 %shr390, i32* %selector, align 4, !dbg !7472
  %260 = load i16, i16* %wIndex.addr, align 2, !dbg !7473
  %conv391 = zext i16 %260 to i32, !dbg !7473
  %and392 = and i32 %conv391, 255, !dbg !7473
  %conv393 = trunc i32 %and392 to i16, !dbg !7473
  store i16 %conv393, i16* %wIndex.addr, align 2, !dbg !7473
  %261 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7474
  %debug = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %261, i32 0, i32 9, !dbg !7474
  %262 = load %struct.ehci_dbg_port*, %struct.ehci_dbg_port** %debug, align 8, !dbg !7474
  %tobool394 = icmp ne %struct.ehci_dbg_port* %262, null, !dbg !7474
  %lnot = xor i1 %tobool394, true, !dbg !7474
  %lnot395 = xor i1 %lnot, true, !dbg !7474
  %lnot.ext = zext i1 %lnot395 to i32, !dbg !7474
  %conv396 = sext i32 %lnot.ext to i64, !dbg !7474
  %tobool397 = icmp ne i64 %conv396, 0, !dbg !7474
  br i1 %tobool397, label %if.then398, label %if.end412, !dbg !7476

if.then398:                                       ; preds = %sw.bb388
  %263 = load i16, i16* %wIndex.addr, align 2, !dbg !7477
  %conv399 = zext i16 %263 to i32, !dbg !7477
  %264 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7480
  %hcs_params400 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %264, i32 0, i32 10, !dbg !7480
  %265 = load i32, i32* %hcs_params400, align 8, !dbg !7480
  %shr401 = lshr i32 %265, 20, !dbg !7480
  %and402 = and i32 %shr401, 15, !dbg !7480
  %cmp403 = icmp eq i32 %conv399, %and402, !dbg !7481
  br i1 %cmp403, label %land.lhs.true405, label %if.end411, !dbg !7482

land.lhs.true405:                                 ; preds = %if.then398
  %266 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7483
  %debug406 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %266, i32 0, i32 9, !dbg !7484
  %267 = load %struct.ehci_dbg_port*, %struct.ehci_dbg_port** %debug406, align 8, !dbg !7484
  %control = getelementptr inbounds %struct.ehci_dbg_port, %struct.ehci_dbg_port* %267, i32 0, i32 0, !dbg !7485
  %268 = bitcast i32* %control to i8*, !dbg !7486
  %call407 = call i32 @readl(i8* %268) #11, !dbg !7487
  %and408 = and i32 %call407, 268435456, !dbg !7488
  %tobool409 = icmp ne i32 %and408, 0, !dbg !7488
  br i1 %tobool409, label %if.then410, label %if.end411, !dbg !7489

if.then410:                                       ; preds = %land.lhs.true405
  store i32 -19, i32* %retval1, align 4, !dbg !7490
  br label %error_exit, !dbg !7492

if.end411:                                        ; preds = %land.lhs.true405, %if.then398
  br label %if.end412, !dbg !7493

if.end412:                                        ; preds = %if.end411, %sw.bb388
  %269 = load i16, i16* %wIndex.addr, align 2, !dbg !7494
  %tobool413 = icmp ne i16 %269, 0, !dbg !7494
  br i1 %tobool413, label %lor.lhs.false414, label %if.then418, !dbg !7496

lor.lhs.false414:                                 ; preds = %if.end412
  %270 = load i16, i16* %wIndex.addr, align 2, !dbg !7497
  %conv415 = zext i16 %270 to i32, !dbg !7497
  %271 = load i32, i32* %ports, align 4, !dbg !7498
  %cmp416 = icmp sgt i32 %conv415, %271, !dbg !7499
  br i1 %cmp416, label %if.then418, label %if.end419, !dbg !7500

if.then418:                                       ; preds = %lor.lhs.false414, %if.end412
  br label %error, !dbg !7501

if.end419:                                        ; preds = %lor.lhs.false414
  %272 = load i16, i16* %wIndex.addr, align 2, !dbg !7502
  %dec420 = add i16 %272, -1, !dbg !7502
  store i16 %dec420, i16* %wIndex.addr, align 2, !dbg !7502
  %273 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7503
  %274 = load i32*, i32** %status_reg, align 8, !dbg !7504
  %call421 = call i32 @ehci_readl(%struct.ehci_hcd* %273, i32* %274) #11, !dbg !7505
  store i32 %call421, i32* %temp, align 4, !dbg !7506
  %275 = load i32, i32* %temp, align 4, !dbg !7507
  %and422 = and i32 %275, 8192, !dbg !7509
  %tobool423 = icmp ne i32 %and422, 0, !dbg !7509
  br i1 %tobool423, label %if.then424, label %if.end425, !dbg !7510

if.then424:                                       ; preds = %if.end419
  br label %sw.epilog668, !dbg !7511

if.end425:                                        ; preds = %if.end419
  %276 = load i32, i32* %temp, align 4, !dbg !7512
  %and426 = and i32 %276, -43, !dbg !7512
  store i32 %and426, i32* %temp, align 4, !dbg !7512
  %277 = load i16, i16* %wValue.addr, align 2, !dbg !7513
  %conv427 = zext i16 %277 to i32, !dbg !7513
  switch i32 %conv427, label %sw.default662 [
    i32 2, label %sw.bb428
    i32 8, label %sw.bb524
    i32 4, label %sw.bb560
    i32 21, label %sw.bb583
  ], !dbg !7514

sw.bb428:                                         ; preds = %if.end425
  %278 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7515
  %no_selective_suspend429 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %278, i32 0, i32 58, !dbg !7517
  %bf.load430 = load i16, i16* %no_selective_suspend429, align 4, !dbg !7517
  %bf.clear431 = and i16 %bf.load430, 1, !dbg !7517
  %bf.cast432 = zext i16 %bf.clear431 to i32, !dbg !7517
  %tobool433 = icmp ne i32 %bf.cast432, 0, !dbg !7515
  br i1 %tobool433, label %if.then434, label %if.end435, !dbg !7518

if.then434:                                       ; preds = %sw.bb428
  br label %sw.epilog663, !dbg !7519

if.end435:                                        ; preds = %sw.bb428
  %279 = load i32, i32* %temp, align 4, !dbg !7520
  %and436 = and i32 %279, 4, !dbg !7522
  %cmp437 = icmp eq i32 %and436, 0, !dbg !7523
  br i1 %cmp437, label %if.then443, label %lor.lhs.false439, !dbg !7524

lor.lhs.false439:                                 ; preds = %if.end435
  %280 = load i32, i32* %temp, align 4, !dbg !7525
  %and440 = and i32 %280, 256, !dbg !7526
  %cmp441 = icmp ne i32 %and440, 0, !dbg !7527
  br i1 %cmp441, label %if.then443, label %if.end444, !dbg !7528

if.then443:                                       ; preds = %lor.lhs.false439, %if.end435
  br label %error, !dbg !7529

if.end444:                                        ; preds = %lor.lhs.false439
  %281 = load i32, i32* %temp, align 4, !dbg !7530
  %and445 = and i32 %281, -1048577, !dbg !7530
  store i32 %and445, i32* %temp, align 4, !dbg !7530
  %282 = load i32, i32* %temp, align 4, !dbg !7531
  %or446 = or i32 %282, 6291456, !dbg !7531
  store i32 %or446, i32* %temp, align 4, !dbg !7531
  %283 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7532
  %284 = load i32, i32* %temp, align 4, !dbg !7533
  %or447 = or i32 %284, 128, !dbg !7534
  %285 = load i32*, i32** %status_reg, align 8, !dbg !7535
  call void @ehci_writel(%struct.ehci_hcd* %283, i32 %or447, i32* %285) #11, !dbg !7536
  %286 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7537
  %has_tdi_phy_lpm448 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %286, i32 0, i32 60, !dbg !7538
  %bf.load449 = load i8, i8* %has_tdi_phy_lpm448, align 8, !dbg !7538
  %bf.lshr450 = lshr i8 %bf.load449, 1, !dbg !7538
  %bf.clear451 = and i8 %bf.lshr450, 1, !dbg !7538
  %bf.cast452 = zext i8 %bf.clear451 to i32, !dbg !7538
  %tobool453 = icmp ne i32 %bf.cast452, 0, !dbg !7537
  br i1 %tobool453, label %if.then454, label %if.end486, !dbg !7539

if.then454:                                       ; preds = %if.end444
  %287 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7540
  %lock455 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %287, i32 0, i32 11, !dbg !7541
  %288 = load i64, i64* %flags, align 8, !dbg !7542
  store %struct.spinlock* %lock455, %struct.spinlock** %lock.addr.i703, align 8
  store i64 %288, i64* %flags.addr.i704, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !7543
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !7543
  store i32 1, i32* %tmp.i705, align 4, !dbg !7543
  %289 = load i32, i32* %tmp.i705, align 4, !dbg !7543
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !7544
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !7544
  store i32 1, i32* %tmp8.i706, align 4, !dbg !7544
  %290 = load i32, i32* %tmp8.i706, align 4, !dbg !7544
  %291 = load i64, i64* %flags.addr.i704, align 8, !dbg !7545
  call void @arch_local_irq_restore(i64 %291) #12, !dbg !7545
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7546, !srcloc !6997
  %292 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i703, align 8, !dbg !7547
  %293 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %292, i32 0, i32 0, !dbg !7547
  %rlock.i707 = bitcast %union.anon.0* %293 to %struct.raw_spinlock*, !dbg !7547
  call void @msleep(i32 5) #11, !dbg !7548
  br label %do.body456, !dbg !7549

do.body456:                                       ; preds = %if.then454
  br label %do.body457, !dbg !7550

do.body457:                                       ; preds = %do.body456
  call void @llvm.dbg.declare(metadata i64* %__dummy458, metadata !7551, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.declare(metadata i64* %__dummy2459, metadata !7554, metadata !DIExpression()), !dbg !7553
  %cmp460 = icmp eq i64* %__dummy458, %__dummy2459, !dbg !7553
  %conv461 = zext i1 %cmp460 to i32, !dbg !7553
  store i32 1, i32* %tmp462, align 4, !dbg !7553
  %294 = load i32, i32* %tmp462, align 4, !dbg !7553
  br label %do.body463, !dbg !7555

do.body463:                                       ; preds = %do.body457
  br label %do.body464, !dbg !7556

do.body464:                                       ; preds = %do.body463
  br label %do.body465, !dbg !7557

do.body465:                                       ; preds = %do.body464
  call void @llvm.dbg.declare(metadata i64* %__dummy466, metadata !7559, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.declare(metadata i64* %__dummy2467, metadata !7563, metadata !DIExpression()), !dbg !7562
  %cmp468 = icmp eq i64* %__dummy466, %__dummy2467, !dbg !7562
  %conv469 = zext i1 %cmp468 to i32, !dbg !7562
  store i32 1, i32* %tmp470, align 4, !dbg !7562
  %295 = load i32, i32* %tmp470, align 4, !dbg !7562
  %call471 = call i64 @arch_local_irq_save() #11, !dbg !7564
  store i64 %call471, i64* %flags, align 8, !dbg !7564
  br label %do.end472, !dbg !7564

do.end472:                                        ; preds = %do.body465
  br label %do.end473, !dbg !7557

do.end473:                                        ; preds = %do.end472
  br label %do.body474, !dbg !7556

do.body474:                                       ; preds = %do.end473
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7565, !srcloc !7566
  br label %do.body475, !dbg !7565

do.body475:                                       ; preds = %do.body474
  %296 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7567
  %lock476 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %296, i32 0, i32 11, !dbg !7567
  store %struct.spinlock* %lock476, %struct.spinlock** %lock.addr.i708, align 8
  %297 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i708, align 8, !dbg !7568
  %298 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %297, i32 0, i32 0, !dbg !7569
  %rlock.i709 = bitcast %union.anon.0* %298 to %struct.raw_spinlock*, !dbg !7569
  br label %do.end478, !dbg !7567

do.end478:                                        ; preds = %do.body475
  br label %do.end479, !dbg !7565

do.end479:                                        ; preds = %do.end478
  br label %do.end480, !dbg !7556

do.end480:                                        ; preds = %do.end479
  br label %do.end481, !dbg !7555

do.end481:                                        ; preds = %do.end480
  br label %do.end482, !dbg !7550

do.end482:                                        ; preds = %do.end481
  %299 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7570
  %300 = load i32*, i32** %hostpc_reg, align 8, !dbg !7571
  %call483 = call i32 @ehci_readl(%struct.ehci_hcd* %299, i32* %300) #11, !dbg !7572
  store i32 %call483, i32* %temp1, align 4, !dbg !7573
  %301 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7574
  %302 = load i32, i32* %temp1, align 4, !dbg !7575
  %or484 = or i32 %302, 4194304, !dbg !7576
  %303 = load i32*, i32** %hostpc_reg, align 8, !dbg !7577
  call void @ehci_writel(%struct.ehci_hcd* %301, i32 %or484, i32* %303) #11, !dbg !7578
  %304 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7579
  %305 = load i32*, i32** %hostpc_reg, align 8, !dbg !7580
  %call485 = call i32 @ehci_readl(%struct.ehci_hcd* %304, i32* %305) #11, !dbg !7581
  store i32 %call485, i32* %temp1, align 4, !dbg !7582
  br label %if.end486, !dbg !7583

if.end486:                                        ; preds = %do.end482, %if.end444
  %306 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7584
  %has_fsl_susp_errata = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %306, i32 0, i32 58, !dbg !7584
  %bf.load487 = load i16, i16* %has_fsl_susp_errata, align 4, !dbg !7584
  %bf.lshr488 = lshr i16 %bf.load487, 3, !dbg !7584
  %bf.clear489 = and i16 %bf.lshr488, 1, !dbg !7584
  %bf.cast490 = zext i16 %bf.clear489 to i32, !dbg !7584
  %tobool491 = icmp ne i32 %bf.cast490, 0, !dbg !7584
  br i1 %tobool491, label %if.then492, label %if.end521, !dbg !7585

if.then492:                                       ; preds = %if.end486
  %307 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7586
  %lock493 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %307, i32 0, i32 11, !dbg !7587
  %308 = load i64, i64* %flags, align 8, !dbg !7588
  store %struct.spinlock* %lock493, %struct.spinlock** %lock.addr.i710, align 8
  store i64 %308, i64* %flags.addr.i711, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !7589
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !7589
  store i32 1, i32* %tmp.i712, align 4, !dbg !7589
  %309 = load i32, i32* %tmp.i712, align 4, !dbg !7589
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !7590
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !7590
  store i32 1, i32* %tmp8.i713, align 4, !dbg !7590
  %310 = load i32, i32* %tmp8.i713, align 4, !dbg !7590
  %311 = load i64, i64* %flags.addr.i711, align 8, !dbg !7591
  call void @arch_local_irq_restore(i64 %311) #12, !dbg !7591
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7592, !srcloc !6997
  %312 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i710, align 8, !dbg !7593
  %313 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %312, i32 0, i32 0, !dbg !7593
  %rlock.i714 = bitcast %union.anon.0* %313 to %struct.raw_spinlock*, !dbg !7593
  call void @usleep_range(i64 10000, i64 20000) #11, !dbg !7594
  br label %do.body494, !dbg !7595

do.body494:                                       ; preds = %if.then492
  br label %do.body495, !dbg !7596

do.body495:                                       ; preds = %do.body494
  call void @llvm.dbg.declare(metadata i64* %__dummy496, metadata !7597, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.declare(metadata i64* %__dummy2497, metadata !7600, metadata !DIExpression()), !dbg !7599
  %cmp498 = icmp eq i64* %__dummy496, %__dummy2497, !dbg !7599
  %conv499 = zext i1 %cmp498 to i32, !dbg !7599
  store i32 1, i32* %tmp500, align 4, !dbg !7599
  %314 = load i32, i32* %tmp500, align 4, !dbg !7599
  br label %do.body501, !dbg !7601

do.body501:                                       ; preds = %do.body495
  br label %do.body502, !dbg !7602

do.body502:                                       ; preds = %do.body501
  br label %do.body503, !dbg !7603

do.body503:                                       ; preds = %do.body502
  call void @llvm.dbg.declare(metadata i64* %__dummy504, metadata !7605, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.declare(metadata i64* %__dummy2505, metadata !7609, metadata !DIExpression()), !dbg !7608
  %cmp506 = icmp eq i64* %__dummy504, %__dummy2505, !dbg !7608
  %conv507 = zext i1 %cmp506 to i32, !dbg !7608
  store i32 1, i32* %tmp508, align 4, !dbg !7608
  %315 = load i32, i32* %tmp508, align 4, !dbg !7608
  %call509 = call i64 @arch_local_irq_save() #11, !dbg !7610
  store i64 %call509, i64* %flags, align 8, !dbg !7610
  br label %do.end510, !dbg !7610

do.end510:                                        ; preds = %do.body503
  br label %do.end511, !dbg !7603

do.end511:                                        ; preds = %do.end510
  br label %do.body512, !dbg !7602

do.body512:                                       ; preds = %do.end511
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7611, !srcloc !7612
  br label %do.body513, !dbg !7611

do.body513:                                       ; preds = %do.body512
  %316 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7613
  %lock514 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %316, i32 0, i32 11, !dbg !7613
  store %struct.spinlock* %lock514, %struct.spinlock** %lock.addr.i715, align 8
  %317 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i715, align 8, !dbg !7614
  %318 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %317, i32 0, i32 0, !dbg !7615
  %rlock.i716 = bitcast %union.anon.0* %318 to %struct.raw_spinlock*, !dbg !7615
  br label %do.end516, !dbg !7613

do.end516:                                        ; preds = %do.body513
  br label %do.end517, !dbg !7611

do.end517:                                        ; preds = %do.end516
  br label %do.end518, !dbg !7602

do.end518:                                        ; preds = %do.end517
  br label %do.end519, !dbg !7601

do.end519:                                        ; preds = %do.end518
  br label %do.end520, !dbg !7596

do.end520:                                        ; preds = %do.end519
  br label %if.end521, !dbg !7616

if.end521:                                        ; preds = %do.end520, %if.end486
  %319 = load i16, i16* %wIndex.addr, align 2, !dbg !7617
  %conv522 = zext i16 %319 to i64, !dbg !7617
  %320 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7618
  %suspended_ports523 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %320, i32 0, i32 48, !dbg !7619
  call void @set_bit(i64 %conv522, i64* %suspended_ports523) #11, !dbg !7620
  br label %sw.epilog663, !dbg !7621

sw.bb524:                                         ; preds = %if.end425
  %321 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7622
  %hcs_params525 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %321, i32 0, i32 10, !dbg !7622
  %322 = load i32, i32* %hcs_params525, align 8, !dbg !7622
  %and526 = and i32 %322, 16, !dbg !7622
  %tobool527 = icmp ne i32 %and526, 0, !dbg !7622
  br i1 %tobool527, label %if.then528, label %if.end559, !dbg !7623

if.then528:                                       ; preds = %sw.bb524
  %323 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7624
  %lock529 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %323, i32 0, i32 11, !dbg !7625
  %324 = load i64, i64* %flags, align 8, !dbg !7626
  store %struct.spinlock* %lock529, %struct.spinlock** %lock.addr.i717, align 8
  store i64 %324, i64* %flags.addr.i718, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !7627
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !7627
  store i32 1, i32* %tmp.i719, align 4, !dbg !7627
  %325 = load i32, i32* %tmp.i719, align 4, !dbg !7627
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !7628
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !7628
  store i32 1, i32* %tmp8.i720, align 4, !dbg !7628
  %326 = load i32, i32* %tmp8.i720, align 4, !dbg !7628
  %327 = load i64, i64* %flags.addr.i718, align 8, !dbg !7629
  call void @arch_local_irq_restore(i64 %327) #12, !dbg !7629
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7630, !srcloc !6997
  %328 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i717, align 8, !dbg !7631
  %329 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %328, i32 0, i32 0, !dbg !7631
  %rlock.i721 = bitcast %union.anon.0* %329 to %struct.raw_spinlock*, !dbg !7631
  %330 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7632
  %331 = load i16, i16* %wIndex.addr, align 2, !dbg !7633
  %conv530 = zext i16 %331 to i32, !dbg !7633
  %call531 = call i32 @ehci_port_power(%struct.ehci_hcd* %330, i32 %conv530, i1 zeroext true) #11, !dbg !7634
  br label %do.body532, !dbg !7635

do.body532:                                       ; preds = %if.then528
  br label %do.body533, !dbg !7636

do.body533:                                       ; preds = %do.body532
  call void @llvm.dbg.declare(metadata i64* %__dummy534, metadata !7637, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.declare(metadata i64* %__dummy2535, metadata !7640, metadata !DIExpression()), !dbg !7639
  %cmp536 = icmp eq i64* %__dummy534, %__dummy2535, !dbg !7639
  %conv537 = zext i1 %cmp536 to i32, !dbg !7639
  store i32 1, i32* %tmp538, align 4, !dbg !7639
  %332 = load i32, i32* %tmp538, align 4, !dbg !7639
  br label %do.body539, !dbg !7641

do.body539:                                       ; preds = %do.body533
  br label %do.body540, !dbg !7642

do.body540:                                       ; preds = %do.body539
  br label %do.body541, !dbg !7643

do.body541:                                       ; preds = %do.body540
  call void @llvm.dbg.declare(metadata i64* %__dummy542, metadata !7645, metadata !DIExpression()), !dbg !7648
  call void @llvm.dbg.declare(metadata i64* %__dummy2543, metadata !7649, metadata !DIExpression()), !dbg !7648
  %cmp544 = icmp eq i64* %__dummy542, %__dummy2543, !dbg !7648
  %conv545 = zext i1 %cmp544 to i32, !dbg !7648
  store i32 1, i32* %tmp546, align 4, !dbg !7648
  %333 = load i32, i32* %tmp546, align 4, !dbg !7648
  %call547 = call i64 @arch_local_irq_save() #11, !dbg !7650
  store i64 %call547, i64* %flags, align 8, !dbg !7650
  br label %do.end548, !dbg !7650

do.end548:                                        ; preds = %do.body541
  br label %do.end549, !dbg !7643

do.end549:                                        ; preds = %do.end548
  br label %do.body550, !dbg !7642

do.body550:                                       ; preds = %do.end549
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7651, !srcloc !7652
  br label %do.body551, !dbg !7651

do.body551:                                       ; preds = %do.body550
  %334 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7653
  %lock552 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %334, i32 0, i32 11, !dbg !7653
  store %struct.spinlock* %lock552, %struct.spinlock** %lock.addr.i722, align 8
  %335 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i722, align 8, !dbg !7654
  %336 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %335, i32 0, i32 0, !dbg !7655
  %rlock.i723 = bitcast %union.anon.0* %336 to %struct.raw_spinlock*, !dbg !7655
  br label %do.end554, !dbg !7653

do.end554:                                        ; preds = %do.body551
  br label %do.end555, !dbg !7651

do.end555:                                        ; preds = %do.end554
  br label %do.end556, !dbg !7642

do.end556:                                        ; preds = %do.end555
  br label %do.end557, !dbg !7641

do.end557:                                        ; preds = %do.end556
  br label %do.end558, !dbg !7636

do.end558:                                        ; preds = %do.end557
  br label %if.end559, !dbg !7656

if.end559:                                        ; preds = %do.end558, %sw.bb524
  br label %sw.epilog663, !dbg !7657

sw.bb560:                                         ; preds = %if.end425
  %337 = load i32, i32* %temp, align 4, !dbg !7658
  %and561 = and i32 %337, 192, !dbg !7660
  %tobool562 = icmp ne i32 %and561, 0, !dbg !7660
  br i1 %tobool562, label %if.then563, label %if.end564, !dbg !7661

if.then563:                                       ; preds = %sw.bb560
  br label %error, !dbg !7662

if.end564:                                        ; preds = %sw.bb560
  %338 = load i32, i32* %temp, align 4, !dbg !7663
  %and565 = and i32 %338, 5, !dbg !7664
  %cmp566 = icmp eq i32 %and565, 1, !dbg !7665
  br i1 %cmp566, label %land.lhs.true568, label %if.else574, !dbg !7666

land.lhs.true568:                                 ; preds = %if.end564
  %339 = load i32, i32* %temp, align 4, !dbg !7667
  %and569 = and i32 %339, 3072, !dbg !7667
  %cmp570 = icmp eq i32 %and569, 1024, !dbg !7667
  br i1 %cmp570, label %if.then572, label %if.else574, !dbg !7668

if.then572:                                       ; preds = %land.lhs.true568
  %340 = load i32, i32* %temp, align 4, !dbg !7669
  %or573 = or i32 %340, 8192, !dbg !7669
  store i32 %or573, i32* %temp, align 4, !dbg !7669
  br label %if.end582, !dbg !7671

if.else574:                                       ; preds = %land.lhs.true568, %if.end564
  %341 = load i32, i32* %temp, align 4, !dbg !7672
  %or575 = or i32 %341, 256, !dbg !7672
  store i32 %or575, i32* %temp, align 4, !dbg !7672
  %342 = load i32, i32* %temp, align 4, !dbg !7673
  %and576 = and i32 %342, -5, !dbg !7673
  store i32 %and576, i32* %temp, align 4, !dbg !7673
  %343 = load volatile i64, i64* @jiffies, align 8, !dbg !7674
  store i32 50, i32* %m.addr.i725, align 4
  %344 = load i32, i32* %m.addr.i725, align 4, !dbg !7675
  %345 = call i1 @llvm.is.constant.i32(i32 %344) #7, !dbg !7676
  br i1 %345, label %if.then.i727, label %if.else.i732, !dbg !7677

if.then.i727:                                     ; preds = %if.else574
  %346 = load i32, i32* %m.addr.i725, align 4, !dbg !7678
  %cmp.i726 = icmp slt i32 %346, 0, !dbg !7679
  br i1 %cmp.i726, label %if.then1.i728, label %if.end.i730, !dbg !7680

if.then1.i728:                                    ; preds = %if.then.i727
  store i64 4611686018427387902, i64* %retval.i724, align 8, !dbg !7681
  br label %msecs_to_jiffies.exit733, !dbg !7681

if.end.i730:                                      ; preds = %if.then.i727
  %347 = load i32, i32* %m.addr.i725, align 4, !dbg !7682
  %call.i729 = call i64 @_msecs_to_jiffies(i32 %347) #12, !dbg !7683
  store i64 %call.i729, i64* %retval.i724, align 8, !dbg !7684
  br label %msecs_to_jiffies.exit733, !dbg !7684

if.else.i732:                                     ; preds = %if.else574
  %348 = load i32, i32* %m.addr.i725, align 4, !dbg !7685
  %call2.i731 = call i64 @__msecs_to_jiffies(i32 %348) #12, !dbg !7686
  store i64 %call2.i731, i64* %retval.i724, align 8, !dbg !7687
  br label %msecs_to_jiffies.exit733, !dbg !7687

msecs_to_jiffies.exit733:                         ; preds = %if.then1.i728, %if.end.i730, %if.else.i732
  %349 = load i64, i64* %retval.i724, align 8, !dbg !7688
  %add578 = add i64 %343, %349, !dbg !7689
  %350 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7690
  %reset_done579 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %350, i32 0, i32 43, !dbg !7691
  %351 = load i16, i16* %wIndex.addr, align 2, !dbg !7692
  %idxprom580 = zext i16 %351 to i64, !dbg !7690
  %arrayidx581 = getelementptr [15 x i64], [15 x i64]* %reset_done579, i64 0, i64 %idxprom580, !dbg !7690
  store i64 %add578, i64* %arrayidx581, align 8, !dbg !7693
  br label %if.end582

if.end582:                                        ; preds = %msecs_to_jiffies.exit733, %if.then572
  %352 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7694
  %353 = load i32, i32* %temp, align 4, !dbg !7695
  %354 = load i32*, i32** %status_reg, align 8, !dbg !7696
  call void @ehci_writel(%struct.ehci_hcd* %352, i32 %353, i32* %354) #11, !dbg !7697
  br label %sw.epilog663, !dbg !7698

sw.bb583:                                         ; preds = %if.end425
  %355 = load i32, i32* %selector, align 4, !dbg !7699
  %tobool584 = icmp ne i32 %355, 0, !dbg !7699
  br i1 %tobool584, label %lor.lhs.false585, label %if.then588, !dbg !7701

lor.lhs.false585:                                 ; preds = %sw.bb583
  %356 = load i32, i32* %selector, align 4, !dbg !7702
  %cmp586 = icmp ugt i32 %356, 5, !dbg !7703
  br i1 %cmp586, label %if.then588, label %if.end589, !dbg !7704

if.then588:                                       ; preds = %lor.lhs.false585, %sw.bb583
  br label %error, !dbg !7705

if.end589:                                        ; preds = %lor.lhs.false585
  %357 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7706
  %lock590 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %357, i32 0, i32 11, !dbg !7707
  %358 = load i64, i64* %flags, align 8, !dbg !7708
  store %struct.spinlock* %lock590, %struct.spinlock** %lock.addr.i734, align 8
  store i64 %358, i64* %flags.addr.i735, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !7709
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !7709
  store i32 1, i32* %tmp.i736, align 4, !dbg !7709
  %359 = load i32, i32* %tmp.i736, align 4, !dbg !7709
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !7710
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !7710
  store i32 1, i32* %tmp8.i737, align 4, !dbg !7710
  %360 = load i32, i32* %tmp8.i737, align 4, !dbg !7710
  %361 = load i64, i64* %flags.addr.i735, align 8, !dbg !7711
  call void @arch_local_irq_restore(i64 %361) #12, !dbg !7711
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7712, !srcloc !6997
  %362 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i734, align 8, !dbg !7713
  %363 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %362, i32 0, i32 0, !dbg !7713
  %rlock.i738 = bitcast %union.anon.0* %363 to %struct.raw_spinlock*, !dbg !7713
  %364 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7714
  call void @ehci_quiesce(%struct.ehci_hcd* %364) #11, !dbg !7715
  br label %do.body591, !dbg !7716

do.body591:                                       ; preds = %if.end589
  br label %do.body592, !dbg !7717

do.body592:                                       ; preds = %do.body591
  call void @llvm.dbg.declare(metadata i64* %__dummy593, metadata !7718, metadata !DIExpression()), !dbg !7720
  call void @llvm.dbg.declare(metadata i64* %__dummy2594, metadata !7721, metadata !DIExpression()), !dbg !7720
  %cmp595 = icmp eq i64* %__dummy593, %__dummy2594, !dbg !7720
  %conv596 = zext i1 %cmp595 to i32, !dbg !7720
  store i32 1, i32* %tmp597, align 4, !dbg !7720
  %365 = load i32, i32* %tmp597, align 4, !dbg !7720
  br label %do.body598, !dbg !7722

do.body598:                                       ; preds = %do.body592
  br label %do.body599, !dbg !7723

do.body599:                                       ; preds = %do.body598
  br label %do.body600, !dbg !7724

do.body600:                                       ; preds = %do.body599
  call void @llvm.dbg.declare(metadata i64* %__dummy601, metadata !7726, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.declare(metadata i64* %__dummy2602, metadata !7730, metadata !DIExpression()), !dbg !7729
  %cmp603 = icmp eq i64* %__dummy601, %__dummy2602, !dbg !7729
  %conv604 = zext i1 %cmp603 to i32, !dbg !7729
  store i32 1, i32* %tmp605, align 4, !dbg !7729
  %366 = load i32, i32* %tmp605, align 4, !dbg !7729
  %call606 = call i64 @arch_local_irq_save() #11, !dbg !7731
  store i64 %call606, i64* %flags, align 8, !dbg !7731
  br label %do.end607, !dbg !7731

do.end607:                                        ; preds = %do.body600
  br label %do.end608, !dbg !7724

do.end608:                                        ; preds = %do.end607
  br label %do.body609, !dbg !7723

do.body609:                                       ; preds = %do.end608
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7732, !srcloc !7733
  br label %do.body610, !dbg !7732

do.body610:                                       ; preds = %do.body609
  %367 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7734
  %lock611 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %367, i32 0, i32 11, !dbg !7734
  store %struct.spinlock* %lock611, %struct.spinlock** %lock.addr.i739, align 8
  %368 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i739, align 8, !dbg !7735
  %369 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %368, i32 0, i32 0, !dbg !7736
  %rlock.i740 = bitcast %union.anon.0* %369 to %struct.raw_spinlock*, !dbg !7736
  br label %do.end613, !dbg !7734

do.end613:                                        ; preds = %do.body610
  br label %do.end614, !dbg !7732

do.end614:                                        ; preds = %do.end613
  br label %do.end615, !dbg !7723

do.end615:                                        ; preds = %do.end614
  br label %do.end616, !dbg !7722

do.end616:                                        ; preds = %do.end615
  br label %do.end617, !dbg !7717

do.end617:                                        ; preds = %do.end616
  br label %while.cond, !dbg !7737

while.cond:                                       ; preds = %if.end630, %do.end617
  %370 = load i32, i32* %ports, align 4, !dbg !7738
  %dec618 = add i32 %370, -1, !dbg !7738
  store i32 %dec618, i32* %ports, align 4, !dbg !7738
  %tobool619 = icmp ne i32 %370, 0, !dbg !7737
  br i1 %tobool619, label %while.body, label %while.end, !dbg !7737

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32** %sreg, metadata !7739, metadata !DIExpression()), !dbg !7741
  %371 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7742
  %regs620 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %371, i32 0, i32 8, !dbg !7743
  %372 = load %struct.ehci_regs*, %struct.ehci_regs** %regs620, align 8, !dbg !7743
  %port_status621 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %372, i32 0, i32 11, !dbg !7744
  %373 = load i32, i32* %ports, align 4, !dbg !7745
  %idxprom622 = sext i32 %373 to i64, !dbg !7742
  %arrayidx623 = getelementptr [0 x i32], [0 x i32]* %port_status621, i64 0, i64 %idxprom622, !dbg !7742
  store i32* %arrayidx623, i32** %sreg, align 8, !dbg !7741
  %374 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7746
  %375 = load i32*, i32** %sreg, align 8, !dbg !7747
  %call624 = call i32 @ehci_readl(%struct.ehci_hcd* %374, i32* %375) #11, !dbg !7748
  %and625 = and i32 %call624, -43, !dbg !7749
  store i32 %and625, i32* %temp, align 4, !dbg !7750
  %376 = load i32, i32* %temp, align 4, !dbg !7751
  %and626 = and i32 %376, 4, !dbg !7753
  %tobool627 = icmp ne i32 %and626, 0, !dbg !7753
  br i1 %tobool627, label %if.then628, label %if.end630, !dbg !7754

if.then628:                                       ; preds = %while.body
  %377 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7755
  %378 = load i32, i32* %temp, align 4, !dbg !7756
  %or629 = or i32 %378, 128, !dbg !7757
  %379 = load i32*, i32** %sreg, align 8, !dbg !7758
  call void @ehci_writel(%struct.ehci_hcd* %377, i32 %or629, i32* %379) #11, !dbg !7759
  br label %if.end630, !dbg !7759

if.end630:                                        ; preds = %if.then628, %while.body
  br label %while.cond, !dbg !7737, !llvm.loop !7760

while.end:                                        ; preds = %while.cond
  %380 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7762
  %lock631 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %380, i32 0, i32 11, !dbg !7763
  %381 = load i64, i64* %flags, align 8, !dbg !7764
  store %struct.spinlock* %lock631, %struct.spinlock** %lock.addr.i741, align 8
  store i64 %381, i64* %flags.addr.i742, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !7765
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !7765
  store i32 1, i32* %tmp.i743, align 4, !dbg !7765
  %382 = load i32, i32* %tmp.i743, align 4, !dbg !7765
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !7766
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !7766
  store i32 1, i32* %tmp8.i744, align 4, !dbg !7766
  %383 = load i32, i32* %tmp8.i744, align 4, !dbg !7766
  %384 = load i64, i64* %flags.addr.i742, align 8, !dbg !7767
  call void @arch_local_irq_restore(i64 %384) #12, !dbg !7767
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7768, !srcloc !6997
  %385 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i741, align 8, !dbg !7769
  %386 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %385, i32 0, i32 0, !dbg !7769
  %rlock.i745 = bitcast %union.anon.0* %386 to %struct.raw_spinlock*, !dbg !7769
  %387 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7770
  %call632 = call i32 @ehci_halt(%struct.ehci_hcd* %387) #11, !dbg !7771
  br label %do.body633, !dbg !7772

do.body633:                                       ; preds = %while.end
  br label %do.body634, !dbg !7773

do.body634:                                       ; preds = %do.body633
  call void @llvm.dbg.declare(metadata i64* %__dummy635, metadata !7774, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.declare(metadata i64* %__dummy2636, metadata !7777, metadata !DIExpression()), !dbg !7776
  %cmp637 = icmp eq i64* %__dummy635, %__dummy2636, !dbg !7776
  %conv638 = zext i1 %cmp637 to i32, !dbg !7776
  store i32 1, i32* %tmp639, align 4, !dbg !7776
  %388 = load i32, i32* %tmp639, align 4, !dbg !7776
  br label %do.body640, !dbg !7778

do.body640:                                       ; preds = %do.body634
  br label %do.body641, !dbg !7779

do.body641:                                       ; preds = %do.body640
  br label %do.body642, !dbg !7780

do.body642:                                       ; preds = %do.body641
  call void @llvm.dbg.declare(metadata i64* %__dummy643, metadata !7782, metadata !DIExpression()), !dbg !7785
  call void @llvm.dbg.declare(metadata i64* %__dummy2644, metadata !7786, metadata !DIExpression()), !dbg !7785
  %cmp645 = icmp eq i64* %__dummy643, %__dummy2644, !dbg !7785
  %conv646 = zext i1 %cmp645 to i32, !dbg !7785
  store i32 1, i32* %tmp647, align 4, !dbg !7785
  %389 = load i32, i32* %tmp647, align 4, !dbg !7785
  %call648 = call i64 @arch_local_irq_save() #11, !dbg !7787
  store i64 %call648, i64* %flags, align 8, !dbg !7787
  br label %do.end649, !dbg !7787

do.end649:                                        ; preds = %do.body642
  br label %do.end650, !dbg !7780

do.end650:                                        ; preds = %do.end649
  br label %do.body651, !dbg !7779

do.body651:                                       ; preds = %do.end650
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7788, !srcloc !7789
  br label %do.body652, !dbg !7788

do.body652:                                       ; preds = %do.body651
  %390 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7790
  %lock653 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %390, i32 0, i32 11, !dbg !7790
  store %struct.spinlock* %lock653, %struct.spinlock** %lock.addr.i746, align 8
  %391 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i746, align 8, !dbg !7791
  %392 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %391, i32 0, i32 0, !dbg !7792
  %rlock.i747 = bitcast %union.anon.0* %392 to %struct.raw_spinlock*, !dbg !7792
  br label %do.end655, !dbg !7790

do.end655:                                        ; preds = %do.body652
  br label %do.end656, !dbg !7788

do.end656:                                        ; preds = %do.end655
  br label %do.end657, !dbg !7779

do.end657:                                        ; preds = %do.end656
  br label %do.end658, !dbg !7778

do.end658:                                        ; preds = %do.end657
  br label %do.end659, !dbg !7773

do.end659:                                        ; preds = %do.end658
  %393 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7793
  %394 = load i32*, i32** %status_reg, align 8, !dbg !7794
  %call660 = call i32 @ehci_readl(%struct.ehci_hcd* %393, i32* %394) #11, !dbg !7795
  store i32 %call660, i32* %temp, align 4, !dbg !7796
  %395 = load i32, i32* %selector, align 4, !dbg !7797
  %shl = shl i32 %395, 16, !dbg !7798
  %396 = load i32, i32* %temp, align 4, !dbg !7799
  %or661 = or i32 %396, %shl, !dbg !7799
  store i32 %or661, i32* %temp, align 4, !dbg !7799
  %397 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7800
  %398 = load i32, i32* %temp, align 4, !dbg !7801
  %399 = load i32*, i32** %status_reg, align 8, !dbg !7802
  call void @ehci_writel(%struct.ehci_hcd* %397, i32 %398, i32* %399) #11, !dbg !7803
  br label %sw.epilog663, !dbg !7804

sw.default662:                                    ; preds = %if.end425
  br label %error, !dbg !7805

sw.epilog663:                                     ; preds = %do.end659, %if.end582, %if.end559, %if.end521, %if.then434
  %400 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7806
  %401 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7807
  %regs664 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %401, i32 0, i32 8, !dbg !7808
  %402 = load %struct.ehci_regs*, %struct.ehci_regs** %regs664, align 8, !dbg !7808
  %command665 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %402, i32 0, i32 0, !dbg !7809
  %call666 = call i32 @ehci_readl(%struct.ehci_hcd* %400, i32* %command665) #11, !dbg !7810
  br label %sw.epilog668, !dbg !7811

sw.default667:                                    ; preds = %do.end27
  br label %error, !dbg !7811

error:                                            ; preds = %sw.default667, %sw.default662, %if.then588, %if.then563, %if.then443, %if.then418, %sw.default386, %if.then286, %if.then270, %if.then156, %sw.default144, %if.then56, %if.then44, %if.then, %sw.default
  call void @llvm.dbg.label(metadata !7812), !dbg !7813
  store i32 -32, i32* %retval1, align 4, !dbg !7814
  br label %sw.epilog668, !dbg !7815

sw.epilog668:                                     ; preds = %error, %sw.epilog663, %if.then424, %sw.epilog387, %if.end382, %sw.bb149, %sw.bb148, %sw.epilog145, %sw.epilog
  br label %error_exit, !dbg !7815

error_exit:                                       ; preds = %sw.epilog668, %if.then410
  call void @llvm.dbg.label(metadata !7816), !dbg !7817
  %403 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !7818
  %lock669 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %403, i32 0, i32 11, !dbg !7819
  %404 = load i64, i64* %flags, align 8, !dbg !7820
  store %struct.spinlock* %lock669, %struct.spinlock** %lock.addr.i670, align 8
  store i64 %404, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !7821
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !7821
  store i32 1, i32* %tmp.i, align 4, !dbg !7821
  %405 = load i32, i32* %tmp.i, align 4, !dbg !7821
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !7822
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !7822
  store i32 1, i32* %tmp8.i, align 4, !dbg !7822
  %406 = load i32, i32* %tmp8.i, align 4, !dbg !7822
  %407 = load i64, i64* %flags.addr.i, align 8, !dbg !7823
  call void @arch_local_irq_restore(i64 %407) #12, !dbg !7823
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7824, !srcloc !6997
  %408 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i670, align 8, !dbg !7825
  %409 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %408, i32 0, i32 0, !dbg !7825
  %rlock.i671 = bitcast %union.anon.0* %409 to %struct.raw_spinlock*, !dbg !7825
  %410 = load i32, i32* %retval1, align 4, !dbg !7826
  ret i32 %410, !dbg !7827
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %hcd) #0 !dbg !7828 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !7831, metadata !DIExpression()), !dbg !7832
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !7833
  %hcd_priv = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %0, i32 0, i32 29, !dbg !7834
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %hcd_priv, i64 0, i64 0, !dbg !7835
  %1 = bitcast i64* %arraydecay to %struct.ehci_hcd*, !dbg !7836
  ret %struct.ehci_hcd* %1, !dbg !7837
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !7838 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !7842, metadata !DIExpression()), !dbg !7843
  %call = call i64 @arch_local_save_flags() #11, !dbg !7844
  store i64 %call, i64* %f, align 8, !dbg !7845
  call void @arch_local_irq_disable() #11, !dbg !7846
  %0 = load i64, i64* %f, align 8, !dbg !7847
  ret i64 %0, !dbg !7848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !7849 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7855, metadata !DIExpression()), !dbg !7858
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7860, metadata !DIExpression()), !dbg !7861
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7862, metadata !DIExpression()), !dbg !7870
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7872, metadata !DIExpression()), !dbg !7873
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7874, metadata !DIExpression()), !dbg !7875
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7876, metadata !DIExpression()), !dbg !7877
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7878
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7879
  %div = sdiv i64 %1, 64, !dbg !7879
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7880
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7878
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7881
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7882
  %conv.i = trunc i64 %4 to i32, !dbg !7882
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !7883
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7884
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7884
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !7884
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7885
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7886
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7887
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !7889
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7890

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7891
  %12 = bitcast i64* %11 to i8*, !dbg !7891
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7891
  %shr.i = ashr i64 %13, 3, !dbg !7891
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7891
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7893
  %and.i = and i64 %14, 7, !dbg !7893
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7893
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7893
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #7, !dbg !7894, !srcloc !7895
  br label %arch_set_bit.exit, !dbg !7896

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7897
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7899
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !7900, !srcloc !7901
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7902
}

; Function Attrs: noredzone
declare dso_local void @usb_hcd_start_port_resume(%struct.usb_bus*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !7903 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7904, metadata !DIExpression()), !dbg !7906
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7908, metadata !DIExpression()), !dbg !7909
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7862, metadata !DIExpression()), !dbg !7910
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7872, metadata !DIExpression()), !dbg !7912
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7913, metadata !DIExpression()), !dbg !7914
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7915, metadata !DIExpression()), !dbg !7916
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7917
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7918
  %div = sdiv i64 %1, 64, !dbg !7918
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7919
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7917
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7920
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7921
  %conv.i = trunc i64 %4 to i32, !dbg !7921
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !7922
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7923
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7923
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !7923
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7924
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7925
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !7926
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !7928
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !7929

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !7930
  %12 = bitcast i64* %11 to i8*, !dbg !7930
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !7930
  %shr.i = ashr i64 %13, 3, !dbg !7930
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !7930
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !7932
  %and.i = and i64 %14, 7, !dbg !7932
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !7932
  %shl.i = shl i32 1, %sh_prom.i, !dbg !7932
  %neg.i = xor i32 %shl.i, -1, !dbg !7933
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #7, !dbg !7934, !srcloc !7935
  br label %arch_clear_bit.exit, !dbg !7936

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !7937
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !7939
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !7940, !srcloc !7941
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !7942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_port_power(%struct.ehci_hcd* %ehci, i32 %portnum, i1 zeroext %enable) #0 !dbg !7943 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %portnum.addr = alloca i32, align 4
  %enable.addr = alloca i8, align 1
  %hcd = alloca %struct.usb_hcd*, align 8
  %status_reg = alloca i32*, align 8
  %temp = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !7946, metadata !DIExpression()), !dbg !7947
  store i32 %portnum, i32* %portnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %portnum.addr, metadata !7948, metadata !DIExpression()), !dbg !7949
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !7950, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd, metadata !7952, metadata !DIExpression()), !dbg !7953
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !7954
  %call = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %0) #11, !dbg !7955
  store %struct.usb_hcd* %call, %struct.usb_hcd** %hcd, align 8, !dbg !7953
  call void @llvm.dbg.declare(metadata i32** %status_reg, metadata !7956, metadata !DIExpression()), !dbg !7957
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !7958
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 8, !dbg !7959
  %2 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !7959
  %port_status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %2, i32 0, i32 11, !dbg !7960
  %3 = load i32, i32* %portnum.addr, align 4, !dbg !7961
  %idxprom = sext i32 %3 to i64, !dbg !7958
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %port_status, i64 0, i64 %idxprom, !dbg !7958
  store i32* %arrayidx, i32** %status_reg, align 8, !dbg !7957
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !7962, metadata !DIExpression()), !dbg !7963
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !7964
  %5 = load i32*, i32** %status_reg, align 8, !dbg !7965
  %call1 = call i32 @ehci_readl(%struct.ehci_hcd* %4, i32* %5) #11, !dbg !7966
  %and = and i32 %call1, -43, !dbg !7967
  store i32 %and, i32* %temp, align 4, !dbg !7963
  %6 = load i8, i8* %enable.addr, align 1, !dbg !7968
  %tobool = trunc i8 %6 to i1, !dbg !7968
  br i1 %tobool, label %if.then, label %if.else, !dbg !7970

if.then:                                          ; preds = %entry
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !7971
  %8 = load i32, i32* %temp, align 4, !dbg !7972
  %or = or i32 %8, 4096, !dbg !7973
  %9 = load i32*, i32** %status_reg, align 8, !dbg !7974
  call void @ehci_writel(%struct.ehci_hcd* %7, i32 %or, i32* %9) #11, !dbg !7975
  br label %if.end, !dbg !7975

if.else:                                          ; preds = %entry
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !7976
  %11 = load i32, i32* %temp, align 4, !dbg !7977
  %and2 = and i32 %11, -4097, !dbg !7978
  %12 = load i32*, i32** %status_reg, align 8, !dbg !7979
  call void @ehci_writel(%struct.ehci_hcd* %10, i32 %and2, i32* %12) #11, !dbg !7980
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7981
  %driver = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %13, i32 0, i32 9, !dbg !7983
  %14 = load %struct.hc_driver*, %struct.hc_driver** %driver, align 8, !dbg !7983
  %port_power = getelementptr inbounds %struct.hc_driver, %struct.hc_driver* %14, i32 0, i32 44, !dbg !7984
  %15 = load i32 (%struct.usb_hcd*, i32, i1)*, i32 (%struct.usb_hcd*, i32, i1)** %port_power, align 8, !dbg !7984
  %tobool3 = icmp ne i32 (%struct.usb_hcd*, i32, i1)* %15, null, !dbg !7981
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !7985

if.then4:                                         ; preds = %if.end
  %16 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7986
  %driver5 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %16, i32 0, i32 9, !dbg !7987
  %17 = load %struct.hc_driver*, %struct.hc_driver** %driver5, align 8, !dbg !7987
  %port_power6 = getelementptr inbounds %struct.hc_driver, %struct.hc_driver* %17, i32 0, i32 44, !dbg !7988
  %18 = load i32 (%struct.usb_hcd*, i32, i1)*, i32 (%struct.usb_hcd*, i32, i1)** %port_power6, align 8, !dbg !7988
  %19 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !7989
  %20 = load i32, i32* %portnum.addr, align 4, !dbg !7990
  %21 = load i8, i8* %enable.addr, align 1, !dbg !7991
  %tobool7 = trunc i8 %21 to i1, !dbg !7991
  %call8 = call i32 %18(%struct.usb_hcd* %19, i32 %20, i1 zeroext %tobool7) #11, !dbg !7986
  br label %if.end9, !dbg !7986

if.end9:                                          ; preds = %if.then4, %if.end
  ret i32 0, !dbg !7992
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_hub_descriptor(%struct.ehci_hcd* %ehci, %struct.usb_hub_descriptor* %desc) #0 !dbg !7993 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %desc.addr = alloca %struct.usb_hub_descriptor*, align 8
  %ports = alloca i32, align 4
  %temp = alloca i16, align 2
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !7996, metadata !DIExpression()), !dbg !7997
  store %struct.usb_hub_descriptor* %desc, %struct.usb_hub_descriptor** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hub_descriptor** %desc.addr, metadata !7998, metadata !DIExpression()), !dbg !7999
  call void @llvm.dbg.declare(metadata i32* %ports, metadata !8000, metadata !DIExpression()), !dbg !8001
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8002
  %hcs_params = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 10, !dbg !8002
  %1 = load i32, i32* %hcs_params, align 8, !dbg !8002
  %shr = lshr i32 %1, 0, !dbg !8002
  %and = and i32 %shr, 15, !dbg !8002
  store i32 %and, i32* %ports, align 4, !dbg !8001
  call void @llvm.dbg.declare(metadata i16* %temp, metadata !8003, metadata !DIExpression()), !dbg !8004
  %2 = load %struct.usb_hub_descriptor*, %struct.usb_hub_descriptor** %desc.addr, align 8, !dbg !8005
  %bDescriptorType = getelementptr inbounds %struct.usb_hub_descriptor, %struct.usb_hub_descriptor* %2, i32 0, i32 1, !dbg !8006
  store i8 41, i8* %bDescriptorType, align 1, !dbg !8007
  %3 = load %struct.usb_hub_descriptor*, %struct.usb_hub_descriptor** %desc.addr, align 8, !dbg !8008
  %bPwrOn2PwrGood = getelementptr inbounds %struct.usb_hub_descriptor, %struct.usb_hub_descriptor* %3, i32 0, i32 4, !dbg !8009
  store i8 10, i8* %bPwrOn2PwrGood, align 1, !dbg !8010
  %4 = load %struct.usb_hub_descriptor*, %struct.usb_hub_descriptor** %desc.addr, align 8, !dbg !8011
  %bHubContrCurrent = getelementptr inbounds %struct.usb_hub_descriptor, %struct.usb_hub_descriptor* %4, i32 0, i32 5, !dbg !8012
  store i8 0, i8* %bHubContrCurrent, align 1, !dbg !8013
  %5 = load i32, i32* %ports, align 4, !dbg !8014
  %conv = trunc i32 %5 to i8, !dbg !8014
  %6 = load %struct.usb_hub_descriptor*, %struct.usb_hub_descriptor** %desc.addr, align 8, !dbg !8015
  %bNbrPorts = getelementptr inbounds %struct.usb_hub_descriptor, %struct.usb_hub_descriptor* %6, i32 0, i32 2, !dbg !8016
  store i8 %conv, i8* %bNbrPorts, align 1, !dbg !8017
  %7 = load i32, i32* %ports, align 4, !dbg !8018
  %div = sdiv i32 %7, 8, !dbg !8019
  %add = add i32 1, %div, !dbg !8020
  %conv1 = trunc i32 %add to i16, !dbg !8021
  store i16 %conv1, i16* %temp, align 2, !dbg !8022
  %8 = load i16, i16* %temp, align 2, !dbg !8023
  %conv2 = zext i16 %8 to i32, !dbg !8023
  %mul = mul i32 2, %conv2, !dbg !8024
  %add3 = add i32 7, %mul, !dbg !8025
  %conv4 = trunc i32 %add3 to i8, !dbg !8026
  %9 = load %struct.usb_hub_descriptor*, %struct.usb_hub_descriptor** %desc.addr, align 8, !dbg !8027
  %bDescLength = getelementptr inbounds %struct.usb_hub_descriptor, %struct.usb_hub_descriptor* %9, i32 0, i32 0, !dbg !8028
  store i8 %conv4, i8* %bDescLength, align 1, !dbg !8029
  %10 = load %struct.usb_hub_descriptor*, %struct.usb_hub_descriptor** %desc.addr, align 8, !dbg !8030
  %u = getelementptr inbounds %struct.usb_hub_descriptor, %struct.usb_hub_descriptor* %10, i32 0, i32 6, !dbg !8031
  %hs = bitcast %union.anon.81* %u to %struct.anon.82*, !dbg !8032
  %DeviceRemovable = getelementptr inbounds %struct.anon.82, %struct.anon.82* %hs, i32 0, i32 0, !dbg !8033
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %DeviceRemovable, i64 0, i64 0, !dbg !8030
  %11 = load i16, i16* %temp, align 2, !dbg !8034
  %conv5 = zext i16 %11 to i64, !dbg !8034
  call void @llvm.memset.p0i8.i64(i8* align 1 %arrayidx, i8 0, i64 %conv5, i1 false), !dbg !8035
  %12 = load %struct.usb_hub_descriptor*, %struct.usb_hub_descriptor** %desc.addr, align 8, !dbg !8036
  %u6 = getelementptr inbounds %struct.usb_hub_descriptor, %struct.usb_hub_descriptor* %12, i32 0, i32 6, !dbg !8037
  %hs7 = bitcast %union.anon.81* %u6 to %struct.anon.82*, !dbg !8038
  %DeviceRemovable8 = getelementptr inbounds %struct.anon.82, %struct.anon.82* %hs7, i32 0, i32 0, !dbg !8039
  %13 = load i16, i16* %temp, align 2, !dbg !8040
  %idxprom = zext i16 %13 to i64, !dbg !8036
  %arrayidx9 = getelementptr [4 x i8], [4 x i8]* %DeviceRemovable8, i64 0, i64 %idxprom, !dbg !8036
  %14 = load i16, i16* %temp, align 2, !dbg !8041
  %conv10 = zext i16 %14 to i64, !dbg !8041
  call void @llvm.memset.p0i8.i64(i8* align 1 %arrayidx9, i8 -1, i64 %conv10, i1 false), !dbg !8042
  store i16 8, i16* %temp, align 2, !dbg !8043
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8044
  %hcs_params11 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %15, i32 0, i32 10, !dbg !8044
  %16 = load i32, i32* %hcs_params11, align 8, !dbg !8044
  %and12 = and i32 %16, 16, !dbg !8044
  %tobool = icmp ne i32 %and12, 0, !dbg !8044
  br i1 %tobool, label %if.then, label %if.else, !dbg !8046

if.then:                                          ; preds = %entry
  %17 = load i16, i16* %temp, align 2, !dbg !8047
  %conv13 = zext i16 %17 to i32, !dbg !8047
  %or = or i32 %conv13, 1, !dbg !8047
  %conv14 = trunc i32 %or to i16, !dbg !8047
  store i16 %conv14, i16* %temp, align 2, !dbg !8047
  br label %if.end, !dbg !8048

if.else:                                          ; preds = %entry
  %18 = load i16, i16* %temp, align 2, !dbg !8049
  %conv15 = zext i16 %18 to i32, !dbg !8049
  %or16 = or i32 %conv15, 2, !dbg !8049
  %conv17 = trunc i32 %or16 to i16, !dbg !8049
  store i16 %conv17, i16* %temp, align 2, !dbg !8049
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %19 = load i16, i16* %temp, align 2, !dbg !8050
  %20 = load %struct.usb_hub_descriptor*, %struct.usb_hub_descriptor** %desc.addr, align 8, !dbg !8051
  %wHubCharacteristics = getelementptr inbounds %struct.usb_hub_descriptor, %struct.usb_hub_descriptor* %20, i32 0, i32 3, !dbg !8052
  store i16 %19, i16* %wHubCharacteristics, align 1, !dbg !8053
  ret void, !dbg !8054
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_bit(i64 %nr, i64* %addr) #0 !dbg !8055 {
entry:
  %nr.addr.i3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i3, metadata !8061, metadata !DIExpression()), !dbg !8063
  %addr.addr.i4 = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i4, metadata !8065, metadata !DIExpression()), !dbg !8066
  %oldbit.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %oldbit.i, metadata !8067, metadata !DIExpression()), !dbg !8068
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8069, metadata !DIExpression()), !dbg !8071
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8073, metadata !DIExpression()), !dbg !8074
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8075, metadata !DIExpression()), !dbg !8077
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8079, metadata !DIExpression()), !dbg !8080
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8081, metadata !DIExpression()), !dbg !8082
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8083, metadata !DIExpression()), !dbg !8084
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8085
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8086
  %div = sdiv i64 %1, 64, !dbg !8086
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8087
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8085
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8088
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8089
  %conv.i = trunc i64 %4 to i32, !dbg !8089
  %call.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i) #12, !dbg !8090
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8091
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8091
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #12, !dbg !8091
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8092
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !8092
  br i1 %8, label %cond.true, label %cond.false, !dbg !8092

cond.true:                                        ; preds = %entry
  %9 = load i64, i64* %nr.addr, align 8, !dbg !8092
  %10 = load i64*, i64** %addr.addr, align 8, !dbg !8092
  store i64 %9, i64* %nr.addr.i, align 8
  store i64* %10, i64** %addr.addr.i, align 8
  %11 = load i64, i64* %nr.addr.i, align 8, !dbg !8093
  %and.i = and i64 %11, 63, !dbg !8094
  %shl.i = shl i64 1, %and.i, !dbg !8095
  %12 = load i64*, i64** %addr.addr.i, align 8, !dbg !8096
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !8097
  %shr.i = ashr i64 %13, 6, !dbg !8098
  %arrayidx.i = getelementptr i64, i64* %12, i64 %shr.i, !dbg !8096
  %14 = load volatile i64, i64* %arrayidx.i, align 8, !dbg !8096
  %and1.i = and i64 %shl.i, %14, !dbg !8099
  %cmp.i = icmp ne i64 %and1.i, 0, !dbg !8100
  %conv = zext i1 %cmp.i to i32, !dbg !8092
  br label %cond.end, !dbg !8092

cond.false:                                       ; preds = %entry
  %15 = load i64, i64* %nr.addr, align 8, !dbg !8092
  %16 = load i64*, i64** %addr.addr, align 8, !dbg !8092
  store i64 %15, i64* %nr.addr.i3, align 8
  store i64* %16, i64** %addr.addr.i4, align 8
  %17 = load i64*, i64** %addr.addr.i4, align 8, !dbg !8101
  %18 = load i64, i64* %nr.addr.i3, align 8, !dbg !8102
  %19 = call i8 asm sideeffect " btq  $2,$1\0A\09/* output condition code c*/\0A", "={@ccc},*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %17, i64 %18) #7, !dbg !8103, !srcloc !8104
  store i8 %19, i8* %oldbit.i, align 1, !dbg !8103
  %20 = load i8, i8* %oldbit.i, align 1, !dbg !8105
  %tobool.i = trunc i8 %20 to i1, !dbg !8105
  %conv2 = zext i1 %tobool.i to i32, !dbg !8092
  br label %cond.end, !dbg !8092

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ %conv2, %cond.false ], !dbg !8092
  %tobool = icmp ne i32 %cond, 0, !dbg !8092
  ret i1 %tobool, !dbg !8106
}

; Function Attrs: noredzone
declare dso_local void @usb_hcd_end_port_resume(%struct.usb_bus*, i32) #2

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @check_reset_complete(%struct.ehci_hcd* %ehci, i32 %index, i32* %status_reg, i32 %port_status) #0 !dbg !8107 {
entry:
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %index.addr = alloca i32, align 4
  %status_reg.addr = alloca i32*, align 8
  %port_status.addr = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !8110, metadata !DIExpression()), !dbg !8111
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8112, metadata !DIExpression()), !dbg !8113
  store i32* %status_reg, i32** %status_reg.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status_reg.addr, metadata !8114, metadata !DIExpression()), !dbg !8115
  store i32 %port_status, i32* %port_status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_status.addr, metadata !8116, metadata !DIExpression()), !dbg !8117
  %0 = load i32, i32* %port_status.addr, align 4, !dbg !8118
  %and = and i32 %0, 1, !dbg !8120
  %tobool = icmp ne i32 %and, 0, !dbg !8120
  br i1 %tobool, label %if.end, label %if.then, !dbg !8121

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %port_status.addr, align 4, !dbg !8122
  store i32 %1, i32* %retval, align 4, !dbg !8123
  br label %return, !dbg !8123

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %port_status.addr, align 4, !dbg !8124
  %and1 = and i32 %2, 4, !dbg !8126
  %tobool2 = icmp ne i32 %and1, 0, !dbg !8126
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !8127

if.then3:                                         ; preds = %if.end
  %3 = load i32, i32* %port_status.addr, align 4, !dbg !8128
  %or = or i32 %3, 8192, !dbg !8128
  store i32 %or, i32* %port_status.addr, align 4, !dbg !8128
  %4 = load i32, i32* %port_status.addr, align 4, !dbg !8130
  %and4 = and i32 %4, -43, !dbg !8130
  store i32 %and4, i32* %port_status.addr, align 4, !dbg !8130
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8131
  %6 = load i32, i32* %port_status.addr, align 4, !dbg !8132
  %7 = load i32*, i32** %status_reg.addr, align 8, !dbg !8133
  call void @ehci_writel(%struct.ehci_hcd* %5, i32 %6, i32* %7) #11, !dbg !8134
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8135
  %has_amcc_usb23 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 58, !dbg !8137
  %bf.load = load i16, i16* %has_amcc_usb23, align 4, !dbg !8137
  %bf.lshr = lshr i16 %bf.load, 7, !dbg !8137
  %bf.clear = and i16 %bf.lshr, 1, !dbg !8137
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8137
  %tobool5 = icmp ne i32 %bf.cast, 0, !dbg !8135
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !8138

if.then6:                                         ; preds = %if.then3
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8139
  call void @set_ohci_hcfs(%struct.ehci_hcd* %9, i32 1) #11, !dbg !8140
  br label %if.end7, !dbg !8140

if.end7:                                          ; preds = %if.then6, %if.then3
  br label %if.end16, !dbg !8141

if.else:                                          ; preds = %if.end
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8142
  %has_amcc_usb238 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 58, !dbg !8145
  %bf.load9 = load i16, i16* %has_amcc_usb238, align 4, !dbg !8145
  %bf.lshr10 = lshr i16 %bf.load9, 7, !dbg !8145
  %bf.clear11 = and i16 %bf.lshr10, 1, !dbg !8145
  %bf.cast12 = zext i16 %bf.clear11 to i32, !dbg !8145
  %tobool13 = icmp ne i32 %bf.cast12, 0, !dbg !8142
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !8146

if.then14:                                        ; preds = %if.else
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8147
  call void @set_ohci_hcfs(%struct.ehci_hcd* %11, i32 0) #11, !dbg !8148
  br label %if.end15, !dbg !8148

if.end15:                                         ; preds = %if.then14, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.end7
  %12 = load i32, i32* %port_status.addr, align 4, !dbg !8149
  store i32 %12, i32* %retval, align 4, !dbg !8150
  br label %return, !dbg !8150

return:                                           ; preds = %if.end16, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8151
  ret i32 %13, !dbg !8151
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dbg_port(%struct.ehci_hcd* %ehci, i8* %label, i32 %port, i32 %status) #0 !dbg !8152 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %label.addr = alloca i8*, align 8
  %port.addr = alloca i32, align 4
  %status.addr = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !8155, metadata !DIExpression()), !dbg !8156
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !8157, metadata !DIExpression()), !dbg !8158
  store i32 %port, i32* %port.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port.addr, metadata !8159, metadata !DIExpression()), !dbg !8160
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !8161, metadata !DIExpression()), !dbg !8162
  ret void, !dbg !8163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @readl(i8* %addr) #0 !dbg !8164 {
entry:
  %addr.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8168, metadata !DIExpression()), !dbg !8169
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8170, metadata !DIExpression()), !dbg !8169
  %0 = load i8*, i8** %addr.addr, align 8, !dbg !8169
  %1 = bitcast i8* %0 to i32*, !dbg !8169
  %2 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %1) #7, !dbg !8169, !srcloc !8171
  store i32 %2, i32* %ret, align 4, !dbg !8169
  %3 = load i32, i32* %ret, align 4, !dbg !8169
  ret i32 %3, !dbg !8169
}

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_quiesce(%struct.ehci_hcd* %ehci) #0 !dbg !8172 {
entry:
  %lock.addr.i10 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i10, metadata !6492, metadata !DIExpression()), !dbg !8173
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6499, metadata !DIExpression()), !dbg !8175
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %temp = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !8177, metadata !DIExpression()), !dbg !8178
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !8179, metadata !DIExpression()), !dbg !8180
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8181
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 12, !dbg !8183
  %1 = load i32, i32* %rh_state, align 4, !dbg !8183
  %cmp = icmp ne i32 %1, 2, !dbg !8184
  br i1 %cmp, label %if.then, label %if.end, !dbg !8185

if.then:                                          ; preds = %entry
  br label %return, !dbg !8186

if.end:                                           ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8187
  %command = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 57, !dbg !8188
  %3 = load i32, i32* %command, align 8, !dbg !8188
  %shl = shl i32 %3, 10, !dbg !8189
  %and = and i32 %shl, 49152, !dbg !8190
  store i32 %and, i32* %temp, align 4, !dbg !8191
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8192
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8193
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 8, !dbg !8194
  %6 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !8194
  %status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %6, i32 0, i32 1, !dbg !8195
  %7 = bitcast i32* %status to i8*, !dbg !8196
  %8 = load i32, i32* %temp, align 4, !dbg !8197
  %call = call i32 @ehci_handshake(%struct.ehci_hcd* %4, i8* %7, i32 49152, i32 %8, i32 2000) #11, !dbg !8198
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8199
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %9, i32 0, i32 11, !dbg !8200
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !8201
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8202, !srcloc !6536
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8203
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !8203
  %rlock.i = bitcast %union.anon.0* %11 to %struct.raw_spinlock*, !dbg !8203
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8204
  %command1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 57, !dbg !8205
  %13 = load i32, i32* %command1, align 8, !dbg !8206
  %and2 = and i32 %13, -49, !dbg !8206
  store i32 %and2, i32* %command1, align 8, !dbg !8206
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8207
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8208
  %command3 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %15, i32 0, i32 57, !dbg !8209
  %16 = load i32, i32* %command3, align 8, !dbg !8209
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8210
  %regs4 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %17, i32 0, i32 8, !dbg !8211
  %18 = load %struct.ehci_regs*, %struct.ehci_regs** %regs4, align 8, !dbg !8211
  %command5 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %18, i32 0, i32 0, !dbg !8212
  call void @ehci_writel(%struct.ehci_hcd* %14, i32 %16, i32* %command5) #11, !dbg !8213
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8214
  %lock6 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %19, i32 0, i32 11, !dbg !8215
  store %struct.spinlock* %lock6, %struct.spinlock** %lock.addr.i10, align 8
  call void @arch_local_irq_enable() #12, !dbg !8216
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8217, !srcloc !6571
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i10, align 8, !dbg !8218
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !8218
  %rlock.i11 = bitcast %union.anon.0* %21 to %struct.raw_spinlock*, !dbg !8218
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8219
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8220
  %regs7 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %23, i32 0, i32 8, !dbg !8221
  %24 = load %struct.ehci_regs*, %struct.ehci_regs** %regs7, align 8, !dbg !8221
  %status8 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %24, i32 0, i32 1, !dbg !8222
  %25 = bitcast i32* %status8 to i8*, !dbg !8223
  %call9 = call i32 @ehci_handshake(%struct.ehci_hcd* %22, i8* %25, i32 49152, i32 0, i32 2000) #11, !dbg !8224
  br label %return, !dbg !8225

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8225
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_halt(%struct.ehci_hcd* %ehci) #0 !dbg !8226 {
entry:
  %lock.addr.i10 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i10, metadata !6492, metadata !DIExpression()), !dbg !8227
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6499, metadata !DIExpression()), !dbg !8229
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %temp = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !8231, metadata !DIExpression()), !dbg !8232
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !8233, metadata !DIExpression()), !dbg !8234
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8235
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 11, !dbg !8236
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !8237
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8238, !srcloc !6536
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8239
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !8239
  %rlock.i = bitcast %union.anon.0* %2 to %struct.raw_spinlock*, !dbg !8239
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8240
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8241
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 8, !dbg !8242
  %5 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !8242
  %intr_enable = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %5, i32 0, i32 2, !dbg !8243
  call void @ehci_writel(%struct.ehci_hcd* %3, i32 0, i32* %intr_enable) #11, !dbg !8244
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8245
  %command = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 57, !dbg !8246
  %7 = load i32, i32* %command, align 8, !dbg !8247
  %and = and i32 %7, -2, !dbg !8247
  store i32 %and, i32* %command, align 8, !dbg !8247
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8248
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8249
  %regs1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %9, i32 0, i32 8, !dbg !8250
  %10 = load %struct.ehci_regs*, %struct.ehci_regs** %regs1, align 8, !dbg !8250
  %command2 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %10, i32 0, i32 0, !dbg !8251
  %call = call i32 @ehci_readl(%struct.ehci_hcd* %8, i32* %command2) #11, !dbg !8252
  store i32 %call, i32* %temp, align 4, !dbg !8253
  %11 = load i32, i32* %temp, align 4, !dbg !8254
  %and3 = and i32 %11, -66, !dbg !8254
  store i32 %and3, i32* %temp, align 4, !dbg !8254
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8255
  %13 = load i32, i32* %temp, align 4, !dbg !8256
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8257
  %regs4 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 8, !dbg !8258
  %15 = load %struct.ehci_regs*, %struct.ehci_regs** %regs4, align 8, !dbg !8258
  %command5 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %15, i32 0, i32 0, !dbg !8259
  call void @ehci_writel(%struct.ehci_hcd* %12, i32 %13, i32* %command5) #11, !dbg !8260
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8261
  %lock6 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %16, i32 0, i32 11, !dbg !8262
  store %struct.spinlock* %lock6, %struct.spinlock** %lock.addr.i10, align 8
  call void @arch_local_irq_enable() #12, !dbg !8263
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8264, !srcloc !6571
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i10, align 8, !dbg !8265
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !8265
  %rlock.i11 = bitcast %union.anon.0* %18 to %struct.raw_spinlock*, !dbg !8265
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8266
  %call7 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %19) #11, !dbg !8267
  %irq = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call7, i32 0, i32 15, !dbg !8268
  %20 = load i32, i32* %irq, align 8, !dbg !8268
  call void @synchronize_irq(i32 %20) #11, !dbg !8269
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8270
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8271
  %regs8 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %22, i32 0, i32 8, !dbg !8272
  %23 = load %struct.ehci_regs*, %struct.ehci_regs** %regs8, align 8, !dbg !8272
  %status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %23, i32 0, i32 1, !dbg !8273
  %24 = bitcast i32* %status to i8*, !dbg !8274
  %call9 = call i32 @ehci_handshake(%struct.ehci_hcd* %21, i8* %24, i32 4096, i32 4096, i32 2000) #11, !dbg !8275
  ret i32 %call9, !dbg !8276
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ehci_setup(%struct.usb_hcd* %hcd) #0 !dbg !8277 {
entry:
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %retval1 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !8278, metadata !DIExpression()), !dbg !8279
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !8280, metadata !DIExpression()), !dbg !8281
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8282
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !8283
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !8281
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8284, metadata !DIExpression()), !dbg !8285
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8286
  %caps = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 7, !dbg !8287
  %2 = load %struct.ehci_caps*, %struct.ehci_caps** %caps, align 8, !dbg !8287
  %3 = bitcast %struct.ehci_caps* %2 to i8*, !dbg !8288
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8289
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8289
  %caps2 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 7, !dbg !8289
  %6 = load %struct.ehci_caps*, %struct.ehci_caps** %caps2, align 8, !dbg !8289
  %hc_capbase = getelementptr inbounds %struct.ehci_caps, %struct.ehci_caps* %6, i32 0, i32 0, !dbg !8289
  %call3 = call i32 @ehci_readl(%struct.ehci_hcd* %4, i32* %hc_capbase) #11, !dbg !8289
  %shr = lshr i32 %call3, 0, !dbg !8289
  %and = and i32 255, %shr, !dbg !8289
  %idx.ext = zext i32 %and to i64, !dbg !8290
  %add.ptr = getelementptr i8, i8* %3, i64 %idx.ext, !dbg !8290
  %7 = bitcast i8* %add.ptr to %struct.ehci_regs*, !dbg !8288
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8291
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 8, !dbg !8292
  store %struct.ehci_regs* %7, %struct.ehci_regs** %regs, align 8, !dbg !8293
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8294
  call void @dbg_hcs_params(%struct.ehci_hcd* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #11, !dbg !8295
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8296
  call void @dbg_hcc_params(%struct.ehci_hcd* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0)) #11, !dbg !8297
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8298
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8299
  %caps4 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 7, !dbg !8300
  %13 = load %struct.ehci_caps*, %struct.ehci_caps** %caps4, align 8, !dbg !8300
  %hcs_params = getelementptr inbounds %struct.ehci_caps, %struct.ehci_caps* %13, i32 0, i32 1, !dbg !8301
  %call5 = call i32 @ehci_readl(%struct.ehci_hcd* %11, i32* %hcs_params) #11, !dbg !8302
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8303
  %hcs_params6 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 10, !dbg !8304
  store i32 %call5, i32* %hcs_params6, align 8, !dbg !8305
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8306
  %sbrn = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %15, i32 0, i32 61, !dbg !8307
  store i8 32, i8* %sbrn, align 1, !dbg !8308
  %16 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8309
  %call7 = call i32 @ehci_init(%struct.usb_hcd* %16) #11, !dbg !8310
  store i32 %call7, i32* %retval1, align 4, !dbg !8311
  %17 = load i32, i32* %retval1, align 4, !dbg !8312
  %tobool = icmp ne i32 %17, 0, !dbg !8312
  br i1 %tobool, label %if.then, label %if.end, !dbg !8314

if.then:                                          ; preds = %entry
  %18 = load i32, i32* %retval1, align 4, !dbg !8315
  store i32 %18, i32* %retval, align 4, !dbg !8316
  br label %return, !dbg !8316

if.end:                                           ; preds = %entry
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8317
  %call8 = call i32 @ehci_halt(%struct.ehci_hcd* %19) #11, !dbg !8318
  store i32 %call8, i32* %retval1, align 4, !dbg !8319
  %20 = load i32, i32* %retval1, align 4, !dbg !8320
  %tobool9 = icmp ne i32 %20, 0, !dbg !8320
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !8322

if.then10:                                        ; preds = %if.end
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8323
  call void @ehci_mem_cleanup(%struct.ehci_hcd* %21) #11, !dbg !8325
  %22 = load i32, i32* %retval1, align 4, !dbg !8326
  store i32 %22, i32* %retval, align 4, !dbg !8327
  br label %return, !dbg !8327

if.end11:                                         ; preds = %if.end
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8328
  %call12 = call i32 @ehci_reset(%struct.ehci_hcd* %23) #11, !dbg !8329
  store i32 0, i32* %retval, align 4, !dbg !8330
  br label %return, !dbg !8330

return:                                           ; preds = %if.end11, %if.then10, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !8331
  ret i32 %24, !dbg !8331
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dbg_hcs_params(%struct.ehci_hcd* %ehci, i8* %label) #0 !dbg !8332 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %label.addr = alloca i8*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !8335, metadata !DIExpression()), !dbg !8336
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !8337, metadata !DIExpression()), !dbg !8338
  ret void, !dbg !8339
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dbg_hcc_params(%struct.ehci_hcd* %ehci, i8* %label) #0 !dbg !8340 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %label.addr = alloca i8*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !8341, metadata !DIExpression()), !dbg !8342
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !8343, metadata !DIExpression()), !dbg !8344
  ret void, !dbg !8345
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_init(%struct.usb_hcd* %hcd) #0 !dbg !8346 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !8347
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %temp = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %hcc_params = alloca i32, align 4
  %hw = alloca %struct.ehci_qh_hw*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  %__UNIQUE_ID___x370 = alloca i32, align 4
  %__UNIQUE_ID___y371 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !8350, metadata !DIExpression()), !dbg !8351
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !8352, metadata !DIExpression()), !dbg !8353
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8354
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !8355
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !8353
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !8356, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8358, metadata !DIExpression()), !dbg !8359
  call void @llvm.dbg.declare(metadata i32* %hcc_params, metadata !8360, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.declare(metadata %struct.ehci_qh_hw** %hw, metadata !8362, metadata !DIExpression()), !dbg !8363
  br label %do.body, !dbg !8364

do.body:                                          ; preds = %entry
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8365
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 11, !dbg !8365
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8366
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !8367
  %rlock.i = bitcast %union.anon.0* %3 to %struct.raw_spinlock*, !dbg !8367
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8365
  %lock3 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 11, !dbg !8365
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !8365
  %rlock = bitcast %union.anon.0* %5 to %struct.raw_spinlock*, !dbg !8365
  %6 = bitcast %struct.spinlock* %lock3 to i8*, !dbg !8365
  %7 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !8365
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 1 %7, i64 0, i1 false), !dbg !8365
  br label %do.end, !dbg !8365

do.end:                                           ; preds = %do.body
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8368
  %need_io_watchdog = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 58, !dbg !8369
  %bf.load = load i16, i16* %need_io_watchdog, align 4, !dbg !8370
  %bf.clear = and i16 %bf.load, -257, !dbg !8370
  %bf.set = or i16 %bf.clear, 256, !dbg !8370
  store i16 %bf.set, i16* %need_io_watchdog, align 4, !dbg !8370
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8371
  %hrtimer = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %9, i32 0, i32 3, !dbg !8372
  call void @hrtimer_init(%struct.hrtimer* %hrtimer, i32 1, i32 0) #11, !dbg !8373
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8374
  %hrtimer4 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 3, !dbg !8375
  %function = getelementptr inbounds %struct.hrtimer, %struct.hrtimer* %hrtimer4, i32 0, i32 2, !dbg !8376
  store i32 (%struct.hrtimer*)* @ehci_hrtimer_func, i32 (%struct.hrtimer*)** %function, align 8, !dbg !8377
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8378
  %next_hrtimer_event = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %11, i32 0, i32 0, !dbg !8379
  store i32 99, i32* %next_hrtimer_event, align 8, !dbg !8380
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8381
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8382
  %caps = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %13, i32 0, i32 7, !dbg !8383
  %14 = load %struct.ehci_caps*, %struct.ehci_caps** %caps, align 8, !dbg !8383
  %hcc_params5 = getelementptr inbounds %struct.ehci_caps, %struct.ehci_caps* %14, i32 0, i32 2, !dbg !8384
  %call6 = call i32 @ehci_readl(%struct.ehci_hcd* %12, i32* %hcc_params5) #11, !dbg !8385
  store i32 %call6, i32* %hcc_params, align 4, !dbg !8386
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8387
  %uframe_periodic_max = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %15, i32 0, i32 38, !dbg !8388
  store i32 100, i32* %uframe_periodic_max, align 4, !dbg !8389
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8390
  %periodic_size = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %16, i32 0, i32 23, !dbg !8391
  store i32 1024, i32* %periodic_size, align 8, !dbg !8392
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8393
  %async_unlink = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %17, i32 0, i32 17, !dbg !8394
  call void @INIT_LIST_HEAD(%struct.list_head* %async_unlink) #11, !dbg !8395
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8396
  %async_idle = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %18, i32 0, i32 18, !dbg !8397
  call void @INIT_LIST_HEAD(%struct.list_head* %async_idle) #11, !dbg !8398
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8399
  %intr_unlink_wait = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %19, i32 0, i32 29, !dbg !8400
  call void @INIT_LIST_HEAD(%struct.list_head* %intr_unlink_wait) #11, !dbg !8401
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8402
  %intr_unlink = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %20, i32 0, i32 30, !dbg !8403
  call void @INIT_LIST_HEAD(%struct.list_head* %intr_unlink) #11, !dbg !8404
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8405
  %intr_qh_list = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %21, i32 0, i32 26, !dbg !8406
  call void @INIT_LIST_HEAD(%struct.list_head* %intr_qh_list) #11, !dbg !8407
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8408
  %cached_itd_list = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %22, i32 0, i32 39, !dbg !8409
  call void @INIT_LIST_HEAD(%struct.list_head* %cached_itd_list) #11, !dbg !8410
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8411
  %cached_sitd_list = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %23, i32 0, i32 41, !dbg !8412
  call void @INIT_LIST_HEAD(%struct.list_head* %cached_sitd_list) #11, !dbg !8413
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8414
  %tt_list = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %24, i32 0, i32 64, !dbg !8415
  call void @INIT_LIST_HEAD(%struct.list_head* %tt_list) #11, !dbg !8416
  %25 = load i32, i32* %hcc_params, align 4, !dbg !8417
  %and = and i32 %25, 2, !dbg !8417
  %tobool = icmp ne i32 %and, 0, !dbg !8417
  br i1 %tobool, label %if.then, label %if.end, !dbg !8419

if.then:                                          ; preds = %do.end
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8420
  %periodic_size7 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %26, i32 0, i32 23, !dbg !8422
  store i32 512, i32* %periodic_size7, align 8, !dbg !8423
  br label %if.end, !dbg !8424

if.end:                                           ; preds = %if.then, %do.end
  %27 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8425
  %call8 = call i32 @ehci_mem_init(%struct.ehci_hcd* %27, i32 3264) #11, !dbg !8427
  store i32 %call8, i32* %retval1, align 4, !dbg !8428
  %cmp = icmp slt i32 %call8, 0, !dbg !8429
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !8430

if.then9:                                         ; preds = %if.end
  %28 = load i32, i32* %retval1, align 4, !dbg !8431
  store i32 %28, i32* %retval, align 4, !dbg !8432
  br label %return, !dbg !8432

if.end10:                                         ; preds = %if.end
  %29 = load i32, i32* %hcc_params, align 4, !dbg !8433
  %and11 = and i32 %29, 128, !dbg !8433
  %tobool12 = icmp ne i32 %and11, 0, !dbg !8433
  br i1 %tobool12, label %if.then13, label %if.else, !dbg !8435

if.then13:                                        ; preds = %if.end10
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8436
  %i_thresh = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %30, i32 0, i32 27, !dbg !8437
  store i32 0, i32* %i_thresh, align 8, !dbg !8438
  br label %if.end16, !dbg !8436

if.else:                                          ; preds = %if.end10
  %31 = load i32, i32* %hcc_params, align 4, !dbg !8439
  %shr = lshr i32 %31, 4, !dbg !8439
  %and14 = and i32 %shr, 7, !dbg !8439
  %add = add i32 2, %and14, !dbg !8440
  %32 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8441
  %i_thresh15 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %32, i32 0, i32 27, !dbg !8442
  store i32 %add, i32* %i_thresh15, align 8, !dbg !8443
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then13
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8444
  %async = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %33, i32 0, i32 15, !dbg !8445
  %34 = load %struct.ehci_qh*, %struct.ehci_qh** %async, align 8, !dbg !8445
  %qh_next = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %34, i32 0, i32 2, !dbg !8446
  %qh = bitcast %union.ehci_shadow* %qh_next to %struct.ehci_qh**, !dbg !8447
  store %struct.ehci_qh* null, %struct.ehci_qh** %qh, align 8, !dbg !8448
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8449
  %async17 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %35, i32 0, i32 15, !dbg !8450
  %36 = load %struct.ehci_qh*, %struct.ehci_qh** %async17, align 8, !dbg !8450
  %hw18 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %36, i32 0, i32 0, !dbg !8451
  %37 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw18, align 8, !dbg !8451
  store %struct.ehci_qh_hw* %37, %struct.ehci_qh_hw** %hw, align 8, !dbg !8452
  %38 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8453
  %39 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8453
  %async19 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %39, i32 0, i32 15, !dbg !8453
  %40 = load %struct.ehci_qh*, %struct.ehci_qh** %async19, align 8, !dbg !8453
  %qh_dma = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %40, i32 0, i32 1, !dbg !8453
  %41 = load i64, i64* %qh_dma, align 8, !dbg !8453
  %conv = trunc i64 %41 to i32, !dbg !8453
  %and20 = and i32 %conv, -32, !dbg !8453
  %or = or i32 %and20, 2, !dbg !8453
  %call21 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %38, i32 %or) #11, !dbg !8453
  %42 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !8454
  %hw_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %42, i32 0, i32 0, !dbg !8455
  store i32 %call21, i32* %hw_next, align 32, !dbg !8456
  %43 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8457
  %call22 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %43, i32 32768) #11, !dbg !8458
  %44 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !8459
  %hw_info1 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %44, i32 0, i32 1, !dbg !8460
  store i32 %call22, i32* %hw_info1, align 4, !dbg !8461
  %45 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8462
  %call23 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %45, i32 64) #11, !dbg !8463
  %46 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !8464
  %hw_token = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %46, i32 0, i32 6, !dbg !8465
  store i32 %call23, i32* %hw_token, align 8, !dbg !8466
  %47 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8467
  %call24 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %47, i32 1) #11, !dbg !8467
  %48 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !8468
  %hw_qtd_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %48, i32 0, i32 4, !dbg !8469
  store i32 %call24, i32* %hw_qtd_next, align 16, !dbg !8470
  %49 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8471
  %async25 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %49, i32 0, i32 15, !dbg !8472
  %50 = load %struct.ehci_qh*, %struct.ehci_qh** %async25, align 8, !dbg !8472
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %50, i32 0, i32 9, !dbg !8473
  store i8 1, i8* %qh_state, align 4, !dbg !8474
  %51 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8475
  %52 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8475
  %async26 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %52, i32 0, i32 15, !dbg !8475
  %53 = load %struct.ehci_qh*, %struct.ehci_qh** %async26, align 8, !dbg !8475
  %dummy = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %53, i32 0, i32 5, !dbg !8475
  %54 = load %struct.ehci_qtd*, %struct.ehci_qtd** %dummy, align 8, !dbg !8475
  %qtd_dma = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %54, i32 0, i32 5, !dbg !8475
  %55 = load i64, i64* %qtd_dma, align 8, !dbg !8475
  %conv27 = trunc i64 %55 to i32, !dbg !8475
  %call28 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %51, i32 %conv27) #11, !dbg !8475
  %56 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !8476
  %hw_alt_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %56, i32 0, i32 5, !dbg !8477
  store i32 %call28, i32* %hw_alt_next, align 4, !dbg !8478
  %57 = load i32, i32* @log2_irq_thresh, align 4, !dbg !8479
  %cmp29 = icmp slt i32 %57, 0, !dbg !8481
  br i1 %cmp29, label %if.then33, label %lor.lhs.false, !dbg !8482

lor.lhs.false:                                    ; preds = %if.end16
  %58 = load i32, i32* @log2_irq_thresh, align 4, !dbg !8483
  %cmp31 = icmp sgt i32 %58, 6, !dbg !8484
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !8485

if.then33:                                        ; preds = %lor.lhs.false, %if.end16
  store i32 0, i32* @log2_irq_thresh, align 4, !dbg !8486
  br label %if.end34, !dbg !8487

if.end34:                                         ; preds = %if.then33, %lor.lhs.false
  %59 = load i32, i32* @log2_irq_thresh, align 4, !dbg !8488
  %add35 = add i32 16, %59, !dbg !8489
  %shl = shl i32 1, %add35, !dbg !8490
  store i32 %shl, i32* %temp, align 4, !dbg !8491
  %60 = load i32, i32* %hcc_params, align 4, !dbg !8492
  %and36 = and i32 %60, 262144, !dbg !8492
  %tobool37 = icmp ne i32 %and36, 0, !dbg !8492
  br i1 %tobool37, label %if.then38, label %if.end43, !dbg !8494

if.then38:                                        ; preds = %if.end34
  %61 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8495
  %has_ppcd = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %61, i32 0, i32 60, !dbg !8497
  %bf.load39 = load i8, i8* %has_ppcd, align 8, !dbg !8498
  %bf.clear40 = and i8 %bf.load39, -5, !dbg !8498
  %bf.set41 = or i8 %bf.clear40, 4, !dbg !8498
  store i8 %bf.set41, i8* %has_ppcd, align 8, !dbg !8498
  %62 = load i32, i32* %temp, align 4, !dbg !8499
  %or42 = or i32 %62, 32768, !dbg !8499
  store i32 %or42, i32* %temp, align 4, !dbg !8499
  br label %if.end43, !dbg !8500

if.end43:                                         ; preds = %if.then38, %if.end34
  %63 = load i32, i32* %hcc_params, align 4, !dbg !8501
  %and44 = and i32 %63, 4, !dbg !8501
  %tobool45 = icmp ne i32 %and44, 0, !dbg !8501
  br i1 %tobool45, label %if.then46, label %if.end55, !dbg !8503

if.then46:                                        ; preds = %if.end43
  %64 = load i32, i32* @park, align 4, !dbg !8504
  %tobool47 = icmp ne i32 %64, 0, !dbg !8504
  br i1 %tobool47, label %if.then48, label %if.end54, !dbg !8507

if.then48:                                        ; preds = %if.then46
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x370, metadata !8508, metadata !DIExpression()), !dbg !8511
  %65 = load i32, i32* @park, align 4, !dbg !8511
  store i32 %65, i32* %__UNIQUE_ID___x370, align 4, !dbg !8511
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y371, metadata !8512, metadata !DIExpression()), !dbg !8511
  store i32 3, i32* %__UNIQUE_ID___y371, align 4, !dbg !8511
  %66 = load i32, i32* %__UNIQUE_ID___x370, align 4, !dbg !8511
  %67 = load i32, i32* %__UNIQUE_ID___y371, align 4, !dbg !8511
  %cmp49 = icmp ult i32 %66, %67, !dbg !8511
  br i1 %cmp49, label %cond.true, label %cond.false, !dbg !8511

cond.true:                                        ; preds = %if.then48
  %68 = load i32, i32* %__UNIQUE_ID___x370, align 4, !dbg !8511
  br label %cond.end, !dbg !8511

cond.false:                                       ; preds = %if.then48
  %69 = load i32, i32* %__UNIQUE_ID___y371, align 4, !dbg !8511
  br label %cond.end, !dbg !8511

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %68, %cond.true ], [ %69, %cond.false ], !dbg !8511
  store i32 %cond, i32* %tmp, align 4, !dbg !8511
  %70 = load i32, i32* %tmp, align 4, !dbg !8511
  store i32 %70, i32* @park, align 4, !dbg !8513
  %71 = load i32, i32* %temp, align 4, !dbg !8514
  %or51 = or i32 %71, 2048, !dbg !8514
  store i32 %or51, i32* %temp, align 4, !dbg !8514
  %72 = load i32, i32* @park, align 4, !dbg !8515
  %shl52 = shl i32 %72, 8, !dbg !8516
  %73 = load i32, i32* %temp, align 4, !dbg !8517
  %or53 = or i32 %73, %shl52, !dbg !8517
  store i32 %or53, i32* %temp, align 4, !dbg !8517
  br label %if.end54, !dbg !8518

if.end54:                                         ; preds = %cond.end, %if.then46
  br label %if.end55, !dbg !8519

if.end55:                                         ; preds = %if.end54, %if.end43
  %74 = load i32, i32* %hcc_params, align 4, !dbg !8520
  %and56 = and i32 %74, 2, !dbg !8520
  %tobool57 = icmp ne i32 %and56, 0, !dbg !8520
  br i1 %tobool57, label %if.then58, label %if.end61, !dbg !8522

if.then58:                                        ; preds = %if.end55
  %75 = load i32, i32* %temp, align 4, !dbg !8523
  %and59 = and i32 %75, -13, !dbg !8523
  store i32 %and59, i32* %temp, align 4, !dbg !8523
  %76 = load i32, i32* %temp, align 4, !dbg !8525
  %or60 = or i32 %76, 4, !dbg !8525
  store i32 %or60, i32* %temp, align 4, !dbg !8525
  br label %if.end61, !dbg !8526

if.end61:                                         ; preds = %if.then58, %if.end55
  %77 = load i32, i32* %temp, align 4, !dbg !8527
  %78 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8528
  %command = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %78, i32 0, i32 57, !dbg !8529
  store i32 %77, i32* %command, align 8, !dbg !8530
  %79 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8531
  %localmem_pool = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %79, i32 0, i32 28, !dbg !8533
  %80 = load %struct.gen_pool*, %struct.gen_pool** %localmem_pool, align 8, !dbg !8533
  %tobool62 = icmp ne %struct.gen_pool* %80, null, !dbg !8531
  br i1 %tobool62, label %if.end64, label %if.then63, !dbg !8534

if.then63:                                        ; preds = %if.end61
  %81 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8535
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %81, i32 0, i32 0, !dbg !8536
  %sg_tablesize = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 7, !dbg !8537
  store i32 -1, i32* %sg_tablesize, align 4, !dbg !8538
  br label %if.end64, !dbg !8535

if.end64:                                         ; preds = %if.then63, %if.end61
  %82 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8539
  %old_current = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %82, i32 0, i32 21, !dbg !8540
  store i32 -1, i32* %old_current, align 8, !dbg !8541
  store i32 0, i32* %retval, align 4, !dbg !8542
  br label %return, !dbg !8542

return:                                           ; preds = %if.end64, %if.then9
  %83 = load i32, i32* %retval, align 4, !dbg !8543
  ret i32 %83, !dbg !8543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_mem_cleanup(%struct.ehci_hcd* %ehci) #0 !dbg !8544 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !8546, metadata !DIExpression()), !dbg !8547
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8548
  %async = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 15, !dbg !8550
  %1 = load %struct.ehci_qh*, %struct.ehci_qh** %async, align 8, !dbg !8550
  %tobool = icmp ne %struct.ehci_qh* %1, null, !dbg !8548
  br i1 %tobool, label %if.then, label %if.end, !dbg !8551

if.then:                                          ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8552
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8553
  %async1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 15, !dbg !8554
  %4 = load %struct.ehci_qh*, %struct.ehci_qh** %async1, align 8, !dbg !8554
  call void @qh_destroy(%struct.ehci_hcd* %2, %struct.ehci_qh* %4) #11, !dbg !8555
  br label %if.end, !dbg !8555

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8556
  %async2 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 15, !dbg !8557
  store %struct.ehci_qh* null, %struct.ehci_qh** %async2, align 8, !dbg !8558
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8559
  %dummy = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 16, !dbg !8561
  %7 = load %struct.ehci_qh*, %struct.ehci_qh** %dummy, align 8, !dbg !8561
  %tobool3 = icmp ne %struct.ehci_qh* %7, null, !dbg !8559
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !8562

if.then4:                                         ; preds = %if.end
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8563
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8564
  %dummy5 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %9, i32 0, i32 16, !dbg !8565
  %10 = load %struct.ehci_qh*, %struct.ehci_qh** %dummy5, align 8, !dbg !8565
  call void @qh_destroy(%struct.ehci_hcd* %8, %struct.ehci_qh* %10) #11, !dbg !8566
  br label %if.end6, !dbg !8566

if.end6:                                          ; preds = %if.then4, %if.end
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8567
  %dummy7 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %11, i32 0, i32 16, !dbg !8568
  store %struct.ehci_qh* null, %struct.ehci_qh** %dummy7, align 8, !dbg !8569
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8570
  %qtd_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 51, !dbg !8571
  %13 = load %struct.dma_pool*, %struct.dma_pool** %qtd_pool, align 8, !dbg !8571
  call void @dma_pool_destroy(%struct.dma_pool* %13) #11, !dbg !8572
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8573
  %qtd_pool8 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 51, !dbg !8574
  store %struct.dma_pool* null, %struct.dma_pool** %qtd_pool8, align 8, !dbg !8575
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8576
  %qh_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %15, i32 0, i32 50, !dbg !8577
  %16 = load %struct.dma_pool*, %struct.dma_pool** %qh_pool, align 8, !dbg !8577
  call void @dma_pool_destroy(%struct.dma_pool* %16) #11, !dbg !8578
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8579
  %qh_pool9 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %17, i32 0, i32 50, !dbg !8580
  store %struct.dma_pool* null, %struct.dma_pool** %qh_pool9, align 8, !dbg !8581
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8582
  %itd_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %18, i32 0, i32 52, !dbg !8583
  %19 = load %struct.dma_pool*, %struct.dma_pool** %itd_pool, align 8, !dbg !8583
  call void @dma_pool_destroy(%struct.dma_pool* %19) #11, !dbg !8584
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8585
  %itd_pool10 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %20, i32 0, i32 52, !dbg !8586
  store %struct.dma_pool* null, %struct.dma_pool** %itd_pool10, align 8, !dbg !8587
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8588
  %sitd_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %21, i32 0, i32 53, !dbg !8589
  %22 = load %struct.dma_pool*, %struct.dma_pool** %sitd_pool, align 8, !dbg !8589
  call void @dma_pool_destroy(%struct.dma_pool* %22) #11, !dbg !8590
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8591
  %sitd_pool11 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %23, i32 0, i32 53, !dbg !8592
  store %struct.dma_pool* null, %struct.dma_pool** %sitd_pool11, align 8, !dbg !8593
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8594
  %periodic = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %24, i32 0, i32 24, !dbg !8596
  %25 = load i32*, i32** %periodic, align 8, !dbg !8596
  %tobool12 = icmp ne i32* %25, null, !dbg !8594
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !8597

if.then13:                                        ; preds = %if.end6
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8598
  %call = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %26) #11, !dbg !8599
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call, i32 0, i32 0, !dbg !8600
  %sysdev = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 1, !dbg !8601
  %27 = load %struct.device*, %struct.device** %sysdev, align 8, !dbg !8601
  %28 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8602
  %periodic_size = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %28, i32 0, i32 23, !dbg !8603
  %29 = load i32, i32* %periodic_size, align 8, !dbg !8603
  %conv = zext i32 %29 to i64, !dbg !8602
  %mul = mul i64 %conv, 4, !dbg !8604
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8605
  %periodic14 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %30, i32 0, i32 24, !dbg !8606
  %31 = load i32*, i32** %periodic14, align 8, !dbg !8606
  %32 = bitcast i32* %31 to i8*, !dbg !8605
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8607
  %periodic_dma = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %33, i32 0, i32 25, !dbg !8608
  %34 = load i64, i64* %periodic_dma, align 8, !dbg !8608
  call void @dma_free_coherent(%struct.device* %27, i64 %mul, i8* %32, i64 %34) #11, !dbg !8609
  br label %if.end15, !dbg !8609

if.end15:                                         ; preds = %if.then13, %if.end6
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8610
  %periodic16 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %35, i32 0, i32 24, !dbg !8611
  store i32* null, i32** %periodic16, align 8, !dbg !8612
  %36 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8613
  %pshadow = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %36, i32 0, i32 28, !dbg !8614
  %37 = load %union.ehci_shadow*, %union.ehci_shadow** %pshadow, align 8, !dbg !8614
  %38 = bitcast %union.ehci_shadow* %37 to i8*, !dbg !8613
  call void @kfree(i8* %38) #11, !dbg !8615
  %39 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !8616
  %pshadow17 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %39, i32 0, i32 28, !dbg !8617
  store %union.ehci_shadow* null, %union.ehci_shadow** %pshadow17, align 8, !dbg !8618
  ret void, !dbg !8619
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ehci_suspend(%struct.usb_hcd* %hcd, i1 zeroext %do_wakeup) #0 !dbg !8620 {
entry:
  %lock.addr.i11 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i11, metadata !6492, metadata !DIExpression()), !dbg !8621
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6499, metadata !DIExpression()), !dbg !8623
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %do_wakeup.addr = alloca i8, align 1
  %ehci = alloca %struct.ehci_hcd*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !8625, metadata !DIExpression()), !dbg !8626
  %frombool = zext i1 %do_wakeup to i8
  store i8 %frombool, i8* %do_wakeup.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_wakeup.addr, metadata !8627, metadata !DIExpression()), !dbg !8628
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !8629, metadata !DIExpression()), !dbg !8630
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8631
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !8632
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !8630
  %1 = load volatile i64, i64* @jiffies, align 8, !dbg !8633
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8633
  %next_statechange = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 55, !dbg !8633
  %3 = load i64, i64* %next_statechange, align 8, !dbg !8633
  %sub = sub i64 %1, %3, !dbg !8633
  %cmp = icmp slt i64 %sub, 0, !dbg !8633
  br i1 %cmp, label %if.then, label %if.end, !dbg !8635

if.then:                                          ; preds = %entry
  call void @msleep(i32 10) #11, !dbg !8636
  br label %if.end, !dbg !8636

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8637
  %5 = load i8, i8* %do_wakeup.addr, align 1, !dbg !8637
  %tobool = trunc i8 %5 to i1, !dbg !8637
  call void @ehci_adjust_port_wakeup_flags(%struct.ehci_hcd* %4, i1 zeroext true, i1 zeroext %tobool) #11, !dbg !8637
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8638
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 11, !dbg !8639
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !8640
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8641, !srcloc !6536
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8642
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !8642
  %rlock.i = bitcast %union.anon.0* %8 to %struct.raw_spinlock*, !dbg !8642
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8643
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8644
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 8, !dbg !8645
  %11 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !8645
  %intr_enable = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %11, i32 0, i32 2, !dbg !8646
  call void @ehci_writel(%struct.ehci_hcd* %9, i32 0, i32* %intr_enable) #11, !dbg !8647
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8648
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8649
  %regs1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %13, i32 0, i32 8, !dbg !8650
  %14 = load %struct.ehci_regs*, %struct.ehci_regs** %regs1, align 8, !dbg !8650
  %intr_enable2 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %14, i32 0, i32 2, !dbg !8651
  %call3 = call i32 @ehci_readl(%struct.ehci_hcd* %12, i32* %intr_enable2) #11, !dbg !8652
  %15 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8653
  %flags = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %15, i32 0, i32 12, !dbg !8654
  call void @clear_bit(i64 0, i64* %flags) #11, !dbg !8655
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8656
  %lock4 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %16, i32 0, i32 11, !dbg !8657
  store %struct.spinlock* %lock4, %struct.spinlock** %lock.addr.i11, align 8
  call void @arch_local_irq_enable() #12, !dbg !8658
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8659, !srcloc !6571
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i11, align 8, !dbg !8660
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !8660
  %rlock.i12 = bitcast %union.anon.0* %18 to %struct.raw_spinlock*, !dbg !8660
  %19 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8661
  %irq = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %19, i32 0, i32 15, !dbg !8662
  %20 = load i32, i32* %irq, align 8, !dbg !8662
  call void @synchronize_irq(i32 %20) #11, !dbg !8663
  %21 = load i8, i8* %do_wakeup.addr, align 1, !dbg !8664
  %tobool5 = trunc i8 %21 to i1, !dbg !8664
  br i1 %tobool5, label %land.lhs.true, label %if.end10, !dbg !8666

land.lhs.true:                                    ; preds = %if.end
  %22 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8667
  %flags6 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %22, i32 0, i32 12, !dbg !8667
  %23 = load i64, i64* %flags6, align 8, !dbg !8667
  %and = and i64 %23, 16, !dbg !8667
  %tobool7 = icmp ne i64 %and, 0, !dbg !8667
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !8668

if.then8:                                         ; preds = %land.lhs.true
  %24 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8669
  %call9 = call i32 @ehci_resume(%struct.usb_hcd* %24, i1 zeroext false) #11, !dbg !8671
  store i32 -16, i32* %retval, align 4, !dbg !8672
  br label %return, !dbg !8672

if.end10:                                         ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !8673
  br label %return, !dbg !8673

return:                                           ; preds = %if.end10, %if.then8
  %25 = load i32, i32* %retval, align 4, !dbg !8674
  ret i32 %25, !dbg !8674
}

; Function Attrs: noredzone
declare dso_local void @synchronize_irq(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @ehci_resume(%struct.usb_hcd* %hcd, i1 zeroext %force_reset) #0 !dbg !8675 {
entry:
  %lock.addr.i49 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i49, metadata !6492, metadata !DIExpression()), !dbg !8676
  %lock.addr.i47 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i47, metadata !6499, metadata !DIExpression()), !dbg !8678
  %lock.addr.i45 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i45, metadata !6492, metadata !DIExpression()), !dbg !8680
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6499, metadata !DIExpression()), !dbg !8684
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %force_reset.addr = alloca i8, align 1
  %ehci = alloca %struct.ehci_hcd*, align 8
  %mask = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !8686, metadata !DIExpression()), !dbg !8687
  %frombool = zext i1 %force_reset to i8
  store i8 %frombool, i8* %force_reset.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %force_reset.addr, metadata !8688, metadata !DIExpression()), !dbg !8689
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !8690, metadata !DIExpression()), !dbg !8691
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8692
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !8693
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !8691
  %1 = load volatile i64, i64* @jiffies, align 8, !dbg !8694
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8694
  %next_statechange = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 55, !dbg !8694
  %3 = load i64, i64* %next_statechange, align 8, !dbg !8694
  %sub = sub i64 %1, %3, !dbg !8694
  %cmp = icmp slt i64 %sub, 0, !dbg !8694
  br i1 %cmp, label %if.then, label %if.end, !dbg !8696

if.then:                                          ; preds = %entry
  call void @msleep(i32 100) #11, !dbg !8697
  br label %if.end, !dbg !8697

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8698
  %flags = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %4, i32 0, i32 12, !dbg !8699
  call void @set_bit(i64 0, i64* %flags) #11, !dbg !8700
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8701
  %shutdown = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 13, !dbg !8703
  %bf.load = load i8, i8* %shutdown, align 8, !dbg !8703
  %bf.lshr = lshr i8 %bf.load, 5, !dbg !8703
  %bf.clear = and i8 %bf.lshr, 1, !dbg !8703
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !8703
  br i1 %bf.cast, label %if.then1, label %if.end2, !dbg !8704

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8705
  br label %return, !dbg !8705

if.end2:                                          ; preds = %if.end
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8706
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8707
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 8, !dbg !8708
  %8 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !8708
  %configured_flag = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %8, i32 0, i32 10, !dbg !8709
  %call3 = call i32 @ehci_readl(%struct.ehci_hcd* %6, i32* %configured_flag) #11, !dbg !8710
  %cmp4 = icmp eq i32 %call3, 1, !dbg !8711
  br i1 %cmp4, label %land.lhs.true, label %if.end24, !dbg !8712

land.lhs.true:                                    ; preds = %if.end2
  %9 = load i8, i8* %force_reset.addr, align 1, !dbg !8713
  %tobool = trunc i8 %9 to i1, !dbg !8713
  br i1 %tobool, label %if.end24, label %if.then5, !dbg !8714

if.then5:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !8715, metadata !DIExpression()), !dbg !8716
  store i32 55, i32* %mask, align 4, !dbg !8716
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8717
  call void @ehci_adjust_port_wakeup_flags(%struct.ehci_hcd* %10, i1 zeroext false, i1 zeroext false) #11, !dbg !8717
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8718
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %11, i32 0, i32 11, !dbg !8719
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !8720
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8721, !srcloc !6536
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8722
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !8722
  %rlock.i = bitcast %union.anon.0* %13 to %struct.raw_spinlock*, !dbg !8722
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8723
  %shutdown6 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 13, !dbg !8725
  %bf.load7 = load i8, i8* %shutdown6, align 8, !dbg !8725
  %bf.lshr8 = lshr i8 %bf.load7, 5, !dbg !8725
  %bf.clear9 = and i8 %bf.lshr8, 1, !dbg !8725
  %bf.cast10 = trunc i8 %bf.clear9 to i1, !dbg !8725
  br i1 %bf.cast10, label %if.then11, label %if.end12, !dbg !8726

if.then11:                                        ; preds = %if.then5
  br label %skip, !dbg !8727

if.end12:                                         ; preds = %if.then5
  %15 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8728
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %15, i32 0, i32 0, !dbg !8730
  %root_hub = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 11, !dbg !8731
  %16 = load %struct.usb_device*, %struct.usb_device** %root_hub, align 8, !dbg !8731
  %do_remote_wakeup = getelementptr inbounds %struct.usb_device, %struct.usb_device* %16, i32 0, i32 41, !dbg !8732
  %bf.load13 = load i8, i8* %do_remote_wakeup, align 8, !dbg !8732
  %bf.clear14 = and i8 %bf.load13, 1, !dbg !8732
  %bf.cast15 = zext i8 %bf.clear14 to i32, !dbg !8732
  %tobool16 = icmp ne i32 %bf.cast15, 0, !dbg !8728
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !8733

if.then17:                                        ; preds = %if.end12
  %17 = load i32, i32* %mask, align 4, !dbg !8734
  %and = and i32 %17, -5, !dbg !8734
  store i32 %and, i32* %mask, align 4, !dbg !8734
  br label %if.end18, !dbg !8735

if.end18:                                         ; preds = %if.then17, %if.end12
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8736
  %19 = load i32, i32* %mask, align 4, !dbg !8737
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8738
  %regs19 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %20, i32 0, i32 8, !dbg !8739
  %21 = load %struct.ehci_regs*, %struct.ehci_regs** %regs19, align 8, !dbg !8739
  %intr_enable = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %21, i32 0, i32 2, !dbg !8740
  call void @ehci_writel(%struct.ehci_hcd* %18, i32 %19, i32* %intr_enable) #11, !dbg !8741
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8742
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8743
  %regs20 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %23, i32 0, i32 8, !dbg !8744
  %24 = load %struct.ehci_regs*, %struct.ehci_regs** %regs20, align 8, !dbg !8744
  %intr_enable21 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %24, i32 0, i32 2, !dbg !8745
  %call22 = call i32 @ehci_readl(%struct.ehci_hcd* %22, i32* %intr_enable21) #11, !dbg !8746
  br label %skip, !dbg !8746

skip:                                             ; preds = %if.then35, %if.end18, %if.then11
  call void @llvm.dbg.label(metadata !8747), !dbg !8748
  %25 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8749
  %lock23 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %25, i32 0, i32 11, !dbg !8750
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i45, align 8
  call void @arch_local_irq_enable() #12, !dbg !8751
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8752, !srcloc !6571
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i45, align 8, !dbg !8753
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !8753
  %rlock.i46 = bitcast %union.anon.0* %27 to %struct.raw_spinlock*, !dbg !8753
  store i32 0, i32* %retval, align 4, !dbg !8754
  br label %return, !dbg !8754

if.end24:                                         ; preds = %land.lhs.true, %if.end2
  %28 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !8755
  %self25 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %28, i32 0, i32 0, !dbg !8756
  %root_hub26 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self25, i32 0, i32 11, !dbg !8757
  %29 = load %struct.usb_device*, %struct.usb_device** %root_hub26, align 8, !dbg !8757
  call void @usb_root_hub_lost_power(%struct.usb_device* %29) #11, !dbg !8758
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8759
  %call27 = call i32 @ehci_halt(%struct.ehci_hcd* %30) #11, !dbg !8760
  %31 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8761
  %call28 = call i32 @ehci_reset(%struct.ehci_hcd* %31) #11, !dbg !8762
  %32 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8763
  %lock29 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %32, i32 0, i32 11, !dbg !8764
  store %struct.spinlock* %lock29, %struct.spinlock** %lock.addr.i47, align 8
  call void @arch_local_irq_disable() #12, !dbg !8765
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8766, !srcloc !6536
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i47, align 8, !dbg !8767
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !8767
  %rlock.i48 = bitcast %union.anon.0* %34 to %struct.raw_spinlock*, !dbg !8767
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8768
  %shutdown30 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %35, i32 0, i32 13, !dbg !8770
  %bf.load31 = load i8, i8* %shutdown30, align 8, !dbg !8770
  %bf.lshr32 = lshr i8 %bf.load31, 5, !dbg !8770
  %bf.clear33 = and i8 %bf.lshr32, 1, !dbg !8770
  %bf.cast34 = trunc i8 %bf.clear33 to i1, !dbg !8770
  br i1 %bf.cast34, label %if.then35, label %if.end36, !dbg !8771

if.then35:                                        ; preds = %if.end24
  br label %skip, !dbg !8772

if.end36:                                         ; preds = %if.end24
  %36 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8773
  %37 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8774
  %command = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %37, i32 0, i32 57, !dbg !8775
  %38 = load i32, i32* %command, align 8, !dbg !8775
  %39 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8776
  %regs37 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %39, i32 0, i32 8, !dbg !8777
  %40 = load %struct.ehci_regs*, %struct.ehci_regs** %regs37, align 8, !dbg !8777
  %command38 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %40, i32 0, i32 0, !dbg !8778
  call void @ehci_writel(%struct.ehci_hcd* %36, i32 %38, i32* %command38) #11, !dbg !8779
  %41 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8780
  %42 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8781
  %regs39 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %42, i32 0, i32 8, !dbg !8782
  %43 = load %struct.ehci_regs*, %struct.ehci_regs** %regs39, align 8, !dbg !8782
  %configured_flag40 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %43, i32 0, i32 10, !dbg !8783
  call void @ehci_writel(%struct.ehci_hcd* %41, i32 1, i32* %configured_flag40) #11, !dbg !8784
  %44 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8785
  %45 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8786
  %regs41 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %45, i32 0, i32 8, !dbg !8787
  %46 = load %struct.ehci_regs*, %struct.ehci_regs** %regs41, align 8, !dbg !8787
  %command42 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %46, i32 0, i32 0, !dbg !8788
  %call43 = call i32 @ehci_readl(%struct.ehci_hcd* %44, i32* %command42) #11, !dbg !8789
  %47 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8790
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %47, i32 0, i32 12, !dbg !8791
  store i32 1, i32* %rh_state, align 4, !dbg !8792
  %48 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !8793
  %lock44 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %48, i32 0, i32 11, !dbg !8794
  store %struct.spinlock* %lock44, %struct.spinlock** %lock.addr.i49, align 8
  call void @arch_local_irq_enable() #12, !dbg !8795
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8796, !srcloc !6571
  %49 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i49, align 8, !dbg !8797
  %50 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %49, i32 0, i32 0, !dbg !8797
  %rlock.i50 = bitcast %union.anon.0* %50 to %struct.raw_spinlock*, !dbg !8797
  store i32 1, i32* %retval, align 4, !dbg !8798
  br label %return, !dbg !8798

return:                                           ; preds = %if.end36, %skip, %if.then1
  %51 = load i32, i32* %retval, align 4, !dbg !8799
  ret i32 %51, !dbg !8799
}

; Function Attrs: noredzone
declare dso_local void @usb_root_hub_lost_power(%struct.usb_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ehci_init_driver(%struct.hc_driver* %drv, %struct.ehci_driver_overrides* %over) #0 !dbg !8800 {
entry:
  %drv.addr = alloca %struct.hc_driver*, align 8
  %over.addr = alloca %struct.ehci_driver_overrides*, align 8
  store %struct.hc_driver* %drv, %struct.hc_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hc_driver** %drv.addr, metadata !8811, metadata !DIExpression()), !dbg !8812
  store %struct.ehci_driver_overrides* %over, %struct.ehci_driver_overrides** %over.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_driver_overrides** %over.addr, metadata !8813, metadata !DIExpression()), !dbg !8814
  %0 = load %struct.hc_driver*, %struct.hc_driver** %drv.addr, align 8, !dbg !8815
  %1 = bitcast %struct.hc_driver* %0 to i8*, !dbg !8816
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 bitcast ({ i8*, i8*, i64, i32 (%struct.usb_hcd*)*, i32, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*, i1)*, i32 (%struct.usb_hcd*, i1)*, void (%struct.usb_hcd*)*, void (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, i32 (%struct.usb_hcd*, %struct.urb*, i32)*, void (%struct.usb_hcd*, %struct.urb*)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, i8*)*, i32 (%struct.usb_hcd*, i16, i16, i16, i8*, i16)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*, i32)*, i64 (%struct.usb_hcd*)*, void (%struct.usb_hcd*, i32)*, i32 (%struct.usb_hcd*, i32)*, void (%struct.usb_hcd*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, void (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint**, i32, i32, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint**, i32, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_host_endpoint*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, void (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, %struct.usb_tt*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, %struct.usb_device*, i32)*, i32 (%struct.usb_hcd*, i32)*, i32 (%struct.usb_hcd*, i32, i1)* }* @ehci_hc_driver to i8*), i64 360, i1 false), !dbg !8816
  %2 = load %struct.ehci_driver_overrides*, %struct.ehci_driver_overrides** %over.addr, align 8, !dbg !8817
  %tobool = icmp ne %struct.ehci_driver_overrides* %2, null, !dbg !8817
  br i1 %tobool, label %if.then, label %if.end11, !dbg !8819

if.then:                                          ; preds = %entry
  %3 = load %struct.ehci_driver_overrides*, %struct.ehci_driver_overrides** %over.addr, align 8, !dbg !8820
  %extra_priv_size = getelementptr inbounds %struct.ehci_driver_overrides, %struct.ehci_driver_overrides* %3, i32 0, i32 0, !dbg !8822
  %4 = load i64, i64* %extra_priv_size, align 8, !dbg !8822
  %5 = load %struct.hc_driver*, %struct.hc_driver** %drv.addr, align 8, !dbg !8823
  %hcd_priv_size = getelementptr inbounds %struct.hc_driver, %struct.hc_driver* %5, i32 0, i32 2, !dbg !8824
  %6 = load i64, i64* %hcd_priv_size, align 8, !dbg !8825
  %add = add i64 %6, %4, !dbg !8825
  store i64 %add, i64* %hcd_priv_size, align 8, !dbg !8825
  %7 = load %struct.ehci_driver_overrides*, %struct.ehci_driver_overrides** %over.addr, align 8, !dbg !8826
  %reset = getelementptr inbounds %struct.ehci_driver_overrides, %struct.ehci_driver_overrides* %7, i32 0, i32 1, !dbg !8828
  %8 = load i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)** %reset, align 8, !dbg !8828
  %tobool1 = icmp ne i32 (%struct.usb_hcd*)* %8, null, !dbg !8826
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !8829

if.then2:                                         ; preds = %if.then
  %9 = load %struct.ehci_driver_overrides*, %struct.ehci_driver_overrides** %over.addr, align 8, !dbg !8830
  %reset3 = getelementptr inbounds %struct.ehci_driver_overrides, %struct.ehci_driver_overrides* %9, i32 0, i32 1, !dbg !8831
  %10 = load i32 (%struct.usb_hcd*)*, i32 (%struct.usb_hcd*)** %reset3, align 8, !dbg !8831
  %11 = load %struct.hc_driver*, %struct.hc_driver** %drv.addr, align 8, !dbg !8832
  %reset4 = getelementptr inbounds %struct.hc_driver, %struct.hc_driver* %11, i32 0, i32 5, !dbg !8833
  %reset5 = bitcast {}** %reset4 to i32 (%struct.usb_hcd*)**, !dbg !8833
  store i32 (%struct.usb_hcd*)* %10, i32 (%struct.usb_hcd*)** %reset5, align 8, !dbg !8834
  br label %if.end, !dbg !8832

if.end:                                           ; preds = %if.then2, %if.then
  %12 = load %struct.ehci_driver_overrides*, %struct.ehci_driver_overrides** %over.addr, align 8, !dbg !8835
  %port_power = getelementptr inbounds %struct.ehci_driver_overrides, %struct.ehci_driver_overrides* %12, i32 0, i32 2, !dbg !8837
  %13 = load i32 (%struct.usb_hcd*, i32, i1)*, i32 (%struct.usb_hcd*, i32, i1)** %port_power, align 8, !dbg !8837
  %tobool6 = icmp ne i32 (%struct.usb_hcd*, i32, i1)* %13, null, !dbg !8835
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !8838

if.then7:                                         ; preds = %if.end
  %14 = load %struct.ehci_driver_overrides*, %struct.ehci_driver_overrides** %over.addr, align 8, !dbg !8839
  %port_power8 = getelementptr inbounds %struct.ehci_driver_overrides, %struct.ehci_driver_overrides* %14, i32 0, i32 2, !dbg !8840
  %15 = load i32 (%struct.usb_hcd*, i32, i1)*, i32 (%struct.usb_hcd*, i32, i1)** %port_power8, align 8, !dbg !8840
  %16 = load %struct.hc_driver*, %struct.hc_driver** %drv.addr, align 8, !dbg !8841
  %port_power9 = getelementptr inbounds %struct.hc_driver, %struct.hc_driver* %16, i32 0, i32 44, !dbg !8842
  store i32 (%struct.usb_hcd*, i32, i1)* %15, i32 (%struct.usb_hcd*, i32, i1)** %port_power9, align 8, !dbg !8843
  br label %if.end10, !dbg !8841

if.end10:                                         ; preds = %if.then7, %if.end
  br label %if.end11, !dbg !8844

if.end11:                                         ; preds = %if.end10, %entry
  ret void, !dbg !8845
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_hcd_init() #5 section ".init.text" !dbg !8846 {
entry:
  %retval = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %tmp = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8849, metadata !DIExpression()), !dbg !8850
  store i32 0, i32* %retval1, align 4, !dbg !8850
  %call = call i32 @usb_disabled() #11, !dbg !8851
  %tobool = icmp ne i32 %call, 0, !dbg !8851
  br i1 %tobool, label %if.then, label %if.end, !dbg !8853

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !8854
  br label %return, !dbg !8854

if.end:                                           ; preds = %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @hcd_name, i64 0, i64 0)) #13, !dbg !8855
  call void @set_bit(i64 2, i64* @usb_hcds_loaded) #11, !dbg !8856
  %call3 = call zeroext i1 @test_bit(i64 0, i64* @usb_hcds_loaded) #11, !dbg !8857
  br i1 %call3, label %if.then5, label %lor.lhs.false, !dbg !8859

lor.lhs.false:                                    ; preds = %if.end
  %call4 = call zeroext i1 @test_bit(i64 1, i64* @usb_hcds_loaded) #11, !dbg !8860
  br i1 %call4, label %if.then5, label %if.end7, !dbg !8861

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.40, i64 0, i64 0)) #13, !dbg !8862
  br label %if.end7, !dbg !8862

if.end7:                                          ; preds = %if.then5, %lor.lhs.false
  store i32 0, i32* %tmp, align 4, !dbg !8863
  %0 = load i32, i32* %tmp, align 4, !dbg !8866
  %1 = load i32, i32* %retval1, align 4, !dbg !8867
  store i32 %1, i32* %retval, align 4, !dbg !8868
  br label %return, !dbg !8868

return:                                           ; preds = %if.end7, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !8869
  ret i32 %2, !dbg !8869
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @ehci_hcd_cleanup() #5 section ".exit.text" !dbg !8870 {
entry:
  call void @clear_bit(i64 2, i64* @usb_hcds_loaded) #11, !dbg !8871
  ret void, !dbg !8872
}

; Function Attrs: noredzone
declare dso_local i32 @xen_dbgp_reset_prep(%struct.usb_hcd*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @imx28_ehci_writel(i32 %val, i32* %addr) #0 !dbg !8873 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i32*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8878, metadata !DIExpression()), !dbg !8879
  store i32* %addr, i32** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %addr.addr, metadata !8880, metadata !DIExpression()), !dbg !8881
  ret void, !dbg !8882
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @writel(i32 %val, i8* %addr) #0 !dbg !8883 {
entry:
  %val.addr = alloca i32, align 4
  %addr.addr = alloca i8*, align 8
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8887, metadata !DIExpression()), !dbg !8888
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !8889, metadata !DIExpression()), !dbg !8888
  %0 = load i32, i32* %val.addr, align 4, !dbg !8888
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !8888
  %2 = bitcast i8* %1 to i32*, !dbg !8888
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %0, i32* %2) #7, !dbg !8888, !srcloc !8890
  ret void, !dbg !8888
}

; Function Attrs: noredzone
declare dso_local i32 @xen_dbgp_external_startup(%struct.usb_hcd*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !8891 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8892, metadata !DIExpression()), !dbg !8894
  %0 = load i64, i64* %__edi, align 8, !dbg !8894
  store i64 %0, i64* %__edi, align 8, !dbg !8894
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8895, metadata !DIExpression()), !dbg !8894
  %1 = load i64, i64* %__esi, align 8, !dbg !8894
  store i64 %1, i64* %__esi, align 8, !dbg !8894
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8896, metadata !DIExpression()), !dbg !8894
  %2 = load i64, i64* %__edx, align 8, !dbg !8894
  store i64 %2, i64* %__edx, align 8, !dbg !8894
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8897, metadata !DIExpression()), !dbg !8894
  %3 = load i64, i64* %__ecx, align 8, !dbg !8894
  store i64 %3, i64* %__ecx, align 8, !dbg !8894
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8898, metadata !DIExpression()), !dbg !8894
  %4 = load i64, i64* %__eax, align 8, !dbg !8894
  store i64 %4, i64* %__eax, align 8, !dbg !8894
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !8894
  %6 = call i64 @llvm.read_register.i64(metadata !6279), !dbg !8894
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !8894, !srcloc !8899
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8894
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8894
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8894
  call void @llvm.write_register.i64(metadata !6279, i64 %asmresult1), !dbg !8894
  ret void, !dbg !8900
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_enable() #0 !dbg !8901 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8902, metadata !DIExpression()), !dbg !8904
  %0 = load i64, i64* %__edi, align 8, !dbg !8904
  store i64 %0, i64* %__edi, align 8, !dbg !8904
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8905, metadata !DIExpression()), !dbg !8904
  %1 = load i64, i64* %__esi, align 8, !dbg !8904
  store i64 %1, i64* %__esi, align 8, !dbg !8904
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8906, metadata !DIExpression()), !dbg !8904
  %2 = load i64, i64* %__edx, align 8, !dbg !8904
  store i64 %2, i64* %__edx, align 8, !dbg !8904
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8907, metadata !DIExpression()), !dbg !8904
  %3 = load i64, i64* %__ecx, align 8, !dbg !8904
  store i64 %3, i64* %__ecx, align 8, !dbg !8904
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8908, metadata !DIExpression()), !dbg !8904
  %4 = load i64, i64* %__eax, align 8, !dbg !8904
  store i64 %4, i64* %__eax, align 8, !dbg !8904
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), align 8, !dbg !8904
  %6 = call i64 @llvm.read_register.i64(metadata !6279), !dbg !8904
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 3, i32 0), i32 1, i64 %6) #7, !dbg !8904, !srcloc !8909
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8904
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8904
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8904
  call void @llvm.write_register.i64(metadata !6279, i64 %asmresult1), !dbg !8904
  ret void, !dbg !8910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !8911 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !8912, metadata !DIExpression()), !dbg !8914
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8915, metadata !DIExpression()), !dbg !8914
  %0 = load i64, i64* %__edi, align 8, !dbg !8914
  store i64 %0, i64* %__edi, align 8, !dbg !8914
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8916, metadata !DIExpression()), !dbg !8914
  %1 = load i64, i64* %__esi, align 8, !dbg !8914
  store i64 %1, i64* %__esi, align 8, !dbg !8914
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8917, metadata !DIExpression()), !dbg !8914
  %2 = load i64, i64* %__edx, align 8, !dbg !8914
  store i64 %2, i64* %__edx, align 8, !dbg !8914
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8918, metadata !DIExpression()), !dbg !8914
  %3 = load i64, i64* %__ecx, align 8, !dbg !8914
  store i64 %3, i64* %__ecx, align 8, !dbg !8914
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8919, metadata !DIExpression()), !dbg !8914
  %4 = load i64, i64* %__eax, align 8, !dbg !8914
  store i64 %4, i64* %__eax, align 8, !dbg !8914
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !8914
  %6 = call i64 @llvm.read_register.i64(metadata !6279), !dbg !8920
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !8920, !srcloc !8923
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !8920
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !8920
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8920
  call void @llvm.write_register.i64(metadata !6279, i64 %asmresult1), !dbg !8920
  %8 = load i64, i64* %__eax, align 8, !dbg !8920
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !8924, metadata !DIExpression()), !dbg !8926
  store i64 -1, i64* %__mask, align 8, !dbg !8926
  %9 = load i64, i64* %__mask, align 8, !dbg !8926
  store i64 %9, i64* %tmp, align 8, !dbg !8926
  %10 = load i64, i64* %tmp, align 8, !dbg !8926
  %and = and i64 %8, %10, !dbg !8920
  store i64 %and, i64* %__ret, align 8, !dbg !8920
  %11 = load i64, i64* %__ret, align 8, !dbg !8914
  store i64 %11, i64* %tmp2, align 8, !dbg !8927
  %12 = load i64, i64* %tmp2, align 8, !dbg !8914
  ret i64 %12, !dbg !8928
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !8929 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !8930, metadata !DIExpression()), !dbg !8931
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !8932, metadata !DIExpression()), !dbg !8934
  %0 = load i64, i64* %__edi, align 8, !dbg !8934
  store i64 %0, i64* %__edi, align 8, !dbg !8934
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !8935, metadata !DIExpression()), !dbg !8934
  %1 = load i64, i64* %__esi, align 8, !dbg !8934
  store i64 %1, i64* %__esi, align 8, !dbg !8934
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !8936, metadata !DIExpression()), !dbg !8934
  %2 = load i64, i64* %__edx, align 8, !dbg !8934
  store i64 %2, i64* %__edx, align 8, !dbg !8934
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !8937, metadata !DIExpression()), !dbg !8934
  %3 = load i64, i64* %__ecx, align 8, !dbg !8934
  store i64 %3, i64* %__ecx, align 8, !dbg !8934
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !8938, metadata !DIExpression()), !dbg !8934
  %4 = load i64, i64* %__eax, align 8, !dbg !8934
  store i64 %4, i64* %__eax, align 8, !dbg !8934
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !8934
  %6 = call i64 @llvm.read_register.i64(metadata !6279), !dbg !8934
  %7 = load i64, i64* %f.addr, align 8, !dbg !8934
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !8934, !srcloc !8939
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !8934
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !8934
  store i64 %asmresult, i64* %__eax, align 8, !dbg !8934
  call void @llvm.write_register.i64(metadata !6279, i64 %asmresult1), !dbg !8934
  ret void, !dbg !8940
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !8941 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !8942, metadata !DIExpression()), !dbg !8943
  %0 = load i32, i32* %m.addr, align 4, !dbg !8944
  %conv = zext i32 %0 to i64, !dbg !8944
  %add = add i64 %conv, 4, !dbg !8945
  %sub = sub i64 %add, 1, !dbg !8946
  %div = sdiv i64 %sub, 4, !dbg !8947
  ret i64 %div, !dbg !8948
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !8949 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8953, metadata !DIExpression()), !dbg !8954
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8955, metadata !DIExpression()), !dbg !8956
  ret i1 true, !dbg !8957
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !8958 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8962, metadata !DIExpression()), !dbg !8963
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8964, metadata !DIExpression()), !dbg !8965
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8966, metadata !DIExpression()), !dbg !8967
  ret void, !dbg !8968
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !8969 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !8970, metadata !DIExpression()), !dbg !8971
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8972, metadata !DIExpression()), !dbg !8973
  ret i1 true, !dbg !8974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_ohci_hcfs(%struct.ehci_hcd* %ehci, i32 %operational) #0 !dbg !8975 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %operational.addr = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !8978, metadata !DIExpression()), !dbg !8979
  store i32 %operational, i32* %operational.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %operational.addr, metadata !8980, metadata !DIExpression()), !dbg !8981
  ret void, !dbg !8982
}

; Function Attrs: noredzone
declare dso_local void @hrtimer_init(%struct.hrtimer*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_hrtimer_func(%struct.hrtimer* %t) #0 !dbg !8983 {
entry:
  %lock.addr.i38 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i38, metadata !6709, metadata !DIExpression()), !dbg !8984
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !8986
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !8987
  %t.addr = alloca %struct.hrtimer*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ehci_hcd*, align 8
  %now = alloca i64, align 8
  %events = alloca i64, align 8
  %flags = alloca i64, align 8
  %e = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.hrtimer* %t, %struct.hrtimer** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hrtimer** %t.addr, metadata !8994, metadata !DIExpression()), !dbg !8995
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !8996, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8998, metadata !DIExpression()), !dbg !9000
  %0 = load %struct.hrtimer*, %struct.hrtimer** %t.addr, align 8, !dbg !9000
  %1 = bitcast %struct.hrtimer* %0 to i8*, !dbg !9000
  store i8* %1, i8** %__mptr, align 8, !dbg !9000
  br label %do.body, !dbg !9000

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9001

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !9000
  %add.ptr = getelementptr i8, i8* %2, i64 -104, !dbg !9000
  %3 = bitcast i8* %add.ptr to %struct.ehci_hcd*, !dbg !9000
  store %struct.ehci_hcd* %3, %struct.ehci_hcd** %tmp, align 8, !dbg !9001
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %tmp, align 8, !dbg !9000
  store %struct.ehci_hcd* %4, %struct.ehci_hcd** %ehci, align 8, !dbg !8997
  call void @llvm.dbg.declare(metadata i64* %now, metadata !9003, metadata !DIExpression()), !dbg !9004
  call void @llvm.dbg.declare(metadata i64* %events, metadata !9005, metadata !DIExpression()), !dbg !9006
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9007, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.declare(metadata i32* %e, metadata !9009, metadata !DIExpression()), !dbg !9010
  br label %do.body1, !dbg !9011

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !9012

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9013, metadata !DIExpression()), !dbg !9015
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9016, metadata !DIExpression()), !dbg !9015
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9015
  %conv = zext i1 %cmp to i32, !dbg !9015
  store i32 1, i32* %tmp3, align 4, !dbg !9015
  %5 = load i32, i32* %tmp3, align 4, !dbg !9015
  br label %do.body4, !dbg !9017

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !9018

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !9019

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !9021, metadata !DIExpression()), !dbg !9024
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !9025, metadata !DIExpression()), !dbg !9024
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !9024
  %conv10 = zext i1 %cmp9 to i32, !dbg !9024
  store i32 1, i32* %tmp11, align 4, !dbg !9024
  %6 = load i32, i32* %tmp11, align 4, !dbg !9024
  %call = call i64 @arch_local_irq_save() #11, !dbg !9026
  store i64 %call, i64* %flags, align 8, !dbg !9026
  br label %do.end12, !dbg !9026

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !9019

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !9018

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9027, !srcloc !9028
  br label %do.body15, !dbg !9027

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !9029
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 11, !dbg !9029
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9030
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !9031
  %rlock.i = bitcast %union.anon.0* %9 to %struct.raw_spinlock*, !dbg !9031
  br label %do.end17, !dbg !9029

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !9027

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !9018

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !9017

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !9012

do.end21:                                         ; preds = %do.end20
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !9032
  %enabled_hrtimer_events = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 1, !dbg !9033
  %11 = load i32, i32* %enabled_hrtimer_events, align 4, !dbg !9033
  %conv22 = zext i32 %11 to i64, !dbg !9032
  store i64 %conv22, i64* %events, align 8, !dbg !9034
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !9035
  %enabled_hrtimer_events23 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 1, !dbg !9036
  store i32 0, i32* %enabled_hrtimer_events23, align 4, !dbg !9037
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !9038
  %next_hrtimer_event = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %13, i32 0, i32 0, !dbg !9039
  store i32 99, i32* %next_hrtimer_event, align 8, !dbg !9040
  %call24 = call i64 @ktime_get() #11, !dbg !9041
  store i64 %call24, i64* %now, align 8, !dbg !9042
  %call25 = call i64 @find_first_bit(i64* %events, i64 12) #11, !dbg !9043
  %conv26 = trunc i64 %call25 to i32, !dbg !9043
  store i32 %conv26, i32* %e, align 4, !dbg !9043
  br label %for.cond, !dbg !9043

for.cond:                                         ; preds = %for.inc, %do.end21
  %14 = load i32, i32* %e, align 4, !dbg !9045
  %cmp27 = icmp ult i32 %14, 12, !dbg !9045
  br i1 %cmp27, label %for.body, label %for.end, !dbg !9043

for.body:                                         ; preds = %for.cond
  %15 = load i64, i64* %now, align 8, !dbg !9047
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !9050
  %hr_timeouts = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %16, i32 0, i32 2, !dbg !9051
  %17 = load i32, i32* %e, align 4, !dbg !9052
  %idxprom = zext i32 %17 to i64, !dbg !9050
  %arrayidx = getelementptr [12 x i64], [12 x i64]* %hr_timeouts, i64 0, i64 %idxprom, !dbg !9050
  %18 = load i64, i64* %arrayidx, align 8, !dbg !9050
  %call29 = call i32 @ktime_compare(i64 %15, i64 %18) #11, !dbg !9053
  %cmp30 = icmp sge i32 %call29, 0, !dbg !9054
  br i1 %cmp30, label %if.then, label %if.else, !dbg !9055

if.then:                                          ; preds = %for.body
  %19 = load i32, i32* %e, align 4, !dbg !9056
  %idxprom32 = zext i32 %19 to i64, !dbg !9057
  %arrayidx33 = getelementptr [12 x void (%struct.ehci_hcd*)*], [12 x void (%struct.ehci_hcd*)*]* @event_handlers, i64 0, i64 %idxprom32, !dbg !9057
  %20 = load void (%struct.ehci_hcd*)*, void (%struct.ehci_hcd*)** %arrayidx33, align 8, !dbg !9057
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !9058
  call void %20(%struct.ehci_hcd* %21) #11, !dbg !9057
  br label %if.end, !dbg !9057

if.else:                                          ; preds = %for.body
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !9059
  %23 = load i32, i32* %e, align 4, !dbg !9060
  call void @ehci_enable_event(%struct.ehci_hcd* %22, i32 %23, i1 zeroext false) #11, !dbg !9061
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !9062

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %e, align 4, !dbg !9045
  %add = add i32 %24, 1, !dbg !9045
  %conv34 = zext i32 %add to i64, !dbg !9045
  %call35 = call i64 @find_next_bit(i64* %events, i64 12, i64 %conv34) #11, !dbg !9045
  %conv36 = trunc i64 %call35 to i32, !dbg !9045
  store i32 %conv36, i32* %e, align 4, !dbg !9045
  br label %for.cond, !dbg !9045, !llvm.loop !9063

for.end:                                          ; preds = %for.cond
  %25 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !9065
  %lock37 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %25, i32 0, i32 11, !dbg !9066
  %26 = load i64, i64* %flags, align 8, !dbg !9067
  store %struct.spinlock* %lock37, %struct.spinlock** %lock.addr.i38, align 8
  store i64 %26, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !9068
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !9068
  store i32 1, i32* %tmp.i, align 4, !dbg !9068
  %27 = load i32, i32* %tmp.i, align 4, !dbg !9068
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !9069
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !9069
  store i32 1, i32* %tmp8.i, align 4, !dbg !9069
  %28 = load i32, i32* %tmp8.i, align 4, !dbg !9069
  %29 = load i64, i64* %flags.addr.i, align 8, !dbg !9070
  call void @arch_local_irq_restore(i64 %29) #12, !dbg !9070
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9071, !srcloc !6997
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i38, align 8, !dbg !9072
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !9072
  %rlock.i39 = bitcast %union.anon.0* %31 to %struct.raw_spinlock*, !dbg !9072
  ret i32 0, !dbg !9073
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !9074 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !9078, metadata !DIExpression()), !dbg !9079
  br label %do.body, !dbg !9080

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9081

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !9083

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !9081

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9085
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9085
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !9085
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !9085
  br label %do.end3, !dbg !9085

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !9081

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9087
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9088
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !9089
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !9090
  ret void, !dbg !9091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_mem_init(%struct.ehci_hcd* %ehci, i32 %flags) #0 !dbg !9092 {
entry:
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %flags.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %hw = alloca %struct.ehci_qh_hw*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !9095, metadata !DIExpression()), !dbg !9096
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9097, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9099, metadata !DIExpression()), !dbg !9100
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9101
  %call = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %0) #11, !dbg !9102
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call, i32 0, i32 0, !dbg !9103
  %sysdev = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 1, !dbg !9104
  %1 = load %struct.device*, %struct.device** %sysdev, align 8, !dbg !9104
  %call1 = call %struct.dma_pool* @dma_pool_create(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), %struct.device* %1, i64 96, i64 32, i64 4096) #11, !dbg !9105
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9106
  %qtd_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 51, !dbg !9107
  store %struct.dma_pool* %call1, %struct.dma_pool** %qtd_pool, align 8, !dbg !9108
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9109
  %qtd_pool2 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 51, !dbg !9111
  %4 = load %struct.dma_pool*, %struct.dma_pool** %qtd_pool2, align 8, !dbg !9111
  %tobool = icmp ne %struct.dma_pool* %4, null, !dbg !9109
  br i1 %tobool, label %if.end, label %if.then, !dbg !9112

if.then:                                          ; preds = %entry
  br label %fail, !dbg !9113

if.end:                                           ; preds = %entry
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9115
  %call3 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %5) #11, !dbg !9116
  %self4 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call3, i32 0, i32 0, !dbg !9117
  %sysdev5 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self4, i32 0, i32 1, !dbg !9118
  %6 = load %struct.device*, %struct.device** %sysdev5, align 8, !dbg !9118
  %call6 = call %struct.dma_pool* @dma_pool_create(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), %struct.device* %6, i64 96, i64 32, i64 4096) #11, !dbg !9119
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9120
  %qh_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 50, !dbg !9121
  store %struct.dma_pool* %call6, %struct.dma_pool** %qh_pool, align 8, !dbg !9122
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9123
  %qh_pool7 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 50, !dbg !9125
  %9 = load %struct.dma_pool*, %struct.dma_pool** %qh_pool7, align 8, !dbg !9125
  %tobool8 = icmp ne %struct.dma_pool* %9, null, !dbg !9123
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !9126

if.then9:                                         ; preds = %if.end
  br label %fail, !dbg !9127

if.end10:                                         ; preds = %if.end
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9129
  %11 = load i32, i32* %flags.addr, align 4, !dbg !9130
  %call11 = call %struct.ehci_qh* @ehci_qh_alloc(%struct.ehci_hcd* %10, i32 %11) #11, !dbg !9131
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9132
  %async = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 15, !dbg !9133
  store %struct.ehci_qh* %call11, %struct.ehci_qh** %async, align 8, !dbg !9134
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9135
  %async12 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %13, i32 0, i32 15, !dbg !9137
  %14 = load %struct.ehci_qh*, %struct.ehci_qh** %async12, align 8, !dbg !9137
  %tobool13 = icmp ne %struct.ehci_qh* %14, null, !dbg !9135
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !9138

if.then14:                                        ; preds = %if.end10
  br label %fail, !dbg !9139

if.end15:                                         ; preds = %if.end10
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9141
  %call16 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %15) #11, !dbg !9142
  %self17 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call16, i32 0, i32 0, !dbg !9143
  %sysdev18 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self17, i32 0, i32 1, !dbg !9144
  %16 = load %struct.device*, %struct.device** %sysdev18, align 8, !dbg !9144
  %call19 = call %struct.dma_pool* @dma_pool_create(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), %struct.device* %16, i64 192, i64 32, i64 4096) #11, !dbg !9145
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9146
  %itd_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %17, i32 0, i32 52, !dbg !9147
  store %struct.dma_pool* %call19, %struct.dma_pool** %itd_pool, align 8, !dbg !9148
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9149
  %itd_pool20 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %18, i32 0, i32 52, !dbg !9151
  %19 = load %struct.dma_pool*, %struct.dma_pool** %itd_pool20, align 8, !dbg !9151
  %tobool21 = icmp ne %struct.dma_pool* %19, null, !dbg !9149
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !9152

if.then22:                                        ; preds = %if.end15
  br label %fail, !dbg !9153

if.end23:                                         ; preds = %if.end15
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9155
  %call24 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %20) #11, !dbg !9156
  %self25 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call24, i32 0, i32 0, !dbg !9157
  %sysdev26 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self25, i32 0, i32 1, !dbg !9158
  %21 = load %struct.device*, %struct.device** %sysdev26, align 8, !dbg !9158
  %call27 = call %struct.dma_pool* @dma_pool_create(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), %struct.device* %21, i64 96, i64 32, i64 4096) #11, !dbg !9159
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9160
  %sitd_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %22, i32 0, i32 53, !dbg !9161
  store %struct.dma_pool* %call27, %struct.dma_pool** %sitd_pool, align 8, !dbg !9162
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9163
  %sitd_pool28 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %23, i32 0, i32 53, !dbg !9165
  %24 = load %struct.dma_pool*, %struct.dma_pool** %sitd_pool28, align 8, !dbg !9165
  %tobool29 = icmp ne %struct.dma_pool* %24, null, !dbg !9163
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !9166

if.then30:                                        ; preds = %if.end23
  br label %fail, !dbg !9167

if.end31:                                         ; preds = %if.end23
  %25 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9169
  %call32 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %25) #11, !dbg !9170
  %self33 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call32, i32 0, i32 0, !dbg !9171
  %sysdev34 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self33, i32 0, i32 1, !dbg !9172
  %26 = load %struct.device*, %struct.device** %sysdev34, align 8, !dbg !9172
  %27 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9173
  %periodic_size = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %27, i32 0, i32 23, !dbg !9174
  %28 = load i32, i32* %periodic_size, align 8, !dbg !9174
  %conv = zext i32 %28 to i64, !dbg !9173
  %mul = mul i64 %conv, 4, !dbg !9175
  %29 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9176
  %periodic_dma = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %29, i32 0, i32 25, !dbg !9177
  %30 = load i32, i32* %flags.addr, align 4, !dbg !9178
  %call35 = call i8* @dma_alloc_coherent(%struct.device* %26, i64 %mul, i64* %periodic_dma, i32 %30) #11, !dbg !9179
  %31 = bitcast i8* %call35 to i32*, !dbg !9180
  %32 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9181
  %periodic = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %32, i32 0, i32 24, !dbg !9182
  store i32* %31, i32** %periodic, align 8, !dbg !9183
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9184
  %periodic36 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %33, i32 0, i32 24, !dbg !9186
  %34 = load i32*, i32** %periodic36, align 8, !dbg !9186
  %cmp = icmp eq i32* %34, null, !dbg !9187
  br i1 %cmp, label %if.then38, label %if.end39, !dbg !9188

if.then38:                                        ; preds = %if.end31
  br label %fail, !dbg !9189

if.end39:                                         ; preds = %if.end31
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9191
  %use_dummy_qh = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %35, i32 0, i32 58, !dbg !9193
  %bf.load = load i16, i16* %use_dummy_qh, align 4, !dbg !9193
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !9193
  %bf.clear = and i16 %bf.lshr, 1, !dbg !9193
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9193
  %tobool40 = icmp ne i32 %bf.cast, 0, !dbg !9191
  br i1 %tobool40, label %if.then41, label %if.else, !dbg !9194

if.then41:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata %struct.ehci_qh_hw** %hw, metadata !9195, metadata !DIExpression()), !dbg !9197
  %36 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9198
  %37 = load i32, i32* %flags.addr, align 4, !dbg !9199
  %call42 = call %struct.ehci_qh* @ehci_qh_alloc(%struct.ehci_hcd* %36, i32 %37) #11, !dbg !9200
  %38 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9201
  %dummy = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %38, i32 0, i32 16, !dbg !9202
  store %struct.ehci_qh* %call42, %struct.ehci_qh** %dummy, align 8, !dbg !9203
  %39 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9204
  %dummy43 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %39, i32 0, i32 16, !dbg !9206
  %40 = load %struct.ehci_qh*, %struct.ehci_qh** %dummy43, align 8, !dbg !9206
  %tobool44 = icmp ne %struct.ehci_qh* %40, null, !dbg !9204
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !9207

if.then45:                                        ; preds = %if.then41
  br label %fail, !dbg !9208

if.end46:                                         ; preds = %if.then41
  %41 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9209
  %dummy47 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %41, i32 0, i32 16, !dbg !9210
  %42 = load %struct.ehci_qh*, %struct.ehci_qh** %dummy47, align 8, !dbg !9210
  %hw48 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %42, i32 0, i32 0, !dbg !9211
  %43 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw48, align 8, !dbg !9211
  store %struct.ehci_qh_hw* %43, %struct.ehci_qh_hw** %hw, align 8, !dbg !9212
  %44 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9213
  %call49 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %44, i32 1) #11, !dbg !9213
  %45 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !9214
  %hw_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %45, i32 0, i32 0, !dbg !9215
  store i32 %call49, i32* %hw_next, align 32, !dbg !9216
  %46 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9217
  %call50 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %46, i32 1) #11, !dbg !9217
  %47 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !9218
  %hw_qtd_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %47, i32 0, i32 4, !dbg !9219
  store i32 %call50, i32* %hw_qtd_next, align 16, !dbg !9220
  %48 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9221
  %call51 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %48, i32 1) #11, !dbg !9221
  %49 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !9222
  %hw_alt_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %49, i32 0, i32 5, !dbg !9223
  store i32 %call51, i32* %hw_alt_next, align 4, !dbg !9224
  %50 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !9225
  %51 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9226
  %dummy52 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %51, i32 0, i32 16, !dbg !9227
  %52 = load %struct.ehci_qh*, %struct.ehci_qh** %dummy52, align 8, !dbg !9227
  %hw53 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %52, i32 0, i32 0, !dbg !9228
  store %struct.ehci_qh_hw* %50, %struct.ehci_qh_hw** %hw53, align 8, !dbg !9229
  store i32 0, i32* %i, align 4, !dbg !9230
  br label %for.cond, !dbg !9232

for.cond:                                         ; preds = %for.inc, %if.end46
  %53 = load i32, i32* %i, align 4, !dbg !9233
  %54 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9235
  %periodic_size54 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %54, i32 0, i32 23, !dbg !9236
  %55 = load i32, i32* %periodic_size54, align 8, !dbg !9236
  %cmp55 = icmp ult i32 %53, %55, !dbg !9237
  br i1 %cmp55, label %for.body, label %for.end, !dbg !9238

for.body:                                         ; preds = %for.cond
  %56 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9239
  %57 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9240
  %dummy57 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %57, i32 0, i32 16, !dbg !9241
  %58 = load %struct.ehci_qh*, %struct.ehci_qh** %dummy57, align 8, !dbg !9241
  %qh_dma = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %58, i32 0, i32 1, !dbg !9242
  %59 = load i64, i64* %qh_dma, align 8, !dbg !9242
  %conv58 = trunc i64 %59 to i32, !dbg !9240
  %call59 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %56, i32 %conv58) #11, !dbg !9243
  %60 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9244
  %periodic60 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %60, i32 0, i32 24, !dbg !9245
  %61 = load i32*, i32** %periodic60, align 8, !dbg !9245
  %62 = load i32, i32* %i, align 4, !dbg !9246
  %idxprom = sext i32 %62 to i64, !dbg !9244
  %arrayidx = getelementptr i32, i32* %61, i64 %idxprom, !dbg !9244
  store i32 %call59, i32* %arrayidx, align 4, !dbg !9247
  br label %for.inc, !dbg !9244

for.inc:                                          ; preds = %for.body
  %63 = load i32, i32* %i, align 4, !dbg !9248
  %inc = add i32 %63, 1, !dbg !9248
  store i32 %inc, i32* %i, align 4, !dbg !9248
  br label %for.cond, !dbg !9249, !llvm.loop !9250

for.end:                                          ; preds = %for.cond
  br label %if.end73, !dbg !9252

if.else:                                          ; preds = %if.end39
  store i32 0, i32* %i, align 4, !dbg !9253
  br label %for.cond61, !dbg !9256

for.cond61:                                       ; preds = %for.inc70, %if.else
  %64 = load i32, i32* %i, align 4, !dbg !9257
  %65 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9259
  %periodic_size62 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %65, i32 0, i32 23, !dbg !9260
  %66 = load i32, i32* %periodic_size62, align 8, !dbg !9260
  %cmp63 = icmp ult i32 %64, %66, !dbg !9261
  br i1 %cmp63, label %for.body65, label %for.end72, !dbg !9262

for.body65:                                       ; preds = %for.cond61
  %67 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9263
  %call66 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %67, i32 1) #11, !dbg !9263
  %68 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9264
  %periodic67 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %68, i32 0, i32 24, !dbg !9265
  %69 = load i32*, i32** %periodic67, align 8, !dbg !9265
  %70 = load i32, i32* %i, align 4, !dbg !9266
  %idxprom68 = sext i32 %70 to i64, !dbg !9264
  %arrayidx69 = getelementptr i32, i32* %69, i64 %idxprom68, !dbg !9264
  store i32 %call66, i32* %arrayidx69, align 4, !dbg !9267
  br label %for.inc70, !dbg !9264

for.inc70:                                        ; preds = %for.body65
  %71 = load i32, i32* %i, align 4, !dbg !9268
  %inc71 = add i32 %71, 1, !dbg !9268
  store i32 %inc71, i32* %i, align 4, !dbg !9268
  br label %for.cond61, !dbg !9269, !llvm.loop !9270

for.end72:                                        ; preds = %for.cond61
  br label %if.end73

if.end73:                                         ; preds = %for.end72, %for.end
  %72 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9272
  %periodic_size74 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %72, i32 0, i32 23, !dbg !9273
  %73 = load i32, i32* %periodic_size74, align 8, !dbg !9273
  %conv75 = zext i32 %73 to i64, !dbg !9272
  %74 = load i32, i32* %flags.addr, align 4, !dbg !9274
  %call76 = call i8* @kcalloc(i64 %conv75, i64 8, i32 %74) #11, !dbg !9275
  %75 = bitcast i8* %call76 to %union.ehci_shadow*, !dbg !9275
  %76 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9276
  %pshadow = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %76, i32 0, i32 28, !dbg !9277
  store %union.ehci_shadow* %75, %union.ehci_shadow** %pshadow, align 8, !dbg !9278
  %77 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9279
  %pshadow77 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %77, i32 0, i32 28, !dbg !9281
  %78 = load %union.ehci_shadow*, %union.ehci_shadow** %pshadow77, align 8, !dbg !9281
  %cmp78 = icmp ne %union.ehci_shadow* %78, null, !dbg !9282
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !9283

if.then80:                                        ; preds = %if.end73
  store i32 0, i32* %retval, align 4, !dbg !9284
  br label %return, !dbg !9284

if.end81:                                         ; preds = %if.end73
  br label %fail, !dbg !9285

fail:                                             ; preds = %if.end81, %if.then45, %if.then38, %if.then30, %if.then22, %if.then14, %if.then9, %if.then
  call void @llvm.dbg.label(metadata !9286), !dbg !9287
  %79 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9288
  call void @ehci_mem_cleanup(%struct.ehci_hcd* %79) #11, !dbg !9289
  store i32 -12, i32* %retval, align 4, !dbg !9290
  br label %return, !dbg !9290

return:                                           ; preds = %fail, %if.then80
  %80 = load i32, i32* %retval, align 4, !dbg !9291
  ret i32 %80, !dbg !9291
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cpu_to_hc32(%struct.ehci_hcd* %ehci, i32 %x) #0 !dbg !9292 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %x.addr = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !9296, metadata !DIExpression()), !dbg !9297
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !9298, metadata !DIExpression()), !dbg !9299
  %0 = load i32, i32* %x.addr, align 4, !dbg !9300
  ret i32 %0, !dbg !9301
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get() #2

; Function Attrs: noredzone
declare dso_local i64 @find_first_bit(i64*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ktime_compare(i64 %cmp1, i64 %cmp2) #0 !dbg !9302 {
entry:
  %retval = alloca i32, align 4
  %cmp1.addr = alloca i64, align 8
  %cmp2.addr = alloca i64, align 8
  store i64 %cmp1, i64* %cmp1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp1.addr, metadata !9306, metadata !DIExpression()), !dbg !9307
  store i64 %cmp2, i64* %cmp2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp2.addr, metadata !9308, metadata !DIExpression()), !dbg !9309
  %0 = load i64, i64* %cmp1.addr, align 8, !dbg !9310
  %1 = load i64, i64* %cmp2.addr, align 8, !dbg !9312
  %cmp = icmp slt i64 %0, %1, !dbg !9313
  br i1 %cmp, label %if.then, label %if.end, !dbg !9314

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9315
  br label %return, !dbg !9315

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %cmp1.addr, align 8, !dbg !9316
  %3 = load i64, i64* %cmp2.addr, align 8, !dbg !9318
  %cmp3 = icmp sgt i64 %2, %3, !dbg !9319
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9320

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !9321
  br label %return, !dbg !9321

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9322
  br label %return, !dbg !9322

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !9323
  ret i32 %4, !dbg !9323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_enable_event(%struct.ehci_hcd* %ehci, i32 %event, i1 zeroext %resched) #0 !dbg !9324 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %event.addr = alloca i32, align 4
  %resched.addr = alloca i8, align 1
  %timeout = alloca i64*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !9327, metadata !DIExpression()), !dbg !9328
  store i32 %event, i32* %event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event.addr, metadata !9329, metadata !DIExpression()), !dbg !9330
  %frombool = zext i1 %resched to i8
  store i8 %frombool, i8* %resched.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resched.addr, metadata !9331, metadata !DIExpression()), !dbg !9332
  call void @llvm.dbg.declare(metadata i64** %timeout, metadata !9333, metadata !DIExpression()), !dbg !9335
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9336
  %hr_timeouts = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 2, !dbg !9337
  %1 = load i32, i32* %event.addr, align 4, !dbg !9338
  %idxprom = zext i32 %1 to i64, !dbg !9336
  %arrayidx = getelementptr [12 x i64], [12 x i64]* %hr_timeouts, i64 0, i64 %idxprom, !dbg !9336
  store i64* %arrayidx, i64** %timeout, align 8, !dbg !9335
  %2 = load i8, i8* %resched.addr, align 1, !dbg !9339
  %tobool = trunc i8 %2 to i1, !dbg !9339
  br i1 %tobool, label %if.then, label %if.end, !dbg !9341

if.then:                                          ; preds = %entry
  %call = call i64 @ktime_get() #11, !dbg !9342
  %3 = load i32, i32* %event.addr, align 4, !dbg !9342
  %idxprom1 = zext i32 %3 to i64, !dbg !9342
  %arrayidx2 = getelementptr [12 x i32], [12 x i32]* @event_delays_ns, i64 0, i64 %idxprom1, !dbg !9342
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !9342
  %conv = zext i32 %4 to i64, !dbg !9342
  %add = add i64 %call, %conv, !dbg !9342
  %5 = load i64*, i64** %timeout, align 8, !dbg !9343
  store i64 %add, i64* %5, align 8, !dbg !9344
  br label %if.end, !dbg !9345

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %event.addr, align 4, !dbg !9346
  %shl = shl i32 1, %6, !dbg !9347
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9348
  %enabled_hrtimer_events = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 1, !dbg !9349
  %8 = load i32, i32* %enabled_hrtimer_events, align 4, !dbg !9350
  %or = or i32 %8, %shl, !dbg !9350
  store i32 %or, i32* %enabled_hrtimer_events, align 4, !dbg !9350
  %9 = load i32, i32* %event.addr, align 4, !dbg !9351
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9353
  %next_hrtimer_event = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 0, !dbg !9354
  %11 = load i32, i32* %next_hrtimer_event, align 8, !dbg !9354
  %cmp = icmp ult i32 %9, %11, !dbg !9355
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !9356

if.then4:                                         ; preds = %if.end
  %12 = load i32, i32* %event.addr, align 4, !dbg !9357
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9359
  %next_hrtimer_event5 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %13, i32 0, i32 0, !dbg !9360
  store i32 %12, i32* %next_hrtimer_event5, align 8, !dbg !9361
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9362
  %hrtimer = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 3, !dbg !9363
  %15 = load i64*, i64** %timeout, align 8, !dbg !9364
  %16 = load i64, i64* %15, align 8, !dbg !9365
  call void @hrtimer_start_range_ns(%struct.hrtimer* %hrtimer, i64 %16, i64 1000000, i32 0) #11, !dbg !9366
  br label %if.end6, !dbg !9367

if.end6:                                          ; preds = %if.then4, %if.end
  ret void, !dbg !9368
}

; Function Attrs: noredzone
declare dso_local i64 @find_next_bit(i64*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_poll_ASS(%struct.ehci_hcd* %ehci) #0 !dbg !9369 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %actual = alloca i32, align 4
  %want = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !9370, metadata !DIExpression()), !dbg !9371
  call void @llvm.dbg.declare(metadata i32* %actual, metadata !9372, metadata !DIExpression()), !dbg !9373
  call void @llvm.dbg.declare(metadata i32* %want, metadata !9374, metadata !DIExpression()), !dbg !9375
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9376
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 12, !dbg !9378
  %1 = load i32, i32* %rh_state, align 4, !dbg !9378
  %cmp = icmp ne i32 %1, 2, !dbg !9379
  br i1 %cmp, label %if.then, label %if.end, !dbg !9380

if.then:                                          ; preds = %entry
  br label %if.end18, !dbg !9381

if.end:                                           ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9382
  %command = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 57, !dbg !9383
  %3 = load i32, i32* %command, align 8, !dbg !9383
  %and = and i32 %3, 32, !dbg !9384
  %tobool = icmp ne i32 %and, 0, !dbg !9385
  %4 = zext i1 %tobool to i64, !dbg !9385
  %cond = select i1 %tobool, i32 32768, i32 0, !dbg !9385
  store i32 %cond, i32* %want, align 4, !dbg !9386
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9387
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9388
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 8, !dbg !9389
  %7 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !9389
  %status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %7, i32 0, i32 1, !dbg !9390
  %call = call i32 @ehci_readl(%struct.ehci_hcd* %5, i32* %status) #11, !dbg !9391
  %and1 = and i32 %call, 32768, !dbg !9392
  store i32 %and1, i32* %actual, align 4, !dbg !9393
  %8 = load i32, i32* %want, align 4, !dbg !9394
  %9 = load i32, i32* %actual, align 4, !dbg !9396
  %cmp2 = icmp ne i32 %8, %9, !dbg !9397
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !9398

if.then3:                                         ; preds = %if.end
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9399
  %ASS_poll_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 5, !dbg !9402
  %11 = load i32, i32* %ASS_poll_count, align 4, !dbg !9403
  %inc = add i32 %11, 1, !dbg !9403
  store i32 %inc, i32* %ASS_poll_count, align 4, !dbg !9403
  %cmp4 = icmp slt i32 %11, 2, !dbg !9404
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !9405

if.then5:                                         ; preds = %if.then3
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9406
  call void @ehci_enable_event(%struct.ehci_hcd* %12, i32 0, i1 zeroext true) #11, !dbg !9408
  br label %if.end18, !dbg !9409

if.end6:                                          ; preds = %if.then3
  br label %if.end7, !dbg !9410

if.end7:                                          ; preds = %if.end6, %if.end
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9411
  %ASS_poll_count8 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %13, i32 0, i32 5, !dbg !9412
  store i32 0, i32* %ASS_poll_count8, align 4, !dbg !9413
  %14 = load i32, i32* %want, align 4, !dbg !9414
  %cmp9 = icmp eq i32 %14, 0, !dbg !9416
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !9417

if.then10:                                        ; preds = %if.end7
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9418
  %async_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %15, i32 0, i32 20, !dbg !9421
  %16 = load i32, i32* %async_count, align 4, !dbg !9421
  %cmp11 = icmp ugt i32 %16, 0, !dbg !9422
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !9423

if.then12:                                        ; preds = %if.then10
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9424
  call void @ehci_set_command_bit(%struct.ehci_hcd* %17, i32 32) #11, !dbg !9425
  br label %if.end13, !dbg !9425

if.end13:                                         ; preds = %if.then12, %if.then10
  br label %if.end18, !dbg !9426

if.else:                                          ; preds = %if.end7
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9427
  %async_count14 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %18, i32 0, i32 20, !dbg !9430
  %19 = load i32, i32* %async_count14, align 4, !dbg !9430
  %cmp15 = icmp eq i32 %19, 0, !dbg !9431
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !9432

if.then16:                                        ; preds = %if.else
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9433
  call void @ehci_enable_event(%struct.ehci_hcd* %20, i32 10, i1 zeroext true) #11, !dbg !9435
  br label %if.end17, !dbg !9436

if.end17:                                         ; preds = %if.then16, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.then, %if.then5, %if.end17, %if.end13
  ret void, !dbg !9437
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_poll_PSS(%struct.ehci_hcd* %ehci) #0 !dbg !9438 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %actual = alloca i32, align 4
  %want = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !9439, metadata !DIExpression()), !dbg !9440
  call void @llvm.dbg.declare(metadata i32* %actual, metadata !9441, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.declare(metadata i32* %want, metadata !9443, metadata !DIExpression()), !dbg !9444
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9445
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 12, !dbg !9447
  %1 = load i32, i32* %rh_state, align 4, !dbg !9447
  %cmp = icmp ne i32 %1, 2, !dbg !9448
  br i1 %cmp, label %if.then, label %if.end, !dbg !9449

if.then:                                          ; preds = %entry
  br label %if.end18, !dbg !9450

if.end:                                           ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9451
  %command = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 57, !dbg !9452
  %3 = load i32, i32* %command, align 8, !dbg !9452
  %and = and i32 %3, 16, !dbg !9453
  %tobool = icmp ne i32 %and, 0, !dbg !9454
  %4 = zext i1 %tobool to i64, !dbg !9454
  %cond = select i1 %tobool, i32 16384, i32 0, !dbg !9454
  store i32 %cond, i32* %want, align 4, !dbg !9455
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9456
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9457
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 8, !dbg !9458
  %7 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !9458
  %status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %7, i32 0, i32 1, !dbg !9459
  %call = call i32 @ehci_readl(%struct.ehci_hcd* %5, i32* %status) #11, !dbg !9460
  %and1 = and i32 %call, 16384, !dbg !9461
  store i32 %and1, i32* %actual, align 4, !dbg !9462
  %8 = load i32, i32* %want, align 4, !dbg !9463
  %9 = load i32, i32* %actual, align 4, !dbg !9465
  %cmp2 = icmp ne i32 %8, %9, !dbg !9466
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !9467

if.then3:                                         ; preds = %if.end
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9468
  %PSS_poll_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 4, !dbg !9471
  %11 = load i32, i32* %PSS_poll_count, align 8, !dbg !9472
  %inc = add i32 %11, 1, !dbg !9472
  store i32 %inc, i32* %PSS_poll_count, align 8, !dbg !9472
  %cmp4 = icmp slt i32 %11, 2, !dbg !9473
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !9474

if.then5:                                         ; preds = %if.then3
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9475
  call void @ehci_enable_event(%struct.ehci_hcd* %12, i32 1, i1 zeroext true) #11, !dbg !9477
  br label %if.end18, !dbg !9478

if.end6:                                          ; preds = %if.then3
  br label %if.end7, !dbg !9479

if.end7:                                          ; preds = %if.end6, %if.end
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9480
  %PSS_poll_count8 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %13, i32 0, i32 4, !dbg !9481
  store i32 0, i32* %PSS_poll_count8, align 8, !dbg !9482
  %14 = load i32, i32* %want, align 4, !dbg !9483
  %cmp9 = icmp eq i32 %14, 0, !dbg !9485
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !9486

if.then10:                                        ; preds = %if.end7
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9487
  %periodic_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %15, i32 0, i32 37, !dbg !9490
  %16 = load i32, i32* %periodic_count, align 8, !dbg !9490
  %cmp11 = icmp ugt i32 %16, 0, !dbg !9491
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !9492

if.then12:                                        ; preds = %if.then10
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9493
  call void @ehci_set_command_bit(%struct.ehci_hcd* %17, i32 16) #11, !dbg !9494
  br label %if.end13, !dbg !9494

if.end13:                                         ; preds = %if.then12, %if.then10
  br label %if.end18, !dbg !9495

if.else:                                          ; preds = %if.end7
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9496
  %periodic_count14 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %18, i32 0, i32 37, !dbg !9499
  %19 = load i32, i32* %periodic_count14, align 8, !dbg !9499
  %cmp15 = icmp eq i32 %19, 0, !dbg !9500
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !9501

if.then16:                                        ; preds = %if.else
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9502
  call void @ehci_enable_event(%struct.ehci_hcd* %20, i32 9, i1 zeroext true) #11, !dbg !9504
  br label %if.end17, !dbg !9505

if.end17:                                         ; preds = %if.then16, %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.then, %if.then5, %if.end17, %if.end13
  ret void, !dbg !9506
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_handle_controller_death(%struct.ehci_hcd* %ehci) #0 !dbg !9507 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !9508, metadata !DIExpression()), !dbg !9509
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9510
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9512
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 8, !dbg !9513
  %2 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !9513
  %status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %2, i32 0, i32 1, !dbg !9514
  %call = call i32 @ehci_readl(%struct.ehci_hcd* %0, i32* %status) #11, !dbg !9515
  %and = and i32 %call, 4096, !dbg !9516
  %tobool = icmp ne i32 %and, 0, !dbg !9516
  br i1 %tobool, label %if.end3, label %if.then, !dbg !9517

if.then:                                          ; preds = %entry
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9518
  %died_poll_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 6, !dbg !9521
  %4 = load i32, i32* %died_poll_count, align 8, !dbg !9522
  %inc = add i32 %4, 1, !dbg !9522
  store i32 %inc, i32* %died_poll_count, align 8, !dbg !9522
  %cmp = icmp slt i32 %4, 5, !dbg !9523
  br i1 %cmp, label %if.then1, label %if.end, !dbg !9524

if.then1:                                         ; preds = %if.then
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9525
  call void @ehci_enable_event(%struct.ehci_hcd* %5, i32 2, i1 zeroext true) #11, !dbg !9527
  br label %return, !dbg !9528

if.end:                                           ; preds = %if.then
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9529
  %call2 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %6) #11, !dbg !9529
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call2, i32 0, i32 0, !dbg !9529
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !9529
  %7 = load %struct.device*, %struct.device** %controller, align 8, !dbg !9529
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %7, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0)) #13, !dbg !9529
  br label %if.end3, !dbg !9530

if.end3:                                          ; preds = %if.end, %entry
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9531
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 12, !dbg !9532
  store i32 0, i32* %rh_state, align 4, !dbg !9533
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9534
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9535
  %regs4 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 8, !dbg !9536
  %11 = load %struct.ehci_regs*, %struct.ehci_regs** %regs4, align 8, !dbg !9536
  %configured_flag = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %11, i32 0, i32 10, !dbg !9537
  call void @ehci_writel(%struct.ehci_hcd* %9, i32 0, i32* %configured_flag) #11, !dbg !9538
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9539
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9540
  %regs5 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %13, i32 0, i32 8, !dbg !9541
  %14 = load %struct.ehci_regs*, %struct.ehci_regs** %regs5, align 8, !dbg !9541
  %intr_enable = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %14, i32 0, i32 2, !dbg !9542
  call void @ehci_writel(%struct.ehci_hcd* %12, i32 0, i32* %intr_enable) #11, !dbg !9543
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9544
  call void @ehci_work(%struct.ehci_hcd* %15) #11, !dbg !9545
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9546
  call void @end_unlink_async(%struct.ehci_hcd* %16) #11, !dbg !9547
  br label %return, !dbg !9548

return:                                           ; preds = %if.end3, %if.then1
  ret void, !dbg !9548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_handle_intr_unlinks(%struct.ehci_hcd* %ehci) #0 !dbg !9549 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %stopped = alloca i8, align 1
  %qh = alloca %struct.ehci_qh*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ehci_qh*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !9550, metadata !DIExpression()), !dbg !9551
  call void @llvm.dbg.declare(metadata i8* %stopped, metadata !9552, metadata !DIExpression()), !dbg !9553
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9554
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 12, !dbg !9555
  %1 = load i32, i32* %rh_state, align 4, !dbg !9555
  %cmp = icmp ult i32 %1, 2, !dbg !9556
  %frombool = zext i1 %cmp to i8, !dbg !9553
  store i8 %frombool, i8* %stopped, align 1, !dbg !9553
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9557
  %intr_unlinking = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 13, !dbg !9558
  %bf.load = load i8, i8* %intr_unlinking, align 8, !dbg !9559
  %bf.clear = and i8 %bf.load, -5, !dbg !9559
  %bf.set = or i8 %bf.clear, 4, !dbg !9559
  store i8 %bf.set, i8* %intr_unlinking, align 8, !dbg !9559
  br label %while.cond, !dbg !9560

while.cond:                                       ; preds = %if.end, %entry
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9561
  %intr_unlink = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 30, !dbg !9562
  %call = call i32 @list_empty(%struct.list_head* %intr_unlink) #11, !dbg !9563
  %tobool = icmp ne i32 %call, 0, !dbg !9564
  %lnot = xor i1 %tobool, true, !dbg !9564
  br i1 %lnot, label %while.body, label %while.end, !dbg !9560

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !9565, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9568, metadata !DIExpression()), !dbg !9570
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9570
  %intr_unlink1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 30, !dbg !9570
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %intr_unlink1, i32 0, i32 0, !dbg !9570
  %5 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9570
  %6 = bitcast %struct.list_head* %5 to i8*, !dbg !9570
  store i8* %6, i8** %__mptr, align 8, !dbg !9570
  br label %do.body, !dbg !9570

do.body:                                          ; preds = %while.body
  br label %do.end, !dbg !9571

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !9570
  %add.ptr = getelementptr i8, i8* %7, i64 -64, !dbg !9570
  %8 = bitcast i8* %add.ptr to %struct.ehci_qh*, !dbg !9570
  store %struct.ehci_qh* %8, %struct.ehci_qh** %tmp, align 8, !dbg !9571
  %9 = load %struct.ehci_qh*, %struct.ehci_qh** %tmp, align 8, !dbg !9570
  store %struct.ehci_qh* %9, %struct.ehci_qh** %qh, align 8, !dbg !9573
  %10 = load i8, i8* %stopped, align 1, !dbg !9574
  %tobool2 = trunc i8 %10 to i1, !dbg !9574
  br i1 %tobool2, label %if.end, label %land.lhs.true, !dbg !9576

land.lhs.true:                                    ; preds = %do.end
  %11 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9577
  %unlink_cycle = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %11, i32 0, i32 8, !dbg !9578
  %12 = load i32, i32* %unlink_cycle, align 8, !dbg !9578
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9579
  %intr_unlink_cycle = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %13, i32 0, i32 32, !dbg !9580
  %14 = load i32, i32* %intr_unlink_cycle, align 4, !dbg !9580
  %cmp3 = icmp eq i32 %12, %14, !dbg !9581
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9582

if.then:                                          ; preds = %land.lhs.true
  br label %while.end, !dbg !9583

if.end:                                           ; preds = %land.lhs.true, %do.end
  %15 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9584
  %unlink_node = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %15, i32 0, i32 6, !dbg !9585
  call void @list_del_init(%struct.list_head* %unlink_node) #11, !dbg !9586
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9587
  %17 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9588
  call void @end_unlink_intr(%struct.ehci_hcd* %16, %struct.ehci_qh* %17) #11, !dbg !9589
  br label %while.cond, !dbg !9560, !llvm.loop !9590

while.end:                                        ; preds = %if.then, %while.cond
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9592
  %intr_unlink4 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %18, i32 0, i32 30, !dbg !9594
  %call5 = call i32 @list_empty(%struct.list_head* %intr_unlink4) #11, !dbg !9595
  %tobool6 = icmp ne i32 %call5, 0, !dbg !9595
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !9596

if.then7:                                         ; preds = %while.end
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9597
  call void @ehci_enable_event(%struct.ehci_hcd* %19, i32 3, i1 zeroext true) #11, !dbg !9599
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9600
  %intr_unlink_cycle8 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %20, i32 0, i32 32, !dbg !9601
  %21 = load i32, i32* %intr_unlink_cycle8, align 4, !dbg !9602
  %inc = add i32 %21, 1, !dbg !9602
  store i32 %inc, i32* %intr_unlink_cycle8, align 4, !dbg !9602
  br label %if.end9, !dbg !9603

if.end9:                                          ; preds = %if.then7, %while.end
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9604
  %intr_unlinking10 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %22, i32 0, i32 13, !dbg !9605
  %bf.load11 = load i8, i8* %intr_unlinking10, align 8, !dbg !9606
  %bf.clear12 = and i8 %bf.load11, -5, !dbg !9606
  store i8 %bf.clear12, i8* %intr_unlinking10, align 8, !dbg !9606
  ret void, !dbg !9607
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @end_free_itds(%struct.ehci_hcd* %ehci) #0 !dbg !9608 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %itd = alloca %struct.ehci_itd*, align 8
  %n = alloca %struct.ehci_itd*, align 8
  %sitd = alloca %struct.ehci_sitd*, align 8
  %sn = alloca %struct.ehci_sitd*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ehci_itd*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.ehci_itd*, align 8
  %__mptr15 = alloca i8*, align 8
  %tmp20 = alloca %struct.ehci_itd*, align 8
  %__mptr22 = alloca i8*, align 8
  %tmp26 = alloca %struct.ehci_sitd*, align 8
  %__mptr28 = alloca i8*, align 8
  %tmp32 = alloca %struct.ehci_sitd*, align 8
  %__mptr46 = alloca i8*, align 8
  %tmp51 = alloca %struct.ehci_sitd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !9609, metadata !DIExpression()), !dbg !9610
  call void @llvm.dbg.declare(metadata %struct.ehci_itd** %itd, metadata !9611, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.declare(metadata %struct.ehci_itd** %n, metadata !9613, metadata !DIExpression()), !dbg !9614
  call void @llvm.dbg.declare(metadata %struct.ehci_sitd** %sitd, metadata !9615, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.declare(metadata %struct.ehci_sitd** %sn, metadata !9617, metadata !DIExpression()), !dbg !9618
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9619
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 12, !dbg !9621
  %1 = load i32, i32* %rh_state, align 4, !dbg !9621
  %cmp = icmp ult i32 %1, 2, !dbg !9622
  br i1 %cmp, label %if.then, label %if.end, !dbg !9623

if.then:                                          ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9624
  %last_itd_to_free = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 40, !dbg !9626
  store %struct.ehci_itd* null, %struct.ehci_itd** %last_itd_to_free, align 8, !dbg !9627
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9628
  %last_sitd_to_free = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 42, !dbg !9629
  store %struct.ehci_sitd* null, %struct.ehci_sitd** %last_sitd_to_free, align 8, !dbg !9630
  br label %if.end, !dbg !9631

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9632, metadata !DIExpression()), !dbg !9635
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9635
  %cached_itd_list = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 39, !dbg !9635
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %cached_itd_list, i32 0, i32 0, !dbg !9635
  %5 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9635
  %6 = bitcast %struct.list_head* %5 to i8*, !dbg !9635
  store i8* %6, i8** %__mptr, align 8, !dbg !9635
  br label %do.body, !dbg !9635

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9636

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !9635
  %add.ptr = getelementptr i8, i8* %7, i64 -128, !dbg !9635
  %8 = bitcast i8* %add.ptr to %struct.ehci_itd*, !dbg !9635
  store %struct.ehci_itd* %8, %struct.ehci_itd** %tmp, align 8, !dbg !9636
  %9 = load %struct.ehci_itd*, %struct.ehci_itd** %tmp, align 8, !dbg !9635
  store %struct.ehci_itd* %9, %struct.ehci_itd** %itd, align 8, !dbg !9638
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !9639, metadata !DIExpression()), !dbg !9641
  %10 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !9641
  %itd_list = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %10, i32 0, i32 8, !dbg !9641
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %itd_list, i32 0, i32 0, !dbg !9641
  %11 = load %struct.list_head*, %struct.list_head** %next2, align 32, !dbg !9641
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !9641
  store i8* %12, i8** %__mptr1, align 8, !dbg !9641
  br label %do.body3, !dbg !9641

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !9642

do.end4:                                          ; preds = %do.body3
  %13 = load i8*, i8** %__mptr1, align 8, !dbg !9641
  %add.ptr6 = getelementptr i8, i8* %13, i64 -128, !dbg !9641
  %14 = bitcast i8* %add.ptr6 to %struct.ehci_itd*, !dbg !9641
  store %struct.ehci_itd* %14, %struct.ehci_itd** %tmp5, align 8, !dbg !9642
  %15 = load %struct.ehci_itd*, %struct.ehci_itd** %tmp5, align 8, !dbg !9641
  store %struct.ehci_itd* %15, %struct.ehci_itd** %n, align 8, !dbg !9638
  br label %for.cond, !dbg !9638

for.cond:                                         ; preds = %do.end19, %do.end4
  %16 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !9644
  %itd_list7 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %16, i32 0, i32 8, !dbg !9644
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9644
  %cached_itd_list8 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %17, i32 0, i32 39, !dbg !9644
  %cmp9 = icmp eq %struct.list_head* %itd_list7, %cached_itd_list8, !dbg !9644
  %lnot = xor i1 %cmp9, true, !dbg !9644
  br i1 %lnot, label %for.body, label %for.end, !dbg !9638

for.body:                                         ; preds = %for.cond
  %18 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !9646
  %itd_list10 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %18, i32 0, i32 8, !dbg !9648
  call void @list_del(%struct.list_head* %itd_list10) #11, !dbg !9649
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9650
  %itd_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %19, i32 0, i32 52, !dbg !9651
  %20 = load %struct.dma_pool*, %struct.dma_pool** %itd_pool, align 8, !dbg !9651
  %21 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !9652
  %22 = bitcast %struct.ehci_itd* %21 to i8*, !dbg !9652
  %23 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !9653
  %itd_dma = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %23, i32 0, i32 4, !dbg !9654
  %24 = load i64, i64* %itd_dma, align 32, !dbg !9654
  call void @dma_pool_free(%struct.dma_pool* %20, i8* %22, i64 %24) #11, !dbg !9655
  %25 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !9656
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9658
  %last_itd_to_free11 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %26, i32 0, i32 40, !dbg !9659
  %27 = load %struct.ehci_itd*, %struct.ehci_itd** %last_itd_to_free11, align 8, !dbg !9659
  %cmp12 = icmp eq %struct.ehci_itd* %25, %27, !dbg !9660
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !9661

if.then13:                                        ; preds = %for.body
  br label %for.end, !dbg !9662

if.end14:                                         ; preds = %for.body
  br label %for.inc, !dbg !9663

for.inc:                                          ; preds = %if.end14
  %28 = load %struct.ehci_itd*, %struct.ehci_itd** %n, align 8, !dbg !9644
  store %struct.ehci_itd* %28, %struct.ehci_itd** %itd, align 8, !dbg !9644
  call void @llvm.dbg.declare(metadata i8** %__mptr15, metadata !9664, metadata !DIExpression()), !dbg !9666
  %29 = load %struct.ehci_itd*, %struct.ehci_itd** %n, align 8, !dbg !9666
  %itd_list16 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %29, i32 0, i32 8, !dbg !9666
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %itd_list16, i32 0, i32 0, !dbg !9666
  %30 = load %struct.list_head*, %struct.list_head** %next17, align 32, !dbg !9666
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !9666
  store i8* %31, i8** %__mptr15, align 8, !dbg !9666
  br label %do.body18, !dbg !9666

do.body18:                                        ; preds = %for.inc
  br label %do.end19, !dbg !9667

do.end19:                                         ; preds = %do.body18
  %32 = load i8*, i8** %__mptr15, align 8, !dbg !9666
  %add.ptr21 = getelementptr i8, i8* %32, i64 -128, !dbg !9666
  %33 = bitcast i8* %add.ptr21 to %struct.ehci_itd*, !dbg !9666
  store %struct.ehci_itd* %33, %struct.ehci_itd** %tmp20, align 8, !dbg !9667
  %34 = load %struct.ehci_itd*, %struct.ehci_itd** %tmp20, align 8, !dbg !9666
  store %struct.ehci_itd* %34, %struct.ehci_itd** %n, align 8, !dbg !9644
  br label %for.cond, !dbg !9644, !llvm.loop !9669

for.end:                                          ; preds = %if.then13, %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr22, metadata !9671, metadata !DIExpression()), !dbg !9674
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9674
  %cached_sitd_list = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %35, i32 0, i32 41, !dbg !9674
  %next23 = getelementptr inbounds %struct.list_head, %struct.list_head* %cached_sitd_list, i32 0, i32 0, !dbg !9674
  %36 = load %struct.list_head*, %struct.list_head** %next23, align 8, !dbg !9674
  %37 = bitcast %struct.list_head* %36 to i8*, !dbg !9674
  store i8* %37, i8** %__mptr22, align 8, !dbg !9674
  br label %do.body24, !dbg !9674

do.body24:                                        ; preds = %for.end
  br label %do.end25, !dbg !9675

do.end25:                                         ; preds = %do.body24
  %38 = load i8*, i8** %__mptr22, align 8, !dbg !9674
  %add.ptr27 = getelementptr i8, i8* %38, i64 -72, !dbg !9674
  %39 = bitcast i8* %add.ptr27 to %struct.ehci_sitd*, !dbg !9674
  store %struct.ehci_sitd* %39, %struct.ehci_sitd** %tmp26, align 8, !dbg !9675
  %40 = load %struct.ehci_sitd*, %struct.ehci_sitd** %tmp26, align 8, !dbg !9674
  store %struct.ehci_sitd* %40, %struct.ehci_sitd** %sitd, align 8, !dbg !9677
  call void @llvm.dbg.declare(metadata i8** %__mptr28, metadata !9678, metadata !DIExpression()), !dbg !9680
  %41 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !9680
  %sitd_list = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %41, i32 0, i32 11, !dbg !9680
  %next29 = getelementptr inbounds %struct.list_head, %struct.list_head* %sitd_list, i32 0, i32 0, !dbg !9680
  %42 = load %struct.list_head*, %struct.list_head** %next29, align 8, !dbg !9680
  %43 = bitcast %struct.list_head* %42 to i8*, !dbg !9680
  store i8* %43, i8** %__mptr28, align 8, !dbg !9680
  br label %do.body30, !dbg !9680

do.body30:                                        ; preds = %do.end25
  br label %do.end31, !dbg !9681

do.end31:                                         ; preds = %do.body30
  %44 = load i8*, i8** %__mptr28, align 8, !dbg !9680
  %add.ptr33 = getelementptr i8, i8* %44, i64 -72, !dbg !9680
  %45 = bitcast i8* %add.ptr33 to %struct.ehci_sitd*, !dbg !9680
  store %struct.ehci_sitd* %45, %struct.ehci_sitd** %tmp32, align 8, !dbg !9681
  %46 = load %struct.ehci_sitd*, %struct.ehci_sitd** %tmp32, align 8, !dbg !9680
  store %struct.ehci_sitd* %46, %struct.ehci_sitd** %sn, align 8, !dbg !9677
  br label %for.cond34, !dbg !9677

for.cond34:                                       ; preds = %do.end50, %do.end31
  %47 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !9683
  %sitd_list35 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %47, i32 0, i32 11, !dbg !9683
  %48 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9683
  %cached_sitd_list36 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %48, i32 0, i32 41, !dbg !9683
  %cmp37 = icmp eq %struct.list_head* %sitd_list35, %cached_sitd_list36, !dbg !9683
  %lnot38 = xor i1 %cmp37, true, !dbg !9683
  br i1 %lnot38, label %for.body39, label %for.end53, !dbg !9677

for.body39:                                       ; preds = %for.cond34
  %49 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !9685
  %sitd_list40 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %49, i32 0, i32 11, !dbg !9687
  call void @list_del(%struct.list_head* %sitd_list40) #11, !dbg !9688
  %50 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9689
  %sitd_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %50, i32 0, i32 53, !dbg !9690
  %51 = load %struct.dma_pool*, %struct.dma_pool** %sitd_pool, align 8, !dbg !9690
  %52 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !9691
  %53 = bitcast %struct.ehci_sitd* %52 to i8*, !dbg !9691
  %54 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !9692
  %sitd_dma = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %54, i32 0, i32 7, !dbg !9693
  %55 = load i64, i64* %sitd_dma, align 8, !dbg !9693
  call void @dma_pool_free(%struct.dma_pool* %51, i8* %53, i64 %55) #11, !dbg !9694
  %56 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !9695
  %57 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9697
  %last_sitd_to_free41 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %57, i32 0, i32 42, !dbg !9698
  %58 = load %struct.ehci_sitd*, %struct.ehci_sitd** %last_sitd_to_free41, align 8, !dbg !9698
  %cmp42 = icmp eq %struct.ehci_sitd* %56, %58, !dbg !9699
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !9700

if.then43:                                        ; preds = %for.body39
  br label %for.end53, !dbg !9701

if.end44:                                         ; preds = %for.body39
  br label %for.inc45, !dbg !9702

for.inc45:                                        ; preds = %if.end44
  %59 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sn, align 8, !dbg !9683
  store %struct.ehci_sitd* %59, %struct.ehci_sitd** %sitd, align 8, !dbg !9683
  call void @llvm.dbg.declare(metadata i8** %__mptr46, metadata !9703, metadata !DIExpression()), !dbg !9705
  %60 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sn, align 8, !dbg !9705
  %sitd_list47 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %60, i32 0, i32 11, !dbg !9705
  %next48 = getelementptr inbounds %struct.list_head, %struct.list_head* %sitd_list47, i32 0, i32 0, !dbg !9705
  %61 = load %struct.list_head*, %struct.list_head** %next48, align 8, !dbg !9705
  %62 = bitcast %struct.list_head* %61 to i8*, !dbg !9705
  store i8* %62, i8** %__mptr46, align 8, !dbg !9705
  br label %do.body49, !dbg !9705

do.body49:                                        ; preds = %for.inc45
  br label %do.end50, !dbg !9706

do.end50:                                         ; preds = %do.body49
  %63 = load i8*, i8** %__mptr46, align 8, !dbg !9705
  %add.ptr52 = getelementptr i8, i8* %63, i64 -72, !dbg !9705
  %64 = bitcast i8* %add.ptr52 to %struct.ehci_sitd*, !dbg !9705
  store %struct.ehci_sitd* %64, %struct.ehci_sitd** %tmp51, align 8, !dbg !9706
  %65 = load %struct.ehci_sitd*, %struct.ehci_sitd** %tmp51, align 8, !dbg !9705
  store %struct.ehci_sitd* %65, %struct.ehci_sitd** %sn, align 8, !dbg !9683
  br label %for.cond34, !dbg !9683, !llvm.loop !9708

for.end53:                                        ; preds = %if.then43, %for.cond34
  %66 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9710
  %cached_itd_list54 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %66, i32 0, i32 39, !dbg !9712
  %call = call i32 @list_empty(%struct.list_head* %cached_itd_list54) #11, !dbg !9713
  %tobool = icmp ne i32 %call, 0, !dbg !9713
  br i1 %tobool, label %lor.lhs.false, label %if.then58, !dbg !9714

lor.lhs.false:                                    ; preds = %for.end53
  %67 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9715
  %cached_sitd_list55 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %67, i32 0, i32 41, !dbg !9716
  %call56 = call i32 @list_empty(%struct.list_head* %cached_sitd_list55) #11, !dbg !9717
  %tobool57 = icmp ne i32 %call56, 0, !dbg !9717
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !9718

if.then58:                                        ; preds = %lor.lhs.false, %for.end53
  %68 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9719
  call void @start_free_itds(%struct.ehci_hcd* %68) #11, !dbg !9720
  br label %if.end59, !dbg !9720

if.end59:                                         ; preds = %if.then58, %lor.lhs.false
  ret void, !dbg !9721
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @end_unlink_async(%struct.ehci_hcd* %ehci) #0 !dbg !9722 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh = alloca %struct.ehci_qh*, align 8
  %early_exit = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ehci_qh*, align 8
  %qh_current = alloca i32, align 4
  %qh_token = alloca i32, align 4
  %__mptr58 = alloca i8*, align 8
  %tmp63 = alloca %struct.ehci_qh*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !9724, metadata !DIExpression()), !dbg !9725
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !9726, metadata !DIExpression()), !dbg !9727
  call void @llvm.dbg.declare(metadata i8* %early_exit, metadata !9728, metadata !DIExpression()), !dbg !9729
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9730
  %async_unlink = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 17, !dbg !9732
  %call = call i32 @list_empty(%struct.list_head* %async_unlink) #11, !dbg !9733
  %tobool = icmp ne i32 %call, 0, !dbg !9733
  br i1 %tobool, label %if.then, label %if.end, !dbg !9734

if.then:                                          ; preds = %entry
  br label %return, !dbg !9735

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9736, metadata !DIExpression()), !dbg !9738
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9738
  %async_unlink1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 17, !dbg !9738
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %async_unlink1, i32 0, i32 0, !dbg !9738
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9738
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !9738
  store i8* %3, i8** %__mptr, align 8, !dbg !9738
  br label %do.body, !dbg !9738

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9739

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !9738
  %add.ptr = getelementptr i8, i8* %4, i64 -64, !dbg !9738
  %5 = bitcast i8* %add.ptr to %struct.ehci_qh*, !dbg !9738
  store %struct.ehci_qh* %5, %struct.ehci_qh** %tmp, align 8, !dbg !9739
  %6 = load %struct.ehci_qh*, %struct.ehci_qh** %tmp, align 8, !dbg !9738
  store %struct.ehci_qh* %6, %struct.ehci_qh** %qh, align 8, !dbg !9741
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9742
  %async_unlinking = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 13, !dbg !9743
  %bf.load = load i8, i8* %async_unlinking, align 8, !dbg !9743
  %bf.lshr = lshr i8 %bf.load, 4, !dbg !9743
  %bf.clear = and i8 %bf.lshr, 1, !dbg !9743
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !9743
  %frombool = zext i1 %bf.cast to i8, !dbg !9744
  store i8 %frombool, i8* %early_exit, align 1, !dbg !9744
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9745
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 12, !dbg !9747
  %9 = load i32, i32* %rh_state, align 4, !dbg !9747
  %cmp = icmp ult i32 %9, 2, !dbg !9748
  br i1 %cmp, label %if.then2, label %if.else, !dbg !9749

if.then2:                                         ; preds = %do.end
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9750
  %async_unlink3 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 17, !dbg !9751
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9752
  %async_idle = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %11, i32 0, i32 18, !dbg !9753
  call void @list_splice_tail_init(%struct.list_head* %async_unlink3, %struct.list_head* %async_idle) #11, !dbg !9754
  br label %if.end42, !dbg !9754

if.else:                                          ; preds = %do.end
  %12 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9755
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %12, i32 0, i32 9, !dbg !9757
  %13 = load i8, i8* %qh_state, align 4, !dbg !9757
  %conv = zext i8 %13 to i32, !dbg !9755
  %cmp4 = icmp eq i32 %conv, 2, !dbg !9758
  br i1 %cmp4, label %if.then6, label %if.else8, !dbg !9759

if.then6:                                         ; preds = %if.else
  %14 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9760
  %unlink_node = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %14, i32 0, i32 6, !dbg !9762
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9763
  %async_idle7 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %15, i32 0, i32 18, !dbg !9764
  call void @list_move_tail(%struct.list_head* %unlink_node, %struct.list_head* %async_idle7) #11, !dbg !9765
  br label %if.end41, !dbg !9766

if.else8:                                         ; preds = %if.else
  %16 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9767
  %unlink_reason = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %16, i32 0, i32 11, !dbg !9769
  %17 = load i8, i8* %unlink_reason, align 2, !dbg !9769
  %conv9 = zext i8 %17 to i32, !dbg !9767
  %and = and i32 %conv9, 7, !dbg !9770
  %tobool10 = icmp ne i32 %and, 0, !dbg !9770
  br i1 %tobool10, label %if.then11, label %if.else12, !dbg !9771

if.then11:                                        ; preds = %if.else8
  br label %DelayDone, !dbg !9772

if.else12:                                        ; preds = %if.else8
  %18 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9773
  %unlink_reason13 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %18, i32 0, i32 11, !dbg !9775
  %19 = load i8, i8* %unlink_reason13, align 2, !dbg !9775
  %conv14 = zext i8 %19 to i32, !dbg !9773
  %and15 = and i32 %conv14, 16, !dbg !9776
  %tobool16 = icmp ne i32 %and15, 0, !dbg !9776
  br i1 %tobool16, label %land.lhs.true, label %if.else20, !dbg !9777

land.lhs.true:                                    ; preds = %if.else12
  %20 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9778
  %qtd_list = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %20, i32 0, i32 3, !dbg !9779
  %call17 = call i32 @list_empty(%struct.list_head* %qtd_list) #11, !dbg !9780
  %tobool18 = icmp ne i32 %call17, 0, !dbg !9780
  br i1 %tobool18, label %if.then19, label %if.else20, !dbg !9781

if.then19:                                        ; preds = %land.lhs.true
  br label %DelayDone, !dbg !9782

if.else20:                                        ; preds = %land.lhs.true, %if.else12
  %21 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9783
  %hw = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %21, i32 0, i32 0, !dbg !9785
  %22 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !9785
  %hw_token = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %22, i32 0, i32 6, !dbg !9786
  %23 = load i32, i32* %hw_token, align 8, !dbg !9786
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9787
  %call21 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %24, i32 64) #11, !dbg !9788
  %and22 = and i32 %23, %call21, !dbg !9789
  %tobool23 = icmp ne i32 %and22, 0, !dbg !9789
  br i1 %tobool23, label %if.then24, label %if.else25, !dbg !9790

if.then24:                                        ; preds = %if.else20
  br label %DelayDone, !dbg !9791

if.else25:                                        ; preds = %if.else20
  call void @llvm.dbg.declare(metadata i32* %qh_current, metadata !9792, metadata !DIExpression()), !dbg !9794
  call void @llvm.dbg.declare(metadata i32* %qh_token, metadata !9795, metadata !DIExpression()), !dbg !9796
  %25 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9797
  %hw26 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %25, i32 0, i32 0, !dbg !9798
  %26 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw26, align 8, !dbg !9798
  %hw_current = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %26, i32 0, i32 3, !dbg !9799
  %27 = load i32, i32* %hw_current, align 4, !dbg !9799
  store i32 %27, i32* %qh_current, align 4, !dbg !9800
  %28 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9801
  %hw27 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %28, i32 0, i32 0, !dbg !9802
  %29 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw27, align 8, !dbg !9802
  %hw_token28 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %29, i32 0, i32 6, !dbg !9803
  %30 = load i32, i32* %hw_token28, align 8, !dbg !9803
  store i32 %30, i32* %qh_token, align 4, !dbg !9804
  %31 = load i32, i32* %qh_current, align 4, !dbg !9805
  %32 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9807
  %old_current = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %32, i32 0, i32 21, !dbg !9808
  %33 = load i32, i32* %old_current, align 8, !dbg !9808
  %cmp29 = icmp ne i32 %31, %33, !dbg !9809
  br i1 %cmp29, label %if.then33, label %lor.lhs.false, !dbg !9810

lor.lhs.false:                                    ; preds = %if.else25
  %34 = load i32, i32* %qh_token, align 4, !dbg !9811
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9812
  %old_token = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %35, i32 0, i32 22, !dbg !9813
  %36 = load i32, i32* %old_token, align 4, !dbg !9813
  %cmp31 = icmp ne i32 %34, %36, !dbg !9814
  br i1 %cmp31, label %if.then33, label %if.end36, !dbg !9815

if.then33:                                        ; preds = %lor.lhs.false, %if.else25
  %37 = load i32, i32* %qh_current, align 4, !dbg !9816
  %38 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9818
  %old_current34 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %38, i32 0, i32 21, !dbg !9819
  store i32 %37, i32* %old_current34, align 8, !dbg !9820
  %39 = load i32, i32* %qh_token, align 4, !dbg !9821
  %40 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9822
  %old_token35 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %40, i32 0, i32 22, !dbg !9823
  store i32 %39, i32* %old_token35, align 4, !dbg !9824
  %41 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9825
  call void @ehci_enable_event(%struct.ehci_hcd* %41, i32 5, i1 zeroext true) #11, !dbg !9826
  br label %return, !dbg !9827

if.end36:                                         ; preds = %lor.lhs.false
  br label %DelayDone, !dbg !9813

DelayDone:                                        ; preds = %if.end36, %if.then24, %if.then19, %if.then11
  call void @llvm.dbg.label(metadata !9828), !dbg !9829
  %42 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9830
  %qh_state37 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %42, i32 0, i32 9, !dbg !9831
  store i8 2, i8* %qh_state37, align 4, !dbg !9832
  store i8 1, i8* %early_exit, align 1, !dbg !9833
  br label %if.end38

if.end38:                                         ; preds = %DelayDone
  br label %if.end39

if.end39:                                         ; preds = %if.end38
  br label %if.end40

if.end40:                                         ; preds = %if.end39
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then6
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then2
  %43 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9834
  %old_current43 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %43, i32 0, i32 21, !dbg !9835
  store i32 -1, i32* %old_current43, align 8, !dbg !9836
  %44 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9837
  %async_unlink44 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %44, i32 0, i32 17, !dbg !9839
  %call45 = call i32 @list_empty(%struct.list_head* %async_unlink44) #11, !dbg !9840
  %tobool46 = icmp ne i32 %call45, 0, !dbg !9840
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !9841

if.then47:                                        ; preds = %if.end42
  %45 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9842
  call void @start_iaa_cycle(%struct.ehci_hcd* %45) #11, !dbg !9843
  br label %if.end48, !dbg !9843

if.end48:                                         ; preds = %if.then47, %if.end42
  %46 = load i8, i8* %early_exit, align 1, !dbg !9844
  %tobool49 = trunc i8 %46 to i1, !dbg !9844
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !9846

if.then50:                                        ; preds = %if.end48
  br label %return, !dbg !9847

if.end51:                                         ; preds = %if.end48
  %47 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9848
  %async_unlinking52 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %47, i32 0, i32 13, !dbg !9849
  %bf.load53 = load i8, i8* %async_unlinking52, align 8, !dbg !9850
  %bf.clear54 = and i8 %bf.load53, -17, !dbg !9850
  %bf.set = or i8 %bf.clear54, 16, !dbg !9850
  store i8 %bf.set, i8* %async_unlinking52, align 8, !dbg !9850
  br label %while.cond, !dbg !9851

while.cond:                                       ; preds = %if.end82, %if.end51
  %48 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9852
  %async_idle55 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %48, i32 0, i32 18, !dbg !9853
  %call56 = call i32 @list_empty(%struct.list_head* %async_idle55) #11, !dbg !9854
  %tobool57 = icmp ne i32 %call56, 0, !dbg !9855
  %lnot = xor i1 %tobool57, true, !dbg !9855
  br i1 %lnot, label %while.body, label %while.end, !dbg !9851

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr58, metadata !9856, metadata !DIExpression()), !dbg !9859
  %49 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9859
  %async_idle59 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %49, i32 0, i32 18, !dbg !9859
  %next60 = getelementptr inbounds %struct.list_head, %struct.list_head* %async_idle59, i32 0, i32 0, !dbg !9859
  %50 = load %struct.list_head*, %struct.list_head** %next60, align 8, !dbg !9859
  %51 = bitcast %struct.list_head* %50 to i8*, !dbg !9859
  store i8* %51, i8** %__mptr58, align 8, !dbg !9859
  br label %do.body61, !dbg !9859

do.body61:                                        ; preds = %while.body
  br label %do.end62, !dbg !9860

do.end62:                                         ; preds = %do.body61
  %52 = load i8*, i8** %__mptr58, align 8, !dbg !9859
  %add.ptr64 = getelementptr i8, i8* %52, i64 -64, !dbg !9859
  %53 = bitcast i8* %add.ptr64 to %struct.ehci_qh*, !dbg !9859
  store %struct.ehci_qh* %53, %struct.ehci_qh** %tmp63, align 8, !dbg !9860
  %54 = load %struct.ehci_qh*, %struct.ehci_qh** %tmp63, align 8, !dbg !9859
  store %struct.ehci_qh* %54, %struct.ehci_qh** %qh, align 8, !dbg !9862
  %55 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9863
  %unlink_node65 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %55, i32 0, i32 6, !dbg !9864
  call void @list_del(%struct.list_head* %unlink_node65) #11, !dbg !9865
  %56 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9866
  %qh_state66 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %56, i32 0, i32 9, !dbg !9867
  store i8 3, i8* %qh_state66, align 4, !dbg !9868
  %57 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9869
  %qh_next = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %57, i32 0, i32 2, !dbg !9870
  %qh67 = bitcast %union.ehci_shadow* %qh_next to %struct.ehci_qh**, !dbg !9871
  store %struct.ehci_qh* null, %struct.ehci_qh** %qh67, align 8, !dbg !9872
  %58 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9873
  %qtd_list68 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %58, i32 0, i32 3, !dbg !9875
  %call69 = call i32 @list_empty(%struct.list_head* %qtd_list68) #11, !dbg !9876
  %tobool70 = icmp ne i32 %call69, 0, !dbg !9876
  br i1 %tobool70, label %if.end73, label %if.then71, !dbg !9877

if.then71:                                        ; preds = %do.end62
  %59 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9878
  %60 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9879
  %call72 = call i32 @qh_completions(%struct.ehci_hcd* %59, %struct.ehci_qh* %60) #11, !dbg !9880
  br label %if.end73, !dbg !9880

if.end73:                                         ; preds = %if.then71, %do.end62
  %61 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9881
  %qtd_list74 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %61, i32 0, i32 3, !dbg !9883
  %call75 = call i32 @list_empty(%struct.list_head* %qtd_list74) #11, !dbg !9884
  %tobool76 = icmp ne i32 %call75, 0, !dbg !9884
  br i1 %tobool76, label %if.end82, label %land.lhs.true77, !dbg !9885

land.lhs.true77:                                  ; preds = %if.end73
  %62 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9886
  %rh_state78 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %62, i32 0, i32 12, !dbg !9887
  %63 = load i32, i32* %rh_state78, align 4, !dbg !9887
  %cmp79 = icmp eq i32 %63, 2, !dbg !9888
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !9889

if.then81:                                        ; preds = %land.lhs.true77
  %64 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9890
  %65 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9891
  call void @qh_link_async(%struct.ehci_hcd* %64, %struct.ehci_qh* %65) #11, !dbg !9892
  br label %if.end82, !dbg !9892

if.end82:                                         ; preds = %if.then81, %land.lhs.true77, %if.end73
  %66 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9893
  call void @disable_async(%struct.ehci_hcd* %66) #11, !dbg !9894
  br label %while.cond, !dbg !9851, !llvm.loop !9895

while.end:                                        ; preds = %while.cond
  %67 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9897
  %async_unlinking83 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %67, i32 0, i32 13, !dbg !9898
  %bf.load84 = load i8, i8* %async_unlinking83, align 8, !dbg !9899
  %bf.clear85 = and i8 %bf.load84, -17, !dbg !9899
  store i8 %bf.clear85, i8* %async_unlinking83, align 8, !dbg !9899
  br label %return, !dbg !9900

return:                                           ; preds = %while.end, %if.then50, %if.then33, %if.then
  ret void, !dbg !9900
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_handle_start_intr_unlinks(%struct.ehci_hcd* %ehci) #0 !dbg !9901 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %stopped = alloca i8, align 1
  %qh = alloca %struct.ehci_qh*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ehci_qh*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !9902, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.declare(metadata i8* %stopped, metadata !9904, metadata !DIExpression()), !dbg !9905
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9906
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 12, !dbg !9907
  %1 = load i32, i32* %rh_state, align 4, !dbg !9907
  %cmp = icmp ult i32 %1, 2, !dbg !9908
  %frombool = zext i1 %cmp to i8, !dbg !9905
  store i8 %frombool, i8* %stopped, align 1, !dbg !9905
  br label %while.cond, !dbg !9909

while.cond:                                       ; preds = %if.end, %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9910
  %intr_unlink_wait = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 29, !dbg !9911
  %call = call i32 @list_empty(%struct.list_head* %intr_unlink_wait) #11, !dbg !9912
  %tobool = icmp ne i32 %call, 0, !dbg !9913
  %lnot = xor i1 %tobool, true, !dbg !9913
  br i1 %lnot, label %while.body, label %while.end, !dbg !9909

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !9914, metadata !DIExpression()), !dbg !9916
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9917, metadata !DIExpression()), !dbg !9919
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9919
  %intr_unlink_wait1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 29, !dbg !9919
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %intr_unlink_wait1, i32 0, i32 0, !dbg !9919
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9919
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !9919
  store i8* %5, i8** %__mptr, align 8, !dbg !9919
  br label %do.body, !dbg !9919

do.body:                                          ; preds = %while.body
  br label %do.end, !dbg !9920

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !9919
  %add.ptr = getelementptr i8, i8* %6, i64 -64, !dbg !9919
  %7 = bitcast i8* %add.ptr to %struct.ehci_qh*, !dbg !9919
  store %struct.ehci_qh* %7, %struct.ehci_qh** %tmp, align 8, !dbg !9920
  %8 = load %struct.ehci_qh*, %struct.ehci_qh** %tmp, align 8, !dbg !9919
  store %struct.ehci_qh* %8, %struct.ehci_qh** %qh, align 8, !dbg !9922
  %9 = load i8, i8* %stopped, align 1, !dbg !9923
  %tobool2 = trunc i8 %9 to i1, !dbg !9923
  br i1 %tobool2, label %if.end, label %land.lhs.true, !dbg !9925

land.lhs.true:                                    ; preds = %do.end
  %10 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9926
  %unlink_cycle = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %10, i32 0, i32 8, !dbg !9927
  %11 = load i32, i32* %unlink_cycle, align 8, !dbg !9927
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9928
  %intr_unlink_wait_cycle = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 31, !dbg !9929
  %13 = load i32, i32* %intr_unlink_wait_cycle, align 8, !dbg !9929
  %cmp3 = icmp eq i32 %11, %13, !dbg !9930
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9931

if.then:                                          ; preds = %land.lhs.true
  br label %while.end, !dbg !9932

if.end:                                           ; preds = %land.lhs.true, %do.end
  %14 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9933
  %unlink_node = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %14, i32 0, i32 6, !dbg !9934
  call void @list_del_init(%struct.list_head* %unlink_node) #11, !dbg !9935
  %15 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9936
  %unlink_reason = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %15, i32 0, i32 11, !dbg !9937
  %16 = load i8, i8* %unlink_reason, align 2, !dbg !9938
  %conv = zext i8 %16 to i32, !dbg !9938
  %or = or i32 %conv, 16, !dbg !9938
  %conv4 = trunc i32 %or to i8, !dbg !9938
  store i8 %conv4, i8* %unlink_reason, align 2, !dbg !9938
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9939
  %18 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9940
  call void @start_unlink_intr(%struct.ehci_hcd* %17, %struct.ehci_qh* %18) #11, !dbg !9941
  br label %while.cond, !dbg !9909, !llvm.loop !9942

while.end:                                        ; preds = %if.then, %while.cond
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9944
  %intr_unlink_wait5 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %19, i32 0, i32 29, !dbg !9946
  %call6 = call i32 @list_empty(%struct.list_head* %intr_unlink_wait5) #11, !dbg !9947
  %tobool7 = icmp ne i32 %call6, 0, !dbg !9947
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !9948

if.then8:                                         ; preds = %while.end
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9949
  call void @ehci_enable_event(%struct.ehci_hcd* %20, i32 6, i1 zeroext true) #11, !dbg !9951
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9952
  %intr_unlink_wait_cycle9 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %21, i32 0, i32 31, !dbg !9953
  %22 = load i32, i32* %intr_unlink_wait_cycle9, align 8, !dbg !9954
  %inc = add i32 %22, 1, !dbg !9954
  store i32 %inc, i32* %intr_unlink_wait_cycle9, align 8, !dbg !9954
  br label %if.end10, !dbg !9955

if.end10:                                         ; preds = %if.then8, %while.end
  ret void, !dbg !9956
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @unlink_empty_async(%struct.ehci_hcd* %ehci) #0 !dbg !9957 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh = alloca %struct.ehci_qh*, align 8
  %qh_to_unlink = alloca %struct.ehci_qh*, align 8
  %count = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !9958, metadata !DIExpression()), !dbg !9959
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !9960, metadata !DIExpression()), !dbg !9961
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh_to_unlink, metadata !9962, metadata !DIExpression()), !dbg !9963
  store %struct.ehci_qh* null, %struct.ehci_qh** %qh_to_unlink, align 8, !dbg !9963
  call void @llvm.dbg.declare(metadata i32* %count, metadata !9964, metadata !DIExpression()), !dbg !9965
  store i32 0, i32* %count, align 4, !dbg !9965
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9966
  %async = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 15, !dbg !9968
  %1 = load %struct.ehci_qh*, %struct.ehci_qh** %async, align 8, !dbg !9968
  %qh_next = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %1, i32 0, i32 2, !dbg !9969
  %qh1 = bitcast %union.ehci_shadow* %qh_next to %struct.ehci_qh**, !dbg !9970
  %2 = load %struct.ehci_qh*, %struct.ehci_qh** %qh1, align 8, !dbg !9970
  store %struct.ehci_qh* %2, %struct.ehci_qh** %qh, align 8, !dbg !9971
  br label %for.cond, !dbg !9972

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9973
  %tobool = icmp ne %struct.ehci_qh* %3, null, !dbg !9975
  br i1 %tobool, label %for.body, label %for.end, !dbg !9975

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9976
  %qtd_list = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %4, i32 0, i32 3, !dbg !9979
  %call = call i32 @list_empty(%struct.list_head* %qtd_list) #11, !dbg !9980
  %tobool2 = icmp ne i32 %call, 0, !dbg !9980
  br i1 %tobool2, label %land.lhs.true, label %if.end7, !dbg !9981

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9982
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %5, i32 0, i32 9, !dbg !9983
  %6 = load i8, i8* %qh_state, align 4, !dbg !9983
  %conv = zext i8 %6 to i32, !dbg !9982
  %cmp = icmp eq i32 %conv, 1, !dbg !9984
  br i1 %cmp, label %if.then, label %if.end7, !dbg !9985

if.then:                                          ; preds = %land.lhs.true
  %7 = load i32, i32* %count, align 4, !dbg !9986
  %inc = add i32 %7, 1, !dbg !9986
  store i32 %inc, i32* %count, align 4, !dbg !9986
  %8 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9988
  %unlink_cycle = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %8, i32 0, i32 8, !dbg !9990
  %9 = load i32, i32* %unlink_cycle, align 8, !dbg !9990
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !9991
  %async_unlink_cycle = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 19, !dbg !9992
  %11 = load i32, i32* %async_unlink_cycle, align 8, !dbg !9992
  %cmp4 = icmp ne i32 %9, %11, !dbg !9993
  br i1 %cmp4, label %if.then6, label %if.end, !dbg !9994

if.then6:                                         ; preds = %if.then
  %12 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !9995
  store %struct.ehci_qh* %12, %struct.ehci_qh** %qh_to_unlink, align 8, !dbg !9996
  br label %if.end, !dbg !9997

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end7, !dbg !9998

if.end7:                                          ; preds = %if.end, %land.lhs.true, %for.body
  br label %for.inc, !dbg !9999

for.inc:                                          ; preds = %if.end7
  %13 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !10000
  %qh_next8 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %13, i32 0, i32 2, !dbg !10001
  %qh9 = bitcast %union.ehci_shadow* %qh_next8 to %struct.ehci_qh**, !dbg !10002
  %14 = load %struct.ehci_qh*, %struct.ehci_qh** %qh9, align 8, !dbg !10002
  store %struct.ehci_qh* %14, %struct.ehci_qh** %qh, align 8, !dbg !10003
  br label %for.cond, !dbg !10004, !llvm.loop !10005

for.end:                                          ; preds = %for.cond
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10007
  %async_unlink = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %15, i32 0, i32 17, !dbg !10009
  %call10 = call i32 @list_empty(%struct.list_head* %async_unlink) #11, !dbg !10010
  %tobool11 = icmp ne i32 %call10, 0, !dbg !10010
  br i1 %tobool11, label %land.lhs.true12, label %if.end17, !dbg !10011

land.lhs.true12:                                  ; preds = %for.end
  %16 = load %struct.ehci_qh*, %struct.ehci_qh** %qh_to_unlink, align 8, !dbg !10012
  %tobool13 = icmp ne %struct.ehci_qh* %16, null, !dbg !10012
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !10013

if.then14:                                        ; preds = %land.lhs.true12
  %17 = load %struct.ehci_qh*, %struct.ehci_qh** %qh_to_unlink, align 8, !dbg !10014
  %unlink_reason = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %17, i32 0, i32 11, !dbg !10016
  %18 = load i8, i8* %unlink_reason, align 2, !dbg !10017
  %conv15 = zext i8 %18 to i32, !dbg !10017
  %or = or i32 %conv15, 16, !dbg !10017
  %conv16 = trunc i32 %or to i8, !dbg !10017
  store i8 %conv16, i8* %unlink_reason, align 2, !dbg !10017
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10018
  %20 = load %struct.ehci_qh*, %struct.ehci_qh** %qh_to_unlink, align 8, !dbg !10019
  call void @start_unlink_async(%struct.ehci_hcd* %19, %struct.ehci_qh* %20) #11, !dbg !10020
  %21 = load i32, i32* %count, align 4, !dbg !10021
  %dec = add i32 %21, -1, !dbg !10021
  store i32 %dec, i32* %count, align 4, !dbg !10021
  br label %if.end17, !dbg !10022

if.end17:                                         ; preds = %if.then14, %land.lhs.true12, %for.end
  %22 = load i32, i32* %count, align 4, !dbg !10023
  %cmp18 = icmp sgt i32 %22, 0, !dbg !10025
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !10026

if.then20:                                        ; preds = %if.end17
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10027
  call void @ehci_enable_event(%struct.ehci_hcd* %23, i32 7, i1 zeroext true) #11, !dbg !10029
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10030
  %async_unlink_cycle21 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %24, i32 0, i32 19, !dbg !10031
  %25 = load i32, i32* %async_unlink_cycle21, align 8, !dbg !10032
  %inc22 = add i32 %25, 1, !dbg !10032
  store i32 %inc22, i32* %async_unlink_cycle21, align 8, !dbg !10032
  br label %if.end23, !dbg !10033

if.end23:                                         ; preds = %if.then20, %if.end17
  ret void, !dbg !10034
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_iaa_watchdog(%struct.ehci_hcd* %ehci) #0 !dbg !10035 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %cmd = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !10036, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.declare(metadata i32* %cmd, metadata !10038, metadata !DIExpression()), !dbg !10039
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10040, metadata !DIExpression()), !dbg !10041
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10042
  %iaa_in_progress = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 13, !dbg !10044
  %bf.load = load i8, i8* %iaa_in_progress, align 8, !dbg !10044
  %bf.lshr = lshr i8 %bf.load, 3, !dbg !10044
  %bf.clear = and i8 %bf.lshr, 1, !dbg !10044
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !10044
  br i1 %bf.cast, label %lor.lhs.false, label %if.then, !dbg !10045

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10046
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 12, !dbg !10047
  %2 = load i32, i32* %rh_state, align 4, !dbg !10047
  %cmp = icmp ne i32 %2, 2, !dbg !10048
  br i1 %cmp, label %if.then, label %if.end, !dbg !10049

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !10050

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10051
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10052
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 8, !dbg !10053
  %5 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !10053
  %command = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %5, i32 0, i32 0, !dbg !10054
  %call = call i32 @ehci_readl(%struct.ehci_hcd* %3, i32* %command) #11, !dbg !10055
  store i32 %call, i32* %cmd, align 4, !dbg !10056
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10057
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10058
  %regs1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 8, !dbg !10059
  %8 = load %struct.ehci_regs*, %struct.ehci_regs** %regs1, align 8, !dbg !10059
  %status2 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %8, i32 0, i32 1, !dbg !10060
  %call3 = call i32 @ehci_readl(%struct.ehci_hcd* %6, i32* %status2) #11, !dbg !10061
  store i32 %call3, i32* %status, align 4, !dbg !10062
  %9 = load i32, i32* %status, align 4, !dbg !10063
  %and = and i32 %9, 32, !dbg !10065
  %tobool = icmp ne i32 %and, 0, !dbg !10065
  br i1 %tobool, label %if.then7, label %lor.lhs.false4, !dbg !10066

lor.lhs.false4:                                   ; preds = %if.end
  %10 = load i32, i32* %cmd, align 4, !dbg !10067
  %and5 = and i32 %10, 64, !dbg !10068
  %tobool6 = icmp ne i32 %and5, 0, !dbg !10068
  br i1 %tobool6, label %if.end10, label %if.then7, !dbg !10069

if.then7:                                         ; preds = %lor.lhs.false4, %if.end
  br label %do.body, !dbg !10070

do.body:                                          ; preds = %if.then7
  br label %do.end, !dbg !10072

do.end:                                           ; preds = %do.body
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10074
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10075
  %regs8 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 8, !dbg !10076
  %13 = load %struct.ehci_regs*, %struct.ehci_regs** %regs8, align 8, !dbg !10076
  %status9 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %13, i32 0, i32 1, !dbg !10077
  call void @ehci_writel(%struct.ehci_hcd* %11, i32 32, i32* %status9) #11, !dbg !10078
  br label %if.end10, !dbg !10079

if.end10:                                         ; preds = %do.end, %lor.lhs.false4
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10080
  call void @end_iaa_cycle(%struct.ehci_hcd* %14) #11, !dbg !10081
  br label %return, !dbg !10082

return:                                           ; preds = %if.end10, %if.then
  ret void, !dbg !10082
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_disable_PSE(%struct.ehci_hcd* %ehci) #0 !dbg !10083 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !10084, metadata !DIExpression()), !dbg !10085
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10086
  call void @ehci_clear_command_bit(%struct.ehci_hcd* %0, i32 16) #11, !dbg !10087
  ret void, !dbg !10088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_disable_ASE(%struct.ehci_hcd* %ehci) #0 !dbg !10089 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !10090, metadata !DIExpression()), !dbg !10091
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10092
  call void @ehci_clear_command_bit(%struct.ehci_hcd* %0, i32 32) #11, !dbg !10093
  ret void, !dbg !10094
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_work(%struct.ehci_hcd* %ehci) #0 !dbg !10095 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !10096, metadata !DIExpression()), !dbg !10097
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10098
  %scanning = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 13, !dbg !10100
  %bf.load = load i8, i8* %scanning, align 8, !dbg !10100
  %bf.clear = and i8 %bf.load, 1, !dbg !10100
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !10100
  br i1 %bf.cast, label %if.then, label %if.end, !dbg !10101

if.then:                                          ; preds = %entry
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10102
  %need_rescan = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 13, !dbg !10104
  %bf.load1 = load i8, i8* %need_rescan, align 8, !dbg !10105
  %bf.clear2 = and i8 %bf.load1, -3, !dbg !10105
  %bf.set = or i8 %bf.clear2, 2, !dbg !10105
  store i8 %bf.set, i8* %need_rescan, align 8, !dbg !10105
  br label %return, !dbg !10106

if.end:                                           ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10107
  %scanning3 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 13, !dbg !10108
  %bf.load4 = load i8, i8* %scanning3, align 8, !dbg !10109
  %bf.clear5 = and i8 %bf.load4, -2, !dbg !10109
  %bf.set6 = or i8 %bf.clear5, 1, !dbg !10109
  store i8 %bf.set6, i8* %scanning3, align 8, !dbg !10109
  br label %rescan, !dbg !10107

rescan:                                           ; preds = %if.then21, %if.end
  call void @llvm.dbg.label(metadata !10110), !dbg !10111
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10112
  %need_rescan7 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 13, !dbg !10113
  %bf.load8 = load i8, i8* %need_rescan7, align 8, !dbg !10114
  %bf.clear9 = and i8 %bf.load8, -3, !dbg !10114
  store i8 %bf.clear9, i8* %need_rescan7, align 8, !dbg !10114
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10115
  %async_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 20, !dbg !10117
  %5 = load i32, i32* %async_count, align 4, !dbg !10117
  %tobool = icmp ne i32 %5, 0, !dbg !10115
  br i1 %tobool, label %if.then10, label %if.end11, !dbg !10118

if.then10:                                        ; preds = %rescan
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10119
  call void @scan_async(%struct.ehci_hcd* %6) #11, !dbg !10120
  br label %if.end11, !dbg !10120

if.end11:                                         ; preds = %if.then10, %rescan
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10121
  %intr_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 35, !dbg !10123
  %8 = load i32, i32* %intr_count, align 8, !dbg !10123
  %cmp = icmp ugt i32 %8, 0, !dbg !10124
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !10125

if.then12:                                        ; preds = %if.end11
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10126
  call void @scan_intr(%struct.ehci_hcd* %9) #11, !dbg !10127
  br label %if.end13, !dbg !10127

if.end13:                                         ; preds = %if.then12, %if.end11
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10128
  %isoc_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 36, !dbg !10130
  %11 = load i32, i32* %isoc_count, align 4, !dbg !10130
  %cmp14 = icmp ugt i32 %11, 0, !dbg !10131
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !10132

if.then15:                                        ; preds = %if.end13
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10133
  call void @scan_isoc(%struct.ehci_hcd* %12) #11, !dbg !10134
  br label %if.end16, !dbg !10134

if.end16:                                         ; preds = %if.then15, %if.end13
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10135
  %need_rescan17 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %13, i32 0, i32 13, !dbg !10137
  %bf.load18 = load i8, i8* %need_rescan17, align 8, !dbg !10137
  %bf.lshr = lshr i8 %bf.load18, 1, !dbg !10137
  %bf.clear19 = and i8 %bf.lshr, 1, !dbg !10137
  %bf.cast20 = trunc i8 %bf.clear19 to i1, !dbg !10137
  br i1 %bf.cast20, label %if.then21, label %if.end22, !dbg !10138

if.then21:                                        ; preds = %if.end16
  br label %rescan, !dbg !10139

if.end22:                                         ; preds = %if.end16
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10140
  %scanning23 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 13, !dbg !10141
  %bf.load24 = load i8, i8* %scanning23, align 8, !dbg !10142
  %bf.clear25 = and i8 %bf.load24, -2, !dbg !10142
  store i8 %bf.clear25, i8* %scanning23, align 8, !dbg !10142
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10143
  call void @turn_on_io_watchdog(%struct.ehci_hcd* %15) #11, !dbg !10144
  br label %return, !dbg !10145

return:                                           ; preds = %if.end22, %if.then
  ret void, !dbg !10145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_set_command_bit(%struct.ehci_hcd* %ehci, i32 %bit) #0 !dbg !10146 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %bit.addr = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !10149, metadata !DIExpression()), !dbg !10150
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !10151, metadata !DIExpression()), !dbg !10152
  %0 = load i32, i32* %bit.addr, align 4, !dbg !10153
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10154
  %command = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 57, !dbg !10155
  %2 = load i32, i32* %command, align 8, !dbg !10156
  %or = or i32 %2, %0, !dbg !10156
  store i32 %or, i32* %command, align 8, !dbg !10156
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10157
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10158
  %command1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 57, !dbg !10159
  %5 = load i32, i32* %command1, align 8, !dbg !10159
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10160
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 8, !dbg !10161
  %7 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !10161
  %command2 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %7, i32 0, i32 0, !dbg !10162
  call void @ehci_writel(%struct.ehci_hcd* %3, i32 %5, i32* %command2) #11, !dbg !10163
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10164
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10165
  %regs3 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %9, i32 0, i32 8, !dbg !10166
  %10 = load %struct.ehci_regs*, %struct.ehci_regs** %regs3, align 8, !dbg !10166
  %command4 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %10, i32 0, i32 0, !dbg !10167
  %call = call i32 @ehci_readl(%struct.ehci_hcd* %8, i32* %command4) #11, !dbg !10168
  ret void, !dbg !10169
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !10170 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !10175, metadata !DIExpression()), !dbg !10176
  br label %do.body, !dbg !10177

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10179

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10177
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !10177
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10177
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !10179
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !10177
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10181
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !10182
  %conv = zext i1 %cmp to i32, !dbg !10182
  ret i32 %conv, !dbg !10183
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #0 !dbg !10184 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10185, metadata !DIExpression()), !dbg !10186
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10187
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !10188
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10189
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #11, !dbg !10190
  ret void, !dbg !10191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @end_unlink_intr(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh) #0 !dbg !10192 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  %hw = alloca %struct.ehci_qh_hw*, align 8
  %rc = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !10195, metadata !DIExpression()), !dbg !10196
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !10197, metadata !DIExpression()), !dbg !10198
  call void @llvm.dbg.declare(metadata %struct.ehci_qh_hw** %hw, metadata !10199, metadata !DIExpression()), !dbg !10200
  %0 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10201
  %hw1 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %0, i32 0, i32 0, !dbg !10202
  %1 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw1, align 8, !dbg !10202
  store %struct.ehci_qh_hw* %1, %struct.ehci_qh_hw** %hw, align 8, !dbg !10200
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !10203, metadata !DIExpression()), !dbg !10204
  %2 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10205
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %2, i32 0, i32 9, !dbg !10206
  store i8 3, i8* %qh_state, align 4, !dbg !10207
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10208
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %3, i32 1) #11, !dbg !10208
  %4 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !10209
  %hw_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %4, i32 0, i32 0, !dbg !10210
  store i32 %call, i32* %hw_next, align 32, !dbg !10211
  %5 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10212
  %qtd_list = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %5, i32 0, i32 3, !dbg !10214
  %call2 = call i32 @list_empty(%struct.list_head* %qtd_list) #11, !dbg !10215
  %tobool = icmp ne i32 %call2, 0, !dbg !10215
  br i1 %tobool, label %if.end, label %if.then, !dbg !10216

if.then:                                          ; preds = %entry
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10217
  %7 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10218
  %call3 = call i32 @qh_completions(%struct.ehci_hcd* %6, %struct.ehci_qh* %7) #11, !dbg !10219
  br label %if.end, !dbg !10219

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10220
  %qtd_list4 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %8, i32 0, i32 3, !dbg !10222
  %call5 = call i32 @list_empty(%struct.list_head* %qtd_list4) #11, !dbg !10223
  %tobool6 = icmp ne i32 %call5, 0, !dbg !10223
  br i1 %tobool6, label %if.end13, label %land.lhs.true, !dbg !10224

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10225
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %9, i32 0, i32 12, !dbg !10226
  %10 = load i32, i32* %rh_state, align 4, !dbg !10226
  %cmp = icmp eq i32 %10, 2, !dbg !10227
  br i1 %cmp, label %if.then7, label %if.end13, !dbg !10228

if.then7:                                         ; preds = %land.lhs.true
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10229
  %12 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10231
  %call8 = call i32 @qh_schedule(%struct.ehci_hcd* %11, %struct.ehci_qh* %12) #11, !dbg !10232
  store i32 %call8, i32* %rc, align 4, !dbg !10233
  %13 = load i32, i32* %rc, align 4, !dbg !10234
  %cmp9 = icmp eq i32 %13, 0, !dbg !10236
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !10237

if.then10:                                        ; preds = %if.then7
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10238
  %15 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10240
  call void @qh_refresh(%struct.ehci_hcd* %14, %struct.ehci_qh* %15) #11, !dbg !10241
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10242
  %17 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10243
  call void @qh_link_periodic(%struct.ehci_hcd* %16, %struct.ehci_qh* %17) #11, !dbg !10244
  br label %if.end12, !dbg !10245

if.else:                                          ; preds = %if.then7
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10246
  %call11 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %18) #11, !dbg !10246
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call11, i32 0, i32 0, !dbg !10246
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !10246
  %19 = load %struct.device*, %struct.device** %controller, align 8, !dbg !10246
  %20 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10246
  %21 = load i32, i32* %rc, align 4, !dbg !10246
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %19, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), %struct.ehci_qh* %20, i32 %21) #13, !dbg !10246
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then10
  br label %if.end13, !dbg !10248

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %if.end
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10249
  %intr_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %22, i32 0, i32 35, !dbg !10250
  %23 = load i32, i32* %intr_count, align 8, !dbg !10251
  %dec = add i32 %23, -1, !dbg !10251
  store i32 %dec, i32* %intr_count, align 8, !dbg !10251
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10252
  call void @disable_periodic(%struct.ehci_hcd* %24) #11, !dbg !10253
  ret void, !dbg !10254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !10255 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10256, metadata !DIExpression()), !dbg !10257
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10258
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !10260
  br i1 %call, label %if.end, label %if.then, !dbg !10261

if.then:                                          ; preds = %entry
  br label %return, !dbg !10262

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10263
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !10264
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !10264
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !10265
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !10266
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10266
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !10267
  br label %return, !dbg !10268

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10268
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !10269 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !10272, metadata !DIExpression()), !dbg !10273
  ret i1 true, !dbg !10274
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10275 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10278, metadata !DIExpression()), !dbg !10279
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10280, metadata !DIExpression()), !dbg !10281
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10282
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10283
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !10284
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !10285
  br label %do.body, !dbg !10286

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !10287

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !10289

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !10287

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10291
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10291
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !10291
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !10291
  br label %do.end5, !dbg !10291

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !10287

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !10293
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @qh_completions(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh) #0 !dbg !10294 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  %last = alloca %struct.ehci_qtd*, align 8
  %end = alloca %struct.ehci_qtd*, align 8
  %entry1 = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %last_status = alloca i32, align 4
  %stopped = alloca i32, align 4
  %state = alloca i8, align 1
  %hw = alloca %struct.ehci_qh_hw*, align 8
  %qtd = alloca %struct.ehci_qtd*, align 8
  %urb = alloca %struct.urb*, align 8
  %token = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp9 = alloca %struct.ehci_qtd*, align 8
  %__mptr169 = alloca i8*, align 8
  %tmp174 = alloca %struct.ehci_qtd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !10297, metadata !DIExpression()), !dbg !10298
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !10299, metadata !DIExpression()), !dbg !10300
  call void @llvm.dbg.declare(metadata %struct.ehci_qtd** %last, metadata !10301, metadata !DIExpression()), !dbg !10302
  call void @llvm.dbg.declare(metadata %struct.ehci_qtd** %end, metadata !10303, metadata !DIExpression()), !dbg !10304
  %0 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10305
  %dummy = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %0, i32 0, i32 5, !dbg !10306
  %1 = load %struct.ehci_qtd*, %struct.ehci_qtd** %dummy, align 8, !dbg !10306
  store %struct.ehci_qtd* %1, %struct.ehci_qtd** %end, align 8, !dbg !10304
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry1, metadata !10307, metadata !DIExpression()), !dbg !10308
  call void @llvm.dbg.declare(metadata %struct.list_head** %tmp, metadata !10309, metadata !DIExpression()), !dbg !10310
  call void @llvm.dbg.declare(metadata i32* %last_status, metadata !10311, metadata !DIExpression()), !dbg !10312
  call void @llvm.dbg.declare(metadata i32* %stopped, metadata !10313, metadata !DIExpression()), !dbg !10314
  call void @llvm.dbg.declare(metadata i8* %state, metadata !10315, metadata !DIExpression()), !dbg !10316
  call void @llvm.dbg.declare(metadata %struct.ehci_qh_hw** %hw, metadata !10317, metadata !DIExpression()), !dbg !10318
  %2 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10319
  %hw2 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %2, i32 0, i32 0, !dbg !10320
  %3 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw2, align 8, !dbg !10320
  store %struct.ehci_qh_hw* %3, %struct.ehci_qh_hw** %hw, align 8, !dbg !10318
  %4 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10321
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %4, i32 0, i32 9, !dbg !10322
  %5 = load i8, i8* %qh_state, align 4, !dbg !10322
  store i8 %5, i8* %state, align 1, !dbg !10323
  %6 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10324
  %qh_state3 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %6, i32 0, i32 9, !dbg !10325
  store i8 5, i8* %qh_state3, align 4, !dbg !10326
  %7 = load i8, i8* %state, align 1, !dbg !10327
  %conv = zext i8 %7 to i32, !dbg !10327
  %cmp = icmp eq i32 %conv, 3, !dbg !10328
  %conv4 = zext i1 %cmp to i32, !dbg !10328
  store i32 %conv4, i32* %stopped, align 4, !dbg !10329
  br label %rescan, !dbg !10330

rescan:                                           ; preds = %if.then206, %entry
  call void @llvm.dbg.label(metadata !10331), !dbg !10332
  store %struct.ehci_qtd* null, %struct.ehci_qtd** %last, align 8, !dbg !10333
  store i32 -115, i32* %last_status, align 4, !dbg !10334
  %8 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10335
  %dequeue_during_giveback = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %8, i32 0, i32 13, !dbg !10336
  %bf.load = load i8, i8* %dequeue_during_giveback, align 8, !dbg !10337
  %bf.clear = and i8 %bf.load, -5, !dbg !10337
  store i8 %bf.clear, i8* %dequeue_during_giveback, align 8, !dbg !10337
  %9 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10338
  %qtd_list = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %9, i32 0, i32 3, !dbg !10338
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %qtd_list, i32 0, i32 0, !dbg !10338
  %10 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10338
  store %struct.list_head* %10, %struct.list_head** %entry1, align 8, !dbg !10338
  %11 = load %struct.list_head*, %struct.list_head** %entry1, align 8, !dbg !10338
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %11, i32 0, i32 0, !dbg !10338
  %12 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !10338
  store %struct.list_head* %12, %struct.list_head** %tmp, align 8, !dbg !10338
  br label %for.cond, !dbg !10338

for.cond:                                         ; preds = %for.inc, %rescan
  %13 = load %struct.list_head*, %struct.list_head** %entry1, align 8, !dbg !10340
  %14 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10340
  %qtd_list6 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %14, i32 0, i32 3, !dbg !10340
  %cmp7 = icmp ne %struct.list_head* %13, %qtd_list6, !dbg !10340
  br i1 %cmp7, label %for.body, label %for.end, !dbg !10338

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ehci_qtd** %qtd, metadata !10342, metadata !DIExpression()), !dbg !10344
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !10345, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.declare(metadata i32* %token, metadata !10347, metadata !DIExpression()), !dbg !10348
  store i32 0, i32* %token, align 4, !dbg !10348
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10349, metadata !DIExpression()), !dbg !10351
  %15 = load %struct.list_head*, %struct.list_head** %entry1, align 8, !dbg !10351
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !10351
  store i8* %16, i8** %__mptr, align 8, !dbg !10351
  br label %do.body, !dbg !10351

do.body:                                          ; preds = %for.body
  br label %do.end, !dbg !10352

do.end:                                           ; preds = %do.body
  %17 = load i8*, i8** %__mptr, align 8, !dbg !10351
  %add.ptr = getelementptr i8, i8* %17, i64 -64, !dbg !10351
  %18 = bitcast i8* %add.ptr to %struct.ehci_qtd*, !dbg !10351
  store %struct.ehci_qtd* %18, %struct.ehci_qtd** %tmp9, align 8, !dbg !10352
  %19 = load %struct.ehci_qtd*, %struct.ehci_qtd** %tmp9, align 8, !dbg !10351
  store %struct.ehci_qtd* %19, %struct.ehci_qtd** %qtd, align 8, !dbg !10354
  %20 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10355
  %urb10 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %20, i32 0, i32 7, !dbg !10356
  %21 = load %struct.urb*, %struct.urb** %urb10, align 16, !dbg !10356
  store %struct.urb* %21, %struct.urb** %urb, align 8, !dbg !10357
  %22 = load %struct.ehci_qtd*, %struct.ehci_qtd** %last, align 8, !dbg !10358
  %tobool = icmp ne %struct.ehci_qtd* %22, null, !dbg !10358
  br i1 %tobool, label %if.then, label %if.end19, !dbg !10360

if.then:                                          ; preds = %do.end
  %23 = load %struct.ehci_qtd*, %struct.ehci_qtd** %last, align 8, !dbg !10361
  %urb11 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %23, i32 0, i32 7, !dbg !10361
  %24 = load %struct.urb*, %struct.urb** %urb11, align 16, !dbg !10361
  %25 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !10361
  %cmp12 = icmp ne %struct.urb* %24, %25, !dbg !10361
  %lnot = xor i1 %cmp12, true, !dbg !10361
  %lnot14 = xor i1 %lnot, true, !dbg !10361
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !10361
  %conv15 = sext i32 %lnot.ext to i64, !dbg !10361
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !10361
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !10364

if.then17:                                        ; preds = %if.then
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10365
  %27 = load %struct.ehci_qtd*, %struct.ehci_qtd** %last, align 8, !dbg !10367
  %urb18 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %27, i32 0, i32 7, !dbg !10368
  %28 = load %struct.urb*, %struct.urb** %urb18, align 16, !dbg !10368
  %29 = load i32, i32* %last_status, align 4, !dbg !10369
  call void @ehci_urb_done(%struct.ehci_hcd* %26, %struct.urb* %28, i32 %29) #11, !dbg !10370
  store i32 -115, i32* %last_status, align 4, !dbg !10371
  br label %if.end, !dbg !10372

if.end:                                           ; preds = %if.then17, %if.then
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10373
  %31 = load %struct.ehci_qtd*, %struct.ehci_qtd** %last, align 8, !dbg !10374
  call void @ehci_qtd_free(%struct.ehci_hcd* %30, %struct.ehci_qtd* %31) #11, !dbg !10375
  store %struct.ehci_qtd* null, %struct.ehci_qtd** %last, align 8, !dbg !10376
  br label %if.end19, !dbg !10377

if.end19:                                         ; preds = %if.end, %do.end
  %32 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10378
  %33 = load %struct.ehci_qtd*, %struct.ehci_qtd** %end, align 8, !dbg !10380
  %cmp20 = icmp eq %struct.ehci_qtd* %32, %33, !dbg !10381
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !10382

if.then22:                                        ; preds = %if.end19
  br label %for.end, !dbg !10383

if.end23:                                         ; preds = %if.end19
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10384, !srcloc !10385
  %34 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10386
  %35 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10387
  %hw_token = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %35, i32 0, i32 2, !dbg !10388
  %36 = load i32, i32* %hw_token, align 8, !dbg !10388
  %call = call i32 @hc32_to_cpu(%struct.ehci_hcd* %34, i32 %36) #11, !dbg !10389
  store i32 %call, i32* %token, align 4, !dbg !10390
  br label %retry_xacterr, !dbg !10391

retry_xacterr:                                    ; preds = %if.then46, %if.end23
  call void @llvm.dbg.label(metadata !10392), !dbg !10393
  %37 = load i32, i32* %token, align 4, !dbg !10394
  %and = and i32 %37, 128, !dbg !10396
  %cmp24 = icmp eq i32 %and, 0, !dbg !10397
  br i1 %cmp24, label %if.then26, label %if.else76, !dbg !10398

if.then26:                                        ; preds = %retry_xacterr
  %38 = load i32, i32* %token, align 4, !dbg !10399
  %and27 = and i32 %38, 32, !dbg !10402
  %tobool28 = icmp ne i32 %and27, 0, !dbg !10402
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !10403

if.then29:                                        ; preds = %if.then26
  br label %if.end30, !dbg !10404

if.end30:                                         ; preds = %if.then29, %if.then26
  %39 = load i32, i32* %token, align 4, !dbg !10405
  %and31 = and i32 %39, 64, !dbg !10407
  %cmp32 = icmp ne i32 %and31, 0, !dbg !10408
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !10409

if.then34:                                        ; preds = %if.end30
  %40 = load i32, i32* %token, align 4, !dbg !10410
  %and35 = and i32 %40, 8, !dbg !10413
  %tobool36 = icmp ne i32 %and35, 0, !dbg !10413
  br i1 %tobool36, label %land.lhs.true, label %if.end52, !dbg !10414

land.lhs.true:                                    ; preds = %if.then34
  %41 = load i32, i32* %token, align 4, !dbg !10415
  %shr = lshr i32 %41, 10, !dbg !10415
  %and37 = and i32 %shr, 3, !dbg !10415
  %cmp38 = icmp eq i32 %and37, 0, !dbg !10416
  br i1 %cmp38, label %land.lhs.true40, label %if.end52, !dbg !10417

land.lhs.true40:                                  ; preds = %land.lhs.true
  %42 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10418
  %xacterrs = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %42, i32 0, i32 10, !dbg !10419
  %43 = load i8, i8* %xacterrs, align 1, !dbg !10420
  %inc = add i8 %43, 1, !dbg !10420
  store i8 %inc, i8* %xacterrs, align 1, !dbg !10420
  %conv41 = zext i8 %inc to i32, !dbg !10420
  %cmp42 = icmp slt i32 %conv41, 32, !dbg !10421
  br i1 %cmp42, label %land.lhs.true44, label %if.end52, !dbg !10422

land.lhs.true44:                                  ; preds = %land.lhs.true40
  %44 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !10423
  %unlinked = getelementptr inbounds %struct.urb, %struct.urb* %44, i32 0, i32 1, !dbg !10424
  %45 = load i32, i32* %unlinked, align 4, !dbg !10424
  %tobool45 = icmp ne i32 %45, 0, !dbg !10423
  br i1 %tobool45, label %if.end52, label %if.then46, !dbg !10425

if.then46:                                        ; preds = %land.lhs.true44
  %46 = load i32, i32* %token, align 4, !dbg !10426
  %and47 = and i32 %46, -65, !dbg !10426
  store i32 %and47, i32* %token, align 4, !dbg !10426
  %47 = load i32, i32* %token, align 4, !dbg !10428
  %or = or i32 %47, 3200, !dbg !10428
  store i32 %or, i32* %token, align 4, !dbg !10428
  %48 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10429
  %49 = load i32, i32* %token, align 4, !dbg !10430
  %call48 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %48, i32 %49) #11, !dbg !10431
  %50 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10432
  %hw_token49 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %50, i32 0, i32 2, !dbg !10433
  store i32 %call48, i32* %hw_token49, align 8, !dbg !10434
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10435, !srcloc !10436
  %51 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10437
  %52 = load i32, i32* %token, align 4, !dbg !10438
  %call50 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %51, i32 %52) #11, !dbg !10439
  %53 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !10440
  %hw_token51 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %53, i32 0, i32 6, !dbg !10441
  store i32 %call50, i32* %hw_token51, align 8, !dbg !10442
  br label %retry_xacterr, !dbg !10443

if.end52:                                         ; preds = %land.lhs.true44, %land.lhs.true40, %land.lhs.true, %if.then34
  store i32 1, i32* %stopped, align 4, !dbg !10444
  %54 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10445
  %unlink_reason = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %54, i32 0, i32 11, !dbg !10446
  %55 = load i8, i8* %unlink_reason, align 2, !dbg !10447
  %conv53 = zext i8 %55 to i32, !dbg !10447
  %or54 = or i32 %conv53, 1, !dbg !10447
  %conv55 = trunc i32 %or54 to i8, !dbg !10447
  store i8 %conv55, i8* %unlink_reason, align 2, !dbg !10447
  br label %if.end75, !dbg !10448

if.else:                                          ; preds = %if.end30
  %56 = load i32, i32* %token, align 4, !dbg !10449
  %shr56 = lshr i32 %56, 16, !dbg !10449
  %and57 = and i32 %shr56, 32767, !dbg !10449
  %cmp58 = icmp ne i32 %and57, 0, !dbg !10449
  br i1 %cmp58, label %land.lhs.true60, label %if.end74, !dbg !10449

land.lhs.true60:                                  ; preds = %if.else
  %57 = load i32, i32* %token, align 4, !dbg !10449
  %shr61 = lshr i32 %57, 8, !dbg !10449
  %and62 = and i32 %shr61, 3, !dbg !10449
  %cmp63 = icmp eq i32 %and62, 1, !dbg !10449
  br i1 %cmp63, label %land.lhs.true65, label %if.end74, !dbg !10451

land.lhs.true65:                                  ; preds = %land.lhs.true60
  %58 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10452
  %hw_alt_next = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %58, i32 0, i32 1, !dbg !10453
  %59 = load i32, i32* %hw_alt_next, align 4, !dbg !10453
  %60 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10454
  %call66 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %60, i32 1) #11, !dbg !10454
  %and67 = and i32 %59, %call66, !dbg !10455
  %tobool68 = icmp ne i32 %and67, 0, !dbg !10455
  br i1 %tobool68, label %if.end74, label %if.then69, !dbg !10456

if.then69:                                        ; preds = %land.lhs.true65
  store i32 1, i32* %stopped, align 4, !dbg !10457
  %61 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10459
  %unlink_reason70 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %61, i32 0, i32 11, !dbg !10460
  %62 = load i8, i8* %unlink_reason70, align 2, !dbg !10461
  %conv71 = zext i8 %62 to i32, !dbg !10461
  %or72 = or i32 %conv71, 2, !dbg !10461
  %conv73 = trunc i32 %or72 to i8, !dbg !10461
  store i8 %conv73, i8* %unlink_reason70, align 2, !dbg !10461
  br label %if.end74, !dbg !10462

if.end74:                                         ; preds = %if.then69, %land.lhs.true65, %land.lhs.true60, %if.else
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end52
  br label %if.end129, !dbg !10463

if.else76:                                        ; preds = %retry_xacterr
  %63 = load i32, i32* %stopped, align 4, !dbg !10464
  %tobool77 = icmp ne i32 %63, 0, !dbg !10464
  br i1 %tobool77, label %land.end, label %land.rhs, !dbg !10464

land.rhs:                                         ; preds = %if.else76
  %64 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10464
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %64, i32 0, i32 12, !dbg !10464
  %65 = load i32, i32* %rh_state, align 4, !dbg !10464
  %cmp78 = icmp uge i32 %65, 2, !dbg !10464
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else76
  %66 = phi i1 [ false, %if.else76 ], [ %cmp78, %land.rhs ], !dbg !10466
  %lnot80 = xor i1 %66, true, !dbg !10464
  %lnot82 = xor i1 %lnot80, true, !dbg !10464
  %lnot.ext83 = zext i1 %lnot82 to i32, !dbg !10464
  %conv84 = sext i32 %lnot.ext83 to i64, !dbg !10464
  %tobool85 = icmp ne i64 %conv84, 0, !dbg !10464
  br i1 %tobool85, label %if.then86, label %if.else87, !dbg !10467

if.then86:                                        ; preds = %land.end
  br label %for.end, !dbg !10468

if.else87:                                        ; preds = %land.end
  store i32 1, i32* %stopped, align 4, !dbg !10470
  %67 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10472
  %rh_state88 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %67, i32 0, i32 12, !dbg !10474
  %68 = load i32, i32* %rh_state88, align 4, !dbg !10474
  %cmp89 = icmp ult i32 %68, 2, !dbg !10475
  br i1 %cmp89, label %if.then91, label %if.else96, !dbg !10476

if.then91:                                        ; preds = %if.else87
  store i32 -108, i32* %last_status, align 4, !dbg !10477
  %69 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10479
  %unlink_reason92 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %69, i32 0, i32 11, !dbg !10480
  %70 = load i8, i8* %unlink_reason92, align 2, !dbg !10481
  %conv93 = zext i8 %70 to i32, !dbg !10481
  %or94 = or i32 %conv93, 8, !dbg !10481
  %conv95 = trunc i32 %or94 to i8, !dbg !10481
  store i8 %conv95, i8* %unlink_reason92, align 2, !dbg !10481
  br label %if.end104, !dbg !10482

if.else96:                                        ; preds = %if.else87
  %71 = load i32, i32* %last_status, align 4, !dbg !10483
  %cmp97 = icmp eq i32 %71, -115, !dbg !10485
  br i1 %cmp97, label %land.lhs.true99, label %if.end103, !dbg !10486

land.lhs.true99:                                  ; preds = %if.else96
  %72 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !10487
  %unlinked100 = getelementptr inbounds %struct.urb, %struct.urb* %72, i32 0, i32 1, !dbg !10488
  %73 = load i32, i32* %unlinked100, align 4, !dbg !10488
  %tobool101 = icmp ne i32 %73, 0, !dbg !10487
  br i1 %tobool101, label %if.end103, label %if.then102, !dbg !10489

if.then102:                                       ; preds = %land.lhs.true99
  br label %for.inc, !dbg !10490

if.end103:                                        ; preds = %land.lhs.true99, %if.else96
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then91
  %74 = load i8, i8* %state, align 1, !dbg !10491
  %conv105 = zext i8 %74 to i32, !dbg !10491
  %cmp106 = icmp eq i32 %conv105, 3, !dbg !10493
  br i1 %cmp106, label %land.lhs.true108, label %if.end127, !dbg !10494

land.lhs.true108:                                 ; preds = %if.end104
  %75 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10495
  %qtd_list109 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %75, i32 0, i32 3, !dbg !10496
  %next110 = getelementptr inbounds %struct.list_head, %struct.list_head* %qtd_list109, i32 0, i32 0, !dbg !10497
  %76 = load %struct.list_head*, %struct.list_head** %next110, align 8, !dbg !10497
  %77 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10498
  %qtd_list111 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %77, i32 0, i32 6, !dbg !10499
  %cmp112 = icmp eq %struct.list_head* %76, %qtd_list111, !dbg !10500
  br i1 %cmp112, label %land.lhs.true114, label %if.end127, !dbg !10501

land.lhs.true114:                                 ; preds = %land.lhs.true108
  %78 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !10502
  %hw_token115 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %78, i32 0, i32 6, !dbg !10503
  %79 = load i32, i32* %hw_token115, align 8, !dbg !10503
  %80 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10504
  %call116 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %80, i32 128) #11, !dbg !10504
  %and117 = and i32 %79, %call116, !dbg !10505
  %tobool118 = icmp ne i32 %and117, 0, !dbg !10505
  br i1 %tobool118, label %if.then119, label %if.end127, !dbg !10506

if.then119:                                       ; preds = %land.lhs.true114
  %81 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10507
  %82 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !10509
  %hw_token120 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %82, i32 0, i32 6, !dbg !10510
  %83 = load i32, i32* %hw_token120, align 8, !dbg !10510
  %call121 = call i32 @hc32_to_cpu(%struct.ehci_hcd* %81, i32 %83) #11, !dbg !10511
  store i32 %call121, i32* %token, align 4, !dbg !10512
  %84 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10513
  %call122 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %84, i32 128) #11, !dbg !10513
  %neg = xor i32 %call122, -1, !dbg !10514
  %85 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !10515
  %hw_token123 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %85, i32 0, i32 6, !dbg !10516
  %86 = load i32, i32* %hw_token123, align 8, !dbg !10517
  %and124 = and i32 %86, %neg, !dbg !10517
  store i32 %and124, i32* %hw_token123, align 8, !dbg !10517
  %87 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10518
  %should_be_inactive = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %87, i32 0, i32 13, !dbg !10519
  %bf.load125 = load i8, i8* %should_be_inactive, align 8, !dbg !10520
  %bf.clear126 = and i8 %bf.load125, -9, !dbg !10520
  %bf.set = or i8 %bf.clear126, 8, !dbg !10520
  store i8 %bf.set, i8* %should_be_inactive, align 8, !dbg !10520
  %88 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10521
  %89 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10522
  %90 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !10523
  %91 = load i32, i32* %token, align 4, !dbg !10524
  call void @ehci_clear_tt_buffer(%struct.ehci_hcd* %88, %struct.ehci_qh* %89, %struct.urb* %90, i32 %91) #11, !dbg !10525
  br label %if.end127, !dbg !10526

if.end127:                                        ; preds = %if.then119, %land.lhs.true114, %land.lhs.true108, %if.end104
  br label %if.end128

if.end128:                                        ; preds = %if.end127
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end75
  %92 = load i32, i32* %last_status, align 4, !dbg !10527
  %cmp130 = icmp eq i32 %92, -115, !dbg !10529
  br i1 %cmp130, label %if.then132, label %if.end161, !dbg !10530

if.then132:                                       ; preds = %if.end129
  %93 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10531
  %94 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !10533
  %95 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10534
  %length = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %95, i32 0, i32 8, !dbg !10535
  %96 = load i64, i64* %length, align 8, !dbg !10535
  %97 = load i32, i32* %token, align 4, !dbg !10536
  %call133 = call i32 @qtd_copy_status(%struct.ehci_hcd* %93, %struct.urb* %94, i64 %96, i32 %97) #11, !dbg !10537
  store i32 %call133, i32* %last_status, align 4, !dbg !10538
  %98 = load i32, i32* %last_status, align 4, !dbg !10539
  %cmp134 = icmp eq i32 %98, -121, !dbg !10541
  br i1 %cmp134, label %land.lhs.true136, label %if.end142, !dbg !10542

land.lhs.true136:                                 ; preds = %if.then132
  %99 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10543
  %hw_alt_next137 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %99, i32 0, i32 1, !dbg !10544
  %100 = load i32, i32* %hw_alt_next137, align 4, !dbg !10544
  %101 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10545
  %call138 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %101, i32 1) #11, !dbg !10545
  %and139 = and i32 %100, %call138, !dbg !10546
  %tobool140 = icmp ne i32 %and139, 0, !dbg !10546
  br i1 %tobool140, label %if.then141, label %if.end142, !dbg !10547

if.then141:                                       ; preds = %land.lhs.true136
  store i32 -115, i32* %last_status, align 4, !dbg !10548
  br label %if.end142, !dbg !10549

if.end142:                                        ; preds = %if.then141, %land.lhs.true136, %if.then132
  %102 = load i32, i32* %last_status, align 4, !dbg !10550
  %cmp143 = icmp ne i32 %102, -115, !dbg !10550
  br i1 %cmp143, label %land.rhs145, label %land.end148, !dbg !10550

land.rhs145:                                      ; preds = %if.end142
  %103 = load i32, i32* %last_status, align 4, !dbg !10550
  %cmp146 = icmp ne i32 %103, -121, !dbg !10550
  br label %land.end148

land.end148:                                      ; preds = %land.rhs145, %if.end142
  %104 = phi i1 [ false, %if.end142 ], [ %cmp146, %land.rhs145 ], !dbg !10552
  %lnot149 = xor i1 %104, true, !dbg !10550
  %lnot151 = xor i1 %lnot149, true, !dbg !10550
  %lnot.ext152 = zext i1 %lnot151 to i32, !dbg !10550
  %conv153 = sext i32 %lnot.ext152 to i64, !dbg !10550
  %tobool154 = icmp ne i64 %conv153, 0, !dbg !10550
  br i1 %tobool154, label %if.then155, label %if.end160, !dbg !10553

if.then155:                                       ; preds = %land.end148
  %105 = load i32, i32* %last_status, align 4, !dbg !10554
  %cmp156 = icmp ne i32 %105, -32, !dbg !10557
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !10558

if.then158:                                       ; preds = %if.then155
  %106 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10559
  %107 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10560
  %108 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !10561
  %109 = load i32, i32* %token, align 4, !dbg !10562
  call void @ehci_clear_tt_buffer(%struct.ehci_hcd* %106, %struct.ehci_qh* %107, %struct.urb* %108, i32 %109) #11, !dbg !10563
  br label %if.end159, !dbg !10563

if.end159:                                        ; preds = %if.then158, %if.then155
  br label %if.end160, !dbg !10564

if.end160:                                        ; preds = %if.end159, %land.end148
  br label %if.end161, !dbg !10565

if.end161:                                        ; preds = %if.end160, %if.end129
  %110 = load i32, i32* %stopped, align 4, !dbg !10566
  %tobool162 = icmp ne i32 %110, 0, !dbg !10566
  br i1 %tobool162, label %land.lhs.true163, label %if.end177, !dbg !10568

land.lhs.true163:                                 ; preds = %if.end161
  %111 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10569
  %qtd_list164 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %111, i32 0, i32 6, !dbg !10570
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %qtd_list164, i32 0, i32 1, !dbg !10571
  %112 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !10571
  %113 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10572
  %qtd_list165 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %113, i32 0, i32 3, !dbg !10573
  %cmp166 = icmp ne %struct.list_head* %112, %qtd_list165, !dbg !10574
  br i1 %cmp166, label %if.then168, label %if.end177, !dbg !10575

if.then168:                                       ; preds = %land.lhs.true163
  call void @llvm.dbg.declare(metadata i8** %__mptr169, metadata !10576, metadata !DIExpression()), !dbg !10579
  %114 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10579
  %qtd_list170 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %114, i32 0, i32 6, !dbg !10579
  %prev171 = getelementptr inbounds %struct.list_head, %struct.list_head* %qtd_list170, i32 0, i32 1, !dbg !10579
  %115 = load %struct.list_head*, %struct.list_head** %prev171, align 8, !dbg !10579
  %116 = bitcast %struct.list_head* %115 to i8*, !dbg !10579
  store i8* %116, i8** %__mptr169, align 8, !dbg !10579
  br label %do.body172, !dbg !10579

do.body172:                                       ; preds = %if.then168
  br label %do.end173, !dbg !10580

do.end173:                                        ; preds = %do.body172
  %117 = load i8*, i8** %__mptr169, align 8, !dbg !10579
  %add.ptr175 = getelementptr i8, i8* %117, i64 -64, !dbg !10579
  %118 = bitcast i8* %add.ptr175 to %struct.ehci_qtd*, !dbg !10579
  store %struct.ehci_qtd* %118, %struct.ehci_qtd** %tmp174, align 8, !dbg !10580
  %119 = load %struct.ehci_qtd*, %struct.ehci_qtd** %tmp174, align 8, !dbg !10579
  store %struct.ehci_qtd* %119, %struct.ehci_qtd** %last, align 8, !dbg !10582
  %120 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10583
  %hw_next = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %120, i32 0, i32 0, !dbg !10584
  %121 = load i32, i32* %hw_next, align 32, !dbg !10584
  %122 = load %struct.ehci_qtd*, %struct.ehci_qtd** %last, align 8, !dbg !10585
  %hw_next176 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %122, i32 0, i32 0, !dbg !10586
  store i32 %121, i32* %hw_next176, align 32, !dbg !10587
  br label %if.end177, !dbg !10588

if.end177:                                        ; preds = %do.end173, %land.lhs.true163, %if.end161
  %123 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10589
  %qtd_list178 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %123, i32 0, i32 6, !dbg !10590
  call void @list_del(%struct.list_head* %qtd_list178) #11, !dbg !10591
  %124 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10592
  store %struct.ehci_qtd* %124, %struct.ehci_qtd** %last, align 8, !dbg !10593
  %125 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10594
  %xacterrs179 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %125, i32 0, i32 10, !dbg !10595
  store i8 0, i8* %xacterrs179, align 1, !dbg !10596
  br label %for.inc, !dbg !10597

for.inc:                                          ; preds = %if.end177, %if.then102
  %126 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !10340
  store %struct.list_head* %126, %struct.list_head** %entry1, align 8, !dbg !10340
  %127 = load %struct.list_head*, %struct.list_head** %entry1, align 8, !dbg !10340
  %next180 = getelementptr inbounds %struct.list_head, %struct.list_head* %127, i32 0, i32 0, !dbg !10340
  %128 = load %struct.list_head*, %struct.list_head** %next180, align 8, !dbg !10340
  store %struct.list_head* %128, %struct.list_head** %tmp, align 8, !dbg !10340
  br label %for.cond, !dbg !10340, !llvm.loop !10598

for.end:                                          ; preds = %if.then86, %if.then22, %for.cond
  %129 = load %struct.ehci_qtd*, %struct.ehci_qtd** %last, align 8, !dbg !10600
  %cmp181 = icmp ne %struct.ehci_qtd* %129, null, !dbg !10600
  %lnot183 = xor i1 %cmp181, true, !dbg !10600
  %lnot185 = xor i1 %lnot183, true, !dbg !10600
  %lnot.ext186 = zext i1 %lnot185 to i32, !dbg !10600
  %conv187 = sext i32 %lnot.ext186 to i64, !dbg !10600
  %tobool188 = icmp ne i64 %conv187, 0, !dbg !10600
  br i1 %tobool188, label %if.then189, label %if.end191, !dbg !10602

if.then189:                                       ; preds = %for.end
  %130 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10603
  %131 = load %struct.ehci_qtd*, %struct.ehci_qtd** %last, align 8, !dbg !10605
  %urb190 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %131, i32 0, i32 7, !dbg !10606
  %132 = load %struct.urb*, %struct.urb** %urb190, align 16, !dbg !10606
  %133 = load i32, i32* %last_status, align 4, !dbg !10607
  call void @ehci_urb_done(%struct.ehci_hcd* %130, %struct.urb* %132, i32 %133) #11, !dbg !10608
  %134 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10609
  %135 = load %struct.ehci_qtd*, %struct.ehci_qtd** %last, align 8, !dbg !10610
  call void @ehci_qtd_free(%struct.ehci_hcd* %134, %struct.ehci_qtd* %135) #11, !dbg !10611
  br label %if.end191, !dbg !10612

if.end191:                                        ; preds = %if.then189, %for.end
  %136 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10613
  %dequeue_during_giveback192 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %136, i32 0, i32 13, !dbg !10613
  %bf.load193 = load i8, i8* %dequeue_during_giveback192, align 8, !dbg !10613
  %bf.lshr = lshr i8 %bf.load193, 2, !dbg !10613
  %bf.clear194 = and i8 %bf.lshr, 1, !dbg !10613
  %bf.cast = zext i8 %bf.clear194 to i32, !dbg !10613
  %tobool195 = icmp ne i32 %bf.cast, 0, !dbg !10613
  %lnot196 = xor i1 %tobool195, true, !dbg !10613
  %lnot198 = xor i1 %lnot196, true, !dbg !10613
  %lnot.ext199 = zext i1 %lnot198 to i32, !dbg !10613
  %conv200 = sext i32 %lnot.ext199 to i64, !dbg !10613
  %tobool201 = icmp ne i64 %conv200, 0, !dbg !10613
  br i1 %tobool201, label %if.then202, label %if.end208, !dbg !10615

if.then202:                                       ; preds = %if.end191
  %137 = load i8, i8* %state, align 1, !dbg !10616
  %conv203 = zext i8 %137 to i32, !dbg !10616
  %cmp204 = icmp eq i32 %conv203, 3, !dbg !10619
  br i1 %cmp204, label %if.then206, label %if.end207, !dbg !10620

if.then206:                                       ; preds = %if.then202
  br label %rescan, !dbg !10621

if.end207:                                        ; preds = %if.then202
  br label %if.end208, !dbg !10622

if.end208:                                        ; preds = %if.end207, %if.end191
  %138 = load i8, i8* %state, align 1, !dbg !10623
  %139 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10624
  %qh_state209 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %139, i32 0, i32 9, !dbg !10625
  store i8 %138, i8* %qh_state209, align 4, !dbg !10626
  %140 = load i32, i32* %stopped, align 4, !dbg !10627
  %cmp210 = icmp ne i32 %140, 0, !dbg !10629
  br i1 %cmp210, label %if.then215, label %lor.lhs.false, !dbg !10630

lor.lhs.false:                                    ; preds = %if.end208
  %141 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !10631
  %hw_qtd_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %141, i32 0, i32 4, !dbg !10632
  %142 = load i32, i32* %hw_qtd_next, align 16, !dbg !10632
  %143 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10633
  %call212 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %143, i32 1) #11, !dbg !10633
  %cmp213 = icmp eq i32 %142, %call212, !dbg !10634
  br i1 %cmp213, label %if.then215, label %if.end220, !dbg !10635

if.then215:                                       ; preds = %lor.lhs.false, %if.end208
  %144 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10636
  %unlink_reason216 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %144, i32 0, i32 11, !dbg !10637
  %145 = load i8, i8* %unlink_reason216, align 2, !dbg !10638
  %conv217 = zext i8 %145 to i32, !dbg !10638
  %or218 = or i32 %conv217, 4, !dbg !10638
  %conv219 = trunc i32 %or218 to i8, !dbg !10638
  store i8 %conv219, i8* %unlink_reason216, align 2, !dbg !10638
  br label %if.end220, !dbg !10636

if.end220:                                        ; preds = %if.then215, %lor.lhs.false
  %146 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10639
  %unlink_reason221 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %146, i32 0, i32 11, !dbg !10640
  %147 = load i8, i8* %unlink_reason221, align 2, !dbg !10640
  %conv222 = zext i8 %147 to i32, !dbg !10639
  ret i32 %conv222, !dbg !10641
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @qh_schedule(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh) #0 !dbg !10642 {
entry:
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  %status = alloca i32, align 4
  %uframe = alloca i32, align 4
  %c_mask = alloca i32, align 4
  %hw = alloca %struct.ehci_qh_hw*, align 8
  %tt = alloca %struct.ehci_tt*, align 8
  %i = alloca i32, align 4
  %frame = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !10645, metadata !DIExpression()), !dbg !10646
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !10647, metadata !DIExpression()), !dbg !10648
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10649, metadata !DIExpression()), !dbg !10650
  store i32 0, i32* %status, align 4, !dbg !10650
  call void @llvm.dbg.declare(metadata i32* %uframe, metadata !10651, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.declare(metadata i32* %c_mask, metadata !10653, metadata !DIExpression()), !dbg !10654
  call void @llvm.dbg.declare(metadata %struct.ehci_qh_hw** %hw, metadata !10655, metadata !DIExpression()), !dbg !10656
  %0 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10657
  %hw1 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %0, i32 0, i32 0, !dbg !10658
  %1 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw1, align 8, !dbg !10658
  store %struct.ehci_qh_hw* %1, %struct.ehci_qh_hw** %hw, align 8, !dbg !10656
  call void @llvm.dbg.declare(metadata %struct.ehci_tt** %tt, metadata !10659, metadata !DIExpression()), !dbg !10660
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10661
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %2, i32 1) #11, !dbg !10661
  %3 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !10662
  %hw_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %3, i32 0, i32 0, !dbg !10663
  store i32 %call, i32* %hw_next, align 32, !dbg !10664
  %4 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10665
  %ps = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %4, i32 0, i32 7, !dbg !10667
  %phase = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 6, !dbg !10668
  %5 = load i16, i16* %phase, align 2, !dbg !10668
  %conv = zext i16 %5 to i32, !dbg !10665
  %cmp = icmp ne i32 %conv, 29999, !dbg !10669
  br i1 %cmp, label %if.then, label %if.end, !dbg !10670

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10671
  br label %return, !dbg !10671

if.end:                                           ; preds = %entry
  store i32 0, i32* %uframe, align 4, !dbg !10673
  store i32 0, i32* %c_mask, align 4, !dbg !10674
  %6 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10675
  %ps3 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %6, i32 0, i32 7, !dbg !10676
  %udev = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps3, i32 0, i32 0, !dbg !10677
  %7 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !10677
  %call4 = call %struct.ehci_tt* @find_tt(%struct.usb_device* %7) #11, !dbg !10678
  store %struct.ehci_tt* %call4, %struct.ehci_tt** %tt, align 8, !dbg !10679
  %8 = load %struct.ehci_tt*, %struct.ehci_tt** %tt, align 8, !dbg !10680
  %9 = bitcast %struct.ehci_tt* %8 to i8*, !dbg !10680
  %call5 = call zeroext i1 @IS_ERR(i8* %9) #11, !dbg !10682
  br i1 %call5, label %if.then6, label %if.end9, !dbg !10683

if.then6:                                         ; preds = %if.end
  %10 = load %struct.ehci_tt*, %struct.ehci_tt** %tt, align 8, !dbg !10684
  %11 = bitcast %struct.ehci_tt* %10 to i8*, !dbg !10684
  %call7 = call i64 @PTR_ERR(i8* %11) #11, !dbg !10686
  %conv8 = trunc i64 %call7 to i32, !dbg !10686
  store i32 %conv8, i32* %status, align 4, !dbg !10687
  br label %done, !dbg !10688

if.end9:                                          ; preds = %if.end
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10689
  %tt_budget = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 63, !dbg !10690
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %tt_budget, i64 0, i64 0, !dbg !10689
  %13 = load %struct.ehci_tt*, %struct.ehci_tt** %tt, align 8, !dbg !10691
  call void @compute_tt_budget(i8* %arraydecay, %struct.ehci_tt* %13) #11, !dbg !10692
  %14 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10693
  %ps10 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %14, i32 0, i32 7, !dbg !10695
  %bw_period = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps10, i32 0, i32 12, !dbg !10696
  %15 = load i8, i8* %bw_period, align 1, !dbg !10696
  %tobool = icmp ne i8 %15, 0, !dbg !10693
  br i1 %tobool, label %if.then11, label %if.else, !dbg !10697

if.then11:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10698, metadata !DIExpression()), !dbg !10700
  call void @llvm.dbg.declare(metadata i32* %frame, metadata !10701, metadata !DIExpression()), !dbg !10702
  %16 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10703
  %ps12 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %16, i32 0, i32 7, !dbg !10705
  %bw_period13 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps12, i32 0, i32 12, !dbg !10706
  %17 = load i8, i8* %bw_period13, align 1, !dbg !10706
  %conv14 = zext i8 %17 to i32, !dbg !10703
  store i32 %conv14, i32* %i, align 4, !dbg !10707
  br label %for.cond, !dbg !10708

for.cond:                                         ; preds = %for.inc30, %if.then11
  %18 = load i32, i32* %i, align 4, !dbg !10709
  %cmp15 = icmp sgt i32 %18, 0, !dbg !10711
  br i1 %cmp15, label %for.body, label %for.end31, !dbg !10712

for.body:                                         ; preds = %for.cond
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10713
  %random_frame = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %19, i32 0, i32 54, !dbg !10715
  %20 = load i32, i32* %random_frame, align 8, !dbg !10716
  %inc = add i32 %20, 1, !dbg !10716
  store i32 %inc, i32* %random_frame, align 8, !dbg !10716
  %21 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10717
  %ps17 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %21, i32 0, i32 7, !dbg !10718
  %bw_period18 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps17, i32 0, i32 12, !dbg !10719
  %22 = load i8, i8* %bw_period18, align 1, !dbg !10719
  %conv19 = zext i8 %22 to i32, !dbg !10717
  %sub = sub i32 %conv19, 1, !dbg !10720
  %and = and i32 %inc, %sub, !dbg !10721
  store i32 %and, i32* %frame, align 4, !dbg !10722
  store i32 0, i32* %uframe, align 4, !dbg !10723
  br label %for.cond20, !dbg !10725

for.cond20:                                       ; preds = %for.inc, %for.body
  %23 = load i32, i32* %uframe, align 4, !dbg !10726
  %cmp21 = icmp ult i32 %23, 8, !dbg !10728
  br i1 %cmp21, label %for.body23, label %for.end, !dbg !10729

for.body23:                                       ; preds = %for.cond20
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10730
  %25 = load i32, i32* %frame, align 4, !dbg !10732
  %26 = load i32, i32* %uframe, align 4, !dbg !10733
  %27 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10734
  %28 = load %struct.ehci_tt*, %struct.ehci_tt** %tt, align 8, !dbg !10735
  %call24 = call i32 @check_intr_schedule(%struct.ehci_hcd* %24, i32 %25, i32 %26, %struct.ehci_qh* %27, i32* %c_mask, %struct.ehci_tt* %28) #11, !dbg !10736
  store i32 %call24, i32* %status, align 4, !dbg !10737
  %29 = load i32, i32* %status, align 4, !dbg !10738
  %cmp25 = icmp eq i32 %29, 0, !dbg !10740
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !10741

if.then27:                                        ; preds = %for.body23
  br label %got_it, !dbg !10742

if.end28:                                         ; preds = %for.body23
  br label %for.inc, !dbg !10743

for.inc:                                          ; preds = %if.end28
  %30 = load i32, i32* %uframe, align 4, !dbg !10744
  %inc29 = add i32 %30, 1, !dbg !10744
  store i32 %inc29, i32* %uframe, align 4, !dbg !10744
  br label %for.cond20, !dbg !10745, !llvm.loop !10746

for.end:                                          ; preds = %for.cond20
  br label %for.inc30, !dbg !10748

for.inc30:                                        ; preds = %for.end
  %31 = load i32, i32* %i, align 4, !dbg !10749
  %dec = add i32 %31, -1, !dbg !10749
  store i32 %dec, i32* %i, align 4, !dbg !10749
  br label %for.cond, !dbg !10750, !llvm.loop !10751

for.end31:                                        ; preds = %for.cond
  br label %if.end33, !dbg !10753

if.else:                                          ; preds = %if.end9
  %32 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10754
  %33 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10756
  %34 = load %struct.ehci_tt*, %struct.ehci_tt** %tt, align 8, !dbg !10757
  %call32 = call i32 @check_intr_schedule(%struct.ehci_hcd* %32, i32 0, i32 0, %struct.ehci_qh* %33, i32* %c_mask, %struct.ehci_tt* %34) #11, !dbg !10758
  store i32 %call32, i32* %status, align 4, !dbg !10759
  br label %if.end33

if.end33:                                         ; preds = %if.else, %for.end31
  %35 = load i32, i32* %status, align 4, !dbg !10760
  %tobool34 = icmp ne i32 %35, 0, !dbg !10760
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !10762

if.then35:                                        ; preds = %if.end33
  br label %done, !dbg !10763

if.end36:                                         ; preds = %if.end33
  br label %got_it, !dbg !10760

got_it:                                           ; preds = %if.end36, %if.then27
  call void @llvm.dbg.label(metadata !10764), !dbg !10765
  %36 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10766
  %ps37 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %36, i32 0, i32 7, !dbg !10767
  %period = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps37, i32 0, i32 5, !dbg !10768
  %37 = load i16, i16* %period, align 4, !dbg !10768
  %conv38 = zext i16 %37 to i32, !dbg !10766
  %tobool39 = icmp ne i32 %conv38, 0, !dbg !10766
  br i1 %tobool39, label %cond.true, label %cond.false, !dbg !10766

cond.true:                                        ; preds = %got_it
  %38 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10769
  %random_frame40 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %38, i32 0, i32 54, !dbg !10770
  %39 = load i32, i32* %random_frame40, align 8, !dbg !10770
  %40 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10771
  %ps41 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %40, i32 0, i32 7, !dbg !10772
  %period42 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps41, i32 0, i32 5, !dbg !10773
  %41 = load i16, i16* %period42, align 4, !dbg !10773
  %conv43 = zext i16 %41 to i32, !dbg !10771
  %sub44 = sub i32 %conv43, 1, !dbg !10774
  %and45 = and i32 %39, %sub44, !dbg !10775
  br label %cond.end, !dbg !10766

cond.false:                                       ; preds = %got_it
  br label %cond.end, !dbg !10766

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %and45, %cond.true ], [ 0, %cond.false ], !dbg !10766
  %conv46 = trunc i32 %cond to i16, !dbg !10776
  %42 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10777
  %ps47 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %42, i32 0, i32 7, !dbg !10778
  %phase48 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps47, i32 0, i32 6, !dbg !10779
  store i16 %conv46, i16* %phase48, align 2, !dbg !10780
  %43 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10781
  %ps49 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %43, i32 0, i32 7, !dbg !10782
  %phase50 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps49, i32 0, i32 6, !dbg !10783
  %44 = load i16, i16* %phase50, align 2, !dbg !10783
  %conv51 = zext i16 %44 to i32, !dbg !10781
  %45 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10784
  %ps52 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %45, i32 0, i32 7, !dbg !10785
  %bw_period53 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps52, i32 0, i32 12, !dbg !10786
  %46 = load i8, i8* %bw_period53, align 1, !dbg !10786
  %conv54 = zext i8 %46 to i32, !dbg !10784
  %sub55 = sub i32 %conv54, 1, !dbg !10787
  %and56 = and i32 %conv51, %sub55, !dbg !10788
  %conv57 = trunc i32 %and56 to i8, !dbg !10781
  %47 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10789
  %ps58 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %47, i32 0, i32 7, !dbg !10790
  %bw_phase = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps58, i32 0, i32 7, !dbg !10791
  store i8 %conv57, i8* %bw_phase, align 8, !dbg !10792
  %48 = load i32, i32* %uframe, align 4, !dbg !10793
  %conv59 = trunc i32 %48 to i8, !dbg !10793
  %49 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10794
  %ps60 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %49, i32 0, i32 7, !dbg !10795
  %phase_uf = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps60, i32 0, i32 8, !dbg !10796
  store i8 %conv59, i8* %phase_uf, align 1, !dbg !10797
  %50 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10798
  %ps61 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %50, i32 0, i32 7, !dbg !10799
  %period62 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps61, i32 0, i32 5, !dbg !10800
  %51 = load i16, i16* %period62, align 4, !dbg !10800
  %conv63 = zext i16 %51 to i32, !dbg !10798
  %tobool64 = icmp ne i32 %conv63, 0, !dbg !10798
  br i1 %tobool64, label %cond.true65, label %cond.false67, !dbg !10798

cond.true65:                                      ; preds = %cond.end
  %52 = load i32, i32* %c_mask, align 4, !dbg !10801
  %shl = shl i32 %52, 8, !dbg !10802
  %53 = load i32, i32* %uframe, align 4, !dbg !10803
  %shl66 = shl i32 1, %53, !dbg !10804
  %or = or i32 %shl, %shl66, !dbg !10805
  br label %cond.end68, !dbg !10798

cond.false67:                                     ; preds = %cond.end
  br label %cond.end68, !dbg !10798

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i32 [ %or, %cond.true65 ], [ 255, %cond.false67 ], !dbg !10798
  %conv70 = trunc i32 %cond69 to i16, !dbg !10798
  %54 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10806
  %ps71 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %54, i32 0, i32 7, !dbg !10807
  %cs_mask = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps71, i32 0, i32 4, !dbg !10808
  store i16 %conv70, i16* %cs_mask, align 2, !dbg !10809
  %55 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10810
  %call72 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %55, i32 -65536) #11, !dbg !10811
  %56 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !10812
  %hw_info2 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %56, i32 0, i32 2, !dbg !10813
  %57 = load i32, i32* %hw_info2, align 8, !dbg !10814
  %and73 = and i32 %57, %call72, !dbg !10814
  store i32 %and73, i32* %hw_info2, align 8, !dbg !10814
  %58 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10815
  %59 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10816
  %ps74 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %59, i32 0, i32 7, !dbg !10817
  %cs_mask75 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps74, i32 0, i32 4, !dbg !10818
  %60 = load i16, i16* %cs_mask75, align 2, !dbg !10818
  %conv76 = zext i16 %60 to i32, !dbg !10816
  %call77 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %58, i32 %conv76) #11, !dbg !10819
  %61 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !10820
  %hw_info278 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %61, i32 0, i32 2, !dbg !10821
  %62 = load i32, i32* %hw_info278, align 8, !dbg !10822
  %or79 = or i32 %62, %call77, !dbg !10822
  store i32 %or79, i32* %hw_info278, align 8, !dbg !10822
  %63 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10823
  %64 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10824
  call void @reserve_release_intr_bandwidth(%struct.ehci_hcd* %63, %struct.ehci_qh* %64, i32 1) #11, !dbg !10825
  br label %done, !dbg !10825

done:                                             ; preds = %cond.end68, %if.then35, %if.then6
  call void @llvm.dbg.label(metadata !10826), !dbg !10827
  %65 = load i32, i32* %status, align 4, !dbg !10828
  store i32 %65, i32* %retval, align 4, !dbg !10829
  br label %return, !dbg !10829

return:                                           ; preds = %done, %if.then
  %66 = load i32, i32* %retval, align 4, !dbg !10830
  ret i32 %66, !dbg !10830
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @qh_refresh(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh) #0 !dbg !10831 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  %qtd = alloca %struct.ehci_qtd*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ehci_qtd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !10832, metadata !DIExpression()), !dbg !10833
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !10834, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.declare(metadata %struct.ehci_qtd** %qtd, metadata !10836, metadata !DIExpression()), !dbg !10837
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10838, metadata !DIExpression()), !dbg !10840
  %0 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10840
  %qtd_list = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %0, i32 0, i32 3, !dbg !10840
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %qtd_list, i32 0, i32 0, !dbg !10840
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10840
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !10840
  store i8* %2, i8** %__mptr, align 8, !dbg !10840
  br label %do.body, !dbg !10840

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10841

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !10840
  %add.ptr = getelementptr i8, i8* %3, i64 -64, !dbg !10840
  %4 = bitcast i8* %add.ptr to %struct.ehci_qtd*, !dbg !10840
  store %struct.ehci_qtd* %4, %struct.ehci_qtd** %tmp, align 8, !dbg !10841
  %5 = load %struct.ehci_qtd*, %struct.ehci_qtd** %tmp, align 8, !dbg !10840
  store %struct.ehci_qtd* %5, %struct.ehci_qtd** %qtd, align 8, !dbg !10843
  %6 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10844
  %hw = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %6, i32 0, i32 0, !dbg !10846
  %7 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !10846
  %hw_token = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %7, i32 0, i32 6, !dbg !10847
  %8 = load i32, i32* %hw_token, align 8, !dbg !10847
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10848
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %9, i32 128) #11, !dbg !10848
  %and = and i32 %8, %call, !dbg !10849
  %tobool = icmp ne i32 %and, 0, !dbg !10849
  br i1 %tobool, label %if.then, label %if.else, !dbg !10850

if.then:                                          ; preds = %do.end
  %10 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10851
  %hw_next = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %10, i32 0, i32 0, !dbg !10853
  %11 = load i32, i32* %hw_next, align 32, !dbg !10853
  %12 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10854
  %hw1 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %12, i32 0, i32 0, !dbg !10855
  %13 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw1, align 8, !dbg !10855
  %hw_qtd_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %13, i32 0, i32 4, !dbg !10856
  store i32 %11, i32* %hw_qtd_next, align 16, !dbg !10857
  %14 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10858
  %should_be_inactive = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %14, i32 0, i32 13, !dbg !10860
  %bf.load = load i8, i8* %should_be_inactive, align 8, !dbg !10860
  %bf.lshr = lshr i8 %bf.load, 3, !dbg !10860
  %bf.clear = and i8 %bf.lshr, 1, !dbg !10860
  %bf.cast = zext i8 %bf.clear to i32, !dbg !10860
  %tobool2 = icmp ne i32 %bf.cast, 0, !dbg !10858
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !10861

if.then3:                                         ; preds = %if.then
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10862
  %call4 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %15) #11, !dbg !10862
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call4, i32 0, i32 0, !dbg !10862
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !10862
  %16 = load %struct.device*, %struct.device** %controller, align 8, !dbg !10862
  %17 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10862
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), %struct.ehci_qh* %17) #13, !dbg !10862
  br label %if.end, !dbg !10862

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end5, !dbg !10863

if.else:                                          ; preds = %do.end
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10864
  %19 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10866
  %20 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !10867
  call void @qh_update(%struct.ehci_hcd* %18, %struct.ehci_qh* %19, %struct.ehci_qtd* %20) #11, !dbg !10868
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.end
  %21 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10869
  %should_be_inactive6 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %21, i32 0, i32 13, !dbg !10870
  %bf.load7 = load i8, i8* %should_be_inactive6, align 8, !dbg !10871
  %bf.clear8 = and i8 %bf.load7, -9, !dbg !10871
  store i8 %bf.clear8, i8* %should_be_inactive6, align 8, !dbg !10871
  ret void, !dbg !10872
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @qh_link_periodic(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh) #0 !dbg !10873 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  %i = alloca i32, align 4
  %period = alloca i32, align 4
  %prev = alloca %union.ehci_shadow*, align 8
  %hw_p = alloca i32*, align 8
  %here = alloca %union.ehci_shadow, align 8
  %type = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !10874, metadata !DIExpression()), !dbg !10875
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !10876, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10878, metadata !DIExpression()), !dbg !10879
  call void @llvm.dbg.declare(metadata i32* %period, metadata !10880, metadata !DIExpression()), !dbg !10881
  %0 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10882
  %ps = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %0, i32 0, i32 7, !dbg !10883
  %period1 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 5, !dbg !10884
  %1 = load i16, i16* %period1, align 4, !dbg !10884
  %conv = zext i16 %1 to i32, !dbg !10882
  store i32 %conv, i32* %period, align 4, !dbg !10881
  %2 = load i32, i32* %period, align 4, !dbg !10885
  %cmp = icmp eq i32 %2, 0, !dbg !10887
  br i1 %cmp, label %if.then, label %if.end, !dbg !10888

if.then:                                          ; preds = %entry
  store i32 1, i32* %period, align 4, !dbg !10889
  br label %if.end, !dbg !10890

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10891
  %ps3 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %3, i32 0, i32 7, !dbg !10893
  %phase = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps3, i32 0, i32 6, !dbg !10894
  %4 = load i16, i16* %phase, align 2, !dbg !10894
  %conv4 = zext i16 %4 to i32, !dbg !10891
  store i32 %conv4, i32* %i, align 4, !dbg !10895
  br label %for.cond, !dbg !10896

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !10897
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10899
  %periodic_size = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 23, !dbg !10900
  %7 = load i32, i32* %periodic_size, align 8, !dbg !10900
  %cmp5 = icmp ult i32 %5, %7, !dbg !10901
  br i1 %cmp5, label %for.body, label %for.end, !dbg !10902

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %union.ehci_shadow** %prev, metadata !10903, metadata !DIExpression()), !dbg !10905
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10906
  %pshadow = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 28, !dbg !10907
  %9 = load %union.ehci_shadow*, %union.ehci_shadow** %pshadow, align 8, !dbg !10907
  %10 = load i32, i32* %i, align 4, !dbg !10908
  %idxprom = zext i32 %10 to i64, !dbg !10906
  %arrayidx = getelementptr %union.ehci_shadow, %union.ehci_shadow* %9, i64 %idxprom, !dbg !10906
  store %union.ehci_shadow* %arrayidx, %union.ehci_shadow** %prev, align 8, !dbg !10905
  call void @llvm.dbg.declare(metadata i32** %hw_p, metadata !10909, metadata !DIExpression()), !dbg !10910
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10911
  %periodic = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %11, i32 0, i32 24, !dbg !10912
  %12 = load i32*, i32** %periodic, align 8, !dbg !10912
  %13 = load i32, i32* %i, align 4, !dbg !10913
  %idxprom7 = zext i32 %13 to i64, !dbg !10911
  %arrayidx8 = getelementptr i32, i32* %12, i64 %idxprom7, !dbg !10911
  store i32* %arrayidx8, i32** %hw_p, align 8, !dbg !10910
  call void @llvm.dbg.declare(metadata %union.ehci_shadow* %here, metadata !10914, metadata !DIExpression()), !dbg !10915
  %14 = load %union.ehci_shadow*, %union.ehci_shadow** %prev, align 8, !dbg !10916
  %15 = bitcast %union.ehci_shadow* %here to i8*, !dbg !10917
  %16 = bitcast %union.ehci_shadow* %14 to i8*, !dbg !10917
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 8, i1 false), !dbg !10917
  call void @llvm.dbg.declare(metadata i32* %type, metadata !10918, metadata !DIExpression()), !dbg !10919
  store i32 0, i32* %type, align 4, !dbg !10919
  br label %while.cond, !dbg !10920

while.cond:                                       ; preds = %if.end13, %for.body
  %ptr = bitcast %union.ehci_shadow* %here to i8**, !dbg !10921
  %17 = load i8*, i8** %ptr, align 8, !dbg !10921
  %tobool = icmp ne i8* %17, null, !dbg !10920
  br i1 %tobool, label %while.body, label %while.end, !dbg !10920

while.body:                                       ; preds = %while.cond
  %18 = load i32*, i32** %hw_p, align 8, !dbg !10922
  %19 = load i32, i32* %18, align 4, !dbg !10922
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10922
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %20, i32 6) #11, !dbg !10922
  %and = and i32 %19, %call, !dbg !10922
  store i32 %and, i32* %type, align 4, !dbg !10924
  %21 = load i32, i32* %type, align 4, !dbg !10925
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10927
  %call9 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %22, i32 2) #11, !dbg !10928
  %cmp10 = icmp eq i32 %21, %call9, !dbg !10929
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !10930

if.then12:                                        ; preds = %while.body
  br label %while.end, !dbg !10931

if.end13:                                         ; preds = %while.body
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10932
  %24 = load %union.ehci_shadow*, %union.ehci_shadow** %prev, align 8, !dbg !10933
  %25 = load i32, i32* %type, align 4, !dbg !10934
  %call14 = call %union.ehci_shadow* @periodic_next_shadow(%struct.ehci_hcd* %23, %union.ehci_shadow* %24, i32 %25) #11, !dbg !10935
  store %union.ehci_shadow* %call14, %union.ehci_shadow** %prev, align 8, !dbg !10936
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !10937
  %27 = load i32, i32* %type, align 4, !dbg !10938
  %call15 = call i32* @shadow_next_periodic(%struct.ehci_hcd* %26, %union.ehci_shadow* %here, i32 %27) #11, !dbg !10939
  store i32* %call15, i32** %hw_p, align 8, !dbg !10940
  %28 = load %union.ehci_shadow*, %union.ehci_shadow** %prev, align 8, !dbg !10941
  %29 = bitcast %union.ehci_shadow* %here to i8*, !dbg !10942
  %30 = bitcast %union.ehci_shadow* %28 to i8*, !dbg !10942
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 8, i1 false), !dbg !10942
  br label %while.cond, !dbg !10920, !llvm.loop !10943

while.end:                                        ; preds = %if.then12, %while.cond
  br label %while.cond16, !dbg !10945

while.cond16:                                     ; preds = %if.end33, %while.end
  %ptr17 = bitcast %union.ehci_shadow* %here to i8**, !dbg !10946
  %31 = load i8*, i8** %ptr17, align 8, !dbg !10946
  %tobool18 = icmp ne i8* %31, null, !dbg !10947
  br i1 %tobool18, label %land.rhs, label %land.end, !dbg !10948

land.rhs:                                         ; preds = %while.cond16
  %32 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10949
  %qh19 = bitcast %union.ehci_shadow* %here to %struct.ehci_qh**, !dbg !10950
  %33 = load %struct.ehci_qh*, %struct.ehci_qh** %qh19, align 8, !dbg !10950
  %cmp20 = icmp ne %struct.ehci_qh* %32, %33, !dbg !10951
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond16
  %34 = phi i1 [ false, %while.cond16 ], [ %cmp20, %land.rhs ], !dbg !10952
  br i1 %34, label %while.body22, label %while.end36, !dbg !10945

while.body22:                                     ; preds = %land.end
  %35 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10953
  %ps23 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %35, i32 0, i32 7, !dbg !10956
  %period24 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps23, i32 0, i32 5, !dbg !10957
  %36 = load i16, i16* %period24, align 4, !dbg !10957
  %conv25 = zext i16 %36 to i32, !dbg !10953
  %qh26 = bitcast %union.ehci_shadow* %here to %struct.ehci_qh**, !dbg !10958
  %37 = load %struct.ehci_qh*, %struct.ehci_qh** %qh26, align 8, !dbg !10958
  %ps27 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %37, i32 0, i32 7, !dbg !10959
  %period28 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps27, i32 0, i32 5, !dbg !10960
  %38 = load i16, i16* %period28, align 4, !dbg !10960
  %conv29 = zext i16 %38 to i32, !dbg !10961
  %cmp30 = icmp sgt i32 %conv25, %conv29, !dbg !10962
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !10963

if.then32:                                        ; preds = %while.body22
  br label %while.end36, !dbg !10964

if.end33:                                         ; preds = %while.body22
  %qh34 = bitcast %union.ehci_shadow* %here to %struct.ehci_qh**, !dbg !10965
  %39 = load %struct.ehci_qh*, %struct.ehci_qh** %qh34, align 8, !dbg !10965
  %qh_next = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %39, i32 0, i32 2, !dbg !10966
  store %union.ehci_shadow* %qh_next, %union.ehci_shadow** %prev, align 8, !dbg !10967
  %qh35 = bitcast %union.ehci_shadow* %here to %struct.ehci_qh**, !dbg !10968
  %40 = load %struct.ehci_qh*, %struct.ehci_qh** %qh35, align 8, !dbg !10968
  %hw = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %40, i32 0, i32 0, !dbg !10969
  %41 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !10969
  %hw_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %41, i32 0, i32 0, !dbg !10970
  store i32* %hw_next, i32** %hw_p, align 8, !dbg !10971
  %42 = load %union.ehci_shadow*, %union.ehci_shadow** %prev, align 8, !dbg !10972
  %43 = bitcast %union.ehci_shadow* %here to i8*, !dbg !10973
  %44 = bitcast %union.ehci_shadow* %42 to i8*, !dbg !10973
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 8, i1 false), !dbg !10973
  br label %while.cond16, !dbg !10945, !llvm.loop !10974

while.end36:                                      ; preds = %if.then32, %land.end
  %45 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10976
  %qh37 = bitcast %union.ehci_shadow* %here to %struct.ehci_qh**, !dbg !10978
  %46 = load %struct.ehci_qh*, %struct.ehci_qh** %qh37, align 8, !dbg !10978
  %cmp38 = icmp ne %struct.ehci_qh* %45, %46, !dbg !10979
  br i1 %cmp38, label %if.then40, label %if.end52, !dbg !10980

if.then40:                                        ; preds = %while.end36
  %47 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10981
  %qh_next41 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %47, i32 0, i32 2, !dbg !10983
  %48 = bitcast %union.ehci_shadow* %qh_next41 to i8*, !dbg !10984
  %49 = bitcast %union.ehci_shadow* %here to i8*, !dbg !10984
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 8, i1 false), !dbg !10984
  %qh42 = bitcast %union.ehci_shadow* %here to %struct.ehci_qh**, !dbg !10985
  %50 = load %struct.ehci_qh*, %struct.ehci_qh** %qh42, align 8, !dbg !10985
  %tobool43 = icmp ne %struct.ehci_qh* %50, null, !dbg !10987
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !10988

if.then44:                                        ; preds = %if.then40
  %51 = load i32*, i32** %hw_p, align 8, !dbg !10989
  %52 = load i32, i32* %51, align 4, !dbg !10990
  %53 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10991
  %hw45 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %53, i32 0, i32 0, !dbg !10992
  %54 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw45, align 8, !dbg !10992
  %hw_next46 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %54, i32 0, i32 0, !dbg !10993
  store i32 %52, i32* %hw_next46, align 32, !dbg !10994
  br label %if.end47, !dbg !10991

if.end47:                                         ; preds = %if.then44, %if.then40
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10995, !srcloc !10996
  %55 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !10997
  %56 = load %union.ehci_shadow*, %union.ehci_shadow** %prev, align 8, !dbg !10998
  %qh48 = bitcast %union.ehci_shadow* %56 to %struct.ehci_qh**, !dbg !10999
  store %struct.ehci_qh* %55, %struct.ehci_qh** %qh48, align 8, !dbg !11000
  %57 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11001
  %58 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11001
  %qh_dma = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %58, i32 0, i32 1, !dbg !11001
  %59 = load i64, i64* %qh_dma, align 8, !dbg !11001
  %conv49 = trunc i64 %59 to i32, !dbg !11001
  %and50 = and i32 %conv49, -32, !dbg !11001
  %or = or i32 %and50, 2, !dbg !11001
  %call51 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %57, i32 %or) #11, !dbg !11001
  %60 = load i32*, i32** %hw_p, align 8, !dbg !11002
  store i32 %call51, i32* %60, align 4, !dbg !11003
  br label %if.end52, !dbg !11004

if.end52:                                         ; preds = %if.end47, %while.end36
  br label %for.inc, !dbg !11005

for.inc:                                          ; preds = %if.end52
  %61 = load i32, i32* %period, align 4, !dbg !11006
  %62 = load i32, i32* %i, align 4, !dbg !11007
  %add = add i32 %62, %61, !dbg !11007
  store i32 %add, i32* %i, align 4, !dbg !11007
  br label %for.cond, !dbg !11008, !llvm.loop !11009

for.end:                                          ; preds = %for.cond
  %63 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11011
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %63, i32 0, i32 9, !dbg !11012
  store i8 1, i8* %qh_state, align 4, !dbg !11013
  %64 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11014
  %xacterrs = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %64, i32 0, i32 10, !dbg !11015
  store i8 0, i8* %xacterrs, align 1, !dbg !11016
  %65 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11017
  %unlink_reason = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %65, i32 0, i32 11, !dbg !11018
  store i8 0, i8* %unlink_reason, align 2, !dbg !11019
  %66 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11020
  %ps53 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %66, i32 0, i32 7, !dbg !11021
  %bw_period = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps53, i32 0, i32 12, !dbg !11022
  %67 = load i8, i8* %bw_period, align 1, !dbg !11022
  %conv54 = zext i8 %67 to i32, !dbg !11020
  %tobool55 = icmp ne i32 %conv54, 0, !dbg !11020
  br i1 %tobool55, label %cond.true, label %cond.false, !dbg !11020

cond.true:                                        ; preds = %for.end
  %68 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11023
  %ps56 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %68, i32 0, i32 7, !dbg !11024
  %usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps56, i32 0, i32 9, !dbg !11025
  %69 = load i8, i8* %usecs, align 2, !dbg !11025
  %conv57 = zext i8 %69 to i32, !dbg !11023
  %70 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11026
  %ps58 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %70, i32 0, i32 7, !dbg !11027
  %c_usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps58, i32 0, i32 10, !dbg !11028
  %71 = load i8, i8* %c_usecs, align 1, !dbg !11028
  %conv59 = zext i8 %71 to i32, !dbg !11026
  %add60 = add i32 %conv57, %conv59, !dbg !11029
  %72 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11030
  %ps61 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %72, i32 0, i32 7, !dbg !11031
  %bw_period62 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps61, i32 0, i32 12, !dbg !11032
  %73 = load i8, i8* %bw_period62, align 1, !dbg !11032
  %conv63 = zext i8 %73 to i32, !dbg !11030
  %div = sdiv i32 %add60, %conv63, !dbg !11033
  br label %cond.end, !dbg !11020

cond.false:                                       ; preds = %for.end
  %74 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11034
  %ps64 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %74, i32 0, i32 7, !dbg !11035
  %usecs65 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps64, i32 0, i32 9, !dbg !11036
  %75 = load i8, i8* %usecs65, align 2, !dbg !11036
  %conv66 = zext i8 %75 to i32, !dbg !11034
  %mul = mul i32 %conv66, 8, !dbg !11037
  br label %cond.end, !dbg !11020

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %div, %cond.true ], [ %mul, %cond.false ], !dbg !11020
  %76 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11038
  %call67 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %76) #11, !dbg !11039
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call67, i32 0, i32 0, !dbg !11040
  %bandwidth_allocated = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 13, !dbg !11041
  %77 = load i32, i32* %bandwidth_allocated, align 8, !dbg !11042
  %add68 = add i32 %77, %cond, !dbg !11042
  store i32 %add68, i32* %bandwidth_allocated, align 8, !dbg !11042
  %78 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11043
  %intr_node = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %78, i32 0, i32 4, !dbg !11044
  %79 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11045
  %intr_qh_list = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %79, i32 0, i32 26, !dbg !11046
  call void @list_add(%struct.list_head* %intr_node, %struct.list_head* %intr_qh_list) #11, !dbg !11047
  %80 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11048
  %intr_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %80, i32 0, i32 35, !dbg !11049
  %81 = load i32, i32* %intr_count, align 8, !dbg !11050
  %inc = add i32 %81, 1, !dbg !11050
  store i32 %inc, i32* %intr_count, align 8, !dbg !11050
  %82 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11051
  call void @enable_periodic(%struct.ehci_hcd* %82) #11, !dbg !11052
  ret void, !dbg !11053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disable_periodic(%struct.ehci_hcd* %ehci) #0 !dbg !11054 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !11055, metadata !DIExpression()), !dbg !11056
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11057
  %periodic_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 37, !dbg !11059
  %1 = load i32, i32* %periodic_count, align 8, !dbg !11060
  %dec = add i32 %1, -1, !dbg !11060
  store i32 %dec, i32* %periodic_count, align 8, !dbg !11060
  %tobool = icmp ne i32 %dec, 0, !dbg !11060
  br i1 %tobool, label %if.then, label %if.end, !dbg !11061

if.then:                                          ; preds = %entry
  br label %return, !dbg !11062

if.end:                                           ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11063
  call void @ehci_poll_PSS(%struct.ehci_hcd* %2) #11, !dbg !11064
  br label %return, !dbg !11065

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11065
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_urb_done(%struct.ehci_hcd* %ehci, %struct.urb* %urb, i32 %status) #0 !dbg !11066 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %status.addr = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !11069, metadata !DIExpression()), !dbg !11070
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !11071, metadata !DIExpression()), !dbg !11072
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !11073, metadata !DIExpression()), !dbg !11074
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11075
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 10, !dbg !11075
  %1 = load i32, i32* %pipe, align 8, !dbg !11075
  %shr = lshr i32 %1, 30, !dbg !11075
  %and = and i32 %shr, 3, !dbg !11075
  %cmp = icmp eq i32 %and, 1, !dbg !11077
  br i1 %cmp, label %if.then, label %if.end, !dbg !11078

if.then:                                          ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11079
  %call = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %2) #11, !dbg !11081
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call, i32 0, i32 0, !dbg !11082
  %bandwidth_int_reqs = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 14, !dbg !11083
  %3 = load i32, i32* %bandwidth_int_reqs, align 4, !dbg !11084
  %dec = add i32 %3, -1, !dbg !11084
  store i32 %dec, i32* %bandwidth_int_reqs, align 4, !dbg !11084
  br label %if.end, !dbg !11085

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11086
  %unlinked = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 1, !dbg !11086
  %5 = load i32, i32* %unlinked, align 4, !dbg !11086
  %tobool = icmp ne i32 %5, 0, !dbg !11086
  %lnot = xor i1 %tobool, true, !dbg !11086
  %lnot1 = xor i1 %lnot, true, !dbg !11086
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11086
  %conv = sext i32 %lnot.ext to i64, !dbg !11086
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11086
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !11088

if.then3:                                         ; preds = %if.end
  br label %do.body, !dbg !11089

do.body:                                          ; preds = %if.then3
  br label %do.end, !dbg !11091

do.end:                                           ; preds = %do.body
  br label %if.end12, !dbg !11093

if.else:                                          ; preds = %if.end
  %6 = load i32, i32* %status.addr, align 4, !dbg !11094
  %cmp4 = icmp eq i32 %6, -115, !dbg !11097
  br i1 %cmp4, label %if.then8, label %lor.lhs.false, !dbg !11098

lor.lhs.false:                                    ; preds = %if.else
  %7 = load i32, i32* %status.addr, align 4, !dbg !11099
  %cmp6 = icmp eq i32 %7, -121, !dbg !11100
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !11101

if.then8:                                         ; preds = %lor.lhs.false, %if.else
  store i32 0, i32* %status.addr, align 4, !dbg !11102
  br label %if.end9, !dbg !11103

if.end9:                                          ; preds = %if.then8, %lor.lhs.false
  br label %do.body10, !dbg !11104

do.body10:                                        ; preds = %if.end9
  br label %do.end11, !dbg !11105

do.end11:                                         ; preds = %do.body10
  br label %if.end12

if.end12:                                         ; preds = %do.end11, %do.end
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11107
  %call13 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %8) #11, !dbg !11108
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11109
  call void @usb_hcd_unlink_urb_from_ep(%struct.usb_hcd* %call13, %struct.urb* %9) #11, !dbg !11110
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11111
  %call14 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %10) #11, !dbg !11112
  %11 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11113
  %12 = load i32, i32* %status.addr, align 4, !dbg !11114
  call void @usb_hcd_giveback_urb(%struct.usb_hcd* %call14, %struct.urb* %11, i32 %12) #11, !dbg !11115
  ret void, !dbg !11116
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_qtd_free(%struct.ehci_hcd* %ehci, %struct.ehci_qtd* %qtd) #0 !dbg !11117 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qtd.addr = alloca %struct.ehci_qtd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !11120, metadata !DIExpression()), !dbg !11121
  store %struct.ehci_qtd* %qtd, %struct.ehci_qtd** %qtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qtd** %qtd.addr, metadata !11122, metadata !DIExpression()), !dbg !11123
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11124
  %qtd_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 51, !dbg !11125
  %1 = load %struct.dma_pool*, %struct.dma_pool** %qtd_pool, align 8, !dbg !11125
  %2 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !11126
  %3 = bitcast %struct.ehci_qtd* %2 to i8*, !dbg !11126
  %4 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !11127
  %qtd_dma = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %4, i32 0, i32 5, !dbg !11128
  %5 = load i64, i64* %qtd_dma, align 8, !dbg !11128
  call void @dma_pool_free(%struct.dma_pool* %1, i8* %3, i64 %5) #11, !dbg !11129
  ret void, !dbg !11130
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hc32_to_cpu(%struct.ehci_hcd* %ehci, i32 %x) #0 !dbg !11131 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %x.addr = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !11135, metadata !DIExpression()), !dbg !11136
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !11137, metadata !DIExpression()), !dbg !11138
  %0 = load i32, i32* %x.addr, align 4, !dbg !11139
  ret i32 %0, !dbg !11140
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_clear_tt_buffer(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh, %struct.urb* %urb, i32 %token) #0 !dbg !11141 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %token.addr = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !11144, metadata !DIExpression()), !dbg !11145
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !11146, metadata !DIExpression()), !dbg !11147
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !11148, metadata !DIExpression()), !dbg !11149
  store i32 %token, i32* %token.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %token.addr, metadata !11150, metadata !DIExpression()), !dbg !11151
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11152
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 8, !dbg !11154
  %1 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !11154
  %tt = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 7, !dbg !11155
  %2 = load %struct.usb_tt*, %struct.usb_tt** %tt, align 8, !dbg !11155
  %tobool = icmp ne %struct.usb_tt* %2, null, !dbg !11152
  br i1 %tobool, label %land.lhs.true, label %if.end8, !dbg !11156

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11157
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %3, i32 0, i32 10, !dbg !11157
  %4 = load i32, i32* %pipe, align 8, !dbg !11157
  %shr = lshr i32 %4, 30, !dbg !11157
  %and = and i32 %shr, 3, !dbg !11157
  %cmp = icmp eq i32 %and, 1, !dbg !11157
  br i1 %cmp, label %if.end8, label %land.lhs.true1, !dbg !11158

land.lhs.true1:                                   ; preds = %land.lhs.true
  %5 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11159
  %clearing_tt = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %5, i32 0, i32 13, !dbg !11160
  %bf.load = load i8, i8* %clearing_tt, align 8, !dbg !11160
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !11160
  %bf.clear = and i8 %bf.lshr, 1, !dbg !11160
  %bf.cast = zext i8 %bf.clear to i32, !dbg !11160
  %tobool2 = icmp ne i32 %bf.cast, 0, !dbg !11159
  br i1 %tobool2, label %if.end8, label %if.then, !dbg !11161

if.then:                                          ; preds = %land.lhs.true1
  %6 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11162
  %call = call i32 @usb_hub_clear_tt_buffer(%struct.urb* %6) #11, !dbg !11167
  %cmp3 = icmp eq i32 %call, 0, !dbg !11168
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11169

if.then4:                                         ; preds = %if.then
  %7 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11170
  %clearing_tt5 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %7, i32 0, i32 13, !dbg !11171
  %bf.load6 = load i8, i8* %clearing_tt5, align 8, !dbg !11172
  %bf.clear7 = and i8 %bf.load6, -3, !dbg !11172
  %bf.set = or i8 %bf.clear7, 2, !dbg !11172
  store i8 %bf.set, i8* %clearing_tt5, align 8, !dbg !11172
  br label %if.end, !dbg !11170

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end8, !dbg !11173

if.end8:                                          ; preds = %if.end, %land.lhs.true1, %land.lhs.true, %entry
  ret void, !dbg !11174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @qtd_copy_status(%struct.ehci_hcd* %ehci, %struct.urb* %urb, i64 %length, i32 %token) #0 !dbg !11175 {
entry:
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %length.addr = alloca i64, align 8
  %token.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !11178, metadata !DIExpression()), !dbg !11179
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !11180, metadata !DIExpression()), !dbg !11181
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !11182, metadata !DIExpression()), !dbg !11183
  store i32 %token, i32* %token.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %token.addr, metadata !11184, metadata !DIExpression()), !dbg !11185
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11186, metadata !DIExpression()), !dbg !11187
  store i32 -115, i32* %status, align 4, !dbg !11187
  %0 = load i32, i32* %token.addr, align 4, !dbg !11188
  %shr = lshr i32 %0, 8, !dbg !11188
  %and = and i32 %shr, 3, !dbg !11188
  %cmp = icmp ne i32 %and, 2, !dbg !11188
  %lnot = xor i1 %cmp, true, !dbg !11188
  %lnot1 = xor i1 %lnot, true, !dbg !11188
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11188
  %conv = sext i32 %lnot.ext to i64, !dbg !11188
  %tobool = icmp ne i64 %conv, 0, !dbg !11188
  br i1 %tobool, label %if.then, label %if.end, !dbg !11190

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %length.addr, align 8, !dbg !11191
  %2 = load i32, i32* %token.addr, align 4, !dbg !11192
  %shr2 = lshr i32 %2, 16, !dbg !11192
  %and3 = and i32 %shr2, 32767, !dbg !11192
  %conv4 = zext i32 %and3 to i64, !dbg !11192
  %sub = sub i64 %1, %conv4, !dbg !11193
  %3 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11194
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %3, i32 0, i32 20, !dbg !11195
  %4 = load i32, i32* %actual_length, align 4, !dbg !11196
  %conv5 = zext i32 %4 to i64, !dbg !11196
  %add = add i64 %conv5, %sub, !dbg !11196
  %conv6 = trunc i64 %add to i32, !dbg !11196
  store i32 %conv6, i32* %actual_length, align 4, !dbg !11196
  br label %if.end, !dbg !11194

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !11197
  %unlinked = getelementptr inbounds %struct.urb, %struct.urb* %5, i32 0, i32 1, !dbg !11197
  %6 = load i32, i32* %unlinked, align 4, !dbg !11197
  %tobool7 = icmp ne i32 %6, 0, !dbg !11197
  %lnot8 = xor i1 %tobool7, true, !dbg !11197
  %lnot10 = xor i1 %lnot8, true, !dbg !11197
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !11197
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !11197
  %tobool13 = icmp ne i64 %conv12, 0, !dbg !11197
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !11199

if.then14:                                        ; preds = %if.end
  %7 = load i32, i32* %status, align 4, !dbg !11200
  store i32 %7, i32* %retval, align 4, !dbg !11201
  br label %return, !dbg !11201

if.end15:                                         ; preds = %if.end
  %8 = load i32, i32* %token.addr, align 4, !dbg !11202
  %shr16 = lshr i32 %8, 16, !dbg !11202
  %and17 = and i32 %shr16, 32767, !dbg !11202
  %cmp18 = icmp ne i32 %and17, 0, !dbg !11202
  br i1 %cmp18, label %land.rhs, label %land.end, !dbg !11202

land.rhs:                                         ; preds = %if.end15
  %9 = load i32, i32* %token.addr, align 4, !dbg !11202
  %shr20 = lshr i32 %9, 8, !dbg !11202
  %and21 = and i32 %shr20, 3, !dbg !11202
  %cmp22 = icmp eq i32 %and21, 1, !dbg !11202
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end15
  %10 = phi i1 [ false, %if.end15 ], [ %cmp22, %land.rhs ], !dbg !11204
  %lnot24 = xor i1 %10, true, !dbg !11202
  %lnot26 = xor i1 %lnot24, true, !dbg !11202
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !11202
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !11202
  %tobool29 = icmp ne i64 %conv28, 0, !dbg !11202
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !11205

if.then30:                                        ; preds = %land.end
  store i32 -121, i32* %status, align 4, !dbg !11206
  br label %if.end31, !dbg !11207

if.end31:                                         ; preds = %if.then30, %land.end
  %11 = load i32, i32* %token.addr, align 4, !dbg !11208
  %and32 = and i32 %11, 64, !dbg !11210
  %tobool33 = icmp ne i32 %and32, 0, !dbg !11210
  br i1 %tobool33, label %if.then34, label %if.end73, !dbg !11211

if.then34:                                        ; preds = %if.end31
  %12 = load i32, i32* %token.addr, align 4, !dbg !11212
  %and35 = and i32 %12, 16, !dbg !11215
  %tobool36 = icmp ne i32 %and35, 0, !dbg !11215
  br i1 %tobool36, label %if.then37, label %if.else, !dbg !11216

if.then37:                                        ; preds = %if.then34
  store i32 -75, i32* %status, align 4, !dbg !11217
  br label %if.end72, !dbg !11219

if.else:                                          ; preds = %if.then34
  %13 = load i32, i32* %token.addr, align 4, !dbg !11220
  %and38 = and i32 %13, 4, !dbg !11222
  %tobool39 = icmp ne i32 %and38, 0, !dbg !11222
  br i1 %tobool39, label %land.lhs.true, label %if.else45, !dbg !11223

land.lhs.true:                                    ; preds = %if.else
  %14 = load i32, i32* %token.addr, align 4, !dbg !11224
  %shr40 = lshr i32 %14, 8, !dbg !11224
  %and41 = and i32 %shr40, 3, !dbg !11224
  %cmp42 = icmp eq i32 %and41, 1, !dbg !11225
  br i1 %cmp42, label %if.then44, label %if.else45, !dbg !11226

if.then44:                                        ; preds = %land.lhs.true
  store i32 -71, i32* %status, align 4, !dbg !11227
  br label %if.end71, !dbg !11229

if.else45:                                        ; preds = %land.lhs.true, %if.else
  %15 = load i32, i32* %token.addr, align 4, !dbg !11230
  %shr46 = lshr i32 %15, 10, !dbg !11230
  %and47 = and i32 %shr46, 3, !dbg !11230
  %tobool48 = icmp ne i32 %and47, 0, !dbg !11230
  br i1 %tobool48, label %if.then49, label %if.else50, !dbg !11232

if.then49:                                        ; preds = %if.else45
  store i32 -32, i32* %status, align 4, !dbg !11233
  br label %if.end70, !dbg !11235

if.else50:                                        ; preds = %if.else45
  %16 = load i32, i32* %token.addr, align 4, !dbg !11236
  %and51 = and i32 %16, 4, !dbg !11238
  %tobool52 = icmp ne i32 %and51, 0, !dbg !11238
  br i1 %tobool52, label %if.then53, label %if.else54, !dbg !11239

if.then53:                                        ; preds = %if.else50
  store i32 -71, i32* %status, align 4, !dbg !11240
  br label %if.end69, !dbg !11242

if.else54:                                        ; preds = %if.else50
  %17 = load i32, i32* %token.addr, align 4, !dbg !11243
  %and55 = and i32 %17, 32, !dbg !11245
  %tobool56 = icmp ne i32 %and55, 0, !dbg !11245
  br i1 %tobool56, label %if.then57, label %if.else62, !dbg !11246

if.then57:                                        ; preds = %if.else54
  %18 = load i32, i32* %token.addr, align 4, !dbg !11247
  %shr58 = lshr i32 %18, 8, !dbg !11247
  %and59 = and i32 %shr58, 3, !dbg !11247
  %cmp60 = icmp eq i32 %and59, 1, !dbg !11249
  %19 = zext i1 %cmp60 to i64, !dbg !11250
  %cond = select i1 %cmp60, i32 -63, i32 -70, !dbg !11250
  store i32 %cond, i32* %status, align 4, !dbg !11251
  br label %if.end68, !dbg !11252

if.else62:                                        ; preds = %if.else54
  %20 = load i32, i32* %token.addr, align 4, !dbg !11253
  %and63 = and i32 %20, 8, !dbg !11255
  %tobool64 = icmp ne i32 %and63, 0, !dbg !11255
  br i1 %tobool64, label %if.then65, label %if.else66, !dbg !11256

if.then65:                                        ; preds = %if.else62
  store i32 -71, i32* %status, align 4, !dbg !11257
  br label %if.end67, !dbg !11259

if.else66:                                        ; preds = %if.else62
  store i32 -71, i32* %status, align 4, !dbg !11260
  br label %if.end67

if.end67:                                         ; preds = %if.else66, %if.then65
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then57
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then53
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then49
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then44
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then37
  br label %if.end73, !dbg !11262

if.end73:                                         ; preds = %if.end72, %if.end31
  %21 = load i32, i32* %status, align 4, !dbg !11263
  store i32 %21, i32* %retval, align 4, !dbg !11264
  br label %return, !dbg !11264

return:                                           ; preds = %if.end73, %if.then14
  %22 = load i32, i32* %retval, align 4, !dbg !11265
  ret i32 %22, !dbg !11265
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !11266 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11267, metadata !DIExpression()), !dbg !11268
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11269
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !11270
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11271
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !11272
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !11273
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11274
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !11275
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !11276
  ret void, !dbg !11277
}

; Function Attrs: noredzone
declare dso_local void @usb_hcd_unlink_urb_from_ep(%struct.usb_hcd*, %struct.urb*) #2

; Function Attrs: noredzone
declare dso_local void @usb_hcd_giveback_urb(%struct.usb_hcd*, %struct.urb*, i32) #2

; Function Attrs: noredzone
declare dso_local void @dma_pool_free(%struct.dma_pool*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @usb_hub_clear_tt_buffer(%struct.urb*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ehci_tt* @find_tt(%struct.usb_device* %udev) #0 !dbg !11278 {
entry:
  %retval = alloca %struct.ehci_tt*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %utt = alloca %struct.usb_tt*, align 8
  %tt1 = alloca %struct.ehci_tt*, align 8
  %tt_index = alloca %struct.ehci_tt**, align 8
  %ptt = alloca %struct.ehci_tt**, align 8
  %port = alloca i32, align 4
  %allocated_index = alloca i8, align 1
  %ehci = alloca %struct.ehci_hcd*, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !11281, metadata !DIExpression()), !dbg !11282
  call void @llvm.dbg.declare(metadata %struct.usb_tt** %utt, metadata !11283, metadata !DIExpression()), !dbg !11284
  %0 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11285
  %tt = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 7, !dbg !11286
  %1 = load %struct.usb_tt*, %struct.usb_tt** %tt, align 8, !dbg !11286
  store %struct.usb_tt* %1, %struct.usb_tt** %utt, align 8, !dbg !11284
  call void @llvm.dbg.declare(metadata %struct.ehci_tt** %tt1, metadata !11287, metadata !DIExpression()), !dbg !11288
  call void @llvm.dbg.declare(metadata %struct.ehci_tt*** %tt_index, metadata !11289, metadata !DIExpression()), !dbg !11290
  call void @llvm.dbg.declare(metadata %struct.ehci_tt*** %ptt, metadata !11291, metadata !DIExpression()), !dbg !11292
  call void @llvm.dbg.declare(metadata i32* %port, metadata !11293, metadata !DIExpression()), !dbg !11294
  call void @llvm.dbg.declare(metadata i8* %allocated_index, metadata !11295, metadata !DIExpression()), !dbg !11296
  store i8 0, i8* %allocated_index, align 1, !dbg !11296
  %2 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !11297
  %tobool = icmp ne %struct.usb_tt* %2, null, !dbg !11297
  br i1 %tobool, label %if.end, label %if.then, !dbg !11299

if.then:                                          ; preds = %entry
  store %struct.ehci_tt* null, %struct.ehci_tt** %retval, align 8, !dbg !11300
  br label %return, !dbg !11300

if.end:                                           ; preds = %entry
  store %struct.ehci_tt** null, %struct.ehci_tt*** %tt_index, align 8, !dbg !11301
  %3 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !11302
  %multi = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %3, i32 0, i32 1, !dbg !11304
  %4 = load i32, i32* %multi, align 8, !dbg !11304
  %tobool2 = icmp ne i32 %4, 0, !dbg !11302
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !11305

if.then3:                                         ; preds = %if.end
  %5 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !11306
  %hcpriv = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %5, i32 0, i32 3, !dbg !11308
  %6 = load i8*, i8** %hcpriv, align 8, !dbg !11308
  %7 = bitcast i8* %6 to %struct.ehci_tt**, !dbg !11306
  store %struct.ehci_tt** %7, %struct.ehci_tt*** %tt_index, align 8, !dbg !11309
  %8 = load %struct.ehci_tt**, %struct.ehci_tt*** %tt_index, align 8, !dbg !11310
  %tobool4 = icmp ne %struct.ehci_tt** %8, null, !dbg !11310
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !11312

if.then5:                                         ; preds = %if.then3
  %9 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !11313
  %hub = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %9, i32 0, i32 0, !dbg !11315
  %10 = load %struct.usb_device*, %struct.usb_device** %hub, align 8, !dbg !11315
  %maxchild = getelementptr inbounds %struct.usb_device, %struct.usb_device* %10, i32 0, i32 35, !dbg !11316
  %11 = load i32, i32* %maxchild, align 8, !dbg !11316
  %conv = sext i32 %11 to i64, !dbg !11313
  %call = call i8* @kcalloc(i64 %conv, i64 8, i32 2592) #11, !dbg !11317
  %12 = bitcast i8* %call to %struct.ehci_tt**, !dbg !11317
  store %struct.ehci_tt** %12, %struct.ehci_tt*** %tt_index, align 8, !dbg !11318
  %13 = load %struct.ehci_tt**, %struct.ehci_tt*** %tt_index, align 8, !dbg !11319
  %tobool6 = icmp ne %struct.ehci_tt** %13, null, !dbg !11319
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !11321

if.then7:                                         ; preds = %if.then5
  %call8 = call i8* @ERR_PTR(i64 -12) #11, !dbg !11322
  %14 = bitcast i8* %call8 to %struct.ehci_tt*, !dbg !11322
  store %struct.ehci_tt* %14, %struct.ehci_tt** %retval, align 8, !dbg !11323
  br label %return, !dbg !11323

if.end9:                                          ; preds = %if.then5
  %15 = load %struct.ehci_tt**, %struct.ehci_tt*** %tt_index, align 8, !dbg !11324
  %16 = bitcast %struct.ehci_tt** %15 to i8*, !dbg !11324
  %17 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !11325
  %hcpriv10 = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %17, i32 0, i32 3, !dbg !11326
  store i8* %16, i8** %hcpriv10, align 8, !dbg !11327
  store i8 1, i8* %allocated_index, align 1, !dbg !11328
  br label %if.end11, !dbg !11329

if.end11:                                         ; preds = %if.end9, %if.then3
  %18 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11330
  %ttport = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 8, !dbg !11331
  %19 = load i32, i32* %ttport, align 8, !dbg !11331
  %sub = sub i32 %19, 1, !dbg !11332
  store i32 %sub, i32* %port, align 4, !dbg !11333
  %20 = load %struct.ehci_tt**, %struct.ehci_tt*** %tt_index, align 8, !dbg !11334
  %21 = load i32, i32* %port, align 4, !dbg !11335
  %idxprom = zext i32 %21 to i64, !dbg !11334
  %arrayidx = getelementptr %struct.ehci_tt*, %struct.ehci_tt** %20, i64 %idxprom, !dbg !11334
  store %struct.ehci_tt** %arrayidx, %struct.ehci_tt*** %ptt, align 8, !dbg !11336
  br label %if.end13, !dbg !11337

if.else:                                          ; preds = %if.end
  store i32 0, i32* %port, align 4, !dbg !11338
  %22 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !11340
  %hcpriv12 = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %22, i32 0, i32 3, !dbg !11341
  %23 = bitcast i8** %hcpriv12 to %struct.ehci_tt**, !dbg !11342
  store %struct.ehci_tt** %23, %struct.ehci_tt*** %ptt, align 8, !dbg !11343
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.end11
  %24 = load %struct.ehci_tt**, %struct.ehci_tt*** %ptt, align 8, !dbg !11344
  %25 = load %struct.ehci_tt*, %struct.ehci_tt** %24, align 8, !dbg !11345
  store %struct.ehci_tt* %25, %struct.ehci_tt** %tt1, align 8, !dbg !11346
  %26 = load %struct.ehci_tt*, %struct.ehci_tt** %tt1, align 8, !dbg !11347
  %tobool14 = icmp ne %struct.ehci_tt* %26, null, !dbg !11347
  br i1 %tobool14, label %if.end28, label %if.then15, !dbg !11349

if.then15:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !11350, metadata !DIExpression()), !dbg !11352
  %27 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !11353
  %bus = getelementptr inbounds %struct.usb_device, %struct.usb_device* %27, i32 0, i32 12, !dbg !11354
  %28 = load %struct.usb_bus*, %struct.usb_bus** %bus, align 8, !dbg !11354
  %call16 = call %struct.usb_hcd* @bus_to_hcd(%struct.usb_bus* %28) #11, !dbg !11355
  %call17 = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %call16) #11, !dbg !11356
  store %struct.ehci_hcd* %call17, %struct.ehci_hcd** %ehci, align 8, !dbg !11352
  %call18 = call i8* @kzalloc(i64 64, i32 2592) #11, !dbg !11357
  %29 = bitcast i8* %call18 to %struct.ehci_tt*, !dbg !11357
  store %struct.ehci_tt* %29, %struct.ehci_tt** %tt1, align 8, !dbg !11358
  %30 = load %struct.ehci_tt*, %struct.ehci_tt** %tt1, align 8, !dbg !11359
  %tobool19 = icmp ne %struct.ehci_tt* %30, null, !dbg !11359
  br i1 %tobool19, label %if.end26, label %if.then20, !dbg !11361

if.then20:                                        ; preds = %if.then15
  %31 = load i8, i8* %allocated_index, align 1, !dbg !11362
  %tobool21 = trunc i8 %31 to i1, !dbg !11362
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !11365

if.then22:                                        ; preds = %if.then20
  %32 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !11366
  %hcpriv23 = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %32, i32 0, i32 3, !dbg !11368
  store i8* null, i8** %hcpriv23, align 8, !dbg !11369
  %33 = load %struct.ehci_tt**, %struct.ehci_tt*** %tt_index, align 8, !dbg !11370
  %34 = bitcast %struct.ehci_tt** %33 to i8*, !dbg !11370
  call void @kfree(i8* %34) #11, !dbg !11371
  br label %if.end24, !dbg !11372

if.end24:                                         ; preds = %if.then22, %if.then20
  %call25 = call i8* @ERR_PTR(i64 -12) #11, !dbg !11373
  %35 = bitcast i8* %call25 to %struct.ehci_tt*, !dbg !11373
  store %struct.ehci_tt* %35, %struct.ehci_tt** %retval, align 8, !dbg !11374
  br label %return, !dbg !11374

if.end26:                                         ; preds = %if.then15
  %36 = load %struct.ehci_tt*, %struct.ehci_tt** %tt1, align 8, !dbg !11375
  %tt_list = getelementptr inbounds %struct.ehci_tt, %struct.ehci_tt* %36, i32 0, i32 1, !dbg !11376
  %37 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !11377
  %tt_list27 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %37, i32 0, i32 64, !dbg !11378
  call void @list_add_tail(%struct.list_head* %tt_list, %struct.list_head* %tt_list27) #11, !dbg !11379
  %38 = load %struct.ehci_tt*, %struct.ehci_tt** %tt1, align 8, !dbg !11380
  %ps_list = getelementptr inbounds %struct.ehci_tt, %struct.ehci_tt* %38, i32 0, i32 2, !dbg !11381
  call void @INIT_LIST_HEAD(%struct.list_head* %ps_list) #11, !dbg !11382
  %39 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !11383
  %40 = load %struct.ehci_tt*, %struct.ehci_tt** %tt1, align 8, !dbg !11384
  %usb_tt = getelementptr inbounds %struct.ehci_tt, %struct.ehci_tt* %40, i32 0, i32 3, !dbg !11385
  store %struct.usb_tt* %39, %struct.usb_tt** %usb_tt, align 8, !dbg !11386
  %41 = load i32, i32* %port, align 4, !dbg !11387
  %42 = load %struct.ehci_tt*, %struct.ehci_tt** %tt1, align 8, !dbg !11388
  %tt_port = getelementptr inbounds %struct.ehci_tt, %struct.ehci_tt* %42, i32 0, i32 4, !dbg !11389
  store i32 %41, i32* %tt_port, align 8, !dbg !11390
  %43 = load %struct.ehci_tt*, %struct.ehci_tt** %tt1, align 8, !dbg !11391
  %44 = load %struct.ehci_tt**, %struct.ehci_tt*** %ptt, align 8, !dbg !11392
  store %struct.ehci_tt* %43, %struct.ehci_tt** %44, align 8, !dbg !11393
  br label %if.end28, !dbg !11394

if.end28:                                         ; preds = %if.end26, %if.end13
  %45 = load %struct.ehci_tt*, %struct.ehci_tt** %tt1, align 8, !dbg !11395
  store %struct.ehci_tt* %45, %struct.ehci_tt** %retval, align 8, !dbg !11396
  br label %return, !dbg !11396

return:                                           ; preds = %if.end28, %if.end24, %if.then7, %if.then
  %46 = load %struct.ehci_tt*, %struct.ehci_tt** %retval, align 8, !dbg !11397
  ret %struct.ehci_tt* %46, !dbg !11397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !11398 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11402, metadata !DIExpression()), !dbg !11403
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11404
  %1 = ptrtoint i8* %0 to i64, !dbg !11404
  %2 = inttoptr i64 %1 to i8*, !dbg !11404
  %3 = ptrtoint i8* %2 to i64, !dbg !11404
  %cmp = icmp uge i64 %3, -4095, !dbg !11404
  %lnot = xor i1 %cmp, true, !dbg !11404
  %lnot1 = xor i1 %lnot, true, !dbg !11404
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11404
  %conv = sext i32 %lnot.ext to i64, !dbg !11404
  %tobool = icmp ne i64 %conv, 0, !dbg !11404
  ret i1 %tobool, !dbg !11405
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !11406 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11409, metadata !DIExpression()), !dbg !11410
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11411
  %1 = ptrtoint i8* %0 to i64, !dbg !11412
  ret i64 %1, !dbg !11413
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @compute_tt_budget(i8* %budget_table, %struct.ehci_tt* %tt) #0 !dbg !11414 {
entry:
  %budget_table.addr = alloca i8*, align 8
  %tt.addr = alloca %struct.ehci_tt*, align 8
  %ps = alloca %struct.ehci_per_sched*, align 8
  %uframe = alloca i32, align 4
  %uf = alloca i32, align 4
  %x = alloca i32, align 4
  %budget_line = alloca i8*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ehci_per_sched*, align 8
  %__mptr30 = alloca i8*, align 8
  %tmp35 = alloca %struct.ehci_per_sched*, align 8
  store i8* %budget_table, i8** %budget_table.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %budget_table.addr, metadata !11418, metadata !DIExpression()), !dbg !11419
  store %struct.ehci_tt* %tt, %struct.ehci_tt** %tt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_tt** %tt.addr, metadata !11420, metadata !DIExpression()), !dbg !11421
  call void @llvm.dbg.declare(metadata %struct.ehci_per_sched** %ps, metadata !11422, metadata !DIExpression()), !dbg !11423
  call void @llvm.dbg.declare(metadata i32* %uframe, metadata !11424, metadata !DIExpression()), !dbg !11425
  call void @llvm.dbg.declare(metadata i32* %uf, metadata !11426, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11428, metadata !DIExpression()), !dbg !11429
  call void @llvm.dbg.declare(metadata i8** %budget_line, metadata !11430, metadata !DIExpression()), !dbg !11431
  %0 = load %struct.ehci_tt*, %struct.ehci_tt** %tt.addr, align 8, !dbg !11432
  %tobool = icmp ne %struct.ehci_tt* %0, null, !dbg !11432
  br i1 %tobool, label %if.end, label %if.then, !dbg !11434

if.then:                                          ; preds = %entry
  br label %for.end37, !dbg !11435

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %budget_table.addr, align 8, !dbg !11436
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 64, i1 false), !dbg !11437
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11438, metadata !DIExpression()), !dbg !11441
  %2 = load %struct.ehci_tt*, %struct.ehci_tt** %tt.addr, align 8, !dbg !11441
  %ps_list = getelementptr inbounds %struct.ehci_tt, %struct.ehci_tt* %2, i32 0, i32 2, !dbg !11441
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ps_list, i32 0, i32 0, !dbg !11441
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11441
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !11441
  store i8* %4, i8** %__mptr, align 8, !dbg !11441
  br label %do.body, !dbg !11441

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !11442

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !11441
  %add.ptr = getelementptr i8, i8* %5, i64 -16, !dbg !11441
  %6 = bitcast i8* %add.ptr to %struct.ehci_per_sched*, !dbg !11441
  store %struct.ehci_per_sched* %6, %struct.ehci_per_sched** %tmp, align 8, !dbg !11442
  %7 = load %struct.ehci_per_sched*, %struct.ehci_per_sched** %tmp, align 8, !dbg !11441
  store %struct.ehci_per_sched* %7, %struct.ehci_per_sched** %ps, align 8, !dbg !11444
  br label %for.cond, !dbg !11444

for.cond:                                         ; preds = %do.end34, %do.end
  %8 = load %struct.ehci_per_sched*, %struct.ehci_per_sched** %ps, align 8, !dbg !11445
  %ps_list1 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %8, i32 0, i32 2, !dbg !11445
  %9 = load %struct.ehci_tt*, %struct.ehci_tt** %tt.addr, align 8, !dbg !11445
  %ps_list2 = getelementptr inbounds %struct.ehci_tt, %struct.ehci_tt* %9, i32 0, i32 2, !dbg !11445
  %cmp = icmp eq %struct.list_head* %ps_list1, %ps_list2, !dbg !11445
  %lnot = xor i1 %cmp, true, !dbg !11445
  br i1 %lnot, label %for.body, label %for.end37, !dbg !11444

for.body:                                         ; preds = %for.cond
  %10 = load %struct.ehci_per_sched*, %struct.ehci_per_sched** %ps, align 8, !dbg !11447
  %bw_phase = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %10, i32 0, i32 7, !dbg !11450
  %11 = load i8, i8* %bw_phase, align 8, !dbg !11450
  %conv = zext i8 %11 to i32, !dbg !11447
  %shl = shl i32 %conv, 3, !dbg !11451
  store i32 %shl, i32* %uframe, align 4, !dbg !11452
  br label %for.cond3, !dbg !11453

for.cond3:                                        ; preds = %for.inc25, %for.body
  %12 = load i32, i32* %uframe, align 4, !dbg !11454
  %cmp4 = icmp ult i32 %12, 64, !dbg !11456
  br i1 %cmp4, label %for.body6, label %for.end28, !dbg !11457

for.body6:                                        ; preds = %for.cond3
  %13 = load i8*, i8** %budget_table.addr, align 8, !dbg !11458
  %14 = load i32, i32* %uframe, align 4, !dbg !11460
  %idxprom = zext i32 %14 to i64, !dbg !11458
  %arrayidx = getelementptr i8, i8* %13, i64 %idxprom, !dbg !11458
  store i8* %arrayidx, i8** %budget_line, align 8, !dbg !11461
  %15 = load %struct.ehci_per_sched*, %struct.ehci_per_sched** %ps, align 8, !dbg !11462
  %tt_usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %15, i32 0, i32 3, !dbg !11463
  %16 = load i16, i16* %tt_usecs, align 8, !dbg !11463
  %conv7 = zext i16 %16 to i32, !dbg !11462
  store i32 %conv7, i32* %x, align 4, !dbg !11464
  %17 = load %struct.ehci_per_sched*, %struct.ehci_per_sched** %ps, align 8, !dbg !11465
  %phase_uf = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %17, i32 0, i32 8, !dbg !11467
  %18 = load i8, i8* %phase_uf, align 1, !dbg !11467
  %conv8 = zext i8 %18 to i32, !dbg !11465
  store i32 %conv8, i32* %uf, align 4, !dbg !11468
  br label %for.cond9, !dbg !11469

for.cond9:                                        ; preds = %for.inc, %for.body6
  %19 = load i32, i32* %uf, align 4, !dbg !11470
  %cmp10 = icmp ult i32 %19, 8, !dbg !11472
  br i1 %cmp10, label %for.body12, label %for.end, !dbg !11473

for.body12:                                       ; preds = %for.cond9
  %20 = load i8*, i8** %budget_line, align 8, !dbg !11474
  %21 = load i32, i32* %uf, align 4, !dbg !11476
  %idxprom13 = zext i32 %21 to i64, !dbg !11474
  %arrayidx14 = getelementptr i8, i8* %20, i64 %idxprom13, !dbg !11474
  %22 = load i8, i8* %arrayidx14, align 1, !dbg !11474
  %conv15 = zext i8 %22 to i32, !dbg !11474
  %23 = load i32, i32* %x, align 4, !dbg !11477
  %add = add i32 %23, %conv15, !dbg !11477
  store i32 %add, i32* %x, align 4, !dbg !11477
  %24 = load i32, i32* %x, align 4, !dbg !11478
  %cmp16 = icmp ule i32 %24, 125, !dbg !11480
  br i1 %cmp16, label %if.then18, label %if.end22, !dbg !11481

if.then18:                                        ; preds = %for.body12
  %25 = load i32, i32* %x, align 4, !dbg !11482
  %conv19 = trunc i32 %25 to i8, !dbg !11482
  %26 = load i8*, i8** %budget_line, align 8, !dbg !11484
  %27 = load i32, i32* %uf, align 4, !dbg !11485
  %idxprom20 = zext i32 %27 to i64, !dbg !11484
  %arrayidx21 = getelementptr i8, i8* %26, i64 %idxprom20, !dbg !11484
  store i8 %conv19, i8* %arrayidx21, align 1, !dbg !11486
  br label %for.end, !dbg !11487

if.end22:                                         ; preds = %for.body12
  %28 = load i8*, i8** %budget_line, align 8, !dbg !11488
  %29 = load i32, i32* %uf, align 4, !dbg !11489
  %idxprom23 = zext i32 %29 to i64, !dbg !11488
  %arrayidx24 = getelementptr i8, i8* %28, i64 %idxprom23, !dbg !11488
  store i8 125, i8* %arrayidx24, align 1, !dbg !11490
  %30 = load i32, i32* %x, align 4, !dbg !11491
  %sub = sub i32 %30, 125, !dbg !11491
  store i32 %sub, i32* %x, align 4, !dbg !11491
  br label %for.inc, !dbg !11492

for.inc:                                          ; preds = %if.end22
  %31 = load i32, i32* %uf, align 4, !dbg !11493
  %inc = add i32 %31, 1, !dbg !11493
  store i32 %inc, i32* %uf, align 4, !dbg !11493
  br label %for.cond9, !dbg !11494, !llvm.loop !11495

for.end:                                          ; preds = %if.then18, %for.cond9
  br label %for.inc25, !dbg !11497

for.inc25:                                        ; preds = %for.end
  %32 = load %struct.ehci_per_sched*, %struct.ehci_per_sched** %ps, align 8, !dbg !11498
  %bw_uperiod = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %32, i32 0, i32 11, !dbg !11499
  %33 = load i8, i8* %bw_uperiod, align 4, !dbg !11499
  %conv26 = zext i8 %33 to i32, !dbg !11498
  %34 = load i32, i32* %uframe, align 4, !dbg !11500
  %add27 = add i32 %34, %conv26, !dbg !11500
  store i32 %add27, i32* %uframe, align 4, !dbg !11500
  br label %for.cond3, !dbg !11501, !llvm.loop !11502

for.end28:                                        ; preds = %for.cond3
  br label %for.inc29, !dbg !11504

for.inc29:                                        ; preds = %for.end28
  call void @llvm.dbg.declare(metadata i8** %__mptr30, metadata !11505, metadata !DIExpression()), !dbg !11507
  %35 = load %struct.ehci_per_sched*, %struct.ehci_per_sched** %ps, align 8, !dbg !11507
  %ps_list31 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %35, i32 0, i32 2, !dbg !11507
  %next32 = getelementptr inbounds %struct.list_head, %struct.list_head* %ps_list31, i32 0, i32 0, !dbg !11507
  %36 = load %struct.list_head*, %struct.list_head** %next32, align 8, !dbg !11507
  %37 = bitcast %struct.list_head* %36 to i8*, !dbg !11507
  store i8* %37, i8** %__mptr30, align 8, !dbg !11507
  br label %do.body33, !dbg !11507

do.body33:                                        ; preds = %for.inc29
  br label %do.end34, !dbg !11508

do.end34:                                         ; preds = %do.body33
  %38 = load i8*, i8** %__mptr30, align 8, !dbg !11507
  %add.ptr36 = getelementptr i8, i8* %38, i64 -16, !dbg !11507
  %39 = bitcast i8* %add.ptr36 to %struct.ehci_per_sched*, !dbg !11507
  store %struct.ehci_per_sched* %39, %struct.ehci_per_sched** %tmp35, align 8, !dbg !11508
  %40 = load %struct.ehci_per_sched*, %struct.ehci_per_sched** %tmp35, align 8, !dbg !11507
  store %struct.ehci_per_sched* %40, %struct.ehci_per_sched** %ps, align 8, !dbg !11445
  br label %for.cond, !dbg !11445, !llvm.loop !11510

for.end37:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !11512
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @check_intr_schedule(%struct.ehci_hcd* %ehci, i32 %frame, i32 %uframe, %struct.ehci_qh* %qh, i32* %c_maskp, %struct.ehci_tt* %tt) #0 !dbg !11513 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %frame.addr = alloca i32, align 4
  %uframe.addr = alloca i32, align 4
  %qh.addr = alloca %struct.ehci_qh*, align 8
  %c_maskp.addr = alloca i32*, align 8
  %tt.addr = alloca %struct.ehci_tt*, align 8
  %retval1 = alloca i32, align 4
  %mask = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !11516, metadata !DIExpression()), !dbg !11517
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !11518, metadata !DIExpression()), !dbg !11519
  store i32 %uframe, i32* %uframe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uframe.addr, metadata !11520, metadata !DIExpression()), !dbg !11521
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !11522, metadata !DIExpression()), !dbg !11523
  store i32* %c_maskp, i32** %c_maskp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %c_maskp.addr, metadata !11524, metadata !DIExpression()), !dbg !11525
  store %struct.ehci_tt* %tt, %struct.ehci_tt** %tt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_tt** %tt.addr, metadata !11526, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !11528, metadata !DIExpression()), !dbg !11529
  store i32 -28, i32* %retval1, align 4, !dbg !11529
  call void @llvm.dbg.declare(metadata i8* %mask, metadata !11530, metadata !DIExpression()), !dbg !11531
  store i8 0, i8* %mask, align 1, !dbg !11531
  %0 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11532
  %ps = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %0, i32 0, i32 7, !dbg !11534
  %c_usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 10, !dbg !11535
  %1 = load i8, i8* %c_usecs, align 1, !dbg !11535
  %conv = zext i8 %1 to i32, !dbg !11532
  %tobool = icmp ne i32 %conv, 0, !dbg !11532
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11536

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %uframe.addr, align 4, !dbg !11537
  %cmp = icmp uge i32 %2, 6, !dbg !11538
  br i1 %cmp, label %if.then, label %if.end, !dbg !11539

if.then:                                          ; preds = %land.lhs.true
  br label %done, !dbg !11540

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11541
  %4 = load i32, i32* %frame.addr, align 4, !dbg !11543
  %5 = load i32, i32* %uframe.addr, align 4, !dbg !11544
  %6 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11545
  %ps3 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %6, i32 0, i32 7, !dbg !11546
  %bw_uperiod = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps3, i32 0, i32 11, !dbg !11547
  %7 = load i8, i8* %bw_uperiod, align 4, !dbg !11547
  %conv4 = zext i8 %7 to i32, !dbg !11545
  %8 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11548
  %ps5 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %8, i32 0, i32 7, !dbg !11549
  %usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps5, i32 0, i32 9, !dbg !11550
  %9 = load i8, i8* %usecs, align 2, !dbg !11550
  %conv6 = zext i8 %9 to i32, !dbg !11548
  %call = call i32 @check_period(%struct.ehci_hcd* %3, i32 %4, i32 %5, i32 %conv4, i32 %conv6) #11, !dbg !11551
  %tobool7 = icmp ne i32 %call, 0, !dbg !11551
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !11552

if.then8:                                         ; preds = %if.end
  br label %done, !dbg !11553

if.end9:                                          ; preds = %if.end
  %10 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11554
  %ps10 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %10, i32 0, i32 7, !dbg !11556
  %c_usecs11 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps10, i32 0, i32 10, !dbg !11557
  %11 = load i8, i8* %c_usecs11, align 1, !dbg !11557
  %tobool12 = icmp ne i8 %11, 0, !dbg !11554
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !11558

if.then13:                                        ; preds = %if.end9
  store i32 0, i32* %retval1, align 4, !dbg !11559
  %12 = load i32*, i32** %c_maskp.addr, align 8, !dbg !11561
  store i32 0, i32* %12, align 4, !dbg !11562
  br label %done, !dbg !11563

if.end14:                                         ; preds = %if.end9
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11564
  %14 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11566
  %ps15 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %14, i32 0, i32 7, !dbg !11567
  %15 = load %struct.ehci_tt*, %struct.ehci_tt** %tt.addr, align 8, !dbg !11568
  %16 = load i32, i32* %frame.addr, align 4, !dbg !11569
  %17 = load i32, i32* %uframe.addr, align 4, !dbg !11570
  %call16 = call i32 @tt_available(%struct.ehci_hcd* %13, %struct.ehci_per_sched* %ps15, %struct.ehci_tt* %15, i32 %16, i32 %17) #11, !dbg !11571
  %tobool17 = icmp ne i32 %call16, 0, !dbg !11571
  br i1 %tobool17, label %if.then18, label %if.end37, !dbg !11572

if.then18:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11573, metadata !DIExpression()), !dbg !11575
  %18 = load i32, i32* %uframe.addr, align 4, !dbg !11576
  %add = add i32 %18, 2, !dbg !11578
  store i32 %add, i32* %i, align 4, !dbg !11579
  br label %for.cond, !dbg !11580

for.cond:                                         ; preds = %for.inc, %if.then18
  %19 = load i32, i32* %i, align 4, !dbg !11581
  %cmp19 = icmp ult i32 %19, 8, !dbg !11583
  br i1 %cmp19, label %land.rhs, label %land.end, !dbg !11584

land.rhs:                                         ; preds = %for.cond
  %20 = load i32, i32* %i, align 4, !dbg !11585
  %21 = load i32, i32* %uframe.addr, align 4, !dbg !11586
  %add21 = add i32 %21, 4, !dbg !11587
  %cmp22 = icmp ule i32 %20, %add21, !dbg !11588
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %22 = phi i1 [ false, %for.cond ], [ %cmp22, %land.rhs ], !dbg !11589
  br i1 %22, label %for.body, label %for.end, !dbg !11590

for.body:                                         ; preds = %land.end
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11591
  %24 = load i32, i32* %frame.addr, align 4, !dbg !11593
  %25 = load i32, i32* %i, align 4, !dbg !11594
  %26 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11595
  %ps24 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %26, i32 0, i32 7, !dbg !11596
  %bw_uperiod25 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps24, i32 0, i32 11, !dbg !11597
  %27 = load i8, i8* %bw_uperiod25, align 4, !dbg !11597
  %conv26 = zext i8 %27 to i32, !dbg !11595
  %28 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11598
  %ps27 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %28, i32 0, i32 7, !dbg !11599
  %c_usecs28 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps27, i32 0, i32 10, !dbg !11600
  %29 = load i8, i8* %c_usecs28, align 1, !dbg !11600
  %conv29 = zext i8 %29 to i32, !dbg !11598
  %call30 = call i32 @check_period(%struct.ehci_hcd* %23, i32 %24, i32 %25, i32 %conv26, i32 %conv29) #11, !dbg !11601
  %tobool31 = icmp ne i32 %call30, 0, !dbg !11601
  br i1 %tobool31, label %if.else, label %if.then32, !dbg !11602

if.then32:                                        ; preds = %for.body
  br label %done, !dbg !11603

if.else:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !11604
  %shl = shl i32 1, %30, !dbg !11605
  %31 = load i8, i8* %mask, align 1, !dbg !11606
  %conv33 = zext i8 %31 to i32, !dbg !11606
  %or = or i32 %conv33, %shl, !dbg !11606
  %conv34 = trunc i32 %or to i8, !dbg !11606
  store i8 %conv34, i8* %mask, align 1, !dbg !11606
  br label %if.end35

if.end35:                                         ; preds = %if.else
  br label %for.inc, !dbg !11607

for.inc:                                          ; preds = %if.end35
  %32 = load i32, i32* %i, align 4, !dbg !11608
  %inc = add i32 %32, 1, !dbg !11608
  store i32 %inc, i32* %i, align 4, !dbg !11608
  br label %for.cond, !dbg !11609, !llvm.loop !11610

for.end:                                          ; preds = %land.end
  store i32 0, i32* %retval1, align 4, !dbg !11612
  %33 = load i8, i8* %mask, align 1, !dbg !11613
  %conv36 = zext i8 %33 to i32, !dbg !11613
  %34 = load i32*, i32** %c_maskp.addr, align 8, !dbg !11614
  store i32 %conv36, i32* %34, align 4, !dbg !11615
  br label %if.end37, !dbg !11616

if.end37:                                         ; preds = %for.end, %if.end14
  br label %done, !dbg !11617

done:                                             ; preds = %if.end37, %if.then32, %if.then13, %if.then8, %if.then
  call void @llvm.dbg.label(metadata !11618), !dbg !11619
  %35 = load i32, i32* %retval1, align 4, !dbg !11620
  ret i32 %35, !dbg !11621
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reserve_release_intr_bandwidth(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh, i32 %sign) #0 !dbg !11622 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  %sign.addr = alloca i32, align 4
  %start_uf = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %m = alloca i32, align 4
  %usecs = alloca i32, align 4
  %c_usecs = alloca i32, align 4
  %tt_usecs = alloca i32, align 4
  %tt = alloca %struct.ehci_tt*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !11625, metadata !DIExpression()), !dbg !11626
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !11627, metadata !DIExpression()), !dbg !11628
  store i32 %sign, i32* %sign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.addr, metadata !11629, metadata !DIExpression()), !dbg !11630
  call void @llvm.dbg.declare(metadata i32* %start_uf, metadata !11631, metadata !DIExpression()), !dbg !11632
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11633, metadata !DIExpression()), !dbg !11634
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11635, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.declare(metadata i32* %m, metadata !11637, metadata !DIExpression()), !dbg !11638
  call void @llvm.dbg.declare(metadata i32* %usecs, metadata !11639, metadata !DIExpression()), !dbg !11640
  %0 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11641
  %ps = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %0, i32 0, i32 7, !dbg !11642
  %usecs1 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 9, !dbg !11643
  %1 = load i8, i8* %usecs1, align 2, !dbg !11643
  %conv = zext i8 %1 to i32, !dbg !11641
  store i32 %conv, i32* %usecs, align 4, !dbg !11640
  call void @llvm.dbg.declare(metadata i32* %c_usecs, metadata !11644, metadata !DIExpression()), !dbg !11645
  %2 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11646
  %ps2 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %2, i32 0, i32 7, !dbg !11647
  %c_usecs3 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps2, i32 0, i32 10, !dbg !11648
  %3 = load i8, i8* %c_usecs3, align 1, !dbg !11648
  %conv4 = zext i8 %3 to i32, !dbg !11646
  store i32 %conv4, i32* %c_usecs, align 4, !dbg !11645
  call void @llvm.dbg.declare(metadata i32* %tt_usecs, metadata !11649, metadata !DIExpression()), !dbg !11650
  %4 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11651
  %ps5 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %4, i32 0, i32 7, !dbg !11652
  %tt_usecs6 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps5, i32 0, i32 3, !dbg !11653
  %5 = load i16, i16* %tt_usecs6, align 8, !dbg !11653
  %conv7 = zext i16 %5 to i32, !dbg !11651
  store i32 %conv7, i32* %tt_usecs, align 4, !dbg !11650
  call void @llvm.dbg.declare(metadata %struct.ehci_tt** %tt, metadata !11654, metadata !DIExpression()), !dbg !11655
  %6 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11656
  %ps8 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %6, i32 0, i32 7, !dbg !11658
  %phase = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps8, i32 0, i32 6, !dbg !11659
  %7 = load i16, i16* %phase, align 2, !dbg !11659
  %conv9 = zext i16 %7 to i32, !dbg !11656
  %cmp = icmp eq i32 %conv9, 29999, !dbg !11660
  br i1 %cmp, label %if.then, label %if.end, !dbg !11661

if.then:                                          ; preds = %entry
  br label %if.end91, !dbg !11662

if.end:                                           ; preds = %entry
  %8 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11663
  %ps11 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %8, i32 0, i32 7, !dbg !11664
  %bw_phase = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps11, i32 0, i32 7, !dbg !11665
  %9 = load i8, i8* %bw_phase, align 8, !dbg !11665
  %conv12 = zext i8 %9 to i32, !dbg !11663
  %shl = shl i32 %conv12, 3, !dbg !11666
  store i32 %shl, i32* %start_uf, align 4, !dbg !11667
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11668
  %11 = load i32, i32* %sign.addr, align 4, !dbg !11669
  %12 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11670
  %ps13 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %12, i32 0, i32 7, !dbg !11671
  call void @bandwidth_dbg(%struct.ehci_hcd* %10, i32 %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), %struct.ehci_per_sched* %ps13) #11, !dbg !11672
  %13 = load i32, i32* %sign.addr, align 4, !dbg !11673
  %cmp14 = icmp slt i32 %13, 0, !dbg !11675
  br i1 %cmp14, label %if.then16, label %if.end19, !dbg !11676

if.then16:                                        ; preds = %if.end
  %14 = load i32, i32* %usecs, align 4, !dbg !11677
  %sub = sub i32 0, %14, !dbg !11679
  store i32 %sub, i32* %usecs, align 4, !dbg !11680
  %15 = load i32, i32* %c_usecs, align 4, !dbg !11681
  %sub17 = sub i32 0, %15, !dbg !11682
  store i32 %sub17, i32* %c_usecs, align 4, !dbg !11683
  %16 = load i32, i32* %tt_usecs, align 4, !dbg !11684
  %sub18 = sub i32 0, %16, !dbg !11685
  store i32 %sub18, i32* %tt_usecs, align 4, !dbg !11686
  br label %if.end19, !dbg !11687

if.end19:                                         ; preds = %if.then16, %if.end
  %17 = load i32, i32* %start_uf, align 4, !dbg !11688
  %18 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11690
  %ps20 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %18, i32 0, i32 7, !dbg !11691
  %phase_uf = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps20, i32 0, i32 8, !dbg !11692
  %19 = load i8, i8* %phase_uf, align 1, !dbg !11692
  %conv21 = zext i8 %19 to i32, !dbg !11690
  %add = add i32 %17, %conv21, !dbg !11693
  store i32 %add, i32* %i, align 4, !dbg !11694
  br label %for.cond, !dbg !11695

for.cond:                                         ; preds = %for.inc, %if.end19
  %20 = load i32, i32* %i, align 4, !dbg !11696
  %cmp22 = icmp ult i32 %20, 64, !dbg !11698
  br i1 %cmp22, label %for.body, label %for.end, !dbg !11699

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %usecs, align 4, !dbg !11700
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11701
  %bandwidth = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %22, i32 0, i32 62, !dbg !11702
  %23 = load i32, i32* %i, align 4, !dbg !11703
  %idxprom = zext i32 %23 to i64, !dbg !11701
  %arrayidx = getelementptr [64 x i8], [64 x i8]* %bandwidth, i64 0, i64 %idxprom, !dbg !11701
  %24 = load i8, i8* %arrayidx, align 1, !dbg !11704
  %conv24 = zext i8 %24 to i32, !dbg !11704
  %add25 = add i32 %conv24, %21, !dbg !11704
  %conv26 = trunc i32 %add25 to i8, !dbg !11704
  store i8 %conv26, i8* %arrayidx, align 1, !dbg !11704
  br label %for.inc, !dbg !11701

for.inc:                                          ; preds = %for.body
  %25 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11705
  %ps27 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %25, i32 0, i32 7, !dbg !11706
  %bw_uperiod = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps27, i32 0, i32 11, !dbg !11707
  %26 = load i8, i8* %bw_uperiod, align 4, !dbg !11707
  %conv28 = zext i8 %26 to i32, !dbg !11705
  %27 = load i32, i32* %i, align 4, !dbg !11708
  %add29 = add i32 %27, %conv28, !dbg !11708
  store i32 %add29, i32* %i, align 4, !dbg !11708
  br label %for.cond, !dbg !11709, !llvm.loop !11710

for.end:                                          ; preds = %for.cond
  %28 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11712
  %ps30 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %28, i32 0, i32 7, !dbg !11714
  %c_usecs31 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps30, i32 0, i32 10, !dbg !11715
  %29 = load i8, i8* %c_usecs31, align 1, !dbg !11715
  %tobool = icmp ne i8 %29, 0, !dbg !11712
  br i1 %tobool, label %if.then32, label %if.end64, !dbg !11716

if.then32:                                        ; preds = %for.end
  %30 = load i32, i32* %start_uf, align 4, !dbg !11717
  store i32 %30, i32* %i, align 4, !dbg !11720
  br label %for.cond33, !dbg !11721

for.cond33:                                       ; preds = %for.inc58, %if.then32
  %31 = load i32, i32* %i, align 4, !dbg !11722
  %cmp34 = icmp ult i32 %31, 64, !dbg !11724
  br i1 %cmp34, label %for.body36, label %for.end63, !dbg !11725

for.body36:                                       ; preds = %for.cond33
  store i32 2, i32* %j, align 4, !dbg !11726
  %32 = load i32, i32* %j, align 4, !dbg !11729
  %add37 = add i32 %32, 8, !dbg !11730
  %shl38 = shl i32 1, %add37, !dbg !11731
  store i32 %shl38, i32* %m, align 4, !dbg !11732
  br label %for.cond39, !dbg !11733

for.cond39:                                       ; preds = %for.inc55, %for.body36
  %33 = load i32, i32* %j, align 4, !dbg !11734
  %cmp40 = icmp ult i32 %33, 8, !dbg !11736
  br i1 %cmp40, label %for.body42, label %for.end57, !dbg !11737

for.body42:                                       ; preds = %for.cond39
  %34 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11738
  %ps43 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %34, i32 0, i32 7, !dbg !11741
  %cs_mask = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps43, i32 0, i32 4, !dbg !11742
  %35 = load i16, i16* %cs_mask, align 2, !dbg !11742
  %conv44 = zext i16 %35 to i32, !dbg !11738
  %36 = load i32, i32* %m, align 4, !dbg !11743
  %and = and i32 %conv44, %36, !dbg !11744
  %tobool45 = icmp ne i32 %and, 0, !dbg !11744
  br i1 %tobool45, label %if.then46, label %if.end54, !dbg !11745

if.then46:                                        ; preds = %for.body42
  %37 = load i32, i32* %c_usecs, align 4, !dbg !11746
  %38 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !11747
  %bandwidth47 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %38, i32 0, i32 62, !dbg !11748
  %39 = load i32, i32* %i, align 4, !dbg !11749
  %40 = load i32, i32* %j, align 4, !dbg !11750
  %add48 = add i32 %39, %40, !dbg !11751
  %idxprom49 = zext i32 %add48 to i64, !dbg !11747
  %arrayidx50 = getelementptr [64 x i8], [64 x i8]* %bandwidth47, i64 0, i64 %idxprom49, !dbg !11747
  %41 = load i8, i8* %arrayidx50, align 1, !dbg !11752
  %conv51 = zext i8 %41 to i32, !dbg !11752
  %add52 = add i32 %conv51, %37, !dbg !11752
  %conv53 = trunc i32 %add52 to i8, !dbg !11752
  store i8 %conv53, i8* %arrayidx50, align 1, !dbg !11752
  br label %if.end54, !dbg !11747

if.end54:                                         ; preds = %if.then46, %for.body42
  br label %for.inc55, !dbg !11753

for.inc55:                                        ; preds = %if.end54
  %42 = load i32, i32* %j, align 4, !dbg !11754
  %inc = add i32 %42, 1, !dbg !11754
  store i32 %inc, i32* %j, align 4, !dbg !11754
  %43 = load i32, i32* %m, align 4, !dbg !11755
  %shl56 = shl i32 %43, 1, !dbg !11755
  store i32 %shl56, i32* %m, align 4, !dbg !11755
  br label %for.cond39, !dbg !11756, !llvm.loop !11757

for.end57:                                        ; preds = %for.cond39
  br label %for.inc58, !dbg !11759

for.inc58:                                        ; preds = %for.end57
  %44 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11760
  %ps59 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %44, i32 0, i32 7, !dbg !11761
  %bw_uperiod60 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps59, i32 0, i32 11, !dbg !11762
  %45 = load i8, i8* %bw_uperiod60, align 4, !dbg !11762
  %conv61 = zext i8 %45 to i32, !dbg !11760
  %46 = load i32, i32* %i, align 4, !dbg !11763
  %add62 = add i32 %46, %conv61, !dbg !11763
  store i32 %add62, i32* %i, align 4, !dbg !11763
  br label %for.cond33, !dbg !11764, !llvm.loop !11765

for.end63:                                        ; preds = %for.cond33
  br label %if.end64, !dbg !11767

if.end64:                                         ; preds = %for.end63, %for.end
  %47 = load i32, i32* %tt_usecs, align 4, !dbg !11768
  %tobool65 = icmp ne i32 %47, 0, !dbg !11768
  br i1 %tobool65, label %if.then66, label %if.end91, !dbg !11770

if.then66:                                        ; preds = %if.end64
  %48 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11771
  %ps67 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %48, i32 0, i32 7, !dbg !11773
  %udev = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps67, i32 0, i32 0, !dbg !11774
  %49 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !11774
  %call = call %struct.ehci_tt* @find_tt(%struct.usb_device* %49) #11, !dbg !11775
  store %struct.ehci_tt* %call, %struct.ehci_tt** %tt, align 8, !dbg !11776
  %50 = load i32, i32* %sign.addr, align 4, !dbg !11777
  %cmp68 = icmp sgt i32 %50, 0, !dbg !11779
  br i1 %cmp68, label %if.then70, label %if.else, !dbg !11780

if.then70:                                        ; preds = %if.then66
  %51 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11781
  %ps71 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %51, i32 0, i32 7, !dbg !11782
  %ps_list = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps71, i32 0, i32 2, !dbg !11783
  %52 = load %struct.ehci_tt*, %struct.ehci_tt** %tt, align 8, !dbg !11784
  %ps_list72 = getelementptr inbounds %struct.ehci_tt, %struct.ehci_tt* %52, i32 0, i32 2, !dbg !11785
  call void @list_add_tail(%struct.list_head* %ps_list, %struct.list_head* %ps_list72) #11, !dbg !11786
  br label %if.end75, !dbg !11786

if.else:                                          ; preds = %if.then66
  %53 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11787
  %ps73 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %53, i32 0, i32 7, !dbg !11788
  %ps_list74 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps73, i32 0, i32 2, !dbg !11789
  call void @list_del(%struct.list_head* %ps_list74) #11, !dbg !11790
  br label %if.end75

if.end75:                                         ; preds = %if.else, %if.then70
  %54 = load i32, i32* %start_uf, align 4, !dbg !11791
  %shr = lshr i32 %54, 3, !dbg !11793
  store i32 %shr, i32* %i, align 4, !dbg !11794
  br label %for.cond76, !dbg !11795

for.cond76:                                       ; preds = %for.inc86, %if.end75
  %55 = load i32, i32* %i, align 4, !dbg !11796
  %cmp77 = icmp ult i32 %55, 8, !dbg !11798
  br i1 %cmp77, label %for.body79, label %for.end90, !dbg !11799

for.body79:                                       ; preds = %for.cond76
  %56 = load i32, i32* %tt_usecs, align 4, !dbg !11800
  %57 = load %struct.ehci_tt*, %struct.ehci_tt** %tt, align 8, !dbg !11801
  %bandwidth80 = getelementptr inbounds %struct.ehci_tt, %struct.ehci_tt* %57, i32 0, i32 0, !dbg !11802
  %58 = load i32, i32* %i, align 4, !dbg !11803
  %idxprom81 = zext i32 %58 to i64, !dbg !11801
  %arrayidx82 = getelementptr [8 x i16], [8 x i16]* %bandwidth80, i64 0, i64 %idxprom81, !dbg !11801
  %59 = load i16, i16* %arrayidx82, align 2, !dbg !11804
  %conv83 = zext i16 %59 to i32, !dbg !11804
  %add84 = add i32 %conv83, %56, !dbg !11804
  %conv85 = trunc i32 %add84 to i16, !dbg !11804
  store i16 %conv85, i16* %arrayidx82, align 2, !dbg !11804
  br label %for.inc86, !dbg !11801

for.inc86:                                        ; preds = %for.body79
  %60 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !11805
  %ps87 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %60, i32 0, i32 7, !dbg !11806
  %bw_period = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps87, i32 0, i32 12, !dbg !11807
  %61 = load i8, i8* %bw_period, align 1, !dbg !11807
  %conv88 = zext i8 %61 to i32, !dbg !11805
  %62 = load i32, i32* %i, align 4, !dbg !11808
  %add89 = add i32 %62, %conv88, !dbg !11808
  store i32 %add89, i32* %i, align 4, !dbg !11808
  br label %for.cond76, !dbg !11809, !llvm.loop !11810

for.end90:                                        ; preds = %for.cond76
  br label %if.end91, !dbg !11812

if.end91:                                         ; preds = %if.then, %for.end90, %if.end64
  ret void, !dbg !11813
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !11814 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11817, metadata !DIExpression()), !dbg !11818
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11819, metadata !DIExpression()), !dbg !11820
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11821, metadata !DIExpression()), !dbg !11822
  %0 = load i64, i64* %n.addr, align 8, !dbg !11823
  %1 = load i64, i64* %size.addr, align 8, !dbg !11824
  %2 = load i32, i32* %flags.addr, align 4, !dbg !11825
  %or = or i32 %2, 256, !dbg !11826
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !11827
  ret i8* %call, !dbg !11828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !11829 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !11832, metadata !DIExpression()), !dbg !11833
  %0 = load i64, i64* %error.addr, align 8, !dbg !11834
  %1 = inttoptr i64 %0 to i8*, !dbg !11835
  ret i8* %1, !dbg !11836
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_hcd* @bus_to_hcd(%struct.usb_bus* %bus) #0 !dbg !11837 {
entry:
  %bus.addr = alloca %struct.usb_bus*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.usb_hcd*, align 8
  store %struct.usb_bus* %bus, %struct.usb_bus** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_bus** %bus.addr, metadata !11840, metadata !DIExpression()), !dbg !11841
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11842, metadata !DIExpression()), !dbg !11844
  %0 = load %struct.usb_bus*, %struct.usb_bus** %bus.addr, align 8, !dbg !11844
  %1 = bitcast %struct.usb_bus* %0 to i8*, !dbg !11844
  store i8* %1, i8** %__mptr, align 8, !dbg !11844
  br label %do.body, !dbg !11844

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11845

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !11844
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !11844
  %3 = bitcast i8* %add.ptr to %struct.usb_hcd*, !dbg !11844
  store %struct.usb_hcd* %3, %struct.usb_hcd** %tmp, align 8, !dbg !11845
  %4 = load %struct.usb_hcd*, %struct.usb_hcd** %tmp, align 8, !dbg !11844
  ret %struct.usb_hcd* %4, !dbg !11847
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !11848 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11851, metadata !DIExpression()), !dbg !11855
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !11861, metadata !DIExpression()), !dbg !11862
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !11863, metadata !DIExpression()), !dbg !11864
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !11865, metadata !DIExpression()), !dbg !11866
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !11867, metadata !DIExpression()), !dbg !11871
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !11873, metadata !DIExpression()), !dbg !11877
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !11879, metadata !DIExpression()), !dbg !11883
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !11888, metadata !DIExpression()), !dbg !11889
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !11890, metadata !DIExpression()), !dbg !11891
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11892, metadata !DIExpression()), !dbg !11893
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !11894, metadata !DIExpression()), !dbg !11895
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !11896, metadata !DIExpression()), !dbg !11897
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11898, metadata !DIExpression()), !dbg !11899
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !11900, metadata !DIExpression()), !dbg !11901
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !11902, metadata !DIExpression()), !dbg !11903
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11904, metadata !DIExpression()), !dbg !11905
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11906, metadata !DIExpression()), !dbg !11907
  %0 = load i64, i64* %size.addr, align 8, !dbg !11908
  %1 = load i32, i32* %flags.addr, align 4, !dbg !11909
  %or = or i32 %1, 256, !dbg !11910
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !11911
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !11912
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !11913

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11914
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !11915
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11916

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !11917
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !11918
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !11919
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !11920
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11897
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !11921
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11922
  %10 = load i32, i32* %order.i.i, align 4, !dbg !11923
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11924
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11925
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11926
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !11927
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11927
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11927
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11927
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !11927
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11928
  br label %kmalloc.exit, !dbg !11928

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !11929
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11930
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !11930
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11932

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11933
  br label %kmalloc_index.exit.i, !dbg !11933

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11934
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !11936
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11937

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11938
  br label %kmalloc_index.exit.i, !dbg !11938

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11939
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !11941
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11942

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11943
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !11944
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11945

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11946
  br label %kmalloc_index.exit.i, !dbg !11946

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11947
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !11949
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11950

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11951
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !11952
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11953

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11954
  br label %kmalloc_index.exit.i, !dbg !11954

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11955
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !11957
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11958

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11959
  br label %kmalloc_index.exit.i, !dbg !11959

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11960
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !11962
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11963

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11964
  br label %kmalloc_index.exit.i, !dbg !11964

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11965
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !11967
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11968

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11969
  br label %kmalloc_index.exit.i, !dbg !11969

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11970
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !11972
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11973

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11974
  br label %kmalloc_index.exit.i, !dbg !11974

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11975
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !11977
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11978

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11979
  br label %kmalloc_index.exit.i, !dbg !11979

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11980
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !11982
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11983

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11984
  br label %kmalloc_index.exit.i, !dbg !11984

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11985
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !11987
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11988

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11989
  br label %kmalloc_index.exit.i, !dbg !11989

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11990
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !11992
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11993

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11994
  br label %kmalloc_index.exit.i, !dbg !11994

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11995
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !11997
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11998

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11999
  br label %kmalloc_index.exit.i, !dbg !11999

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12000
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !12002
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !12003

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !12004
  br label %kmalloc_index.exit.i, !dbg !12004

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12005
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !12007
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !12008

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !12009
  br label %kmalloc_index.exit.i, !dbg !12009

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12010
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !12012
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !12013

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !12014
  br label %kmalloc_index.exit.i, !dbg !12014

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12015
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !12017
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !12018

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !12019
  br label %kmalloc_index.exit.i, !dbg !12019

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12020
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !12022
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !12023

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !12024
  br label %kmalloc_index.exit.i, !dbg !12024

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12025
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !12027
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !12028

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !12029
  br label %kmalloc_index.exit.i, !dbg !12029

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12030
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !12032
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !12033

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !12034
  br label %kmalloc_index.exit.i, !dbg !12034

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12035
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !12037
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12038

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12039
  br label %kmalloc_index.exit.i, !dbg !12039

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12040
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !12042
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12043

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12044
  br label %kmalloc_index.exit.i, !dbg !12044

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12045
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !12047
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12048

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12049
  br label %kmalloc_index.exit.i, !dbg !12049

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12050
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !12052
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12053

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12054
  br label %kmalloc_index.exit.i, !dbg !12054

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12055
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !12057
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12058

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12059
  br label %kmalloc_index.exit.i, !dbg !12059

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12060
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !12062
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !12063

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !12064
  br label %kmalloc_index.exit.i, !dbg !12064

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12065
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !12067
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !12068

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !12069
  br label %kmalloc_index.exit.i, !dbg !12069

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12070
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !12072
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !12073

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !12074
  br label %kmalloc_index.exit.i, !dbg !12074

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !12075, !srcloc !12078
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #7, !dbg !12079, !srcloc !12082
  unreachable, !dbg !12083

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !12084
  store i32 %45, i32* %index.i, align 4, !dbg !12085
  %46 = load i32, i32* %index.i, align 4, !dbg !12086
  %tobool.i = icmp ne i32 %46, 0, !dbg !12086
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !12088

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !12089
  br label %kmalloc.exit, !dbg !12089

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !12090
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12091
  %and.i.i = and i32 %48, 17, !dbg !12091
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !12091
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !12091
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !12091
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12091
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !12093

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !12094
  br label %kmalloc_type.exit.i, !dbg !12094

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12095
  %and2.i.i = and i32 %49, 1, !dbg !12096
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !12095
  %50 = zext i1 %tobool3.i.i to i64, !dbg !12095
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !12095
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !12097
  br label %kmalloc_type.exit.i, !dbg !12097

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !12098
  %idxprom.i = zext i32 %51 to i64, !dbg !12099
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !12099
  %52 = load i32, i32* %index.i, align 4, !dbg !12100
  %idxprom6.i = zext i32 %52 to i64, !dbg !12099
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !12099
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !12099
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !12101
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !12102
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12103
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12104
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !12105
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !12105
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !12105
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !12105
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !12105
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11866
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12106
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !12107
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !12108
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12109
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !12110
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !12111
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !12112
  store i8* %62, i8** %retval.i, align 8, !dbg !12113
  br label %kmalloc.exit, !dbg !12113

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !12114
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !12115
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !12116
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !12116
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !12116
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !12116
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !12116
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !12117
  br label %kmalloc.exit, !dbg !12117

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !12118
  ret i8* %65, !dbg !12119
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !12120 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !12121, metadata !DIExpression()), !dbg !12122
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !12123, metadata !DIExpression()), !dbg !12124
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12125
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !12126
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !12127
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !12127
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !12128
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !12129
  ret void, !dbg !12130
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !12131 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11851, metadata !DIExpression()), !dbg !12132
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !11861, metadata !DIExpression()), !dbg !12136
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !11863, metadata !DIExpression()), !dbg !12137
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !11865, metadata !DIExpression()), !dbg !12138
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !11867, metadata !DIExpression()), !dbg !12139
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !11873, metadata !DIExpression()), !dbg !12141
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !11879, metadata !DIExpression()), !dbg !12143
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !11888, metadata !DIExpression()), !dbg !12146
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !11890, metadata !DIExpression()), !dbg !12147
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11892, metadata !DIExpression()), !dbg !12148
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !11894, metadata !DIExpression()), !dbg !12149
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !11896, metadata !DIExpression()), !dbg !12150
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11898, metadata !DIExpression()), !dbg !12151
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !11900, metadata !DIExpression()), !dbg !12152
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !11902, metadata !DIExpression()), !dbg !12153
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12154, metadata !DIExpression()), !dbg !12155
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12156, metadata !DIExpression()), !dbg !12157
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12158, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !12160, metadata !DIExpression()), !dbg !12161
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !12162, metadata !DIExpression()), !dbg !12165
  %0 = load i64, i64* %n.addr, align 8, !dbg !12165
  store i64 %0, i64* %__a, align 8, !dbg !12165
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !12166, metadata !DIExpression()), !dbg !12165
  %1 = load i64, i64* %size.addr, align 8, !dbg !12165
  store i64 %1, i64* %__b, align 8, !dbg !12165
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !12167, metadata !DIExpression()), !dbg !12165
  store i64* %bytes, i64** %__d, align 8, !dbg !12165
  %cmp = icmp eq i64* %__a, %__b, !dbg !12165
  %conv = zext i1 %cmp to i32, !dbg !12165
  %2 = load i64*, i64** %__d, align 8, !dbg !12165
  %cmp1 = icmp eq i64* %__a, %2, !dbg !12165
  %conv2 = zext i1 %cmp1 to i32, !dbg !12165
  %3 = load i64, i64* %__a, align 8, !dbg !12165
  %4 = load i64, i64* %__b, align 8, !dbg !12165
  %5 = load i64*, i64** %__d, align 8, !dbg !12165
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !12165
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !12165
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !12165
  store i64 %8, i64* %5, align 8, !dbg !12165
  %frombool = zext i1 %7 to i8, !dbg !12165
  store i8 %frombool, i8* %tmp, align 1, !dbg !12165
  %9 = load i8, i8* %tmp, align 1, !dbg !12165
  %tobool = trunc i8 %9 to i1, !dbg !12165
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !12168
  %lnot = xor i1 %call, true, !dbg !12168
  %lnot3 = xor i1 %lnot, true, !dbg !12168
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !12168
  %conv4 = sext i32 %lnot.ext to i64, !dbg !12168
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !12168
  br i1 %tobool5, label %if.then, label %if.end, !dbg !12169

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12170
  br label %return, !dbg !12170

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !12171
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !12172
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !12173

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !12174
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !12175
  br i1 %13, label %if.then6, label %if.end8, !dbg !12176

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !12177
  %15 = load i32, i32* %flags.addr, align 4, !dbg !12178
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !12179
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #7, !dbg !12180
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !12181

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !12182
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !12183
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12184

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !12185
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !12186
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !12187
  %call.i.i = call i32 @get_order(i64 %21) #14, !dbg !12188
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !12150
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !12189
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !12190
  %24 = load i32, i32* %order.i.i, align 4, !dbg !12191
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !12192
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !12193
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !12194
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #12, !dbg !12195
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !12195
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !12195
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !12195
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !12195
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !12196
  br label %kmalloc.exit, !dbg !12196

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !12197
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12198
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !12198
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !12199

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !12200
  br label %kmalloc_index.exit.i, !dbg !12200

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12201
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !12202
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !12203

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12204
  br label %kmalloc_index.exit.i, !dbg !12204

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12205
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !12206
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !12207

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12208
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !12209
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !12210

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !12211
  br label %kmalloc_index.exit.i, !dbg !12211

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12212
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !12213
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !12214

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12215
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !12216
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !12217

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !12218
  br label %kmalloc_index.exit.i, !dbg !12218

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12219
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !12220
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !12221

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12222
  br label %kmalloc_index.exit.i, !dbg !12222

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12223
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !12224
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !12225

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !12226
  br label %kmalloc_index.exit.i, !dbg !12226

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12227
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !12228
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !12229

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !12230
  br label %kmalloc_index.exit.i, !dbg !12230

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12231
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !12232
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !12233

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !12234
  br label %kmalloc_index.exit.i, !dbg !12234

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12235
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !12236
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !12237

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !12238
  br label %kmalloc_index.exit.i, !dbg !12238

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12239
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !12240
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !12241

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !12242
  br label %kmalloc_index.exit.i, !dbg !12242

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12243
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !12244
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !12245

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !12246
  br label %kmalloc_index.exit.i, !dbg !12246

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12247
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !12248
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !12249

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !12250
  br label %kmalloc_index.exit.i, !dbg !12250

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12251
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !12252
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !12253

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !12254
  br label %kmalloc_index.exit.i, !dbg !12254

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12255
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !12256
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !12257

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !12258
  br label %kmalloc_index.exit.i, !dbg !12258

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12259
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !12260
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !12261

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !12262
  br label %kmalloc_index.exit.i, !dbg !12262

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12263
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !12264
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !12265

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !12266
  br label %kmalloc_index.exit.i, !dbg !12266

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12267
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !12268
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !12269

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !12270
  br label %kmalloc_index.exit.i, !dbg !12270

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12271
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !12272
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !12273

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !12274
  br label %kmalloc_index.exit.i, !dbg !12274

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12275
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !12276
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !12277

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !12278
  br label %kmalloc_index.exit.i, !dbg !12278

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12279
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !12280
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !12281

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !12282
  br label %kmalloc_index.exit.i, !dbg !12282

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12283
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !12284
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12285

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12286
  br label %kmalloc_index.exit.i, !dbg !12286

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12287
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !12288
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12289

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12290
  br label %kmalloc_index.exit.i, !dbg !12290

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12291
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !12292
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12293

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12294
  br label %kmalloc_index.exit.i, !dbg !12294

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12295
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !12296
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12297

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12298
  br label %kmalloc_index.exit.i, !dbg !12298

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12299
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !12300
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12301

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12302
  br label %kmalloc_index.exit.i, !dbg !12302

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12303
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !12304
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !12305

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !12306
  br label %kmalloc_index.exit.i, !dbg !12306

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12307
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !12308
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !12309

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !12310
  br label %kmalloc_index.exit.i, !dbg !12310

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12311
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !12312
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !12313

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !12314
  br label %kmalloc_index.exit.i, !dbg !12314

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !12315, !srcloc !12078
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 160) #7, !dbg !12316, !srcloc !12082
  unreachable, !dbg !12317

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !12318
  store i32 %59, i32* %index.i, align 4, !dbg !12319
  %60 = load i32, i32* %index.i, align 4, !dbg !12320
  %tobool.i = icmp ne i32 %60, 0, !dbg !12320
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !12321

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !12322
  br label %kmalloc.exit, !dbg !12322

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !12323
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12324
  %and.i.i = and i32 %62, 17, !dbg !12324
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !12324
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !12324
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !12324
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12324
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !12325

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !12326
  br label %kmalloc_type.exit.i, !dbg !12326

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12327
  %and2.i.i = and i32 %63, 1, !dbg !12328
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !12327
  %64 = zext i1 %tobool3.i.i to i64, !dbg !12327
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !12327
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !12329
  br label %kmalloc_type.exit.i, !dbg !12329

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !12330
  %idxprom.i = zext i32 %65 to i64, !dbg !12331
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !12331
  %66 = load i32, i32* %index.i, align 4, !dbg !12332
  %idxprom6.i = zext i32 %66 to i64, !dbg !12331
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !12331
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !12331
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !12333
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !12334
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12335
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12336
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #12, !dbg !12337
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !12337
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !12337
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !12337
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !12337
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !12138
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12338
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !12339
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !12340
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12341
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #12, !dbg !12342
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !12343
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !12344
  store i8* %76, i8** %retval.i, align 8, !dbg !12345
  br label %kmalloc.exit, !dbg !12345

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !12346
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !12347
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #12, !dbg !12348
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !12348
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !12348
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !12348
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !12348
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !12349
  br label %kmalloc.exit, !dbg !12349

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !12350
  store i8* %79, i8** %retval, align 8, !dbg !12351
  br label %return, !dbg !12351

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !12352
  %81 = load i32, i32* %flags.addr, align 4, !dbg !12353
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !12354
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !12354
  %maskedptr = and i64 %ptrint, 7, !dbg !12354
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !12354
  call void @llvm.assume(i1 %maskcond), !dbg !12354
  store i8* %call9, i8** %retval, align 8, !dbg !12355
  br label %return, !dbg !12355

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !12356
  ret i8* %82, !dbg !12356
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !12357 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !12361, metadata !DIExpression()), !dbg !12362
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !12363
  %tobool = trunc i8 %0 to i1, !dbg !12363
  %lnot = xor i1 %tobool, true, !dbg !12363
  %lnot1 = xor i1 %lnot, true, !dbg !12363
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12363
  %conv = sext i32 %lnot.ext to i64, !dbg !12363
  %tobool2 = icmp ne i64 %conv, 0, !dbg !12363
  ret i1 %tobool2, !dbg !12364
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !12365 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !12369, metadata !DIExpression()), !dbg !12373
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !12375, metadata !DIExpression()), !dbg !12376
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12377, metadata !DIExpression()), !dbg !12378
  %0 = load i64, i64* %size.addr, align 8, !dbg !12379
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !12381
  br i1 %1, label %if.then, label %if.end447, !dbg !12382

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !12383
  %tobool = icmp ne i64 %2, 0, !dbg !12383
  br i1 %tobool, label %if.end, label %if.then1, !dbg !12386

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !12387
  br label %return, !dbg !12387

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !12388
  %cmp = icmp ult i64 %3, 4096, !dbg !12390
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12391

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !12392
  br label %return, !dbg !12392

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub = sub i64 %4, 1, !dbg !12393
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !12393
  br i1 %5, label %cond.true, label %cond.false442, !dbg !12393

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub4 = sub i64 %6, 1, !dbg !12393
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !12393
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !12393

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub6 = sub i64 %8, 1, !dbg !12393
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !12393
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !12393

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !12393

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub9 = sub i64 %9, 1, !dbg !12393
  %and = and i64 %sub9, -9223372036854775808, !dbg !12393
  %tobool10 = icmp ne i64 %and, 0, !dbg !12393
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !12393

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !12393

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub13 = sub i64 %10, 1, !dbg !12393
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !12393
  %tobool15 = icmp ne i64 %and14, 0, !dbg !12393
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !12393

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !12393

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub18 = sub i64 %11, 1, !dbg !12393
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !12393
  %tobool20 = icmp ne i64 %and19, 0, !dbg !12393
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !12393

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !12393

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub23 = sub i64 %12, 1, !dbg !12393
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !12393
  %tobool25 = icmp ne i64 %and24, 0, !dbg !12393
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !12393

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !12393

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub28 = sub i64 %13, 1, !dbg !12393
  %and29 = and i64 %sub28, 576460752303423488, !dbg !12393
  %tobool30 = icmp ne i64 %and29, 0, !dbg !12393
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !12393

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !12393

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub33 = sub i64 %14, 1, !dbg !12393
  %and34 = and i64 %sub33, 288230376151711744, !dbg !12393
  %tobool35 = icmp ne i64 %and34, 0, !dbg !12393
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !12393

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !12393

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub38 = sub i64 %15, 1, !dbg !12393
  %and39 = and i64 %sub38, 144115188075855872, !dbg !12393
  %tobool40 = icmp ne i64 %and39, 0, !dbg !12393
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !12393

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !12393

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub43 = sub i64 %16, 1, !dbg !12393
  %and44 = and i64 %sub43, 72057594037927936, !dbg !12393
  %tobool45 = icmp ne i64 %and44, 0, !dbg !12393
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !12393

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !12393

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub48 = sub i64 %17, 1, !dbg !12393
  %and49 = and i64 %sub48, 36028797018963968, !dbg !12393
  %tobool50 = icmp ne i64 %and49, 0, !dbg !12393
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !12393

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !12393

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub53 = sub i64 %18, 1, !dbg !12393
  %and54 = and i64 %sub53, 18014398509481984, !dbg !12393
  %tobool55 = icmp ne i64 %and54, 0, !dbg !12393
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !12393

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !12393

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub58 = sub i64 %19, 1, !dbg !12393
  %and59 = and i64 %sub58, 9007199254740992, !dbg !12393
  %tobool60 = icmp ne i64 %and59, 0, !dbg !12393
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !12393

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !12393

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub63 = sub i64 %20, 1, !dbg !12393
  %and64 = and i64 %sub63, 4503599627370496, !dbg !12393
  %tobool65 = icmp ne i64 %and64, 0, !dbg !12393
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !12393

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !12393

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub68 = sub i64 %21, 1, !dbg !12393
  %and69 = and i64 %sub68, 2251799813685248, !dbg !12393
  %tobool70 = icmp ne i64 %and69, 0, !dbg !12393
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !12393

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !12393

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub73 = sub i64 %22, 1, !dbg !12393
  %and74 = and i64 %sub73, 1125899906842624, !dbg !12393
  %tobool75 = icmp ne i64 %and74, 0, !dbg !12393
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !12393

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !12393

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub78 = sub i64 %23, 1, !dbg !12393
  %and79 = and i64 %sub78, 562949953421312, !dbg !12393
  %tobool80 = icmp ne i64 %and79, 0, !dbg !12393
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !12393

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !12393

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub83 = sub i64 %24, 1, !dbg !12393
  %and84 = and i64 %sub83, 281474976710656, !dbg !12393
  %tobool85 = icmp ne i64 %and84, 0, !dbg !12393
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !12393

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !12393

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub88 = sub i64 %25, 1, !dbg !12393
  %and89 = and i64 %sub88, 140737488355328, !dbg !12393
  %tobool90 = icmp ne i64 %and89, 0, !dbg !12393
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !12393

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !12393

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub93 = sub i64 %26, 1, !dbg !12393
  %and94 = and i64 %sub93, 70368744177664, !dbg !12393
  %tobool95 = icmp ne i64 %and94, 0, !dbg !12393
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !12393

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !12393

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub98 = sub i64 %27, 1, !dbg !12393
  %and99 = and i64 %sub98, 35184372088832, !dbg !12393
  %tobool100 = icmp ne i64 %and99, 0, !dbg !12393
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !12393

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !12393

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub103 = sub i64 %28, 1, !dbg !12393
  %and104 = and i64 %sub103, 17592186044416, !dbg !12393
  %tobool105 = icmp ne i64 %and104, 0, !dbg !12393
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !12393

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !12393

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub108 = sub i64 %29, 1, !dbg !12393
  %and109 = and i64 %sub108, 8796093022208, !dbg !12393
  %tobool110 = icmp ne i64 %and109, 0, !dbg !12393
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !12393

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !12393

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub113 = sub i64 %30, 1, !dbg !12393
  %and114 = and i64 %sub113, 4398046511104, !dbg !12393
  %tobool115 = icmp ne i64 %and114, 0, !dbg !12393
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !12393

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !12393

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub118 = sub i64 %31, 1, !dbg !12393
  %and119 = and i64 %sub118, 2199023255552, !dbg !12393
  %tobool120 = icmp ne i64 %and119, 0, !dbg !12393
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !12393

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !12393

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub123 = sub i64 %32, 1, !dbg !12393
  %and124 = and i64 %sub123, 1099511627776, !dbg !12393
  %tobool125 = icmp ne i64 %and124, 0, !dbg !12393
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !12393

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !12393

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub128 = sub i64 %33, 1, !dbg !12393
  %and129 = and i64 %sub128, 549755813888, !dbg !12393
  %tobool130 = icmp ne i64 %and129, 0, !dbg !12393
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !12393

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !12393

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub133 = sub i64 %34, 1, !dbg !12393
  %and134 = and i64 %sub133, 274877906944, !dbg !12393
  %tobool135 = icmp ne i64 %and134, 0, !dbg !12393
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !12393

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !12393

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub138 = sub i64 %35, 1, !dbg !12393
  %and139 = and i64 %sub138, 137438953472, !dbg !12393
  %tobool140 = icmp ne i64 %and139, 0, !dbg !12393
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !12393

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !12393

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub143 = sub i64 %36, 1, !dbg !12393
  %and144 = and i64 %sub143, 68719476736, !dbg !12393
  %tobool145 = icmp ne i64 %and144, 0, !dbg !12393
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !12393

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !12393

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub148 = sub i64 %37, 1, !dbg !12393
  %and149 = and i64 %sub148, 34359738368, !dbg !12393
  %tobool150 = icmp ne i64 %and149, 0, !dbg !12393
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !12393

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !12393

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub153 = sub i64 %38, 1, !dbg !12393
  %and154 = and i64 %sub153, 17179869184, !dbg !12393
  %tobool155 = icmp ne i64 %and154, 0, !dbg !12393
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !12393

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !12393

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub158 = sub i64 %39, 1, !dbg !12393
  %and159 = and i64 %sub158, 8589934592, !dbg !12393
  %tobool160 = icmp ne i64 %and159, 0, !dbg !12393
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !12393

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !12393

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub163 = sub i64 %40, 1, !dbg !12393
  %and164 = and i64 %sub163, 4294967296, !dbg !12393
  %tobool165 = icmp ne i64 %and164, 0, !dbg !12393
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !12393

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !12393

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub168 = sub i64 %41, 1, !dbg !12393
  %and169 = and i64 %sub168, 2147483648, !dbg !12393
  %tobool170 = icmp ne i64 %and169, 0, !dbg !12393
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !12393

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !12393

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub173 = sub i64 %42, 1, !dbg !12393
  %and174 = and i64 %sub173, 1073741824, !dbg !12393
  %tobool175 = icmp ne i64 %and174, 0, !dbg !12393
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !12393

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !12393

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub178 = sub i64 %43, 1, !dbg !12393
  %and179 = and i64 %sub178, 536870912, !dbg !12393
  %tobool180 = icmp ne i64 %and179, 0, !dbg !12393
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !12393

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !12393

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub183 = sub i64 %44, 1, !dbg !12393
  %and184 = and i64 %sub183, 268435456, !dbg !12393
  %tobool185 = icmp ne i64 %and184, 0, !dbg !12393
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !12393

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !12393

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub188 = sub i64 %45, 1, !dbg !12393
  %and189 = and i64 %sub188, 134217728, !dbg !12393
  %tobool190 = icmp ne i64 %and189, 0, !dbg !12393
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !12393

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !12393

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub193 = sub i64 %46, 1, !dbg !12393
  %and194 = and i64 %sub193, 67108864, !dbg !12393
  %tobool195 = icmp ne i64 %and194, 0, !dbg !12393
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !12393

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !12393

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub198 = sub i64 %47, 1, !dbg !12393
  %and199 = and i64 %sub198, 33554432, !dbg !12393
  %tobool200 = icmp ne i64 %and199, 0, !dbg !12393
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !12393

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !12393

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub203 = sub i64 %48, 1, !dbg !12393
  %and204 = and i64 %sub203, 16777216, !dbg !12393
  %tobool205 = icmp ne i64 %and204, 0, !dbg !12393
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !12393

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !12393

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub208 = sub i64 %49, 1, !dbg !12393
  %and209 = and i64 %sub208, 8388608, !dbg !12393
  %tobool210 = icmp ne i64 %and209, 0, !dbg !12393
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !12393

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !12393

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub213 = sub i64 %50, 1, !dbg !12393
  %and214 = and i64 %sub213, 4194304, !dbg !12393
  %tobool215 = icmp ne i64 %and214, 0, !dbg !12393
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !12393

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !12393

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub218 = sub i64 %51, 1, !dbg !12393
  %and219 = and i64 %sub218, 2097152, !dbg !12393
  %tobool220 = icmp ne i64 %and219, 0, !dbg !12393
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !12393

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !12393

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub223 = sub i64 %52, 1, !dbg !12393
  %and224 = and i64 %sub223, 1048576, !dbg !12393
  %tobool225 = icmp ne i64 %and224, 0, !dbg !12393
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !12393

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !12393

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub228 = sub i64 %53, 1, !dbg !12393
  %and229 = and i64 %sub228, 524288, !dbg !12393
  %tobool230 = icmp ne i64 %and229, 0, !dbg !12393
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !12393

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !12393

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub233 = sub i64 %54, 1, !dbg !12393
  %and234 = and i64 %sub233, 262144, !dbg !12393
  %tobool235 = icmp ne i64 %and234, 0, !dbg !12393
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !12393

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !12393

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub238 = sub i64 %55, 1, !dbg !12393
  %and239 = and i64 %sub238, 131072, !dbg !12393
  %tobool240 = icmp ne i64 %and239, 0, !dbg !12393
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !12393

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !12393

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub243 = sub i64 %56, 1, !dbg !12393
  %and244 = and i64 %sub243, 65536, !dbg !12393
  %tobool245 = icmp ne i64 %and244, 0, !dbg !12393
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !12393

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !12393

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub248 = sub i64 %57, 1, !dbg !12393
  %and249 = and i64 %sub248, 32768, !dbg !12393
  %tobool250 = icmp ne i64 %and249, 0, !dbg !12393
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !12393

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !12393

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub253 = sub i64 %58, 1, !dbg !12393
  %and254 = and i64 %sub253, 16384, !dbg !12393
  %tobool255 = icmp ne i64 %and254, 0, !dbg !12393
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !12393

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !12393

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub258 = sub i64 %59, 1, !dbg !12393
  %and259 = and i64 %sub258, 8192, !dbg !12393
  %tobool260 = icmp ne i64 %and259, 0, !dbg !12393
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !12393

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !12393

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub263 = sub i64 %60, 1, !dbg !12393
  %and264 = and i64 %sub263, 4096, !dbg !12393
  %tobool265 = icmp ne i64 %and264, 0, !dbg !12393
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !12393

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !12393

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub268 = sub i64 %61, 1, !dbg !12393
  %and269 = and i64 %sub268, 2048, !dbg !12393
  %tobool270 = icmp ne i64 %and269, 0, !dbg !12393
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !12393

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !12393

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub273 = sub i64 %62, 1, !dbg !12393
  %and274 = and i64 %sub273, 1024, !dbg !12393
  %tobool275 = icmp ne i64 %and274, 0, !dbg !12393
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !12393

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !12393

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub278 = sub i64 %63, 1, !dbg !12393
  %and279 = and i64 %sub278, 512, !dbg !12393
  %tobool280 = icmp ne i64 %and279, 0, !dbg !12393
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !12393

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !12393

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub283 = sub i64 %64, 1, !dbg !12393
  %and284 = and i64 %sub283, 256, !dbg !12393
  %tobool285 = icmp ne i64 %and284, 0, !dbg !12393
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !12393

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !12393

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub288 = sub i64 %65, 1, !dbg !12393
  %and289 = and i64 %sub288, 128, !dbg !12393
  %tobool290 = icmp ne i64 %and289, 0, !dbg !12393
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !12393

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !12393

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub293 = sub i64 %66, 1, !dbg !12393
  %and294 = and i64 %sub293, 64, !dbg !12393
  %tobool295 = icmp ne i64 %and294, 0, !dbg !12393
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !12393

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !12393

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub298 = sub i64 %67, 1, !dbg !12393
  %and299 = and i64 %sub298, 32, !dbg !12393
  %tobool300 = icmp ne i64 %and299, 0, !dbg !12393
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !12393

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !12393

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub303 = sub i64 %68, 1, !dbg !12393
  %and304 = and i64 %sub303, 16, !dbg !12393
  %tobool305 = icmp ne i64 %and304, 0, !dbg !12393
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !12393

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !12393

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub308 = sub i64 %69, 1, !dbg !12393
  %and309 = and i64 %sub308, 8, !dbg !12393
  %tobool310 = icmp ne i64 %and309, 0, !dbg !12393
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !12393

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !12393

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub313 = sub i64 %70, 1, !dbg !12393
  %and314 = and i64 %sub313, 4, !dbg !12393
  %tobool315 = icmp ne i64 %and314, 0, !dbg !12393
  %71 = zext i1 %tobool315 to i64, !dbg !12393
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !12393
  br label %cond.end, !dbg !12393

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !12393
  br label %cond.end317, !dbg !12393

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !12393
  br label %cond.end319, !dbg !12393

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !12393
  br label %cond.end321, !dbg !12393

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !12393
  br label %cond.end323, !dbg !12393

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !12393
  br label %cond.end325, !dbg !12393

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !12393
  br label %cond.end327, !dbg !12393

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !12393
  br label %cond.end329, !dbg !12393

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !12393
  br label %cond.end331, !dbg !12393

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !12393
  br label %cond.end333, !dbg !12393

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !12393
  br label %cond.end335, !dbg !12393

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !12393
  br label %cond.end337, !dbg !12393

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !12393
  br label %cond.end339, !dbg !12393

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !12393
  br label %cond.end341, !dbg !12393

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !12393
  br label %cond.end343, !dbg !12393

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !12393
  br label %cond.end345, !dbg !12393

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !12393
  br label %cond.end347, !dbg !12393

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !12393
  br label %cond.end349, !dbg !12393

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !12393
  br label %cond.end351, !dbg !12393

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !12393
  br label %cond.end353, !dbg !12393

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !12393
  br label %cond.end355, !dbg !12393

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !12393
  br label %cond.end357, !dbg !12393

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !12393
  br label %cond.end359, !dbg !12393

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !12393
  br label %cond.end361, !dbg !12393

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !12393
  br label %cond.end363, !dbg !12393

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !12393
  br label %cond.end365, !dbg !12393

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !12393
  br label %cond.end367, !dbg !12393

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !12393
  br label %cond.end369, !dbg !12393

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !12393
  br label %cond.end371, !dbg !12393

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !12393
  br label %cond.end373, !dbg !12393

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !12393
  br label %cond.end375, !dbg !12393

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !12393
  br label %cond.end377, !dbg !12393

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !12393
  br label %cond.end379, !dbg !12393

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !12393
  br label %cond.end381, !dbg !12393

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !12393
  br label %cond.end383, !dbg !12393

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !12393
  br label %cond.end385, !dbg !12393

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !12393
  br label %cond.end387, !dbg !12393

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !12393
  br label %cond.end389, !dbg !12393

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !12393
  br label %cond.end391, !dbg !12393

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !12393
  br label %cond.end393, !dbg !12393

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !12393
  br label %cond.end395, !dbg !12393

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !12393
  br label %cond.end397, !dbg !12393

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !12393
  br label %cond.end399, !dbg !12393

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !12393
  br label %cond.end401, !dbg !12393

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !12393
  br label %cond.end403, !dbg !12393

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !12393
  br label %cond.end405, !dbg !12393

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !12393
  br label %cond.end407, !dbg !12393

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !12393
  br label %cond.end409, !dbg !12393

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !12393
  br label %cond.end411, !dbg !12393

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !12393
  br label %cond.end413, !dbg !12393

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !12393
  br label %cond.end415, !dbg !12393

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !12393
  br label %cond.end417, !dbg !12393

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !12393
  br label %cond.end419, !dbg !12393

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !12393
  br label %cond.end421, !dbg !12393

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !12393
  br label %cond.end423, !dbg !12393

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !12393
  br label %cond.end425, !dbg !12393

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !12393
  br label %cond.end427, !dbg !12393

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !12393
  br label %cond.end429, !dbg !12393

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !12393
  br label %cond.end431, !dbg !12393

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !12393
  br label %cond.end433, !dbg !12393

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !12393
  br label %cond.end435, !dbg !12393

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !12393
  br label %cond.end437, !dbg !12393

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !12393
  br label %cond.end440, !dbg !12393

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !12393

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !12393
  br label %cond.end444, !dbg !12393

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !12393
  %sub443 = sub i64 %72, 1, !dbg !12393
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !12393
  br label %cond.end444, !dbg !12393

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !12393
  %sub446 = sub i32 %cond445, 12, !dbg !12394
  %add = add i32 %sub446, 1, !dbg !12395
  store i32 %add, i32* %retval, align 4, !dbg !12396
  br label %return, !dbg !12396

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !12397
  %dec = add i64 %73, -1, !dbg !12397
  store i64 %dec, i64* %size.addr, align 8, !dbg !12397
  %74 = load i64, i64* %size.addr, align 8, !dbg !12398
  %shr = lshr i64 %74, 12, !dbg !12398
  store i64 %shr, i64* %size.addr, align 8, !dbg !12398
  %75 = load i64, i64* %size.addr, align 8, !dbg !12399
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !12376
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !12400
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !12401
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !12400, !srcloc !12402
  store i32 %78, i32* %bitpos.i, align 4, !dbg !12400
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !12403
  %add.i = add i32 %79, 1, !dbg !12404
  store i32 %add.i, i32* %retval, align 4, !dbg !12405
  br label %return, !dbg !12405

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !12406
  ret i32 %80, !dbg !12406
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !12407 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !12369, metadata !DIExpression()), !dbg !12411
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !12375, metadata !DIExpression()), !dbg !12413
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12414, metadata !DIExpression()), !dbg !12415
  %0 = load i64, i64* %n.addr, align 8, !dbg !12416
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !12413
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !12417
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !12418
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !12417, !srcloc !12402
  store i32 %3, i32* %bitpos.i, align 4, !dbg !12417
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !12419
  %add.i = add i32 %4, 1, !dbg !12420
  %sub = sub i32 %add.i, 1, !dbg !12421
  ret i32 %sub, !dbg !12422
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !12423 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !12427, metadata !DIExpression()), !dbg !12428
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !12429, metadata !DIExpression()), !dbg !12430
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12431, metadata !DIExpression()), !dbg !12432
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12433, metadata !DIExpression()), !dbg !12434
  %0 = load i8*, i8** %object.addr, align 8, !dbg !12435
  ret i8* %0, !dbg !12436
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !12437 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !12440, metadata !DIExpression()), !dbg !12441
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !12442, metadata !DIExpression()), !dbg !12443
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !12444, metadata !DIExpression()), !dbg !12445
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12446
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12448
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12449
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !12450
  br i1 %call, label %if.end, label %if.then, !dbg !12451

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !12452

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12453
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12454
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !12455
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !12456
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !12457
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12458
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !12459
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !12460
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12461
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12462
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !12463
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !12464
  br label %do.body, !dbg !12465

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !12466

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !12468

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !12466

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12470
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !12470
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !12470
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !12470
  br label %do.end7, !dbg !12470

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !12466

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !12472
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !12473 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !12476, metadata !DIExpression()), !dbg !12477
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !12478, metadata !DIExpression()), !dbg !12479
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !12480, metadata !DIExpression()), !dbg !12481
  ret i1 true, !dbg !12482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @check_period(%struct.ehci_hcd* %ehci, i32 %frame, i32 %uframe, i32 %uperiod, i32 %usecs) #0 !dbg !12483 {
entry:
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %frame.addr = alloca i32, align 4
  %uframe.addr = alloca i32, align 4
  %uperiod.addr = alloca i32, align 4
  %usecs.addr = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !12486, metadata !DIExpression()), !dbg !12487
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !12488, metadata !DIExpression()), !dbg !12489
  store i32 %uframe, i32* %uframe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uframe.addr, metadata !12490, metadata !DIExpression()), !dbg !12491
  store i32 %uperiod, i32* %uperiod.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uperiod.addr, metadata !12492, metadata !DIExpression()), !dbg !12493
  store i32 %usecs, i32* %usecs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %usecs.addr, metadata !12494, metadata !DIExpression()), !dbg !12495
  %0 = load i32, i32* %uframe.addr, align 4, !dbg !12496
  %cmp = icmp uge i32 %0, 8, !dbg !12498
  br i1 %cmp, label %if.then, label %if.end, !dbg !12499

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12500
  br label %return, !dbg !12500

if.end:                                           ; preds = %entry
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12501
  %uframe_periodic_max = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 38, !dbg !12502
  %2 = load i32, i32* %uframe_periodic_max, align 4, !dbg !12502
  %3 = load i32, i32* %usecs.addr, align 4, !dbg !12503
  %sub = sub i32 %2, %3, !dbg !12504
  store i32 %sub, i32* %usecs.addr, align 4, !dbg !12505
  %4 = load i32, i32* %frame.addr, align 4, !dbg !12506
  %shl = shl i32 %4, 3, !dbg !12508
  %5 = load i32, i32* %uframe.addr, align 4, !dbg !12509
  %add = add i32 %5, %shl, !dbg !12509
  store i32 %add, i32* %uframe.addr, align 4, !dbg !12509
  br label %for.cond, !dbg !12510

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %uframe.addr, align 4, !dbg !12511
  %cmp1 = icmp ult i32 %6, 64, !dbg !12513
  br i1 %cmp1, label %for.body, label %for.end, !dbg !12514

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12515
  %bandwidth = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 62, !dbg !12518
  %8 = load i32, i32* %uframe.addr, align 4, !dbg !12519
  %idxprom = zext i32 %8 to i64, !dbg !12515
  %arrayidx = getelementptr [64 x i8], [64 x i8]* %bandwidth, i64 0, i64 %idxprom, !dbg !12515
  %9 = load i8, i8* %arrayidx, align 1, !dbg !12515
  %conv = zext i8 %9 to i32, !dbg !12515
  %10 = load i32, i32* %usecs.addr, align 4, !dbg !12520
  %cmp2 = icmp ugt i32 %conv, %10, !dbg !12521
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !12522

if.then4:                                         ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !12523
  br label %return, !dbg !12523

if.end5:                                          ; preds = %for.body
  br label %for.inc, !dbg !12524

for.inc:                                          ; preds = %if.end5
  %11 = load i32, i32* %uperiod.addr, align 4, !dbg !12525
  %12 = load i32, i32* %uframe.addr, align 4, !dbg !12526
  %add6 = add i32 %12, %11, !dbg !12526
  store i32 %add6, i32* %uframe.addr, align 4, !dbg !12526
  br label %for.cond, !dbg !12527, !llvm.loop !12528

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !12530
  br label %return, !dbg !12530

return:                                           ; preds = %for.end, %if.then4, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !12531
  ret i32 %13, !dbg !12531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @tt_available(%struct.ehci_hcd* %ehci, %struct.ehci_per_sched* %ps, %struct.ehci_tt* %tt, i32 %frame, i32 %uframe) #0 !dbg !12532 {
entry:
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %ps.addr = alloca %struct.ehci_per_sched*, align 8
  %tt.addr = alloca %struct.ehci_tt*, align 8
  %frame.addr = alloca i32, align 4
  %uframe.addr = alloca i32, align 4
  %period = alloca i32, align 4
  %usecs = alloca i32, align 4
  %i = alloca i32, align 4
  %uf = alloca i32, align 4
  %tt_usecs7 = alloca [8 x i16], align 16
  %ufs = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !12535, metadata !DIExpression()), !dbg !12536
  store %struct.ehci_per_sched* %ps, %struct.ehci_per_sched** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_per_sched** %ps.addr, metadata !12537, metadata !DIExpression()), !dbg !12538
  store %struct.ehci_tt* %tt, %struct.ehci_tt** %tt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_tt** %tt.addr, metadata !12539, metadata !DIExpression()), !dbg !12540
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !12541, metadata !DIExpression()), !dbg !12542
  store i32 %uframe, i32* %uframe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uframe.addr, metadata !12543, metadata !DIExpression()), !dbg !12544
  call void @llvm.dbg.declare(metadata i32* %period, metadata !12545, metadata !DIExpression()), !dbg !12546
  %0 = load %struct.ehci_per_sched*, %struct.ehci_per_sched** %ps.addr, align 8, !dbg !12547
  %bw_period = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %0, i32 0, i32 12, !dbg !12548
  %1 = load i8, i8* %bw_period, align 1, !dbg !12548
  %conv = zext i8 %1 to i32, !dbg !12547
  store i32 %conv, i32* %period, align 4, !dbg !12546
  call void @llvm.dbg.declare(metadata i32* %usecs, metadata !12549, metadata !DIExpression()), !dbg !12550
  %2 = load %struct.ehci_per_sched*, %struct.ehci_per_sched** %ps.addr, align 8, !dbg !12551
  %tt_usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %2, i32 0, i32 3, !dbg !12552
  %3 = load i16, i16* %tt_usecs, align 8, !dbg !12552
  %conv1 = zext i16 %3 to i32, !dbg !12551
  store i32 %conv1, i32* %usecs, align 4, !dbg !12550
  %4 = load i32, i32* %period, align 4, !dbg !12553
  %cmp = icmp eq i32 %4, 0, !dbg !12555
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12556

lor.lhs.false:                                    ; preds = %entry
  %5 = load i32, i32* %uframe.addr, align 4, !dbg !12557
  %cmp3 = icmp uge i32 %5, 7, !dbg !12558
  br i1 %cmp3, label %if.then, label %if.end, !dbg !12559

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !12560
  br label %return, !dbg !12560

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i32, i32* %period, align 4, !dbg !12561
  %sub = sub i32 %6, 1, !dbg !12563
  %7 = load i32, i32* %frame.addr, align 4, !dbg !12564
  %and = and i32 %7, %sub, !dbg !12564
  store i32 %and, i32* %frame.addr, align 4, !dbg !12564
  br label %for.cond, !dbg !12565

for.cond:                                         ; preds = %for.inc66, %if.end
  %8 = load i32, i32* %frame.addr, align 4, !dbg !12566
  %cmp5 = icmp ult i32 %8, 8, !dbg !12568
  br i1 %cmp5, label %for.body, label %for.end68, !dbg !12569

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12570, metadata !DIExpression()), !dbg !12572
  call void @llvm.dbg.declare(metadata i32* %uf, metadata !12573, metadata !DIExpression()), !dbg !12574
  call void @llvm.dbg.declare(metadata [8 x i16]* %tt_usecs7, metadata !12575, metadata !DIExpression()), !dbg !12577
  %9 = load %struct.ehci_tt*, %struct.ehci_tt** %tt.addr, align 8, !dbg !12578
  %bandwidth = getelementptr inbounds %struct.ehci_tt, %struct.ehci_tt* %9, i32 0, i32 0, !dbg !12580
  %10 = load i32, i32* %frame.addr, align 4, !dbg !12581
  %idxprom = zext i32 %10 to i64, !dbg !12578
  %arrayidx = getelementptr [8 x i16], [8 x i16]* %bandwidth, i64 0, i64 %idxprom, !dbg !12578
  %11 = load i16, i16* %arrayidx, align 2, !dbg !12578
  %conv8 = zext i16 %11 to i32, !dbg !12578
  %12 = load i32, i32* %usecs, align 4, !dbg !12582
  %add = add i32 %conv8, %12, !dbg !12583
  %cmp9 = icmp ugt i32 %add, 900, !dbg !12584
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !12585

if.then11:                                        ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !12586
  br label %return, !dbg !12586

if.end12:                                         ; preds = %for.body
  %13 = load i32, i32* %frame.addr, align 4, !dbg !12587
  %shl = shl i32 %13, 3, !dbg !12588
  store i32 %shl, i32* %uf, align 4, !dbg !12589
  store i32 0, i32* %i, align 4, !dbg !12590
  br label %for.cond13, !dbg !12592

for.cond13:                                       ; preds = %for.inc, %if.end12
  %14 = load i32, i32* %i, align 4, !dbg !12593
  %cmp14 = icmp ult i32 %14, 8, !dbg !12595
  br i1 %cmp14, label %for.body16, label %for.end, !dbg !12596

for.body16:                                       ; preds = %for.cond13
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12597
  %tt_budget = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %15, i32 0, i32 63, !dbg !12598
  %16 = load i32, i32* %uf, align 4, !dbg !12599
  %idxprom17 = zext i32 %16 to i64, !dbg !12597
  %arrayidx18 = getelementptr [64 x i8], [64 x i8]* %tt_budget, i64 0, i64 %idxprom17, !dbg !12597
  %17 = load i8, i8* %arrayidx18, align 1, !dbg !12597
  %conv19 = zext i8 %17 to i16, !dbg !12597
  %18 = load i32, i32* %i, align 4, !dbg !12600
  %idxprom20 = zext i32 %18 to i64, !dbg !12601
  %arrayidx21 = getelementptr [8 x i16], [8 x i16]* %tt_usecs7, i64 0, i64 %idxprom20, !dbg !12601
  store i16 %conv19, i16* %arrayidx21, align 2, !dbg !12602
  br label %for.inc, !dbg !12601

for.inc:                                          ; preds = %for.body16
  %19 = load i32, i32* %i, align 4, !dbg !12603
  %inc = add i32 %19, 1, !dbg !12603
  store i32 %inc, i32* %i, align 4, !dbg !12603
  %20 = load i32, i32* %uf, align 4, !dbg !12604
  %inc22 = add i32 %20, 1, !dbg !12604
  store i32 %inc22, i32* %uf, align 4, !dbg !12604
  br label %for.cond13, !dbg !12605, !llvm.loop !12606

for.end:                                          ; preds = %for.cond13
  %21 = load i32, i32* %uframe.addr, align 4, !dbg !12608
  %idxprom23 = zext i32 %21 to i64, !dbg !12610
  %arrayidx24 = getelementptr [8 x i8], [8 x i8]* @max_tt_usecs, i64 0, i64 %idxprom23, !dbg !12610
  %22 = load i8, i8* %arrayidx24, align 1, !dbg !12610
  %conv25 = zext i8 %22 to i32, !dbg !12610
  %23 = load i32, i32* %uframe.addr, align 4, !dbg !12611
  %idxprom26 = zext i32 %23 to i64, !dbg !12612
  %arrayidx27 = getelementptr [8 x i16], [8 x i16]* %tt_usecs7, i64 0, i64 %idxprom26, !dbg !12612
  %24 = load i16, i16* %arrayidx27, align 2, !dbg !12612
  %conv28 = zext i16 %24 to i32, !dbg !12612
  %cmp29 = icmp sle i32 %conv25, %conv28, !dbg !12613
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !12614

if.then31:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !12615
  br label %return, !dbg !12615

if.end32:                                         ; preds = %for.end
  %25 = load i32, i32* %usecs, align 4, !dbg !12616
  %cmp33 = icmp ugt i32 %25, 125, !dbg !12618
  br i1 %cmp33, label %if.then35, label %if.end53, !dbg !12619

if.then35:                                        ; preds = %if.end32
  call void @llvm.dbg.declare(metadata i32* %ufs, metadata !12620, metadata !DIExpression()), !dbg !12622
  %26 = load i32, i32* %usecs, align 4, !dbg !12623
  %div = udiv i32 %26, 125, !dbg !12624
  store i32 %div, i32* %ufs, align 4, !dbg !12622
  %27 = load i32, i32* %uframe.addr, align 4, !dbg !12625
  store i32 %27, i32* %i, align 4, !dbg !12627
  br label %for.cond36, !dbg !12628

for.cond36:                                       ; preds = %for.inc50, %if.then35
  %28 = load i32, i32* %i, align 4, !dbg !12629
  %29 = load i32, i32* %uframe.addr, align 4, !dbg !12631
  %30 = load i32, i32* %ufs, align 4, !dbg !12632
  %add37 = add i32 %29, %30, !dbg !12633
  %cmp38 = icmp ult i32 %28, %add37, !dbg !12634
  br i1 %cmp38, label %land.rhs, label %land.end, !dbg !12635

land.rhs:                                         ; preds = %for.cond36
  %31 = load i32, i32* %i, align 4, !dbg !12636
  %cmp40 = icmp ult i32 %31, 8, !dbg !12637
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond36
  %32 = phi i1 [ false, %for.cond36 ], [ %cmp40, %land.rhs ], !dbg !12638
  br i1 %32, label %for.body42, label %for.end52, !dbg !12639

for.body42:                                       ; preds = %land.end
  %33 = load i32, i32* %i, align 4, !dbg !12640
  %idxprom43 = zext i32 %33 to i64, !dbg !12642
  %arrayidx44 = getelementptr [8 x i16], [8 x i16]* %tt_usecs7, i64 0, i64 %idxprom43, !dbg !12642
  %34 = load i16, i16* %arrayidx44, align 2, !dbg !12642
  %conv45 = zext i16 %34 to i32, !dbg !12642
  %cmp46 = icmp sgt i32 %conv45, 0, !dbg !12643
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !12644

if.then48:                                        ; preds = %for.body42
  store i32 0, i32* %retval, align 4, !dbg !12645
  br label %return, !dbg !12645

if.end49:                                         ; preds = %for.body42
  br label %for.inc50, !dbg !12646

for.inc50:                                        ; preds = %if.end49
  %35 = load i32, i32* %i, align 4, !dbg !12647
  %inc51 = add i32 %35, 1, !dbg !12647
  store i32 %inc51, i32* %i, align 4, !dbg !12647
  br label %for.cond36, !dbg !12648, !llvm.loop !12649

for.end52:                                        ; preds = %land.end
  br label %if.end53, !dbg !12651

if.end53:                                         ; preds = %for.end52, %if.end32
  %36 = load i32, i32* %usecs, align 4, !dbg !12652
  %37 = load i32, i32* %uframe.addr, align 4, !dbg !12653
  %idxprom54 = zext i32 %37 to i64, !dbg !12654
  %arrayidx55 = getelementptr [8 x i16], [8 x i16]* %tt_usecs7, i64 0, i64 %idxprom54, !dbg !12654
  %38 = load i16, i16* %arrayidx55, align 2, !dbg !12655
  %conv56 = zext i16 %38 to i32, !dbg !12655
  %add57 = add i32 %conv56, %36, !dbg !12655
  %conv58 = trunc i32 %add57 to i16, !dbg !12655
  store i16 %conv58, i16* %arrayidx55, align 2, !dbg !12655
  %arraydecay = getelementptr inbounds [8 x i16], [8 x i16]* %tt_usecs7, i64 0, i64 0, !dbg !12656
  call void @carryover_tt_bandwidth(i16* %arraydecay) #11, !dbg !12657
  %39 = load i8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @max_tt_usecs, i64 0, i64 7), align 1, !dbg !12658
  %conv59 = zext i8 %39 to i32, !dbg !12658
  %arrayidx60 = getelementptr [8 x i16], [8 x i16]* %tt_usecs7, i64 0, i64 7, !dbg !12660
  %40 = load i16, i16* %arrayidx60, align 2, !dbg !12660
  %conv61 = zext i16 %40 to i32, !dbg !12660
  %cmp62 = icmp slt i32 %conv59, %conv61, !dbg !12661
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !12662

if.then64:                                        ; preds = %if.end53
  store i32 0, i32* %retval, align 4, !dbg !12663
  br label %return, !dbg !12663

if.end65:                                         ; preds = %if.end53
  br label %for.inc66, !dbg !12664

for.inc66:                                        ; preds = %if.end65
  %41 = load i32, i32* %period, align 4, !dbg !12665
  %42 = load i32, i32* %frame.addr, align 4, !dbg !12666
  %add67 = add i32 %42, %41, !dbg !12666
  store i32 %add67, i32* %frame.addr, align 4, !dbg !12666
  br label %for.cond, !dbg !12667, !llvm.loop !12668

for.end68:                                        ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !12670
  br label %return, !dbg !12670

return:                                           ; preds = %for.end68, %if.then64, %if.then48, %if.then31, %if.then11, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !12671
  ret i32 %43, !dbg !12671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @carryover_tt_bandwidth(i16* %tt_usecs) #0 !dbg !12672 {
entry:
  %tt_usecs.addr = alloca i16*, align 8
  %i = alloca i32, align 4
  store i16* %tt_usecs, i16** %tt_usecs.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %tt_usecs.addr, metadata !12676, metadata !DIExpression()), !dbg !12677
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12678, metadata !DIExpression()), !dbg !12679
  store i32 0, i32* %i, align 4, !dbg !12680
  br label %for.cond, !dbg !12682

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12683
  %cmp = icmp slt i32 %0, 7, !dbg !12685
  br i1 %cmp, label %for.body, label %for.end, !dbg !12686

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !12687
  %idxprom = sext i32 %1 to i64, !dbg !12690
  %arrayidx = getelementptr [8 x i8], [8 x i8]* @max_tt_usecs, i64 0, i64 %idxprom, !dbg !12690
  %2 = load i8, i8* %arrayidx, align 1, !dbg !12690
  %conv = zext i8 %2 to i32, !dbg !12690
  %3 = load i16*, i16** %tt_usecs.addr, align 8, !dbg !12691
  %4 = load i32, i32* %i, align 4, !dbg !12692
  %idxprom1 = sext i32 %4 to i64, !dbg !12691
  %arrayidx2 = getelementptr i16, i16* %3, i64 %idxprom1, !dbg !12691
  %5 = load i16, i16* %arrayidx2, align 2, !dbg !12691
  %conv3 = zext i16 %5 to i32, !dbg !12691
  %cmp4 = icmp slt i32 %conv, %conv3, !dbg !12693
  br i1 %cmp4, label %if.then, label %if.end, !dbg !12694

if.then:                                          ; preds = %for.body
  %6 = load i16*, i16** %tt_usecs.addr, align 8, !dbg !12695
  %7 = load i32, i32* %i, align 4, !dbg !12697
  %idxprom6 = sext i32 %7 to i64, !dbg !12695
  %arrayidx7 = getelementptr i16, i16* %6, i64 %idxprom6, !dbg !12695
  %8 = load i16, i16* %arrayidx7, align 2, !dbg !12695
  %conv8 = zext i16 %8 to i32, !dbg !12695
  %9 = load i32, i32* %i, align 4, !dbg !12698
  %idxprom9 = sext i32 %9 to i64, !dbg !12699
  %arrayidx10 = getelementptr [8 x i8], [8 x i8]* @max_tt_usecs, i64 0, i64 %idxprom9, !dbg !12699
  %10 = load i8, i8* %arrayidx10, align 1, !dbg !12699
  %conv11 = zext i8 %10 to i32, !dbg !12699
  %sub = sub i32 %conv8, %conv11, !dbg !12700
  %11 = load i16*, i16** %tt_usecs.addr, align 8, !dbg !12701
  %12 = load i32, i32* %i, align 4, !dbg !12702
  %add = add i32 %12, 1, !dbg !12703
  %idxprom12 = sext i32 %add to i64, !dbg !12701
  %arrayidx13 = getelementptr i16, i16* %11, i64 %idxprom12, !dbg !12701
  %13 = load i16, i16* %arrayidx13, align 2, !dbg !12704
  %conv14 = zext i16 %13 to i32, !dbg !12704
  %add15 = add i32 %conv14, %sub, !dbg !12704
  %conv16 = trunc i32 %add15 to i16, !dbg !12704
  store i16 %conv16, i16* %arrayidx13, align 2, !dbg !12704
  %14 = load i32, i32* %i, align 4, !dbg !12705
  %idxprom17 = sext i32 %14 to i64, !dbg !12706
  %arrayidx18 = getelementptr [8 x i8], [8 x i8]* @max_tt_usecs, i64 0, i64 %idxprom17, !dbg !12706
  %15 = load i8, i8* %arrayidx18, align 1, !dbg !12706
  %conv19 = zext i8 %15 to i16, !dbg !12706
  %16 = load i16*, i16** %tt_usecs.addr, align 8, !dbg !12707
  %17 = load i32, i32* %i, align 4, !dbg !12708
  %idxprom20 = sext i32 %17 to i64, !dbg !12707
  %arrayidx21 = getelementptr i16, i16* %16, i64 %idxprom20, !dbg !12707
  store i16 %conv19, i16* %arrayidx21, align 2, !dbg !12709
  br label %if.end, !dbg !12710

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !12711

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %i, align 4, !dbg !12712
  %inc = add i32 %18, 1, !dbg !12712
  store i32 %inc, i32* %i, align 4, !dbg !12712
  br label %for.cond, !dbg !12713, !llvm.loop !12714

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @bandwidth_dbg(%struct.ehci_hcd* %ehci, i32 %sign, i8* %type, %struct.ehci_per_sched* %ps) #0 !dbg !12717 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %sign.addr = alloca i32, align 4
  %type.addr = alloca i8*, align 8
  %ps.addr = alloca %struct.ehci_per_sched*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !12720, metadata !DIExpression()), !dbg !12721
  store i32 %sign, i32* %sign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.addr, metadata !12722, metadata !DIExpression()), !dbg !12723
  store i8* %type, i8** %type.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %type.addr, metadata !12724, metadata !DIExpression()), !dbg !12725
  store %struct.ehci_per_sched* %ps, %struct.ehci_per_sched** %ps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_per_sched** %ps.addr, metadata !12726, metadata !DIExpression()), !dbg !12727
  ret void, !dbg !12728
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @qh_update(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh, %struct.ehci_qtd* %qtd) #0 !dbg !12729 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  %qtd.addr = alloca %struct.ehci_qtd*, align 8
  %hw = alloca %struct.ehci_qh_hw*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %is_out = alloca i32, align 4
  %epnum = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !12732, metadata !DIExpression()), !dbg !12733
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !12734, metadata !DIExpression()), !dbg !12735
  store %struct.ehci_qtd* %qtd, %struct.ehci_qtd** %qtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qtd** %qtd.addr, metadata !12736, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.declare(metadata %struct.ehci_qh_hw** %hw, metadata !12738, metadata !DIExpression()), !dbg !12739
  %0 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !12740
  %hw1 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %0, i32 0, i32 0, !dbg !12741
  %1 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw1, align 8, !dbg !12741
  store %struct.ehci_qh_hw* %1, %struct.ehci_qh_hw** %hw, align 8, !dbg !12739
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12742, metadata !DIExpression()), !dbg !12744
  %2 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !12744
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %2, i32 0, i32 9, !dbg !12744
  %3 = load i8, i8* %qh_state, align 4, !dbg !12744
  %conv = zext i8 %3 to i32, !dbg !12744
  %cmp = icmp ne i32 %conv, 3, !dbg !12744
  %lnot = xor i1 %cmp, true, !dbg !12744
  %lnot3 = xor i1 %lnot, true, !dbg !12744
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !12744
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !12744
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !12745
  %tobool = icmp ne i32 %4, 0, !dbg !12745
  %lnot4 = xor i1 %tobool, true, !dbg !12745
  %lnot6 = xor i1 %lnot4, true, !dbg !12745
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !12745
  %conv8 = sext i32 %lnot.ext7 to i64, !dbg !12745
  %tobool9 = icmp ne i64 %conv8, 0, !dbg !12745
  br i1 %tobool9, label %if.then, label %if.end, !dbg !12744

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !12745

do.body:                                          ; preds = %if.then
  br label %do.body10, !dbg !12747

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !12749

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !12747

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i32 84, i32 2305, i64 12) #7, !dbg !12751, !srcloc !12753
  br label %do.end12, !dbg !12751

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 321) #7, !dbg !12754, !srcloc !12756
  br label %do.body13, !dbg !12747

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !12757

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !12747

do.end15:                                         ; preds = %do.end14
  br label %if.end, !dbg !12747

if.end:                                           ; preds = %do.end15, %entry
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !12744
  %tobool16 = icmp ne i32 %5, 0, !dbg !12744
  %lnot17 = xor i1 %tobool16, true, !dbg !12744
  %lnot19 = xor i1 %lnot17, true, !dbg !12744
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !12744
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !12744
  store i64 %conv21, i64* %tmp, align 8, !dbg !12745
  %6 = load i64, i64* %tmp, align 8, !dbg !12744
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12759
  %8 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !12759
  %qtd_dma = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %8, i32 0, i32 5, !dbg !12759
  %9 = load i64, i64* %qtd_dma, align 8, !dbg !12759
  %conv22 = trunc i64 %9 to i32, !dbg !12759
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %7, i32 %conv22) #11, !dbg !12759
  %10 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !12760
  %hw_qtd_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %10, i32 0, i32 4, !dbg !12761
  store i32 %call, i32* %hw_qtd_next, align 16, !dbg !12762
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12763
  %call23 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %11, i32 1) #11, !dbg !12763
  %12 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !12764
  %hw_alt_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %12, i32 0, i32 5, !dbg !12765
  store i32 %call23, i32* %hw_alt_next, align 4, !dbg !12766
  %13 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !12767
  %hw_info1 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %13, i32 0, i32 1, !dbg !12769
  %14 = load i32, i32* %hw_info1, align 4, !dbg !12769
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12770
  %call24 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %15, i32 16384) #11, !dbg !12771
  %and = and i32 %14, %call24, !dbg !12772
  %tobool25 = icmp ne i32 %and, 0, !dbg !12772
  br i1 %tobool25, label %if.end59, label %if.then26, !dbg !12773

if.then26:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %is_out, metadata !12774, metadata !DIExpression()), !dbg !12776
  call void @llvm.dbg.declare(metadata i32* %epnum, metadata !12777, metadata !DIExpression()), !dbg !12778
  %16 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !12779
  %is_out27 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %16, i32 0, i32 13, !dbg !12780
  %bf.load = load i8, i8* %is_out27, align 8, !dbg !12780
  %bf.clear = and i8 %bf.load, 1, !dbg !12780
  %bf.cast = zext i8 %bf.clear to i32, !dbg !12780
  store i32 %bf.cast, i32* %is_out, align 4, !dbg !12781
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12782
  %18 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !12783
  %hw_info128 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %18, i32 0, i32 1, !dbg !12784
  %call29 = call i32 @hc32_to_cpup(%struct.ehci_hcd* %17, i32* %hw_info128) #11, !dbg !12785
  %shr = lshr i32 %call29, 8, !dbg !12786
  %and30 = and i32 %shr, 15, !dbg !12787
  store i32 %and30, i32* %epnum, align 4, !dbg !12788
  %19 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !12789
  %ps = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %19, i32 0, i32 7, !dbg !12789
  %udev = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 0, !dbg !12789
  %20 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !12789
  %toggle = getelementptr inbounds %struct.usb_device, %struct.usb_device* %20, i32 0, i32 9, !dbg !12789
  %21 = load i32, i32* %is_out, align 4, !dbg !12789
  %idxprom = zext i32 %21 to i64, !dbg !12789
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %toggle, i64 0, i64 %idxprom, !dbg !12789
  %22 = load i32, i32* %arrayidx, align 4, !dbg !12789
  %23 = load i32, i32* %epnum, align 4, !dbg !12789
  %shr31 = lshr i32 %22, %23, !dbg !12789
  %and32 = and i32 %shr31, 1, !dbg !12789
  %tobool33 = icmp ne i32 %and32, 0, !dbg !12789
  %lnot34 = xor i1 %tobool33, true, !dbg !12789
  %lnot36 = xor i1 %lnot34, true, !dbg !12789
  %lnot38 = xor i1 %lnot36, true, !dbg !12789
  %lnot.ext39 = zext i1 %lnot38 to i32, !dbg !12789
  %conv40 = sext i32 %lnot.ext39 to i64, !dbg !12789
  %tobool41 = icmp ne i64 %conv40, 0, !dbg !12789
  br i1 %tobool41, label %if.then42, label %if.end58, !dbg !12791

if.then42:                                        ; preds = %if.then26
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12792
  %call43 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %24, i32 -2147483648) #11, !dbg !12794
  %neg = xor i32 %call43, -1, !dbg !12795
  %25 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !12796
  %hw_token = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %25, i32 0, i32 6, !dbg !12797
  %26 = load i32, i32* %hw_token, align 8, !dbg !12798
  %and44 = and i32 %26, %neg, !dbg !12798
  store i32 %and44, i32* %hw_token, align 8, !dbg !12798
  %27 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !12799
  %ps45 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %27, i32 0, i32 7, !dbg !12799
  %udev46 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps45, i32 0, i32 0, !dbg !12799
  %28 = load %struct.usb_device*, %struct.usb_device** %udev46, align 8, !dbg !12799
  %toggle47 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %28, i32 0, i32 9, !dbg !12799
  %29 = load i32, i32* %is_out, align 4, !dbg !12799
  %idxprom48 = zext i32 %29 to i64, !dbg !12799
  %arrayidx49 = getelementptr [2 x i32], [2 x i32]* %toggle47, i64 0, i64 %idxprom48, !dbg !12799
  %30 = load i32, i32* %arrayidx49, align 4, !dbg !12799
  %31 = load i32, i32* %epnum, align 4, !dbg !12799
  %shl = shl i32 1, %31, !dbg !12799
  %neg50 = xor i32 %shl, -1, !dbg !12799
  %and51 = and i32 %30, %neg50, !dbg !12799
  %32 = load i32, i32* %epnum, align 4, !dbg !12799
  %shl52 = shl i32 1, %32, !dbg !12799
  %or = or i32 %and51, %shl52, !dbg !12799
  %33 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !12799
  %ps53 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %33, i32 0, i32 7, !dbg !12799
  %udev54 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps53, i32 0, i32 0, !dbg !12799
  %34 = load %struct.usb_device*, %struct.usb_device** %udev54, align 8, !dbg !12799
  %toggle55 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %34, i32 0, i32 9, !dbg !12799
  %35 = load i32, i32* %is_out, align 4, !dbg !12799
  %idxprom56 = zext i32 %35 to i64, !dbg !12799
  %arrayidx57 = getelementptr [2 x i32], [2 x i32]* %toggle55, i64 0, i64 %idxprom56, !dbg !12799
  store i32 %or, i32* %arrayidx57, align 4, !dbg !12799
  br label %if.end58, !dbg !12800

if.end58:                                         ; preds = %if.then42, %if.then26
  br label %if.end59, !dbg !12801

if.end59:                                         ; preds = %if.end58, %if.end
  %36 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12802
  %call60 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %36, i32 -2147483647) #11, !dbg !12803
  %37 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !12804
  %hw_token61 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %37, i32 0, i32 6, !dbg !12805
  %38 = load i32, i32* %hw_token61, align 8, !dbg !12806
  %and62 = and i32 %38, %call60, !dbg !12806
  store i32 %and62, i32* %hw_token61, align 8, !dbg !12806
  ret void, !dbg !12807
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hc32_to_cpup(%struct.ehci_hcd* %ehci, i32* %x) #0 !dbg !12808 {
entry:
  %p.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %p.addr.i, metadata !12812, metadata !DIExpression()), !dbg !12817
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %x.addr = alloca i32*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !12819, metadata !DIExpression()), !dbg !12820
  store i32* %x, i32** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %x.addr, metadata !12821, metadata !DIExpression()), !dbg !12822
  %0 = load i32*, i32** %x.addr, align 8, !dbg !12823
  store i32* %0, i32** %p.addr.i, align 8
  %1 = load i32*, i32** %p.addr.i, align 8, !dbg !12824
  %2 = load i32, i32* %1, align 4, !dbg !12825
  ret i32 %2, !dbg !12826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %union.ehci_shadow* @periodic_next_shadow(%struct.ehci_hcd* %ehci, %union.ehci_shadow* %periodic, i32 %tag) #0 !dbg !12827 {
entry:
  %retval = alloca %union.ehci_shadow*, align 8
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %periodic.addr = alloca %union.ehci_shadow*, align 8
  %tag.addr = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !12830, metadata !DIExpression()), !dbg !12831
  store %union.ehci_shadow* %periodic, %union.ehci_shadow** %periodic.addr, align 8
  call void @llvm.dbg.declare(metadata %union.ehci_shadow** %periodic.addr, metadata !12832, metadata !DIExpression()), !dbg !12833
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !12834, metadata !DIExpression()), !dbg !12835
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12836
  %1 = load i32, i32* %tag.addr, align 4, !dbg !12837
  %call = call i32 @hc32_to_cpu(%struct.ehci_hcd* %0, i32 %1) #11, !dbg !12838
  switch i32 %call, label %sw.default [
    i32 2, label %sw.bb
    i32 6, label %sw.bb1
    i32 0, label %sw.bb2
  ], !dbg !12839

sw.bb:                                            ; preds = %entry
  %2 = load %union.ehci_shadow*, %union.ehci_shadow** %periodic.addr, align 8, !dbg !12840
  %qh = bitcast %union.ehci_shadow* %2 to %struct.ehci_qh**, !dbg !12842
  %3 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !12842
  %qh_next = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %3, i32 0, i32 2, !dbg !12843
  store %union.ehci_shadow* %qh_next, %union.ehci_shadow** %retval, align 8, !dbg !12844
  br label %return, !dbg !12844

sw.bb1:                                           ; preds = %entry
  %4 = load %union.ehci_shadow*, %union.ehci_shadow** %periodic.addr, align 8, !dbg !12845
  %fstn = bitcast %union.ehci_shadow* %4 to %struct.ehci_fstn**, !dbg !12846
  %5 = load %struct.ehci_fstn*, %struct.ehci_fstn** %fstn, align 8, !dbg !12846
  %fstn_next = getelementptr inbounds %struct.ehci_fstn, %struct.ehci_fstn* %5, i32 0, i32 3, !dbg !12847
  store %union.ehci_shadow* %fstn_next, %union.ehci_shadow** %retval, align 8, !dbg !12848
  br label %return, !dbg !12848

sw.bb2:                                           ; preds = %entry
  %6 = load %union.ehci_shadow*, %union.ehci_shadow** %periodic.addr, align 8, !dbg !12849
  %itd = bitcast %union.ehci_shadow* %6 to %struct.ehci_itd**, !dbg !12850
  %7 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !12850
  %itd_next = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %7, i32 0, i32 5, !dbg !12851
  store %union.ehci_shadow* %itd_next, %union.ehci_shadow** %retval, align 8, !dbg !12852
  br label %return, !dbg !12852

sw.default:                                       ; preds = %entry
  %8 = load %union.ehci_shadow*, %union.ehci_shadow** %periodic.addr, align 8, !dbg !12853
  %sitd = bitcast %union.ehci_shadow* %8 to %struct.ehci_sitd**, !dbg !12854
  %9 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !12854
  %sitd_next = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %9, i32 0, i32 8, !dbg !12855
  store %union.ehci_shadow* %sitd_next, %union.ehci_shadow** %retval, align 8, !dbg !12856
  br label %return, !dbg !12856

return:                                           ; preds = %sw.default, %sw.bb2, %sw.bb1, %sw.bb
  %10 = load %union.ehci_shadow*, %union.ehci_shadow** %retval, align 8, !dbg !12857
  ret %union.ehci_shadow* %10, !dbg !12857
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32* @shadow_next_periodic(%struct.ehci_hcd* %ehci, %union.ehci_shadow* %periodic, i32 %tag) #0 !dbg !12858 {
entry:
  %retval = alloca i32*, align 8
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %periodic.addr = alloca %union.ehci_shadow*, align 8
  %tag.addr = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !12861, metadata !DIExpression()), !dbg !12862
  store %union.ehci_shadow* %periodic, %union.ehci_shadow** %periodic.addr, align 8
  call void @llvm.dbg.declare(metadata %union.ehci_shadow** %periodic.addr, metadata !12863, metadata !DIExpression()), !dbg !12864
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !12865, metadata !DIExpression()), !dbg !12866
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12867
  %1 = load i32, i32* %tag.addr, align 4, !dbg !12868
  %call = call i32 @hc32_to_cpu(%struct.ehci_hcd* %0, i32 %1) #11, !dbg !12869
  switch i32 %call, label %sw.default [
    i32 2, label %sw.bb
  ], !dbg !12870

sw.bb:                                            ; preds = %entry
  %2 = load %union.ehci_shadow*, %union.ehci_shadow** %periodic.addr, align 8, !dbg !12871
  %qh = bitcast %union.ehci_shadow* %2 to %struct.ehci_qh**, !dbg !12873
  %3 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !12873
  %hw = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %3, i32 0, i32 0, !dbg !12874
  %4 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !12874
  %hw_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %4, i32 0, i32 0, !dbg !12875
  store i32* %hw_next, i32** %retval, align 8, !dbg !12876
  br label %return, !dbg !12876

sw.default:                                       ; preds = %entry
  %5 = load %union.ehci_shadow*, %union.ehci_shadow** %periodic.addr, align 8, !dbg !12877
  %hw_next1 = bitcast %union.ehci_shadow* %5 to i32**, !dbg !12878
  %6 = load i32*, i32** %hw_next1, align 8, !dbg !12878
  store i32* %6, i32** %retval, align 8, !dbg !12879
  br label %return, !dbg !12879

return:                                           ; preds = %sw.default, %sw.bb
  %7 = load i32*, i32** %retval, align 8, !dbg !12880
  ret i32* %7, !dbg !12880
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !12881 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !12882, metadata !DIExpression()), !dbg !12883
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !12884, metadata !DIExpression()), !dbg !12885
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !12886
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !12887
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !12888
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !12889
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12889
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !12890
  ret void, !dbg !12891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enable_periodic(%struct.ehci_hcd* %ehci) #0 !dbg !12892 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !12893, metadata !DIExpression()), !dbg !12894
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12895
  %periodic_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 37, !dbg !12897
  %1 = load i32, i32* %periodic_count, align 8, !dbg !12898
  %inc = add i32 %1, 1, !dbg !12898
  store i32 %inc, i32* %periodic_count, align 8, !dbg !12898
  %tobool = icmp ne i32 %1, 0, !dbg !12898
  br i1 %tobool, label %if.then, label %if.end, !dbg !12899

if.then:                                          ; preds = %entry
  br label %return, !dbg !12900

if.end:                                           ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12901
  %enabled_hrtimer_events = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 1, !dbg !12902
  %3 = load i32, i32* %enabled_hrtimer_events, align 4, !dbg !12903
  %conv = zext i32 %3 to i64, !dbg !12903
  %and = and i64 %conv, -513, !dbg !12903
  %conv1 = trunc i64 %and to i32, !dbg !12903
  store i32 %conv1, i32* %enabled_hrtimer_events, align 4, !dbg !12903
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12904
  call void @ehci_poll_PSS(%struct.ehci_hcd* %4) #11, !dbg !12905
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12906
  call void @turn_on_io_watchdog(%struct.ehci_hcd* %5) #11, !dbg !12907
  br label %return, !dbg !12908

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !12908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @turn_on_io_watchdog(%struct.ehci_hcd* %ehci) #0 !dbg !12909 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !12910, metadata !DIExpression()), !dbg !12911
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12912
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 12, !dbg !12914
  %1 = load i32, i32* %rh_state, align 4, !dbg !12914
  %cmp = icmp ne i32 %1, 2, !dbg !12915
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !12916

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12917
  %enabled_hrtimer_events = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 1, !dbg !12918
  %3 = load i32, i32* %enabled_hrtimer_events, align 4, !dbg !12918
  %conv = zext i32 %3 to i64, !dbg !12917
  %and = and i64 %conv, 2048, !dbg !12919
  %tobool = icmp ne i64 %and, 0, !dbg !12919
  br i1 %tobool, label %if.then, label %if.end, !dbg !12920

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end8, !dbg !12921

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12922
  %isoc_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 36, !dbg !12924
  %5 = load i32, i32* %isoc_count, align 4, !dbg !12924
  %cmp1 = icmp ugt i32 %5, 0, !dbg !12925
  br i1 %cmp1, label %if.then7, label %lor.lhs.false3, !dbg !12926

lor.lhs.false3:                                   ; preds = %if.end
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12927
  %need_io_watchdog = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 58, !dbg !12928
  %bf.load = load i16, i16* %need_io_watchdog, align 4, !dbg !12928
  %bf.lshr = lshr i16 %bf.load, 8, !dbg !12928
  %bf.clear = and i16 %bf.lshr, 1, !dbg !12928
  %bf.cast = zext i16 %bf.clear to i32, !dbg !12928
  %tobool4 = icmp ne i32 %bf.cast, 0, !dbg !12927
  br i1 %tobool4, label %land.lhs.true, label %if.end8, !dbg !12929

land.lhs.true:                                    ; preds = %lor.lhs.false3
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12930
  %async_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 20, !dbg !12931
  %8 = load i32, i32* %async_count, align 4, !dbg !12931
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12932
  %intr_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %9, i32 0, i32 35, !dbg !12933
  %10 = load i32, i32* %intr_count, align 8, !dbg !12933
  %add = add i32 %8, %10, !dbg !12934
  %cmp5 = icmp ugt i32 %add, 0, !dbg !12935
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !12936

if.then7:                                         ; preds = %land.lhs.true, %if.end
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12937
  call void @ehci_enable_event(%struct.ehci_hcd* %11, i32 11, i1 zeroext true) #11, !dbg !12938
  br label %if.end8, !dbg !12938

if.end8:                                          ; preds = %if.then, %if.then7, %land.lhs.true, %lor.lhs.false3
  ret void, !dbg !12939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @start_free_itds(%struct.ehci_hcd* %ehci) #0 !dbg !12940 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ehci_itd*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.ehci_sitd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !12941, metadata !DIExpression()), !dbg !12942
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12943
  %enabled_hrtimer_events = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 1, !dbg !12945
  %1 = load i32, i32* %enabled_hrtimer_events, align 4, !dbg !12945
  %conv = zext i32 %1 to i64, !dbg !12943
  %and = and i64 %conv, 16, !dbg !12946
  %tobool = icmp ne i64 %and, 0, !dbg !12946
  br i1 %tobool, label %if.end, label %if.then, !dbg !12947

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12948, metadata !DIExpression()), !dbg !12951
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12951
  %cached_itd_list = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 39, !dbg !12951
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %cached_itd_list, i32 0, i32 1, !dbg !12951
  %3 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !12951
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !12951
  store i8* %4, i8** %__mptr, align 8, !dbg !12951
  br label %do.body, !dbg !12951

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !12952

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !12951
  %add.ptr = getelementptr i8, i8* %5, i64 -128, !dbg !12951
  %6 = bitcast i8* %add.ptr to %struct.ehci_itd*, !dbg !12951
  store %struct.ehci_itd* %6, %struct.ehci_itd** %tmp, align 8, !dbg !12952
  %7 = load %struct.ehci_itd*, %struct.ehci_itd** %tmp, align 8, !dbg !12951
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12954
  %last_itd_to_free = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 40, !dbg !12955
  store %struct.ehci_itd* %7, %struct.ehci_itd** %last_itd_to_free, align 8, !dbg !12956
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !12957, metadata !DIExpression()), !dbg !12959
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12959
  %cached_sitd_list = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %9, i32 0, i32 41, !dbg !12959
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %cached_sitd_list, i32 0, i32 1, !dbg !12959
  %10 = load %struct.list_head*, %struct.list_head** %prev2, align 8, !dbg !12959
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !12959
  store i8* %11, i8** %__mptr1, align 8, !dbg !12959
  br label %do.body3, !dbg !12959

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !12960

do.end4:                                          ; preds = %do.body3
  %12 = load i8*, i8** %__mptr1, align 8, !dbg !12959
  %add.ptr6 = getelementptr i8, i8* %12, i64 -72, !dbg !12959
  %13 = bitcast i8* %add.ptr6 to %struct.ehci_sitd*, !dbg !12959
  store %struct.ehci_sitd* %13, %struct.ehci_sitd** %tmp5, align 8, !dbg !12960
  %14 = load %struct.ehci_sitd*, %struct.ehci_sitd** %tmp5, align 8, !dbg !12959
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12962
  %last_sitd_to_free = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %15, i32 0, i32 42, !dbg !12963
  store %struct.ehci_sitd* %14, %struct.ehci_sitd** %last_sitd_to_free, align 8, !dbg !12964
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !12965
  call void @ehci_enable_event(%struct.ehci_hcd* %16, i32 4, i1 zeroext true) #11, !dbg !12966
  br label %if.end, !dbg !12967

if.end:                                           ; preds = %do.end4, %entry
  ret void, !dbg !12968
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice_tail_init(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !12969 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !12970, metadata !DIExpression()), !dbg !12971
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !12972, metadata !DIExpression()), !dbg !12973
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12974
  %call = call i32 @list_empty(%struct.list_head* %0) #11, !dbg !12976
  %tobool = icmp ne i32 %call, 0, !dbg !12976
  br i1 %tobool, label %if.end, label %if.then, !dbg !12977

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12978
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !12980
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !12981
  %3 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !12981
  %4 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !12982
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %3, %struct.list_head* %4) #11, !dbg !12983
  %5 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12984
  call void @INIT_LIST_HEAD(%struct.list_head* %5) #11, !dbg !12985
  br label %if.end, !dbg !12986

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12987
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_move_tail(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !12988 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !12989, metadata !DIExpression()), !dbg !12990
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !12991, metadata !DIExpression()), !dbg !12992
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12993
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !12994
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12995
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !12996
  call void @list_add_tail(%struct.list_head* %1, %struct.list_head* %2) #11, !dbg !12997
  ret void, !dbg !12998
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @start_iaa_cycle(%struct.ehci_hcd* %ehci) #0 !dbg !12999 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13000, metadata !DIExpression()), !dbg !13001
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13002
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 12, !dbg !13002
  %1 = load i32, i32* %rh_state, align 4, !dbg !13002
  %cmp = icmp ult i32 %1, 2, !dbg !13002
  %lnot = xor i1 %cmp, true, !dbg !13002
  %lnot1 = xor i1 %lnot, true, !dbg !13002
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13002
  %conv = sext i32 %lnot.ext to i64, !dbg !13002
  %tobool = icmp ne i64 %conv, 0, !dbg !13002
  br i1 %tobool, label %if.then, label %if.else, !dbg !13004

if.then:                                          ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13005
  call void @end_unlink_async(%struct.ehci_hcd* %2) #11, !dbg !13007
  br label %if.end12, !dbg !13008

if.else:                                          ; preds = %entry
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13009
  %rh_state2 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 12, !dbg !13011
  %4 = load i32, i32* %rh_state2, align 4, !dbg !13011
  %cmp3 = icmp eq i32 %4, 2, !dbg !13012
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !13013

land.lhs.true:                                    ; preds = %if.else
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13014
  %iaa_in_progress = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 13, !dbg !13015
  %bf.load = load i8, i8* %iaa_in_progress, align 8, !dbg !13015
  %bf.lshr = lshr i8 %bf.load, 3, !dbg !13015
  %bf.clear = and i8 %bf.lshr, 1, !dbg !13015
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !13015
  br i1 %bf.cast, label %if.end, label %if.then5, !dbg !13016

if.then5:                                         ; preds = %land.lhs.true
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13017, !srcloc !13019
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13020
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13021
  %command = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 57, !dbg !13022
  %8 = load i32, i32* %command, align 8, !dbg !13022
  %or = or i32 %8, 64, !dbg !13023
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13024
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %9, i32 0, i32 8, !dbg !13025
  %10 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !13025
  %command6 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %10, i32 0, i32 0, !dbg !13026
  call void @ehci_writel(%struct.ehci_hcd* %6, i32 %or, i32* %command6) #11, !dbg !13027
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13028
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13029
  %regs7 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 8, !dbg !13030
  %13 = load %struct.ehci_regs*, %struct.ehci_regs** %regs7, align 8, !dbg !13030
  %command8 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %13, i32 0, i32 0, !dbg !13031
  %call = call i32 @ehci_readl(%struct.ehci_hcd* %11, i32* %command8) #11, !dbg !13032
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13033
  %iaa_in_progress9 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 13, !dbg !13034
  %bf.load10 = load i8, i8* %iaa_in_progress9, align 8, !dbg !13035
  %bf.clear11 = and i8 %bf.load10, -9, !dbg !13035
  %bf.set = or i8 %bf.clear11, 8, !dbg !13035
  store i8 %bf.set, i8* %iaa_in_progress9, align 8, !dbg !13035
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13036
  call void @ehci_enable_event(%struct.ehci_hcd* %15, i32 8, i1 zeroext true) #11, !dbg !13037
  br label %if.end, !dbg !13038

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then
  ret void, !dbg !13039
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @qh_link_async(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh) #0 !dbg !13040 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  %dma = alloca i32, align 4
  %head = alloca %struct.ehci_qh*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13041, metadata !DIExpression()), !dbg !13042
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !13043, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.declare(metadata i32* %dma, metadata !13045, metadata !DIExpression()), !dbg !13046
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13047
  %1 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13047
  %qh_dma = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %1, i32 0, i32 1, !dbg !13047
  %2 = load i64, i64* %qh_dma, align 8, !dbg !13047
  %conv = trunc i64 %2 to i32, !dbg !13047
  %and = and i32 %conv, -32, !dbg !13047
  %or = or i32 %and, 2, !dbg !13047
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %0, i32 %or) #11, !dbg !13047
  store i32 %call, i32* %dma, align 4, !dbg !13046
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %head, metadata !13048, metadata !DIExpression()), !dbg !13049
  %3 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13050
  %clearing_tt = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %3, i32 0, i32 13, !dbg !13050
  %bf.load = load i8, i8* %clearing_tt, align 8, !dbg !13050
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !13050
  %bf.clear = and i8 %bf.lshr, 1, !dbg !13050
  %bf.cast = zext i8 %bf.clear to i32, !dbg !13050
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !13050
  %lnot = xor i1 %tobool, true, !dbg !13050
  %lnot1 = xor i1 %lnot, true, !dbg !13050
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13050
  %conv2 = sext i32 %lnot.ext to i64, !dbg !13050
  %tobool3 = icmp ne i64 %conv2, 0, !dbg !13050
  br i1 %tobool3, label %if.then, label %if.end, !dbg !13052

if.then:                                          ; preds = %entry
  br label %return, !dbg !13053

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13054, metadata !DIExpression()), !dbg !13056
  %4 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13056
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %4, i32 0, i32 9, !dbg !13056
  %5 = load i8, i8* %qh_state, align 4, !dbg !13056
  %conv4 = zext i8 %5 to i32, !dbg !13056
  %cmp = icmp ne i32 %conv4, 3, !dbg !13056
  %lnot6 = xor i1 %cmp, true, !dbg !13056
  %lnot8 = xor i1 %lnot6, true, !dbg !13056
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !13056
  store i32 %lnot.ext9, i32* %__ret_warn_on, align 4, !dbg !13056
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !13057
  %tobool10 = icmp ne i32 %6, 0, !dbg !13057
  %lnot11 = xor i1 %tobool10, true, !dbg !13057
  %lnot13 = xor i1 %lnot11, true, !dbg !13057
  %lnot.ext14 = zext i1 %lnot13 to i32, !dbg !13057
  %conv15 = sext i32 %lnot.ext14 to i64, !dbg !13057
  %tobool16 = icmp ne i64 %conv15, 0, !dbg !13057
  br i1 %tobool16, label %if.then17, label %if.end24, !dbg !13056

if.then17:                                        ; preds = %if.end
  br label %do.body, !dbg !13057

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !13059

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !13061

do.end:                                           ; preds = %do.body18
  br label %do.body19, !dbg !13059

do.body19:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i32 990, i32 2305, i64 12) #7, !dbg !13063, !srcloc !13065
  br label %do.end20, !dbg !13063

do.end20:                                         ; preds = %do.body19
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 339) #7, !dbg !13066, !srcloc !13068
  br label %do.body21, !dbg !13059

do.body21:                                        ; preds = %do.end20
  br label %do.end22, !dbg !13069

do.end22:                                         ; preds = %do.body21
  br label %do.end23, !dbg !13059

do.end23:                                         ; preds = %do.end22
  br label %if.end24, !dbg !13059

if.end24:                                         ; preds = %do.end23, %if.end
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !13056
  %tobool25 = icmp ne i32 %7, 0, !dbg !13056
  %lnot26 = xor i1 %tobool25, true, !dbg !13056
  %lnot28 = xor i1 %lnot26, true, !dbg !13056
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !13056
  %conv30 = sext i32 %lnot.ext29 to i64, !dbg !13056
  store i64 %conv30, i64* %tmp, align 8, !dbg !13057
  %8 = load i64, i64* %tmp, align 8, !dbg !13056
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13071
  %10 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13072
  call void @qh_refresh(%struct.ehci_hcd* %9, %struct.ehci_qh* %10) #11, !dbg !13073
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13074
  %async = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %11, i32 0, i32 15, !dbg !13075
  %12 = load %struct.ehci_qh*, %struct.ehci_qh** %async, align 8, !dbg !13075
  store %struct.ehci_qh* %12, %struct.ehci_qh** %head, align 8, !dbg !13076
  %13 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13077
  %qh_next = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %13, i32 0, i32 2, !dbg !13078
  %14 = load %struct.ehci_qh*, %struct.ehci_qh** %head, align 8, !dbg !13079
  %qh_next31 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %14, i32 0, i32 2, !dbg !13080
  %15 = bitcast %union.ehci_shadow* %qh_next to i8*, !dbg !13080
  %16 = bitcast %union.ehci_shadow* %qh_next31 to i8*, !dbg !13080
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 8, i1 false), !dbg !13080
  %17 = load %struct.ehci_qh*, %struct.ehci_qh** %head, align 8, !dbg !13081
  %hw = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %17, i32 0, i32 0, !dbg !13082
  %18 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !13082
  %hw_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %18, i32 0, i32 0, !dbg !13083
  %19 = load i32, i32* %hw_next, align 32, !dbg !13083
  %20 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13084
  %hw32 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %20, i32 0, i32 0, !dbg !13085
  %21 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw32, align 8, !dbg !13085
  %hw_next33 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %21, i32 0, i32 0, !dbg !13086
  store i32 %19, i32* %hw_next33, align 32, !dbg !13087
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13088, !srcloc !13089
  %22 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13090
  %23 = load %struct.ehci_qh*, %struct.ehci_qh** %head, align 8, !dbg !13091
  %qh_next34 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %23, i32 0, i32 2, !dbg !13092
  %qh35 = bitcast %union.ehci_shadow* %qh_next34 to %struct.ehci_qh**, !dbg !13093
  store %struct.ehci_qh* %22, %struct.ehci_qh** %qh35, align 8, !dbg !13094
  %24 = load i32, i32* %dma, align 4, !dbg !13095
  %25 = load %struct.ehci_qh*, %struct.ehci_qh** %head, align 8, !dbg !13096
  %hw36 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %25, i32 0, i32 0, !dbg !13097
  %26 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw36, align 8, !dbg !13097
  %hw_next37 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %26, i32 0, i32 0, !dbg !13098
  store i32 %24, i32* %hw_next37, align 32, !dbg !13099
  %27 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13100
  %qh_state38 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %27, i32 0, i32 9, !dbg !13101
  store i8 1, i8* %qh_state38, align 4, !dbg !13102
  %28 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13103
  %xacterrs = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %28, i32 0, i32 10, !dbg !13104
  store i8 0, i8* %xacterrs, align 1, !dbg !13105
  %29 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13106
  %unlink_reason = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %29, i32 0, i32 11, !dbg !13107
  store i8 0, i8* %unlink_reason, align 2, !dbg !13108
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13109
  call void @enable_async(%struct.ehci_hcd* %30) #11, !dbg !13110
  br label %return, !dbg !13111

return:                                           ; preds = %if.end24, %if.then
  ret void, !dbg !13111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disable_async(%struct.ehci_hcd* %ehci) #0 !dbg !13112 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13113, metadata !DIExpression()), !dbg !13114
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13115
  %async_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 20, !dbg !13117
  %1 = load i32, i32* %async_count, align 4, !dbg !13118
  %dec = add i32 %1, -1, !dbg !13118
  store i32 %dec, i32* %async_count, align 4, !dbg !13118
  %tobool = icmp ne i32 %dec, 0, !dbg !13118
  br i1 %tobool, label %if.then, label %if.end, !dbg !13119

if.then:                                          ; preds = %entry
  br label %return, !dbg !13120

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13121, metadata !DIExpression()), !dbg !13123
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13123
  %async = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 15, !dbg !13123
  %3 = load %struct.ehci_qh*, %struct.ehci_qh** %async, align 8, !dbg !13123
  %qh_next = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %3, i32 0, i32 2, !dbg !13123
  %qh = bitcast %union.ehci_shadow* %qh_next to %struct.ehci_qh**, !dbg !13123
  %4 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13123
  %tobool1 = icmp ne %struct.ehci_qh* %4, null, !dbg !13123
  br i1 %tobool1, label %lor.end, label %lor.lhs.false, !dbg !13123

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13123
  %async_unlink = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 17, !dbg !13123
  %call = call i32 @list_empty(%struct.list_head* %async_unlink) #11, !dbg !13123
  %tobool2 = icmp ne i32 %call, 0, !dbg !13123
  br i1 %tobool2, label %lor.rhs, label %lor.end, !dbg !13123

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13123
  %async_idle = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 18, !dbg !13123
  %call3 = call i32 @list_empty(%struct.list_head* %async_idle) #11, !dbg !13123
  %tobool4 = icmp ne i32 %call3, 0, !dbg !13123
  %lnot = xor i1 %tobool4, true, !dbg !13123
  br label %lor.end, !dbg !13123

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.end
  %7 = phi i1 [ true, %lor.lhs.false ], [ true, %if.end ], [ %lnot, %lor.rhs ]
  %lnot5 = xor i1 %7, true, !dbg !13123
  %lnot6 = xor i1 %lnot5, true, !dbg !13123
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !13123
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13123
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !13124
  %tobool7 = icmp ne i32 %8, 0, !dbg !13124
  %lnot8 = xor i1 %tobool7, true, !dbg !13124
  %lnot10 = xor i1 %lnot8, true, !dbg !13124
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !13124
  %conv = sext i32 %lnot.ext11 to i64, !dbg !13124
  %tobool12 = icmp ne i64 %conv, 0, !dbg !13124
  br i1 %tobool12, label %if.then13, label %if.end20, !dbg !13123

if.then13:                                        ; preds = %lor.end
  br label %do.body, !dbg !13124

do.body:                                          ; preds = %if.then13
  br label %do.body14, !dbg !13126

do.body14:                                        ; preds = %do.body
  br label %do.end, !dbg !13128

do.end:                                           ; preds = %do.body14
  br label %do.body15, !dbg !13126

do.body15:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i32 973, i32 2305, i64 12) #7, !dbg !13130, !srcloc !13132
  br label %do.end16, !dbg !13130

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 338) #7, !dbg !13133, !srcloc !13135
  br label %do.body17, !dbg !13126

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !13136

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !13126

do.end19:                                         ; preds = %do.end18
  br label %if.end20, !dbg !13126

if.end20:                                         ; preds = %do.end19, %lor.end
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !13123
  %tobool21 = icmp ne i32 %9, 0, !dbg !13123
  %lnot22 = xor i1 %tobool21, true, !dbg !13123
  %lnot24 = xor i1 %lnot22, true, !dbg !13123
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !13123
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !13123
  store i64 %conv26, i64* %tmp, align 8, !dbg !13124
  %10 = load i64, i64* %tmp, align 8, !dbg !13123
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13138
  call void @ehci_poll_ASS(%struct.ehci_hcd* %11) #11, !dbg !13139
  br label %return, !dbg !13140

return:                                           ; preds = %if.end20, %if.then
  ret void, !dbg !13140
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_splice(%struct.list_head* %list, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13141 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %first = alloca %struct.list_head*, align 8
  %last = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !13144, metadata !DIExpression()), !dbg !13145
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13146, metadata !DIExpression()), !dbg !13147
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13148, metadata !DIExpression()), !dbg !13149
  call void @llvm.dbg.declare(metadata %struct.list_head** %first, metadata !13150, metadata !DIExpression()), !dbg !13151
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13152
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !13153
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !13153
  store %struct.list_head* %1, %struct.list_head** %first, align 8, !dbg !13151
  call void @llvm.dbg.declare(metadata %struct.list_head** %last, metadata !13154, metadata !DIExpression()), !dbg !13155
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !13156
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !13157
  %3 = load %struct.list_head*, %struct.list_head** %prev2, align 8, !dbg !13157
  store %struct.list_head* %3, %struct.list_head** %last, align 8, !dbg !13155
  %4 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13158
  %5 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !13159
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %5, i32 0, i32 1, !dbg !13160
  store %struct.list_head* %4, %struct.list_head** %prev3, align 8, !dbg !13161
  %6 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !13162
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13163
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %7, i32 0, i32 0, !dbg !13164
  store %struct.list_head* %6, %struct.list_head** %next4, align 8, !dbg !13165
  %8 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13166
  %9 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !13167
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0, !dbg !13168
  store %struct.list_head* %8, %struct.list_head** %next5, align 8, !dbg !13169
  %10 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !13170
  %11 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13171
  %prev6 = getelementptr inbounds %struct.list_head, %struct.list_head* %11, i32 0, i32 1, !dbg !13172
  store %struct.list_head* %10, %struct.list_head** %prev6, align 8, !dbg !13173
  ret void, !dbg !13174
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @enable_async(%struct.ehci_hcd* %ehci) #0 !dbg !13175 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13176, metadata !DIExpression()), !dbg !13177
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13178
  %async_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 20, !dbg !13180
  %1 = load i32, i32* %async_count, align 4, !dbg !13181
  %inc = add i32 %1, 1, !dbg !13181
  store i32 %inc, i32* %async_count, align 4, !dbg !13181
  %tobool = icmp ne i32 %1, 0, !dbg !13181
  br i1 %tobool, label %if.then, label %if.end, !dbg !13182

if.then:                                          ; preds = %entry
  br label %return, !dbg !13183

if.end:                                           ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13184
  %enabled_hrtimer_events = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 1, !dbg !13185
  %3 = load i32, i32* %enabled_hrtimer_events, align 4, !dbg !13186
  %conv = zext i32 %3 to i64, !dbg !13186
  %and = and i64 %conv, -1025, !dbg !13186
  %conv1 = trunc i64 %and to i32, !dbg !13186
  store i32 %conv1, i32* %enabled_hrtimer_events, align 4, !dbg !13186
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13187
  call void @ehci_poll_ASS(%struct.ehci_hcd* %4) #11, !dbg !13188
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13189
  call void @turn_on_io_watchdog(%struct.ehci_hcd* %5) #11, !dbg !13190
  br label %return, !dbg !13191

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @start_unlink_intr(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh) #0 !dbg !13192 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13193, metadata !DIExpression()), !dbg !13194
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !13195, metadata !DIExpression()), !dbg !13196
  %0 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13197
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %0, i32 0, i32 9, !dbg !13199
  %1 = load i8, i8* %qh_state, align 4, !dbg !13199
  %conv = zext i8 %1 to i32, !dbg !13197
  %cmp = icmp ne i32 %conv, 1, !dbg !13200
  br i1 %cmp, label %if.then, label %if.end, !dbg !13201

if.then:                                          ; preds = %entry
  br label %if.end15, !dbg !13202

if.end:                                           ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13203
  %3 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13204
  call void @cancel_unlink_wait_intr(%struct.ehci_hcd* %2, %struct.ehci_qh* %3) #11, !dbg !13205
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13206
  %5 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13207
  call void @qh_unlink_periodic(%struct.ehci_hcd* %4, %struct.ehci_qh* %5) #11, !dbg !13208
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13209, !srcloc !13210
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13211
  %intr_unlink_cycle = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 32, !dbg !13212
  %7 = load i32, i32* %intr_unlink_cycle, align 4, !dbg !13212
  %8 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13213
  %unlink_cycle = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %8, i32 0, i32 8, !dbg !13214
  store i32 %7, i32* %unlink_cycle, align 8, !dbg !13215
  %9 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13216
  %unlink_node = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %9, i32 0, i32 6, !dbg !13217
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13218
  %intr_unlink = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 30, !dbg !13219
  call void @list_add_tail(%struct.list_head* %unlink_node, %struct.list_head* %intr_unlink) #11, !dbg !13220
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13221
  %intr_unlinking = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %11, i32 0, i32 13, !dbg !13223
  %bf.load = load i8, i8* %intr_unlinking, align 8, !dbg !13223
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !13223
  %bf.clear = and i8 %bf.lshr, 1, !dbg !13223
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !13223
  br i1 %bf.cast, label %if.then2, label %if.else, !dbg !13224

if.then2:                                         ; preds = %if.end
  br label %if.end15, !dbg !13224

if.else:                                          ; preds = %if.end
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13225
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 12, !dbg !13227
  %13 = load i32, i32* %rh_state, align 4, !dbg !13227
  %cmp3 = icmp ult i32 %13, 2, !dbg !13228
  br i1 %cmp3, label %if.then5, label %if.else6, !dbg !13229

if.then5:                                         ; preds = %if.else
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13230
  call void @ehci_handle_intr_unlinks(%struct.ehci_hcd* %14) #11, !dbg !13231
  br label %if.end14, !dbg !13231

if.else6:                                         ; preds = %if.else
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13232
  %intr_unlink7 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %15, i32 0, i32 30, !dbg !13234
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %intr_unlink7, i32 0, i32 0, !dbg !13235
  %16 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13235
  %17 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13236
  %unlink_node8 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %17, i32 0, i32 6, !dbg !13237
  %cmp9 = icmp eq %struct.list_head* %16, %unlink_node8, !dbg !13238
  br i1 %cmp9, label %if.then11, label %if.end13, !dbg !13239

if.then11:                                        ; preds = %if.else6
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13240
  call void @ehci_enable_event(%struct.ehci_hcd* %18, i32 3, i1 zeroext true) #11, !dbg !13242
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13243
  %intr_unlink_cycle12 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %19, i32 0, i32 32, !dbg !13244
  %20 = load i32, i32* %intr_unlink_cycle12, align 4, !dbg !13245
  %inc = add i32 %20, 1, !dbg !13245
  store i32 %inc, i32* %intr_unlink_cycle12, align 4, !dbg !13245
  br label %if.end13, !dbg !13246

if.end13:                                         ; preds = %if.then11, %if.else6
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then5
  br label %if.end15

if.end15:                                         ; preds = %if.then, %if.end14, %if.then2
  ret void, !dbg !13247
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cancel_unlink_wait_intr(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh) #0 !dbg !13248 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13249, metadata !DIExpression()), !dbg !13250
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !13251, metadata !DIExpression()), !dbg !13252
  %0 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13253
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %0, i32 0, i32 9, !dbg !13255
  %1 = load i8, i8* %qh_state, align 4, !dbg !13255
  %conv = zext i8 %1 to i32, !dbg !13253
  %cmp = icmp ne i32 %conv, 1, !dbg !13256
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13257

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13258
  %unlink_node = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %2, i32 0, i32 6, !dbg !13259
  %call = call i32 @list_empty(%struct.list_head* %unlink_node) #11, !dbg !13260
  %tobool = icmp ne i32 %call, 0, !dbg !13260
  br i1 %tobool, label %if.then, label %if.end, !dbg !13261

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !13262

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13263
  %unlink_node2 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %3, i32 0, i32 6, !dbg !13264
  call void @list_del_init(%struct.list_head* %unlink_node2) #11, !dbg !13265
  br label %return, !dbg !13266

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13266
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @qh_unlink_periodic(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh) #0 !dbg !13267 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  %i = alloca i32, align 4
  %period = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ehci_qh*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13268, metadata !DIExpression()), !dbg !13269
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !13270, metadata !DIExpression()), !dbg !13271
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13272, metadata !DIExpression()), !dbg !13273
  call void @llvm.dbg.declare(metadata i32* %period, metadata !13274, metadata !DIExpression()), !dbg !13275
  %0 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13276
  %ps = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %0, i32 0, i32 7, !dbg !13277
  %period1 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 5, !dbg !13278
  %1 = load i16, i16* %period1, align 4, !dbg !13278
  %conv = zext i16 %1 to i32, !dbg !13276
  %tobool = icmp ne i32 %conv, 0, !dbg !13276
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13276

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !13276

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13276

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 1, %cond.false ], !dbg !13276
  store i32 %cond, i32* %period, align 4, !dbg !13279
  %2 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13280
  %ps2 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %2, i32 0, i32 7, !dbg !13282
  %phase = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps2, i32 0, i32 6, !dbg !13283
  %3 = load i16, i16* %phase, align 2, !dbg !13283
  %conv3 = zext i16 %3 to i32, !dbg !13280
  store i32 %conv3, i32* %i, align 4, !dbg !13284
  br label %for.cond, !dbg !13285

for.cond:                                         ; preds = %for.inc, %cond.end
  %4 = load i32, i32* %i, align 4, !dbg !13286
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13288
  %periodic_size = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 23, !dbg !13289
  %6 = load i32, i32* %periodic_size, align 8, !dbg !13289
  %cmp = icmp ult i32 %4, %6, !dbg !13290
  br i1 %cmp, label %for.body, label %for.end, !dbg !13291

for.body:                                         ; preds = %for.cond
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13292
  %8 = load i32, i32* %i, align 4, !dbg !13293
  %9 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13294
  %10 = bitcast %struct.ehci_qh* %9 to i8*, !dbg !13294
  call void @periodic_unlink(%struct.ehci_hcd* %7, i32 %8, i8* %10) #11, !dbg !13295
  br label %for.inc, !dbg !13295

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %period, align 4, !dbg !13296
  %12 = load i32, i32* %i, align 4, !dbg !13297
  %add = add i32 %12, %11, !dbg !13297
  store i32 %add, i32* %i, align 4, !dbg !13297
  br label %for.cond, !dbg !13298, !llvm.loop !13299

for.end:                                          ; preds = %for.cond
  %13 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13301
  %ps5 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %13, i32 0, i32 7, !dbg !13302
  %bw_period = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps5, i32 0, i32 12, !dbg !13303
  %14 = load i8, i8* %bw_period, align 1, !dbg !13303
  %conv6 = zext i8 %14 to i32, !dbg !13301
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !13301
  br i1 %tobool7, label %cond.true8, label %cond.false17, !dbg !13301

cond.true8:                                       ; preds = %for.end
  %15 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13304
  %ps9 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %15, i32 0, i32 7, !dbg !13305
  %usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps9, i32 0, i32 9, !dbg !13306
  %16 = load i8, i8* %usecs, align 2, !dbg !13306
  %conv10 = zext i8 %16 to i32, !dbg !13304
  %17 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13307
  %ps11 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %17, i32 0, i32 7, !dbg !13308
  %c_usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps11, i32 0, i32 10, !dbg !13309
  %18 = load i8, i8* %c_usecs, align 1, !dbg !13309
  %conv12 = zext i8 %18 to i32, !dbg !13307
  %add13 = add i32 %conv10, %conv12, !dbg !13310
  %19 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13311
  %ps14 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %19, i32 0, i32 7, !dbg !13312
  %bw_period15 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps14, i32 0, i32 12, !dbg !13313
  %20 = load i8, i8* %bw_period15, align 1, !dbg !13313
  %conv16 = zext i8 %20 to i32, !dbg !13311
  %div = sdiv i32 %add13, %conv16, !dbg !13314
  br label %cond.end21, !dbg !13301

cond.false17:                                     ; preds = %for.end
  %21 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13315
  %ps18 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %21, i32 0, i32 7, !dbg !13316
  %usecs19 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps18, i32 0, i32 9, !dbg !13317
  %22 = load i8, i8* %usecs19, align 2, !dbg !13317
  %conv20 = zext i8 %22 to i32, !dbg !13315
  %mul = mul i32 %conv20, 8, !dbg !13318
  br label %cond.end21, !dbg !13301

cond.end21:                                       ; preds = %cond.false17, %cond.true8
  %cond22 = phi i32 [ %div, %cond.true8 ], [ %mul, %cond.false17 ], !dbg !13301
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13319
  %call = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %23) #11, !dbg !13320
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call, i32 0, i32 0, !dbg !13321
  %bandwidth_allocated = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 13, !dbg !13322
  %24 = load i32, i32* %bandwidth_allocated, align 8, !dbg !13323
  %sub = sub i32 %24, %cond22, !dbg !13323
  store i32 %sub, i32* %bandwidth_allocated, align 8, !dbg !13323
  %25 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13324
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %25, i32 0, i32 9, !dbg !13325
  store i8 2, i8* %qh_state, align 4, !dbg !13326
  %26 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13327
  %qh_next = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %26, i32 0, i32 2, !dbg !13328
  %ptr = bitcast %union.ehci_shadow* %qh_next to i8**, !dbg !13329
  store i8* null, i8** %ptr, align 8, !dbg !13330
  %27 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13331
  %qh_scan_next = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %27, i32 0, i32 14, !dbg !13333
  %28 = load %struct.ehci_qh*, %struct.ehci_qh** %qh_scan_next, align 8, !dbg !13333
  %29 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13334
  %cmp23 = icmp eq %struct.ehci_qh* %28, %29, !dbg !13335
  br i1 %cmp23, label %if.then, label %if.end, !dbg !13336

if.then:                                          ; preds = %cond.end21
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13337, metadata !DIExpression()), !dbg !13339
  %30 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13339
  %intr_node = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %30, i32 0, i32 4, !dbg !13339
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %intr_node, i32 0, i32 0, !dbg !13339
  %31 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13339
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !13339
  store i8* %32, i8** %__mptr, align 8, !dbg !13339
  br label %do.body, !dbg !13339

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !13340

do.end:                                           ; preds = %do.body
  %33 = load i8*, i8** %__mptr, align 8, !dbg !13339
  %add.ptr = getelementptr i8, i8* %33, i64 -40, !dbg !13339
  %34 = bitcast i8* %add.ptr to %struct.ehci_qh*, !dbg !13339
  store %struct.ehci_qh* %34, %struct.ehci_qh** %tmp, align 8, !dbg !13340
  %35 = load %struct.ehci_qh*, %struct.ehci_qh** %tmp, align 8, !dbg !13339
  %36 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13342
  %qh_scan_next25 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %36, i32 0, i32 14, !dbg !13343
  store %struct.ehci_qh* %35, %struct.ehci_qh** %qh_scan_next25, align 8, !dbg !13344
  br label %if.end, !dbg !13342

if.end:                                           ; preds = %do.end, %cond.end21
  %37 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13345
  %intr_node26 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %37, i32 0, i32 4, !dbg !13346
  call void @list_del(%struct.list_head* %intr_node26) #11, !dbg !13347
  ret void, !dbg !13348
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @periodic_unlink(%struct.ehci_hcd* %ehci, i32 %frame, i8* %ptr) #0 !dbg !13349 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %frame.addr = alloca i32, align 4
  %ptr.addr = alloca i8*, align 8
  %prev_p = alloca %union.ehci_shadow*, align 8
  %hw_p = alloca i32*, align 8
  %here = alloca %union.ehci_shadow, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13352, metadata !DIExpression()), !dbg !13353
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !13354, metadata !DIExpression()), !dbg !13355
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13356, metadata !DIExpression()), !dbg !13357
  call void @llvm.dbg.declare(metadata %union.ehci_shadow** %prev_p, metadata !13358, metadata !DIExpression()), !dbg !13359
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13360
  %pshadow = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 28, !dbg !13361
  %1 = load %union.ehci_shadow*, %union.ehci_shadow** %pshadow, align 8, !dbg !13361
  %2 = load i32, i32* %frame.addr, align 4, !dbg !13362
  %idxprom = zext i32 %2 to i64, !dbg !13360
  %arrayidx = getelementptr %union.ehci_shadow, %union.ehci_shadow* %1, i64 %idxprom, !dbg !13360
  store %union.ehci_shadow* %arrayidx, %union.ehci_shadow** %prev_p, align 8, !dbg !13359
  call void @llvm.dbg.declare(metadata i32** %hw_p, metadata !13363, metadata !DIExpression()), !dbg !13364
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13365
  %periodic = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 24, !dbg !13366
  %4 = load i32*, i32** %periodic, align 8, !dbg !13366
  %5 = load i32, i32* %frame.addr, align 4, !dbg !13367
  %idxprom1 = zext i32 %5 to i64, !dbg !13365
  %arrayidx2 = getelementptr i32, i32* %4, i64 %idxprom1, !dbg !13365
  store i32* %arrayidx2, i32** %hw_p, align 8, !dbg !13364
  call void @llvm.dbg.declare(metadata %union.ehci_shadow* %here, metadata !13368, metadata !DIExpression()), !dbg !13369
  %6 = load %union.ehci_shadow*, %union.ehci_shadow** %prev_p, align 8, !dbg !13370
  %7 = bitcast %union.ehci_shadow* %here to i8*, !dbg !13371
  %8 = bitcast %union.ehci_shadow* %6 to i8*, !dbg !13371
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 8, i1 false), !dbg !13371
  br label %while.cond, !dbg !13372

while.cond:                                       ; preds = %while.body, %entry
  %ptr3 = bitcast %union.ehci_shadow* %here to i8**, !dbg !13373
  %9 = load i8*, i8** %ptr3, align 8, !dbg !13373
  %tobool = icmp ne i8* %9, null, !dbg !13374
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13375

land.rhs:                                         ; preds = %while.cond
  %ptr4 = bitcast %union.ehci_shadow* %here to i8**, !dbg !13376
  %10 = load i8*, i8** %ptr4, align 8, !dbg !13376
  %11 = load i8*, i8** %ptr.addr, align 8, !dbg !13377
  %cmp = icmp ne i8* %10, %11, !dbg !13378
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %12 = phi i1 [ false, %while.cond ], [ %cmp, %land.rhs ], !dbg !13379
  br i1 %12, label %while.body, label %while.end, !dbg !13372

while.body:                                       ; preds = %land.end
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13380
  %14 = load %union.ehci_shadow*, %union.ehci_shadow** %prev_p, align 8, !dbg !13382
  %15 = load i32*, i32** %hw_p, align 8, !dbg !13383
  %16 = load i32, i32* %15, align 4, !dbg !13383
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13383
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %17, i32 6) #11, !dbg !13383
  %and = and i32 %16, %call, !dbg !13383
  %call5 = call %union.ehci_shadow* @periodic_next_shadow(%struct.ehci_hcd* %13, %union.ehci_shadow* %14, i32 %and) #11, !dbg !13384
  store %union.ehci_shadow* %call5, %union.ehci_shadow** %prev_p, align 8, !dbg !13385
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13386
  %19 = load i32*, i32** %hw_p, align 8, !dbg !13387
  %20 = load i32, i32* %19, align 4, !dbg !13387
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13387
  %call6 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %21, i32 6) #11, !dbg !13387
  %and7 = and i32 %20, %call6, !dbg !13387
  %call8 = call i32* @shadow_next_periodic(%struct.ehci_hcd* %18, %union.ehci_shadow* %here, i32 %and7) #11, !dbg !13388
  store i32* %call8, i32** %hw_p, align 8, !dbg !13389
  %22 = load %union.ehci_shadow*, %union.ehci_shadow** %prev_p, align 8, !dbg !13390
  %23 = bitcast %union.ehci_shadow* %here to i8*, !dbg !13391
  %24 = bitcast %union.ehci_shadow* %22 to i8*, !dbg !13391
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 8, i1 false), !dbg !13391
  br label %while.cond, !dbg !13372, !llvm.loop !13392

while.end:                                        ; preds = %land.end
  %ptr9 = bitcast %union.ehci_shadow* %here to i8**, !dbg !13394
  %25 = load i8*, i8** %ptr9, align 8, !dbg !13394
  %tobool10 = icmp ne i8* %25, null, !dbg !13396
  br i1 %tobool10, label %if.end, label %if.then, !dbg !13397

if.then:                                          ; preds = %while.end
  br label %if.end25, !dbg !13398

if.end:                                           ; preds = %while.end
  %26 = load %union.ehci_shadow*, %union.ehci_shadow** %prev_p, align 8, !dbg !13399
  %27 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13400
  %28 = load i32*, i32** %hw_p, align 8, !dbg !13401
  %29 = load i32, i32* %28, align 4, !dbg !13401
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13401
  %call11 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %30, i32 6) #11, !dbg !13401
  %and12 = and i32 %29, %call11, !dbg !13401
  %call13 = call %union.ehci_shadow* @periodic_next_shadow(%struct.ehci_hcd* %27, %union.ehci_shadow* %here, i32 %and12) #11, !dbg !13402
  %31 = bitcast %union.ehci_shadow* %26 to i8*, !dbg !13403
  %32 = bitcast %union.ehci_shadow* %call13 to i8*, !dbg !13403
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 8, i1 false), !dbg !13403
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13404
  %use_dummy_qh = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %33, i32 0, i32 58, !dbg !13406
  %bf.load = load i16, i16* %use_dummy_qh, align 4, !dbg !13406
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !13406
  %bf.clear = and i16 %bf.lshr, 1, !dbg !13406
  %bf.cast = zext i16 %bf.clear to i32, !dbg !13406
  %tobool14 = icmp ne i32 %bf.cast, 0, !dbg !13404
  br i1 %tobool14, label %lor.lhs.false, label %if.then20, !dbg !13407

lor.lhs.false:                                    ; preds = %if.end
  %34 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13408
  %35 = load i32*, i32** %hw_p, align 8, !dbg !13409
  %36 = load i32, i32* %35, align 4, !dbg !13409
  %37 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13409
  %call15 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %37, i32 6) #11, !dbg !13409
  %and16 = and i32 %36, %call15, !dbg !13409
  %call17 = call i32* @shadow_next_periodic(%struct.ehci_hcd* %34, %union.ehci_shadow* %here, i32 %and16) #11, !dbg !13410
  %38 = load i32, i32* %call17, align 4, !dbg !13411
  %39 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13412
  %call18 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %39, i32 1) #11, !dbg !13412
  %cmp19 = icmp ne i32 %38, %call18, !dbg !13413
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !13414

if.then20:                                        ; preds = %lor.lhs.false, %if.end
  %40 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13415
  %41 = load i32*, i32** %hw_p, align 8, !dbg !13416
  %42 = load i32, i32* %41, align 4, !dbg !13416
  %43 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13416
  %call21 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %43, i32 6) #11, !dbg !13416
  %and22 = and i32 %42, %call21, !dbg !13416
  %call23 = call i32* @shadow_next_periodic(%struct.ehci_hcd* %40, %union.ehci_shadow* %here, i32 %and22) #11, !dbg !13417
  %44 = load i32, i32* %call23, align 4, !dbg !13418
  %45 = load i32*, i32** %hw_p, align 8, !dbg !13419
  store i32 %44, i32* %45, align 4, !dbg !13420
  br label %if.end25, !dbg !13421

if.else:                                          ; preds = %lor.lhs.false
  %46 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13422
  %47 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13423
  %dummy = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %47, i32 0, i32 16, !dbg !13424
  %48 = load %struct.ehci_qh*, %struct.ehci_qh** %dummy, align 8, !dbg !13424
  %qh_dma = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %48, i32 0, i32 1, !dbg !13425
  %49 = load i64, i64* %qh_dma, align 8, !dbg !13425
  %conv = trunc i64 %49 to i32, !dbg !13423
  %call24 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %46, i32 %conv) #11, !dbg !13426
  %50 = load i32*, i32** %hw_p, align 8, !dbg !13427
  store i32 %call24, i32* %50, align 4, !dbg !13428
  br label %if.end25

if.end25:                                         ; preds = %if.then, %if.else, %if.then20
  ret void, !dbg !13429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @start_unlink_async(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh) #0 !dbg !13430 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13431, metadata !DIExpression()), !dbg !13432
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !13433, metadata !DIExpression()), !dbg !13434
  %0 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13435
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %0, i32 0, i32 9, !dbg !13437
  %1 = load i8, i8* %qh_state, align 4, !dbg !13437
  %conv = zext i8 %1 to i32, !dbg !13435
  %cmp = icmp ne i32 %conv, 1, !dbg !13438
  br i1 %cmp, label %if.then, label %if.end, !dbg !13439

if.then:                                          ; preds = %entry
  br label %return, !dbg !13440

if.end:                                           ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13441
  %3 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13442
  call void @single_unlink_async(%struct.ehci_hcd* %2, %struct.ehci_qh* %3) #11, !dbg !13443
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13444
  call void @start_iaa_cycle(%struct.ehci_hcd* %4) #11, !dbg !13445
  br label %return, !dbg !13446

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13446
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @single_unlink_async(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh) #0 !dbg !13447 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  %prev = alloca %struct.ehci_qh*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13448, metadata !DIExpression()), !dbg !13449
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !13450, metadata !DIExpression()), !dbg !13451
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %prev, metadata !13452, metadata !DIExpression()), !dbg !13453
  %0 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13454
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %0, i32 0, i32 9, !dbg !13455
  store i8 4, i8* %qh_state, align 4, !dbg !13456
  %1 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13457
  %unlink_node = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %1, i32 0, i32 6, !dbg !13458
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13459
  %async_unlink = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 17, !dbg !13460
  call void @list_add_tail(%struct.list_head* %unlink_node, %struct.list_head* %async_unlink) #11, !dbg !13461
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13462
  %async = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 15, !dbg !13463
  %4 = load %struct.ehci_qh*, %struct.ehci_qh** %async, align 8, !dbg !13463
  store %struct.ehci_qh* %4, %struct.ehci_qh** %prev, align 8, !dbg !13464
  br label %while.cond, !dbg !13465

while.cond:                                       ; preds = %while.body, %entry
  %5 = load %struct.ehci_qh*, %struct.ehci_qh** %prev, align 8, !dbg !13466
  %qh_next = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %5, i32 0, i32 2, !dbg !13467
  %qh1 = bitcast %union.ehci_shadow* %qh_next to %struct.ehci_qh**, !dbg !13468
  %6 = load %struct.ehci_qh*, %struct.ehci_qh** %qh1, align 8, !dbg !13468
  %7 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13469
  %cmp = icmp ne %struct.ehci_qh* %6, %7, !dbg !13470
  br i1 %cmp, label %while.body, label %while.end, !dbg !13465

while.body:                                       ; preds = %while.cond
  %8 = load %struct.ehci_qh*, %struct.ehci_qh** %prev, align 8, !dbg !13471
  %qh_next2 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %8, i32 0, i32 2, !dbg !13472
  %qh3 = bitcast %union.ehci_shadow* %qh_next2 to %struct.ehci_qh**, !dbg !13473
  %9 = load %struct.ehci_qh*, %struct.ehci_qh** %qh3, align 8, !dbg !13473
  store %struct.ehci_qh* %9, %struct.ehci_qh** %prev, align 8, !dbg !13474
  br label %while.cond, !dbg !13465, !llvm.loop !13475

while.end:                                        ; preds = %while.cond
  %10 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13476
  %hw = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %10, i32 0, i32 0, !dbg !13477
  %11 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !13477
  %hw_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %11, i32 0, i32 0, !dbg !13478
  %12 = load i32, i32* %hw_next, align 32, !dbg !13478
  %13 = load %struct.ehci_qh*, %struct.ehci_qh** %prev, align 8, !dbg !13479
  %hw4 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %13, i32 0, i32 0, !dbg !13480
  %14 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw4, align 8, !dbg !13480
  %hw_next5 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %14, i32 0, i32 0, !dbg !13481
  store i32 %12, i32* %hw_next5, align 32, !dbg !13482
  %15 = load %struct.ehci_qh*, %struct.ehci_qh** %prev, align 8, !dbg !13483
  %qh_next6 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %15, i32 0, i32 2, !dbg !13484
  %16 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13485
  %qh_next7 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %16, i32 0, i32 2, !dbg !13486
  %17 = bitcast %union.ehci_shadow* %qh_next6 to i8*, !dbg !13486
  %18 = bitcast %union.ehci_shadow* %qh_next7 to i8*, !dbg !13486
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 8, i1 false), !dbg !13486
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13487
  %qh_scan_next = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %19, i32 0, i32 14, !dbg !13489
  %20 = load %struct.ehci_qh*, %struct.ehci_qh** %qh_scan_next, align 8, !dbg !13489
  %21 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13490
  %cmp8 = icmp eq %struct.ehci_qh* %20, %21, !dbg !13491
  br i1 %cmp8, label %if.then, label %if.end, !dbg !13492

if.then:                                          ; preds = %while.end
  %22 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13493
  %qh_next9 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %22, i32 0, i32 2, !dbg !13494
  %qh10 = bitcast %union.ehci_shadow* %qh_next9 to %struct.ehci_qh**, !dbg !13495
  %23 = load %struct.ehci_qh*, %struct.ehci_qh** %qh10, align 8, !dbg !13495
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13496
  %qh_scan_next11 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %24, i32 0, i32 14, !dbg !13497
  store %struct.ehci_qh* %23, %struct.ehci_qh** %qh_scan_next11, align 8, !dbg !13498
  br label %if.end, !dbg !13496

if.end:                                           ; preds = %if.then, %while.end
  ret void, !dbg !13499
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @end_iaa_cycle(%struct.ehci_hcd* %ehci) #0 !dbg !13500 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13501, metadata !DIExpression()), !dbg !13502
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13503
  %has_synopsys_hc_bug = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 58, !dbg !13505
  %bf.load = load i16, i16* %has_synopsys_hc_bug, align 4, !dbg !13505
  %bf.lshr = lshr i16 %bf.load, 11, !dbg !13505
  %bf.clear = and i16 %bf.lshr, 1, !dbg !13505
  %bf.cast = zext i16 %bf.clear to i32, !dbg !13505
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !13503
  br i1 %tobool, label %if.then, label %if.end, !dbg !13506

if.then:                                          ; preds = %entry
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13507
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13508
  %async = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 15, !dbg !13509
  %3 = load %struct.ehci_qh*, %struct.ehci_qh** %async, align 8, !dbg !13509
  %qh_dma = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %3, i32 0, i32 1, !dbg !13510
  %4 = load i64, i64* %qh_dma, align 8, !dbg !13510
  %conv = trunc i64 %4 to i32, !dbg !13511
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13512
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 8, !dbg !13513
  %6 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !13513
  %async_next = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %6, i32 0, i32 6, !dbg !13514
  call void @ehci_writel(%struct.ehci_hcd* %1, i32 %conv, i32* %async_next) #11, !dbg !13515
  br label %if.end, !dbg !13515

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13516
  %iaa_in_progress = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 13, !dbg !13517
  %bf.load1 = load i8, i8* %iaa_in_progress, align 8, !dbg !13518
  %bf.clear2 = and i8 %bf.load1, -9, !dbg !13518
  store i8 %bf.clear2, i8* %iaa_in_progress, align 8, !dbg !13518
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13519
  call void @end_unlink_async(%struct.ehci_hcd* %8) #11, !dbg !13520
  ret void, !dbg !13521
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_clear_command_bit(%struct.ehci_hcd* %ehci, i32 %bit) #0 !dbg !13522 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %bit.addr = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13523, metadata !DIExpression()), !dbg !13524
  store i32 %bit, i32* %bit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bit.addr, metadata !13525, metadata !DIExpression()), !dbg !13526
  %0 = load i32, i32* %bit.addr, align 4, !dbg !13527
  %neg = xor i32 %0, -1, !dbg !13528
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13529
  %command = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 57, !dbg !13530
  %2 = load i32, i32* %command, align 8, !dbg !13531
  %and = and i32 %2, %neg, !dbg !13531
  store i32 %and, i32* %command, align 8, !dbg !13531
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13532
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13533
  %command1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 57, !dbg !13534
  %5 = load i32, i32* %command1, align 8, !dbg !13534
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13535
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 8, !dbg !13536
  %7 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !13536
  %command2 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %7, i32 0, i32 0, !dbg !13537
  call void @ehci_writel(%struct.ehci_hcd* %3, i32 %5, i32* %command2) #11, !dbg !13538
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13539
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13540
  %regs3 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %9, i32 0, i32 8, !dbg !13541
  %10 = load %struct.ehci_regs*, %struct.ehci_regs** %regs3, align 8, !dbg !13541
  %command4 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %10, i32 0, i32 0, !dbg !13542
  %call = call i32 @ehci_readl(%struct.ehci_hcd* %8, i32* %command4) #11, !dbg !13543
  ret void, !dbg !13544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scan_async(%struct.ehci_hcd* %ehci) #0 !dbg !13545 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh = alloca %struct.ehci_qh*, align 8
  %check_unlinks_later = alloca i8, align 1
  %temp = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13546, metadata !DIExpression()), !dbg !13547
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !13548, metadata !DIExpression()), !dbg !13549
  call void @llvm.dbg.declare(metadata i8* %check_unlinks_later, metadata !13550, metadata !DIExpression()), !dbg !13551
  store i8 0, i8* %check_unlinks_later, align 1, !dbg !13551
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13552
  %async = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 15, !dbg !13553
  %1 = load %struct.ehci_qh*, %struct.ehci_qh** %async, align 8, !dbg !13553
  %qh_next = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %1, i32 0, i32 2, !dbg !13554
  %qh1 = bitcast %union.ehci_shadow* %qh_next to %struct.ehci_qh**, !dbg !13555
  %2 = load %struct.ehci_qh*, %struct.ehci_qh** %qh1, align 8, !dbg !13555
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13556
  %qh_scan_next = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 14, !dbg !13557
  store %struct.ehci_qh* %2, %struct.ehci_qh** %qh_scan_next, align 8, !dbg !13558
  br label %while.cond, !dbg !13559

while.cond:                                       ; preds = %if.end20, %entry
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13560
  %qh_scan_next2 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 14, !dbg !13561
  %5 = load %struct.ehci_qh*, %struct.ehci_qh** %qh_scan_next2, align 8, !dbg !13561
  %tobool = icmp ne %struct.ehci_qh* %5, null, !dbg !13559
  br i1 %tobool, label %while.body, label %while.end, !dbg !13559

while.body:                                       ; preds = %while.cond
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13562
  %qh_scan_next3 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 14, !dbg !13564
  %7 = load %struct.ehci_qh*, %struct.ehci_qh** %qh_scan_next3, align 8, !dbg !13564
  store %struct.ehci_qh* %7, %struct.ehci_qh** %qh, align 8, !dbg !13565
  %8 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13566
  %qh_next4 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %8, i32 0, i32 2, !dbg !13567
  %qh5 = bitcast %union.ehci_shadow* %qh_next4 to %struct.ehci_qh**, !dbg !13568
  %9 = load %struct.ehci_qh*, %struct.ehci_qh** %qh5, align 8, !dbg !13568
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13569
  %qh_scan_next6 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 14, !dbg !13570
  store %struct.ehci_qh* %9, %struct.ehci_qh** %qh_scan_next6, align 8, !dbg !13571
  %11 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13572
  %qtd_list = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %11, i32 0, i32 3, !dbg !13574
  %call = call i32 @list_empty(%struct.list_head* %qtd_list) #11, !dbg !13575
  %tobool7 = icmp ne i32 %call, 0, !dbg !13575
  br i1 %tobool7, label %if.end20, label %if.then, !dbg !13576

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !13577, metadata !DIExpression()), !dbg !13579
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13580
  %13 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13581
  %call8 = call i32 @qh_completions(%struct.ehci_hcd* %12, %struct.ehci_qh* %13) #11, !dbg !13582
  store i32 %call8, i32* %temp, align 4, !dbg !13583
  %14 = load i32, i32* %temp, align 4, !dbg !13584
  %tobool9 = icmp ne i32 %14, 0, !dbg !13584
  %lnot = xor i1 %tobool9, true, !dbg !13584
  %lnot10 = xor i1 %lnot, true, !dbg !13584
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !13584
  %conv = sext i32 %lnot.ext to i64, !dbg !13584
  %tobool11 = icmp ne i64 %conv, 0, !dbg !13584
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !13586

if.then12:                                        ; preds = %if.then
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13587
  %16 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13589
  call void @start_unlink_async(%struct.ehci_hcd* %15, %struct.ehci_qh* %16) #11, !dbg !13590
  br label %if.end19, !dbg !13591

if.else:                                          ; preds = %if.then
  %17 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13592
  %qtd_list13 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %17, i32 0, i32 3, !dbg !13594
  %call14 = call i32 @list_empty(%struct.list_head* %qtd_list13) #11, !dbg !13595
  %tobool15 = icmp ne i32 %call14, 0, !dbg !13595
  br i1 %tobool15, label %land.lhs.true, label %if.end, !dbg !13596

land.lhs.true:                                    ; preds = %if.else
  %18 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13597
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %18, i32 0, i32 9, !dbg !13598
  %19 = load i8, i8* %qh_state, align 4, !dbg !13598
  %conv16 = zext i8 %19 to i32, !dbg !13597
  %cmp = icmp eq i32 %conv16, 1, !dbg !13599
  br i1 %cmp, label %if.then18, label %if.end, !dbg !13600

if.then18:                                        ; preds = %land.lhs.true
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13601
  %async_unlink_cycle = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %20, i32 0, i32 19, !dbg !13603
  %21 = load i32, i32* %async_unlink_cycle, align 8, !dbg !13603
  %22 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13604
  %unlink_cycle = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %22, i32 0, i32 8, !dbg !13605
  store i32 %21, i32* %unlink_cycle, align 8, !dbg !13606
  store i8 1, i8* %check_unlinks_later, align 1, !dbg !13607
  br label %if.end, !dbg !13608

if.end:                                           ; preds = %if.then18, %land.lhs.true, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then12
  br label %if.end20, !dbg !13609

if.end20:                                         ; preds = %if.end19, %while.body
  br label %while.cond, !dbg !13559, !llvm.loop !13610

while.end:                                        ; preds = %while.cond
  %23 = load i8, i8* %check_unlinks_later, align 1, !dbg !13612
  %tobool21 = trunc i8 %23 to i1, !dbg !13612
  br i1 %tobool21, label %land.lhs.true23, label %if.end31, !dbg !13614

land.lhs.true23:                                  ; preds = %while.end
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13615
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %24, i32 0, i32 12, !dbg !13616
  %25 = load i32, i32* %rh_state, align 4, !dbg !13616
  %cmp24 = icmp eq i32 %25, 2, !dbg !13617
  br i1 %cmp24, label %land.lhs.true26, label %if.end31, !dbg !13618

land.lhs.true26:                                  ; preds = %land.lhs.true23
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13619
  %enabled_hrtimer_events = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %26, i32 0, i32 1, !dbg !13620
  %27 = load i32, i32* %enabled_hrtimer_events, align 4, !dbg !13620
  %conv27 = zext i32 %27 to i64, !dbg !13619
  %and = and i64 %conv27, 128, !dbg !13621
  %tobool28 = icmp ne i64 %and, 0, !dbg !13621
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !13622

if.then29:                                        ; preds = %land.lhs.true26
  %28 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13623
  call void @ehci_enable_event(%struct.ehci_hcd* %28, i32 7, i1 zeroext true) #11, !dbg !13625
  %29 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13626
  %async_unlink_cycle30 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %29, i32 0, i32 19, !dbg !13627
  %30 = load i32, i32* %async_unlink_cycle30, align 8, !dbg !13628
  %inc = add i32 %30, 1, !dbg !13628
  store i32 %inc, i32* %async_unlink_cycle30, align 8, !dbg !13628
  br label %if.end31, !dbg !13629

if.end31:                                         ; preds = %if.then29, %land.lhs.true26, %land.lhs.true23, %while.end
  ret void, !dbg !13630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scan_intr(%struct.ehci_hcd* %ehci) #0 !dbg !13631 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh = alloca %struct.ehci_qh*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ehci_qh*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp5 = alloca %struct.ehci_qh*, align 8
  %temp = alloca i32, align 4
  %__mptr31 = alloca i8*, align 8
  %tmp37 = alloca %struct.ehci_qh*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13632, metadata !DIExpression()), !dbg !13633
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !13634, metadata !DIExpression()), !dbg !13635
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13636, metadata !DIExpression()), !dbg !13639
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13639
  %intr_qh_list = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 26, !dbg !13639
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %intr_qh_list, i32 0, i32 0, !dbg !13639
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13639
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !13639
  store i8* %2, i8** %__mptr, align 8, !dbg !13639
  br label %do.body, !dbg !13639

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13640

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !13639
  %add.ptr = getelementptr i8, i8* %3, i64 -40, !dbg !13639
  %4 = bitcast i8* %add.ptr to %struct.ehci_qh*, !dbg !13639
  store %struct.ehci_qh* %4, %struct.ehci_qh** %tmp, align 8, !dbg !13640
  %5 = load %struct.ehci_qh*, %struct.ehci_qh** %tmp, align 8, !dbg !13639
  store %struct.ehci_qh* %5, %struct.ehci_qh** %qh, align 8, !dbg !13642
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !13643, metadata !DIExpression()), !dbg !13645
  %6 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13645
  %intr_node = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %6, i32 0, i32 4, !dbg !13645
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %intr_node, i32 0, i32 0, !dbg !13645
  %7 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !13645
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !13645
  store i8* %8, i8** %__mptr1, align 8, !dbg !13645
  br label %do.body3, !dbg !13645

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !13646

do.end4:                                          ; preds = %do.body3
  %9 = load i8*, i8** %__mptr1, align 8, !dbg !13645
  %add.ptr6 = getelementptr i8, i8* %9, i64 -40, !dbg !13645
  %10 = bitcast i8* %add.ptr6 to %struct.ehci_qh*, !dbg !13645
  store %struct.ehci_qh* %10, %struct.ehci_qh** %tmp5, align 8, !dbg !13646
  %11 = load %struct.ehci_qh*, %struct.ehci_qh** %tmp5, align 8, !dbg !13645
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13642
  %qh_scan_next = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 14, !dbg !13642
  store %struct.ehci_qh* %11, %struct.ehci_qh** %qh_scan_next, align 8, !dbg !13642
  br label %for.cond, !dbg !13642

for.cond:                                         ; preds = %do.end36, %do.end4
  %13 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13648
  %intr_node7 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %13, i32 0, i32 4, !dbg !13648
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13648
  %intr_qh_list8 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 26, !dbg !13648
  %cmp = icmp eq %struct.list_head* %intr_node7, %intr_qh_list8, !dbg !13648
  %lnot = xor i1 %cmp, true, !dbg !13648
  br i1 %lnot, label %for.body, label %for.end, !dbg !13642

for.body:                                         ; preds = %for.cond
  %15 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13650
  %qtd_list = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %15, i32 0, i32 3, !dbg !13653
  %call = call i32 @list_empty(%struct.list_head* %qtd_list) #11, !dbg !13654
  %tobool = icmp ne i32 %call, 0, !dbg !13654
  br i1 %tobool, label %if.end29, label %if.then, !dbg !13655

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !13656, metadata !DIExpression()), !dbg !13658
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13659
  %17 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13660
  %call9 = call i32 @qh_completions(%struct.ehci_hcd* %16, %struct.ehci_qh* %17) #11, !dbg !13661
  store i32 %call9, i32* %temp, align 4, !dbg !13662
  %18 = load i32, i32* %temp, align 4, !dbg !13663
  %tobool10 = icmp ne i32 %18, 0, !dbg !13663
  %lnot11 = xor i1 %tobool10, true, !dbg !13663
  %lnot12 = xor i1 %lnot11, true, !dbg !13663
  %lnot.ext = zext i1 %lnot12 to i32, !dbg !13663
  %conv = sext i32 %lnot.ext to i64, !dbg !13663
  %tobool13 = icmp ne i64 %conv, 0, !dbg !13663
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !13665

if.then14:                                        ; preds = %if.then
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13666
  %20 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13667
  call void @start_unlink_intr(%struct.ehci_hcd* %19, %struct.ehci_qh* %20) #11, !dbg !13668
  br label %if.end28, !dbg !13668

if.else:                                          ; preds = %if.then
  %21 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13669
  %qtd_list15 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %21, i32 0, i32 3, !dbg !13669
  %call16 = call i32 @list_empty(%struct.list_head* %qtd_list15) #11, !dbg !13669
  %tobool17 = icmp ne i32 %call16, 0, !dbg !13669
  br i1 %tobool17, label %land.rhs, label %land.end, !dbg !13669

land.rhs:                                         ; preds = %if.else
  %22 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13669
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %22, i32 0, i32 9, !dbg !13669
  %23 = load i8, i8* %qh_state, align 4, !dbg !13669
  %conv18 = zext i8 %23 to i32, !dbg !13669
  %cmp19 = icmp eq i32 %conv18, 1, !dbg !13669
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else
  %24 = phi i1 [ false, %if.else ], [ %cmp19, %land.rhs ], !dbg !13671
  %lnot21 = xor i1 %24, true, !dbg !13669
  %lnot23 = xor i1 %lnot21, true, !dbg !13669
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !13669
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !13669
  %tobool26 = icmp ne i64 %conv25, 0, !dbg !13669
  br i1 %tobool26, label %if.then27, label %if.end, !dbg !13672

if.then27:                                        ; preds = %land.end
  %25 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13673
  %26 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !13674
  call void @start_unlink_intr_wait(%struct.ehci_hcd* %25, %struct.ehci_qh* %26) #11, !dbg !13675
  br label %if.end, !dbg !13675

if.end:                                           ; preds = %if.then27, %land.end
  br label %if.end28

if.end28:                                         ; preds = %if.end, %if.then14
  br label %if.end29, !dbg !13676

if.end29:                                         ; preds = %if.end28, %for.body
  br label %for.inc, !dbg !13677

for.inc:                                          ; preds = %if.end29
  %27 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13648
  %qh_scan_next30 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %27, i32 0, i32 14, !dbg !13648
  %28 = load %struct.ehci_qh*, %struct.ehci_qh** %qh_scan_next30, align 8, !dbg !13648
  store %struct.ehci_qh* %28, %struct.ehci_qh** %qh, align 8, !dbg !13648
  call void @llvm.dbg.declare(metadata i8** %__mptr31, metadata !13678, metadata !DIExpression()), !dbg !13680
  %29 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13680
  %qh_scan_next32 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %29, i32 0, i32 14, !dbg !13680
  %30 = load %struct.ehci_qh*, %struct.ehci_qh** %qh_scan_next32, align 8, !dbg !13680
  %intr_node33 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %30, i32 0, i32 4, !dbg !13680
  %next34 = getelementptr inbounds %struct.list_head, %struct.list_head* %intr_node33, i32 0, i32 0, !dbg !13680
  %31 = load %struct.list_head*, %struct.list_head** %next34, align 8, !dbg !13680
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !13680
  store i8* %32, i8** %__mptr31, align 8, !dbg !13680
  br label %do.body35, !dbg !13680

do.body35:                                        ; preds = %for.inc
  br label %do.end36, !dbg !13681

do.end36:                                         ; preds = %do.body35
  %33 = load i8*, i8** %__mptr31, align 8, !dbg !13680
  %add.ptr38 = getelementptr i8, i8* %33, i64 -40, !dbg !13680
  %34 = bitcast i8* %add.ptr38 to %struct.ehci_qh*, !dbg !13680
  store %struct.ehci_qh* %34, %struct.ehci_qh** %tmp37, align 8, !dbg !13681
  %35 = load %struct.ehci_qh*, %struct.ehci_qh** %tmp37, align 8, !dbg !13680
  %36 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13648
  %qh_scan_next39 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %36, i32 0, i32 14, !dbg !13648
  store %struct.ehci_qh* %35, %struct.ehci_qh** %qh_scan_next39, align 8, !dbg !13648
  br label %for.cond, !dbg !13648, !llvm.loop !13683

for.end:                                          ; preds = %for.cond
  ret void, !dbg !13685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @scan_isoc(%struct.ehci_hcd* %ehci) #0 !dbg !13686 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %uf = alloca i32, align 4
  %now_frame = alloca i32, align 4
  %frame = alloca i32, align 4
  %fmask = alloca i32, align 4
  %modified = alloca i8, align 1
  %live = alloca i8, align 1
  %q = alloca %union.ehci_shadow, align 8
  %q_p = alloca %union.ehci_shadow*, align 8
  %type = alloca i32, align 4
  %hw_p = alloca i32*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13687, metadata !DIExpression()), !dbg !13688
  call void @llvm.dbg.declare(metadata i32* %uf, metadata !13689, metadata !DIExpression()), !dbg !13690
  call void @llvm.dbg.declare(metadata i32* %now_frame, metadata !13691, metadata !DIExpression()), !dbg !13692
  call void @llvm.dbg.declare(metadata i32* %frame, metadata !13693, metadata !DIExpression()), !dbg !13694
  call void @llvm.dbg.declare(metadata i32* %fmask, metadata !13695, metadata !DIExpression()), !dbg !13696
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13697
  %periodic_size = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 23, !dbg !13698
  %1 = load i32, i32* %periodic_size, align 8, !dbg !13698
  %sub = sub i32 %1, 1, !dbg !13699
  store i32 %sub, i32* %fmask, align 4, !dbg !13696
  call void @llvm.dbg.declare(metadata i8* %modified, metadata !13700, metadata !DIExpression()), !dbg !13701
  call void @llvm.dbg.declare(metadata i8* %live, metadata !13702, metadata !DIExpression()), !dbg !13703
  call void @llvm.dbg.declare(metadata %union.ehci_shadow* %q, metadata !13704, metadata !DIExpression()), !dbg !13705
  call void @llvm.dbg.declare(metadata %union.ehci_shadow** %q_p, metadata !13706, metadata !DIExpression()), !dbg !13707
  call void @llvm.dbg.declare(metadata i32* %type, metadata !13708, metadata !DIExpression()), !dbg !13709
  call void @llvm.dbg.declare(metadata i32** %hw_p, metadata !13710, metadata !DIExpression()), !dbg !13711
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13712
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 12, !dbg !13714
  %3 = load i32, i32* %rh_state, align 4, !dbg !13714
  %cmp = icmp uge i32 %3, 2, !dbg !13715
  br i1 %cmp, label %if.then, label %if.else, !dbg !13716

if.then:                                          ; preds = %entry
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13717
  %call = call i32 @ehci_read_frame_index(%struct.ehci_hcd* %4) #11, !dbg !13719
  store i32 %call, i32* %uf, align 4, !dbg !13720
  %5 = load i32, i32* %uf, align 4, !dbg !13721
  %shr = lshr i32 %5, 3, !dbg !13722
  %6 = load i32, i32* %fmask, align 4, !dbg !13723
  %and = and i32 %shr, %6, !dbg !13724
  store i32 %and, i32* %now_frame, align 4, !dbg !13725
  store i8 1, i8* %live, align 1, !dbg !13726
  br label %if.end, !dbg !13727

if.else:                                          ; preds = %entry
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13728
  %last_iso_frame = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 34, !dbg !13730
  %8 = load i32, i32* %last_iso_frame, align 4, !dbg !13730
  %sub1 = sub i32 %8, 1, !dbg !13731
  %9 = load i32, i32* %fmask, align 4, !dbg !13732
  %and2 = and i32 %sub1, %9, !dbg !13733
  store i32 %and2, i32* %now_frame, align 4, !dbg !13734
  store i8 0, i8* %live, align 1, !dbg !13735
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %now_frame, align 4, !dbg !13736
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13737
  %now_frame3 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %11, i32 0, i32 33, !dbg !13738
  store i32 %10, i32* %now_frame3, align 8, !dbg !13739
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13740
  %last_iso_frame4 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 34, !dbg !13741
  %13 = load i32, i32* %last_iso_frame4, align 4, !dbg !13741
  store i32 %13, i32* %frame, align 4, !dbg !13742
  br label %restart, !dbg !13743

restart:                                          ; preds = %if.end119, %if.then114, %if.end
  call void @llvm.dbg.label(metadata !13744), !dbg !13745
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13746
  %pshadow = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 28, !dbg !13747
  %15 = load %union.ehci_shadow*, %union.ehci_shadow** %pshadow, align 8, !dbg !13747
  %16 = load i32, i32* %frame, align 4, !dbg !13748
  %idxprom = zext i32 %16 to i64, !dbg !13746
  %arrayidx = getelementptr %union.ehci_shadow, %union.ehci_shadow* %15, i64 %idxprom, !dbg !13746
  store %union.ehci_shadow* %arrayidx, %union.ehci_shadow** %q_p, align 8, !dbg !13749
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13750
  %periodic = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %17, i32 0, i32 24, !dbg !13751
  %18 = load i32*, i32** %periodic, align 8, !dbg !13751
  %19 = load i32, i32* %frame, align 4, !dbg !13752
  %idxprom5 = zext i32 %19 to i64, !dbg !13750
  %arrayidx6 = getelementptr i32, i32* %18, i64 %idxprom5, !dbg !13750
  store i32* %arrayidx6, i32** %hw_p, align 8, !dbg !13753
  %20 = load %union.ehci_shadow*, %union.ehci_shadow** %q_p, align 8, !dbg !13754
  %ptr = bitcast %union.ehci_shadow* %20 to i8**, !dbg !13755
  %21 = load i8*, i8** %ptr, align 8, !dbg !13755
  %ptr7 = bitcast %union.ehci_shadow* %q to i8**, !dbg !13756
  store i8* %21, i8** %ptr7, align 8, !dbg !13757
  %22 = load i32*, i32** %hw_p, align 8, !dbg !13758
  %23 = load i32, i32* %22, align 4, !dbg !13758
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13758
  %call8 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %24, i32 6) #11, !dbg !13758
  %and9 = and i32 %23, %call8, !dbg !13758
  store i32 %and9, i32* %type, align 4, !dbg !13759
  store i8 0, i8* %modified, align 1, !dbg !13760
  br label %while.cond, !dbg !13761

while.cond:                                       ; preds = %if.end115, %restart
  %ptr10 = bitcast %union.ehci_shadow* %q to i8**, !dbg !13762
  %25 = load i8*, i8** %ptr10, align 8, !dbg !13762
  %cmp11 = icmp ne i8* %25, null, !dbg !13763
  br i1 %cmp11, label %while.body, label %while.end, !dbg !13761

while.body:                                       ; preds = %while.cond
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13764
  %27 = load i32, i32* %type, align 4, !dbg !13766
  %call12 = call i32 @hc32_to_cpu(%struct.ehci_hcd* %26, i32 %27) #11, !dbg !13767
  switch i32 %call12, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb52
    i32 2, label %sw.bb105
    i32 6, label %sw.bb105
  ], !dbg !13768

sw.bb:                                            ; preds = %while.body
  %28 = load i32, i32* %frame, align 4, !dbg !13769
  %29 = load i32, i32* %now_frame, align 4, !dbg !13772
  %cmp13 = icmp eq i32 %28, %29, !dbg !13773
  br i1 %cmp13, label %land.lhs.true, label %if.end32, !dbg !13774

land.lhs.true:                                    ; preds = %sw.bb
  %30 = load i8, i8* %live, align 1, !dbg !13775
  %tobool = trunc i8 %30 to i1, !dbg !13775
  br i1 %tobool, label %if.then14, label %if.end32, !dbg !13776

if.then14:                                        ; preds = %land.lhs.true
  call void asm sideeffect "lfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13777, !srcloc !13779
  store i32 0, i32* %uf, align 4, !dbg !13780
  br label %for.cond, !dbg !13782

for.cond:                                         ; preds = %for.inc, %if.then14
  %31 = load i32, i32* %uf, align 4, !dbg !13783
  %cmp15 = icmp ult i32 %31, 8, !dbg !13785
  br i1 %cmp15, label %for.body, label %for.end, !dbg !13786

for.body:                                         ; preds = %for.cond
  %itd = bitcast %union.ehci_shadow* %q to %struct.ehci_itd**, !dbg !13787
  %32 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !13787
  %hw_transaction = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %32, i32 0, i32 1, !dbg !13790
  %33 = load i32, i32* %uf, align 4, !dbg !13791
  %idxprom16 = zext i32 %33 to i64, !dbg !13792
  %arrayidx17 = getelementptr [8 x i32], [8 x i32]* %hw_transaction, i64 0, i64 %idxprom16, !dbg !13792
  %34 = load i32, i32* %arrayidx17, align 4, !dbg !13792
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13793
  %call18 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %35, i32 -2147483648) #11, !dbg !13793
  %and19 = and i32 %34, %call18, !dbg !13794
  %tobool20 = icmp ne i32 %and19, 0, !dbg !13794
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !13795

if.then21:                                        ; preds = %for.body
  br label %for.end, !dbg !13796

if.end22:                                         ; preds = %for.body
  br label %for.inc, !dbg !13797

for.inc:                                          ; preds = %if.end22
  %36 = load i32, i32* %uf, align 4, !dbg !13798
  %inc = add i32 %36, 1, !dbg !13798
  store i32 %inc, i32* %uf, align 4, !dbg !13798
  br label %for.cond, !dbg !13799, !llvm.loop !13800

for.end:                                          ; preds = %if.then21, %for.cond
  %37 = load i32, i32* %uf, align 4, !dbg !13802
  %cmp23 = icmp ult i32 %37, 8, !dbg !13804
  br i1 %cmp23, label %if.then24, label %if.end31, !dbg !13805

if.then24:                                        ; preds = %for.end
  %itd25 = bitcast %union.ehci_shadow* %q to %struct.ehci_itd**, !dbg !13806
  %38 = load %struct.ehci_itd*, %struct.ehci_itd** %itd25, align 8, !dbg !13806
  %itd_next = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %38, i32 0, i32 5, !dbg !13808
  store %union.ehci_shadow* %itd_next, %union.ehci_shadow** %q_p, align 8, !dbg !13809
  %itd26 = bitcast %union.ehci_shadow* %q to %struct.ehci_itd**, !dbg !13810
  %39 = load %struct.ehci_itd*, %struct.ehci_itd** %itd26, align 8, !dbg !13810
  %hw_next = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %39, i32 0, i32 0, !dbg !13811
  store i32* %hw_next, i32** %hw_p, align 8, !dbg !13812
  %itd27 = bitcast %union.ehci_shadow* %q to %struct.ehci_itd**, !dbg !13813
  %40 = load %struct.ehci_itd*, %struct.ehci_itd** %itd27, align 8, !dbg !13813
  %hw_next28 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %40, i32 0, i32 0, !dbg !13813
  %41 = load i32, i32* %hw_next28, align 32, !dbg !13813
  %42 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13813
  %call29 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %42, i32 6) #11, !dbg !13813
  %and30 = and i32 %41, %call29, !dbg !13813
  store i32 %and30, i32* %type, align 4, !dbg !13814
  %43 = load %union.ehci_shadow*, %union.ehci_shadow** %q_p, align 8, !dbg !13815
  %44 = bitcast %union.ehci_shadow* %q to i8*, !dbg !13816
  %45 = bitcast %union.ehci_shadow* %43 to i8*, !dbg !13816
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 8, i1 false), !dbg !13816
  br label %sw.epilog, !dbg !13817

if.end31:                                         ; preds = %for.end
  br label %if.end32, !dbg !13818

if.end32:                                         ; preds = %if.end31, %land.lhs.true, %sw.bb
  %46 = load %union.ehci_shadow*, %union.ehci_shadow** %q_p, align 8, !dbg !13819
  %itd33 = bitcast %union.ehci_shadow* %q to %struct.ehci_itd**, !dbg !13820
  %47 = load %struct.ehci_itd*, %struct.ehci_itd** %itd33, align 8, !dbg !13820
  %itd_next34 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %47, i32 0, i32 5, !dbg !13821
  %48 = bitcast %union.ehci_shadow* %46 to i8*, !dbg !13821
  %49 = bitcast %union.ehci_shadow* %itd_next34 to i8*, !dbg !13821
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 8, i1 false), !dbg !13821
  %50 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13822
  %use_dummy_qh = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %50, i32 0, i32 58, !dbg !13824
  %bf.load = load i16, i16* %use_dummy_qh, align 4, !dbg !13824
  %bf.lshr = lshr i16 %bf.load, 10, !dbg !13824
  %bf.clear = and i16 %bf.lshr, 1, !dbg !13824
  %bf.cast = zext i16 %bf.clear to i32, !dbg !13824
  %tobool35 = icmp ne i32 %bf.cast, 0, !dbg !13822
  br i1 %tobool35, label %lor.lhs.false, label %if.then40, !dbg !13825

lor.lhs.false:                                    ; preds = %if.end32
  %itd36 = bitcast %union.ehci_shadow* %q to %struct.ehci_itd**, !dbg !13826
  %51 = load %struct.ehci_itd*, %struct.ehci_itd** %itd36, align 8, !dbg !13826
  %hw_next37 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %51, i32 0, i32 0, !dbg !13827
  %52 = load i32, i32* %hw_next37, align 32, !dbg !13827
  %53 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13828
  %call38 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %53, i32 1) #11, !dbg !13828
  %cmp39 = icmp ne i32 %52, %call38, !dbg !13829
  br i1 %cmp39, label %if.then40, label %if.else43, !dbg !13830

if.then40:                                        ; preds = %lor.lhs.false, %if.end32
  %itd41 = bitcast %union.ehci_shadow* %q to %struct.ehci_itd**, !dbg !13831
  %54 = load %struct.ehci_itd*, %struct.ehci_itd** %itd41, align 8, !dbg !13831
  %hw_next42 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %54, i32 0, i32 0, !dbg !13832
  %55 = load i32, i32* %hw_next42, align 32, !dbg !13832
  %56 = load i32*, i32** %hw_p, align 8, !dbg !13833
  store i32 %55, i32* %56, align 4, !dbg !13834
  br label %if.end45, !dbg !13835

if.else43:                                        ; preds = %lor.lhs.false
  %57 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13836
  %58 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13837
  %dummy = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %58, i32 0, i32 16, !dbg !13838
  %59 = load %struct.ehci_qh*, %struct.ehci_qh** %dummy, align 8, !dbg !13838
  %qh_dma = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %59, i32 0, i32 1, !dbg !13839
  %60 = load i64, i64* %qh_dma, align 8, !dbg !13839
  %conv = trunc i64 %60 to i32, !dbg !13837
  %call44 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %57, i32 %conv) #11, !dbg !13840
  %61 = load i32*, i32** %hw_p, align 8, !dbg !13841
  store i32 %call44, i32* %61, align 4, !dbg !13842
  br label %if.end45

if.end45:                                         ; preds = %if.else43, %if.then40
  %itd46 = bitcast %union.ehci_shadow* %q to %struct.ehci_itd**, !dbg !13843
  %62 = load %struct.ehci_itd*, %struct.ehci_itd** %itd46, align 8, !dbg !13843
  %hw_next47 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %62, i32 0, i32 0, !dbg !13843
  %63 = load i32, i32* %hw_next47, align 32, !dbg !13843
  %64 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13843
  %call48 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %64, i32 6) #11, !dbg !13843
  %and49 = and i32 %63, %call48, !dbg !13843
  store i32 %and49, i32* %type, align 4, !dbg !13844
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13845, !srcloc !13846
  %65 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13847
  %itd50 = bitcast %union.ehci_shadow* %q to %struct.ehci_itd**, !dbg !13848
  %66 = load %struct.ehci_itd*, %struct.ehci_itd** %itd50, align 8, !dbg !13848
  %call51 = call zeroext i1 @itd_complete(%struct.ehci_hcd* %65, %struct.ehci_itd* %66) #11, !dbg !13849
  %frombool = zext i1 %call51 to i8, !dbg !13850
  store i8 %frombool, i8* %modified, align 1, !dbg !13850
  %67 = load %union.ehci_shadow*, %union.ehci_shadow** %q_p, align 8, !dbg !13851
  %68 = bitcast %union.ehci_shadow* %q to i8*, !dbg !13852
  %69 = bitcast %union.ehci_shadow* %67 to i8*, !dbg !13852
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 8, i1 false), !dbg !13852
  br label %sw.epilog, !dbg !13853

sw.bb52:                                          ; preds = %while.body
  %70 = load i32, i32* %frame, align 4, !dbg !13854
  %71 = load i32, i32* %now_frame, align 4, !dbg !13856
  %cmp53 = icmp eq i32 %70, %71, !dbg !13857
  br i1 %cmp53, label %land.lhs.true59, label %lor.lhs.false55, !dbg !13858

lor.lhs.false55:                                  ; preds = %sw.bb52
  %72 = load i32, i32* %frame, align 4, !dbg !13859
  %add = add i32 %72, 1, !dbg !13860
  %73 = load i32, i32* %fmask, align 4, !dbg !13861
  %and56 = and i32 %add, %73, !dbg !13862
  %74 = load i32, i32* %now_frame, align 4, !dbg !13863
  %cmp57 = icmp eq i32 %and56, %74, !dbg !13864
  br i1 %cmp57, label %land.lhs.true59, label %if.end74, !dbg !13865

land.lhs.true59:                                  ; preds = %lor.lhs.false55, %sw.bb52
  %75 = load i8, i8* %live, align 1, !dbg !13866
  %tobool60 = trunc i8 %75 to i1, !dbg !13866
  br i1 %tobool60, label %land.lhs.true62, label %if.end74, !dbg !13867

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %sitd = bitcast %union.ehci_shadow* %q to %struct.ehci_sitd**, !dbg !13868
  %76 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !13868
  %hw_results = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %76, i32 0, i32 3, !dbg !13869
  %77 = load i32, i32* %hw_results, align 4, !dbg !13869
  %78 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13870
  %call63 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %78, i32 128) #11, !dbg !13870
  %and64 = and i32 %77, %call63, !dbg !13871
  %tobool65 = icmp ne i32 %and64, 0, !dbg !13871
  br i1 %tobool65, label %if.then66, label %if.end74, !dbg !13872

if.then66:                                        ; preds = %land.lhs.true62
  %sitd67 = bitcast %union.ehci_shadow* %q to %struct.ehci_sitd**, !dbg !13873
  %79 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd67, align 8, !dbg !13873
  %sitd_next = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %79, i32 0, i32 8, !dbg !13875
  store %union.ehci_shadow* %sitd_next, %union.ehci_shadow** %q_p, align 8, !dbg !13876
  %sitd68 = bitcast %union.ehci_shadow* %q to %struct.ehci_sitd**, !dbg !13877
  %80 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd68, align 8, !dbg !13877
  %hw_next69 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %80, i32 0, i32 0, !dbg !13878
  store i32* %hw_next69, i32** %hw_p, align 8, !dbg !13879
  %sitd70 = bitcast %union.ehci_shadow* %q to %struct.ehci_sitd**, !dbg !13880
  %81 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd70, align 8, !dbg !13880
  %hw_next71 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %81, i32 0, i32 0, !dbg !13880
  %82 = load i32, i32* %hw_next71, align 32, !dbg !13880
  %83 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13880
  %call72 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %83, i32 6) #11, !dbg !13880
  %and73 = and i32 %82, %call72, !dbg !13880
  store i32 %and73, i32* %type, align 4, !dbg !13881
  %84 = load %union.ehci_shadow*, %union.ehci_shadow** %q_p, align 8, !dbg !13882
  %85 = bitcast %union.ehci_shadow* %q to i8*, !dbg !13883
  %86 = bitcast %union.ehci_shadow* %84 to i8*, !dbg !13883
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 8, i1 false), !dbg !13883
  br label %sw.epilog, !dbg !13884

if.end74:                                         ; preds = %land.lhs.true62, %land.lhs.true59, %lor.lhs.false55
  %87 = load %union.ehci_shadow*, %union.ehci_shadow** %q_p, align 8, !dbg !13885
  %sitd75 = bitcast %union.ehci_shadow* %q to %struct.ehci_sitd**, !dbg !13886
  %88 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd75, align 8, !dbg !13886
  %sitd_next76 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %88, i32 0, i32 8, !dbg !13887
  %89 = bitcast %union.ehci_shadow* %87 to i8*, !dbg !13887
  %90 = bitcast %union.ehci_shadow* %sitd_next76 to i8*, !dbg !13887
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 16 %90, i64 8, i1 false), !dbg !13887
  %91 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13888
  %use_dummy_qh77 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %91, i32 0, i32 58, !dbg !13890
  %bf.load78 = load i16, i16* %use_dummy_qh77, align 4, !dbg !13890
  %bf.lshr79 = lshr i16 %bf.load78, 10, !dbg !13890
  %bf.clear80 = and i16 %bf.lshr79, 1, !dbg !13890
  %bf.cast81 = zext i16 %bf.clear80 to i32, !dbg !13890
  %tobool82 = icmp ne i32 %bf.cast81, 0, !dbg !13888
  br i1 %tobool82, label %lor.lhs.false83, label %if.then89, !dbg !13891

lor.lhs.false83:                                  ; preds = %if.end74
  %sitd84 = bitcast %union.ehci_shadow* %q to %struct.ehci_sitd**, !dbg !13892
  %92 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd84, align 8, !dbg !13892
  %hw_next85 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %92, i32 0, i32 0, !dbg !13893
  %93 = load i32, i32* %hw_next85, align 32, !dbg !13893
  %94 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13894
  %call86 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %94, i32 1) #11, !dbg !13894
  %cmp87 = icmp ne i32 %93, %call86, !dbg !13895
  br i1 %cmp87, label %if.then89, label %if.else92, !dbg !13896

if.then89:                                        ; preds = %lor.lhs.false83, %if.end74
  %sitd90 = bitcast %union.ehci_shadow* %q to %struct.ehci_sitd**, !dbg !13897
  %95 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd90, align 8, !dbg !13897
  %hw_next91 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %95, i32 0, i32 0, !dbg !13898
  %96 = load i32, i32* %hw_next91, align 32, !dbg !13898
  %97 = load i32*, i32** %hw_p, align 8, !dbg !13899
  store i32 %96, i32* %97, align 4, !dbg !13900
  br label %if.end97, !dbg !13901

if.else92:                                        ; preds = %lor.lhs.false83
  %98 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13902
  %99 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13903
  %dummy93 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %99, i32 0, i32 16, !dbg !13904
  %100 = load %struct.ehci_qh*, %struct.ehci_qh** %dummy93, align 8, !dbg !13904
  %qh_dma94 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %100, i32 0, i32 1, !dbg !13905
  %101 = load i64, i64* %qh_dma94, align 8, !dbg !13905
  %conv95 = trunc i64 %101 to i32, !dbg !13903
  %call96 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %98, i32 %conv95) #11, !dbg !13906
  %102 = load i32*, i32** %hw_p, align 8, !dbg !13907
  store i32 %call96, i32* %102, align 4, !dbg !13908
  br label %if.end97

if.end97:                                         ; preds = %if.else92, %if.then89
  %sitd98 = bitcast %union.ehci_shadow* %q to %struct.ehci_sitd**, !dbg !13909
  %103 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd98, align 8, !dbg !13909
  %hw_next99 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %103, i32 0, i32 0, !dbg !13909
  %104 = load i32, i32* %hw_next99, align 32, !dbg !13909
  %105 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13909
  %call100 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %105, i32 6) #11, !dbg !13909
  %and101 = and i32 %104, %call100, !dbg !13909
  store i32 %and101, i32* %type, align 4, !dbg !13910
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13911, !srcloc !13912
  %106 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13913
  %sitd102 = bitcast %union.ehci_shadow* %q to %struct.ehci_sitd**, !dbg !13914
  %107 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd102, align 8, !dbg !13914
  %call103 = call zeroext i1 @sitd_complete(%struct.ehci_hcd* %106, %struct.ehci_sitd* %107) #11, !dbg !13915
  %frombool104 = zext i1 %call103 to i8, !dbg !13916
  store i8 %frombool104, i8* %modified, align 1, !dbg !13916
  %108 = load %union.ehci_shadow*, %union.ehci_shadow** %q_p, align 8, !dbg !13917
  %109 = bitcast %union.ehci_shadow* %q to i8*, !dbg !13918
  %110 = bitcast %union.ehci_shadow* %108 to i8*, !dbg !13918
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %109, i8* align 8 %110, i64 8, i1 false), !dbg !13918
  br label %sw.epilog, !dbg !13919

sw.default:                                       ; preds = %while.body
  br label %sw.bb105, !dbg !13920

sw.bb105:                                         ; preds = %while.body, %while.body, %sw.default
  %ptr106 = bitcast %union.ehci_shadow* %q to i8**, !dbg !13921
  store i8* null, i8** %ptr106, align 8, !dbg !13922
  br label %sw.epilog, !dbg !13923

sw.epilog:                                        ; preds = %sw.bb105, %if.end97, %if.then66, %if.end45, %if.then24
  %111 = load i8, i8* %modified, align 1, !dbg !13924
  %tobool107 = trunc i8 %111 to i1, !dbg !13924
  br i1 %tobool107, label %land.rhs, label %land.end, !dbg !13924

land.rhs:                                         ; preds = %sw.epilog
  %112 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13924
  %isoc_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %112, i32 0, i32 36, !dbg !13924
  %113 = load i32, i32* %isoc_count, align 4, !dbg !13924
  %cmp109 = icmp ugt i32 %113, 0, !dbg !13924
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.epilog
  %114 = phi i1 [ false, %sw.epilog ], [ %cmp109, %land.rhs ], !dbg !13926
  %lnot = xor i1 %114, true, !dbg !13924
  %lnot111 = xor i1 %lnot, true, !dbg !13924
  %lnot.ext = zext i1 %lnot111 to i32, !dbg !13924
  %conv112 = sext i32 %lnot.ext to i64, !dbg !13924
  %tobool113 = icmp ne i64 %conv112, 0, !dbg !13924
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !13927

if.then114:                                       ; preds = %land.end
  br label %restart, !dbg !13928

if.end115:                                        ; preds = %land.end
  br label %while.cond, !dbg !13761, !llvm.loop !13929

while.end:                                        ; preds = %while.cond
  %115 = load i32, i32* %frame, align 4, !dbg !13931
  %116 = load i32, i32* %now_frame, align 4, !dbg !13933
  %cmp116 = icmp eq i32 %115, %116, !dbg !13934
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !13935

if.then118:                                       ; preds = %while.end
  ret void, !dbg !13936

if.end119:                                        ; preds = %while.end
  %117 = load i32, i32* %frame, align 4, !dbg !13937
  %118 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13938
  %last_iso_frame120 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %118, i32 0, i32 34, !dbg !13939
  store i32 %117, i32* %last_iso_frame120, align 4, !dbg !13940
  %119 = load i32, i32* %frame, align 4, !dbg !13941
  %add121 = add i32 %119, 1, !dbg !13942
  %120 = load i32, i32* %fmask, align 4, !dbg !13943
  %and122 = and i32 %add121, %120, !dbg !13944
  store i32 %and122, i32* %frame, align 4, !dbg !13945
  br label %restart, !dbg !13946
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @start_unlink_intr_wait(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh) #0 !dbg !13947 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13948, metadata !DIExpression()), !dbg !13949
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !13950, metadata !DIExpression()), !dbg !13951
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13952
  %intr_unlink_wait_cycle = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 31, !dbg !13953
  %1 = load i32, i32* %intr_unlink_wait_cycle, align 8, !dbg !13953
  %2 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13954
  %unlink_cycle = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %2, i32 0, i32 8, !dbg !13955
  store i32 %1, i32* %unlink_cycle, align 8, !dbg !13956
  %3 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13957
  %unlink_node = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %3, i32 0, i32 6, !dbg !13958
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13959
  %intr_unlink_wait = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 29, !dbg !13960
  call void @list_add_tail(%struct.list_head* %unlink_node, %struct.list_head* %intr_unlink_wait) #11, !dbg !13961
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13962
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 12, !dbg !13964
  %6 = load i32, i32* %rh_state, align 4, !dbg !13964
  %cmp = icmp ult i32 %6, 2, !dbg !13965
  br i1 %cmp, label %if.then, label %if.else, !dbg !13966

if.then:                                          ; preds = %entry
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13967
  call void @ehci_handle_start_intr_unlinks(%struct.ehci_hcd* %7) #11, !dbg !13968
  br label %if.end6, !dbg !13968

if.else:                                          ; preds = %entry
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13969
  %intr_unlink_wait1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 29, !dbg !13971
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %intr_unlink_wait1, i32 0, i32 0, !dbg !13972
  %9 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13972
  %10 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !13973
  %unlink_node2 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %10, i32 0, i32 6, !dbg !13974
  %cmp3 = icmp eq %struct.list_head* %9, %unlink_node2, !dbg !13975
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !13976

if.then4:                                         ; preds = %if.else
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13977
  call void @ehci_enable_event(%struct.ehci_hcd* %11, i32 6, i1 zeroext true) #11, !dbg !13979
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13980
  %intr_unlink_wait_cycle5 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 31, !dbg !13981
  %13 = load i32, i32* %intr_unlink_wait_cycle5, align 8, !dbg !13982
  %inc = add i32 %13, 1, !dbg !13982
  store i32 %inc, i32* %intr_unlink_wait_cycle5, align 8, !dbg !13982
  br label %if.end, !dbg !13983

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void, !dbg !13984
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_read_frame_index(%struct.ehci_hcd* %ehci) #0 !dbg !13985 {
entry:
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !13988, metadata !DIExpression()), !dbg !13989
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13990
  %frame_index_bug = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 58, !dbg !13992
  %bf.load = load i16, i16* %frame_index_bug, align 4, !dbg !13992
  %bf.lshr = lshr i16 %bf.load, 12, !dbg !13992
  %bf.clear = and i16 %bf.lshr, 1, !dbg !13992
  %bf.cast = zext i16 %bf.clear to i32, !dbg !13992
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !13990
  br i1 %tobool, label %if.then, label %if.end, !dbg !13993

if.then:                                          ; preds = %entry
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13994
  %call = call i32 @ehci_moschip_read_frame_index(%struct.ehci_hcd* %1) #11, !dbg !13995
  store i32 %call, i32* %retval, align 4, !dbg !13996
  br label %return, !dbg !13996

if.end:                                           ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13997
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !13998
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 8, !dbg !13999
  %4 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !13999
  %frame_index = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %4, i32 0, i32 3, !dbg !14000
  %call1 = call i32 @ehci_readl(%struct.ehci_hcd* %2, i32* %frame_index) #11, !dbg !14001
  store i32 %call1, i32* %retval, align 4, !dbg !14002
  br label %return, !dbg !14002

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !14003
  ret i32 %5, !dbg !14003
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @itd_complete(%struct.ehci_hcd* %ehci, %struct.ehci_itd* %itd) #0 !dbg !14004 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %itd.addr = alloca %struct.ehci_itd*, align 8
  %urb = alloca %struct.urb*, align 8
  %desc = alloca %struct.usb_iso_packet_descriptor*, align 8
  %t = alloca i32, align 4
  %uframe = alloca i32, align 4
  %urb_index = alloca i32, align 4
  %stream = alloca %struct.ehci_iso_stream*, align 8
  %retval3 = alloca i8, align 1
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !14007, metadata !DIExpression()), !dbg !14008
  store %struct.ehci_itd* %itd, %struct.ehci_itd** %itd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_itd** %itd.addr, metadata !14009, metadata !DIExpression()), !dbg !14010
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !14011, metadata !DIExpression()), !dbg !14012
  %0 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !14013
  %urb1 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %0, i32 0, i32 6, !dbg !14014
  %1 = load %struct.urb*, %struct.urb** %urb1, align 16, !dbg !14014
  store %struct.urb* %1, %struct.urb** %urb, align 8, !dbg !14012
  call void @llvm.dbg.declare(metadata %struct.usb_iso_packet_descriptor** %desc, metadata !14015, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.declare(metadata i32* %t, metadata !14018, metadata !DIExpression()), !dbg !14019
  call void @llvm.dbg.declare(metadata i32* %uframe, metadata !14020, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.declare(metadata i32* %urb_index, metadata !14022, metadata !DIExpression()), !dbg !14023
  store i32 -1, i32* %urb_index, align 4, !dbg !14023
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream, metadata !14024, metadata !DIExpression()), !dbg !14025
  %2 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !14026
  %stream2 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %2, i32 0, i32 7, !dbg !14027
  %3 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream2, align 8, !dbg !14027
  store %struct.ehci_iso_stream* %3, %struct.ehci_iso_stream** %stream, align 8, !dbg !14025
  call void @llvm.dbg.declare(metadata i8* %retval3, metadata !14028, metadata !DIExpression()), !dbg !14029
  store i8 0, i8* %retval3, align 1, !dbg !14029
  store i32 0, i32* %uframe, align 4, !dbg !14030
  br label %for.cond, !dbg !14032

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %uframe, align 4, !dbg !14033
  %cmp = icmp ult i32 %4, 8, !dbg !14035
  br i1 %cmp, label %for.body, label %for.end, !dbg !14036

for.body:                                         ; preds = %for.cond
  %5 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !14037
  %index = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %5, i32 0, i32 11, !dbg !14037
  %6 = load i32, i32* %uframe, align 4, !dbg !14037
  %idxprom = zext i32 %6 to i64, !dbg !14037
  %arrayidx = getelementptr [8 x i32], [8 x i32]* %index, i64 0, i64 %idxprom, !dbg !14037
  %7 = load i32, i32* %arrayidx, align 4, !dbg !14037
  %cmp4 = icmp eq i32 %7, -1, !dbg !14037
  %lnot = xor i1 %cmp4, true, !dbg !14037
  %lnot5 = xor i1 %lnot, true, !dbg !14037
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !14037
  %conv = sext i32 %lnot.ext to i64, !dbg !14037
  %tobool = icmp ne i64 %conv, 0, !dbg !14037
  br i1 %tobool, label %if.then, label %if.end, !dbg !14040

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !14041

if.end:                                           ; preds = %for.body
  %8 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !14042
  %index6 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %8, i32 0, i32 11, !dbg !14043
  %9 = load i32, i32* %uframe, align 4, !dbg !14044
  %idxprom7 = zext i32 %9 to i64, !dbg !14042
  %arrayidx8 = getelementptr [8 x i32], [8 x i32]* %index6, i64 0, i64 %idxprom7, !dbg !14042
  %10 = load i32, i32* %arrayidx8, align 4, !dbg !14042
  store i32 %10, i32* %urb_index, align 4, !dbg !14045
  %11 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14046
  %iso_frame_desc = getelementptr inbounds %struct.urb, %struct.urb* %11, i32 0, i32 29, !dbg !14047
  %12 = load i32, i32* %urb_index, align 4, !dbg !14048
  %idxprom9 = sext i32 %12 to i64, !dbg !14046
  %arrayidx10 = getelementptr [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %iso_frame_desc, i64 0, i64 %idxprom9, !dbg !14046
  store %struct.usb_iso_packet_descriptor* %arrayidx10, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14049
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14050
  %14 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !14051
  %hw_transaction = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %14, i32 0, i32 1, !dbg !14052
  %15 = load i32, i32* %uframe, align 4, !dbg !14053
  %idxprom11 = zext i32 %15 to i64, !dbg !14051
  %arrayidx12 = getelementptr [8 x i32], [8 x i32]* %hw_transaction, i64 0, i64 %idxprom11, !dbg !14051
  %call = call i32 @hc32_to_cpup(%struct.ehci_hcd* %13, i32* %arrayidx12) #11, !dbg !14054
  store i32 %call, i32* %t, align 4, !dbg !14055
  %16 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !14056
  %hw_transaction13 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %16, i32 0, i32 1, !dbg !14057
  %17 = load i32, i32* %uframe, align 4, !dbg !14058
  %idxprom14 = zext i32 %17 to i64, !dbg !14056
  %arrayidx15 = getelementptr [8 x i32], [8 x i32]* %hw_transaction13, i64 0, i64 %idxprom14, !dbg !14056
  store i32 0, i32* %arrayidx15, align 4, !dbg !14059
  %18 = load i32, i32* %t, align 4, !dbg !14060
  %and = and i32 %18, 1879048192, !dbg !14060
  %tobool16 = icmp ne i32 %and, 0, !dbg !14060
  %lnot17 = xor i1 %tobool16, true, !dbg !14060
  %lnot19 = xor i1 %lnot17, true, !dbg !14060
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !14060
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !14060
  %tobool22 = icmp ne i64 %conv21, 0, !dbg !14060
  br i1 %tobool22, label %if.then23, label %if.else44, !dbg !14062

if.then23:                                        ; preds = %if.end
  %19 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14063
  %error_count = getelementptr inbounds %struct.urb, %struct.urb* %19, i32 0, i32 26, !dbg !14065
  %20 = load i32, i32* %error_count, align 4, !dbg !14066
  %inc = add i32 %20, 1, !dbg !14066
  store i32 %inc, i32* %error_count, align 4, !dbg !14066
  %21 = load i32, i32* %t, align 4, !dbg !14067
  %and24 = and i32 %21, 1073741824, !dbg !14069
  %tobool25 = icmp ne i32 %and24, 0, !dbg !14069
  br i1 %tobool25, label %if.then26, label %if.else, !dbg !14070

if.then26:                                        ; preds = %if.then23
  %22 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14071
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %22, i32 0, i32 10, !dbg !14071
  %23 = load i32, i32* %pipe, align 8, !dbg !14071
  %and27 = and i32 %23, 128, !dbg !14071
  %tobool28 = icmp ne i32 %and27, 0, !dbg !14071
  %24 = zext i1 %tobool28 to i64, !dbg !14071
  %cond = select i1 %tobool28, i32 -63, i32 -70, !dbg !14071
  %25 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14072
  %status = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %25, i32 0, i32 3, !dbg !14073
  store i32 %cond, i32* %status, align 4, !dbg !14074
  br label %if.end36, !dbg !14072

if.else:                                          ; preds = %if.then23
  %26 = load i32, i32* %t, align 4, !dbg !14075
  %and29 = and i32 %26, 536870912, !dbg !14077
  %tobool30 = icmp ne i32 %and29, 0, !dbg !14077
  br i1 %tobool30, label %if.then31, label %if.else33, !dbg !14078

if.then31:                                        ; preds = %if.else
  %27 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14079
  %status32 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %27, i32 0, i32 3, !dbg !14080
  store i32 -75, i32* %status32, align 4, !dbg !14081
  br label %if.end35, !dbg !14079

if.else33:                                        ; preds = %if.else
  %28 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14082
  %status34 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %28, i32 0, i32 3, !dbg !14083
  store i32 -71, i32* %status34, align 4, !dbg !14084
  br label %if.end35

if.end35:                                         ; preds = %if.else33, %if.then31
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then26
  %29 = load i32, i32* %t, align 4, !dbg !14085
  %and37 = and i32 %29, 536870912, !dbg !14087
  %tobool38 = icmp ne i32 %and37, 0, !dbg !14087
  br i1 %tobool38, label %if.end43, label %if.then39, !dbg !14088

if.then39:                                        ; preds = %if.end36
  %30 = load i32, i32* %t, align 4, !dbg !14089
  %shr = lshr i32 %30, 16, !dbg !14089
  %and40 = and i32 %shr, 4095, !dbg !14089
  %31 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14091
  %actual_length = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %31, i32 0, i32 2, !dbg !14092
  store i32 %and40, i32* %actual_length, align 4, !dbg !14093
  %32 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14094
  %actual_length41 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %32, i32 0, i32 2, !dbg !14095
  %33 = load i32, i32* %actual_length41, align 4, !dbg !14095
  %34 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14096
  %actual_length42 = getelementptr inbounds %struct.urb, %struct.urb* %34, i32 0, i32 20, !dbg !14097
  %35 = load i32, i32* %actual_length42, align 4, !dbg !14098
  %add = add i32 %35, %33, !dbg !14098
  store i32 %add, i32* %actual_length42, align 4, !dbg !14098
  br label %if.end43, !dbg !14099

if.end43:                                         ; preds = %if.then39, %if.end36
  br label %if.end66, !dbg !14100

if.else44:                                        ; preds = %if.end
  %36 = load i32, i32* %t, align 4, !dbg !14101
  %and45 = and i32 %36, -2147483648, !dbg !14101
  %cmp46 = icmp eq i32 %and45, 0, !dbg !14101
  %lnot48 = xor i1 %cmp46, true, !dbg !14101
  %lnot50 = xor i1 %lnot48, true, !dbg !14101
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !14101
  %conv52 = sext i32 %lnot.ext51 to i64, !dbg !14101
  %tobool53 = icmp ne i64 %conv52, 0, !dbg !14101
  br i1 %tobool53, label %if.then54, label %if.else62, !dbg !14103

if.then54:                                        ; preds = %if.else44
  %37 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14104
  %status55 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %37, i32 0, i32 3, !dbg !14106
  store i32 0, i32* %status55, align 4, !dbg !14107
  %38 = load i32, i32* %t, align 4, !dbg !14108
  %shr56 = lshr i32 %38, 16, !dbg !14108
  %and57 = and i32 %shr56, 4095, !dbg !14108
  %39 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14109
  %actual_length58 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %39, i32 0, i32 2, !dbg !14110
  store i32 %and57, i32* %actual_length58, align 4, !dbg !14111
  %40 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14112
  %actual_length59 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %40, i32 0, i32 2, !dbg !14113
  %41 = load i32, i32* %actual_length59, align 4, !dbg !14113
  %42 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14114
  %actual_length60 = getelementptr inbounds %struct.urb, %struct.urb* %42, i32 0, i32 20, !dbg !14115
  %43 = load i32, i32* %actual_length60, align 4, !dbg !14116
  %add61 = add i32 %43, %41, !dbg !14116
  store i32 %add61, i32* %actual_length60, align 4, !dbg !14116
  br label %if.end65, !dbg !14117

if.else62:                                        ; preds = %if.else44
  %44 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14118
  %error_count63 = getelementptr inbounds %struct.urb, %struct.urb* %44, i32 0, i32 26, !dbg !14120
  %45 = load i32, i32* %error_count63, align 4, !dbg !14121
  %inc64 = add i32 %45, 1, !dbg !14121
  store i32 %inc64, i32* %error_count63, align 4, !dbg !14121
  br label %if.end65

if.end65:                                         ; preds = %if.else62, %if.then54
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end43
  br label %for.inc, !dbg !14122

for.inc:                                          ; preds = %if.end66, %if.then
  %46 = load i32, i32* %uframe, align 4, !dbg !14123
  %inc67 = add i32 %46, 1, !dbg !14123
  store i32 %inc67, i32* %uframe, align 4, !dbg !14123
  br label %for.cond, !dbg !14124, !llvm.loop !14125

for.end:                                          ; preds = %for.cond
  %47 = load i32, i32* %urb_index, align 4, !dbg !14127
  %add68 = add i32 %47, 1, !dbg !14127
  %48 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14127
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %48, i32 0, i32 24, !dbg !14127
  %49 = load i32, i32* %number_of_packets, align 4, !dbg !14127
  %cmp69 = icmp ne i32 %add68, %49, !dbg !14127
  %lnot71 = xor i1 %cmp69, true, !dbg !14127
  %lnot73 = xor i1 %lnot71, true, !dbg !14127
  %lnot.ext74 = zext i1 %lnot73 to i32, !dbg !14127
  %conv75 = sext i32 %lnot.ext74 to i64, !dbg !14127
  %tobool76 = icmp ne i64 %conv75, 0, !dbg !14127
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !14129

if.then77:                                        ; preds = %for.end
  br label %done, !dbg !14130

if.end78:                                         ; preds = %for.end
  %50 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14131
  %51 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14132
  call void @ehci_urb_done(%struct.ehci_hcd* %50, %struct.urb* %51, i32 0) #11, !dbg !14133
  store i8 1, i8* %retval3, align 1, !dbg !14134
  store %struct.urb* null, %struct.urb** %urb, align 8, !dbg !14135
  %52 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14136
  %isoc_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %52, i32 0, i32 36, !dbg !14137
  %53 = load i32, i32* %isoc_count, align 4, !dbg !14138
  %dec = add i32 %53, -1, !dbg !14138
  store i32 %dec, i32* %isoc_count, align 4, !dbg !14138
  %54 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14139
  call void @disable_periodic(%struct.ehci_hcd* %54) #11, !dbg !14140
  %55 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14141
  %call79 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %55) #11, !dbg !14142
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call79, i32 0, i32 0, !dbg !14143
  %bandwidth_isoc_reqs = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 15, !dbg !14144
  %56 = load i32, i32* %bandwidth_isoc_reqs, align 8, !dbg !14145
  %dec80 = add i32 %56, -1, !dbg !14145
  store i32 %dec80, i32* %bandwidth_isoc_reqs, align 8, !dbg !14145
  %57 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14146
  %call81 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %57) #11, !dbg !14148
  %self82 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call81, i32 0, i32 0, !dbg !14149
  %bandwidth_isoc_reqs83 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self82, i32 0, i32 15, !dbg !14150
  %58 = load i32, i32* %bandwidth_isoc_reqs83, align 8, !dbg !14150
  %cmp84 = icmp eq i32 %58, 0, !dbg !14151
  br i1 %cmp84, label %if.then86, label %if.end91, !dbg !14152

if.then86:                                        ; preds = %if.end78
  %59 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14153
  %amd_pll_fix = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %59, i32 0, i32 58, !dbg !14156
  %bf.load = load i16, i16* %amd_pll_fix, align 4, !dbg !14156
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !14156
  %bf.clear = and i16 %bf.lshr, 1, !dbg !14156
  %bf.cast = zext i16 %bf.clear to i32, !dbg !14156
  %cmp87 = icmp eq i32 %bf.cast, 1, !dbg !14157
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !14158

if.then89:                                        ; preds = %if.then86
  call void @usb_amd_quirk_pll_enable() #11, !dbg !14159
  br label %if.end90, !dbg !14159

if.end90:                                         ; preds = %if.then89, %if.then86
  br label %if.end91, !dbg !14160

if.end91:                                         ; preds = %if.end90, %if.end78
  %60 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !14161
  %td_list = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %60, i32 0, i32 3, !dbg !14161
  %call92 = call i32 @list_is_singular(%struct.list_head* %td_list) #11, !dbg !14161
  %tobool93 = icmp ne i32 %call92, 0, !dbg !14161
  %lnot94 = xor i1 %tobool93, true, !dbg !14161
  %lnot96 = xor i1 %lnot94, true, !dbg !14161
  %lnot.ext97 = zext i1 %lnot96 to i32, !dbg !14161
  %conv98 = sext i32 %lnot.ext97 to i64, !dbg !14161
  %tobool99 = icmp ne i64 %conv98, 0, !dbg !14161
  br i1 %tobool99, label %if.then100, label %if.end103, !dbg !14163

if.then100:                                       ; preds = %if.end91
  %61 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !14164
  %bandwidth = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %61, i32 0, i32 10, !dbg !14165
  %62 = load i32, i32* %bandwidth, align 4, !dbg !14165
  %63 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14166
  %call101 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %63) #11, !dbg !14167
  %self102 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call101, i32 0, i32 0, !dbg !14168
  %bandwidth_allocated = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self102, i32 0, i32 13, !dbg !14169
  %64 = load i32, i32* %bandwidth_allocated, align 8, !dbg !14170
  %sub = sub i32 %64, %62, !dbg !14170
  store i32 %sub, i32* %bandwidth_allocated, align 8, !dbg !14170
  br label %if.end103, !dbg !14167

if.end103:                                        ; preds = %if.then100, %if.end91
  br label %done, !dbg !14161

done:                                             ; preds = %if.end103, %if.then77
  call void @llvm.dbg.label(metadata !14171), !dbg !14172
  %65 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !14173
  %urb104 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %65, i32 0, i32 6, !dbg !14174
  store %struct.urb* null, %struct.urb** %urb104, align 16, !dbg !14175
  %66 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !14176
  %itd_list = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %66, i32 0, i32 8, !dbg !14177
  %67 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !14178
  %free_list = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %67, i32 0, i32 4, !dbg !14179
  call void @list_move_tail(%struct.list_head* %itd_list, %struct.list_head* %free_list) #11, !dbg !14180
  %68 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !14181
  %td_list105 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %68, i32 0, i32 3, !dbg !14183
  %call106 = call i32 @list_empty(%struct.list_head* %td_list105) #11, !dbg !14184
  %tobool107 = icmp ne i32 %call106, 0, !dbg !14184
  br i1 %tobool107, label %if.then108, label %if.end110, !dbg !14185

if.then108:                                       ; preds = %done
  %69 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !14186
  %free_list109 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %69, i32 0, i32 4, !dbg !14188
  %70 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14189
  %cached_itd_list = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %70, i32 0, i32 39, !dbg !14190
  call void @list_splice_tail_init(%struct.list_head* %free_list109, %struct.list_head* %cached_itd_list) #11, !dbg !14191
  %71 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14192
  call void @start_free_itds(%struct.ehci_hcd* %71) #11, !dbg !14193
  br label %if.end110, !dbg !14194

if.end110:                                        ; preds = %if.then108, %done
  %72 = load i8, i8* %retval3, align 1, !dbg !14195
  %tobool111 = trunc i8 %72 to i1, !dbg !14195
  ret i1 %tobool111, !dbg !14196
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @sitd_complete(%struct.ehci_hcd* %ehci, %struct.ehci_sitd* %sitd) #0 !dbg !14197 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %sitd.addr = alloca %struct.ehci_sitd*, align 8
  %urb = alloca %struct.urb*, align 8
  %desc = alloca %struct.usb_iso_packet_descriptor*, align 8
  %t = alloca i32, align 4
  %urb_index = alloca i32, align 4
  %stream = alloca %struct.ehci_iso_stream*, align 8
  %retval3 = alloca i8, align 1
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !14200, metadata !DIExpression()), !dbg !14201
  store %struct.ehci_sitd* %sitd, %struct.ehci_sitd** %sitd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_sitd** %sitd.addr, metadata !14202, metadata !DIExpression()), !dbg !14203
  call void @llvm.dbg.declare(metadata %struct.urb** %urb, metadata !14204, metadata !DIExpression()), !dbg !14205
  %0 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !14206
  %urb1 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %0, i32 0, i32 9, !dbg !14207
  %1 = load %struct.urb*, %struct.urb** %urb1, align 8, !dbg !14207
  store %struct.urb* %1, %struct.urb** %urb, align 8, !dbg !14205
  call void @llvm.dbg.declare(metadata %struct.usb_iso_packet_descriptor** %desc, metadata !14208, metadata !DIExpression()), !dbg !14209
  call void @llvm.dbg.declare(metadata i32* %t, metadata !14210, metadata !DIExpression()), !dbg !14211
  call void @llvm.dbg.declare(metadata i32* %urb_index, metadata !14212, metadata !DIExpression()), !dbg !14213
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream, metadata !14214, metadata !DIExpression()), !dbg !14215
  %2 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !14216
  %stream2 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %2, i32 0, i32 10, !dbg !14217
  %3 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream2, align 32, !dbg !14217
  store %struct.ehci_iso_stream* %3, %struct.ehci_iso_stream** %stream, align 8, !dbg !14215
  call void @llvm.dbg.declare(metadata i8* %retval3, metadata !14218, metadata !DIExpression()), !dbg !14219
  store i8 0, i8* %retval3, align 1, !dbg !14219
  %4 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !14220
  %index = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %4, i32 0, i32 13, !dbg !14221
  %5 = load i32, i32* %index, align 4, !dbg !14221
  store i32 %5, i32* %urb_index, align 4, !dbg !14222
  %6 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14223
  %iso_frame_desc = getelementptr inbounds %struct.urb, %struct.urb* %6, i32 0, i32 29, !dbg !14224
  %7 = load i32, i32* %urb_index, align 4, !dbg !14225
  %idxprom = sext i32 %7 to i64, !dbg !14223
  %arrayidx = getelementptr [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %iso_frame_desc, i64 0, i64 %idxprom, !dbg !14223
  store %struct.usb_iso_packet_descriptor* %arrayidx, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14226
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14227
  %9 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !14228
  %hw_results = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %9, i32 0, i32 3, !dbg !14229
  %call = call i32 @hc32_to_cpup(%struct.ehci_hcd* %8, i32* %hw_results) #11, !dbg !14230
  store i32 %call, i32* %t, align 4, !dbg !14231
  %10 = load i32, i32* %t, align 4, !dbg !14232
  %and = and i32 %10, 124, !dbg !14232
  %tobool = icmp ne i32 %and, 0, !dbg !14232
  %lnot = xor i1 %tobool, true, !dbg !14232
  %lnot4 = xor i1 %lnot, true, !dbg !14232
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !14232
  %conv = sext i32 %lnot.ext to i64, !dbg !14232
  %tobool5 = icmp ne i64 %conv, 0, !dbg !14232
  br i1 %tobool5, label %if.then, label %if.else18, !dbg !14234

if.then:                                          ; preds = %entry
  %11 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14235
  %error_count = getelementptr inbounds %struct.urb, %struct.urb* %11, i32 0, i32 26, !dbg !14237
  %12 = load i32, i32* %error_count, align 4, !dbg !14238
  %inc = add i32 %12, 1, !dbg !14238
  store i32 %inc, i32* %error_count, align 4, !dbg !14238
  %13 = load i32, i32* %t, align 4, !dbg !14239
  %and6 = and i32 %13, 32, !dbg !14241
  %tobool7 = icmp ne i32 %and6, 0, !dbg !14241
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !14242

if.then8:                                         ; preds = %if.then
  %14 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14243
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %14, i32 0, i32 10, !dbg !14243
  %15 = load i32, i32* %pipe, align 8, !dbg !14243
  %and9 = and i32 %15, 128, !dbg !14243
  %tobool10 = icmp ne i32 %and9, 0, !dbg !14243
  %16 = zext i1 %tobool10 to i64, !dbg !14243
  %cond = select i1 %tobool10, i32 -63, i32 -70, !dbg !14243
  %17 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14244
  %status = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %17, i32 0, i32 3, !dbg !14245
  store i32 %cond, i32* %status, align 4, !dbg !14246
  br label %if.end17, !dbg !14244

if.else:                                          ; preds = %if.then
  %18 = load i32, i32* %t, align 4, !dbg !14247
  %and11 = and i32 %18, 16, !dbg !14249
  %tobool12 = icmp ne i32 %and11, 0, !dbg !14249
  br i1 %tobool12, label %if.then13, label %if.else15, !dbg !14250

if.then13:                                        ; preds = %if.else
  %19 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14251
  %status14 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %19, i32 0, i32 3, !dbg !14252
  store i32 -75, i32* %status14, align 4, !dbg !14253
  br label %if.end, !dbg !14251

if.else15:                                        ; preds = %if.else
  %20 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14254
  %status16 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %20, i32 0, i32 3, !dbg !14255
  store i32 -71, i32* %status16, align 4, !dbg !14256
  br label %if.end

if.end:                                           ; preds = %if.else15, %if.then13
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then8
  br label %if.end36, !dbg !14257

if.else18:                                        ; preds = %entry
  %21 = load i32, i32* %t, align 4, !dbg !14258
  %and19 = and i32 %21, 128, !dbg !14258
  %tobool20 = icmp ne i32 %and19, 0, !dbg !14258
  %lnot21 = xor i1 %tobool20, true, !dbg !14258
  %lnot23 = xor i1 %lnot21, true, !dbg !14258
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !14258
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !14258
  %tobool26 = icmp ne i64 %conv25, 0, !dbg !14258
  br i1 %tobool26, label %if.then27, label %if.else30, !dbg !14260

if.then27:                                        ; preds = %if.else18
  %22 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14261
  %error_count28 = getelementptr inbounds %struct.urb, %struct.urb* %22, i32 0, i32 26, !dbg !14263
  %23 = load i32, i32* %error_count28, align 4, !dbg !14264
  %inc29 = add i32 %23, 1, !dbg !14264
  store i32 %inc29, i32* %error_count28, align 4, !dbg !14264
  br label %if.end35, !dbg !14265

if.else30:                                        ; preds = %if.else18
  %24 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14266
  %status31 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %24, i32 0, i32 3, !dbg !14268
  store i32 0, i32* %status31, align 4, !dbg !14269
  %25 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14270
  %length = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %25, i32 0, i32 1, !dbg !14271
  %26 = load i32, i32* %length, align 4, !dbg !14271
  %27 = load i32, i32* %t, align 4, !dbg !14272
  %shr = lshr i32 %27, 16, !dbg !14272
  %and32 = and i32 %shr, 1023, !dbg !14272
  %sub = sub i32 %26, %and32, !dbg !14273
  %28 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14274
  %actual_length = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %28, i32 0, i32 2, !dbg !14275
  store i32 %sub, i32* %actual_length, align 4, !dbg !14276
  %29 = load %struct.usb_iso_packet_descriptor*, %struct.usb_iso_packet_descriptor** %desc, align 8, !dbg !14277
  %actual_length33 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %29, i32 0, i32 2, !dbg !14278
  %30 = load i32, i32* %actual_length33, align 4, !dbg !14278
  %31 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14279
  %actual_length34 = getelementptr inbounds %struct.urb, %struct.urb* %31, i32 0, i32 20, !dbg !14280
  %32 = load i32, i32* %actual_length34, align 4, !dbg !14281
  %add = add i32 %32, %30, !dbg !14281
  store i32 %add, i32* %actual_length34, align 4, !dbg !14281
  br label %if.end35

if.end35:                                         ; preds = %if.else30, %if.then27
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end17
  %33 = load i32, i32* %urb_index, align 4, !dbg !14282
  %add37 = add i32 %33, 1, !dbg !14284
  %34 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14285
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %34, i32 0, i32 24, !dbg !14286
  %35 = load i32, i32* %number_of_packets, align 4, !dbg !14286
  %cmp = icmp ne i32 %add37, %35, !dbg !14287
  br i1 %cmp, label %if.then39, label %if.end40, !dbg !14288

if.then39:                                        ; preds = %if.end36
  br label %done, !dbg !14289

if.end40:                                         ; preds = %if.end36
  %36 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14290
  %37 = load %struct.urb*, %struct.urb** %urb, align 8, !dbg !14291
  call void @ehci_urb_done(%struct.ehci_hcd* %36, %struct.urb* %37, i32 0) #11, !dbg !14292
  store i8 1, i8* %retval3, align 1, !dbg !14293
  store %struct.urb* null, %struct.urb** %urb, align 8, !dbg !14294
  %38 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14295
  %isoc_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %38, i32 0, i32 36, !dbg !14296
  %39 = load i32, i32* %isoc_count, align 4, !dbg !14297
  %dec = add i32 %39, -1, !dbg !14297
  store i32 %dec, i32* %isoc_count, align 4, !dbg !14297
  %40 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14298
  call void @disable_periodic(%struct.ehci_hcd* %40) #11, !dbg !14299
  %41 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14300
  %call41 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %41) #11, !dbg !14301
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call41, i32 0, i32 0, !dbg !14302
  %bandwidth_isoc_reqs = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 15, !dbg !14303
  %42 = load i32, i32* %bandwidth_isoc_reqs, align 8, !dbg !14304
  %dec42 = add i32 %42, -1, !dbg !14304
  store i32 %dec42, i32* %bandwidth_isoc_reqs, align 8, !dbg !14304
  %43 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14305
  %call43 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %43) #11, !dbg !14307
  %self44 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call43, i32 0, i32 0, !dbg !14308
  %bandwidth_isoc_reqs45 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self44, i32 0, i32 15, !dbg !14309
  %44 = load i32, i32* %bandwidth_isoc_reqs45, align 8, !dbg !14309
  %cmp46 = icmp eq i32 %44, 0, !dbg !14310
  br i1 %cmp46, label %if.then48, label %if.end53, !dbg !14311

if.then48:                                        ; preds = %if.end40
  %45 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14312
  %amd_pll_fix = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %45, i32 0, i32 58, !dbg !14315
  %bf.load = load i16, i16* %amd_pll_fix, align 4, !dbg !14315
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !14315
  %bf.clear = and i16 %bf.lshr, 1, !dbg !14315
  %bf.cast = zext i16 %bf.clear to i32, !dbg !14315
  %cmp49 = icmp eq i32 %bf.cast, 1, !dbg !14316
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !14317

if.then51:                                        ; preds = %if.then48
  call void @usb_amd_quirk_pll_enable() #11, !dbg !14318
  br label %if.end52, !dbg !14318

if.end52:                                         ; preds = %if.then51, %if.then48
  br label %if.end53, !dbg !14319

if.end53:                                         ; preds = %if.end52, %if.end40
  %46 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !14320
  %td_list = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %46, i32 0, i32 3, !dbg !14322
  %call54 = call i32 @list_is_singular(%struct.list_head* %td_list) #11, !dbg !14323
  %tobool55 = icmp ne i32 %call54, 0, !dbg !14323
  br i1 %tobool55, label %if.then56, label %if.end60, !dbg !14324

if.then56:                                        ; preds = %if.end53
  %47 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !14325
  %bandwidth = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %47, i32 0, i32 10, !dbg !14326
  %48 = load i32, i32* %bandwidth, align 4, !dbg !14326
  %49 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14327
  %call57 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %49) #11, !dbg !14328
  %self58 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call57, i32 0, i32 0, !dbg !14329
  %bandwidth_allocated = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self58, i32 0, i32 13, !dbg !14330
  %50 = load i32, i32* %bandwidth_allocated, align 8, !dbg !14331
  %sub59 = sub i32 %50, %48, !dbg !14331
  store i32 %sub59, i32* %bandwidth_allocated, align 8, !dbg !14331
  br label %if.end60, !dbg !14328

if.end60:                                         ; preds = %if.then56, %if.end53
  br label %done, !dbg !14332

done:                                             ; preds = %if.end60, %if.then39
  call void @llvm.dbg.label(metadata !14333), !dbg !14334
  %51 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !14335
  %urb61 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %51, i32 0, i32 9, !dbg !14336
  store %struct.urb* null, %struct.urb** %urb61, align 8, !dbg !14337
  %52 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !14338
  %sitd_list = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %52, i32 0, i32 11, !dbg !14339
  %53 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !14340
  %free_list = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %53, i32 0, i32 4, !dbg !14341
  call void @list_move_tail(%struct.list_head* %sitd_list, %struct.list_head* %free_list) #11, !dbg !14342
  %54 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !14343
  %td_list62 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %54, i32 0, i32 3, !dbg !14345
  %call63 = call i32 @list_empty(%struct.list_head* %td_list62) #11, !dbg !14346
  %tobool64 = icmp ne i32 %call63, 0, !dbg !14346
  br i1 %tobool64, label %if.then65, label %if.end67, !dbg !14347

if.then65:                                        ; preds = %done
  %55 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !14348
  %free_list66 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %55, i32 0, i32 4, !dbg !14350
  %56 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14351
  %cached_sitd_list = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %56, i32 0, i32 41, !dbg !14352
  call void @list_splice_tail_init(%struct.list_head* %free_list66, %struct.list_head* %cached_sitd_list) #11, !dbg !14353
  %57 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14354
  call void @start_free_itds(%struct.ehci_hcd* %57) #11, !dbg !14355
  br label %if.end67, !dbg !14356

if.end67:                                         ; preds = %if.then65, %done
  %58 = load i8, i8* %retval3, align 1, !dbg !14357
  %tobool68 = trunc i8 %58 to i1, !dbg !14357
  ret i1 %tobool68, !dbg !14358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_moschip_read_frame_index(%struct.ehci_hcd* %ehci) #0 !dbg !14359 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %uf = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !14360, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.declare(metadata i32* %uf, metadata !14362, metadata !DIExpression()), !dbg !14363
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14364
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14365
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 8, !dbg !14366
  %2 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !14366
  %frame_index = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %2, i32 0, i32 3, !dbg !14367
  %call = call i32 @ehci_readl(%struct.ehci_hcd* %0, i32* %frame_index) #11, !dbg !14368
  store i32 %call, i32* %uf, align 4, !dbg !14369
  %3 = load i32, i32* %uf, align 4, !dbg !14370
  %and = and i32 %3, 7, !dbg !14370
  %cmp = icmp eq i32 %and, 0, !dbg !14370
  %lnot = xor i1 %cmp, true, !dbg !14370
  %lnot1 = xor i1 %lnot, true, !dbg !14370
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14370
  %conv = sext i32 %lnot.ext to i64, !dbg !14370
  %tobool = icmp ne i64 %conv, 0, !dbg !14370
  br i1 %tobool, label %if.then, label %if.end, !dbg !14372

if.then:                                          ; preds = %entry
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14373
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14374
  %regs2 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 8, !dbg !14375
  %6 = load %struct.ehci_regs*, %struct.ehci_regs** %regs2, align 8, !dbg !14375
  %frame_index3 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %6, i32 0, i32 3, !dbg !14376
  %call4 = call i32 @ehci_readl(%struct.ehci_hcd* %4, i32* %frame_index3) #11, !dbg !14377
  store i32 %call4, i32* %uf, align 4, !dbg !14378
  br label %if.end, !dbg !14379

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %uf, align 4, !dbg !14380
  ret i32 %7, !dbg !14381
}

; Function Attrs: noredzone
declare dso_local void @usb_amd_quirk_pll_enable() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_is_singular(%struct.list_head* %head) #0 !dbg !14382 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !14383, metadata !DIExpression()), !dbg !14384
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14385
  %call = call i32 @list_empty(%struct.list_head* %0) #11, !dbg !14386
  %tobool = icmp ne i32 %call, 0, !dbg !14386
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !14387

land.rhs:                                         ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14388
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !14389
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14389
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14390
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !14391
  %4 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !14391
  %cmp = icmp eq %struct.list_head* %2, %4, !dbg !14392
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !14393
  %land.ext = zext i1 %5 to i32, !dbg !14387
  ret i32 %land.ext, !dbg !14394
}

; Function Attrs: noredzone
declare dso_local void @hrtimer_start_range_ns(%struct.hrtimer*, i64, i64, i32) #2

; Function Attrs: noredzone
declare dso_local %struct.dma_pool* @dma_pool_create(i8*, %struct.device*, i64, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ehci_qh* @ehci_qh_alloc(%struct.ehci_hcd* %ehci, i32 %flags) #0 !dbg !14395 {
entry:
  %retval = alloca %struct.ehci_qh*, align 8
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %flags.addr = alloca i32, align 4
  %qh = alloca %struct.ehci_qh*, align 8
  %dma = alloca i64, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !14398, metadata !DIExpression()), !dbg !14399
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14400, metadata !DIExpression()), !dbg !14401
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !14402, metadata !DIExpression()), !dbg !14403
  call void @llvm.dbg.declare(metadata i64* %dma, metadata !14404, metadata !DIExpression()), !dbg !14405
  %call = call i8* @kzalloc(i64 144, i32 2592) #11, !dbg !14406
  %0 = bitcast i8* %call to %struct.ehci_qh*, !dbg !14406
  store %struct.ehci_qh* %0, %struct.ehci_qh** %qh, align 8, !dbg !14407
  %1 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !14408
  %tobool = icmp ne %struct.ehci_qh* %1, null, !dbg !14408
  br i1 %tobool, label %if.end, label %if.then, !dbg !14410

if.then:                                          ; preds = %entry
  br label %done, !dbg !14411

if.end:                                           ; preds = %entry
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14412
  %qh_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 50, !dbg !14413
  %3 = load %struct.dma_pool*, %struct.dma_pool** %qh_pool, align 8, !dbg !14413
  %4 = load i32, i32* %flags.addr, align 4, !dbg !14414
  %call1 = call i8* @dma_pool_alloc(%struct.dma_pool* %3, i32 %4, i64* %dma) #11, !dbg !14415
  %5 = bitcast i8* %call1 to %struct.ehci_qh_hw*, !dbg !14416
  %6 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !14417
  %hw = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %6, i32 0, i32 0, !dbg !14418
  store %struct.ehci_qh_hw* %5, %struct.ehci_qh_hw** %hw, align 8, !dbg !14419
  %7 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !14420
  %hw2 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %7, i32 0, i32 0, !dbg !14422
  %8 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw2, align 8, !dbg !14422
  %tobool3 = icmp ne %struct.ehci_qh_hw* %8, null, !dbg !14420
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !14423

if.then4:                                         ; preds = %if.end
  br label %fail, !dbg !14424

if.end5:                                          ; preds = %if.end
  %9 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !14425
  %hw6 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %9, i32 0, i32 0, !dbg !14426
  %10 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw6, align 8, !dbg !14426
  %11 = bitcast %struct.ehci_qh_hw* %10 to i8*, !dbg !14427
  call void @llvm.memset.p0i8.i64(i8* align 32 %11, i8 0, i64 96, i1 false), !dbg !14427
  %12 = load i64, i64* %dma, align 8, !dbg !14428
  %13 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !14429
  %qh_dma = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %13, i32 0, i32 1, !dbg !14430
  store i64 %12, i64* %qh_dma, align 8, !dbg !14431
  %14 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !14432
  %qtd_list = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %14, i32 0, i32 3, !dbg !14433
  call void @INIT_LIST_HEAD(%struct.list_head* %qtd_list) #11, !dbg !14434
  %15 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !14435
  %unlink_node = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %15, i32 0, i32 6, !dbg !14436
  call void @INIT_LIST_HEAD(%struct.list_head* %unlink_node) #11, !dbg !14437
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14438
  %17 = load i32, i32* %flags.addr, align 4, !dbg !14439
  %call7 = call %struct.ehci_qtd* @ehci_qtd_alloc(%struct.ehci_hcd* %16, i32 %17) #11, !dbg !14440
  %18 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !14441
  %dummy = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %18, i32 0, i32 5, !dbg !14442
  store %struct.ehci_qtd* %call7, %struct.ehci_qtd** %dummy, align 8, !dbg !14443
  %19 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !14444
  %dummy8 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %19, i32 0, i32 5, !dbg !14446
  %20 = load %struct.ehci_qtd*, %struct.ehci_qtd** %dummy8, align 8, !dbg !14446
  %cmp = icmp eq %struct.ehci_qtd* %20, null, !dbg !14447
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !14448

if.then9:                                         ; preds = %if.end5
  br label %fail1, !dbg !14449

if.end10:                                         ; preds = %if.end5
  br label %done, !dbg !14451

done:                                             ; preds = %if.end10, %if.then
  call void @llvm.dbg.label(metadata !14452), !dbg !14453
  %21 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !14454
  store %struct.ehci_qh* %21, %struct.ehci_qh** %retval, align 8, !dbg !14455
  br label %return, !dbg !14455

fail1:                                            ; preds = %if.then9
  call void @llvm.dbg.label(metadata !14456), !dbg !14457
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14458
  %qh_pool11 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %22, i32 0, i32 50, !dbg !14459
  %23 = load %struct.dma_pool*, %struct.dma_pool** %qh_pool11, align 8, !dbg !14459
  %24 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !14460
  %hw12 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %24, i32 0, i32 0, !dbg !14461
  %25 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw12, align 8, !dbg !14461
  %26 = bitcast %struct.ehci_qh_hw* %25 to i8*, !dbg !14460
  %27 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !14462
  %qh_dma13 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %27, i32 0, i32 1, !dbg !14463
  %28 = load i64, i64* %qh_dma13, align 8, !dbg !14463
  call void @dma_pool_free(%struct.dma_pool* %23, i8* %26, i64 %28) #11, !dbg !14464
  br label %fail, !dbg !14464

fail:                                             ; preds = %fail1, %if.then4
  call void @llvm.dbg.label(metadata !14465), !dbg !14466
  %29 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !14467
  %30 = bitcast %struct.ehci_qh* %29 to i8*, !dbg !14467
  call void @kfree(i8* %30) #11, !dbg !14468
  store %struct.ehci_qh* null, %struct.ehci_qh** %retval, align 8, !dbg !14469
  br label %return, !dbg !14469

return:                                           ; preds = %fail, %done
  %31 = load %struct.ehci_qh*, %struct.ehci_qh** %retval, align 8, !dbg !14470
  ret %struct.ehci_qh* %31, !dbg !14470
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dma_alloc_coherent(%struct.device* %dev, i64 %size, i64* %dma_handle, i32 %gfp) #0 !dbg !14471 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %dma_handle.addr = alloca i64*, align 8
  %gfp.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14476, metadata !DIExpression()), !dbg !14477
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14478, metadata !DIExpression()), !dbg !14479
  store i64* %dma_handle, i64** %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %dma_handle.addr, metadata !14480, metadata !DIExpression()), !dbg !14481
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !14482, metadata !DIExpression()), !dbg !14483
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14484
  %1 = load i64, i64* %size.addr, align 8, !dbg !14485
  %2 = load i64*, i64** %dma_handle.addr, align 8, !dbg !14486
  %3 = load i32, i32* %gfp.addr, align 4, !dbg !14487
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !14488
  %and = and i32 %4, 8192, !dbg !14489
  %tobool = icmp ne i32 %and, 0, !dbg !14490
  %5 = zext i1 %tobool to i64, !dbg !14490
  %cond = select i1 %tobool, i64 256, i64 0, !dbg !14490
  %call = call i8* @dma_alloc_attrs(%struct.device* %0, i64 %1, i64* %2, i32 %3, i64 %cond) #11, !dbg !14491
  ret i8* %call, !dbg !14492
}

; Function Attrs: noredzone
declare dso_local i8* @dma_pool_alloc(%struct.dma_pool*, i32, i64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ehci_qtd* @ehci_qtd_alloc(%struct.ehci_hcd* %ehci, i32 %flags) #0 !dbg !14493 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %flags.addr = alloca i32, align 4
  %qtd = alloca %struct.ehci_qtd*, align 8
  %dma = alloca i64, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !14496, metadata !DIExpression()), !dbg !14497
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14498, metadata !DIExpression()), !dbg !14499
  call void @llvm.dbg.declare(metadata %struct.ehci_qtd** %qtd, metadata !14500, metadata !DIExpression()), !dbg !14501
  call void @llvm.dbg.declare(metadata i64* %dma, metadata !14502, metadata !DIExpression()), !dbg !14503
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14504
  %qtd_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 51, !dbg !14505
  %1 = load %struct.dma_pool*, %struct.dma_pool** %qtd_pool, align 8, !dbg !14505
  %2 = load i32, i32* %flags.addr, align 4, !dbg !14506
  %call = call i8* @dma_pool_alloc(%struct.dma_pool* %1, i32 %2, i64* %dma) #11, !dbg !14507
  %3 = bitcast i8* %call to %struct.ehci_qtd*, !dbg !14507
  store %struct.ehci_qtd* %3, %struct.ehci_qtd** %qtd, align 8, !dbg !14508
  %4 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !14509
  %cmp = icmp ne %struct.ehci_qtd* %4, null, !dbg !14511
  br i1 %cmp, label %if.then, label %if.end, !dbg !14512

if.then:                                          ; preds = %entry
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14513
  %6 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !14515
  %7 = load i64, i64* %dma, align 8, !dbg !14516
  call void @ehci_qtd_init(%struct.ehci_hcd* %5, %struct.ehci_qtd* %6, i64 %7) #11, !dbg !14517
  br label %if.end, !dbg !14518

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !14519
  ret %struct.ehci_qtd* %8, !dbg !14520
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_qtd_init(%struct.ehci_hcd* %ehci, %struct.ehci_qtd* %qtd, i64 %dma) #0 !dbg !14521 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qtd.addr = alloca %struct.ehci_qtd*, align 8
  %dma.addr = alloca i64, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !14524, metadata !DIExpression()), !dbg !14525
  store %struct.ehci_qtd* %qtd, %struct.ehci_qtd** %qtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qtd** %qtd.addr, metadata !14526, metadata !DIExpression()), !dbg !14527
  store i64 %dma, i64* %dma.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma.addr, metadata !14528, metadata !DIExpression()), !dbg !14529
  %0 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !14530
  %1 = bitcast %struct.ehci_qtd* %0 to i8*, !dbg !14531
  call void @llvm.memset.p0i8.i64(i8* align 32 %1, i8 0, i64 96, i1 false), !dbg !14531
  %2 = load i64, i64* %dma.addr, align 8, !dbg !14532
  %3 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !14533
  %qtd_dma = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %3, i32 0, i32 5, !dbg !14534
  store i64 %2, i64* %qtd_dma, align 8, !dbg !14535
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14536
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %4, i32 64) #11, !dbg !14537
  %5 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !14538
  %hw_token = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %5, i32 0, i32 2, !dbg !14539
  store i32 %call, i32* %hw_token, align 8, !dbg !14540
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14541
  %call1 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %6, i32 1) #11, !dbg !14541
  %7 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !14542
  %hw_next = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %7, i32 0, i32 0, !dbg !14543
  store i32 %call1, i32* %hw_next, align 32, !dbg !14544
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14545
  %call2 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %8, i32 1) #11, !dbg !14545
  %9 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !14546
  %hw_alt_next = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %9, i32 0, i32 1, !dbg !14547
  store i32 %call2, i32* %hw_alt_next, align 4, !dbg !14548
  %10 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !14549
  %qtd_list = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %10, i32 0, i32 6, !dbg !14550
  call void @INIT_LIST_HEAD(%struct.list_head* %qtd_list) #11, !dbg !14551
  ret void, !dbg !14552
}

; Function Attrs: noredzone
declare dso_local i8* @dma_alloc_attrs(%struct.device*, i64, i64*, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @qh_destroy(%struct.ehci_hcd* %ehci, %struct.ehci_qh* %qh) #0 !dbg !14553 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh.addr = alloca %struct.ehci_qh*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !14554, metadata !DIExpression()), !dbg !14555
  store %struct.ehci_qh* %qh, %struct.ehci_qh** %qh.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh.addr, metadata !14556, metadata !DIExpression()), !dbg !14557
  %0 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !14558
  %qtd_list = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %0, i32 0, i32 3, !dbg !14560
  %call = call i32 @list_empty(%struct.list_head* %qtd_list) #11, !dbg !14561
  %tobool = icmp ne i32 %call, 0, !dbg !14561
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !14562

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !14563
  %qh_next = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %1, i32 0, i32 2, !dbg !14564
  %ptr = bitcast %union.ehci_shadow* %qh_next to i8**, !dbg !14565
  %2 = load i8*, i8** %ptr, align 8, !dbg !14565
  %tobool1 = icmp ne i8* %2, null, !dbg !14563
  br i1 %tobool1, label %if.then, label %if.end, !dbg !14566

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %do.body, !dbg !14567

do.body:                                          ; preds = %if.then
  br label %do.body2, !dbg !14569

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !14571

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !14569

do.body3:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0), i32 59, i32 0, i64 12) #7, !dbg !14573, !srcloc !14575
  br label %do.end4, !dbg !14573

do.end4:                                          ; preds = %do.body3
  br label %do.body5, !dbg !14569

do.body5:                                         ; preds = %do.end4
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 320) #7, !dbg !14576, !srcloc !14579
  unreachable, !dbg !14580

do.end6:                                          ; No predecessors!
  br label %do.end7, !dbg !14569

do.end7:                                          ; preds = %do.end6
  br label %if.end, !dbg !14581

if.end:                                           ; preds = %do.end7, %lor.lhs.false
  %3 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !14582
  %dummy = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %3, i32 0, i32 5, !dbg !14584
  %4 = load %struct.ehci_qtd*, %struct.ehci_qtd** %dummy, align 8, !dbg !14584
  %tobool8 = icmp ne %struct.ehci_qtd* %4, null, !dbg !14582
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !14585

if.then9:                                         ; preds = %if.end
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14586
  %6 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !14587
  %dummy10 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %6, i32 0, i32 5, !dbg !14588
  %7 = load %struct.ehci_qtd*, %struct.ehci_qtd** %dummy10, align 8, !dbg !14588
  call void @ehci_qtd_free(%struct.ehci_hcd* %5, %struct.ehci_qtd* %7) #11, !dbg !14589
  br label %if.end11, !dbg !14589

if.end11:                                         ; preds = %if.then9, %if.end
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !14590
  %qh_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 50, !dbg !14591
  %9 = load %struct.dma_pool*, %struct.dma_pool** %qh_pool, align 8, !dbg !14591
  %10 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !14592
  %hw = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %10, i32 0, i32 0, !dbg !14593
  %11 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !14593
  %12 = bitcast %struct.ehci_qh_hw* %11 to i8*, !dbg !14592
  %13 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !14594
  %qh_dma = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %13, i32 0, i32 1, !dbg !14595
  %14 = load i64, i64* %qh_dma, align 8, !dbg !14595
  call void @dma_pool_free(%struct.dma_pool* %9, i8* %12, i64 %14) #11, !dbg !14596
  %15 = load %struct.ehci_qh*, %struct.ehci_qh** %qh.addr, align 8, !dbg !14597
  %16 = bitcast %struct.ehci_qh* %15 to i8*, !dbg !14597
  call void @kfree(i8* %16) #11, !dbg !14598
  ret void, !dbg !14599
}

; Function Attrs: noredzone
declare dso_local void @dma_pool_destroy(%struct.dma_pool*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_free_coherent(%struct.device* %dev, i64 %size, i8* %cpu_addr, i64 %dma_handle) #0 !dbg !14600 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i64, align 8
  %cpu_addr.addr = alloca i8*, align 8
  %dma_handle.addr = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14603, metadata !DIExpression()), !dbg !14604
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14605, metadata !DIExpression()), !dbg !14606
  store i8* %cpu_addr, i8** %cpu_addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cpu_addr.addr, metadata !14607, metadata !DIExpression()), !dbg !14608
  store i64 %dma_handle, i64* %dma_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dma_handle.addr, metadata !14609, metadata !DIExpression()), !dbg !14610
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14611
  %1 = load i64, i64* %size.addr, align 8, !dbg !14612
  %2 = load i8*, i8** %cpu_addr.addr, align 8, !dbg !14613
  %3 = load i64, i64* %dma_handle.addr, align 8, !dbg !14614
  call void @dma_free_attrs(%struct.device* %0, i64 %1, i8* %2, i64 %3, i64 0) #11, !dbg !14615
  ret void, !dbg !14616
}

; Function Attrs: noredzone
declare dso_local void @dma_free_attrs(%struct.device*, i64, i8*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_irq(%struct.usb_hcd* %hcd) #0 !dbg !14617 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !6727, metadata !DIExpression()), !dbg !14618
  %lock.addr.i169 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i169, metadata !6709, metadata !DIExpression()), !dbg !14623
  %flags.addr.i170 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i170, metadata !6715, metadata !DIExpression()), !dbg !14627
  %tmp.i171 = alloca i32, align 4
  %tmp8.i172 = alloca i32, align 4
  %lock.addr.i167 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i167, metadata !6709, metadata !DIExpression()), !dbg !14628
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !14630
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !14631
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %status = alloca i32, align 4
  %masked_status = alloca i32, align 4
  %pcd_status = alloca i32, align 4
  %cmd = alloca i32, align 4
  %bh = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %i = alloca i32, align 4
  %ppcd = alloca i32, align 4
  %pstatus = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !14638, metadata !DIExpression()), !dbg !14639
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !14640, metadata !DIExpression()), !dbg !14641
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !14642
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !14643
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !14641
  call void @llvm.dbg.declare(metadata i32* %status, metadata !14644, metadata !DIExpression()), !dbg !14645
  call void @llvm.dbg.declare(metadata i32* %masked_status, metadata !14646, metadata !DIExpression()), !dbg !14647
  call void @llvm.dbg.declare(metadata i32* %pcd_status, metadata !14648, metadata !DIExpression()), !dbg !14649
  store i32 0, i32* %pcd_status, align 4, !dbg !14649
  call void @llvm.dbg.declare(metadata i32* %cmd, metadata !14650, metadata !DIExpression()), !dbg !14651
  call void @llvm.dbg.declare(metadata i32* %bh, metadata !14652, metadata !DIExpression()), !dbg !14653
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14654, metadata !DIExpression()), !dbg !14655
  br label %do.body, !dbg !14656

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14657

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14658, metadata !DIExpression()), !dbg !14660
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14661, metadata !DIExpression()), !dbg !14660
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14660
  %conv = zext i1 %cmp to i32, !dbg !14660
  store i32 1, i32* %tmp, align 4, !dbg !14660
  %1 = load i32, i32* %tmp, align 4, !dbg !14660
  br label %do.body2, !dbg !14662

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !14663

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14664

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !14666, metadata !DIExpression()), !dbg !14669
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !14670, metadata !DIExpression()), !dbg !14669
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !14669
  %conv8 = zext i1 %cmp7 to i32, !dbg !14669
  store i32 1, i32* %tmp9, align 4, !dbg !14669
  %2 = load i32, i32* %tmp9, align 4, !dbg !14669
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !14671
  store i64 %call10, i64* %flags, align 8, !dbg !14671
  br label %do.end, !dbg !14671

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !14664

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !14663

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14672, !srcloc !14673
  br label %do.body13, !dbg !14672

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14674
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 11, !dbg !14674
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14675
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !14676
  %rlock.i = bitcast %union.anon.0* %5 to %struct.raw_spinlock*, !dbg !14676
  br label %do.end15, !dbg !14674

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !14672

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !14663

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14662

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !14657

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14677
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14678
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 8, !dbg !14679
  %8 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !14679
  %status20 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %8, i32 0, i32 1, !dbg !14680
  %call21 = call i32 @ehci_readl(%struct.ehci_hcd* %6, i32* %status20) #11, !dbg !14681
  store i32 %call21, i32* %status, align 4, !dbg !14682
  %9 = load i32, i32* %status, align 4, !dbg !14683
  %cmp22 = icmp eq i32 %9, -1, !dbg !14685
  br i1 %cmp22, label %if.then, label %if.end, !dbg !14686

if.then:                                          ; preds = %do.end19
  br label %dead, !dbg !14687

if.end:                                           ; preds = %do.end19
  %10 = load i32, i32* %status, align 4, !dbg !14689
  %and = and i32 %10, 63, !dbg !14690
  store i32 %and, i32* %masked_status, align 4, !dbg !14691
  %11 = load i32, i32* %masked_status, align 4, !dbg !14692
  %tobool = icmp ne i32 %11, 0, !dbg !14692
  br i1 %tobool, label %lor.lhs.false, label %if.then29, !dbg !14693

lor.lhs.false:                                    ; preds = %if.end
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14694
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 12, !dbg !14694
  %13 = load i32, i32* %rh_state, align 4, !dbg !14694
  %cmp24 = icmp eq i32 %13, 0, !dbg !14694
  %lnot = xor i1 %cmp24, true, !dbg !14694
  %lnot26 = xor i1 %lnot, true, !dbg !14694
  %lnot.ext = zext i1 %lnot26 to i32, !dbg !14694
  %conv27 = sext i32 %lnot.ext to i64, !dbg !14694
  %tobool28 = icmp ne i64 %conv27, 0, !dbg !14694
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !14695

if.then29:                                        ; preds = %lor.lhs.false, %if.end
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14696
  %lock30 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 11, !dbg !14697
  %15 = load i64, i64* %flags, align 8, !dbg !14698
  store %struct.spinlock* %lock30, %struct.spinlock** %lock.addr.i169, align 8
  store i64 %15, i64* %flags.addr.i170, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !14699
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !14699
  store i32 1, i32* %tmp.i171, align 4, !dbg !14699
  %16 = load i32, i32* %tmp.i171, align 4, !dbg !14699
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !14700
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !14700
  store i32 1, i32* %tmp8.i172, align 4, !dbg !14700
  %17 = load i32, i32* %tmp8.i172, align 4, !dbg !14700
  %18 = load i64, i64* %flags.addr.i170, align 8, !dbg !14701
  call void @arch_local_irq_restore(i64 %18) #12, !dbg !14701
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14702, !srcloc !6997
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i169, align 8, !dbg !14703
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !14703
  %rlock.i173 = bitcast %union.anon.0* %20 to %struct.raw_spinlock*, !dbg !14703
  store i32 0, i32* %retval, align 4, !dbg !14704
  br label %return, !dbg !14704

if.end31:                                         ; preds = %lor.lhs.false
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14705
  %22 = load i32, i32* %masked_status, align 4, !dbg !14706
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14707
  %regs32 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %23, i32 0, i32 8, !dbg !14708
  %24 = load %struct.ehci_regs*, %struct.ehci_regs** %regs32, align 8, !dbg !14708
  %status33 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %24, i32 0, i32 1, !dbg !14709
  call void @ehci_writel(%struct.ehci_hcd* %21, i32 %22, i32* %status33) #11, !dbg !14710
  %25 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14711
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14712
  %regs34 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %26, i32 0, i32 8, !dbg !14713
  %27 = load %struct.ehci_regs*, %struct.ehci_regs** %regs34, align 8, !dbg !14713
  %command = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %27, i32 0, i32 0, !dbg !14714
  %call35 = call i32 @ehci_readl(%struct.ehci_hcd* %25, i32* %command) #11, !dbg !14715
  store i32 %call35, i32* %cmd, align 4, !dbg !14716
  store i32 0, i32* %bh, align 4, !dbg !14717
  %28 = load i32, i32* %status, align 4, !dbg !14718
  %and36 = and i32 %28, 3, !dbg !14718
  %cmp37 = icmp ne i32 %and36, 0, !dbg !14718
  %lnot39 = xor i1 %cmp37, true, !dbg !14718
  %lnot41 = xor i1 %lnot39, true, !dbg !14718
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !14718
  %conv43 = sext i32 %lnot.ext42 to i64, !dbg !14718
  %tobool44 = icmp ne i64 %conv43, 0, !dbg !14718
  br i1 %tobool44, label %if.then45, label %if.end61, !dbg !14720

if.then45:                                        ; preds = %if.end31
  %29 = load i32, i32* %status, align 4, !dbg !14721
  %and46 = and i32 %29, 2, !dbg !14721
  %cmp47 = icmp eq i32 %and46, 0, !dbg !14721
  %lnot49 = xor i1 %cmp47, true, !dbg !14721
  %lnot51 = xor i1 %lnot49, true, !dbg !14721
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !14721
  %conv53 = sext i32 %lnot.ext52 to i64, !dbg !14721
  %tobool54 = icmp ne i64 %conv53, 0, !dbg !14721
  br i1 %tobool54, label %if.then55, label %if.else, !dbg !14724

if.then55:                                        ; preds = %if.then45
  br label %do.body56, !dbg !14725

do.body56:                                        ; preds = %if.then55
  br label %do.end57, !dbg !14726

do.end57:                                         ; preds = %do.body56
  br label %if.end60, !dbg !14726

if.else:                                          ; preds = %if.then45
  br label %do.body58, !dbg !14728

do.body58:                                        ; preds = %if.else
  br label %do.end59, !dbg !14729

do.end59:                                         ; preds = %do.body58
  br label %if.end60

if.end60:                                         ; preds = %do.end59, %do.end57
  store i32 1, i32* %bh, align 4, !dbg !14731
  br label %if.end61, !dbg !14732

if.end61:                                         ; preds = %if.end60, %if.end31
  %30 = load i32, i32* %status, align 4, !dbg !14733
  %and62 = and i32 %30, 32, !dbg !14735
  %tobool63 = icmp ne i32 %and62, 0, !dbg !14735
  br i1 %tobool63, label %if.then64, label %if.end81, !dbg !14736

if.then64:                                        ; preds = %if.end61
  %31 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14737
  %enabled_hrtimer_events = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %31, i32 0, i32 1, !dbg !14739
  %32 = load i32, i32* %enabled_hrtimer_events, align 4, !dbg !14740
  %conv65 = zext i32 %32 to i64, !dbg !14740
  %and66 = and i64 %conv65, -257, !dbg !14740
  %conv67 = trunc i64 %and66 to i32, !dbg !14740
  store i32 %conv67, i32* %enabled_hrtimer_events, align 4, !dbg !14740
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14741
  %next_hrtimer_event = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %33, i32 0, i32 0, !dbg !14743
  %34 = load i32, i32* %next_hrtimer_event, align 8, !dbg !14743
  %cmp68 = icmp eq i32 %34, 8, !dbg !14744
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !14745

if.then70:                                        ; preds = %if.then64
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14746
  %next_hrtimer_event71 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %35, i32 0, i32 0, !dbg !14747
  %36 = load i32, i32* %next_hrtimer_event71, align 8, !dbg !14748
  %inc = add i32 %36, 1, !dbg !14748
  store i32 %inc, i32* %next_hrtimer_event71, align 8, !dbg !14748
  br label %if.end72, !dbg !14748

if.end72:                                         ; preds = %if.then70, %if.then64
  %37 = load i32, i32* %cmd, align 4, !dbg !14749
  %and73 = and i32 %37, 64, !dbg !14751
  %tobool74 = icmp ne i32 %and73, 0, !dbg !14751
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !14752

if.then75:                                        ; preds = %if.end72
  br label %if.end76, !dbg !14753

if.end76:                                         ; preds = %if.then75, %if.end72
  %38 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14754
  %iaa_in_progress = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %38, i32 0, i32 13, !dbg !14756
  %bf.load = load i8, i8* %iaa_in_progress, align 8, !dbg !14756
  %bf.lshr = lshr i8 %bf.load, 3, !dbg !14756
  %bf.clear = and i8 %bf.lshr, 1, !dbg !14756
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !14756
  br i1 %bf.cast, label %if.then77, label %if.end80, !dbg !14757

if.then77:                                        ; preds = %if.end76
  br label %do.body78, !dbg !14758

do.body78:                                        ; preds = %if.then77
  br label %do.end79, !dbg !14759

do.end79:                                         ; preds = %do.body78
  br label %if.end80, !dbg !14759

if.end80:                                         ; preds = %do.end79, %if.end76
  %39 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14761
  call void @end_iaa_cycle(%struct.ehci_hcd* %39) #11, !dbg !14762
  br label %if.end81, !dbg !14763

if.end81:                                         ; preds = %if.end80, %if.end61
  %40 = load i32, i32* %status, align 4, !dbg !14764
  %and82 = and i32 %40, 4, !dbg !14765
  %tobool83 = icmp ne i32 %and82, 0, !dbg !14765
  br i1 %tobool83, label %if.then84, label %if.end137, !dbg !14766

if.then84:                                        ; preds = %if.end81
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14767, metadata !DIExpression()), !dbg !14768
  %41 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14769
  %hcs_params = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %41, i32 0, i32 10, !dbg !14769
  %42 = load i32, i32* %hcs_params, align 8, !dbg !14769
  %shr = lshr i32 %42, 0, !dbg !14769
  %and85 = and i32 %shr, 15, !dbg !14769
  store i32 %and85, i32* %i, align 4, !dbg !14768
  call void @llvm.dbg.declare(metadata i32* %ppcd, metadata !14770, metadata !DIExpression()), !dbg !14771
  store i32 -1, i32* %ppcd, align 4, !dbg !14771
  %43 = load i32, i32* %status, align 4, !dbg !14772
  store i32 %43, i32* %pcd_status, align 4, !dbg !14773
  %44 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14774
  %rh_state86 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %44, i32 0, i32 12, !dbg !14776
  %45 = load i32, i32* %rh_state86, align 4, !dbg !14776
  %cmp87 = icmp eq i32 %45, 1, !dbg !14777
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !14778

if.then89:                                        ; preds = %if.then84
  %46 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !14779
  call void @usb_hcd_resume_root_hub(%struct.usb_hcd* %46) #11, !dbg !14780
  br label %if.end90, !dbg !14780

if.end90:                                         ; preds = %if.then89, %if.then84
  %47 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14781
  %has_ppcd = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %47, i32 0, i32 60, !dbg !14783
  %bf.load91 = load i8, i8* %has_ppcd, align 8, !dbg !14783
  %bf.lshr92 = lshr i8 %bf.load91, 2, !dbg !14783
  %bf.clear93 = and i8 %bf.lshr92, 1, !dbg !14783
  %bf.cast94 = zext i8 %bf.clear93 to i32, !dbg !14783
  %tobool95 = icmp ne i32 %bf.cast94, 0, !dbg !14781
  br i1 %tobool95, label %if.then96, label %if.end98, !dbg !14784

if.then96:                                        ; preds = %if.end90
  %48 = load i32, i32* %status, align 4, !dbg !14785
  %shr97 = lshr i32 %48, 16, !dbg !14786
  store i32 %shr97, i32* %ppcd, align 4, !dbg !14787
  br label %if.end98, !dbg !14788

if.end98:                                         ; preds = %if.then96, %if.end90
  br label %while.cond, !dbg !14789

while.cond:                                       ; preds = %msecs_to_jiffies.exit, %if.then126, %if.then108, %if.then102, %if.end98
  %49 = load i32, i32* %i, align 4, !dbg !14790
  %dec = add i32 %49, -1, !dbg !14790
  store i32 %dec, i32* %i, align 4, !dbg !14790
  %tobool99 = icmp ne i32 %49, 0, !dbg !14789
  br i1 %tobool99, label %while.body, label %while.end, !dbg !14789

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %pstatus, metadata !14791, metadata !DIExpression()), !dbg !14792
  %50 = load i32, i32* %ppcd, align 4, !dbg !14793
  %51 = load i32, i32* %i, align 4, !dbg !14795
  %shl = shl i32 1, %51, !dbg !14796
  %and100 = and i32 %50, %shl, !dbg !14797
  %tobool101 = icmp ne i32 %and100, 0, !dbg !14797
  br i1 %tobool101, label %if.end103, label %if.then102, !dbg !14798

if.then102:                                       ; preds = %while.body
  br label %while.cond, !dbg !14799, !llvm.loop !14800

if.end103:                                        ; preds = %while.body
  %52 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14802
  %53 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14803
  %regs104 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %53, i32 0, i32 8, !dbg !14804
  %54 = load %struct.ehci_regs*, %struct.ehci_regs** %regs104, align 8, !dbg !14804
  %port_status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %54, i32 0, i32 11, !dbg !14805
  %55 = load i32, i32* %i, align 4, !dbg !14806
  %idxprom = zext i32 %55 to i64, !dbg !14803
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %port_status, i64 0, i64 %idxprom, !dbg !14803
  %call105 = call i32 @ehci_readl(%struct.ehci_hcd* %52, i32* %arrayidx) #11, !dbg !14807
  store i32 %call105, i32* %pstatus, align 4, !dbg !14808
  %56 = load i32, i32* %pstatus, align 4, !dbg !14809
  %and106 = and i32 %56, 8192, !dbg !14811
  %tobool107 = icmp ne i32 %and106, 0, !dbg !14811
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !14812

if.then108:                                       ; preds = %if.end103
  br label %while.cond, !dbg !14813, !llvm.loop !14800

if.end109:                                        ; preds = %if.end103
  %57 = load i32, i32* %i, align 4, !dbg !14814
  %conv110 = zext i32 %57 to i64, !dbg !14814
  %58 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14816
  %suspended_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %58, i32 0, i32 48, !dbg !14817
  %call111 = call zeroext i1 @test_bit(i64 %conv110, i64* %suspended_ports) #11, !dbg !14818
  br i1 %call111, label %land.lhs.true, label %if.then126, !dbg !14819

land.lhs.true:                                    ; preds = %if.end109
  %59 = load i32, i32* %pstatus, align 4, !dbg !14820
  %and113 = and i32 %59, 64, !dbg !14821
  %tobool114 = icmp ne i32 %and113, 0, !dbg !14821
  br i1 %tobool114, label %land.lhs.true118, label %lor.lhs.false115, !dbg !14822

lor.lhs.false115:                                 ; preds = %land.lhs.true
  %60 = load i32, i32* %pstatus, align 4, !dbg !14823
  %and116 = and i32 %60, 128, !dbg !14824
  %tobool117 = icmp ne i32 %and116, 0, !dbg !14824
  br i1 %tobool117, label %if.then126, label %land.lhs.true118, !dbg !14825

land.lhs.true118:                                 ; preds = %lor.lhs.false115, %land.lhs.true
  %61 = load i32, i32* %pstatus, align 4, !dbg !14826
  %and119 = and i32 %61, 4, !dbg !14827
  %tobool120 = icmp ne i32 %and119, 0, !dbg !14827
  br i1 %tobool120, label %land.lhs.true121, label %if.then126, !dbg !14828

land.lhs.true121:                                 ; preds = %land.lhs.true118
  %62 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14829
  %reset_done = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %62, i32 0, i32 43, !dbg !14830
  %63 = load i32, i32* %i, align 4, !dbg !14831
  %idxprom122 = zext i32 %63 to i64, !dbg !14829
  %arrayidx123 = getelementptr [15 x i64], [15 x i64]* %reset_done, i64 0, i64 %idxprom122, !dbg !14829
  %64 = load i64, i64* %arrayidx123, align 8, !dbg !14829
  %cmp124 = icmp eq i64 %64, 0, !dbg !14832
  br i1 %cmp124, label %if.end127, label %if.then126, !dbg !14833

if.then126:                                       ; preds = %land.lhs.true121, %land.lhs.true118, %lor.lhs.false115, %if.end109
  br label %while.cond, !dbg !14834, !llvm.loop !14800

if.end127:                                        ; preds = %land.lhs.true121
  %65 = load volatile i64, i64* @jiffies, align 8, !dbg !14835
  store i32 40, i32* %m.addr.i, align 4
  %66 = load i32, i32* %m.addr.i, align 4, !dbg !14836
  %67 = call i1 @llvm.is.constant.i32(i32 %66) #7, !dbg !14837
  br i1 %67, label %if.then.i, label %if.else.i, !dbg !14838

if.then.i:                                        ; preds = %if.end127
  %68 = load i32, i32* %m.addr.i, align 4, !dbg !14839
  %cmp.i = icmp slt i32 %68, 0, !dbg !14840
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14841

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !14842
  br label %msecs_to_jiffies.exit, !dbg !14842

if.end.i:                                         ; preds = %if.then.i
  %69 = load i32, i32* %m.addr.i, align 4, !dbg !14843
  %call.i = call i64 @_msecs_to_jiffies(i32 %69) #12, !dbg !14844
  store i64 %call.i, i64* %retval.i, align 8, !dbg !14845
  br label %msecs_to_jiffies.exit, !dbg !14845

if.else.i:                                        ; preds = %if.end127
  %70 = load i32, i32* %m.addr.i, align 4, !dbg !14846
  %call2.i = call i64 @__msecs_to_jiffies(i32 %70) #12, !dbg !14847
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !14848
  br label %msecs_to_jiffies.exit, !dbg !14848

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %71 = load i64, i64* %retval.i, align 8, !dbg !14849
  %add = add i64 %65, %71, !dbg !14850
  %72 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14851
  %reset_done129 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %72, i32 0, i32 43, !dbg !14852
  %73 = load i32, i32* %i, align 4, !dbg !14853
  %idxprom130 = zext i32 %73 to i64, !dbg !14851
  %arrayidx131 = getelementptr [15 x i64], [15 x i64]* %reset_done129, i64 0, i64 %idxprom130, !dbg !14851
  store i64 %add, i64* %arrayidx131, align 8, !dbg !14854
  %74 = load i32, i32* %i, align 4, !dbg !14855
  %conv132 = zext i32 %74 to i64, !dbg !14855
  %75 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14856
  %resuming_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %75, i32 0, i32 49, !dbg !14857
  call void @set_bit(i64 %conv132, i64* %resuming_ports) #11, !dbg !14858
  %76 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !14859
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %76, i32 0, i32 0, !dbg !14860
  %77 = load i32, i32* %i, align 4, !dbg !14861
  call void @usb_hcd_start_port_resume(%struct.usb_bus* %self, i32 %77) #11, !dbg !14862
  %78 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !14863
  %rh_timer = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %78, i32 0, i32 5, !dbg !14864
  %79 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14865
  %reset_done133 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %79, i32 0, i32 43, !dbg !14866
  %80 = load i32, i32* %i, align 4, !dbg !14867
  %idxprom134 = zext i32 %80 to i64, !dbg !14865
  %arrayidx135 = getelementptr [15 x i64], [15 x i64]* %reset_done133, i64 0, i64 %idxprom134, !dbg !14865
  %81 = load i64, i64* %arrayidx135, align 8, !dbg !14865
  %call136 = call i32 @mod_timer(%struct.timer_list* %rh_timer, i64 %81) #11, !dbg !14868
  br label %while.cond, !dbg !14789, !llvm.loop !14800

while.end:                                        ; preds = %while.cond
  br label %if.end137, !dbg !14869

if.end137:                                        ; preds = %while.end, %if.end81
  %82 = load i32, i32* %status, align 4, !dbg !14870
  %and138 = and i32 %82, 16, !dbg !14870
  %cmp139 = icmp ne i32 %and138, 0, !dbg !14870
  %lnot141 = xor i1 %cmp139, true, !dbg !14870
  %lnot143 = xor i1 %lnot141, true, !dbg !14870
  %lnot.ext144 = zext i1 %lnot143 to i32, !dbg !14870
  %conv145 = sext i32 %lnot.ext144 to i64, !dbg !14870
  %tobool146 = icmp ne i64 %conv145, 0, !dbg !14870
  br i1 %tobool146, label %if.then147, label %if.end159, !dbg !14872

if.then147:                                       ; preds = %if.end137
  %83 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14873
  %call148 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %83) #11, !dbg !14873
  %self149 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call148, i32 0, i32 0, !dbg !14873
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self149, i32 0, i32 0, !dbg !14873
  %84 = load %struct.device*, %struct.device** %controller, align 8, !dbg !14873
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %84, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0)) #13, !dbg !14873
  %85 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14875
  %86 = load i32, i32* %cmd, align 4, !dbg !14876
  call void @dbg_cmd(%struct.ehci_hcd* %85, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i32 %86) #11, !dbg !14877
  %87 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14878
  %88 = load i32, i32* %status, align 4, !dbg !14879
  call void @dbg_status(%struct.ehci_hcd* %87, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i32 %88) #11, !dbg !14880
  br label %dead, !dbg !14880

dead:                                             ; preds = %if.then147, %if.then
  call void @llvm.dbg.label(metadata !14881), !dbg !14882
  %89 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !14883
  call void @usb_hc_died(%struct.usb_hcd* %89) #11, !dbg !14884
  %90 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14885
  %shutdown = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %90, i32 0, i32 13, !dbg !14886
  %bf.load150 = load i8, i8* %shutdown, align 8, !dbg !14887
  %bf.clear151 = and i8 %bf.load150, -33, !dbg !14887
  %bf.set = or i8 %bf.clear151, 32, !dbg !14887
  store i8 %bf.set, i8* %shutdown, align 8, !dbg !14887
  %91 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14888
  %rh_state152 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %91, i32 0, i32 12, !dbg !14889
  store i32 3, i32* %rh_state152, align 4, !dbg !14890
  %92 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14891
  %command153 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %92, i32 0, i32 57, !dbg !14892
  %93 = load i32, i32* %command153, align 8, !dbg !14893
  %and154 = and i32 %93, -50, !dbg !14893
  store i32 %and154, i32* %command153, align 8, !dbg !14893
  %94 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14894
  %95 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14895
  %command155 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %95, i32 0, i32 57, !dbg !14896
  %96 = load i32, i32* %command155, align 8, !dbg !14896
  %97 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14897
  %regs156 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %97, i32 0, i32 8, !dbg !14898
  %98 = load %struct.ehci_regs*, %struct.ehci_regs** %regs156, align 8, !dbg !14898
  %command157 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %98, i32 0, i32 0, !dbg !14899
  call void @ehci_writel(%struct.ehci_hcd* %94, i32 %96, i32* %command157) #11, !dbg !14900
  %99 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14901
  %100 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14902
  %regs158 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %100, i32 0, i32 8, !dbg !14903
  %101 = load %struct.ehci_regs*, %struct.ehci_regs** %regs158, align 8, !dbg !14903
  %intr_enable = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %101, i32 0, i32 2, !dbg !14904
  call void @ehci_writel(%struct.ehci_hcd* %99, i32 0, i32* %intr_enable) #11, !dbg !14905
  %102 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14906
  call void @ehci_handle_controller_death(%struct.ehci_hcd* %102) #11, !dbg !14907
  store i32 0, i32* %bh, align 4, !dbg !14908
  br label %if.end159, !dbg !14909

if.end159:                                        ; preds = %dead, %if.end137
  %103 = load i32, i32* %bh, align 4, !dbg !14910
  %tobool160 = icmp ne i32 %103, 0, !dbg !14910
  br i1 %tobool160, label %if.then161, label %if.end162, !dbg !14912

if.then161:                                       ; preds = %if.end159
  %104 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14913
  call void @ehci_work(%struct.ehci_hcd* %104) #11, !dbg !14914
  br label %if.end162, !dbg !14914

if.end162:                                        ; preds = %if.then161, %if.end159
  %105 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14915
  %lock163 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %105, i32 0, i32 11, !dbg !14916
  %106 = load i64, i64* %flags, align 8, !dbg !14917
  store %struct.spinlock* %lock163, %struct.spinlock** %lock.addr.i167, align 8
  store i64 %106, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !14918
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !14918
  store i32 1, i32* %tmp.i, align 4, !dbg !14918
  %107 = load i32, i32* %tmp.i, align 4, !dbg !14918
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !14919
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !14919
  store i32 1, i32* %tmp8.i, align 4, !dbg !14919
  %108 = load i32, i32* %tmp8.i, align 4, !dbg !14919
  %109 = load i64, i64* %flags.addr.i, align 8, !dbg !14920
  call void @arch_local_irq_restore(i64 %109) #12, !dbg !14920
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14921, !srcloc !6997
  %110 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i167, align 8, !dbg !14922
  %111 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %110, i32 0, i32 0, !dbg !14922
  %rlock.i168 = bitcast %union.anon.0* %111 to %struct.raw_spinlock*, !dbg !14922
  %112 = load i32, i32* %pcd_status, align 4, !dbg !14923
  %tobool164 = icmp ne i32 %112, 0, !dbg !14923
  br i1 %tobool164, label %if.then165, label %if.end166, !dbg !14925

if.then165:                                       ; preds = %if.end162
  %113 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !14926
  call void @usb_hcd_poll_rh_status(%struct.usb_hcd* %113) #11, !dbg !14927
  br label %if.end166, !dbg !14927

if.end166:                                        ; preds = %if.then165, %if.end162
  store i32 1, i32* %retval, align 4, !dbg !14928
  br label %return, !dbg !14928

return:                                           ; preds = %if.end166, %if.then29
  %114 = load i32, i32* %retval, align 4, !dbg !14929
  ret i32 %114, !dbg !14929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_run(%struct.usb_hcd* %hcd) #0 !dbg !14930 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %temp = alloca i32, align 4
  %hcc_params = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !14931, metadata !DIExpression()), !dbg !14932
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !14933, metadata !DIExpression()), !dbg !14934
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !14935
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !14936
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !14934
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !14937, metadata !DIExpression()), !dbg !14938
  call void @llvm.dbg.declare(metadata i32* %hcc_params, metadata !14939, metadata !DIExpression()), !dbg !14940
  %1 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !14941
  %uses_new_polling = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %1, i32 0, i32 14, !dbg !14942
  %bf.load = load i16, i16* %uses_new_polling, align 4, !dbg !14943
  %bf.clear = and i16 %bf.load, -33, !dbg !14943
  %bf.set = or i16 %bf.clear, 32, !dbg !14943
  store i16 %bf.set, i16* %uses_new_polling, align 4, !dbg !14943
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14944
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14945
  %periodic_dma = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 25, !dbg !14946
  %4 = load i64, i64* %periodic_dma, align 8, !dbg !14946
  %conv = trunc i64 %4 to i32, !dbg !14945
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14947
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 8, !dbg !14948
  %6 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !14948
  %frame_list = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %6, i32 0, i32 5, !dbg !14949
  call void @ehci_writel(%struct.ehci_hcd* %2, i32 %conv, i32* %frame_list) #11, !dbg !14950
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14951
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14952
  %async = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 15, !dbg !14953
  %9 = load %struct.ehci_qh*, %struct.ehci_qh** %async, align 8, !dbg !14953
  %qh_dma = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %9, i32 0, i32 1, !dbg !14954
  %10 = load i64, i64* %qh_dma, align 8, !dbg !14954
  %conv1 = trunc i64 %10 to i32, !dbg !14955
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14956
  %regs2 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %11, i32 0, i32 8, !dbg !14957
  %12 = load %struct.ehci_regs*, %struct.ehci_regs** %regs2, align 8, !dbg !14957
  %async_next = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %12, i32 0, i32 6, !dbg !14958
  call void @ehci_writel(%struct.ehci_hcd* %7, i32 %conv1, i32* %async_next) #11, !dbg !14959
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14960
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14961
  %caps = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 7, !dbg !14962
  %15 = load %struct.ehci_caps*, %struct.ehci_caps** %caps, align 8, !dbg !14962
  %hcc_params3 = getelementptr inbounds %struct.ehci_caps, %struct.ehci_caps* %15, i32 0, i32 2, !dbg !14963
  %call4 = call i32 @ehci_readl(%struct.ehci_hcd* %13, i32* %hcc_params3) #11, !dbg !14964
  store i32 %call4, i32* %hcc_params, align 4, !dbg !14965
  %16 = load i32, i32* %hcc_params, align 4, !dbg !14966
  %and = and i32 %16, 1, !dbg !14966
  %tobool = icmp ne i32 %and, 0, !dbg !14966
  br i1 %tobool, label %if.then, label %if.end, !dbg !14968

if.then:                                          ; preds = %entry
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14969
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14971
  %regs5 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %18, i32 0, i32 8, !dbg !14972
  %19 = load %struct.ehci_regs*, %struct.ehci_regs** %regs5, align 8, !dbg !14972
  %segment = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %19, i32 0, i32 4, !dbg !14973
  call void @ehci_writel(%struct.ehci_hcd* %17, i32 0, i32* %segment) #11, !dbg !14974
  br label %if.end, !dbg !14975

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14976
  %command = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %20, i32 0, i32 57, !dbg !14977
  %21 = load i32, i32* %command, align 8, !dbg !14978
  %and6 = and i32 %21, -243, !dbg !14978
  store i32 %and6, i32* %command, align 8, !dbg !14978
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14979
  %command7 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %22, i32 0, i32 57, !dbg !14980
  %23 = load i32, i32* %command7, align 8, !dbg !14981
  %or = or i32 %23, 1, !dbg !14981
  store i32 %or, i32* %command7, align 8, !dbg !14981
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14982
  %25 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14983
  %command8 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %25, i32 0, i32 57, !dbg !14984
  %26 = load i32, i32* %command8, align 8, !dbg !14984
  %27 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14985
  %regs9 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %27, i32 0, i32 8, !dbg !14986
  %28 = load %struct.ehci_regs*, %struct.ehci_regs** %regs9, align 8, !dbg !14986
  %command10 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %28, i32 0, i32 0, !dbg !14987
  call void @ehci_writel(%struct.ehci_hcd* %24, i32 %26, i32* %command10) #11, !dbg !14988
  %29 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14989
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14990
  %command11 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %30, i32 0, i32 57, !dbg !14991
  %31 = load i32, i32* %command11, align 8, !dbg !14991
  call void @dbg_cmd(%struct.ehci_hcd* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0), i32 %31) #11, !dbg !14992
  call void @down_write(%struct.rw_semaphore* @ehci_cf_port_reset_rwsem) #11, !dbg !14993
  %32 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14994
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %32, i32 0, i32 12, !dbg !14995
  store i32 2, i32* %rh_state, align 4, !dbg !14996
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14997
  %34 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !14998
  %regs12 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %34, i32 0, i32 8, !dbg !14999
  %35 = load %struct.ehci_regs*, %struct.ehci_regs** %regs12, align 8, !dbg !14999
  %configured_flag = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %35, i32 0, i32 10, !dbg !15000
  call void @ehci_writel(%struct.ehci_hcd* %33, i32 1, i32* %configured_flag) #11, !dbg !15001
  %36 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15002
  %37 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15003
  %regs13 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %37, i32 0, i32 8, !dbg !15004
  %38 = load %struct.ehci_regs*, %struct.ehci_regs** %regs13, align 8, !dbg !15004
  %command14 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %38, i32 0, i32 0, !dbg !15005
  %call15 = call i32 @ehci_readl(%struct.ehci_hcd* %36, i32* %command14) #11, !dbg !15006
  call void @msleep(i32 5) #11, !dbg !15007
  call void @up_write(%struct.rw_semaphore* @ehci_cf_port_reset_rwsem) #11, !dbg !15008
  %call16 = call i64 @ktime_get_real() #11, !dbg !15009
  %39 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15010
  %last_periodic_enable = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %39, i32 0, i32 56, !dbg !15011
  store i64 %call16, i64* %last_periodic_enable, align 8, !dbg !15012
  %40 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15013
  %41 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15013
  %caps17 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %41, i32 0, i32 7, !dbg !15013
  %42 = load %struct.ehci_caps*, %struct.ehci_caps** %caps17, align 8, !dbg !15013
  %hc_capbase = getelementptr inbounds %struct.ehci_caps, %struct.ehci_caps* %42, i32 0, i32 0, !dbg !15013
  %call18 = call i32 @ehci_readl(%struct.ehci_hcd* %40, i32* %hc_capbase) #11, !dbg !15013
  %shr = lshr i32 %call18, 16, !dbg !15013
  %and19 = and i32 65535, %shr, !dbg !15013
  store i32 %and19, i32* %temp, align 4, !dbg !15014
  %43 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15015
  %call20 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %43) #11, !dbg !15015
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call20, i32 0, i32 0, !dbg !15015
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !15015
  %44 = load %struct.device*, %struct.device** %controller, align 8, !dbg !15015
  %45 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15015
  %sbrn = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %45, i32 0, i32 61, !dbg !15015
  %46 = load i8, i8* %sbrn, align 1, !dbg !15015
  %conv21 = zext i8 %46 to i32, !dbg !15015
  %and22 = and i32 %conv21, 240, !dbg !15015
  %shr23 = ashr i32 %and22, 4, !dbg !15015
  %47 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15015
  %sbrn24 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %47, i32 0, i32 61, !dbg !15015
  %48 = load i8, i8* %sbrn24, align 1, !dbg !15015
  %conv25 = zext i8 %48 to i32, !dbg !15015
  %and26 = and i32 %conv25, 15, !dbg !15015
  %49 = load i32, i32* %temp, align 4, !dbg !15015
  %shr27 = lshr i32 %49, 8, !dbg !15015
  %50 = load i32, i32* %temp, align 4, !dbg !15015
  %and28 = and i32 %50, 255, !dbg !15015
  %51 = load i8, i8* @ignore_oc, align 1, !dbg !15015
  %tobool29 = trunc i8 %51 to i1, !dbg !15015
  %52 = zext i1 %tobool29 to i64, !dbg !15015
  %cond = select i1 %tobool29, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.22, i64 0, i64 0), !dbg !15015
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %44, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i64 0, i64 0), i32 %shr23, i32 %and26, i32 %shr27, i32 %and28, i8* %cond) #13, !dbg !15015
  %53 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15016
  %54 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15017
  %regs31 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %54, i32 0, i32 8, !dbg !15018
  %55 = load %struct.ehci_regs*, %struct.ehci_regs** %regs31, align 8, !dbg !15018
  %intr_enable = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %55, i32 0, i32 2, !dbg !15019
  call void @ehci_writel(%struct.ehci_hcd* %53, i32 55, i32* %intr_enable) #11, !dbg !15020
  %56 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15021
  call void @create_debug_files(%struct.ehci_hcd* %56) #11, !dbg !15022
  %57 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15023
  %call32 = call i32 @create_sysfs_files(%struct.ehci_hcd* %57) #11, !dbg !15024
  ret i32 0, !dbg !15025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_stop(%struct.usb_hcd* %hcd) #0 !dbg !15026 {
entry:
  %lock.addr.i11 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i11, metadata !6492, metadata !DIExpression()), !dbg !15027
  %lock.addr.i9 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i9, metadata !6499, metadata !DIExpression()), !dbg !15029
  %lock.addr.i7 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i7, metadata !6492, metadata !DIExpression()), !dbg !15031
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6499, metadata !DIExpression()), !dbg !15033
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !15035, metadata !DIExpression()), !dbg !15036
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !15037, metadata !DIExpression()), !dbg !15038
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !15039
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !15040
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !15038
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15041
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 11, !dbg !15042
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !15043
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15044, !srcloc !6536
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15045
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !15045
  %rlock.i = bitcast %union.anon.0* %3 to %struct.raw_spinlock*, !dbg !15045
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15046
  %enabled_hrtimer_events = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 1, !dbg !15047
  store i32 0, i32* %enabled_hrtimer_events, align 4, !dbg !15048
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15049
  %lock1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 11, !dbg !15050
  store %struct.spinlock* %lock1, %struct.spinlock** %lock.addr.i7, align 8
  call void @arch_local_irq_enable() #12, !dbg !15051
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15052, !srcloc !6571
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i7, align 8, !dbg !15053
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !15053
  %rlock.i8 = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !15053
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15054
  call void @ehci_quiesce(%struct.ehci_hcd* %8) #11, !dbg !15055
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15056
  call void @ehci_silence_controller(%struct.ehci_hcd* %9) #11, !dbg !15057
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15058
  %call2 = call i32 @ehci_reset(%struct.ehci_hcd* %10) #11, !dbg !15059
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15060
  %hrtimer = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %11, i32 0, i32 3, !dbg !15061
  %call3 = call i32 @hrtimer_cancel(%struct.hrtimer* %hrtimer) #11, !dbg !15062
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15063
  call void @remove_sysfs_files(%struct.ehci_hcd* %12) #11, !dbg !15064
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15065
  call void @remove_debug_files(%struct.ehci_hcd* %13) #11, !dbg !15066
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15067
  %lock4 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 11, !dbg !15068
  store %struct.spinlock* %lock4, %struct.spinlock** %lock.addr.i9, align 8
  call void @arch_local_irq_disable() #12, !dbg !15069
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15070, !srcloc !6536
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i9, align 8, !dbg !15071
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !15071
  %rlock.i10 = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !15071
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15072
  call void @end_free_itds(%struct.ehci_hcd* %17) #11, !dbg !15073
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15074
  %lock5 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %18, i32 0, i32 11, !dbg !15075
  store %struct.spinlock* %lock5, %struct.spinlock** %lock.addr.i11, align 8
  call void @arch_local_irq_enable() #12, !dbg !15076
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15077, !srcloc !6571
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i11, align 8, !dbg !15078
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !15078
  %rlock.i12 = bitcast %union.anon.0* %20 to %struct.raw_spinlock*, !dbg !15078
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15079
  call void @ehci_mem_cleanup(%struct.ehci_hcd* %21) #11, !dbg !15080
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15081
  %amd_pll_fix = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %22, i32 0, i32 58, !dbg !15083
  %bf.load = load i16, i16* %amd_pll_fix, align 4, !dbg !15083
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !15083
  %bf.clear = and i16 %bf.lshr, 1, !dbg !15083
  %bf.cast = zext i16 %bf.clear to i32, !dbg !15083
  %cmp = icmp eq i32 %bf.cast, 1, !dbg !15084
  br i1 %cmp, label %if.then, label %if.end, !dbg !15085

if.then:                                          ; preds = %entry
  call void @usb_amd_dev_put() #11, !dbg !15086
  br label %if.end, !dbg !15086

if.end:                                           ; preds = %if.then, %entry
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15087
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15088
  %25 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15089
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %25, i32 0, i32 8, !dbg !15090
  %26 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !15090
  %status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %26, i32 0, i32 1, !dbg !15091
  %call6 = call i32 @ehci_readl(%struct.ehci_hcd* %24, i32* %status) #11, !dbg !15092
  call void @dbg_status(%struct.ehci_hcd* %23, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.31, i64 0, i64 0), i32 %call6) #11, !dbg !15093
  ret void, !dbg !15094
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_shutdown(%struct.usb_hcd* %hcd) #0 !dbg !15095 {
entry:
  %lock.addr.i3 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i3, metadata !6492, metadata !DIExpression()), !dbg !15096
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6499, metadata !DIExpression()), !dbg !15098
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !15100, metadata !DIExpression()), !dbg !15101
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !15102, metadata !DIExpression()), !dbg !15103
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !15104
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !15105
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !15103
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15106
  %sbrn = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 61, !dbg !15108
  %2 = load i8, i8* %sbrn, align 1, !dbg !15108
  %tobool = icmp ne i8 %2, 0, !dbg !15106
  br i1 %tobool, label %if.end, label %if.then, !dbg !15109

if.then:                                          ; preds = %entry
  br label %return, !dbg !15110

if.end:                                           ; preds = %entry
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15111
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 11, !dbg !15112
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !15113
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15114, !srcloc !6536
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15115
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !15115
  %rlock.i = bitcast %union.anon.0* %5 to %struct.raw_spinlock*, !dbg !15115
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15116
  %shutdown = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 13, !dbg !15117
  %bf.load = load i8, i8* %shutdown, align 8, !dbg !15118
  %bf.clear = and i8 %bf.load, -33, !dbg !15118
  %bf.set = or i8 %bf.clear, 32, !dbg !15118
  store i8 %bf.set, i8* %shutdown, align 8, !dbg !15118
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15119
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 12, !dbg !15120
  store i32 3, i32* %rh_state, align 4, !dbg !15121
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15122
  %enabled_hrtimer_events = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 1, !dbg !15123
  store i32 0, i32* %enabled_hrtimer_events, align 4, !dbg !15124
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15125
  %lock1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %9, i32 0, i32 11, !dbg !15126
  store %struct.spinlock* %lock1, %struct.spinlock** %lock.addr.i3, align 8
  call void @arch_local_irq_enable() #12, !dbg !15127
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15128, !srcloc !6571
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i3, align 8, !dbg !15129
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !15129
  %rlock.i4 = bitcast %union.anon.0* %11 to %struct.raw_spinlock*, !dbg !15129
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15130
  call void @ehci_silence_controller(%struct.ehci_hcd* %12) #11, !dbg !15131
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15132
  %hrtimer = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %13, i32 0, i32 3, !dbg !15133
  %call2 = call i32 @hrtimer_cancel(%struct.hrtimer* %hrtimer) #11, !dbg !15134
  br label %return, !dbg !15135

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !15135
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_get_frame(%struct.usb_hcd* %hcd) #0 !dbg !15136 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !15137, metadata !DIExpression()), !dbg !15138
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !15139, metadata !DIExpression()), !dbg !15140
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !15141
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !15142
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !15140
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15143
  %call1 = call i32 @ehci_read_frame_index(%struct.ehci_hcd* %1) #11, !dbg !15144
  %shr = lshr i32 %call1, 3, !dbg !15145
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15146
  %periodic_size = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 23, !dbg !15147
  %3 = load i32, i32* %periodic_size, align 8, !dbg !15147
  %rem = urem i32 %shr, %3, !dbg !15148
  ret i32 %rem, !dbg !15149
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_urb_enqueue(%struct.usb_hcd* %hcd, %struct.urb* %urb, i32 %mem_flags) #0 !dbg !15150 {
entry:
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %mem_flags.addr = alloca i32, align 4
  %ehci = alloca %struct.ehci_hcd*, align 8
  %qtd_list = alloca %struct.list_head, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !15151, metadata !DIExpression()), !dbg !15152
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !15153, metadata !DIExpression()), !dbg !15154
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !15155, metadata !DIExpression()), !dbg !15156
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !15157, metadata !DIExpression()), !dbg !15158
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !15159
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !15160
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !15158
  call void @llvm.dbg.declare(metadata %struct.list_head* %qtd_list, metadata !15161, metadata !DIExpression()), !dbg !15162
  call void @INIT_LIST_HEAD(%struct.list_head* %qtd_list) #11, !dbg !15163
  %1 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15164
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %1, i32 0, i32 10, !dbg !15164
  %2 = load i32, i32* %pipe, align 8, !dbg !15164
  %shr = lshr i32 %2, 30, !dbg !15164
  %and = and i32 %shr, 3, !dbg !15164
  switch i32 %and, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb5
    i32 0, label %sw.bb11
  ], !dbg !15165

sw.bb:                                            ; preds = %entry
  %3 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15166
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %3, i32 0, i32 19, !dbg !15169
  %4 = load i32, i32* %transfer_buffer_length, align 8, !dbg !15169
  %cmp = icmp ugt i32 %4, 16384, !dbg !15170
  br i1 %cmp, label %if.then, label %if.end, !dbg !15171

if.then:                                          ; preds = %sw.bb
  store i32 -90, i32* %retval, align 4, !dbg !15172
  br label %return, !dbg !15172

if.end:                                           ; preds = %sw.bb
  br label %sw.default, !dbg !15173

sw.default:                                       ; preds = %entry, %if.end
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15174
  %6 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15176
  %7 = load i32, i32* %mem_flags.addr, align 4, !dbg !15177
  %call1 = call %struct.list_head* @qh_urb_transaction(%struct.ehci_hcd* %5, %struct.urb* %6, %struct.list_head* %qtd_list, i32 %7) #11, !dbg !15178
  %tobool = icmp ne %struct.list_head* %call1, null, !dbg !15178
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !15179

if.then2:                                         ; preds = %sw.default
  store i32 -12, i32* %retval, align 4, !dbg !15180
  br label %return, !dbg !15180

if.end3:                                          ; preds = %sw.default
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15181
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15182
  %10 = load i32, i32* %mem_flags.addr, align 4, !dbg !15183
  %call4 = call i32 @submit_async(%struct.ehci_hcd* %8, %struct.urb* %9, %struct.list_head* %qtd_list, i32 %10) #11, !dbg !15184
  store i32 %call4, i32* %retval, align 4, !dbg !15185
  br label %return, !dbg !15185

sw.bb5:                                           ; preds = %entry
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15186
  %12 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15188
  %13 = load i32, i32* %mem_flags.addr, align 4, !dbg !15189
  %call6 = call %struct.list_head* @qh_urb_transaction(%struct.ehci_hcd* %11, %struct.urb* %12, %struct.list_head* %qtd_list, i32 %13) #11, !dbg !15190
  %tobool7 = icmp ne %struct.list_head* %call6, null, !dbg !15190
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !15191

if.then8:                                         ; preds = %sw.bb5
  store i32 -12, i32* %retval, align 4, !dbg !15192
  br label %return, !dbg !15192

if.end9:                                          ; preds = %sw.bb5
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15193
  %15 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15194
  %16 = load i32, i32* %mem_flags.addr, align 4, !dbg !15195
  %call10 = call i32 @intr_submit(%struct.ehci_hcd* %14, %struct.urb* %15, %struct.list_head* %qtd_list, i32 %16) #11, !dbg !15196
  store i32 %call10, i32* %retval, align 4, !dbg !15197
  br label %return, !dbg !15197

sw.bb11:                                          ; preds = %entry
  %17 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15198
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %17, i32 0, i32 8, !dbg !15200
  %18 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !15200
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 4, !dbg !15201
  %19 = load i32, i32* %speed, align 4, !dbg !15201
  %cmp12 = icmp eq i32 %19, 3, !dbg !15202
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !15203

if.then13:                                        ; preds = %sw.bb11
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15204
  %21 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15205
  %22 = load i32, i32* %mem_flags.addr, align 4, !dbg !15206
  %call14 = call i32 @itd_submit(%struct.ehci_hcd* %20, %struct.urb* %21, i32 %22) #11, !dbg !15207
  store i32 %call14, i32* %retval, align 4, !dbg !15208
  br label %return, !dbg !15208

if.else:                                          ; preds = %sw.bb11
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15209
  %24 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15210
  %25 = load i32, i32* %mem_flags.addr, align 4, !dbg !15211
  %call15 = call i32 @sitd_submit(%struct.ehci_hcd* %23, %struct.urb* %24, i32 %25) #11, !dbg !15212
  store i32 %call15, i32* %retval, align 4, !dbg !15213
  br label %return, !dbg !15213

return:                                           ; preds = %if.else, %if.then13, %if.end9, %if.then8, %if.end3, %if.then2, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !15214
  ret i32 %26, !dbg !15214
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_urb_dequeue(%struct.usb_hcd* %hcd, %struct.urb* %urb, i32 %status) #0 !dbg !15215 {
entry:
  %lock.addr.i41 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i41, metadata !6709, metadata !DIExpression()), !dbg !15216
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !15218
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !15219
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %status.addr = alloca i32, align 4
  %ehci = alloca %struct.ehci_hcd*, align 8
  %qh = alloca %struct.ehci_qh*, align 8
  %flags = alloca i64, align 8
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !15226, metadata !DIExpression()), !dbg !15227
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !15228, metadata !DIExpression()), !dbg !15229
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !15230, metadata !DIExpression()), !dbg !15231
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !15232, metadata !DIExpression()), !dbg !15233
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !15234
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !15235
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !15233
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !15236, metadata !DIExpression()), !dbg !15237
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15238, metadata !DIExpression()), !dbg !15239
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !15240, metadata !DIExpression()), !dbg !15241
  br label %do.body, !dbg !15242

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !15243

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15244, metadata !DIExpression()), !dbg !15246
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15247, metadata !DIExpression()), !dbg !15246
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !15246
  %conv = zext i1 %cmp to i32, !dbg !15246
  store i32 1, i32* %tmp, align 4, !dbg !15246
  %1 = load i32, i32* %tmp, align 4, !dbg !15246
  br label %do.body2, !dbg !15248

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !15249

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !15250

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !15252, metadata !DIExpression()), !dbg !15255
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !15256, metadata !DIExpression()), !dbg !15255
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !15255
  %conv8 = zext i1 %cmp7 to i32, !dbg !15255
  store i32 1, i32* %tmp9, align 4, !dbg !15255
  %2 = load i32, i32* %tmp9, align 4, !dbg !15255
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !15257
  store i64 %call10, i64* %flags, align 8, !dbg !15257
  br label %do.end, !dbg !15257

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !15250

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !15249

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15258, !srcloc !15259
  br label %do.body13, !dbg !15258

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15260
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 11, !dbg !15260
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15261
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !15262
  %rlock.i = bitcast %union.anon.0* %5 to %struct.raw_spinlock*, !dbg !15262
  br label %do.end15, !dbg !15260

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !15258

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !15249

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !15248

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !15243

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !15263
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15264
  %8 = load i32, i32* %status.addr, align 4, !dbg !15265
  %call20 = call i32 @usb_hcd_check_unlink_urb(%struct.usb_hcd* %6, %struct.urb* %7, i32 %8) #11, !dbg !15266
  store i32 %call20, i32* %rc, align 4, !dbg !15267
  %9 = load i32, i32* %rc, align 4, !dbg !15268
  %tobool = icmp ne i32 %9, 0, !dbg !15268
  br i1 %tobool, label %if.then, label %if.end, !dbg !15270

if.then:                                          ; preds = %do.end19
  br label %done, !dbg !15271

if.end:                                           ; preds = %do.end19
  %10 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15272
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %10, i32 0, i32 10, !dbg !15272
  %11 = load i32, i32* %pipe, align 8, !dbg !15272
  %shr = lshr i32 %11, 30, !dbg !15272
  %and = and i32 %shr, 3, !dbg !15272
  %cmp21 = icmp eq i32 %and, 0, !dbg !15274
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !15275

if.then23:                                        ; preds = %if.end
  br label %if.end39, !dbg !15276

if.else:                                          ; preds = %if.end
  %12 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15278
  %hcpriv = getelementptr inbounds %struct.urb, %struct.urb* %12, i32 0, i32 2, !dbg !15280
  %13 = load i8*, i8** %hcpriv, align 8, !dbg !15280
  %14 = bitcast i8* %13 to %struct.ehci_qh*, !dbg !15281
  store %struct.ehci_qh* %14, %struct.ehci_qh** %qh, align 8, !dbg !15282
  %15 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15283
  %unlink_reason = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %15, i32 0, i32 11, !dbg !15284
  %16 = load i8, i8* %unlink_reason, align 2, !dbg !15285
  %conv24 = zext i8 %16 to i32, !dbg !15285
  %or = or i32 %conv24, 32, !dbg !15285
  %conv25 = trunc i32 %or to i8, !dbg !15285
  store i8 %conv25, i8* %unlink_reason, align 2, !dbg !15285
  %17 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15286
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %17, i32 0, i32 9, !dbg !15287
  %18 = load i8, i8* %qh_state, align 4, !dbg !15287
  %conv26 = zext i8 %18 to i32, !dbg !15286
  switch i32 %conv26, label %sw.epilog [
    i32 1, label %sw.bb
    i32 5, label %sw.bb35
    i32 2, label %sw.bb36
    i32 4, label %sw.bb36
    i32 3, label %sw.bb37
  ], !dbg !15288

sw.bb:                                            ; preds = %if.else
  %19 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !15289
  %pipe27 = getelementptr inbounds %struct.urb, %struct.urb* %19, i32 0, i32 10, !dbg !15289
  %20 = load i32, i32* %pipe27, align 8, !dbg !15289
  %shr28 = lshr i32 %20, 30, !dbg !15289
  %and29 = and i32 %shr28, 3, !dbg !15289
  %cmp30 = icmp eq i32 %and29, 1, !dbg !15292
  br i1 %cmp30, label %if.then32, label %if.else33, !dbg !15293

if.then32:                                        ; preds = %sw.bb
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15294
  %22 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15295
  call void @start_unlink_intr(%struct.ehci_hcd* %21, %struct.ehci_qh* %22) #11, !dbg !15296
  br label %if.end34, !dbg !15296

if.else33:                                        ; preds = %sw.bb
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15297
  %24 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15298
  call void @start_unlink_async(%struct.ehci_hcd* %23, %struct.ehci_qh* %24) #11, !dbg !15299
  br label %if.end34

if.end34:                                         ; preds = %if.else33, %if.then32
  br label %sw.epilog, !dbg !15300

sw.bb35:                                          ; preds = %if.else
  %25 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15301
  %dequeue_during_giveback = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %25, i32 0, i32 13, !dbg !15302
  %bf.load = load i8, i8* %dequeue_during_giveback, align 8, !dbg !15303
  %bf.clear = and i8 %bf.load, -5, !dbg !15303
  %bf.set = or i8 %bf.clear, 4, !dbg !15303
  store i8 %bf.set, i8* %dequeue_during_giveback, align 8, !dbg !15303
  br label %sw.epilog, !dbg !15304

sw.bb36:                                          ; preds = %if.else, %if.else
  br label %sw.epilog, !dbg !15305

sw.bb37:                                          ; preds = %if.else
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15306
  %27 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15307
  %call38 = call i32 @qh_completions(%struct.ehci_hcd* %26, %struct.ehci_qh* %27) #11, !dbg !15308
  br label %sw.epilog, !dbg !15309

sw.epilog:                                        ; preds = %if.else, %sw.bb37, %sw.bb36, %sw.bb35, %if.end34
  br label %if.end39

if.end39:                                         ; preds = %sw.epilog, %if.then23
  br label %done, !dbg !15310

done:                                             ; preds = %if.end39, %if.then
  call void @llvm.dbg.label(metadata !15311), !dbg !15312
  %28 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15313
  %lock40 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %28, i32 0, i32 11, !dbg !15314
  %29 = load i64, i64* %flags, align 8, !dbg !15315
  store %struct.spinlock* %lock40, %struct.spinlock** %lock.addr.i41, align 8
  store i64 %29, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !15316
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !15316
  store i32 1, i32* %tmp.i, align 4, !dbg !15316
  %30 = load i32, i32* %tmp.i, align 4, !dbg !15316
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !15317
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !15317
  store i32 1, i32* %tmp8.i, align 4, !dbg !15317
  %31 = load i32, i32* %tmp8.i, align 4, !dbg !15317
  %32 = load i64, i64* %flags.addr.i, align 8, !dbg !15318
  call void @arch_local_irq_restore(i64 %32) #12, !dbg !15318
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15319, !srcloc !6997
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i41, align 8, !dbg !15320
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !15320
  %rlock.i42 = bitcast %union.anon.0* %34 to %struct.raw_spinlock*, !dbg !15320
  %35 = load i32, i32* %rc, align 4, !dbg !15321
  ret i32 %35, !dbg !15322
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_endpoint_disable(%struct.usb_hcd* %hcd, %struct.usb_host_endpoint* %ep) #0 !dbg !15323 {
entry:
  %lock.addr.i94 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i94, metadata !6709, metadata !DIExpression()), !dbg !15324
  %flags.addr.i95 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i95, metadata !6715, metadata !DIExpression()), !dbg !15327
  %tmp.i96 = alloca i32, align 4
  %tmp8.i97 = alloca i32, align 4
  %lock.addr.i92 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i92, metadata !6709, metadata !DIExpression()), !dbg !15328
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !15330
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !15331
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ep.addr = alloca %struct.usb_host_endpoint*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %flags = alloca i64, align 8
  %qh = alloca %struct.ehci_qh*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %stream = alloca %struct.ehci_iso_stream*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp53 = alloca i64, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !15338, metadata !DIExpression()), !dbg !15339
  store %struct.usb_host_endpoint* %ep, %struct.usb_host_endpoint** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep.addr, metadata !15340, metadata !DIExpression()), !dbg !15341
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !15342, metadata !DIExpression()), !dbg !15343
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !15344
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !15345
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !15343
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15346, metadata !DIExpression()), !dbg !15347
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !15348, metadata !DIExpression()), !dbg !15349
  br label %rescan, !dbg !15350

rescan:                                           ; preds = %idle_timeout, %entry
  call void @llvm.dbg.label(metadata !15351), !dbg !15352
  br label %do.body, !dbg !15353

do.body:                                          ; preds = %rescan
  br label %do.body1, !dbg !15354

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15355, metadata !DIExpression()), !dbg !15357
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15358, metadata !DIExpression()), !dbg !15357
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !15357
  %conv = zext i1 %cmp to i32, !dbg !15357
  store i32 1, i32* %tmp, align 4, !dbg !15357
  %1 = load i32, i32* %tmp, align 4, !dbg !15357
  br label %do.body2, !dbg !15359

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !15360

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !15361

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !15363, metadata !DIExpression()), !dbg !15366
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !15367, metadata !DIExpression()), !dbg !15366
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !15366
  %conv8 = zext i1 %cmp7 to i32, !dbg !15366
  store i32 1, i32* %tmp9, align 4, !dbg !15366
  %2 = load i32, i32* %tmp9, align 4, !dbg !15366
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !15368
  store i64 %call10, i64* %flags, align 8, !dbg !15368
  br label %do.end, !dbg !15368

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !15361

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !15360

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15369, !srcloc !15370
  br label %do.body13, !dbg !15369

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15371
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 11, !dbg !15371
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15372
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !15373
  %rlock.i = bitcast %union.anon.0* %5 to %struct.raw_spinlock*, !dbg !15373
  br label %do.end15, !dbg !15371

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !15369

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !15360

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !15359

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !15354

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15374
  %hcpriv = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %6, i32 0, i32 5, !dbg !15375
  %7 = load i8*, i8** %hcpriv, align 8, !dbg !15375
  %8 = bitcast i8* %7 to %struct.ehci_qh*, !dbg !15374
  store %struct.ehci_qh* %8, %struct.ehci_qh** %qh, align 8, !dbg !15376
  %9 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15377
  %tobool = icmp ne %struct.ehci_qh* %9, null, !dbg !15377
  br i1 %tobool, label %if.end, label %if.then, !dbg !15379

if.then:                                          ; preds = %do.end19
  br label %done, !dbg !15380

if.end:                                           ; preds = %do.end19
  %10 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15381
  %hw = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %10, i32 0, i32 0, !dbg !15383
  %11 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !15383
  %cmp20 = icmp eq %struct.ehci_qh_hw* %11, null, !dbg !15384
  br i1 %cmp20, label %if.then22, label %if.end28, !dbg !15385

if.then22:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream, metadata !15386, metadata !DIExpression()), !dbg !15388
  %12 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15389
  %hcpriv23 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %12, i32 0, i32 5, !dbg !15390
  %13 = load i8*, i8** %hcpriv23, align 8, !dbg !15390
  %14 = bitcast i8* %13 to %struct.ehci_iso_stream*, !dbg !15389
  store %struct.ehci_iso_stream* %14, %struct.ehci_iso_stream** %stream, align 8, !dbg !15388
  %15 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !15391
  %td_list = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %15, i32 0, i32 3, !dbg !15393
  %call24 = call i32 @list_empty(%struct.list_head* %td_list) #11, !dbg !15394
  %tobool25 = icmp ne i32 %call24, 0, !dbg !15394
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !15395

if.then26:                                        ; preds = %if.then22
  br label %idle_timeout, !dbg !15396

if.end27:                                         ; preds = %if.then22
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15397
  %17 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !15398
  call void @reserve_release_iso_bandwidth(%struct.ehci_hcd* %16, %struct.ehci_iso_stream* %17, i32 -1) #11, !dbg !15399
  %18 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !15400
  %19 = bitcast %struct.ehci_iso_stream* %18 to i8*, !dbg !15400
  call void @kfree(i8* %19) #11, !dbg !15401
  br label %done, !dbg !15402

if.end28:                                         ; preds = %if.end
  %20 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15403
  %unlink_reason = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %20, i32 0, i32 11, !dbg !15404
  %21 = load i8, i8* %unlink_reason, align 2, !dbg !15405
  %conv29 = zext i8 %21 to i32, !dbg !15405
  %or = or i32 %conv29, 32, !dbg !15405
  %conv30 = trunc i32 %or to i8, !dbg !15405
  store i8 %conv30, i8* %unlink_reason, align 2, !dbg !15405
  %22 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15406
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %22, i32 0, i32 9, !dbg !15407
  %23 = load i8, i8* %qh_state, align 4, !dbg !15407
  %conv31 = zext i8 %23 to i32, !dbg !15406
  switch i32 %conv31, label %sw.default [
    i32 1, label %sw.bb
    i32 5, label %sw.bb67
    i32 2, label %sw.bb67
    i32 4, label %sw.bb67
    i32 3, label %sw.bb70
  ], !dbg !15408

sw.bb:                                            ; preds = %if.end28
  %24 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15409
  %qtd_list = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %24, i32 0, i32 3, !dbg !15411
  %call32 = call i32 @list_empty(%struct.list_head* %qtd_list) #11, !dbg !15412
  %tobool33 = icmp ne i32 %call32, 0, !dbg !15412
  br i1 %tobool33, label %if.then34, label %if.else, !dbg !15413

if.then34:                                        ; preds = %sw.bb
  %25 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15414
  %unlink_reason35 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %25, i32 0, i32 11, !dbg !15415
  %26 = load i8, i8* %unlink_reason35, align 2, !dbg !15416
  %conv36 = zext i8 %26 to i32, !dbg !15416
  %or37 = or i32 %conv36, 16, !dbg !15416
  %conv38 = trunc i32 %or37 to i8, !dbg !15416
  store i8 %conv38, i8* %unlink_reason35, align 2, !dbg !15416
  br label %if.end60, !dbg !15414

if.else:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !15417, metadata !DIExpression()), !dbg !15419
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !15419
  %27 = load i32, i32* %__ret_warn_on, align 4, !dbg !15420
  %tobool39 = icmp ne i32 %27, 0, !dbg !15420
  %lnot = xor i1 %tobool39, true, !dbg !15420
  %lnot40 = xor i1 %lnot, true, !dbg !15420
  %lnot.ext = zext i1 %lnot40 to i32, !dbg !15420
  %conv41 = sext i32 %lnot.ext to i64, !dbg !15420
  %tobool42 = icmp ne i64 %conv41, 0, !dbg !15420
  br i1 %tobool42, label %if.then43, label %if.end52, !dbg !15419

if.then43:                                        ; preds = %if.else
  br label %do.body44, !dbg !15420

do.body44:                                        ; preds = %if.then43
  br label %do.body45, !dbg !15422

do.body45:                                        ; preds = %do.body44
  br label %do.end46, !dbg !15424

do.end46:                                         ; preds = %do.body45
  br label %do.body47, !dbg !15422

do.body47:                                        ; preds = %do.end46
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0), i32 981, i32 2305, i64 12) #7, !dbg !15426, !srcloc !15428
  br label %do.end48, !dbg !15426

do.end48:                                         ; preds = %do.body47
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 372) #7, !dbg !15429, !srcloc !15431
  br label %do.body49, !dbg !15422

do.body49:                                        ; preds = %do.end48
  br label %do.end50, !dbg !15432

do.end50:                                         ; preds = %do.body49
  br label %do.end51, !dbg !15422

do.end51:                                         ; preds = %do.end50
  br label %if.end52, !dbg !15422

if.end52:                                         ; preds = %do.end51, %if.else
  %28 = load i32, i32* %__ret_warn_on, align 4, !dbg !15419
  %tobool54 = icmp ne i32 %28, 0, !dbg !15419
  %lnot55 = xor i1 %tobool54, true, !dbg !15419
  %lnot57 = xor i1 %lnot55, true, !dbg !15419
  %lnot.ext58 = zext i1 %lnot57 to i32, !dbg !15419
  %conv59 = sext i32 %lnot.ext58 to i64, !dbg !15419
  store i64 %conv59, i64* %tmp53, align 8, !dbg !15420
  %29 = load i64, i64* %tmp53, align 8, !dbg !15419
  br label %if.end60

if.end60:                                         ; preds = %if.end52, %if.then34
  %30 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15434
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %30, i32 0, i32 0, !dbg !15436
  %call61 = call i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !15437
  %cmp62 = icmp ne i32 %call61, 3, !dbg !15438
  br i1 %cmp62, label %if.then64, label %if.else65, !dbg !15439

if.then64:                                        ; preds = %if.end60
  %31 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15440
  %32 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15441
  call void @start_unlink_async(%struct.ehci_hcd* %31, %struct.ehci_qh* %32) #11, !dbg !15442
  br label %if.end66, !dbg !15442

if.else65:                                        ; preds = %if.end60
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15443
  %34 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15444
  call void @start_unlink_intr(%struct.ehci_hcd* %33, %struct.ehci_qh* %34) #11, !dbg !15445
  br label %if.end66

if.end66:                                         ; preds = %if.else65, %if.then64
  br label %sw.bb67, !dbg !15446

sw.bb67:                                          ; preds = %if.end28, %if.end28, %if.end28, %if.end66
  br label %idle_timeout, !dbg !15446

idle_timeout:                                     ; preds = %if.then72, %sw.bb67, %if.then26
  call void @llvm.dbg.label(metadata !15447), !dbg !15448
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15449
  %lock68 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %35, i32 0, i32 11, !dbg !15450
  %36 = load i64, i64* %flags, align 8, !dbg !15451
  store %struct.spinlock* %lock68, %struct.spinlock** %lock.addr.i94, align 8
  store i64 %36, i64* %flags.addr.i95, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !15452
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !15452
  store i32 1, i32* %tmp.i96, align 4, !dbg !15452
  %37 = load i32, i32* %tmp.i96, align 4, !dbg !15452
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !15453
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !15453
  store i32 1, i32* %tmp8.i97, align 4, !dbg !15453
  %38 = load i32, i32* %tmp8.i97, align 4, !dbg !15453
  %39 = load i64, i64* %flags.addr.i95, align 8, !dbg !15454
  call void @arch_local_irq_restore(i64 %39) #12, !dbg !15454
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15455, !srcloc !6997
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i94, align 8, !dbg !15456
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !15456
  %rlock.i98 = bitcast %union.anon.0* %41 to %struct.raw_spinlock*, !dbg !15456
  %call69 = call i64 @schedule_timeout_uninterruptible(i64 1) #11, !dbg !15457
  br label %rescan, !dbg !15458

sw.bb70:                                          ; preds = %if.end28
  %42 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15459
  %clearing_tt = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %42, i32 0, i32 13, !dbg !15461
  %bf.load = load i8, i8* %clearing_tt, align 8, !dbg !15461
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !15461
  %bf.clear = and i8 %bf.lshr, 1, !dbg !15461
  %bf.cast = zext i8 %bf.clear to i32, !dbg !15461
  %tobool71 = icmp ne i32 %bf.cast, 0, !dbg !15459
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !15462

if.then72:                                        ; preds = %sw.bb70
  br label %idle_timeout, !dbg !15463

if.end73:                                         ; preds = %sw.bb70
  %43 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15464
  %qtd_list74 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %43, i32 0, i32 3, !dbg !15466
  %call75 = call i32 @list_empty(%struct.list_head* %qtd_list74) #11, !dbg !15467
  %tobool76 = icmp ne i32 %call75, 0, !dbg !15467
  br i1 %tobool76, label %if.then77, label %if.end81, !dbg !15468

if.then77:                                        ; preds = %if.end73
  %44 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15469
  %ps = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %44, i32 0, i32 7, !dbg !15472
  %bw_uperiod = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 11, !dbg !15473
  %45 = load i8, i8* %bw_uperiod, align 4, !dbg !15473
  %tobool78 = icmp ne i8 %45, 0, !dbg !15469
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !15474

if.then79:                                        ; preds = %if.then77
  %46 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15475
  %47 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15476
  call void @reserve_release_intr_bandwidth(%struct.ehci_hcd* %46, %struct.ehci_qh* %47, i32 -1) #11, !dbg !15477
  br label %if.end80, !dbg !15477

if.end80:                                         ; preds = %if.then79, %if.then77
  %48 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15478
  %49 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15479
  call void @qh_destroy(%struct.ehci_hcd* %48, %struct.ehci_qh* %49) #11, !dbg !15480
  br label %sw.epilog, !dbg !15481

if.end81:                                         ; preds = %if.end73
  br label %sw.default, !dbg !15482

sw.default:                                       ; preds = %if.end28, %if.end81
  %50 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15483
  %call82 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %50) #11, !dbg !15483
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call82, i32 0, i32 0, !dbg !15483
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !15483
  %51 = load %struct.device*, %struct.device** %controller, align 8, !dbg !15483
  %52 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15483
  %53 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15483
  %desc83 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %53, i32 0, i32 0, !dbg !15483
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc83, i32 0, i32 2, !dbg !15483
  %54 = load i8, i8* %bEndpointAddress, align 2, !dbg !15483
  %conv84 = zext i8 %54 to i32, !dbg !15483
  %55 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15483
  %qh_state85 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %55, i32 0, i32 9, !dbg !15483
  %56 = load i8, i8* %qh_state85, align 4, !dbg !15483
  %conv86 = zext i8 %56 to i32, !dbg !15483
  %57 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15483
  %qtd_list87 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %57, i32 0, i32 3, !dbg !15483
  %call88 = call i32 @list_empty(%struct.list_head* %qtd_list87) #11, !dbg !15483
  %tobool89 = icmp ne i32 %call88, 0, !dbg !15483
  %58 = zext i1 %tobool89 to i64, !dbg !15483
  %cond = select i1 %tobool89, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i64 0, i64 0), !dbg !15483
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %51, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.36, i64 0, i64 0), %struct.ehci_qh* %52, i32 %conv84, i32 %conv86, i8* %cond) #13, !dbg !15483
  br label %sw.epilog, !dbg !15484

sw.epilog:                                        ; preds = %sw.default, %if.end80
  br label %done, !dbg !15485

done:                                             ; preds = %sw.epilog, %if.end27, %if.then
  call void @llvm.dbg.label(metadata !15486), !dbg !15487
  %59 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15488
  %hcpriv90 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %59, i32 0, i32 5, !dbg !15489
  store i8* null, i8** %hcpriv90, align 8, !dbg !15490
  %60 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15491
  %lock91 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %60, i32 0, i32 11, !dbg !15492
  %61 = load i64, i64* %flags, align 8, !dbg !15493
  store %struct.spinlock* %lock91, %struct.spinlock** %lock.addr.i92, align 8
  store i64 %61, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !15494
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !15494
  store i32 1, i32* %tmp.i, align 4, !dbg !15494
  %62 = load i32, i32* %tmp.i, align 4, !dbg !15494
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !15495
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !15495
  store i32 1, i32* %tmp8.i, align 4, !dbg !15495
  %63 = load i32, i32* %tmp8.i, align 4, !dbg !15495
  %64 = load i64, i64* %flags.addr.i, align 8, !dbg !15496
  call void @arch_local_irq_restore(i64 %64) #12, !dbg !15496
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15497, !srcloc !6997
  %65 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i92, align 8, !dbg !15498
  %66 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %65, i32 0, i32 0, !dbg !15498
  %rlock.i93 = bitcast %union.anon.0* %66 to %struct.raw_spinlock*, !dbg !15498
  ret void, !dbg !15499
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_endpoint_reset(%struct.usb_hcd* %hcd, %struct.usb_host_endpoint* %ep) #0 !dbg !6275 {
entry:
  %lock.addr.i93 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i93, metadata !6709, metadata !DIExpression()), !dbg !15500
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !15502
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !15503
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ep.addr = alloca %struct.usb_host_endpoint*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %qh = alloca %struct.ehci_qh*, align 8
  %eptype = alloca i32, align 4
  %epnum = alloca i32, align 4
  %is_out = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy12 = alloca i64, align 8
  %__dummy213 = alloca i64, align 8
  %tmp16 = alloca i32, align 4
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp61 = alloca i64, align 8
  %tmp69 = alloca i64, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !15510, metadata !DIExpression()), !dbg !15511
  store %struct.usb_host_endpoint* %ep, %struct.usb_host_endpoint** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep.addr, metadata !15512, metadata !DIExpression()), !dbg !15513
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !15514, metadata !DIExpression()), !dbg !15515
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !15516
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !15517
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !15515
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !15518, metadata !DIExpression()), !dbg !15519
  call void @llvm.dbg.declare(metadata i32* %eptype, metadata !15520, metadata !DIExpression()), !dbg !15521
  %1 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15522
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %1, i32 0, i32 0, !dbg !15523
  %call1 = call i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !15524
  store i32 %call1, i32* %eptype, align 4, !dbg !15521
  call void @llvm.dbg.declare(metadata i32* %epnum, metadata !15525, metadata !DIExpression()), !dbg !15526
  %2 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15527
  %desc2 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %2, i32 0, i32 0, !dbg !15528
  %call3 = call i32 @usb_endpoint_num(%struct.usb_endpoint_descriptor* %desc2) #11, !dbg !15529
  store i32 %call3, i32* %epnum, align 4, !dbg !15526
  call void @llvm.dbg.declare(metadata i32* %is_out, metadata !15530, metadata !DIExpression()), !dbg !15531
  %3 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15532
  %desc4 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %3, i32 0, i32 0, !dbg !15533
  %call5 = call i32 @usb_endpoint_dir_out(%struct.usb_endpoint_descriptor* %desc4) #11, !dbg !15534
  store i32 %call5, i32* %is_out, align 4, !dbg !15531
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15535, metadata !DIExpression()), !dbg !15536
  %4 = load i32, i32* %eptype, align 4, !dbg !15537
  %cmp = icmp ne i32 %4, 2, !dbg !15539
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !15540

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* %eptype, align 4, !dbg !15541
  %cmp6 = icmp ne i32 %5, 3, !dbg !15542
  br i1 %cmp6, label %if.then, label %if.end, !dbg !15543

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !15544

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %do.body, !dbg !15545

do.body:                                          ; preds = %if.end
  br label %do.body7, !dbg !15546

do.body7:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15547, metadata !DIExpression()), !dbg !15549
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15550, metadata !DIExpression()), !dbg !15549
  %cmp8 = icmp eq i64* %__dummy, %__dummy2, !dbg !15549
  %conv = zext i1 %cmp8 to i32, !dbg !15549
  store i32 1, i32* %tmp, align 4, !dbg !15549
  %6 = load i32, i32* %tmp, align 4, !dbg !15549
  br label %do.body9, !dbg !15551

do.body9:                                         ; preds = %do.body7
  br label %do.body10, !dbg !15552

do.body10:                                        ; preds = %do.body9
  br label %do.body11, !dbg !15553

do.body11:                                        ; preds = %do.body10
  call void @llvm.dbg.declare(metadata i64* %__dummy12, metadata !15555, metadata !DIExpression()), !dbg !15558
  call void @llvm.dbg.declare(metadata i64* %__dummy213, metadata !15559, metadata !DIExpression()), !dbg !15558
  %cmp14 = icmp eq i64* %__dummy12, %__dummy213, !dbg !15558
  %conv15 = zext i1 %cmp14 to i32, !dbg !15558
  store i32 1, i32* %tmp16, align 4, !dbg !15558
  %7 = load i32, i32* %tmp16, align 4, !dbg !15558
  %call17 = call i64 @arch_local_irq_save() #11, !dbg !15560
  store i64 %call17, i64* %flags, align 8, !dbg !15560
  br label %do.end, !dbg !15560

do.end:                                           ; preds = %do.body11
  br label %do.end18, !dbg !15553

do.end18:                                         ; preds = %do.end
  br label %do.body19, !dbg !15552

do.body19:                                        ; preds = %do.end18
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15561, !srcloc !15562
  br label %do.body20, !dbg !15561

do.body20:                                        ; preds = %do.body19
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15563
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 11, !dbg !15563
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15564
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !15565
  %rlock.i = bitcast %union.anon.0* %10 to %struct.raw_spinlock*, !dbg !15565
  br label %do.end22, !dbg !15563

do.end22:                                         ; preds = %do.body20
  br label %do.end23, !dbg !15561

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !15552

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !15551

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !15546

do.end26:                                         ; preds = %do.end25
  %11 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !15566
  %hcpriv = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %11, i32 0, i32 5, !dbg !15567
  %12 = load i8*, i8** %hcpriv, align 8, !dbg !15567
  %13 = bitcast i8* %12 to %struct.ehci_qh*, !dbg !15566
  store %struct.ehci_qh* %13, %struct.ehci_qh** %qh, align 8, !dbg !15568
  %14 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15569
  %tobool = icmp ne %struct.ehci_qh* %14, null, !dbg !15569
  br i1 %tobool, label %if.then27, label %if.end91, !dbg !15571

if.then27:                                        ; preds = %do.end26
  %15 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15572
  %qtd_list = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %15, i32 0, i32 3, !dbg !15575
  %call28 = call i32 @list_empty(%struct.list_head* %qtd_list) #11, !dbg !15576
  %tobool29 = icmp ne i32 %call28, 0, !dbg !15576
  br i1 %tobool29, label %if.else, label %if.then30, !dbg !15577

if.then30:                                        ; preds = %if.then27
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !15578, metadata !DIExpression()), !dbg !15581
  store i32 1, i32* %__ret_warn_once, align 4, !dbg !15581
  %16 = load i32, i32* %__ret_warn_once, align 4, !dbg !15582
  %tobool31 = icmp ne i32 %16, 0, !dbg !15582
  br i1 %tobool31, label %land.rhs, label %land.end, !dbg !15582

land.rhs:                                         ; preds = %if.then30
  %17 = load i8, i8* @ehci_endpoint_reset.__warned, align 1, !dbg !15582
  %tobool32 = trunc i8 %17 to i1, !dbg !15582
  %lnot = xor i1 %tobool32, true, !dbg !15582
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then30
  %18 = phi i1 [ false, %if.then30 ], [ %lnot, %land.rhs ], !dbg !15584
  %lnot33 = xor i1 %18, true, !dbg !15582
  %lnot34 = xor i1 %lnot33, true, !dbg !15582
  %lnot.ext = zext i1 %lnot34 to i32, !dbg !15582
  %conv35 = sext i32 %lnot.ext to i64, !dbg !15582
  %tobool36 = icmp ne i64 %conv35, 0, !dbg !15582
  br i1 %tobool36, label %if.then37, label %if.end68, !dbg !15581

if.then37:                                        ; preds = %land.end
  store i8 1, i8* @ehci_endpoint_reset.__warned, align 1, !dbg !15585
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !15587, metadata !DIExpression()), !dbg !15589
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !15589
  %19 = load i32, i32* %__ret_warn_on, align 4, !dbg !15590
  %tobool38 = icmp ne i32 %19, 0, !dbg !15590
  %lnot39 = xor i1 %tobool38, true, !dbg !15590
  %lnot41 = xor i1 %lnot39, true, !dbg !15590
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !15590
  %conv43 = sext i32 %lnot.ext42 to i64, !dbg !15590
  %tobool44 = icmp ne i64 %conv43, 0, !dbg !15590
  br i1 %tobool44, label %if.then45, label %if.end60, !dbg !15589

if.then45:                                        ; preds = %if.then37
  br label %do.body46, !dbg !15590

do.body46:                                        ; preds = %if.then45
  br label %do.body47, !dbg !15592

do.body47:                                        ; preds = %do.body46
  br label %do.end48, !dbg !15594

do.end48:                                         ; preds = %do.body47
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.38, i64 0, i64 0)) #11, !dbg !15592
  br label %do.body49, !dbg !15592

do.body49:                                        ; preds = %do.end48
  br label %do.body50, !dbg !15596

do.body50:                                        ; preds = %do.body49
  br label %do.end51, !dbg !15598

do.end51:                                         ; preds = %do.body50
  br label %do.body52, !dbg !15596

do.body52:                                        ; preds = %do.end51
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0), i32 1041, i32 2313, i64 12) #7, !dbg !15600, !srcloc !15602
  br label %do.end53, !dbg !15600

do.end53:                                         ; preds = %do.body52
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 373) #7, !dbg !15603, !srcloc !15605
  br label %do.body54, !dbg !15596

do.body54:                                        ; preds = %do.end53
  br label %do.end55, !dbg !15606

do.end55:                                         ; preds = %do.body54
  br label %do.end56, !dbg !15596

do.end56:                                         ; preds = %do.end55
  br label %do.body57, !dbg !15592

do.body57:                                        ; preds = %do.end56
  br label %do.end58, !dbg !15608

do.end58:                                         ; preds = %do.body57
  br label %do.end59, !dbg !15592

do.end59:                                         ; preds = %do.end58
  br label %if.end60, !dbg !15592

if.end60:                                         ; preds = %do.end59, %if.then37
  %20 = load i32, i32* %__ret_warn_on, align 4, !dbg !15589
  %tobool62 = icmp ne i32 %20, 0, !dbg !15589
  %lnot63 = xor i1 %tobool62, true, !dbg !15589
  %lnot65 = xor i1 %lnot63, true, !dbg !15589
  %lnot.ext66 = zext i1 %lnot65 to i32, !dbg !15589
  %conv67 = sext i32 %lnot.ext66 to i64, !dbg !15589
  store i64 %conv67, i64* %tmp61, align 8, !dbg !15590
  %21 = load i64, i64* %tmp61, align 8, !dbg !15589
  br label %if.end68, !dbg !15585

if.end68:                                         ; preds = %if.end60, %land.end
  %22 = load i32, i32* %__ret_warn_once, align 4, !dbg !15581
  %tobool70 = icmp ne i32 %22, 0, !dbg !15581
  %lnot71 = xor i1 %tobool70, true, !dbg !15581
  %lnot73 = xor i1 %lnot71, true, !dbg !15581
  %lnot.ext74 = zext i1 %lnot73 to i32, !dbg !15581
  %conv75 = sext i32 %lnot.ext74 to i64, !dbg !15581
  store i64 %conv75, i64* %tmp69, align 8, !dbg !15582
  %23 = load i64, i64* %tmp69, align 8, !dbg !15581
  br label %if.end90, !dbg !15610

if.else:                                          ; preds = %if.then27
  %24 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15611
  %ps = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %24, i32 0, i32 7, !dbg !15611
  %udev = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 0, !dbg !15611
  %25 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !15611
  %toggle = getelementptr inbounds %struct.usb_device, %struct.usb_device* %25, i32 0, i32 9, !dbg !15611
  %26 = load i32, i32* %is_out, align 4, !dbg !15611
  %idxprom = sext i32 %26 to i64, !dbg !15611
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %toggle, i64 0, i64 %idxprom, !dbg !15611
  %27 = load i32, i32* %arrayidx, align 4, !dbg !15611
  %28 = load i32, i32* %epnum, align 4, !dbg !15611
  %shl = shl i32 1, %28, !dbg !15611
  %neg = xor i32 %shl, -1, !dbg !15611
  %and = and i32 %27, %neg, !dbg !15611
  %29 = load i32, i32* %epnum, align 4, !dbg !15611
  %shl76 = shl i32 0, %29, !dbg !15611
  %or = or i32 %and, %shl76, !dbg !15611
  %30 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15611
  %ps77 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %30, i32 0, i32 7, !dbg !15611
  %udev78 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps77, i32 0, i32 0, !dbg !15611
  %31 = load %struct.usb_device*, %struct.usb_device** %udev78, align 8, !dbg !15611
  %toggle79 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %31, i32 0, i32 9, !dbg !15611
  %32 = load i32, i32* %is_out, align 4, !dbg !15611
  %idxprom80 = sext i32 %32 to i64, !dbg !15611
  %arrayidx81 = getelementptr [2 x i32], [2 x i32]* %toggle79, i64 0, i64 %idxprom80, !dbg !15611
  store i32 %or, i32* %arrayidx81, align 4, !dbg !15611
  %33 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15613
  %unlink_reason = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %33, i32 0, i32 11, !dbg !15614
  %34 = load i8, i8* %unlink_reason, align 2, !dbg !15615
  %conv82 = zext i8 %34 to i32, !dbg !15615
  %or83 = or i32 %conv82, 32, !dbg !15615
  %conv84 = trunc i32 %or83 to i8, !dbg !15615
  store i8 %conv84, i8* %unlink_reason, align 2, !dbg !15615
  %35 = load i32, i32* %eptype, align 4, !dbg !15616
  %cmp85 = icmp eq i32 %35, 2, !dbg !15618
  br i1 %cmp85, label %if.then87, label %if.else88, !dbg !15619

if.then87:                                        ; preds = %if.else
  %36 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15620
  %37 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15621
  call void @start_unlink_async(%struct.ehci_hcd* %36, %struct.ehci_qh* %37) #11, !dbg !15622
  br label %if.end89, !dbg !15622

if.else88:                                        ; preds = %if.else
  %38 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15623
  %39 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !15624
  call void @start_unlink_intr(%struct.ehci_hcd* %38, %struct.ehci_qh* %39) #11, !dbg !15625
  br label %if.end89

if.end89:                                         ; preds = %if.else88, %if.then87
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end68
  br label %if.end91, !dbg !15626

if.end91:                                         ; preds = %if.end90, %do.end26
  %40 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15627
  %lock92 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %40, i32 0, i32 11, !dbg !15628
  %41 = load i64, i64* %flags, align 8, !dbg !15629
  store %struct.spinlock* %lock92, %struct.spinlock** %lock.addr.i93, align 8
  store i64 %41, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !15630
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !15630
  store i32 1, i32* %tmp.i, align 4, !dbg !15630
  %42 = load i32, i32* %tmp.i, align 4, !dbg !15630
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !15631
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !15631
  store i32 1, i32* %tmp8.i, align 4, !dbg !15631
  %43 = load i32, i32* %tmp8.i, align 4, !dbg !15631
  %44 = load i64, i64* %flags.addr.i, align 8, !dbg !15632
  call void @arch_local_irq_restore(i64 %44) #12, !dbg !15632
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15633, !srcloc !6997
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i93, align 8, !dbg !15634
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !15634
  %rlock.i94 = bitcast %union.anon.0* %46 to %struct.raw_spinlock*, !dbg !15634
  br label %return, !dbg !15635

return:                                           ; preds = %if.end91, %if.then
  ret void, !dbg !15635
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_hub_status_data(%struct.usb_hcd* %hcd, i8* %buf) #0 !dbg !15636 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !6727, metadata !DIExpression()), !dbg !15637
  %lock.addr.i84 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i84, metadata !6709, metadata !DIExpression()), !dbg !15640
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !15642
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !15643
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %buf.addr = alloca i8*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %temp = alloca i32, align 4
  %status = alloca i32, align 4
  %mask = alloca i32, align 4
  %ports = alloca i32, align 4
  %i = alloca i32, align 4
  %retval1 = alloca i32, align 4
  %flags = alloca i64, align 8
  %ppcd = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy11 = alloca i64, align 8
  %__dummy212 = alloca i64, align 8
  %tmp15 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !15650, metadata !DIExpression()), !dbg !15651
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15652, metadata !DIExpression()), !dbg !15653
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !15654, metadata !DIExpression()), !dbg !15655
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !15656
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !15657
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !15655
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !15658, metadata !DIExpression()), !dbg !15659
  call void @llvm.dbg.declare(metadata i32* %status, metadata !15660, metadata !DIExpression()), !dbg !15661
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !15662, metadata !DIExpression()), !dbg !15663
  call void @llvm.dbg.declare(metadata i32* %ports, metadata !15664, metadata !DIExpression()), !dbg !15665
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15666, metadata !DIExpression()), !dbg !15667
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !15668, metadata !DIExpression()), !dbg !15669
  store i32 1, i32* %retval1, align 4, !dbg !15669
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15670, metadata !DIExpression()), !dbg !15671
  call void @llvm.dbg.declare(metadata i32* %ppcd, metadata !15672, metadata !DIExpression()), !dbg !15673
  store i32 -1, i32* %ppcd, align 4, !dbg !15673
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !15674
  %arrayidx = getelementptr i8, i8* %1, i64 0, !dbg !15674
  store i8 0, i8* %arrayidx, align 1, !dbg !15675
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15676
  %hcs_params = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 10, !dbg !15676
  %3 = load i32, i32* %hcs_params, align 8, !dbg !15676
  %shr = lshr i32 %3, 0, !dbg !15676
  %and = and i32 %shr, 15, !dbg !15676
  store i32 %and, i32* %ports, align 4, !dbg !15677
  %4 = load i32, i32* %ports, align 4, !dbg !15678
  %cmp = icmp sgt i32 %4, 7, !dbg !15680
  br i1 %cmp, label %if.then, label %if.end, !dbg !15681

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !15682
  %arrayidx2 = getelementptr i8, i8* %5, i64 1, !dbg !15682
  store i8 0, i8* %arrayidx2, align 1, !dbg !15684
  %6 = load i32, i32* %retval1, align 4, !dbg !15685
  %inc = add i32 %6, 1, !dbg !15685
  store i32 %inc, i32* %retval1, align 4, !dbg !15685
  br label %if.end, !dbg !15686

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15687
  %resuming_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 49, !dbg !15688
  %8 = load i64, i64* %resuming_ports, align 8, !dbg !15688
  %conv = trunc i64 %8 to i32, !dbg !15687
  store i32 %conv, i32* %status, align 4, !dbg !15689
  %9 = load i8, i8* @ignore_oc, align 1, !dbg !15690
  %tobool = trunc i8 %9 to i1, !dbg !15690
  br i1 %tobool, label %if.else, label %if.then3, !dbg !15692

if.then3:                                         ; preds = %if.end
  store i32 42, i32* %mask, align 4, !dbg !15693
  br label %if.end4, !dbg !15694

if.else:                                          ; preds = %if.end
  store i32 10, i32* %mask, align 4, !dbg !15695
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then3
  br label %do.body, !dbg !15696

do.body:                                          ; preds = %if.end4
  br label %do.body5, !dbg !15697

do.body5:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15698, metadata !DIExpression()), !dbg !15700
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15701, metadata !DIExpression()), !dbg !15700
  %cmp6 = icmp eq i64* %__dummy, %__dummy2, !dbg !15700
  %conv7 = zext i1 %cmp6 to i32, !dbg !15700
  store i32 1, i32* %tmp, align 4, !dbg !15700
  %10 = load i32, i32* %tmp, align 4, !dbg !15700
  br label %do.body8, !dbg !15702

do.body8:                                         ; preds = %do.body5
  br label %do.body9, !dbg !15703

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !15704

do.body10:                                        ; preds = %do.body9
  call void @llvm.dbg.declare(metadata i64* %__dummy11, metadata !15706, metadata !DIExpression()), !dbg !15709
  call void @llvm.dbg.declare(metadata i64* %__dummy212, metadata !15710, metadata !DIExpression()), !dbg !15709
  %cmp13 = icmp eq i64* %__dummy11, %__dummy212, !dbg !15709
  %conv14 = zext i1 %cmp13 to i32, !dbg !15709
  store i32 1, i32* %tmp15, align 4, !dbg !15709
  %11 = load i32, i32* %tmp15, align 4, !dbg !15709
  %call16 = call i64 @arch_local_irq_save() #11, !dbg !15711
  store i64 %call16, i64* %flags, align 8, !dbg !15711
  br label %do.end, !dbg !15711

do.end:                                           ; preds = %do.body10
  br label %do.end17, !dbg !15704

do.end17:                                         ; preds = %do.end
  br label %do.body18, !dbg !15703

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15712, !srcloc !15713
  br label %do.body19, !dbg !15712

do.body19:                                        ; preds = %do.body18
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15714
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 11, !dbg !15714
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15715
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !15716
  %rlock.i = bitcast %union.anon.0* %14 to %struct.raw_spinlock*, !dbg !15716
  br label %do.end21, !dbg !15714

do.end21:                                         ; preds = %do.body19
  br label %do.end22, !dbg !15712

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !15703

do.end23:                                         ; preds = %do.end22
  br label %do.end24, !dbg !15702

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !15697

do.end25:                                         ; preds = %do.end24
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15717
  %has_ppcd = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %15, i32 0, i32 60, !dbg !15719
  %bf.load = load i8, i8* %has_ppcd, align 8, !dbg !15719
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !15719
  %bf.clear = and i8 %bf.lshr, 1, !dbg !15719
  %bf.cast = zext i8 %bf.clear to i32, !dbg !15719
  %tobool26 = icmp ne i32 %bf.cast, 0, !dbg !15717
  br i1 %tobool26, label %if.then27, label %if.end31, !dbg !15720

if.then27:                                        ; preds = %do.end25
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15721
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15722
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %17, i32 0, i32 8, !dbg !15723
  %18 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !15723
  %status28 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %18, i32 0, i32 1, !dbg !15724
  %call29 = call i32 @ehci_readl(%struct.ehci_hcd* %16, i32* %status28) #11, !dbg !15725
  %shr30 = lshr i32 %call29, 16, !dbg !15726
  store i32 %shr30, i32* %ppcd, align 4, !dbg !15727
  br label %if.end31, !dbg !15728

if.end31:                                         ; preds = %if.then27, %do.end25
  store i32 0, i32* %i, align 4, !dbg !15729
  br label %for.cond, !dbg !15731

for.cond:                                         ; preds = %for.inc, %if.end31
  %19 = load i32, i32* %i, align 4, !dbg !15732
  %20 = load i32, i32* %ports, align 4, !dbg !15734
  %cmp32 = icmp slt i32 %19, %20, !dbg !15735
  br i1 %cmp32, label %for.body, label %for.end, !dbg !15736

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %ppcd, align 4, !dbg !15737
  %22 = load i32, i32* %i, align 4, !dbg !15740
  %shl = shl i32 1, %22, !dbg !15741
  %and34 = and i32 %21, %shl, !dbg !15742
  %tobool35 = icmp ne i32 %and34, 0, !dbg !15742
  br i1 %tobool35, label %if.then36, label %if.else40, !dbg !15743

if.then36:                                        ; preds = %for.body
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15744
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15745
  %regs37 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %24, i32 0, i32 8, !dbg !15746
  %25 = load %struct.ehci_regs*, %struct.ehci_regs** %regs37, align 8, !dbg !15746
  %port_status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %25, i32 0, i32 11, !dbg !15747
  %26 = load i32, i32* %i, align 4, !dbg !15748
  %idxprom = sext i32 %26 to i64, !dbg !15745
  %arrayidx38 = getelementptr [0 x i32], [0 x i32]* %port_status, i64 0, i64 %idxprom, !dbg !15745
  %call39 = call i32 @ehci_readl(%struct.ehci_hcd* %23, i32* %arrayidx38) #11, !dbg !15749
  store i32 %call39, i32* %temp, align 4, !dbg !15750
  br label %if.end41, !dbg !15751

if.else40:                                        ; preds = %for.body
  store i32 0, i32* %temp, align 4, !dbg !15752
  br label %if.end41

if.end41:                                         ; preds = %if.else40, %if.then36
  %27 = load i32, i32* %temp, align 4, !dbg !15753
  %28 = load i32, i32* %mask, align 4, !dbg !15755
  %and42 = and i32 %27, %28, !dbg !15756
  %cmp43 = icmp ne i32 %and42, 0, !dbg !15757
  br i1 %cmp43, label %if.then57, label %lor.lhs.false, !dbg !15758

lor.lhs.false:                                    ; preds = %if.end41
  %29 = load i32, i32* %i, align 4, !dbg !15759
  %conv45 = sext i32 %29 to i64, !dbg !15759
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15760
  %port_c_suspend = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %30, i32 0, i32 47, !dbg !15761
  %call46 = call zeroext i1 @test_bit(i64 %conv45, i64* %port_c_suspend) #11, !dbg !15762
  br i1 %call46, label %if.then57, label %lor.lhs.false48, !dbg !15763

lor.lhs.false48:                                  ; preds = %lor.lhs.false
  %31 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15764
  %reset_done = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %31, i32 0, i32 43, !dbg !15765
  %32 = load i32, i32* %i, align 4, !dbg !15766
  %idxprom49 = sext i32 %32 to i64, !dbg !15764
  %arrayidx50 = getelementptr [15 x i64], [15 x i64]* %reset_done, i64 0, i64 %idxprom49, !dbg !15764
  %33 = load i64, i64* %arrayidx50, align 8, !dbg !15764
  %tobool51 = icmp ne i64 %33, 0, !dbg !15764
  br i1 %tobool51, label %land.lhs.true, label %if.end73, !dbg !15767

land.lhs.true:                                    ; preds = %lor.lhs.false48
  %34 = load volatile i64, i64* @jiffies, align 8, !dbg !15768
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15768
  %reset_done52 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %35, i32 0, i32 43, !dbg !15768
  %36 = load i32, i32* %i, align 4, !dbg !15768
  %idxprom53 = sext i32 %36 to i64, !dbg !15768
  %arrayidx54 = getelementptr [15 x i64], [15 x i64]* %reset_done52, i64 0, i64 %idxprom53, !dbg !15768
  %37 = load i64, i64* %arrayidx54, align 8, !dbg !15768
  %sub = sub i64 %34, %37, !dbg !15768
  %cmp55 = icmp sge i64 %sub, 0, !dbg !15768
  br i1 %cmp55, label %if.then57, label %if.end73, !dbg !15769

if.then57:                                        ; preds = %land.lhs.true, %lor.lhs.false, %if.end41
  %38 = load i32, i32* %i, align 4, !dbg !15770
  %cmp58 = icmp slt i32 %38, 7, !dbg !15773
  br i1 %cmp58, label %if.then60, label %if.else65, !dbg !15774

if.then60:                                        ; preds = %if.then57
  %39 = load i32, i32* %i, align 4, !dbg !15775
  %add = add i32 %39, 1, !dbg !15776
  %shl61 = shl i32 1, %add, !dbg !15777
  %40 = load i8*, i8** %buf.addr, align 8, !dbg !15778
  %arrayidx62 = getelementptr i8, i8* %40, i64 0, !dbg !15778
  %41 = load i8, i8* %arrayidx62, align 1, !dbg !15779
  %conv63 = sext i8 %41 to i32, !dbg !15779
  %or = or i32 %conv63, %shl61, !dbg !15779
  %conv64 = trunc i32 %or to i8, !dbg !15779
  store i8 %conv64, i8* %arrayidx62, align 1, !dbg !15779
  br label %if.end72, !dbg !15778

if.else65:                                        ; preds = %if.then57
  %42 = load i32, i32* %i, align 4, !dbg !15780
  %sub66 = sub i32 %42, 7, !dbg !15781
  %shl67 = shl i32 1, %sub66, !dbg !15782
  %43 = load i8*, i8** %buf.addr, align 8, !dbg !15783
  %arrayidx68 = getelementptr i8, i8* %43, i64 1, !dbg !15783
  %44 = load i8, i8* %arrayidx68, align 1, !dbg !15784
  %conv69 = sext i8 %44 to i32, !dbg !15784
  %or70 = or i32 %conv69, %shl67, !dbg !15784
  %conv71 = trunc i32 %or70 to i8, !dbg !15784
  store i8 %conv71, i8* %arrayidx68, align 1, !dbg !15784
  br label %if.end72

if.end72:                                         ; preds = %if.else65, %if.then60
  store i32 4, i32* %status, align 4, !dbg !15785
  br label %if.end73, !dbg !15786

if.end73:                                         ; preds = %if.end72, %land.lhs.true, %lor.lhs.false48
  br label %for.inc, !dbg !15787

for.inc:                                          ; preds = %if.end73
  %45 = load i32, i32* %i, align 4, !dbg !15788
  %inc74 = add i32 %45, 1, !dbg !15788
  store i32 %inc74, i32* %i, align 4, !dbg !15788
  br label %for.cond, !dbg !15789, !llvm.loop !15790

for.end:                                          ; preds = %for.cond
  %46 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15792
  %resuming_ports75 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %46, i32 0, i32 49, !dbg !15793
  %47 = load i64, i64* %resuming_ports75, align 8, !dbg !15793
  %tobool76 = icmp ne i64 %47, 0, !dbg !15792
  br i1 %tobool76, label %if.then77, label %if.end81, !dbg !15794

if.then77:                                        ; preds = %for.end
  %48 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !15795
  %rh_timer = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %48, i32 0, i32 5, !dbg !15796
  %49 = load volatile i64, i64* @jiffies, align 8, !dbg !15797
  store i32 25, i32* %m.addr.i, align 4
  %50 = load i32, i32* %m.addr.i, align 4, !dbg !15798
  %51 = call i1 @llvm.is.constant.i32(i32 %50) #7, !dbg !15799
  br i1 %51, label %if.then.i, label %if.else.i, !dbg !15800

if.then.i:                                        ; preds = %if.then77
  %52 = load i32, i32* %m.addr.i, align 4, !dbg !15801
  %cmp.i = icmp slt i32 %52, 0, !dbg !15802
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !15803

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !15804
  br label %msecs_to_jiffies.exit, !dbg !15804

if.end.i:                                         ; preds = %if.then.i
  %53 = load i32, i32* %m.addr.i, align 4, !dbg !15805
  %call.i = call i64 @_msecs_to_jiffies(i32 %53) #12, !dbg !15806
  store i64 %call.i, i64* %retval.i, align 8, !dbg !15807
  br label %msecs_to_jiffies.exit, !dbg !15807

if.else.i:                                        ; preds = %if.then77
  %54 = load i32, i32* %m.addr.i, align 4, !dbg !15808
  %call2.i = call i64 @__msecs_to_jiffies(i32 %54) #12, !dbg !15809
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !15810
  br label %msecs_to_jiffies.exit, !dbg !15810

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %55 = load i64, i64* %retval.i, align 8, !dbg !15811
  %add79 = add i64 %49, %55, !dbg !15812
  %call80 = call i32 @mod_timer(%struct.timer_list* %rh_timer, i64 %add79) #11, !dbg !15813
  br label %if.end81, !dbg !15813

if.end81:                                         ; preds = %msecs_to_jiffies.exit, %for.end
  %56 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15814
  %lock82 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %56, i32 0, i32 11, !dbg !15815
  %57 = load i64, i64* %flags, align 8, !dbg !15816
  store %struct.spinlock* %lock82, %struct.spinlock** %lock.addr.i84, align 8
  store i64 %57, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !15817
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !15817
  store i32 1, i32* %tmp.i, align 4, !dbg !15817
  %58 = load i32, i32* %tmp.i, align 4, !dbg !15817
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !15818
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !15818
  store i32 1, i32* %tmp8.i, align 4, !dbg !15818
  %59 = load i32, i32* %tmp8.i, align 4, !dbg !15818
  %60 = load i64, i64* %flags.addr.i, align 8, !dbg !15819
  call void @arch_local_irq_restore(i64 %60) #12, !dbg !15819
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15820, !srcloc !6997
  %61 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i84, align 8, !dbg !15821
  %62 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %61, i32 0, i32 0, !dbg !15821
  %rlock.i85 = bitcast %union.anon.0* %62 to %struct.raw_spinlock*, !dbg !15821
  %63 = load i32, i32* %status, align 4, !dbg !15822
  %tobool83 = icmp ne i32 %63, 0, !dbg !15822
  br i1 %tobool83, label %cond.true, label %cond.false, !dbg !15822

cond.true:                                        ; preds = %if.end81
  %64 = load i32, i32* %retval1, align 4, !dbg !15823
  br label %cond.end, !dbg !15822

cond.false:                                       ; preds = %if.end81
  br label %cond.end, !dbg !15822

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %64, %cond.true ], [ 0, %cond.false ], !dbg !15822
  ret i32 %cond, !dbg !15824
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_bus_suspend(%struct.usb_hcd* %hcd) #0 !dbg !15825 {
entry:
  %lock.addr.i143 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i143, metadata !6492, metadata !DIExpression()), !dbg !15826
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !6727, metadata !DIExpression()), !dbg !15828
  %lock.addr.i141 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i141, metadata !6499, metadata !DIExpression()), !dbg !15830
  %lock.addr.i139 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i139, metadata !6492, metadata !DIExpression()), !dbg !15832
  %lock.addr.i137 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i137, metadata !6499, metadata !DIExpression()), !dbg !15836
  %lock.addr.i135 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i135, metadata !6492, metadata !DIExpression()), !dbg !15838
  %lock.addr.i133 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i133, metadata !6492, metadata !DIExpression()), !dbg !15840
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6499, metadata !DIExpression()), !dbg !15846
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %port = alloca i32, align 4
  %mask = alloca i32, align 4
  %changed = alloca i32, align 4
  %fs_idle_delay = alloca i8, align 1
  %reg = alloca i32*, align 8
  %t1 = alloca i32, align 4
  %t2 = alloca i32, align 4
  %hostpc_reg = alloca i32*, align 8
  %t3 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !15848, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !15850, metadata !DIExpression()), !dbg !15851
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !15852
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !15853
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !15851
  call void @llvm.dbg.declare(metadata i32* %port, metadata !15854, metadata !DIExpression()), !dbg !15855
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !15856, metadata !DIExpression()), !dbg !15857
  call void @llvm.dbg.declare(metadata i32* %changed, metadata !15858, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.declare(metadata i8* %fs_idle_delay, metadata !15860, metadata !DIExpression()), !dbg !15861
  %1 = load volatile i64, i64* @jiffies, align 8, !dbg !15862
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15862
  %next_statechange = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 55, !dbg !15862
  %3 = load i64, i64* %next_statechange, align 8, !dbg !15862
  %sub = sub i64 %1, %3, !dbg !15862
  %cmp = icmp slt i64 %sub, 0, !dbg !15862
  br i1 %cmp, label %if.then, label %if.end, !dbg !15864

if.then:                                          ; preds = %entry
  call void @msleep(i32 5) #11, !dbg !15865
  br label %if.end, !dbg !15865

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15866
  call void @ehci_quiesce(%struct.ehci_hcd* %4) #11, !dbg !15867
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15868
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 11, !dbg !15869
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !15870
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15871, !srcloc !6536
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15872
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !15872
  %rlock.i = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !15872
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15873
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 12, !dbg !15875
  %9 = load i32, i32* %rh_state, align 4, !dbg !15875
  %cmp1 = icmp ult i32 %9, 2, !dbg !15876
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !15877

if.then2:                                         ; preds = %if.end
  br label %done, !dbg !15878

if.end3:                                          ; preds = %if.end
  %10 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !15879
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %10, i32 0, i32 0, !dbg !15880
  %root_hub = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 11, !dbg !15881
  %11 = load %struct.usb_device*, %struct.usb_device** %root_hub, align 8, !dbg !15881
  %do_remote_wakeup = getelementptr inbounds %struct.usb_device, %struct.usb_device* %11, i32 0, i32 41, !dbg !15882
  %bf.load = load i8, i8* %do_remote_wakeup, align 8, !dbg !15882
  %bf.clear = and i8 %bf.load, 1, !dbg !15882
  %bf.cast = zext i8 %bf.clear to i32, !dbg !15882
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !15879
  br i1 %tobool, label %if.then4, label %if.end9, !dbg !15883

if.then4:                                         ; preds = %if.end3
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15884
  %resuming_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 49, !dbg !15885
  %13 = load i64, i64* %resuming_ports, align 8, !dbg !15885
  %tobool5 = icmp ne i64 %13, 0, !dbg !15884
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !15886

if.then6:                                         ; preds = %if.then4
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15887
  %lock7 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 11, !dbg !15888
  store %struct.spinlock* %lock7, %struct.spinlock** %lock.addr.i133, align 8
  call void @arch_local_irq_enable() #12, !dbg !15889
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15890, !srcloc !6571
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i133, align 8, !dbg !15891
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !15891
  %rlock.i134 = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !15891
  store i32 -16, i32* %retval, align 4, !dbg !15892
  br label %return, !dbg !15892

if.end8:                                          ; preds = %if.then4
  br label %if.end9, !dbg !15893

if.end9:                                          ; preds = %if.end8, %if.end3
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15894
  %bus_suspended = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %17, i32 0, i32 44, !dbg !15895
  store i64 0, i64* %bus_suspended, align 8, !dbg !15896
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15897
  %owned_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %18, i32 0, i32 46, !dbg !15898
  store i64 0, i64* %owned_ports, align 8, !dbg !15899
  store i32 0, i32* %changed, align 4, !dbg !15900
  store i8 0, i8* %fs_idle_delay, align 1, !dbg !15901
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15902
  %hcs_params = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %19, i32 0, i32 10, !dbg !15902
  %20 = load i32, i32* %hcs_params, align 8, !dbg !15902
  %shr = lshr i32 %20, 0, !dbg !15902
  %and = and i32 %shr, 15, !dbg !15902
  store i32 %and, i32* %port, align 4, !dbg !15903
  br label %while.cond, !dbg !15904

while.cond:                                       ; preds = %if.end50, %if.end9
  %21 = load i32, i32* %port, align 4, !dbg !15905
  %dec = add i32 %21, -1, !dbg !15905
  store i32 %dec, i32* %port, align 4, !dbg !15905
  %tobool10 = icmp ne i32 %21, 0, !dbg !15904
  br i1 %tobool10, label %while.body, label %while.end, !dbg !15904

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32** %reg, metadata !15906, metadata !DIExpression()), !dbg !15908
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15909
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %22, i32 0, i32 8, !dbg !15910
  %23 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !15910
  %port_status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %23, i32 0, i32 11, !dbg !15911
  %24 = load i32, i32* %port, align 4, !dbg !15912
  %idxprom = sext i32 %24 to i64, !dbg !15909
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %port_status, i64 0, i64 %idxprom, !dbg !15909
  store i32* %arrayidx, i32** %reg, align 8, !dbg !15908
  call void @llvm.dbg.declare(metadata i32* %t1, metadata !15913, metadata !DIExpression()), !dbg !15914
  %25 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15915
  %26 = load i32*, i32** %reg, align 8, !dbg !15916
  %call11 = call i32 @ehci_readl(%struct.ehci_hcd* %25, i32* %26) #11, !dbg !15917
  %and12 = and i32 %call11, -43, !dbg !15918
  store i32 %and12, i32* %t1, align 4, !dbg !15914
  call void @llvm.dbg.declare(metadata i32* %t2, metadata !15919, metadata !DIExpression()), !dbg !15920
  %27 = load i32, i32* %t1, align 4, !dbg !15921
  %and13 = and i32 %27, -7340033, !dbg !15922
  store i32 %and13, i32* %t2, align 4, !dbg !15920
  %28 = load i32, i32* %t1, align 4, !dbg !15923
  %and14 = and i32 %28, 8192, !dbg !15925
  %tobool15 = icmp ne i32 %and14, 0, !dbg !15925
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !15926

if.then16:                                        ; preds = %while.body
  %29 = load i32, i32* %port, align 4, !dbg !15927
  %conv = sext i32 %29 to i64, !dbg !15927
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15928
  %owned_ports17 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %30, i32 0, i32 46, !dbg !15929
  call void @set_bit(i64 %conv, i64* %owned_ports17) #11, !dbg !15930
  br label %if.end26, !dbg !15930

if.else:                                          ; preds = %while.body
  %31 = load i32, i32* %t1, align 4, !dbg !15931
  %and18 = and i32 %31, 4, !dbg !15933
  %tobool19 = icmp ne i32 %and18, 0, !dbg !15933
  br i1 %tobool19, label %land.lhs.true, label %if.end25, !dbg !15934

land.lhs.true:                                    ; preds = %if.else
  %32 = load i32, i32* %t1, align 4, !dbg !15935
  %and20 = and i32 %32, 128, !dbg !15936
  %tobool21 = icmp ne i32 %and20, 0, !dbg !15936
  br i1 %tobool21, label %if.end25, label %if.then22, !dbg !15937

if.then22:                                        ; preds = %land.lhs.true
  %33 = load i32, i32* %t2, align 4, !dbg !15938
  %or = or i32 %33, 128, !dbg !15938
  store i32 %or, i32* %t2, align 4, !dbg !15938
  %34 = load i32, i32* %port, align 4, !dbg !15940
  %conv23 = sext i32 %34 to i64, !dbg !15940
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15941
  %bus_suspended24 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %35, i32 0, i32 44, !dbg !15942
  call void @set_bit(i64 %conv23, i64* %bus_suspended24) #11, !dbg !15943
  br label %if.end25, !dbg !15944

if.end25:                                         ; preds = %if.then22, %land.lhs.true, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then16
  %36 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !15945
  %self27 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %36, i32 0, i32 0, !dbg !15947
  %root_hub28 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self27, i32 0, i32 11, !dbg !15948
  %37 = load %struct.usb_device*, %struct.usb_device** %root_hub28, align 8, !dbg !15948
  %do_remote_wakeup29 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %37, i32 0, i32 41, !dbg !15949
  %bf.load30 = load i8, i8* %do_remote_wakeup29, align 8, !dbg !15949
  %bf.clear31 = and i8 %bf.load30, 1, !dbg !15949
  %bf.cast32 = zext i8 %bf.clear31 to i32, !dbg !15949
  %tobool33 = icmp ne i32 %bf.cast32, 0, !dbg !15945
  br i1 %tobool33, label %if.then34, label %if.end42, !dbg !15950

if.then34:                                        ; preds = %if.end26
  %38 = load i32, i32* %t1, align 4, !dbg !15951
  %and35 = and i32 %38, 1, !dbg !15954
  %tobool36 = icmp ne i32 %and35, 0, !dbg !15954
  br i1 %tobool36, label %if.then37, label %if.else39, !dbg !15955

if.then37:                                        ; preds = %if.then34
  %39 = load i32, i32* %t2, align 4, !dbg !15956
  %or38 = or i32 %39, 6291456, !dbg !15956
  store i32 %or38, i32* %t2, align 4, !dbg !15956
  br label %if.end41, !dbg !15957

if.else39:                                        ; preds = %if.then34
  %40 = load i32, i32* %t2, align 4, !dbg !15958
  %or40 = or i32 %40, 5242880, !dbg !15958
  store i32 %or40, i32* %t2, align 4, !dbg !15958
  br label %if.end41

if.end41:                                         ; preds = %if.else39, %if.then37
  br label %if.end42, !dbg !15959

if.end42:                                         ; preds = %if.end41, %if.end26
  %41 = load i32, i32* %t1, align 4, !dbg !15960
  %42 = load i32, i32* %t2, align 4, !dbg !15962
  %cmp43 = icmp ne i32 %41, %42, !dbg !15963
  br i1 %cmp43, label %if.then45, label %if.end50, !dbg !15964

if.then45:                                        ; preds = %if.end42
  %43 = load i32, i32* %t2, align 4, !dbg !15965
  %and46 = and i32 %43, 2097152, !dbg !15968
  %tobool47 = icmp ne i32 %and46, 0, !dbg !15968
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !15969

if.then48:                                        ; preds = %if.then45
  store i8 1, i8* %fs_idle_delay, align 1, !dbg !15970
  br label %if.end49, !dbg !15971

if.end49:                                         ; preds = %if.then48, %if.then45
  %44 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15972
  %45 = load i32, i32* %t2, align 4, !dbg !15973
  %46 = load i32*, i32** %reg, align 8, !dbg !15974
  call void @ehci_writel(%struct.ehci_hcd* %44, i32 %45, i32* %46) #11, !dbg !15975
  store i32 1, i32* %changed, align 4, !dbg !15976
  br label %if.end50, !dbg !15977

if.end50:                                         ; preds = %if.end49, %if.end42
  br label %while.cond, !dbg !15904, !llvm.loop !15978

while.end:                                        ; preds = %while.cond
  %47 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15980
  %lock51 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %47, i32 0, i32 11, !dbg !15981
  store %struct.spinlock* %lock51, %struct.spinlock** %lock.addr.i135, align 8
  call void @arch_local_irq_enable() #12, !dbg !15982
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15983, !srcloc !6571
  %48 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i135, align 8, !dbg !15984
  %49 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %48, i32 0, i32 0, !dbg !15984
  %rlock.i136 = bitcast %union.anon.0* %49 to %struct.raw_spinlock*, !dbg !15984
  %50 = load i32, i32* %changed, align 4, !dbg !15985
  %tobool52 = icmp ne i32 %50, 0, !dbg !15985
  br i1 %tobool52, label %land.lhs.true53, label %if.end59, !dbg !15987

land.lhs.true53:                                  ; preds = %while.end
  %51 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15988
  %has_fsl_susp_errata = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %51, i32 0, i32 58, !dbg !15988
  %bf.load54 = load i16, i16* %has_fsl_susp_errata, align 4, !dbg !15988
  %bf.lshr = lshr i16 %bf.load54, 3, !dbg !15988
  %bf.clear55 = and i16 %bf.lshr, 1, !dbg !15988
  %bf.cast56 = zext i16 %bf.clear55 to i32, !dbg !15988
  %tobool57 = icmp ne i32 %bf.cast56, 0, !dbg !15988
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !15989

if.then58:                                        ; preds = %land.lhs.true53
  call void @usleep_range(i64 10000, i64 20000) #11, !dbg !15990
  br label %if.end59, !dbg !15990

if.end59:                                         ; preds = %if.then58, %land.lhs.true53, %while.end
  %52 = load i32, i32* %changed, align 4, !dbg !15991
  %tobool60 = icmp ne i32 %52, 0, !dbg !15991
  br i1 %tobool60, label %land.lhs.true61, label %lor.lhs.false, !dbg !15993

land.lhs.true61:                                  ; preds = %if.end59
  %53 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !15994
  %has_tdi_phy_lpm = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %53, i32 0, i32 60, !dbg !15995
  %bf.load62 = load i8, i8* %has_tdi_phy_lpm, align 8, !dbg !15995
  %bf.lshr63 = lshr i8 %bf.load62, 1, !dbg !15995
  %bf.clear64 = and i8 %bf.lshr63, 1, !dbg !15995
  %bf.cast65 = zext i8 %bf.clear64 to i32, !dbg !15995
  %tobool66 = icmp ne i32 %bf.cast65, 0, !dbg !15994
  br i1 %tobool66, label %if.then69, label %lor.lhs.false, !dbg !15996

lor.lhs.false:                                    ; preds = %land.lhs.true61, %if.end59
  %54 = load i8, i8* %fs_idle_delay, align 1, !dbg !15997
  %tobool67 = trunc i8 %54 to i1, !dbg !15997
  br i1 %tobool67, label %if.then69, label %if.end70, !dbg !15998

if.then69:                                        ; preds = %lor.lhs.false, %land.lhs.true61
  call void @usleep_range(i64 5000, i64 5500) #11, !dbg !15999
  br label %if.end70, !dbg !16001

if.end70:                                         ; preds = %if.then69, %lor.lhs.false
  %55 = load i32, i32* %changed, align 4, !dbg !16002
  %tobool71 = icmp ne i32 %55, 0, !dbg !16002
  br i1 %tobool71, label %land.lhs.true72, label %if.end96, !dbg !16003

land.lhs.true72:                                  ; preds = %if.end70
  %56 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16004
  %has_tdi_phy_lpm73 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %56, i32 0, i32 60, !dbg !16005
  %bf.load74 = load i8, i8* %has_tdi_phy_lpm73, align 8, !dbg !16005
  %bf.lshr75 = lshr i8 %bf.load74, 1, !dbg !16005
  %bf.clear76 = and i8 %bf.lshr75, 1, !dbg !16005
  %bf.cast77 = zext i8 %bf.clear76 to i32, !dbg !16005
  %tobool78 = icmp ne i32 %bf.cast77, 0, !dbg !16004
  br i1 %tobool78, label %if.then79, label %if.end96, !dbg !16006

if.then79:                                        ; preds = %land.lhs.true72
  %57 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16007
  %lock80 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %57, i32 0, i32 11, !dbg !16008
  store %struct.spinlock* %lock80, %struct.spinlock** %lock.addr.i137, align 8
  call void @arch_local_irq_disable() #12, !dbg !16009
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16010, !srcloc !6536
  %58 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i137, align 8, !dbg !16011
  %59 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %58, i32 0, i32 0, !dbg !16011
  %rlock.i138 = bitcast %union.anon.0* %59 to %struct.raw_spinlock*, !dbg !16011
  %60 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16012
  %hcs_params81 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %60, i32 0, i32 10, !dbg !16012
  %61 = load i32, i32* %hcs_params81, align 8, !dbg !16012
  %shr82 = lshr i32 %61, 0, !dbg !16012
  %and83 = and i32 %shr82, 15, !dbg !16012
  store i32 %and83, i32* %port, align 4, !dbg !16013
  br label %while.cond84, !dbg !16014

while.cond84:                                     ; preds = %while.body87, %if.then79
  %62 = load i32, i32* %port, align 4, !dbg !16015
  %dec85 = add i32 %62, -1, !dbg !16015
  store i32 %dec85, i32* %port, align 4, !dbg !16015
  %tobool86 = icmp ne i32 %62, 0, !dbg !16014
  br i1 %tobool86, label %while.body87, label %while.end94, !dbg !16014

while.body87:                                     ; preds = %while.cond84
  call void @llvm.dbg.declare(metadata i32** %hostpc_reg, metadata !16016, metadata !DIExpression()), !dbg !16018
  %63 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16019
  %regs88 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %63, i32 0, i32 8, !dbg !16020
  %64 = load %struct.ehci_regs*, %struct.ehci_regs** %regs88, align 8, !dbg !16020
  %hostpc = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %64, i32 0, i32 15, !dbg !16021
  %65 = load i32, i32* %port, align 4, !dbg !16022
  %idxprom89 = sext i32 %65 to i64, !dbg !16019
  %arrayidx90 = getelementptr [0 x i32], [0 x i32]* %hostpc, i64 0, i64 %idxprom89, !dbg !16019
  store i32* %arrayidx90, i32** %hostpc_reg, align 8, !dbg !16018
  call void @llvm.dbg.declare(metadata i32* %t3, metadata !16023, metadata !DIExpression()), !dbg !16024
  %66 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16025
  %67 = load i32*, i32** %hostpc_reg, align 8, !dbg !16026
  %call91 = call i32 @ehci_readl(%struct.ehci_hcd* %66, i32* %67) #11, !dbg !16027
  store i32 %call91, i32* %t3, align 4, !dbg !16028
  %68 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16029
  %69 = load i32, i32* %t3, align 4, !dbg !16030
  %or92 = or i32 %69, 4194304, !dbg !16031
  %70 = load i32*, i32** %hostpc_reg, align 8, !dbg !16032
  call void @ehci_writel(%struct.ehci_hcd* %68, i32 %or92, i32* %70) #11, !dbg !16033
  %71 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16034
  %72 = load i32*, i32** %hostpc_reg, align 8, !dbg !16035
  %call93 = call i32 @ehci_readl(%struct.ehci_hcd* %71, i32* %72) #11, !dbg !16036
  store i32 %call93, i32* %t3, align 4, !dbg !16037
  br label %while.cond84, !dbg !16014, !llvm.loop !16038

while.end94:                                      ; preds = %while.cond84
  %73 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16040
  %lock95 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %73, i32 0, i32 11, !dbg !16041
  store %struct.spinlock* %lock95, %struct.spinlock** %lock.addr.i139, align 8
  call void @arch_local_irq_enable() #12, !dbg !16042
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16043, !srcloc !6571
  %74 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i139, align 8, !dbg !16044
  %75 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %74, i32 0, i32 0, !dbg !16044
  %rlock.i140 = bitcast %union.anon.0* %75 to %struct.raw_spinlock*, !dbg !16044
  br label %if.end96, !dbg !16045

if.end96:                                         ; preds = %while.end94, %land.lhs.true72, %if.end70
  %76 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16046
  %bus_suspended97 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %76, i32 0, i32 44, !dbg !16048
  %77 = load i64, i64* %bus_suspended97, align 8, !dbg !16048
  %tobool98 = icmp ne i64 %77, 0, !dbg !16046
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !16049

if.then99:                                        ; preds = %if.end96
  call void @__const_udelay(i64 644250) #11, !dbg !16050
  br label %if.end100, !dbg !16055

if.end100:                                        ; preds = %if.then99, %if.end96
  %78 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16056
  %call101 = call i32 @ehci_halt(%struct.ehci_hcd* %78) #11, !dbg !16057
  %79 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16058
  %lock102 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %79, i32 0, i32 11, !dbg !16059
  store %struct.spinlock* %lock102, %struct.spinlock** %lock.addr.i141, align 8
  call void @arch_local_irq_disable() #12, !dbg !16060
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16061, !srcloc !6536
  %80 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i141, align 8, !dbg !16062
  %81 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %80, i32 0, i32 0, !dbg !16062
  %rlock.i142 = bitcast %union.anon.0* %81 to %struct.raw_spinlock*, !dbg !16062
  %82 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16063
  %enabled_hrtimer_events = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %82, i32 0, i32 1, !dbg !16065
  %83 = load i32, i32* %enabled_hrtimer_events, align 4, !dbg !16065
  %conv103 = zext i32 %83 to i64, !dbg !16063
  %and104 = and i64 %conv103, 4, !dbg !16066
  %tobool105 = icmp ne i64 %and104, 0, !dbg !16066
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !16067

if.then106:                                       ; preds = %if.end100
  %84 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16068
  call void @ehci_handle_controller_death(%struct.ehci_hcd* %84) #11, !dbg !16069
  br label %if.end107, !dbg !16069

if.end107:                                        ; preds = %if.then106, %if.end100
  %85 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16070
  %rh_state108 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %85, i32 0, i32 12, !dbg !16072
  %86 = load i32, i32* %rh_state108, align 4, !dbg !16072
  %cmp109 = icmp ne i32 %86, 2, !dbg !16073
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !16074

if.then111:                                       ; preds = %if.end107
  br label %done, !dbg !16075

if.end112:                                        ; preds = %if.end107
  %87 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16076
  %rh_state113 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %87, i32 0, i32 12, !dbg !16077
  store i32 1, i32* %rh_state113, align 4, !dbg !16078
  %88 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16079
  call void @unlink_empty_async_suspended(%struct.ehci_hcd* %88) #11, !dbg !16080
  %89 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16081
  call void @end_iaa_cycle(%struct.ehci_hcd* %89) #11, !dbg !16082
  %90 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16083
  call void @ehci_handle_start_intr_unlinks(%struct.ehci_hcd* %90) #11, !dbg !16084
  %91 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16085
  call void @ehci_handle_intr_unlinks(%struct.ehci_hcd* %91) #11, !dbg !16086
  %92 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16087
  call void @end_free_itds(%struct.ehci_hcd* %92) #11, !dbg !16088
  store i32 55, i32* %mask, align 4, !dbg !16089
  %93 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !16090
  %self114 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %93, i32 0, i32 0, !dbg !16092
  %root_hub115 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self114, i32 0, i32 11, !dbg !16093
  %94 = load %struct.usb_device*, %struct.usb_device** %root_hub115, align 8, !dbg !16093
  %do_remote_wakeup116 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %94, i32 0, i32 41, !dbg !16094
  %bf.load117 = load i8, i8* %do_remote_wakeup116, align 8, !dbg !16094
  %bf.clear118 = and i8 %bf.load117, 1, !dbg !16094
  %bf.cast119 = zext i8 %bf.clear118 to i32, !dbg !16094
  %tobool120 = icmp ne i32 %bf.cast119, 0, !dbg !16090
  br i1 %tobool120, label %if.end123, label %if.then121, !dbg !16095

if.then121:                                       ; preds = %if.end112
  %95 = load i32, i32* %mask, align 4, !dbg !16096
  %and122 = and i32 %95, -5, !dbg !16096
  store i32 %and122, i32* %mask, align 4, !dbg !16096
  br label %if.end123, !dbg !16097

if.end123:                                        ; preds = %if.then121, %if.end112
  %96 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16098
  %97 = load i32, i32* %mask, align 4, !dbg !16099
  %98 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16100
  %regs124 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %98, i32 0, i32 8, !dbg !16101
  %99 = load %struct.ehci_regs*, %struct.ehci_regs** %regs124, align 8, !dbg !16101
  %intr_enable = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %99, i32 0, i32 2, !dbg !16102
  call void @ehci_writel(%struct.ehci_hcd* %96, i32 %97, i32* %intr_enable) #11, !dbg !16103
  %100 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16104
  %101 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16105
  %regs125 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %101, i32 0, i32 8, !dbg !16106
  %102 = load %struct.ehci_regs*, %struct.ehci_regs** %regs125, align 8, !dbg !16106
  %intr_enable126 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %102, i32 0, i32 2, !dbg !16107
  %call127 = call i32 @ehci_readl(%struct.ehci_hcd* %100, i32* %intr_enable126) #11, !dbg !16108
  br label %done, !dbg !16108

done:                                             ; preds = %if.end123, %if.then111, %if.then2
  call void @llvm.dbg.label(metadata !16109), !dbg !16110
  %103 = load volatile i64, i64* @jiffies, align 8, !dbg !16111
  store i32 10, i32* %m.addr.i, align 4
  %104 = load i32, i32* %m.addr.i, align 4, !dbg !16112
  %105 = call i1 @llvm.is.constant.i32(i32 %104) #7, !dbg !16113
  br i1 %105, label %if.then.i, label %if.else.i, !dbg !16114

if.then.i:                                        ; preds = %done
  %106 = load i32, i32* %m.addr.i, align 4, !dbg !16115
  %cmp.i = icmp slt i32 %106, 0, !dbg !16116
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !16117

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !16118
  br label %msecs_to_jiffies.exit, !dbg !16118

if.end.i:                                         ; preds = %if.then.i
  %107 = load i32, i32* %m.addr.i, align 4, !dbg !16119
  %call.i = call i64 @_msecs_to_jiffies(i32 %107) #12, !dbg !16120
  store i64 %call.i, i64* %retval.i, align 8, !dbg !16121
  br label %msecs_to_jiffies.exit, !dbg !16121

if.else.i:                                        ; preds = %done
  %108 = load i32, i32* %m.addr.i, align 4, !dbg !16122
  %call2.i = call i64 @__msecs_to_jiffies(i32 %108) #12, !dbg !16123
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !16124
  br label %msecs_to_jiffies.exit, !dbg !16124

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %109 = load i64, i64* %retval.i, align 8, !dbg !16125
  %add = add i64 %103, %109, !dbg !16126
  %110 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16127
  %next_statechange129 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %110, i32 0, i32 55, !dbg !16128
  store i64 %add, i64* %next_statechange129, align 8, !dbg !16129
  %111 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16130
  %enabled_hrtimer_events130 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %111, i32 0, i32 1, !dbg !16131
  store i32 0, i32* %enabled_hrtimer_events130, align 4, !dbg !16132
  %112 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16133
  %next_hrtimer_event = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %112, i32 0, i32 0, !dbg !16134
  store i32 99, i32* %next_hrtimer_event, align 8, !dbg !16135
  %113 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16136
  %lock131 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %113, i32 0, i32 11, !dbg !16137
  store %struct.spinlock* %lock131, %struct.spinlock** %lock.addr.i143, align 8
  call void @arch_local_irq_enable() #12, !dbg !16138
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16139, !srcloc !6571
  %114 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i143, align 8, !dbg !16140
  %115 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %114, i32 0, i32 0, !dbg !16140
  %rlock.i144 = bitcast %union.anon.0* %115 to %struct.raw_spinlock*, !dbg !16140
  %116 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16141
  %hrtimer = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %116, i32 0, i32 3, !dbg !16142
  %call132 = call i32 @hrtimer_cancel(%struct.hrtimer* %hrtimer) #11, !dbg !16143
  store i32 0, i32* %retval, align 4, !dbg !16144
  br label %return, !dbg !16144

return:                                           ; preds = %msecs_to_jiffies.exit, %if.then6
  %117 = load i32, i32* %retval, align 4, !dbg !16145
  ret i32 %117, !dbg !16145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_bus_resume(%struct.usb_hcd* %hcd) #0 !dbg !16146 {
entry:
  %lock.addr.i180 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i180, metadata !6492, metadata !DIExpression()), !dbg !16147
  %lock.addr.i178 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i178, metadata !6492, metadata !DIExpression()), !dbg !16149
  %lock.addr.i176 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i176, metadata !6499, metadata !DIExpression()), !dbg !16151
  %lock.addr.i174 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i174, metadata !6492, metadata !DIExpression()), !dbg !16153
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !6727, metadata !DIExpression()), !dbg !16155
  %lock.addr.i172 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i172, metadata !6499, metadata !DIExpression()), !dbg !16157
  %lock.addr.i170 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i170, metadata !6492, metadata !DIExpression()), !dbg !16161
  %lock.addr.i168 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i168, metadata !6499, metadata !DIExpression()), !dbg !16163
  %lock.addr.i166 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i166, metadata !6492, metadata !DIExpression()), !dbg !16167
  %lock.addr.i164 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i164, metadata !6499, metadata !DIExpression()), !dbg !16169
  %lock.addr.i162 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i162, metadata !6492, metadata !DIExpression()), !dbg !16174
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6499, metadata !DIExpression()), !dbg !16176
  %retval = alloca i32, align 4
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %temp = alloca i32, align 4
  %power_okay = alloca i32, align 4
  %i = alloca i32, align 4
  %resume_needed = alloca i64, align 8
  %hostpc_reg = alloca i32*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !16178, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !16180, metadata !DIExpression()), !dbg !16181
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !16182
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !16183
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !16181
  call void @llvm.dbg.declare(metadata i32* %temp, metadata !16184, metadata !DIExpression()), !dbg !16185
  call void @llvm.dbg.declare(metadata i32* %power_okay, metadata !16186, metadata !DIExpression()), !dbg !16187
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16188, metadata !DIExpression()), !dbg !16189
  call void @llvm.dbg.declare(metadata i64* %resume_needed, metadata !16190, metadata !DIExpression()), !dbg !16191
  store i64 0, i64* %resume_needed, align 8, !dbg !16191
  %1 = load volatile i64, i64* @jiffies, align 8, !dbg !16192
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16192
  %next_statechange = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %2, i32 0, i32 55, !dbg !16192
  %3 = load i64, i64* %next_statechange, align 8, !dbg !16192
  %sub = sub i64 %1, %3, !dbg !16192
  %cmp = icmp slt i64 %sub, 0, !dbg !16192
  br i1 %cmp, label %if.then, label %if.end, !dbg !16194

if.then:                                          ; preds = %entry
  call void @msleep(i32 5) #11, !dbg !16195
  br label %if.end, !dbg !16195

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16196
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 11, !dbg !16197
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !16198
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16199, !srcloc !6536
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16200
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !16200
  %rlock.i = bitcast %union.anon.0* %6 to %struct.raw_spinlock*, !dbg !16200
  %7 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !16201
  %flags = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %7, i32 0, i32 12, !dbg !16201
  %8 = load i64, i64* %flags, align 8, !dbg !16201
  %and = and i64 %8, 1, !dbg !16201
  %tobool = icmp ne i64 %and, 0, !dbg !16201
  br i1 %tobool, label %lor.lhs.false, label %if.then1, !dbg !16203

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16204
  %shutdown = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %9, i32 0, i32 13, !dbg !16205
  %bf.load = load i8, i8* %shutdown, align 8, !dbg !16205
  %bf.lshr = lshr i8 %bf.load, 5, !dbg !16205
  %bf.clear = and i8 %bf.lshr, 1, !dbg !16205
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !16205
  br i1 %bf.cast, label %if.then1, label %if.end2, !dbg !16206

if.then1:                                         ; preds = %lor.lhs.false, %if.end
  br label %shutdown160, !dbg !16207

if.end2:                                          ; preds = %lor.lhs.false
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16208
  %debug = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 9, !dbg !16208
  %11 = load %struct.ehci_dbg_port*, %struct.ehci_dbg_port** %debug, align 8, !dbg !16208
  %tobool3 = icmp ne %struct.ehci_dbg_port* %11, null, !dbg !16208
  %lnot = xor i1 %tobool3, true, !dbg !16208
  %lnot4 = xor i1 %lnot, true, !dbg !16208
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !16208
  %conv = sext i32 %lnot.ext to i64, !dbg !16208
  %tobool5 = icmp ne i64 %conv, 0, !dbg !16208
  br i1 %tobool5, label %if.then6, label %if.end13, !dbg !16210

if.then6:                                         ; preds = %if.end2
  %12 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !16211
  %call7 = call i32 @dbgp_reset_prep(%struct.usb_hcd* %12) #11, !dbg !16214
  %tobool8 = icmp ne i32 %call7, 0, !dbg !16214
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !16215

if.then9:                                         ; preds = %if.then6
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16216
  %debug10 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %13, i32 0, i32 9, !dbg !16217
  store %struct.ehci_dbg_port* null, %struct.ehci_dbg_port** %debug10, align 8, !dbg !16218
  br label %if.end12, !dbg !16216

if.else:                                          ; preds = %if.then6
  %14 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !16219
  %call11 = call i32 @dbgp_external_startup(%struct.usb_hcd* %14) #11, !dbg !16220
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then9
  br label %if.end13, !dbg !16221

if.end13:                                         ; preds = %if.end12, %if.end2
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16222
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16223
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %16, i32 0, i32 8, !dbg !16224
  %17 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !16224
  %intr_enable = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %17, i32 0, i32 2, !dbg !16225
  %call14 = call i32 @ehci_readl(%struct.ehci_hcd* %15, i32* %intr_enable) #11, !dbg !16226
  store i32 %call14, i32* %power_okay, align 4, !dbg !16227
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16228
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16229
  %regs15 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %19, i32 0, i32 8, !dbg !16230
  %20 = load %struct.ehci_regs*, %struct.ehci_regs** %regs15, align 8, !dbg !16230
  %intr_enable16 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %20, i32 0, i32 2, !dbg !16231
  call void @ehci_writel(%struct.ehci_hcd* %18, i32 0, i32* %intr_enable16) #11, !dbg !16232
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16233
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16234
  %regs17 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %22, i32 0, i32 8, !dbg !16235
  %23 = load %struct.ehci_regs*, %struct.ehci_regs** %regs17, align 8, !dbg !16235
  %segment = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %23, i32 0, i32 4, !dbg !16236
  call void @ehci_writel(%struct.ehci_hcd* %21, i32 0, i32* %segment) #11, !dbg !16237
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16238
  %25 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16239
  %periodic_dma = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %25, i32 0, i32 25, !dbg !16240
  %26 = load i64, i64* %periodic_dma, align 8, !dbg !16240
  %conv18 = trunc i64 %26 to i32, !dbg !16239
  %27 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16241
  %regs19 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %27, i32 0, i32 8, !dbg !16242
  %28 = load %struct.ehci_regs*, %struct.ehci_regs** %regs19, align 8, !dbg !16242
  %frame_list = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %28, i32 0, i32 5, !dbg !16243
  call void @ehci_writel(%struct.ehci_hcd* %24, i32 %conv18, i32* %frame_list) #11, !dbg !16244
  %29 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16245
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16246
  %async = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %30, i32 0, i32 15, !dbg !16247
  %31 = load %struct.ehci_qh*, %struct.ehci_qh** %async, align 8, !dbg !16247
  %qh_dma = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %31, i32 0, i32 1, !dbg !16248
  %32 = load i64, i64* %qh_dma, align 8, !dbg !16248
  %conv20 = trunc i64 %32 to i32, !dbg !16249
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16250
  %regs21 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %33, i32 0, i32 8, !dbg !16251
  %34 = load %struct.ehci_regs*, %struct.ehci_regs** %regs21, align 8, !dbg !16251
  %async_next = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %34, i32 0, i32 6, !dbg !16252
  call void @ehci_writel(%struct.ehci_hcd* %29, i32 %conv20, i32* %async_next) #11, !dbg !16253
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16254
  %command = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %35, i32 0, i32 57, !dbg !16255
  %36 = load i32, i32* %command, align 8, !dbg !16256
  %or = or i32 %36, 1, !dbg !16256
  store i32 %or, i32* %command, align 8, !dbg !16256
  %37 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16257
  %38 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16258
  %command22 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %38, i32 0, i32 57, !dbg !16259
  %39 = load i32, i32* %command22, align 8, !dbg !16259
  %40 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16260
  %regs23 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %40, i32 0, i32 8, !dbg !16261
  %41 = load %struct.ehci_regs*, %struct.ehci_regs** %regs23, align 8, !dbg !16261
  %command24 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %41, i32 0, i32 0, !dbg !16262
  call void @ehci_writel(%struct.ehci_hcd* %37, i32 %39, i32* %command24) #11, !dbg !16263
  %42 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16264
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %42, i32 0, i32 12, !dbg !16265
  store i32 2, i32* %rh_state, align 4, !dbg !16266
  %43 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16267
  %hcs_params = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %43, i32 0, i32 10, !dbg !16267
  %44 = load i32, i32* %hcs_params, align 8, !dbg !16267
  %shr = lshr i32 %44, 0, !dbg !16267
  %and25 = and i32 %shr, 15, !dbg !16267
  store i32 %and25, i32* %i, align 4, !dbg !16268
  br label %while.cond, !dbg !16269

while.cond:                                       ; preds = %if.end36, %if.end13
  %45 = load i32, i32* %i, align 4, !dbg !16270
  %dec = add i32 %45, -1, !dbg !16270
  store i32 %dec, i32* %i, align 4, !dbg !16270
  %tobool26 = icmp ne i32 %45, 0, !dbg !16269
  br i1 %tobool26, label %while.body, label %while.end, !dbg !16269

while.body:                                       ; preds = %while.cond
  %46 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16271
  %47 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16272
  %regs27 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %47, i32 0, i32 8, !dbg !16273
  %48 = load %struct.ehci_regs*, %struct.ehci_regs** %regs27, align 8, !dbg !16273
  %port_status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %48, i32 0, i32 11, !dbg !16274
  %49 = load i32, i32* %i, align 4, !dbg !16275
  %idxprom = sext i32 %49 to i64, !dbg !16272
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %port_status, i64 0, i64 %idxprom, !dbg !16272
  %call28 = call i32 @ehci_readl(%struct.ehci_hcd* %46, i32* %arrayidx) #11, !dbg !16276
  store i32 %call28, i32* %temp, align 4, !dbg !16277
  %50 = load i32, i32* %temp, align 4, !dbg !16278
  %and29 = and i32 %50, 4, !dbg !16279
  %tobool30 = icmp ne i32 %and29, 0, !dbg !16279
  br i1 %tobool30, label %land.lhs.true, label %if.end36, !dbg !16280

land.lhs.true:                                    ; preds = %while.body
  %51 = load i32, i32* %temp, align 4, !dbg !16281
  %and31 = and i32 %51, 192, !dbg !16282
  %tobool32 = icmp ne i32 %and31, 0, !dbg !16282
  br i1 %tobool32, label %if.end36, label %if.then33, !dbg !16283

if.then33:                                        ; preds = %land.lhs.true
  %52 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16284
  %lock34 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %52, i32 0, i32 11, !dbg !16285
  store %struct.spinlock* %lock34, %struct.spinlock** %lock.addr.i162, align 8
  call void @arch_local_irq_enable() #12, !dbg !16286
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16287, !srcloc !6571
  %53 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i162, align 8, !dbg !16288
  %54 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %53, i32 0, i32 0, !dbg !16288
  %rlock.i163 = bitcast %union.anon.0* %54 to %struct.raw_spinlock*, !dbg !16288
  call void @msleep(i32 8) #11, !dbg !16289
  %55 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16290
  %lock35 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %55, i32 0, i32 11, !dbg !16291
  store %struct.spinlock* %lock35, %struct.spinlock** %lock.addr.i164, align 8
  call void @arch_local_irq_disable() #12, !dbg !16292
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16293, !srcloc !6536
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i164, align 8, !dbg !16294
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !16294
  %rlock.i165 = bitcast %union.anon.0* %57 to %struct.raw_spinlock*, !dbg !16294
  br label %while.end, !dbg !16295

if.end36:                                         ; preds = %land.lhs.true, %while.body
  br label %while.cond, !dbg !16269, !llvm.loop !16296

while.end:                                        ; preds = %if.then33, %while.cond
  %58 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16298
  %shutdown37 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %58, i32 0, i32 13, !dbg !16300
  %bf.load38 = load i8, i8* %shutdown37, align 8, !dbg !16300
  %bf.lshr39 = lshr i8 %bf.load38, 5, !dbg !16300
  %bf.clear40 = and i8 %bf.lshr39, 1, !dbg !16300
  %bf.cast41 = trunc i8 %bf.clear40 to i1, !dbg !16300
  br i1 %bf.cast41, label %if.then42, label %if.end43, !dbg !16301

if.then42:                                        ; preds = %while.end
  br label %shutdown160, !dbg !16302

if.end43:                                         ; preds = %while.end
  %59 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16303
  %bus_suspended = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %59, i32 0, i32 44, !dbg !16304
  %60 = load i64, i64* %bus_suspended, align 8, !dbg !16304
  %tobool44 = icmp ne i64 %60, 0, !dbg !16303
  br i1 %tobool44, label %land.lhs.true45, label %if.end79, !dbg !16305

land.lhs.true45:                                  ; preds = %if.end43
  %61 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16306
  %has_tdi_phy_lpm = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %61, i32 0, i32 60, !dbg !16307
  %bf.load46 = load i8, i8* %has_tdi_phy_lpm, align 8, !dbg !16307
  %bf.lshr47 = lshr i8 %bf.load46, 1, !dbg !16307
  %bf.clear48 = and i8 %bf.lshr47, 1, !dbg !16307
  %bf.cast49 = zext i8 %bf.clear48 to i32, !dbg !16307
  %tobool50 = icmp ne i32 %bf.cast49, 0, !dbg !16306
  br i1 %tobool50, label %if.then51, label %if.end79, !dbg !16308

if.then51:                                        ; preds = %land.lhs.true45
  %62 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16309
  %hcs_params52 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %62, i32 0, i32 10, !dbg !16309
  %63 = load i32, i32* %hcs_params52, align 8, !dbg !16309
  %shr53 = lshr i32 %63, 0, !dbg !16309
  %and54 = and i32 %shr53, 15, !dbg !16309
  store i32 %and54, i32* %i, align 4, !dbg !16310
  br label %while.cond55, !dbg !16311

while.cond55:                                     ; preds = %if.end68, %if.then51
  %64 = load i32, i32* %i, align 4, !dbg !16312
  %dec56 = add i32 %64, -1, !dbg !16312
  store i32 %dec56, i32* %i, align 4, !dbg !16312
  %tobool57 = icmp ne i32 %64, 0, !dbg !16311
  br i1 %tobool57, label %while.body58, label %while.end69, !dbg !16311

while.body58:                                     ; preds = %while.cond55
  %65 = load i32, i32* %i, align 4, !dbg !16313
  %conv59 = sext i32 %65 to i64, !dbg !16313
  %66 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16316
  %bus_suspended60 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %66, i32 0, i32 44, !dbg !16317
  %call61 = call zeroext i1 @test_bit(i64 %conv59, i64* %bus_suspended60) #11, !dbg !16318
  br i1 %call61, label %if.then62, label %if.end68, !dbg !16319

if.then62:                                        ; preds = %while.body58
  call void @llvm.dbg.declare(metadata i32** %hostpc_reg, metadata !16320, metadata !DIExpression()), !dbg !16322
  %67 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16323
  %regs63 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %67, i32 0, i32 8, !dbg !16324
  %68 = load %struct.ehci_regs*, %struct.ehci_regs** %regs63, align 8, !dbg !16324
  %hostpc = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %68, i32 0, i32 15, !dbg !16325
  %69 = load i32, i32* %i, align 4, !dbg !16326
  %idxprom64 = sext i32 %69 to i64, !dbg !16323
  %arrayidx65 = getelementptr [0 x i32], [0 x i32]* %hostpc, i64 0, i64 %idxprom64, !dbg !16323
  store i32* %arrayidx65, i32** %hostpc_reg, align 8, !dbg !16322
  %70 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16327
  %71 = load i32*, i32** %hostpc_reg, align 8, !dbg !16328
  %call66 = call i32 @ehci_readl(%struct.ehci_hcd* %70, i32* %71) #11, !dbg !16329
  store i32 %call66, i32* %temp, align 4, !dbg !16330
  %72 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16331
  %73 = load i32, i32* %temp, align 4, !dbg !16332
  %and67 = and i32 %73, -4194305, !dbg !16333
  %74 = load i32*, i32** %hostpc_reg, align 8, !dbg !16334
  call void @ehci_writel(%struct.ehci_hcd* %72, i32 %and67, i32* %74) #11, !dbg !16335
  br label %if.end68, !dbg !16336

if.end68:                                         ; preds = %if.then62, %while.body58
  br label %while.cond55, !dbg !16311, !llvm.loop !16337

while.end69:                                      ; preds = %while.cond55
  %75 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16339
  %lock70 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %75, i32 0, i32 11, !dbg !16340
  store %struct.spinlock* %lock70, %struct.spinlock** %lock.addr.i166, align 8
  call void @arch_local_irq_enable() #12, !dbg !16341
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16342, !srcloc !6571
  %76 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i166, align 8, !dbg !16343
  %77 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %76, i32 0, i32 0, !dbg !16343
  %rlock.i167 = bitcast %union.anon.0* %77 to %struct.raw_spinlock*, !dbg !16343
  call void @msleep(i32 5) #11, !dbg !16344
  %78 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16345
  %lock71 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %78, i32 0, i32 11, !dbg !16346
  store %struct.spinlock* %lock71, %struct.spinlock** %lock.addr.i168, align 8
  call void @arch_local_irq_disable() #12, !dbg !16347
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16348, !srcloc !6536
  %79 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i168, align 8, !dbg !16349
  %80 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %79, i32 0, i32 0, !dbg !16349
  %rlock.i169 = bitcast %union.anon.0* %80 to %struct.raw_spinlock*, !dbg !16349
  %81 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16350
  %shutdown72 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %81, i32 0, i32 13, !dbg !16352
  %bf.load73 = load i8, i8* %shutdown72, align 8, !dbg !16352
  %bf.lshr74 = lshr i8 %bf.load73, 5, !dbg !16352
  %bf.clear75 = and i8 %bf.lshr74, 1, !dbg !16352
  %bf.cast76 = trunc i8 %bf.clear75 to i1, !dbg !16352
  br i1 %bf.cast76, label %if.then77, label %if.end78, !dbg !16353

if.then77:                                        ; preds = %while.end69
  br label %shutdown160, !dbg !16354

if.end78:                                         ; preds = %while.end69
  br label %if.end79, !dbg !16355

if.end79:                                         ; preds = %if.end78, %land.lhs.true45, %if.end43
  %82 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16356
  %hcs_params80 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %82, i32 0, i32 10, !dbg !16356
  %83 = load i32, i32* %hcs_params80, align 8, !dbg !16356
  %shr81 = lshr i32 %83, 0, !dbg !16356
  %and82 = and i32 %shr81, 15, !dbg !16356
  store i32 %and82, i32* %i, align 4, !dbg !16357
  br label %while.cond83, !dbg !16358

while.cond83:                                     ; preds = %if.end103, %if.end79
  %84 = load i32, i32* %i, align 4, !dbg !16359
  %dec84 = add i32 %84, -1, !dbg !16359
  store i32 %dec84, i32* %i, align 4, !dbg !16359
  %tobool85 = icmp ne i32 %84, 0, !dbg !16358
  br i1 %tobool85, label %while.body86, label %while.end108, !dbg !16358

while.body86:                                     ; preds = %while.cond83
  %85 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16360
  %86 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16362
  %regs87 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %86, i32 0, i32 8, !dbg !16363
  %87 = load %struct.ehci_regs*, %struct.ehci_regs** %regs87, align 8, !dbg !16363
  %port_status88 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %87, i32 0, i32 11, !dbg !16364
  %88 = load i32, i32* %i, align 4, !dbg !16365
  %idxprom89 = sext i32 %88 to i64, !dbg !16362
  %arrayidx90 = getelementptr [0 x i32], [0 x i32]* %port_status88, i64 0, i64 %idxprom89, !dbg !16362
  %call91 = call i32 @ehci_readl(%struct.ehci_hcd* %85, i32* %arrayidx90) #11, !dbg !16366
  store i32 %call91, i32* %temp, align 4, !dbg !16367
  %89 = load i32, i32* %temp, align 4, !dbg !16368
  %and92 = and i32 %89, -7340075, !dbg !16368
  store i32 %and92, i32* %temp, align 4, !dbg !16368
  %90 = load i32, i32* %i, align 4, !dbg !16369
  %conv93 = sext i32 %90 to i64, !dbg !16369
  %91 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16371
  %bus_suspended94 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %91, i32 0, i32 44, !dbg !16372
  %call95 = call zeroext i1 @test_bit(i64 %conv93, i64* %bus_suspended94) #11, !dbg !16373
  br i1 %call95, label %land.lhs.true97, label %if.end103, !dbg !16374

land.lhs.true97:                                  ; preds = %while.body86
  %92 = load i32, i32* %temp, align 4, !dbg !16375
  %and98 = and i32 %92, 128, !dbg !16376
  %tobool99 = icmp ne i32 %and98, 0, !dbg !16376
  br i1 %tobool99, label %if.then100, label %if.end103, !dbg !16377

if.then100:                                       ; preds = %land.lhs.true97
  %93 = load i32, i32* %temp, align 4, !dbg !16378
  %or101 = or i32 %93, 64, !dbg !16378
  store i32 %or101, i32* %temp, align 4, !dbg !16378
  %94 = load i32, i32* %i, align 4, !dbg !16380
  %conv102 = sext i32 %94 to i64, !dbg !16380
  call void @set_bit(i64 %conv102, i64* %resume_needed) #11, !dbg !16381
  br label %if.end103, !dbg !16382

if.end103:                                        ; preds = %if.then100, %land.lhs.true97, %while.body86
  %95 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16383
  %96 = load i32, i32* %temp, align 4, !dbg !16384
  %97 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16385
  %regs104 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %97, i32 0, i32 8, !dbg !16386
  %98 = load %struct.ehci_regs*, %struct.ehci_regs** %regs104, align 8, !dbg !16386
  %port_status105 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %98, i32 0, i32 11, !dbg !16387
  %99 = load i32, i32* %i, align 4, !dbg !16388
  %idxprom106 = sext i32 %99 to i64, !dbg !16385
  %arrayidx107 = getelementptr [0 x i32], [0 x i32]* %port_status105, i64 0, i64 %idxprom106, !dbg !16385
  call void @ehci_writel(%struct.ehci_hcd* %95, i32 %96, i32* %arrayidx107) #11, !dbg !16389
  br label %while.cond83, !dbg !16358, !llvm.loop !16390

while.end108:                                     ; preds = %while.cond83
  %100 = load i64, i64* %resume_needed, align 8, !dbg !16392
  %tobool109 = icmp ne i64 %100, 0, !dbg !16392
  br i1 %tobool109, label %if.then110, label %if.end120, !dbg !16393

if.then110:                                       ; preds = %while.end108
  %101 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16394
  %lock111 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %101, i32 0, i32 11, !dbg !16395
  store %struct.spinlock* %lock111, %struct.spinlock** %lock.addr.i170, align 8
  call void @arch_local_irq_enable() #12, !dbg !16396
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16397, !srcloc !6571
  %102 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i170, align 8, !dbg !16398
  %103 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %102, i32 0, i32 0, !dbg !16398
  %rlock.i171 = bitcast %union.anon.0* %103 to %struct.raw_spinlock*, !dbg !16398
  call void @msleep(i32 40) #11, !dbg !16399
  %104 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16400
  %lock112 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %104, i32 0, i32 11, !dbg !16401
  store %struct.spinlock* %lock112, %struct.spinlock** %lock.addr.i172, align 8
  call void @arch_local_irq_disable() #12, !dbg !16402
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16403, !srcloc !6536
  %105 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i172, align 8, !dbg !16404
  %106 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %105, i32 0, i32 0, !dbg !16404
  %rlock.i173 = bitcast %union.anon.0* %106 to %struct.raw_spinlock*, !dbg !16404
  %107 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16405
  %shutdown113 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %107, i32 0, i32 13, !dbg !16407
  %bf.load114 = load i8, i8* %shutdown113, align 8, !dbg !16407
  %bf.lshr115 = lshr i8 %bf.load114, 5, !dbg !16407
  %bf.clear116 = and i8 %bf.lshr115, 1, !dbg !16407
  %bf.cast117 = trunc i8 %bf.clear116 to i1, !dbg !16407
  br i1 %bf.cast117, label %if.then118, label %if.end119, !dbg !16408

if.then118:                                       ; preds = %if.then110
  br label %shutdown160, !dbg !16409

if.end119:                                        ; preds = %if.then110
  br label %if.end120, !dbg !16410

if.end120:                                        ; preds = %if.end119, %while.end108
  %108 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16411
  %hcs_params121 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %108, i32 0, i32 10, !dbg !16411
  %109 = load i32, i32* %hcs_params121, align 8, !dbg !16411
  %shr122 = lshr i32 %109, 0, !dbg !16411
  %and123 = and i32 %shr122, 15, !dbg !16411
  store i32 %and123, i32* %i, align 4, !dbg !16412
  br label %while.cond124, !dbg !16413

while.cond124:                                    ; preds = %if.end141, %if.end120
  %110 = load i32, i32* %i, align 4, !dbg !16414
  %dec125 = add i32 %110, -1, !dbg !16414
  store i32 %dec125, i32* %i, align 4, !dbg !16414
  %tobool126 = icmp ne i32 %110, 0, !dbg !16413
  br i1 %tobool126, label %while.body127, label %while.end142, !dbg !16413

while.body127:                                    ; preds = %while.cond124
  %111 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16415
  %112 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16417
  %regs128 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %112, i32 0, i32 8, !dbg !16418
  %113 = load %struct.ehci_regs*, %struct.ehci_regs** %regs128, align 8, !dbg !16418
  %port_status129 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %113, i32 0, i32 11, !dbg !16419
  %114 = load i32, i32* %i, align 4, !dbg !16420
  %idxprom130 = sext i32 %114 to i64, !dbg !16417
  %arrayidx131 = getelementptr [0 x i32], [0 x i32]* %port_status129, i64 0, i64 %idxprom130, !dbg !16417
  %call132 = call i32 @ehci_readl(%struct.ehci_hcd* %111, i32* %arrayidx131) #11, !dbg !16421
  store i32 %call132, i32* %temp, align 4, !dbg !16422
  %115 = load i32, i32* %i, align 4, !dbg !16423
  %conv133 = sext i32 %115 to i64, !dbg !16423
  %call134 = call zeroext i1 @test_bit(i64 %conv133, i64* %resume_needed) #11, !dbg !16425
  br i1 %call134, label %if.then135, label %if.end141, !dbg !16426

if.then135:                                       ; preds = %while.body127
  %116 = load i32, i32* %temp, align 4, !dbg !16427
  %and136 = and i32 %116, -235, !dbg !16427
  store i32 %and136, i32* %temp, align 4, !dbg !16427
  %117 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16429
  %118 = load i32, i32* %temp, align 4, !dbg !16430
  %119 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16431
  %regs137 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %119, i32 0, i32 8, !dbg !16432
  %120 = load %struct.ehci_regs*, %struct.ehci_regs** %regs137, align 8, !dbg !16432
  %port_status138 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %120, i32 0, i32 11, !dbg !16433
  %121 = load i32, i32* %i, align 4, !dbg !16434
  %idxprom139 = sext i32 %121 to i64, !dbg !16431
  %arrayidx140 = getelementptr [0 x i32], [0 x i32]* %port_status138, i64 0, i64 %idxprom139, !dbg !16431
  call void @ehci_writel(%struct.ehci_hcd* %117, i32 %118, i32* %arrayidx140) #11, !dbg !16435
  br label %if.end141, !dbg !16436

if.end141:                                        ; preds = %if.then135, %while.body127
  br label %while.cond124, !dbg !16413, !llvm.loop !16437

while.end142:                                     ; preds = %while.cond124
  %122 = load volatile i64, i64* @jiffies, align 8, !dbg !16439
  store i32 5, i32* %m.addr.i, align 4
  %123 = load i32, i32* %m.addr.i, align 4, !dbg !16440
  %124 = call i1 @llvm.is.constant.i32(i32 %123) #7, !dbg !16441
  br i1 %124, label %if.then.i, label %if.else.i, !dbg !16442

if.then.i:                                        ; preds = %while.end142
  %125 = load i32, i32* %m.addr.i, align 4, !dbg !16443
  %cmp.i = icmp slt i32 %125, 0, !dbg !16444
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !16445

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !16446
  br label %msecs_to_jiffies.exit, !dbg !16446

if.end.i:                                         ; preds = %if.then.i
  %126 = load i32, i32* %m.addr.i, align 4, !dbg !16447
  %call.i = call i64 @_msecs_to_jiffies(i32 %126) #12, !dbg !16448
  store i64 %call.i, i64* %retval.i, align 8, !dbg !16449
  br label %msecs_to_jiffies.exit, !dbg !16449

if.else.i:                                        ; preds = %while.end142
  %127 = load i32, i32* %m.addr.i, align 4, !dbg !16450
  %call2.i = call i64 @__msecs_to_jiffies(i32 %127) #12, !dbg !16451
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !16452
  br label %msecs_to_jiffies.exit, !dbg !16452

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %128 = load i64, i64* %retval.i, align 8, !dbg !16453
  %add = add i64 %122, %128, !dbg !16454
  %129 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16455
  %next_statechange144 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %129, i32 0, i32 55, !dbg !16456
  store i64 %add, i64* %next_statechange144, align 8, !dbg !16457
  %130 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16458
  %lock145 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %130, i32 0, i32 11, !dbg !16459
  store %struct.spinlock* %lock145, %struct.spinlock** %lock.addr.i174, align 8
  call void @arch_local_irq_enable() #12, !dbg !16460
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16461, !srcloc !6571
  %131 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i174, align 8, !dbg !16462
  %132 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %131, i32 0, i32 0, !dbg !16462
  %rlock.i175 = bitcast %union.anon.0* %132 to %struct.raw_spinlock*, !dbg !16462
  %133 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16463
  call void @ehci_handover_companion_ports(%struct.ehci_hcd* %133) #11, !dbg !16464
  %134 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16465
  %lock146 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %134, i32 0, i32 11, !dbg !16466
  store %struct.spinlock* %lock146, %struct.spinlock** %lock.addr.i176, align 8
  call void @arch_local_irq_disable() #12, !dbg !16467
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16468, !srcloc !6536
  %135 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i176, align 8, !dbg !16469
  %136 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %135, i32 0, i32 0, !dbg !16469
  %rlock.i177 = bitcast %union.anon.0* %136 to %struct.raw_spinlock*, !dbg !16469
  %137 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16470
  %shutdown147 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %137, i32 0, i32 13, !dbg !16472
  %bf.load148 = load i8, i8* %shutdown147, align 8, !dbg !16472
  %bf.lshr149 = lshr i8 %bf.load148, 5, !dbg !16472
  %bf.clear150 = and i8 %bf.lshr149, 1, !dbg !16472
  %bf.cast151 = trunc i8 %bf.clear150 to i1, !dbg !16472
  br i1 %bf.cast151, label %if.then152, label %if.end153, !dbg !16473

if.then152:                                       ; preds = %msecs_to_jiffies.exit
  br label %shutdown160, !dbg !16474

if.end153:                                        ; preds = %msecs_to_jiffies.exit
  %138 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16475
  %139 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16476
  %regs154 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %139, i32 0, i32 8, !dbg !16477
  %140 = load %struct.ehci_regs*, %struct.ehci_regs** %regs154, align 8, !dbg !16477
  %intr_enable155 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %140, i32 0, i32 2, !dbg !16478
  call void @ehci_writel(%struct.ehci_hcd* %138, i32 55, i32* %intr_enable155) #11, !dbg !16479
  %141 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16480
  %142 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16481
  %regs156 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %142, i32 0, i32 8, !dbg !16482
  %143 = load %struct.ehci_regs*, %struct.ehci_regs** %regs156, align 8, !dbg !16482
  %intr_enable157 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %143, i32 0, i32 2, !dbg !16483
  %call158 = call i32 @ehci_readl(%struct.ehci_hcd* %141, i32* %intr_enable157) #11, !dbg !16484
  %144 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16485
  %lock159 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %144, i32 0, i32 11, !dbg !16486
  store %struct.spinlock* %lock159, %struct.spinlock** %lock.addr.i178, align 8
  call void @arch_local_irq_enable() #12, !dbg !16487
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16488, !srcloc !6571
  %145 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i178, align 8, !dbg !16489
  %146 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %145, i32 0, i32 0, !dbg !16489
  %rlock.i179 = bitcast %union.anon.0* %146 to %struct.raw_spinlock*, !dbg !16489
  store i32 0, i32* %retval, align 4, !dbg !16490
  br label %return, !dbg !16490

shutdown160:                                      ; preds = %if.then152, %if.then118, %if.then77, %if.then42, %if.then1
  call void @llvm.dbg.label(metadata !16491), !dbg !16492
  %147 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16493
  %lock161 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %147, i32 0, i32 11, !dbg !16494
  store %struct.spinlock* %lock161, %struct.spinlock** %lock.addr.i180, align 8
  call void @arch_local_irq_enable() #12, !dbg !16495
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16496, !srcloc !6571
  %148 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i180, align 8, !dbg !16497
  %149 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %148, i32 0, i32 0, !dbg !16497
  %rlock.i181 = bitcast %union.anon.0* %149 to %struct.raw_spinlock*, !dbg !16497
  store i32 -108, i32* %retval, align 4, !dbg !16498
  br label %return, !dbg !16498

return:                                           ; preds = %shutdown160, %if.end153
  %150 = load i32, i32* %retval, align 4, !dbg !16499
  ret i32 %150, !dbg !16499
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ehci_get_resuming_ports(%struct.usb_hcd* %hcd) #0 !dbg !16500 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !16501, metadata !DIExpression()), !dbg !16502
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !16503, metadata !DIExpression()), !dbg !16504
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !16505
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !16506
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !16504
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16507
  %resuming_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 49, !dbg !16508
  %2 = load i64, i64* %resuming_ports, align 8, !dbg !16508
  ret i64 %2, !dbg !16509
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_relinquish_port(%struct.usb_hcd* %hcd, i32 %portnum) #0 !dbg !16510 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %portnum.addr = alloca i32, align 4
  %ehci = alloca %struct.ehci_hcd*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !16511, metadata !DIExpression()), !dbg !16512
  store i32 %portnum, i32* %portnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %portnum.addr, metadata !16513, metadata !DIExpression()), !dbg !16514
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !16515, metadata !DIExpression()), !dbg !16516
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !16517
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !16518
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !16516
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16519
  %2 = load i32, i32* %portnum.addr, align 4, !dbg !16520
  %dec = add i32 %2, -1, !dbg !16520
  store i32 %dec, i32* %portnum.addr, align 4, !dbg !16520
  call void @set_owner(%struct.ehci_hcd* %1, i32 %dec, i32 8192) #11, !dbg !16521
  ret void, !dbg !16522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ehci_port_handed_over(%struct.usb_hcd* %hcd, i32 %portnum) #0 !dbg !16523 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %portnum.addr = alloca i32, align 4
  %ehci = alloca %struct.ehci_hcd*, align 8
  %reg = alloca i32*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !16524, metadata !DIExpression()), !dbg !16525
  store i32 %portnum, i32* %portnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %portnum.addr, metadata !16526, metadata !DIExpression()), !dbg !16527
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !16528, metadata !DIExpression()), !dbg !16529
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !16530
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !16531
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !16529
  call void @llvm.dbg.declare(metadata i32** %reg, metadata !16532, metadata !DIExpression()), !dbg !16533
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16534
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 8, !dbg !16535
  %2 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !16535
  %port_status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %2, i32 0, i32 11, !dbg !16536
  %3 = load i32, i32* %portnum.addr, align 4, !dbg !16537
  %sub = sub i32 %3, 1, !dbg !16538
  %idxprom = sext i32 %sub to i64, !dbg !16534
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %port_status, i64 0, i64 %idxprom, !dbg !16534
  store i32* %arrayidx, i32** %reg, align 8, !dbg !16539
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16540
  %5 = load i32*, i32** %reg, align 8, !dbg !16541
  %call1 = call i32 @ehci_readl(%struct.ehci_hcd* %4, i32* %5) #11, !dbg !16542
  %and = and i32 %call1, 8192, !dbg !16543
  ret i32 %and, !dbg !16544
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_clear_tt_buffer_complete(%struct.usb_hcd* %hcd, %struct.usb_host_endpoint* %ep) #0 !dbg !16545 {
entry:
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !6709, metadata !DIExpression()), !dbg !16546
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !16548
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !16549
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ep.addr = alloca %struct.usb_host_endpoint*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %qh = alloca %struct.ehci_qh*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !16556, metadata !DIExpression()), !dbg !16557
  store %struct.usb_host_endpoint* %ep, %struct.usb_host_endpoint** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep.addr, metadata !16558, metadata !DIExpression()), !dbg !16559
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !16560, metadata !DIExpression()), !dbg !16561
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !16562
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !16563
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !16561
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !16564, metadata !DIExpression()), !dbg !16565
  %1 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !16566
  %hcpriv = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %1, i32 0, i32 5, !dbg !16567
  %2 = load i8*, i8** %hcpriv, align 8, !dbg !16567
  %3 = bitcast i8* %2 to %struct.ehci_qh*, !dbg !16566
  store %struct.ehci_qh* %3, %struct.ehci_qh** %qh, align 8, !dbg !16565
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16568, metadata !DIExpression()), !dbg !16569
  br label %do.body, !dbg !16570

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !16571

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16572, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16575, metadata !DIExpression()), !dbg !16574
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !16574
  %conv = zext i1 %cmp to i32, !dbg !16574
  store i32 1, i32* %tmp, align 4, !dbg !16574
  %4 = load i32, i32* %tmp, align 4, !dbg !16574
  br label %do.body2, !dbg !16576

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !16577

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !16578

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !16580, metadata !DIExpression()), !dbg !16583
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !16584, metadata !DIExpression()), !dbg !16583
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !16583
  %conv8 = zext i1 %cmp7 to i32, !dbg !16583
  store i32 1, i32* %tmp9, align 4, !dbg !16583
  %5 = load i32, i32* %tmp9, align 4, !dbg !16583
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !16585
  store i64 %call10, i64* %flags, align 8, !dbg !16585
  br label %do.end, !dbg !16585

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !16578

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !16577

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16586, !srcloc !16587
  br label %do.body13, !dbg !16586

do.body13:                                        ; preds = %do.body12
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16588
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 11, !dbg !16588
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16589
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !16590
  %rlock.i = bitcast %union.anon.0* %8 to %struct.raw_spinlock*, !dbg !16590
  br label %do.end15, !dbg !16588

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !16586

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !16577

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !16576

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !16571

do.end19:                                         ; preds = %do.end18
  %9 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !16591
  %clearing_tt = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %9, i32 0, i32 13, !dbg !16592
  %bf.load = load i8, i8* %clearing_tt, align 8, !dbg !16593
  %bf.clear = and i8 %bf.load, -3, !dbg !16593
  store i8 %bf.clear, i8* %clearing_tt, align 8, !dbg !16593
  %10 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !16594
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %10, i32 0, i32 9, !dbg !16596
  %11 = load i8, i8* %qh_state, align 4, !dbg !16596
  %conv20 = zext i8 %11 to i32, !dbg !16594
  %cmp21 = icmp eq i32 %conv20, 3, !dbg !16597
  br i1 %cmp21, label %land.lhs.true, label %if.end, !dbg !16598

land.lhs.true:                                    ; preds = %do.end19
  %12 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !16599
  %qtd_list = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %12, i32 0, i32 3, !dbg !16600
  %call23 = call i32 @list_empty(%struct.list_head* %qtd_list) #11, !dbg !16601
  %tobool = icmp ne i32 %call23, 0, !dbg !16601
  br i1 %tobool, label %if.end, label %land.lhs.true24, !dbg !16602

land.lhs.true24:                                  ; preds = %land.lhs.true
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16603
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %13, i32 0, i32 12, !dbg !16604
  %14 = load i32, i32* %rh_state, align 4, !dbg !16604
  %cmp25 = icmp eq i32 %14, 2, !dbg !16605
  br i1 %cmp25, label %if.then, label %if.end, !dbg !16606

if.then:                                          ; preds = %land.lhs.true24
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16607
  %16 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !16608
  call void @qh_link_async(%struct.ehci_hcd* %15, %struct.ehci_qh* %16) #11, !dbg !16609
  br label %if.end, !dbg !16609

if.end:                                           ; preds = %if.then, %land.lhs.true24, %land.lhs.true, %do.end19
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16610
  %lock27 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %17, i32 0, i32 11, !dbg !16611
  %18 = load i64, i64* %flags, align 8, !dbg !16612
  store %struct.spinlock* %lock27, %struct.spinlock** %lock.addr.i28, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !16613
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !16613
  store i32 1, i32* %tmp.i, align 4, !dbg !16613
  %19 = load i32, i32* %tmp.i, align 4, !dbg !16613
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !16614
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !16614
  store i32 1, i32* %tmp8.i, align 4, !dbg !16614
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !16614
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !16615
  call void @arch_local_irq_restore(i64 %21) #12, !dbg !16615
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16616, !srcloc !6997
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !16617
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !16617
  %rlock.i29 = bitcast %union.anon.0* %23 to %struct.raw_spinlock*, !dbg !16617
  ret void, !dbg !16618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_remove_device(%struct.usb_hcd* %hcd, %struct.usb_device* %udev) #0 !dbg !16619 {
entry:
  %lock.addr.i2 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i2, metadata !6492, metadata !DIExpression()), !dbg !16620
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6499, metadata !DIExpression()), !dbg !16622
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %udev.addr = alloca %struct.usb_device*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !16624, metadata !DIExpression()), !dbg !16625
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !16626, metadata !DIExpression()), !dbg !16627
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !16628, metadata !DIExpression()), !dbg !16629
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !16630
  %call = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %0) #11, !dbg !16631
  store %struct.ehci_hcd* %call, %struct.ehci_hcd** %ehci, align 8, !dbg !16629
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16632
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 11, !dbg !16633
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !16634
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16635, !srcloc !6536
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16636
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !16636
  %rlock.i = bitcast %union.anon.0* %3 to %struct.raw_spinlock*, !dbg !16636
  %4 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !16637
  call void @drop_tt(%struct.usb_device* %4) #11, !dbg !16638
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16639
  %lock1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 11, !dbg !16640
  store %struct.spinlock* %lock1, %struct.spinlock** %lock.addr.i2, align 8
  call void @arch_local_irq_enable() #12, !dbg !16641
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16642, !srcloc !6571
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i2, align 8, !dbg !16643
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !16643
  %rlock.i3 = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !16643
  ret void, !dbg !16644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dbg_status(%struct.ehci_hcd* %ehci, i8* %label, i32 %status) #0 !dbg !16645 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %label.addr = alloca i8*, align 8
  %status.addr = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !16646, metadata !DIExpression()), !dbg !16647
  store i8* %label, i8** %label.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %label.addr, metadata !16648, metadata !DIExpression()), !dbg !16649
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !16650, metadata !DIExpression()), !dbg !16651
  ret void, !dbg !16652
}

; Function Attrs: noredzone
declare dso_local void @usb_hc_died(%struct.usb_hcd*) #2

; Function Attrs: noredzone
declare dso_local void @usb_hcd_poll_rh_status(%struct.usb_hcd*) #2

; Function Attrs: noredzone
declare dso_local void @down_write(%struct.rw_semaphore*) #2

; Function Attrs: noredzone
declare dso_local void @up_write(%struct.rw_semaphore*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_get_real() #0 !dbg !16653 {
entry:
  %call = call i64 @ktime_get_with_offset(i32 0) #11, !dbg !16654
  ret i64 %call, !dbg !16655
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @create_debug_files(%struct.ehci_hcd* %bus) #0 !dbg !16656 {
entry:
  %bus.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %bus, %struct.ehci_hcd** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %bus.addr, metadata !16657, metadata !DIExpression()), !dbg !16658
  ret void, !dbg !16659
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @create_sysfs_files(%struct.ehci_hcd* %ehci) #0 !dbg !16660 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %controller = alloca %struct.device*, align 8
  %i = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !16661, metadata !DIExpression()), !dbg !16662
  call void @llvm.dbg.declare(metadata %struct.device** %controller, metadata !16663, metadata !DIExpression()), !dbg !16664
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !16665
  %call = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %0) #11, !dbg !16666
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call, i32 0, i32 0, !dbg !16667
  %controller1 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !16668
  %1 = load %struct.device*, %struct.device** %controller1, align 8, !dbg !16668
  store %struct.device* %1, %struct.device** %controller, align 8, !dbg !16664
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16669, metadata !DIExpression()), !dbg !16670
  store i32 0, i32* %i, align 4, !dbg !16670
  %2 = load %struct.device*, %struct.device** %controller, align 8, !dbg !16671
  %call2 = call i32 @device_create_file(%struct.device* %2, %struct.device_attribute* @dev_attr_companion) #11, !dbg !16673
  store i32 %call2, i32* %i, align 4, !dbg !16674
  %3 = load i32, i32* %i, align 4, !dbg !16675
  %tobool = icmp ne i32 %3, 0, !dbg !16675
  br i1 %tobool, label %if.then, label %if.end, !dbg !16677

if.then:                                          ; preds = %entry
  br label %out, !dbg !16678

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %controller, align 8, !dbg !16679
  %call3 = call i32 @device_create_file(%struct.device* %4, %struct.device_attribute* @dev_attr_uframe_periodic_max) #11, !dbg !16680
  store i32 %call3, i32* %i, align 4, !dbg !16681
  br label %out, !dbg !16682

out:                                              ; preds = %if.end, %if.then
  call void @llvm.dbg.label(metadata !16683), !dbg !16684
  %5 = load i32, i32* %i, align 4, !dbg !16685
  ret i32 %5, !dbg !16686
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get_with_offset(i32) #2

; Function Attrs: noredzone
declare dso_local i32 @device_create_file(%struct.device*, %struct.device_attribute*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @companion_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !16687 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %nports = alloca i32, align 4
  %index = alloca i32, align 4
  %n = alloca i32, align 4
  %count = alloca i32, align 4
  %ptr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16688, metadata !DIExpression()), !dbg !16689
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !16690, metadata !DIExpression()), !dbg !16691
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16692, metadata !DIExpression()), !dbg !16693
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !16694, metadata !DIExpression()), !dbg !16695
  call void @llvm.dbg.declare(metadata i32* %nports, metadata !16696, metadata !DIExpression()), !dbg !16697
  call void @llvm.dbg.declare(metadata i32* %index, metadata !16698, metadata !DIExpression()), !dbg !16699
  call void @llvm.dbg.declare(metadata i32* %n, metadata !16700, metadata !DIExpression()), !dbg !16701
  call void @llvm.dbg.declare(metadata i32* %count, metadata !16702, metadata !DIExpression()), !dbg !16703
  store i32 4096, i32* %count, align 4, !dbg !16703
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !16704, metadata !DIExpression()), !dbg !16705
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !16706
  store i8* %0, i8** %ptr, align 8, !dbg !16705
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16707
  %call = call i8* @dev_get_drvdata(%struct.device* %1) #11, !dbg !16708
  %2 = bitcast i8* %call to %struct.usb_hcd*, !dbg !16708
  %call1 = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %2) #11, !dbg !16709
  store %struct.ehci_hcd* %call1, %struct.ehci_hcd** %ehci, align 8, !dbg !16710
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16711
  %hcs_params = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 10, !dbg !16711
  %4 = load i32, i32* %hcs_params, align 8, !dbg !16711
  %shr = lshr i32 %4, 0, !dbg !16711
  %and = and i32 %shr, 15, !dbg !16711
  store i32 %and, i32* %nports, align 4, !dbg !16712
  store i32 0, i32* %index, align 4, !dbg !16713
  br label %for.cond, !dbg !16715

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %index, align 4, !dbg !16716
  %6 = load i32, i32* %nports, align 4, !dbg !16718
  %cmp = icmp slt i32 %5, %6, !dbg !16719
  br i1 %cmp, label %for.body, label %for.end, !dbg !16720

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %index, align 4, !dbg !16721
  %conv = sext i32 %7 to i64, !dbg !16721
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16724
  %companion_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 45, !dbg !16725
  %call2 = call zeroext i1 @test_bit(i64 %conv, i64* %companion_ports) #11, !dbg !16726
  br i1 %call2, label %if.then, label %if.end, !dbg !16727

if.then:                                          ; preds = %for.body
  %9 = load i8*, i8** %ptr, align 8, !dbg !16728
  %10 = load i32, i32* %count, align 4, !dbg !16730
  %conv3 = sext i32 %10 to i64, !dbg !16730
  %11 = load i32, i32* %index, align 4, !dbg !16731
  %add = add i32 %11, 1, !dbg !16732
  %call4 = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %9, i64 %conv3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0), i32 %add) #11, !dbg !16733
  store i32 %call4, i32* %n, align 4, !dbg !16734
  %12 = load i32, i32* %n, align 4, !dbg !16735
  %13 = load i8*, i8** %ptr, align 8, !dbg !16736
  %idx.ext = sext i32 %12 to i64, !dbg !16736
  %add.ptr = getelementptr i8, i8* %13, i64 %idx.ext, !dbg !16736
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !16736
  %14 = load i32, i32* %n, align 4, !dbg !16737
  %15 = load i32, i32* %count, align 4, !dbg !16738
  %sub = sub i32 %15, %14, !dbg !16738
  store i32 %sub, i32* %count, align 4, !dbg !16738
  br label %if.end, !dbg !16739

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !16740

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %index, align 4, !dbg !16741
  %inc = add i32 %16, 1, !dbg !16741
  store i32 %inc, i32* %index, align 4, !dbg !16741
  br label %for.cond, !dbg !16742, !llvm.loop !16743

for.end:                                          ; preds = %for.cond
  %17 = load i8*, i8** %ptr, align 8, !dbg !16745
  %18 = load i8*, i8** %buf.addr, align 8, !dbg !16746
  %sub.ptr.lhs.cast = ptrtoint i8* %17 to i64, !dbg !16747
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64, !dbg !16747
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16747
  ret i64 %sub.ptr.sub, !dbg !16748
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @companion_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !16749 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %portnum = alloca i32, align 4
  %new_owner = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16750, metadata !DIExpression()), !dbg !16751
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !16752, metadata !DIExpression()), !dbg !16753
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16754, metadata !DIExpression()), !dbg !16755
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !16756, metadata !DIExpression()), !dbg !16757
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !16758, metadata !DIExpression()), !dbg !16759
  call void @llvm.dbg.declare(metadata i32* %portnum, metadata !16760, metadata !DIExpression()), !dbg !16761
  call void @llvm.dbg.declare(metadata i32* %new_owner, metadata !16762, metadata !DIExpression()), !dbg !16763
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16764
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !16765
  %1 = bitcast i8* %call to %struct.usb_hcd*, !dbg !16765
  %call1 = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %1) #11, !dbg !16766
  store %struct.ehci_hcd* %call1, %struct.ehci_hcd** %ehci, align 8, !dbg !16767
  store i32 8192, i32* %new_owner, align 4, !dbg !16768
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !16769
  %call2 = call i32 (i8*, i8*, ...) @sscanf(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32* %portnum) #11, !dbg !16771
  %cmp = icmp ne i32 %call2, 1, !dbg !16772
  br i1 %cmp, label %if.then, label %if.end, !dbg !16773

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !16774
  br label %return, !dbg !16774

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %portnum, align 4, !dbg !16775
  %cmp3 = icmp slt i32 %3, 0, !dbg !16777
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !16778

if.then4:                                         ; preds = %if.end
  %4 = load i32, i32* %portnum, align 4, !dbg !16779
  %sub = sub i32 0, %4, !dbg !16781
  store i32 %sub, i32* %portnum, align 4, !dbg !16782
  store i32 0, i32* %new_owner, align 4, !dbg !16783
  br label %if.end5, !dbg !16784

if.end5:                                          ; preds = %if.then4, %if.end
  %5 = load i32, i32* %portnum, align 4, !dbg !16785
  %cmp6 = icmp sle i32 %5, 0, !dbg !16787
  br i1 %cmp6, label %if.then8, label %lor.lhs.false, !dbg !16788

lor.lhs.false:                                    ; preds = %if.end5
  %6 = load i32, i32* %portnum, align 4, !dbg !16789
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16790
  %hcs_params = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 10, !dbg !16790
  %8 = load i32, i32* %hcs_params, align 8, !dbg !16790
  %shr = lshr i32 %8, 0, !dbg !16790
  %and = and i32 %shr, 15, !dbg !16790
  %cmp7 = icmp ugt i32 %6, %and, !dbg !16791
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !16792

if.then8:                                         ; preds = %lor.lhs.false, %if.end5
  store i64 -2, i64* %retval, align 8, !dbg !16793
  br label %return, !dbg !16793

if.end9:                                          ; preds = %lor.lhs.false
  %9 = load i32, i32* %portnum, align 4, !dbg !16794
  %dec = add i32 %9, -1, !dbg !16794
  store i32 %dec, i32* %portnum, align 4, !dbg !16794
  %10 = load i32, i32* %new_owner, align 4, !dbg !16795
  %tobool = icmp ne i32 %10, 0, !dbg !16795
  br i1 %tobool, label %if.then10, label %if.else, !dbg !16797

if.then10:                                        ; preds = %if.end9
  %11 = load i32, i32* %portnum, align 4, !dbg !16798
  %conv = sext i32 %11 to i64, !dbg !16798
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16799
  %companion_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 45, !dbg !16800
  call void @set_bit(i64 %conv, i64* %companion_ports) #11, !dbg !16801
  br label %if.end13, !dbg !16801

if.else:                                          ; preds = %if.end9
  %13 = load i32, i32* %portnum, align 4, !dbg !16802
  %conv11 = sext i32 %13 to i64, !dbg !16802
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16803
  %companion_ports12 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 45, !dbg !16804
  call void @clear_bit(i64 %conv11, i64* %companion_ports12) #11, !dbg !16805
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then10
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16806
  %16 = load i32, i32* %portnum, align 4, !dbg !16807
  %17 = load i32, i32* %new_owner, align 4, !dbg !16808
  call void @set_owner(%struct.ehci_hcd* %15, i32 %16, i32 %17) #11, !dbg !16809
  %18 = load i64, i64* %count.addr, align 8, !dbg !16810
  store i64 %18, i64* %retval, align 8, !dbg !16811
  br label %return, !dbg !16811

return:                                           ; preds = %if.end13, %if.then8, %if.then
  %19 = load i64, i64* %retval, align 8, !dbg !16812
  ret i64 %19, !dbg !16812
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !16813 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16816, metadata !DIExpression()), !dbg !16817
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16818
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !16819
  %1 = load i8*, i8** %driver_data, align 8, !dbg !16819
  ret i8* %1, !dbg !16820
}

; Function Attrs: noredzone
declare dso_local i32 @scnprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @sscanf(i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_owner(%struct.ehci_hcd* %ehci, i32 %portnum, i32 %new_owner) #0 !dbg !16821 {
entry:
  %lock.addr.i10 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i10, metadata !6492, metadata !DIExpression()), !dbg !16824
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6499, metadata !DIExpression()), !dbg !16829
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %portnum.addr = alloca i32, align 4
  %new_owner.addr = alloca i32, align 4
  %status_reg = alloca i32*, align 8
  %port_status = alloca i32, align 4
  %try = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !16831, metadata !DIExpression()), !dbg !16832
  store i32 %portnum, i32* %portnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %portnum.addr, metadata !16833, metadata !DIExpression()), !dbg !16834
  store i32 %new_owner, i32* %new_owner.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_owner.addr, metadata !16835, metadata !DIExpression()), !dbg !16836
  call void @llvm.dbg.declare(metadata i32** %status_reg, metadata !16837, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.declare(metadata i32* %port_status, metadata !16839, metadata !DIExpression()), !dbg !16840
  call void @llvm.dbg.declare(metadata i32* %try, metadata !16841, metadata !DIExpression()), !dbg !16842
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !16843
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 8, !dbg !16844
  %1 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !16844
  %port_status1 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %1, i32 0, i32 11, !dbg !16845
  %2 = load i32, i32* %portnum.addr, align 4, !dbg !16846
  %idxprom = sext i32 %2 to i64, !dbg !16843
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %port_status1, i64 0, i64 %idxprom, !dbg !16843
  store i32* %arrayidx, i32** %status_reg, align 8, !dbg !16847
  store i32 4, i32* %try, align 4, !dbg !16848
  br label %for.cond, !dbg !16849

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %try, align 4, !dbg !16850
  %cmp = icmp sgt i32 %3, 0, !dbg !16851
  br i1 %cmp, label %for.body, label %for.end, !dbg !16852

for.body:                                         ; preds = %for.cond
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !16853
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 11, !dbg !16854
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !16855
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16856, !srcloc !6536
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16857
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !16857
  %rlock.i = bitcast %union.anon.0* %6 to %struct.raw_spinlock*, !dbg !16857
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !16858
  %8 = load i32*, i32** %status_reg, align 8, !dbg !16859
  %call = call i32 @ehci_readl(%struct.ehci_hcd* %7, i32* %8) #11, !dbg !16860
  store i32 %call, i32* %port_status, align 4, !dbg !16861
  %9 = load i32, i32* %port_status, align 4, !dbg !16862
  %and = and i32 %9, 8192, !dbg !16864
  %10 = load i32, i32* %new_owner.addr, align 4, !dbg !16865
  %cmp2 = icmp eq i32 %and, %10, !dbg !16866
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !16867

lor.lhs.false:                                    ; preds = %for.body
  %11 = load i32, i32* %port_status, align 4, !dbg !16868
  %and3 = and i32 %11, 8193, !dbg !16869
  %cmp4 = icmp eq i32 %and3, 0, !dbg !16870
  br i1 %cmp4, label %if.then, label %if.else, !dbg !16871

if.then:                                          ; preds = %lor.lhs.false, %for.body
  store i32 0, i32* %try, align 4, !dbg !16872
  br label %if.end, !dbg !16873

if.else:                                          ; preds = %lor.lhs.false
  %12 = load i32, i32* %port_status, align 4, !dbg !16874
  %xor = xor i32 %12, 8192, !dbg !16874
  store i32 %xor, i32* %port_status, align 4, !dbg !16874
  %13 = load i32, i32* %port_status, align 4, !dbg !16876
  %and5 = and i32 %13, -47, !dbg !16876
  store i32 %and5, i32* %port_status, align 4, !dbg !16876
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !16877
  %15 = load i32, i32* %port_status, align 4, !dbg !16878
  %16 = load i32*, i32** %status_reg, align 8, !dbg !16879
  call void @ehci_writel(%struct.ehci_hcd* %14, i32 %15, i32* %16) #11, !dbg !16880
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !16881
  %lock6 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %17, i32 0, i32 11, !dbg !16882
  store %struct.spinlock* %lock6, %struct.spinlock** %lock.addr.i10, align 8
  call void @arch_local_irq_enable() #12, !dbg !16883
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16884, !srcloc !6571
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i10, align 8, !dbg !16885
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !16885
  %rlock.i11 = bitcast %union.anon.0* %19 to %struct.raw_spinlock*, !dbg !16885
  %20 = load i32, i32* %try, align 4, !dbg !16886
  %cmp7 = icmp sgt i32 %20, 1, !dbg !16888
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !16889

if.then8:                                         ; preds = %if.end
  call void @msleep(i32 5) #11, !dbg !16890
  br label %if.end9, !dbg !16890

if.end9:                                          ; preds = %if.then8, %if.end
  br label %for.inc, !dbg !16891

for.inc:                                          ; preds = %if.end9
  %21 = load i32, i32* %try, align 4, !dbg !16892
  %dec = add i32 %21, -1, !dbg !16892
  store i32 %dec, i32* %try, align 4, !dbg !16892
  br label %for.cond, !dbg !16893, !llvm.loop !16894

for.end:                                          ; preds = %for.cond
  ret void, !dbg !16896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @uframe_periodic_max_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !16897 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %n = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16898, metadata !DIExpression()), !dbg !16899
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !16900, metadata !DIExpression()), !dbg !16901
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16902, metadata !DIExpression()), !dbg !16903
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !16904, metadata !DIExpression()), !dbg !16905
  call void @llvm.dbg.declare(metadata i32* %n, metadata !16906, metadata !DIExpression()), !dbg !16907
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16908
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !16909
  %1 = bitcast i8* %call to %struct.usb_hcd*, !dbg !16909
  %call1 = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %1) #11, !dbg !16910
  store %struct.ehci_hcd* %call1, %struct.ehci_hcd** %ehci, align 8, !dbg !16911
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !16912
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16913
  %uframe_periodic_max = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 38, !dbg !16914
  %4 = load i32, i32* %uframe_periodic_max, align 4, !dbg !16914
  %call2 = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %2, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0), i32 %4) #11, !dbg !16915
  store i32 %call2, i32* %n, align 4, !dbg !16916
  %5 = load i32, i32* %n, align 4, !dbg !16917
  %conv = sext i32 %5 to i64, !dbg !16917
  ret i64 %conv, !dbg !16918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @uframe_periodic_max_store(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf, i64 %count) #0 !dbg !16919 {
entry:
  %lock.addr.i64 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i64, metadata !6709, metadata !DIExpression()), !dbg !16920
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !16922
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !16923
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %ehci = alloca %struct.ehci_hcd*, align 8
  %uframe_periodic_max = alloca i32, align 4
  %uframe = alloca i32, align 4
  %flags = alloca i64, align 8
  %ret = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy13 = alloca i64, align 8
  %__dummy214 = alloca i64, align 8
  %tmp17 = alloca i32, align 4
  %allocated_max = alloca i8, align 1
  %__UNIQUE_ID___x367 = alloca i8, align 1
  %__UNIQUE_ID___y368 = alloca i8, align 1
  %tmp34 = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16930, metadata !DIExpression()), !dbg !16931
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !16932, metadata !DIExpression()), !dbg !16933
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !16934, metadata !DIExpression()), !dbg !16935
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !16936, metadata !DIExpression()), !dbg !16937
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci, metadata !16938, metadata !DIExpression()), !dbg !16939
  call void @llvm.dbg.declare(metadata i32* %uframe_periodic_max, metadata !16940, metadata !DIExpression()), !dbg !16941
  call void @llvm.dbg.declare(metadata i32* %uframe, metadata !16942, metadata !DIExpression()), !dbg !16943
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !16944, metadata !DIExpression()), !dbg !16945
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !16946, metadata !DIExpression()), !dbg !16947
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16948
  %call = call i8* @dev_get_drvdata(%struct.device* %0) #11, !dbg !16949
  %1 = bitcast i8* %call to %struct.usb_hcd*, !dbg !16949
  %call1 = call %struct.ehci_hcd* @hcd_to_ehci(%struct.usb_hcd* %1) #11, !dbg !16950
  store %struct.ehci_hcd* %call1, %struct.ehci_hcd** %ehci, align 8, !dbg !16951
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !16952
  %call2 = call i32 @kstrtouint(i8* %2, i32 0, i32* %uframe_periodic_max) #11, !dbg !16954
  %cmp = icmp slt i32 %call2, 0, !dbg !16955
  br i1 %cmp, label %if.then, label %if.end, !dbg !16956

if.then:                                          ; preds = %entry
  store i64 -22, i64* %retval, align 8, !dbg !16957
  br label %return, !dbg !16957

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %uframe_periodic_max, align 4, !dbg !16958
  %cmp3 = icmp ult i32 %3, 100, !dbg !16960
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !16961

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i32, i32* %uframe_periodic_max, align 4, !dbg !16962
  %cmp4 = icmp uge i32 %4, 125, !dbg !16963
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !16964

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16965
  %call6 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %5) #11, !dbg !16965
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call6, i32 0, i32 0, !dbg !16965
  %controller = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !16965
  %6 = load %struct.device*, %struct.device** %controller, align 8, !dbg !16965
  %7 = load i32, i32* %uframe_periodic_max, align 4, !dbg !16965
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %6, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.27, i64 0, i64 0), i32 %7) #13, !dbg !16965
  store i64 -22, i64* %retval, align 8, !dbg !16967
  br label %return, !dbg !16967

if.end7:                                          ; preds = %lor.lhs.false
  store i64 -22, i64* %ret, align 8, !dbg !16968
  br label %do.body, !dbg !16969

do.body:                                          ; preds = %if.end7
  br label %do.body8, !dbg !16970

do.body8:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !16971, metadata !DIExpression()), !dbg !16973
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !16974, metadata !DIExpression()), !dbg !16973
  %cmp9 = icmp eq i64* %__dummy, %__dummy2, !dbg !16973
  %conv = zext i1 %cmp9 to i32, !dbg !16973
  store i32 1, i32* %tmp, align 4, !dbg !16973
  %8 = load i32, i32* %tmp, align 4, !dbg !16973
  br label %do.body10, !dbg !16975

do.body10:                                        ; preds = %do.body8
  br label %do.body11, !dbg !16976

do.body11:                                        ; preds = %do.body10
  br label %do.body12, !dbg !16977

do.body12:                                        ; preds = %do.body11
  call void @llvm.dbg.declare(metadata i64* %__dummy13, metadata !16979, metadata !DIExpression()), !dbg !16982
  call void @llvm.dbg.declare(metadata i64* %__dummy214, metadata !16983, metadata !DIExpression()), !dbg !16982
  %cmp15 = icmp eq i64* %__dummy13, %__dummy214, !dbg !16982
  %conv16 = zext i1 %cmp15 to i32, !dbg !16982
  store i32 1, i32* %tmp17, align 4, !dbg !16982
  %9 = load i32, i32* %tmp17, align 4, !dbg !16982
  %call18 = call i64 @arch_local_irq_save() #11, !dbg !16984
  store i64 %call18, i64* %flags, align 8, !dbg !16984
  br label %do.end, !dbg !16984

do.end:                                           ; preds = %do.body12
  br label %do.end19, !dbg !16977

do.end19:                                         ; preds = %do.end
  br label %do.body20, !dbg !16976

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !16985, !srcloc !16986
  br label %do.body21, !dbg !16985

do.body21:                                        ; preds = %do.body20
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16987
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 11, !dbg !16987
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !16988
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !16989
  %rlock.i = bitcast %union.anon.0* %12 to %struct.raw_spinlock*, !dbg !16989
  br label %do.end23, !dbg !16987

do.end23:                                         ; preds = %do.body21
  br label %do.end24, !dbg !16985

do.end24:                                         ; preds = %do.end23
  br label %do.end25, !dbg !16976

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !16975

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !16970

do.end27:                                         ; preds = %do.end26
  %13 = load i32, i32* %uframe_periodic_max, align 4, !dbg !16990
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !16992
  %uframe_periodic_max28 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 38, !dbg !16993
  %15 = load i32, i32* %uframe_periodic_max28, align 4, !dbg !16993
  %cmp29 = icmp ult i32 %13, %15, !dbg !16994
  br i1 %cmp29, label %if.then31, label %if.end51, !dbg !16995

if.then31:                                        ; preds = %do.end27
  call void @llvm.dbg.declare(metadata i8* %allocated_max, metadata !16996, metadata !DIExpression()), !dbg !16998
  store i8 0, i8* %allocated_max, align 1, !dbg !16998
  store i32 0, i32* %uframe, align 4, !dbg !16999
  br label %for.cond, !dbg !17001

for.cond:                                         ; preds = %for.inc, %if.then31
  %16 = load i32, i32* %uframe, align 4, !dbg !17002
  %cmp32 = icmp ult i32 %16, 64, !dbg !17004
  br i1 %cmp32, label %for.body, label %for.end, !dbg !17005

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %__UNIQUE_ID___x367, metadata !17006, metadata !DIExpression()), !dbg !17008
  %17 = load i8, i8* %allocated_max, align 1, !dbg !17008
  store i8 %17, i8* %__UNIQUE_ID___x367, align 1, !dbg !17008
  call void @llvm.dbg.declare(metadata i8* %__UNIQUE_ID___y368, metadata !17009, metadata !DIExpression()), !dbg !17008
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !17008
  %bandwidth = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %18, i32 0, i32 62, !dbg !17008
  %19 = load i32, i32* %uframe, align 4, !dbg !17008
  %idxprom = zext i32 %19 to i64, !dbg !17008
  %arrayidx = getelementptr [64 x i8], [64 x i8]* %bandwidth, i64 0, i64 %idxprom, !dbg !17008
  %20 = load i8, i8* %arrayidx, align 1, !dbg !17008
  store i8 %20, i8* %__UNIQUE_ID___y368, align 1, !dbg !17008
  %21 = load i8, i8* %__UNIQUE_ID___x367, align 1, !dbg !17008
  %conv35 = zext i8 %21 to i32, !dbg !17008
  %22 = load i8, i8* %__UNIQUE_ID___y368, align 1, !dbg !17008
  %conv36 = zext i8 %22 to i32, !dbg !17008
  %cmp37 = icmp sgt i32 %conv35, %conv36, !dbg !17008
  br i1 %cmp37, label %cond.true, label %cond.false, !dbg !17008

cond.true:                                        ; preds = %for.body
  %23 = load i8, i8* %__UNIQUE_ID___x367, align 1, !dbg !17008
  %conv39 = zext i8 %23 to i32, !dbg !17008
  br label %cond.end, !dbg !17008

cond.false:                                       ; preds = %for.body
  %24 = load i8, i8* %__UNIQUE_ID___y368, align 1, !dbg !17008
  %conv40 = zext i8 %24 to i32, !dbg !17008
  br label %cond.end, !dbg !17008

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv39, %cond.true ], [ %conv40, %cond.false ], !dbg !17008
  store i32 %cond, i32* %tmp34, align 4, !dbg !17008
  %25 = load i32, i32* %tmp34, align 4, !dbg !17008
  %conv41 = trunc i32 %25 to i8, !dbg !17010
  store i8 %conv41, i8* %allocated_max, align 1, !dbg !17011
  br label %for.inc, !dbg !17012

for.inc:                                          ; preds = %cond.end
  %26 = load i32, i32* %uframe, align 4, !dbg !17013
  %inc = add i32 %26, 1, !dbg !17013
  store i32 %inc, i32* %uframe, align 4, !dbg !17013
  br label %for.cond, !dbg !17014, !llvm.loop !17015

for.end:                                          ; preds = %for.cond
  %27 = load i8, i8* %allocated_max, align 1, !dbg !17017
  %conv42 = zext i8 %27 to i32, !dbg !17017
  %28 = load i32, i32* %uframe_periodic_max, align 4, !dbg !17019
  %cmp43 = icmp ugt i32 %conv42, %28, !dbg !17020
  br i1 %cmp43, label %if.then45, label %if.end50, !dbg !17021

if.then45:                                        ; preds = %for.end
  %29 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !17022
  %call46 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %29) #11, !dbg !17022
  %self47 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call46, i32 0, i32 0, !dbg !17022
  %controller48 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self47, i32 0, i32 0, !dbg !17022
  %30 = load %struct.device*, %struct.device** %controller48, align 8, !dbg !17022
  %31 = load i8, i8* %allocated_max, align 1, !dbg !17022
  %conv49 = zext i8 %31 to i32, !dbg !17022
  %32 = load i32, i32* %uframe_periodic_max, align 4, !dbg !17022
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %30, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.28, i64 0, i64 0), i32 %conv49, i32 %32) #13, !dbg !17022
  br label %out_unlock, !dbg !17024

if.end50:                                         ; preds = %for.end
  br label %if.end51, !dbg !17025

if.end51:                                         ; preds = %if.end50, %do.end27
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !17026
  %call52 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %33) #11, !dbg !17026
  %self53 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call52, i32 0, i32 0, !dbg !17026
  %controller54 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self53, i32 0, i32 0, !dbg !17026
  %34 = load %struct.device*, %struct.device** %controller54, align 8, !dbg !17026
  %35 = load i32, i32* %uframe_periodic_max, align 4, !dbg !17026
  %mul = mul i32 100, %35, !dbg !17026
  %div = udiv i32 %mul, 125, !dbg !17026
  %36 = load i32, i32* %uframe_periodic_max, align 4, !dbg !17026
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %34, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.29, i64 0, i64 0), i32 %div, i32 %36) #13, !dbg !17026
  %37 = load i32, i32* %uframe_periodic_max, align 4, !dbg !17027
  %cmp55 = icmp ne i32 %37, 100, !dbg !17029
  br i1 %cmp55, label %if.then57, label %if.end61, !dbg !17030

if.then57:                                        ; preds = %if.end51
  %38 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !17031
  %call58 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %38) #11, !dbg !17031
  %self59 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call58, i32 0, i32 0, !dbg !17031
  %controller60 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self59, i32 0, i32 0, !dbg !17031
  %39 = load %struct.device*, %struct.device** %controller60, align 8, !dbg !17031
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %39, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.30, i64 0, i64 0)) #13, !dbg !17031
  br label %if.end61, !dbg !17031

if.end61:                                         ; preds = %if.then57, %if.end51
  %40 = load i32, i32* %uframe_periodic_max, align 4, !dbg !17032
  %41 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !17033
  %uframe_periodic_max62 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %41, i32 0, i32 38, !dbg !17034
  store i32 %40, i32* %uframe_periodic_max62, align 4, !dbg !17035
  %42 = load i64, i64* %count.addr, align 8, !dbg !17036
  store i64 %42, i64* %ret, align 8, !dbg !17037
  br label %out_unlock, !dbg !17038

out_unlock:                                       ; preds = %if.end61, %if.then45
  call void @llvm.dbg.label(metadata !17039), !dbg !17040
  %43 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci, align 8, !dbg !17041
  %lock63 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %43, i32 0, i32 11, !dbg !17042
  %44 = load i64, i64* %flags, align 8, !dbg !17043
  store %struct.spinlock* %lock63, %struct.spinlock** %lock.addr.i64, align 8
  store i64 %44, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !17044
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !17044
  store i32 1, i32* %tmp.i, align 4, !dbg !17044
  %45 = load i32, i32* %tmp.i, align 4, !dbg !17044
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !17045
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !17045
  store i32 1, i32* %tmp8.i, align 4, !dbg !17045
  %46 = load i32, i32* %tmp8.i, align 4, !dbg !17045
  %47 = load i64, i64* %flags.addr.i, align 8, !dbg !17046
  call void @arch_local_irq_restore(i64 %47) #12, !dbg !17046
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17047, !srcloc !6997
  %48 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i64, align 8, !dbg !17048
  %49 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %48, i32 0, i32 0, !dbg !17048
  %rlock.i65 = bitcast %union.anon.0* %49 to %struct.raw_spinlock*, !dbg !17048
  %50 = load i64, i64* %ret, align 8, !dbg !17049
  store i64 %50, i64* %retval, align 8, !dbg !17050
  br label %return, !dbg !17050

return:                                           ; preds = %out_unlock, %if.then5, %if.then
  %51 = load i64, i64* %retval, align 8, !dbg !17051
  ret i64 %51, !dbg !17051
}

; Function Attrs: noredzone
declare dso_local i32 @kstrtouint(i8*, i32, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_silence_controller(%struct.ehci_hcd* %ehci) #0 !dbg !17052 {
entry:
  %lock.addr.i5 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i5, metadata !6492, metadata !DIExpression()), !dbg !17053
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6499, metadata !DIExpression()), !dbg !17055
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !17057, metadata !DIExpression()), !dbg !17058
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17059
  %call = call i32 @ehci_halt(%struct.ehci_hcd* %0) #11, !dbg !17060
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17061
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 11, !dbg !17062
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !17063
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17064, !srcloc !6536
  %2 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17065
  %3 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %2, i32 0, i32 0, !dbg !17065
  %rlock.i = bitcast %union.anon.0* %3 to %struct.raw_spinlock*, !dbg !17065
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17066
  %rh_state = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %4, i32 0, i32 12, !dbg !17067
  store i32 0, i32* %rh_state, align 4, !dbg !17068
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17069
  call void @ehci_turn_off_all_ports(%struct.ehci_hcd* %5) #11, !dbg !17070
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17071
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17072
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 8, !dbg !17073
  %8 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !17073
  %configured_flag = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %8, i32 0, i32 10, !dbg !17074
  call void @ehci_writel(%struct.ehci_hcd* %6, i32 0, i32* %configured_flag) #11, !dbg !17075
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17076
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17077
  %regs1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 8, !dbg !17078
  %11 = load %struct.ehci_regs*, %struct.ehci_regs** %regs1, align 8, !dbg !17078
  %configured_flag2 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %11, i32 0, i32 10, !dbg !17079
  %call3 = call i32 @ehci_readl(%struct.ehci_hcd* %9, i32* %configured_flag2) #11, !dbg !17080
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17081
  %lock4 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 11, !dbg !17082
  store %struct.spinlock* %lock4, %struct.spinlock** %lock.addr.i5, align 8
  call void @arch_local_irq_enable() #12, !dbg !17083
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17084, !srcloc !6571
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i5, align 8, !dbg !17085
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !17085
  %rlock.i6 = bitcast %union.anon.0* %14 to %struct.raw_spinlock*, !dbg !17085
  ret void, !dbg !17086
}

; Function Attrs: noredzone
declare dso_local i32 @hrtimer_cancel(%struct.hrtimer*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @remove_sysfs_files(%struct.ehci_hcd* %ehci) #0 !dbg !17087 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %controller = alloca %struct.device*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !17088, metadata !DIExpression()), !dbg !17089
  call void @llvm.dbg.declare(metadata %struct.device** %controller, metadata !17090, metadata !DIExpression()), !dbg !17091
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17092
  %call = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %0) #11, !dbg !17093
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call, i32 0, i32 0, !dbg !17094
  %controller1 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 0, !dbg !17095
  %1 = load %struct.device*, %struct.device** %controller1, align 8, !dbg !17095
  store %struct.device* %1, %struct.device** %controller, align 8, !dbg !17091
  %2 = load %struct.device*, %struct.device** %controller, align 8, !dbg !17096
  call void @device_remove_file(%struct.device* %2, %struct.device_attribute* @dev_attr_companion) #11, !dbg !17098
  %3 = load %struct.device*, %struct.device** %controller, align 8, !dbg !17099
  call void @device_remove_file(%struct.device* %3, %struct.device_attribute* @dev_attr_uframe_periodic_max) #11, !dbg !17100
  ret void, !dbg !17101
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @remove_debug_files(%struct.ehci_hcd* %bus) #0 !dbg !17102 {
entry:
  %bus.addr = alloca %struct.ehci_hcd*, align 8
  store %struct.ehci_hcd* %bus, %struct.ehci_hcd** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %bus.addr, metadata !17103, metadata !DIExpression()), !dbg !17104
  ret void, !dbg !17105
}

; Function Attrs: noredzone
declare dso_local void @usb_amd_dev_put() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_turn_off_all_ports(%struct.ehci_hcd* %ehci) #0 !dbg !17106 {
entry:
  %lock.addr.i2 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i2, metadata !6499, metadata !DIExpression()), !dbg !17107
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6492, metadata !DIExpression()), !dbg !17110
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %port = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !17112, metadata !DIExpression()), !dbg !17113
  call void @llvm.dbg.declare(metadata i32* %port, metadata !17114, metadata !DIExpression()), !dbg !17115
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17116
  %hcs_params = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 10, !dbg !17116
  %1 = load i32, i32* %hcs_params, align 8, !dbg !17116
  %shr = lshr i32 %1, 0, !dbg !17116
  %and = and i32 %shr, 15, !dbg !17116
  store i32 %and, i32* %port, align 4, !dbg !17115
  br label %while.cond, !dbg !17117

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i32, i32* %port, align 4, !dbg !17118
  %dec = add i32 %2, -1, !dbg !17118
  store i32 %dec, i32* %port, align 4, !dbg !17118
  %tobool = icmp ne i32 %2, 0, !dbg !17117
  br i1 %tobool, label %while.body, label %while.end, !dbg !17117

while.body:                                       ; preds = %while.cond
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17119
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 11, !dbg !17120
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_enable() #12, !dbg !17121
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17122, !srcloc !6571
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17123
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !17123
  %rlock.i = bitcast %union.anon.0* %5 to %struct.raw_spinlock*, !dbg !17123
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17124
  %7 = load i32, i32* %port, align 4, !dbg !17125
  %call = call i32 @ehci_port_power(%struct.ehci_hcd* %6, i32 %7, i1 zeroext false) #11, !dbg !17126
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17127
  %lock1 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 11, !dbg !17128
  store %struct.spinlock* %lock1, %struct.spinlock** %lock.addr.i2, align 8
  call void @arch_local_irq_disable() #12, !dbg !17129
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17130, !srcloc !6536
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i2, align 8, !dbg !17131
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !17131
  %rlock.i3 = bitcast %union.anon.0* %10 to %struct.raw_spinlock*, !dbg !17131
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17132
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17133
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 8, !dbg !17134
  %13 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !17134
  %port_status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %13, i32 0, i32 11, !dbg !17135
  %14 = load i32, i32* %port, align 4, !dbg !17136
  %idxprom = sext i32 %14 to i64, !dbg !17133
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %port_status, i64 0, i64 %idxprom, !dbg !17133
  call void @ehci_writel(%struct.ehci_hcd* %11, i32 42, i32* %arrayidx) #11, !dbg !17137
  br label %while.cond, !dbg !17117, !llvm.loop !17138

while.end:                                        ; preds = %while.cond
  ret void, !dbg !17140
}

; Function Attrs: noredzone
declare dso_local void @device_remove_file(%struct.device*, %struct.device_attribute*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.list_head* @qh_urb_transaction(%struct.ehci_hcd* %ehci, %struct.urb* %urb, %struct.list_head* %head, i32 %flags) #0 !dbg !17141 {
entry:
  %retval = alloca %struct.list_head*, align 8
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  %flags.addr = alloca i32, align 4
  %qtd = alloca %struct.ehci_qtd*, align 8
  %qtd_prev = alloca %struct.ehci_qtd*, align 8
  %buf = alloca i64, align 8
  %len = alloca i32, align 4
  %this_sg_len = alloca i32, align 4
  %maxpacket = alloca i32, align 4
  %is_input = alloca i32, align 4
  %token = alloca i32, align 4
  %i = alloca i32, align 4
  %sg = alloca %struct.scatterlist*, align 8
  %__UNIQUE_ID___x326 = alloca i32, align 4
  %__UNIQUE_ID___y327 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %this_qtd_len = alloca i32, align 4
  %__UNIQUE_ID___x328 = alloca i32, align 4
  %__UNIQUE_ID___y329 = alloca i32, align 4
  %tmp86 = alloca i32, align 4
  %one_more = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !17144, metadata !DIExpression()), !dbg !17145
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !17146, metadata !DIExpression()), !dbg !17147
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !17148, metadata !DIExpression()), !dbg !17149
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17150, metadata !DIExpression()), !dbg !17151
  call void @llvm.dbg.declare(metadata %struct.ehci_qtd** %qtd, metadata !17152, metadata !DIExpression()), !dbg !17153
  call void @llvm.dbg.declare(metadata %struct.ehci_qtd** %qtd_prev, metadata !17154, metadata !DIExpression()), !dbg !17155
  call void @llvm.dbg.declare(metadata i64* %buf, metadata !17156, metadata !DIExpression()), !dbg !17157
  call void @llvm.dbg.declare(metadata i32* %len, metadata !17158, metadata !DIExpression()), !dbg !17159
  call void @llvm.dbg.declare(metadata i32* %this_sg_len, metadata !17160, metadata !DIExpression()), !dbg !17161
  call void @llvm.dbg.declare(metadata i32* %maxpacket, metadata !17162, metadata !DIExpression()), !dbg !17163
  call void @llvm.dbg.declare(metadata i32* %is_input, metadata !17164, metadata !DIExpression()), !dbg !17165
  call void @llvm.dbg.declare(metadata i32* %token, metadata !17166, metadata !DIExpression()), !dbg !17167
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17168, metadata !DIExpression()), !dbg !17169
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !17170, metadata !DIExpression()), !dbg !17171
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17172
  %1 = load i32, i32* %flags.addr, align 4, !dbg !17173
  %call = call %struct.ehci_qtd* @ehci_qtd_alloc(%struct.ehci_hcd* %0, i32 %1) #11, !dbg !17174
  store %struct.ehci_qtd* %call, %struct.ehci_qtd** %qtd, align 8, !dbg !17175
  %2 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17176
  %tobool = icmp ne %struct.ehci_qtd* %2, null, !dbg !17176
  %lnot = xor i1 %tobool, true, !dbg !17176
  %lnot1 = xor i1 %lnot, true, !dbg !17176
  %lnot2 = xor i1 %lnot1, true, !dbg !17176
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !17176
  %conv = sext i32 %lnot.ext to i64, !dbg !17176
  %tobool3 = icmp ne i64 %conv, 0, !dbg !17176
  br i1 %tobool3, label %if.then, label %if.end, !dbg !17178

if.then:                                          ; preds = %entry
  store %struct.list_head* null, %struct.list_head** %retval, align 8, !dbg !17179
  br label %return, !dbg !17179

if.end:                                           ; preds = %entry
  %3 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17180
  %qtd_list = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %3, i32 0, i32 6, !dbg !17181
  %4 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !17182
  call void @list_add_tail(%struct.list_head* %qtd_list, %struct.list_head* %4) #11, !dbg !17183
  %5 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17184
  %6 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17185
  %urb4 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %6, i32 0, i32 7, !dbg !17186
  store %struct.urb* %5, %struct.urb** %urb4, align 16, !dbg !17187
  store i32 128, i32* %token, align 4, !dbg !17188
  %7 = load i32, i32* %token, align 4, !dbg !17189
  %or = or i32 %7, 3072, !dbg !17189
  store i32 %or, i32* %token, align 4, !dbg !17189
  %8 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17190
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %8, i32 0, i32 19, !dbg !17191
  %9 = load i32, i32* %transfer_buffer_length, align 8, !dbg !17191
  store i32 %9, i32* %len, align 4, !dbg !17192
  %10 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17193
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %10, i32 0, i32 10, !dbg !17193
  %11 = load i32, i32* %pipe, align 8, !dbg !17193
  %and = and i32 %11, 128, !dbg !17193
  store i32 %and, i32* %is_input, align 4, !dbg !17194
  %12 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17195
  %pipe5 = getelementptr inbounds %struct.urb, %struct.urb* %12, i32 0, i32 10, !dbg !17195
  %13 = load i32, i32* %pipe5, align 8, !dbg !17195
  %shr = lshr i32 %13, 30, !dbg !17195
  %and6 = and i32 %shr, 3, !dbg !17195
  %cmp = icmp eq i32 %and6, 2, !dbg !17195
  br i1 %cmp, label %if.then8, label %if.end32, !dbg !17197

if.then8:                                         ; preds = %if.end
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17198
  %15 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17200
  %16 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17201
  %setup_dma = getelementptr inbounds %struct.urb, %struct.urb* %16, i32 0, i32 22, !dbg !17202
  %17 = load i64, i64* %setup_dma, align 8, !dbg !17202
  %18 = load i32, i32* %token, align 4, !dbg !17203
  %or9 = or i32 %18, 512, !dbg !17204
  %call10 = call i32 @qtd_fill(%struct.ehci_hcd* %14, %struct.ehci_qtd* %15, i64 %17, i64 8, i32 %or9, i32 8) #11, !dbg !17205
  %19 = load i32, i32* %token, align 4, !dbg !17206
  %xor = xor i32 %19, -2147483648, !dbg !17206
  store i32 %xor, i32* %token, align 4, !dbg !17206
  %20 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17207
  store %struct.ehci_qtd* %20, %struct.ehci_qtd** %qtd_prev, align 8, !dbg !17208
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17209
  %22 = load i32, i32* %flags.addr, align 4, !dbg !17210
  %call11 = call %struct.ehci_qtd* @ehci_qtd_alloc(%struct.ehci_hcd* %21, i32 %22) #11, !dbg !17211
  store %struct.ehci_qtd* %call11, %struct.ehci_qtd** %qtd, align 8, !dbg !17212
  %23 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17213
  %tobool12 = icmp ne %struct.ehci_qtd* %23, null, !dbg !17213
  %lnot13 = xor i1 %tobool12, true, !dbg !17213
  %lnot15 = xor i1 %lnot13, true, !dbg !17213
  %lnot17 = xor i1 %lnot15, true, !dbg !17213
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !17213
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !17213
  %tobool20 = icmp ne i64 %conv19, 0, !dbg !17213
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !17215

if.then21:                                        ; preds = %if.then8
  br label %cleanup, !dbg !17216

if.end22:                                         ; preds = %if.then8
  %24 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17217
  %25 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17218
  %urb23 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %25, i32 0, i32 7, !dbg !17219
  store %struct.urb* %24, %struct.urb** %urb23, align 16, !dbg !17220
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17221
  %27 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17221
  %qtd_dma = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %27, i32 0, i32 5, !dbg !17221
  %28 = load i64, i64* %qtd_dma, align 8, !dbg !17221
  %conv24 = trunc i64 %28 to i32, !dbg !17221
  %call25 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %26, i32 %conv24) #11, !dbg !17221
  %29 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd_prev, align 8, !dbg !17222
  %hw_next = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %29, i32 0, i32 0, !dbg !17223
  store i32 %call25, i32* %hw_next, align 32, !dbg !17224
  %30 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17225
  %qtd_list26 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %30, i32 0, i32 6, !dbg !17226
  %31 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !17227
  call void @list_add_tail(%struct.list_head* %qtd_list26, %struct.list_head* %31) #11, !dbg !17228
  %32 = load i32, i32* %len, align 4, !dbg !17229
  %cmp27 = icmp eq i32 %32, 0, !dbg !17231
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !17232

if.then29:                                        ; preds = %if.end22
  %33 = load i32, i32* %token, align 4, !dbg !17233
  %or30 = or i32 %33, 256, !dbg !17233
  store i32 %or30, i32* %token, align 4, !dbg !17233
  br label %if.end31, !dbg !17234

if.end31:                                         ; preds = %if.then29, %if.end22
  br label %if.end32, !dbg !17235

if.end32:                                         ; preds = %if.end31, %if.end
  %34 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17236
  %num_mapped_sgs = getelementptr inbounds %struct.urb, %struct.urb* %34, i32 0, i32 17, !dbg !17237
  %35 = load i32, i32* %num_mapped_sgs, align 8, !dbg !17237
  store i32 %35, i32* %i, align 4, !dbg !17238
  %36 = load i32, i32* %len, align 4, !dbg !17239
  %cmp33 = icmp sgt i32 %36, 0, !dbg !17241
  br i1 %cmp33, label %land.lhs.true, label %if.else, !dbg !17242

land.lhs.true:                                    ; preds = %if.end32
  %37 = load i32, i32* %i, align 4, !dbg !17243
  %cmp35 = icmp sgt i32 %37, 0, !dbg !17244
  br i1 %cmp35, label %if.then37, label %if.else, !dbg !17245

if.then37:                                        ; preds = %land.lhs.true
  %38 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17246
  %sg38 = getelementptr inbounds %struct.urb, %struct.urb* %38, i32 0, i32 16, !dbg !17248
  %39 = load %struct.scatterlist*, %struct.scatterlist** %sg38, align 8, !dbg !17248
  store %struct.scatterlist* %39, %struct.scatterlist** %sg, align 8, !dbg !17249
  %40 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !17250
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %40, i32 0, i32 3, !dbg !17250
  %41 = load i64, i64* %dma_address, align 8, !dbg !17250
  store i64 %41, i64* %buf, align 8, !dbg !17251
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x326, metadata !17252, metadata !DIExpression()), !dbg !17254
  %42 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !17254
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %42, i32 0, i32 4, !dbg !17254
  %43 = load i32, i32* %dma_length, align 8, !dbg !17254
  store i32 %43, i32* %__UNIQUE_ID___x326, align 4, !dbg !17254
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y327, metadata !17255, metadata !DIExpression()), !dbg !17254
  %44 = load i32, i32* %len, align 4, !dbg !17254
  store i32 %44, i32* %__UNIQUE_ID___y327, align 4, !dbg !17254
  %45 = load i32, i32* %__UNIQUE_ID___x326, align 4, !dbg !17254
  %46 = load i32, i32* %__UNIQUE_ID___y327, align 4, !dbg !17254
  %cmp39 = icmp slt i32 %45, %46, !dbg !17254
  br i1 %cmp39, label %cond.true, label %cond.false, !dbg !17254

cond.true:                                        ; preds = %if.then37
  %47 = load i32, i32* %__UNIQUE_ID___x326, align 4, !dbg !17254
  br label %cond.end, !dbg !17254

cond.false:                                       ; preds = %if.then37
  %48 = load i32, i32* %__UNIQUE_ID___y327, align 4, !dbg !17254
  br label %cond.end, !dbg !17254

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %47, %cond.true ], [ %48, %cond.false ], !dbg !17254
  store i32 %cond, i32* %tmp, align 4, !dbg !17254
  %49 = load i32, i32* %tmp, align 4, !dbg !17254
  store i32 %49, i32* %this_sg_len, align 4, !dbg !17256
  br label %if.end41, !dbg !17257

if.else:                                          ; preds = %land.lhs.true, %if.end32
  store %struct.scatterlist* null, %struct.scatterlist** %sg, align 8, !dbg !17258
  %50 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17260
  %transfer_dma = getelementptr inbounds %struct.urb, %struct.urb* %50, i32 0, i32 15, !dbg !17261
  %51 = load i64, i64* %transfer_dma, align 8, !dbg !17261
  store i64 %51, i64* %buf, align 8, !dbg !17262
  %52 = load i32, i32* %len, align 4, !dbg !17263
  store i32 %52, i32* %this_sg_len, align 4, !dbg !17264
  br label %if.end41

if.end41:                                         ; preds = %if.else, %cond.end
  %53 = load i32, i32* %is_input, align 4, !dbg !17265
  %tobool42 = icmp ne i32 %53, 0, !dbg !17265
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !17267

if.then43:                                        ; preds = %if.end41
  %54 = load i32, i32* %token, align 4, !dbg !17268
  %or44 = or i32 %54, 256, !dbg !17268
  store i32 %or44, i32* %token, align 4, !dbg !17268
  br label %if.end45, !dbg !17269

if.end45:                                         ; preds = %if.then43, %if.end41
  %55 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17270
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %55, i32 0, i32 8, !dbg !17271
  %56 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !17271
  %57 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17272
  %pipe46 = getelementptr inbounds %struct.urb, %struct.urb* %57, i32 0, i32 10, !dbg !17273
  %58 = load i32, i32* %pipe46, align 8, !dbg !17273
  %59 = load i32, i32* %is_input, align 4, !dbg !17274
  %tobool47 = icmp ne i32 %59, 0, !dbg !17275
  %lnot48 = xor i1 %tobool47, true, !dbg !17275
  %lnot.ext49 = zext i1 %lnot48 to i32, !dbg !17275
  %call50 = call zeroext i16 @usb_maxpacket(%struct.usb_device* %56, i32 %58, i32 %lnot.ext49) #11, !dbg !17276
  %conv51 = zext i16 %call50 to i32, !dbg !17276
  store i32 %conv51, i32* %maxpacket, align 4, !dbg !17277
  br label %for.cond, !dbg !17278

for.cond:                                         ; preds = %if.end105, %if.end45
  call void @llvm.dbg.declare(metadata i32* %this_qtd_len, metadata !17279, metadata !DIExpression()), !dbg !17283
  %60 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17284
  %61 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17285
  %62 = load i64, i64* %buf, align 8, !dbg !17286
  %63 = load i32, i32* %this_sg_len, align 4, !dbg !17287
  %conv52 = sext i32 %63 to i64, !dbg !17287
  %64 = load i32, i32* %token, align 4, !dbg !17288
  %65 = load i32, i32* %maxpacket, align 4, !dbg !17289
  %call53 = call i32 @qtd_fill(%struct.ehci_hcd* %60, %struct.ehci_qtd* %61, i64 %62, i64 %conv52, i32 %64, i32 %65) #11, !dbg !17290
  store i32 %call53, i32* %this_qtd_len, align 4, !dbg !17291
  %66 = load i32, i32* %this_qtd_len, align 4, !dbg !17292
  %67 = load i32, i32* %this_sg_len, align 4, !dbg !17293
  %sub = sub i32 %67, %66, !dbg !17293
  store i32 %sub, i32* %this_sg_len, align 4, !dbg !17293
  %68 = load i32, i32* %this_qtd_len, align 4, !dbg !17294
  %69 = load i32, i32* %len, align 4, !dbg !17295
  %sub54 = sub i32 %69, %68, !dbg !17295
  store i32 %sub54, i32* %len, align 4, !dbg !17295
  %70 = load i32, i32* %this_qtd_len, align 4, !dbg !17296
  %conv55 = sext i32 %70 to i64, !dbg !17296
  %71 = load i64, i64* %buf, align 8, !dbg !17297
  %add = add i64 %71, %conv55, !dbg !17297
  store i64 %add, i64* %buf, align 8, !dbg !17297
  %72 = load i32, i32* %is_input, align 4, !dbg !17298
  %tobool56 = icmp ne i32 %72, 0, !dbg !17298
  br i1 %tobool56, label %if.then57, label %if.end59, !dbg !17300

if.then57:                                        ; preds = %for.cond
  %73 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17301
  %async = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %73, i32 0, i32 15, !dbg !17302
  %74 = load %struct.ehci_qh*, %struct.ehci_qh** %async, align 8, !dbg !17302
  %hw = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %74, i32 0, i32 0, !dbg !17303
  %75 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !17303
  %hw_alt_next = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %75, i32 0, i32 5, !dbg !17304
  %76 = load i32, i32* %hw_alt_next, align 4, !dbg !17304
  %77 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17305
  %hw_alt_next58 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %77, i32 0, i32 1, !dbg !17306
  store i32 %76, i32* %hw_alt_next58, align 4, !dbg !17307
  br label %if.end59, !dbg !17305

if.end59:                                         ; preds = %if.then57, %for.cond
  %78 = load i32, i32* %maxpacket, align 4, !dbg !17308
  %79 = load i32, i32* %this_qtd_len, align 4, !dbg !17310
  %80 = load i32, i32* %maxpacket, align 4, !dbg !17311
  %sub60 = sub i32 %80, 1, !dbg !17312
  %add61 = add i32 %79, %sub60, !dbg !17313
  %and62 = and i32 %78, %add61, !dbg !17314
  %cmp63 = icmp eq i32 %and62, 0, !dbg !17315
  br i1 %cmp63, label %if.then65, label %if.end67, !dbg !17316

if.then65:                                        ; preds = %if.end59
  %81 = load i32, i32* %token, align 4, !dbg !17317
  %xor66 = xor i32 %81, -2147483648, !dbg !17317
  store i32 %xor66, i32* %token, align 4, !dbg !17317
  br label %if.end67, !dbg !17318

if.end67:                                         ; preds = %if.then65, %if.end59
  %82 = load i32, i32* %this_sg_len, align 4, !dbg !17319
  %cmp68 = icmp sle i32 %82, 0, !dbg !17319
  %lnot70 = xor i1 %cmp68, true, !dbg !17319
  %lnot72 = xor i1 %lnot70, true, !dbg !17319
  %lnot.ext73 = zext i1 %lnot72 to i32, !dbg !17319
  %conv74 = sext i32 %lnot.ext73 to i64, !dbg !17319
  %tobool75 = icmp ne i64 %conv74, 0, !dbg !17319
  br i1 %tobool75, label %if.then76, label %if.end93, !dbg !17321

if.then76:                                        ; preds = %if.end67
  %83 = load i32, i32* %i, align 4, !dbg !17322
  %dec = add i32 %83, -1, !dbg !17322
  store i32 %dec, i32* %i, align 4, !dbg !17322
  %cmp77 = icmp sle i32 %dec, 0, !dbg !17325
  br i1 %cmp77, label %if.then81, label %lor.lhs.false, !dbg !17326

lor.lhs.false:                                    ; preds = %if.then76
  %84 = load i32, i32* %len, align 4, !dbg !17327
  %cmp79 = icmp sle i32 %84, 0, !dbg !17328
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !17329

if.then81:                                        ; preds = %lor.lhs.false, %if.then76
  br label %for.end, !dbg !17330

if.end82:                                         ; preds = %lor.lhs.false
  %85 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !17331
  %call83 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %85) #11, !dbg !17332
  store %struct.scatterlist* %call83, %struct.scatterlist** %sg, align 8, !dbg !17333
  %86 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !17334
  %dma_address84 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %86, i32 0, i32 3, !dbg !17334
  %87 = load i64, i64* %dma_address84, align 8, !dbg !17334
  store i64 %87, i64* %buf, align 8, !dbg !17335
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x328, metadata !17336, metadata !DIExpression()), !dbg !17338
  %88 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !17338
  %dma_length85 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %88, i32 0, i32 4, !dbg !17338
  %89 = load i32, i32* %dma_length85, align 8, !dbg !17338
  store i32 %89, i32* %__UNIQUE_ID___x328, align 4, !dbg !17338
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y329, metadata !17339, metadata !DIExpression()), !dbg !17338
  %90 = load i32, i32* %len, align 4, !dbg !17338
  store i32 %90, i32* %__UNIQUE_ID___y329, align 4, !dbg !17338
  %91 = load i32, i32* %__UNIQUE_ID___x328, align 4, !dbg !17338
  %92 = load i32, i32* %__UNIQUE_ID___y329, align 4, !dbg !17338
  %cmp87 = icmp slt i32 %91, %92, !dbg !17338
  br i1 %cmp87, label %cond.true89, label %cond.false90, !dbg !17338

cond.true89:                                      ; preds = %if.end82
  %93 = load i32, i32* %__UNIQUE_ID___x328, align 4, !dbg !17338
  br label %cond.end91, !dbg !17338

cond.false90:                                     ; preds = %if.end82
  %94 = load i32, i32* %__UNIQUE_ID___y329, align 4, !dbg !17338
  br label %cond.end91, !dbg !17338

cond.end91:                                       ; preds = %cond.false90, %cond.true89
  %cond92 = phi i32 [ %93, %cond.true89 ], [ %94, %cond.false90 ], !dbg !17338
  store i32 %cond92, i32* %tmp86, align 4, !dbg !17338
  %95 = load i32, i32* %tmp86, align 4, !dbg !17338
  store i32 %95, i32* %this_sg_len, align 4, !dbg !17340
  br label %if.end93, !dbg !17341

if.end93:                                         ; preds = %cond.end91, %if.end67
  %96 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17342
  store %struct.ehci_qtd* %96, %struct.ehci_qtd** %qtd_prev, align 8, !dbg !17343
  %97 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17344
  %98 = load i32, i32* %flags.addr, align 4, !dbg !17345
  %call94 = call %struct.ehci_qtd* @ehci_qtd_alloc(%struct.ehci_hcd* %97, i32 %98) #11, !dbg !17346
  store %struct.ehci_qtd* %call94, %struct.ehci_qtd** %qtd, align 8, !dbg !17347
  %99 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17348
  %tobool95 = icmp ne %struct.ehci_qtd* %99, null, !dbg !17348
  %lnot96 = xor i1 %tobool95, true, !dbg !17348
  %lnot98 = xor i1 %lnot96, true, !dbg !17348
  %lnot100 = xor i1 %lnot98, true, !dbg !17348
  %lnot.ext101 = zext i1 %lnot100 to i32, !dbg !17348
  %conv102 = sext i32 %lnot.ext101 to i64, !dbg !17348
  %tobool103 = icmp ne i64 %conv102, 0, !dbg !17348
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !17350

if.then104:                                       ; preds = %if.end93
  br label %cleanup, !dbg !17351

if.end105:                                        ; preds = %if.end93
  %100 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17352
  %101 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17353
  %urb106 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %101, i32 0, i32 7, !dbg !17354
  store %struct.urb* %100, %struct.urb** %urb106, align 16, !dbg !17355
  %102 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17356
  %103 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17356
  %qtd_dma107 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %103, i32 0, i32 5, !dbg !17356
  %104 = load i64, i64* %qtd_dma107, align 8, !dbg !17356
  %conv108 = trunc i64 %104 to i32, !dbg !17356
  %call109 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %102, i32 %conv108) #11, !dbg !17356
  %105 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd_prev, align 8, !dbg !17357
  %hw_next110 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %105, i32 0, i32 0, !dbg !17358
  store i32 %call109, i32* %hw_next110, align 32, !dbg !17359
  %106 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17360
  %qtd_list111 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %106, i32 0, i32 6, !dbg !17361
  %107 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !17362
  call void @list_add_tail(%struct.list_head* %qtd_list111, %struct.list_head* %107) #11, !dbg !17363
  br label %for.cond, !dbg !17364, !llvm.loop !17365

for.end:                                          ; preds = %if.then81
  %108 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17368
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %108, i32 0, i32 13, !dbg !17368
  %109 = load i32, i32* %transfer_flags, align 4, !dbg !17368
  %and112 = and i32 %109, 1, !dbg !17368
  %cmp113 = icmp eq i32 %and112, 0, !dbg !17368
  br i1 %cmp113, label %lor.end, label %lor.rhs, !dbg !17368

lor.rhs:                                          ; preds = %for.end
  %110 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17368
  %pipe115 = getelementptr inbounds %struct.urb, %struct.urb* %110, i32 0, i32 10, !dbg !17368
  %111 = load i32, i32* %pipe115, align 8, !dbg !17368
  %shr116 = lshr i32 %111, 30, !dbg !17368
  %and117 = and i32 %shr116, 3, !dbg !17368
  %cmp118 = icmp eq i32 %and117, 2, !dbg !17368
  br label %lor.end, !dbg !17368

lor.end:                                          ; preds = %lor.rhs, %for.end
  %112 = phi i1 [ true, %for.end ], [ %cmp118, %lor.rhs ]
  %lnot120 = xor i1 %112, true, !dbg !17368
  %lnot122 = xor i1 %lnot120, true, !dbg !17368
  %lnot.ext123 = zext i1 %lnot122 to i32, !dbg !17368
  %conv124 = sext i32 %lnot.ext123 to i64, !dbg !17368
  %tobool125 = icmp ne i64 %conv124, 0, !dbg !17368
  br i1 %tobool125, label %if.then126, label %if.end129, !dbg !17370

if.then126:                                       ; preds = %lor.end
  %113 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17371
  %call127 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %113, i32 1) #11, !dbg !17371
  %114 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17372
  %hw_alt_next128 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %114, i32 0, i32 1, !dbg !17373
  store i32 %call127, i32* %hw_alt_next128, align 4, !dbg !17374
  br label %if.end129, !dbg !17372

if.end129:                                        ; preds = %if.then126, %lor.end
  %115 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17375
  %transfer_buffer_length130 = getelementptr inbounds %struct.urb, %struct.urb* %115, i32 0, i32 19, !dbg !17375
  %116 = load i32, i32* %transfer_buffer_length130, align 8, !dbg !17375
  %cmp131 = icmp ne i32 %116, 0, !dbg !17375
  %lnot133 = xor i1 %cmp131, true, !dbg !17375
  %lnot135 = xor i1 %lnot133, true, !dbg !17375
  %lnot.ext136 = zext i1 %lnot135 to i32, !dbg !17375
  %conv137 = sext i32 %lnot.ext136 to i64, !dbg !17375
  %tobool138 = icmp ne i64 %conv137, 0, !dbg !17375
  br i1 %tobool138, label %if.then139, label %if.end184, !dbg !17377

if.then139:                                       ; preds = %if.end129
  call void @llvm.dbg.declare(metadata i32* %one_more, metadata !17378, metadata !DIExpression()), !dbg !17380
  store i32 0, i32* %one_more, align 4, !dbg !17380
  %117 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17381
  %pipe140 = getelementptr inbounds %struct.urb, %struct.urb* %117, i32 0, i32 10, !dbg !17381
  %118 = load i32, i32* %pipe140, align 8, !dbg !17381
  %shr141 = lshr i32 %118, 30, !dbg !17381
  %and142 = and i32 %shr141, 3, !dbg !17381
  %cmp143 = icmp eq i32 %and142, 2, !dbg !17381
  br i1 %cmp143, label %if.then145, label %if.else148, !dbg !17383

if.then145:                                       ; preds = %if.then139
  store i32 1, i32* %one_more, align 4, !dbg !17384
  %119 = load i32, i32* %token, align 4, !dbg !17386
  %xor146 = xor i32 %119, 256, !dbg !17386
  store i32 %xor146, i32* %token, align 4, !dbg !17386
  %120 = load i32, i32* %token, align 4, !dbg !17387
  %or147 = or i32 %120, -2147483648, !dbg !17387
  store i32 %or147, i32* %token, align 4, !dbg !17387
  br label %if.end161, !dbg !17388

if.else148:                                       ; preds = %if.then139
  %121 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17389
  %pipe149 = getelementptr inbounds %struct.urb, %struct.urb* %121, i32 0, i32 10, !dbg !17389
  %122 = load i32, i32* %pipe149, align 8, !dbg !17389
  %and150 = and i32 %122, 128, !dbg !17389
  %tobool151 = icmp ne i32 %and150, 0, !dbg !17389
  br i1 %tobool151, label %if.end160, label %land.lhs.true152, !dbg !17391

land.lhs.true152:                                 ; preds = %if.else148
  %123 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17392
  %transfer_flags153 = getelementptr inbounds %struct.urb, %struct.urb* %123, i32 0, i32 13, !dbg !17393
  %124 = load i32, i32* %transfer_flags153, align 4, !dbg !17393
  %and154 = and i32 %124, 64, !dbg !17394
  %tobool155 = icmp ne i32 %and154, 0, !dbg !17394
  br i1 %tobool155, label %land.lhs.true156, label %if.end160, !dbg !17395

land.lhs.true156:                                 ; preds = %land.lhs.true152
  %125 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17396
  %transfer_buffer_length157 = getelementptr inbounds %struct.urb, %struct.urb* %125, i32 0, i32 19, !dbg !17397
  %126 = load i32, i32* %transfer_buffer_length157, align 8, !dbg !17397
  %127 = load i32, i32* %maxpacket, align 4, !dbg !17398
  %rem = urem i32 %126, %127, !dbg !17399
  %tobool158 = icmp ne i32 %rem, 0, !dbg !17399
  br i1 %tobool158, label %if.end160, label %if.then159, !dbg !17400

if.then159:                                       ; preds = %land.lhs.true156
  store i32 1, i32* %one_more, align 4, !dbg !17401
  br label %if.end160, !dbg !17403

if.end160:                                        ; preds = %if.then159, %land.lhs.true156, %land.lhs.true152, %if.else148
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then145
  %128 = load i32, i32* %one_more, align 4, !dbg !17404
  %tobool162 = icmp ne i32 %128, 0, !dbg !17404
  br i1 %tobool162, label %if.then163, label %if.end183, !dbg !17406

if.then163:                                       ; preds = %if.end161
  %129 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17407
  store %struct.ehci_qtd* %129, %struct.ehci_qtd** %qtd_prev, align 8, !dbg !17409
  %130 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17410
  %131 = load i32, i32* %flags.addr, align 4, !dbg !17411
  %call164 = call %struct.ehci_qtd* @ehci_qtd_alloc(%struct.ehci_hcd* %130, i32 %131) #11, !dbg !17412
  store %struct.ehci_qtd* %call164, %struct.ehci_qtd** %qtd, align 8, !dbg !17413
  %132 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17414
  %tobool165 = icmp ne %struct.ehci_qtd* %132, null, !dbg !17414
  %lnot166 = xor i1 %tobool165, true, !dbg !17414
  %lnot168 = xor i1 %lnot166, true, !dbg !17414
  %lnot170 = xor i1 %lnot168, true, !dbg !17414
  %lnot.ext171 = zext i1 %lnot170 to i32, !dbg !17414
  %conv172 = sext i32 %lnot.ext171 to i64, !dbg !17414
  %tobool173 = icmp ne i64 %conv172, 0, !dbg !17414
  br i1 %tobool173, label %if.then174, label %if.end175, !dbg !17416

if.then174:                                       ; preds = %if.then163
  br label %cleanup, !dbg !17417

if.end175:                                        ; preds = %if.then163
  %133 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17418
  %134 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17419
  %urb176 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %134, i32 0, i32 7, !dbg !17420
  store %struct.urb* %133, %struct.urb** %urb176, align 16, !dbg !17421
  %135 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17422
  %136 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17422
  %qtd_dma177 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %136, i32 0, i32 5, !dbg !17422
  %137 = load i64, i64* %qtd_dma177, align 8, !dbg !17422
  %conv178 = trunc i64 %137 to i32, !dbg !17422
  %call179 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %135, i32 %conv178) #11, !dbg !17422
  %138 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd_prev, align 8, !dbg !17423
  %hw_next180 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %138, i32 0, i32 0, !dbg !17424
  store i32 %call179, i32* %hw_next180, align 32, !dbg !17425
  %139 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17426
  %qtd_list181 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %139, i32 0, i32 6, !dbg !17427
  %140 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !17428
  call void @list_add_tail(%struct.list_head* %qtd_list181, %struct.list_head* %140) #11, !dbg !17429
  %141 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17430
  %142 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17431
  %143 = load i32, i32* %token, align 4, !dbg !17432
  %call182 = call i32 @qtd_fill(%struct.ehci_hcd* %141, %struct.ehci_qtd* %142, i64 0, i64 0, i32 %143, i32 0) #11, !dbg !17433
  br label %if.end183, !dbg !17434

if.end183:                                        ; preds = %if.end175, %if.end161
  br label %if.end184, !dbg !17435

if.end184:                                        ; preds = %if.end183, %if.end129
  %144 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17436
  %transfer_flags185 = getelementptr inbounds %struct.urb, %struct.urb* %144, i32 0, i32 13, !dbg !17436
  %145 = load i32, i32* %transfer_flags185, align 4, !dbg !17436
  %and186 = and i32 %145, 128, !dbg !17436
  %tobool187 = icmp ne i32 %and186, 0, !dbg !17436
  %lnot188 = xor i1 %tobool187, true, !dbg !17436
  %lnot190 = xor i1 %lnot188, true, !dbg !17436
  %lnot192 = xor i1 %lnot190, true, !dbg !17436
  %lnot.ext193 = zext i1 %lnot192 to i32, !dbg !17436
  %conv194 = sext i32 %lnot.ext193 to i64, !dbg !17436
  %tobool195 = icmp ne i64 %conv194, 0, !dbg !17436
  br i1 %tobool195, label %if.then196, label %if.end199, !dbg !17438

if.then196:                                       ; preds = %if.end184
  %146 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17439
  %call197 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %146, i32 32768) #11, !dbg !17440
  %147 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !17441
  %hw_token = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %147, i32 0, i32 2, !dbg !17442
  %148 = load i32, i32* %hw_token, align 8, !dbg !17443
  %or198 = or i32 %148, %call197, !dbg !17443
  store i32 %or198, i32* %hw_token, align 8, !dbg !17443
  br label %if.end199, !dbg !17441

if.end199:                                        ; preds = %if.then196, %if.end184
  %149 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !17444
  store %struct.list_head* %149, %struct.list_head** %retval, align 8, !dbg !17445
  br label %return, !dbg !17445

cleanup:                                          ; preds = %if.then174, %if.then104, %if.then21
  call void @llvm.dbg.label(metadata !17446), !dbg !17447
  %150 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17448
  %151 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17449
  %152 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !17450
  call void @qtd_list_free(%struct.ehci_hcd* %150, %struct.urb* %151, %struct.list_head* %152) #11, !dbg !17451
  store %struct.list_head* null, %struct.list_head** %retval, align 8, !dbg !17452
  br label %return, !dbg !17452

return:                                           ; preds = %cleanup, %if.end199, %if.then
  %153 = load %struct.list_head*, %struct.list_head** %retval, align 8, !dbg !17453
  ret %struct.list_head* %153, !dbg !17453
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @submit_async(%struct.ehci_hcd* %ehci, %struct.urb* %urb, %struct.list_head* %qtd_list, i32 %mem_flags) #0 !dbg !17454 {
entry:
  %lock.addr.i72 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i72, metadata !6709, metadata !DIExpression()), !dbg !17457
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !17459
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !17460
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %qtd_list.addr = alloca %struct.list_head*, align 8
  %mem_flags.addr = alloca i32, align 4
  %epnum = alloca i32, align 4
  %flags = alloca i64, align 8
  %qh = alloca %struct.ehci_qh*, align 8
  %rc = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !17467, metadata !DIExpression()), !dbg !17468
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !17469, metadata !DIExpression()), !dbg !17470
  store %struct.list_head* %qtd_list, %struct.list_head** %qtd_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %qtd_list.addr, metadata !17471, metadata !DIExpression()), !dbg !17472
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !17473, metadata !DIExpression()), !dbg !17474
  call void @llvm.dbg.declare(metadata i32* %epnum, metadata !17475, metadata !DIExpression()), !dbg !17476
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17477, metadata !DIExpression()), !dbg !17478
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !17479, metadata !DIExpression()), !dbg !17480
  store %struct.ehci_qh* null, %struct.ehci_qh** %qh, align 8, !dbg !17480
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !17481, metadata !DIExpression()), !dbg !17482
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17483
  %ep = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 9, !dbg !17484
  %1 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !17484
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %1, i32 0, i32 0, !dbg !17485
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc, i32 0, i32 2, !dbg !17486
  %2 = load i8, i8* %bEndpointAddress, align 2, !dbg !17486
  %conv = zext i8 %2 to i32, !dbg !17483
  store i32 %conv, i32* %epnum, align 4, !dbg !17487
  br label %do.body, !dbg !17488

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !17489

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17490, metadata !DIExpression()), !dbg !17492
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17493, metadata !DIExpression()), !dbg !17492
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !17492
  %conv2 = zext i1 %cmp to i32, !dbg !17492
  store i32 1, i32* %tmp, align 4, !dbg !17492
  %3 = load i32, i32* %tmp, align 4, !dbg !17492
  br label %do.body3, !dbg !17494

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !17495

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !17496

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !17498, metadata !DIExpression()), !dbg !17501
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !17502, metadata !DIExpression()), !dbg !17501
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !17501
  %conv9 = zext i1 %cmp8 to i32, !dbg !17501
  store i32 1, i32* %tmp10, align 4, !dbg !17501
  %4 = load i32, i32* %tmp10, align 4, !dbg !17501
  %call = call i64 @arch_local_irq_save() #11, !dbg !17503
  store i64 %call, i64* %flags, align 8, !dbg !17503
  br label %do.end, !dbg !17503

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !17496

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !17495

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17504, !srcloc !17505
  br label %do.body13, !dbg !17504

do.body13:                                        ; preds = %do.body12
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17506
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 11, !dbg !17506
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17507
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !17508
  %rlock.i = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !17508
  br label %do.end15, !dbg !17506

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !17504

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !17495

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !17494

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !17489

do.end19:                                         ; preds = %do.end18
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17509
  %call20 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %8) #11, !dbg !17509
  %flags21 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call20, i32 0, i32 12, !dbg !17509
  %9 = load i64, i64* %flags21, align 8, !dbg !17509
  %and = and i64 %9, 1, !dbg !17509
  %tobool = icmp ne i64 %and, 0, !dbg !17509
  %lnot = xor i1 %tobool, true, !dbg !17509
  %lnot22 = xor i1 %lnot, true, !dbg !17509
  %lnot23 = xor i1 %lnot22, true, !dbg !17509
  %lnot.ext = zext i1 %lnot23 to i32, !dbg !17509
  %conv24 = sext i32 %lnot.ext to i64, !dbg !17509
  %tobool25 = icmp ne i64 %conv24, 0, !dbg !17509
  br i1 %tobool25, label %if.then, label %if.end, !dbg !17511

if.then:                                          ; preds = %do.end19
  store i32 -108, i32* %rc, align 4, !dbg !17512
  br label %done, !dbg !17514

if.end:                                           ; preds = %do.end19
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17515
  %call26 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %10) #11, !dbg !17516
  %11 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17517
  %call27 = call i32 @usb_hcd_link_urb_to_ep(%struct.usb_hcd* %call26, %struct.urb* %11) #11, !dbg !17518
  store i32 %call27, i32* %rc, align 4, !dbg !17519
  %12 = load i32, i32* %rc, align 4, !dbg !17520
  %tobool28 = icmp ne i32 %12, 0, !dbg !17520
  %lnot29 = xor i1 %tobool28, true, !dbg !17520
  %lnot31 = xor i1 %lnot29, true, !dbg !17520
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !17520
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !17520
  %tobool34 = icmp ne i64 %conv33, 0, !dbg !17520
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !17522

if.then35:                                        ; preds = %if.end
  br label %done, !dbg !17523

if.end36:                                         ; preds = %if.end
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17524
  %14 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17525
  %15 = load %struct.list_head*, %struct.list_head** %qtd_list.addr, align 8, !dbg !17526
  %16 = load i32, i32* %epnum, align 4, !dbg !17527
  %17 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17528
  %ep37 = getelementptr inbounds %struct.urb, %struct.urb* %17, i32 0, i32 9, !dbg !17529
  %18 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep37, align 8, !dbg !17529
  %hcpriv = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %18, i32 0, i32 5, !dbg !17530
  %call38 = call %struct.ehci_qh* @qh_append_tds(%struct.ehci_hcd* %13, %struct.urb* %14, %struct.list_head* %15, i32 %16, i8** %hcpriv) #11, !dbg !17531
  store %struct.ehci_qh* %call38, %struct.ehci_qh** %qh, align 8, !dbg !17532
  %19 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !17533
  %cmp39 = icmp eq %struct.ehci_qh* %19, null, !dbg !17533
  %lnot41 = xor i1 %cmp39, true, !dbg !17533
  %lnot43 = xor i1 %lnot41, true, !dbg !17533
  %lnot.ext44 = zext i1 %lnot43 to i32, !dbg !17533
  %conv45 = sext i32 %lnot.ext44 to i64, !dbg !17533
  %tobool46 = icmp ne i64 %conv45, 0, !dbg !17533
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !17535

if.then47:                                        ; preds = %if.end36
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17536
  %call48 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %20) #11, !dbg !17538
  %21 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17539
  call void @usb_hcd_unlink_urb_from_ep(%struct.usb_hcd* %call48, %struct.urb* %21) #11, !dbg !17540
  store i32 -12, i32* %rc, align 4, !dbg !17541
  br label %done, !dbg !17542

if.end49:                                         ; preds = %if.end36
  %22 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !17543
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %22, i32 0, i32 9, !dbg !17543
  %23 = load i8, i8* %qh_state, align 4, !dbg !17543
  %conv50 = zext i8 %23 to i32, !dbg !17543
  %cmp51 = icmp eq i32 %conv50, 3, !dbg !17543
  %lnot53 = xor i1 %cmp51, true, !dbg !17543
  %lnot55 = xor i1 %lnot53, true, !dbg !17543
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !17543
  %conv57 = sext i32 %lnot.ext56 to i64, !dbg !17543
  %tobool58 = icmp ne i64 %conv57, 0, !dbg !17543
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !17545

if.then59:                                        ; preds = %if.end49
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17546
  %25 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !17547
  call void @qh_link_async(%struct.ehci_hcd* %24, %struct.ehci_qh* %25) #11, !dbg !17548
  br label %if.end60, !dbg !17548

if.end60:                                         ; preds = %if.then59, %if.end49
  br label %done, !dbg !17543

done:                                             ; preds = %if.end60, %if.then47, %if.then35, %if.then
  call void @llvm.dbg.label(metadata !17549), !dbg !17550
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17551
  %lock61 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %26, i32 0, i32 11, !dbg !17552
  %27 = load i64, i64* %flags, align 8, !dbg !17553
  store %struct.spinlock* %lock61, %struct.spinlock** %lock.addr.i72, align 8
  store i64 %27, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !17554
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !17554
  store i32 1, i32* %tmp.i, align 4, !dbg !17554
  %28 = load i32, i32* %tmp.i, align 4, !dbg !17554
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !17555
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !17555
  store i32 1, i32* %tmp8.i, align 4, !dbg !17555
  %29 = load i32, i32* %tmp8.i, align 4, !dbg !17555
  %30 = load i64, i64* %flags.addr.i, align 8, !dbg !17556
  call void @arch_local_irq_restore(i64 %30) #12, !dbg !17556
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17557, !srcloc !6997
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i72, align 8, !dbg !17558
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !17558
  %rlock.i73 = bitcast %union.anon.0* %32 to %struct.raw_spinlock*, !dbg !17558
  %33 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !17559
  %cmp62 = icmp eq %struct.ehci_qh* %33, null, !dbg !17559
  %lnot64 = xor i1 %cmp62, true, !dbg !17559
  %lnot66 = xor i1 %lnot64, true, !dbg !17559
  %lnot.ext67 = zext i1 %lnot66 to i32, !dbg !17559
  %conv68 = sext i32 %lnot.ext67 to i64, !dbg !17559
  %tobool69 = icmp ne i64 %conv68, 0, !dbg !17559
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !17561

if.then70:                                        ; preds = %done
  %34 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17562
  %35 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17563
  %36 = load %struct.list_head*, %struct.list_head** %qtd_list.addr, align 8, !dbg !17564
  call void @qtd_list_free(%struct.ehci_hcd* %34, %struct.urb* %35, %struct.list_head* %36) #11, !dbg !17565
  br label %if.end71, !dbg !17565

if.end71:                                         ; preds = %if.then70, %done
  %37 = load i32, i32* %rc, align 4, !dbg !17566
  ret i32 %37, !dbg !17567
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @intr_submit(%struct.ehci_hcd* %ehci, %struct.urb* %urb, %struct.list_head* %qtd_list, i32 %mem_flags) #0 !dbg !17568 {
entry:
  %lock.addr.i96 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i96, metadata !6709, metadata !DIExpression()), !dbg !17569
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !17571
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !17572
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %qtd_list.addr = alloca %struct.list_head*, align 8
  %mem_flags.addr = alloca i32, align 4
  %epnum = alloca i32, align 4
  %flags = alloca i64, align 8
  %qh = alloca %struct.ehci_qh*, align 8
  %status = alloca i32, align 4
  %empty = alloca %struct.list_head, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !17579, metadata !DIExpression()), !dbg !17580
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !17581, metadata !DIExpression()), !dbg !17582
  store %struct.list_head* %qtd_list, %struct.list_head** %qtd_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %qtd_list.addr, metadata !17583, metadata !DIExpression()), !dbg !17584
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !17585, metadata !DIExpression()), !dbg !17586
  call void @llvm.dbg.declare(metadata i32* %epnum, metadata !17587, metadata !DIExpression()), !dbg !17588
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17589, metadata !DIExpression()), !dbg !17590
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !17591, metadata !DIExpression()), !dbg !17592
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17593, metadata !DIExpression()), !dbg !17594
  call void @llvm.dbg.declare(metadata %struct.list_head* %empty, metadata !17595, metadata !DIExpression()), !dbg !17596
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17597
  %ep = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 9, !dbg !17598
  %1 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !17598
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %1, i32 0, i32 0, !dbg !17599
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc, i32 0, i32 2, !dbg !17600
  %2 = load i8, i8* %bEndpointAddress, align 2, !dbg !17600
  %conv = zext i8 %2 to i32, !dbg !17597
  store i32 %conv, i32* %epnum, align 4, !dbg !17601
  br label %do.body, !dbg !17602

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !17603

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17604, metadata !DIExpression()), !dbg !17606
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17607, metadata !DIExpression()), !dbg !17606
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !17606
  %conv2 = zext i1 %cmp to i32, !dbg !17606
  store i32 1, i32* %tmp, align 4, !dbg !17606
  %3 = load i32, i32* %tmp, align 4, !dbg !17606
  br label %do.body3, !dbg !17608

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !17609

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !17610

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !17612, metadata !DIExpression()), !dbg !17615
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !17616, metadata !DIExpression()), !dbg !17615
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !17615
  %conv9 = zext i1 %cmp8 to i32, !dbg !17615
  store i32 1, i32* %tmp10, align 4, !dbg !17615
  %4 = load i32, i32* %tmp10, align 4, !dbg !17615
  %call = call i64 @arch_local_irq_save() #11, !dbg !17617
  store i64 %call, i64* %flags, align 8, !dbg !17617
  br label %do.end, !dbg !17617

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !17610

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !17609

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17618, !srcloc !17619
  br label %do.body13, !dbg !17618

do.body13:                                        ; preds = %do.body12
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17620
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %5, i32 0, i32 11, !dbg !17620
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17621
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !17622
  %rlock.i = bitcast %union.anon.0* %7 to %struct.raw_spinlock*, !dbg !17622
  br label %do.end15, !dbg !17620

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !17618

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !17609

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !17608

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !17603

do.end19:                                         ; preds = %do.end18
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17623
  %call20 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %8) #11, !dbg !17623
  %flags21 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call20, i32 0, i32 12, !dbg !17623
  %9 = load i64, i64* %flags21, align 8, !dbg !17623
  %and = and i64 %9, 1, !dbg !17623
  %tobool = icmp ne i64 %and, 0, !dbg !17623
  %lnot = xor i1 %tobool, true, !dbg !17623
  %lnot22 = xor i1 %lnot, true, !dbg !17623
  %lnot23 = xor i1 %lnot22, true, !dbg !17623
  %lnot.ext = zext i1 %lnot23 to i32, !dbg !17623
  %conv24 = sext i32 %lnot.ext to i64, !dbg !17623
  %tobool25 = icmp ne i64 %conv24, 0, !dbg !17623
  br i1 %tobool25, label %if.then, label %if.end, !dbg !17625

if.then:                                          ; preds = %do.end19
  store i32 -108, i32* %status, align 4, !dbg !17626
  br label %done_not_linked, !dbg !17628

if.end:                                           ; preds = %do.end19
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17629
  %call26 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %10) #11, !dbg !17630
  %11 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17631
  %call27 = call i32 @usb_hcd_link_urb_to_ep(%struct.usb_hcd* %call26, %struct.urb* %11) #11, !dbg !17632
  store i32 %call27, i32* %status, align 4, !dbg !17633
  %12 = load i32, i32* %status, align 4, !dbg !17634
  %tobool28 = icmp ne i32 %12, 0, !dbg !17634
  %lnot29 = xor i1 %tobool28, true, !dbg !17634
  %lnot31 = xor i1 %lnot29, true, !dbg !17634
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !17634
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !17634
  %tobool34 = icmp ne i64 %conv33, 0, !dbg !17634
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !17636

if.then35:                                        ; preds = %if.end
  br label %done_not_linked, !dbg !17637

if.end36:                                         ; preds = %if.end
  call void @INIT_LIST_HEAD(%struct.list_head* %empty) #11, !dbg !17638
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17639
  %14 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17640
  %15 = load i32, i32* %epnum, align 4, !dbg !17641
  %16 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17642
  %ep37 = getelementptr inbounds %struct.urb, %struct.urb* %16, i32 0, i32 9, !dbg !17643
  %17 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep37, align 8, !dbg !17643
  %hcpriv = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %17, i32 0, i32 5, !dbg !17644
  %call38 = call %struct.ehci_qh* @qh_append_tds(%struct.ehci_hcd* %13, %struct.urb* %14, %struct.list_head* %empty, i32 %15, i8** %hcpriv) #11, !dbg !17645
  store %struct.ehci_qh* %call38, %struct.ehci_qh** %qh, align 8, !dbg !17646
  %18 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !17647
  %cmp39 = icmp eq %struct.ehci_qh* %18, null, !dbg !17649
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !17650

if.then41:                                        ; preds = %if.end36
  store i32 -12, i32* %status, align 4, !dbg !17651
  br label %done, !dbg !17653

if.end42:                                         ; preds = %if.end36
  %19 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !17654
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %19, i32 0, i32 9, !dbg !17656
  %20 = load i8, i8* %qh_state, align 4, !dbg !17656
  %conv43 = zext i8 %20 to i32, !dbg !17654
  %cmp44 = icmp eq i32 %conv43, 3, !dbg !17657
  br i1 %cmp44, label %if.then46, label %if.end51, !dbg !17658

if.then46:                                        ; preds = %if.end42
  %21 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17659
  %22 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !17661
  %call47 = call i32 @qh_schedule(%struct.ehci_hcd* %21, %struct.ehci_qh* %22) #11, !dbg !17662
  store i32 %call47, i32* %status, align 4, !dbg !17663
  %23 = load i32, i32* %status, align 4, !dbg !17664
  %tobool48 = icmp ne i32 %23, 0, !dbg !17664
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !17666

if.then49:                                        ; preds = %if.then46
  br label %done, !dbg !17667

if.end50:                                         ; preds = %if.then46
  br label %if.end51, !dbg !17668

if.end51:                                         ; preds = %if.end50, %if.end42
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17669
  %25 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17670
  %26 = load %struct.list_head*, %struct.list_head** %qtd_list.addr, align 8, !dbg !17671
  %27 = load i32, i32* %epnum, align 4, !dbg !17672
  %28 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17673
  %ep52 = getelementptr inbounds %struct.urb, %struct.urb* %28, i32 0, i32 9, !dbg !17674
  %29 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep52, align 8, !dbg !17674
  %hcpriv53 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %29, i32 0, i32 5, !dbg !17675
  %call54 = call %struct.ehci_qh* @qh_append_tds(%struct.ehci_hcd* %24, %struct.urb* %25, %struct.list_head* %26, i32 %27, i8** %hcpriv53) #11, !dbg !17676
  store %struct.ehci_qh* %call54, %struct.ehci_qh** %qh, align 8, !dbg !17677
  br label %do.body55, !dbg !17678

do.body55:                                        ; preds = %if.end51
  %30 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !17679
  %cmp56 = icmp eq %struct.ehci_qh* %30, null, !dbg !17679
  %lnot58 = xor i1 %cmp56, true, !dbg !17679
  %lnot60 = xor i1 %lnot58, true, !dbg !17679
  %lnot.ext61 = zext i1 %lnot60 to i32, !dbg !17679
  %conv62 = sext i32 %lnot.ext61 to i64, !dbg !17679
  %tobool63 = icmp ne i64 %conv62, 0, !dbg !17679
  br i1 %tobool63, label %if.then64, label %if.end73, !dbg !17682

if.then64:                                        ; preds = %do.body55
  br label %do.body65, !dbg !17679

do.body65:                                        ; preds = %if.then64
  br label %do.body66, !dbg !17683

do.body66:                                        ; preds = %do.body65
  br label %do.end67, !dbg !17685

do.end67:                                         ; preds = %do.body66
  br label %do.body68, !dbg !17683

do.body68:                                        ; preds = %do.end67
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.33, i64 0, i64 0), i32 937, i32 0, i64 12) #7, !dbg !17687, !srcloc !17689
  br label %do.end69, !dbg !17687

do.end69:                                         ; preds = %do.body68
  br label %do.body70, !dbg !17683

do.body70:                                        ; preds = %do.end69
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 348) #7, !dbg !17690, !srcloc !17693
  unreachable, !dbg !17694

do.end71:                                         ; No predecessors!
  br label %do.end72, !dbg !17683

do.end72:                                         ; preds = %do.end71
  br label %if.end73, !dbg !17683

if.end73:                                         ; preds = %do.end72, %do.body55
  br label %do.end74, !dbg !17682

do.end74:                                         ; preds = %if.end73
  %31 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !17695
  %qh_state75 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %31, i32 0, i32 9, !dbg !17697
  %32 = load i8, i8* %qh_state75, align 4, !dbg !17697
  %conv76 = zext i8 %32 to i32, !dbg !17695
  %cmp77 = icmp eq i32 %conv76, 3, !dbg !17698
  br i1 %cmp77, label %if.then79, label %if.else, !dbg !17699

if.then79:                                        ; preds = %do.end74
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17700
  %34 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !17702
  call void @qh_refresh(%struct.ehci_hcd* %33, %struct.ehci_qh* %34) #11, !dbg !17703
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17704
  %36 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !17705
  call void @qh_link_periodic(%struct.ehci_hcd* %35, %struct.ehci_qh* %36) #11, !dbg !17706
  br label %if.end80, !dbg !17707

if.else:                                          ; preds = %do.end74
  %37 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17708
  %38 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !17710
  call void @cancel_unlink_wait_intr(%struct.ehci_hcd* %37, %struct.ehci_qh* %38) #11, !dbg !17711
  br label %if.end80

if.end80:                                         ; preds = %if.else, %if.then79
  %39 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17712
  %call81 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %39) #11, !dbg !17713
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call81, i32 0, i32 0, !dbg !17714
  %bandwidth_int_reqs = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 14, !dbg !17715
  %40 = load i32, i32* %bandwidth_int_reqs, align 4, !dbg !17716
  %inc = add i32 %40, 1, !dbg !17716
  store i32 %inc, i32* %bandwidth_int_reqs, align 4, !dbg !17716
  br label %done, !dbg !17713

done:                                             ; preds = %if.end80, %if.then49, %if.then41
  call void @llvm.dbg.label(metadata !17717), !dbg !17718
  %41 = load i32, i32* %status, align 4, !dbg !17719
  %tobool82 = icmp ne i32 %41, 0, !dbg !17719
  %lnot83 = xor i1 %tobool82, true, !dbg !17719
  %lnot85 = xor i1 %lnot83, true, !dbg !17719
  %lnot.ext86 = zext i1 %lnot85 to i32, !dbg !17719
  %conv87 = sext i32 %lnot.ext86 to i64, !dbg !17719
  %tobool88 = icmp ne i64 %conv87, 0, !dbg !17719
  br i1 %tobool88, label %if.then89, label %if.end91, !dbg !17721

if.then89:                                        ; preds = %done
  %42 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17722
  %call90 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %42) #11, !dbg !17723
  %43 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17724
  call void @usb_hcd_unlink_urb_from_ep(%struct.usb_hcd* %call90, %struct.urb* %43) #11, !dbg !17725
  br label %if.end91, !dbg !17725

if.end91:                                         ; preds = %if.then89, %done
  br label %done_not_linked, !dbg !17719

done_not_linked:                                  ; preds = %if.end91, %if.then35, %if.then
  call void @llvm.dbg.label(metadata !17726), !dbg !17727
  %44 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17728
  %lock92 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %44, i32 0, i32 11, !dbg !17729
  %45 = load i64, i64* %flags, align 8, !dbg !17730
  store %struct.spinlock* %lock92, %struct.spinlock** %lock.addr.i96, align 8
  store i64 %45, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !17731
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !17731
  store i32 1, i32* %tmp.i, align 4, !dbg !17731
  %46 = load i32, i32* %tmp.i, align 4, !dbg !17731
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !17732
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !17732
  store i32 1, i32* %tmp8.i, align 4, !dbg !17732
  %47 = load i32, i32* %tmp8.i, align 4, !dbg !17732
  %48 = load i64, i64* %flags.addr.i, align 8, !dbg !17733
  call void @arch_local_irq_restore(i64 %48) #12, !dbg !17733
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17734, !srcloc !6997
  %49 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i96, align 8, !dbg !17735
  %50 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %49, i32 0, i32 0, !dbg !17735
  %rlock.i97 = bitcast %union.anon.0* %50 to %struct.raw_spinlock*, !dbg !17735
  %51 = load i32, i32* %status, align 4, !dbg !17736
  %tobool93 = icmp ne i32 %51, 0, !dbg !17736
  br i1 %tobool93, label %if.then94, label %if.end95, !dbg !17738

if.then94:                                        ; preds = %done_not_linked
  %52 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17739
  %53 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17740
  %54 = load %struct.list_head*, %struct.list_head** %qtd_list.addr, align 8, !dbg !17741
  call void @qtd_list_free(%struct.ehci_hcd* %52, %struct.urb* %53, %struct.list_head* %54) #11, !dbg !17742
  br label %if.end95, !dbg !17742

if.end95:                                         ; preds = %if.then94, %done_not_linked
  %55 = load i32, i32* %status, align 4, !dbg !17743
  ret i32 %55, !dbg !17744
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @itd_submit(%struct.ehci_hcd* %ehci, %struct.urb* %urb, i32 %mem_flags) #0 !dbg !17745 {
entry:
  %lock.addr.i87 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i87, metadata !6709, metadata !DIExpression()), !dbg !17748
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !17750
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !17751
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %mem_flags.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %flags = alloca i64, align 8
  %stream = alloca %struct.ehci_iso_stream*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy30 = alloca i64, align 8
  %__dummy231 = alloca i64, align 8
  %tmp34 = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !17758, metadata !DIExpression()), !dbg !17759
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !17760, metadata !DIExpression()), !dbg !17761
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !17762, metadata !DIExpression()), !dbg !17763
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17764, metadata !DIExpression()), !dbg !17765
  store i32 -22, i32* %status, align 4, !dbg !17765
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17766, metadata !DIExpression()), !dbg !17767
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream, metadata !17768, metadata !DIExpression()), !dbg !17769
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17770
  %1 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17771
  %call = call %struct.ehci_iso_stream* @iso_stream_find(%struct.ehci_hcd* %0, %struct.urb* %1) #11, !dbg !17772
  store %struct.ehci_iso_stream* %call, %struct.ehci_iso_stream** %stream, align 8, !dbg !17773
  %2 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !17774
  %cmp = icmp eq %struct.ehci_iso_stream* %2, null, !dbg !17774
  %lnot = xor i1 %cmp, true, !dbg !17774
  %lnot1 = xor i1 %lnot, true, !dbg !17774
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !17774
  %conv = sext i32 %lnot.ext to i64, !dbg !17774
  %tobool = icmp ne i64 %conv, 0, !dbg !17774
  br i1 %tobool, label %if.then, label %if.end, !dbg !17776

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !17777
  br label %return, !dbg !17777

if.end:                                           ; preds = %entry
  %3 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17779
  %interval = getelementptr inbounds %struct.urb, %struct.urb* %3, i32 0, i32 25, !dbg !17779
  %4 = load i32, i32* %interval, align 8, !dbg !17779
  %5 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !17779
  %uperiod = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %5, i32 0, i32 8, !dbg !17779
  %6 = load i16, i16* %uperiod, align 8, !dbg !17779
  %conv2 = zext i16 %6 to i32, !dbg !17779
  %cmp3 = icmp ne i32 %4, %conv2, !dbg !17779
  %lnot5 = xor i1 %cmp3, true, !dbg !17779
  %lnot7 = xor i1 %lnot5, true, !dbg !17779
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !17779
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !17779
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !17779
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !17781

if.then11:                                        ; preds = %if.end
  br label %done, !dbg !17782

if.end12:                                         ; preds = %if.end
  %7 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !17784
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17785
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17786
  %10 = load i32, i32* %mem_flags.addr, align 4, !dbg !17787
  %call13 = call i32 @itd_urb_transaction(%struct.ehci_iso_stream* %7, %struct.ehci_hcd* %8, %struct.urb* %9, i32 %10) #11, !dbg !17788
  store i32 %call13, i32* %status, align 4, !dbg !17789
  %11 = load i32, i32* %status, align 4, !dbg !17790
  %cmp14 = icmp slt i32 %11, 0, !dbg !17790
  %lnot16 = xor i1 %cmp14, true, !dbg !17790
  %lnot18 = xor i1 %lnot16, true, !dbg !17790
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !17790
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !17790
  %tobool21 = icmp ne i64 %conv20, 0, !dbg !17790
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !17792

if.then22:                                        ; preds = %if.end12
  br label %done, !dbg !17793

if.end23:                                         ; preds = %if.end12
  br label %do.body, !dbg !17795

do.body:                                          ; preds = %if.end23
  br label %do.body24, !dbg !17796

do.body24:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17797, metadata !DIExpression()), !dbg !17799
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17800, metadata !DIExpression()), !dbg !17799
  %cmp25 = icmp eq i64* %__dummy, %__dummy2, !dbg !17799
  %conv26 = zext i1 %cmp25 to i32, !dbg !17799
  store i32 1, i32* %tmp, align 4, !dbg !17799
  %12 = load i32, i32* %tmp, align 4, !dbg !17799
  br label %do.body27, !dbg !17801

do.body27:                                        ; preds = %do.body24
  br label %do.body28, !dbg !17802

do.body28:                                        ; preds = %do.body27
  br label %do.body29, !dbg !17803

do.body29:                                        ; preds = %do.body28
  call void @llvm.dbg.declare(metadata i64* %__dummy30, metadata !17805, metadata !DIExpression()), !dbg !17808
  call void @llvm.dbg.declare(metadata i64* %__dummy231, metadata !17809, metadata !DIExpression()), !dbg !17808
  %cmp32 = icmp eq i64* %__dummy30, %__dummy231, !dbg !17808
  %conv33 = zext i1 %cmp32 to i32, !dbg !17808
  store i32 1, i32* %tmp34, align 4, !dbg !17808
  %13 = load i32, i32* %tmp34, align 4, !dbg !17808
  %call35 = call i64 @arch_local_irq_save() #11, !dbg !17810
  store i64 %call35, i64* %flags, align 8, !dbg !17810
  br label %do.end, !dbg !17810

do.end:                                           ; preds = %do.body29
  br label %do.end36, !dbg !17803

do.end36:                                         ; preds = %do.end
  br label %do.body37, !dbg !17802

do.body37:                                        ; preds = %do.end36
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17811, !srcloc !17812
  br label %do.body38, !dbg !17811

do.body38:                                        ; preds = %do.body37
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17813
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 11, !dbg !17813
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17814
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !17815
  %rlock.i = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !17815
  br label %do.end40, !dbg !17813

do.end40:                                         ; preds = %do.body38
  br label %do.end41, !dbg !17811

do.end41:                                         ; preds = %do.end40
  br label %do.end42, !dbg !17802

do.end42:                                         ; preds = %do.end41
  br label %do.end43, !dbg !17801

do.end43:                                         ; preds = %do.end42
  br label %do.end44, !dbg !17796

do.end44:                                         ; preds = %do.end43
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17816
  %call45 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %17) #11, !dbg !17816
  %flags46 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call45, i32 0, i32 12, !dbg !17816
  %18 = load i64, i64* %flags46, align 8, !dbg !17816
  %and = and i64 %18, 1, !dbg !17816
  %tobool47 = icmp ne i64 %and, 0, !dbg !17816
  %lnot48 = xor i1 %tobool47, true, !dbg !17816
  %lnot50 = xor i1 %lnot48, true, !dbg !17816
  %lnot52 = xor i1 %lnot50, true, !dbg !17816
  %lnot.ext53 = zext i1 %lnot52 to i32, !dbg !17816
  %conv54 = sext i32 %lnot.ext53 to i64, !dbg !17816
  %tobool55 = icmp ne i64 %conv54, 0, !dbg !17816
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !17818

if.then56:                                        ; preds = %do.end44
  store i32 -108, i32* %status, align 4, !dbg !17819
  br label %done_not_linked, !dbg !17821

if.end57:                                         ; preds = %do.end44
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17822
  %call58 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %19) #11, !dbg !17823
  %20 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17824
  %call59 = call i32 @usb_hcd_link_urb_to_ep(%struct.usb_hcd* %call58, %struct.urb* %20) #11, !dbg !17825
  store i32 %call59, i32* %status, align 4, !dbg !17826
  %21 = load i32, i32* %status, align 4, !dbg !17827
  %tobool60 = icmp ne i32 %21, 0, !dbg !17827
  %lnot61 = xor i1 %tobool60, true, !dbg !17827
  %lnot63 = xor i1 %lnot61, true, !dbg !17827
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !17827
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !17827
  %tobool66 = icmp ne i64 %conv65, 0, !dbg !17827
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !17829

if.then67:                                        ; preds = %if.end57
  br label %done_not_linked, !dbg !17830

if.end68:                                         ; preds = %if.end57
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17831
  %23 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17832
  %24 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !17833
  %call69 = call i32 @iso_stream_schedule(%struct.ehci_hcd* %22, %struct.urb* %23, %struct.ehci_iso_stream* %24) #11, !dbg !17834
  store i32 %call69, i32* %status, align 4, !dbg !17835
  %25 = load i32, i32* %status, align 4, !dbg !17836
  %cmp70 = icmp eq i32 %25, 0, !dbg !17836
  %lnot72 = xor i1 %cmp70, true, !dbg !17836
  %lnot74 = xor i1 %lnot72, true, !dbg !17836
  %lnot.ext75 = zext i1 %lnot74 to i32, !dbg !17836
  %conv76 = sext i32 %lnot.ext75 to i64, !dbg !17836
  %tobool77 = icmp ne i64 %conv76, 0, !dbg !17836
  br i1 %tobool77, label %if.then78, label %if.else, !dbg !17838

if.then78:                                        ; preds = %if.end68
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17839
  %27 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17841
  %28 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17842
  %periodic_size = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %28, i32 0, i32 23, !dbg !17843
  %29 = load i32, i32* %periodic_size, align 8, !dbg !17843
  %shl = shl i32 %29, 3, !dbg !17844
  %30 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !17845
  call void @itd_link_urb(%struct.ehci_hcd* %26, %struct.urb* %27, i32 %shl, %struct.ehci_iso_stream* %30) #11, !dbg !17846
  br label %if.end85, !dbg !17847

if.else:                                          ; preds = %if.end68
  %31 = load i32, i32* %status, align 4, !dbg !17848
  %cmp79 = icmp sgt i32 %31, 0, !dbg !17850
  br i1 %cmp79, label %if.then81, label %if.else82, !dbg !17851

if.then81:                                        ; preds = %if.else
  store i32 0, i32* %status, align 4, !dbg !17852
  %32 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17854
  %33 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17855
  call void @ehci_urb_done(%struct.ehci_hcd* %32, %struct.urb* %33, i32 0) #11, !dbg !17856
  br label %if.end84, !dbg !17857

if.else82:                                        ; preds = %if.else
  %34 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17858
  %call83 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %34) #11, !dbg !17860
  %35 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17861
  call void @usb_hcd_unlink_urb_from_ep(%struct.usb_hcd* %call83, %struct.urb* %35) #11, !dbg !17862
  br label %if.end84

if.end84:                                         ; preds = %if.else82, %if.then81
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.then78
  br label %done_not_linked, !dbg !17836

done_not_linked:                                  ; preds = %if.end85, %if.then67, %if.then56
  call void @llvm.dbg.label(metadata !17863), !dbg !17864
  %36 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17865
  %lock86 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %36, i32 0, i32 11, !dbg !17866
  %37 = load i64, i64* %flags, align 8, !dbg !17867
  store %struct.spinlock* %lock86, %struct.spinlock** %lock.addr.i87, align 8
  store i64 %37, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !17868
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !17868
  store i32 1, i32* %tmp.i, align 4, !dbg !17868
  %38 = load i32, i32* %tmp.i, align 4, !dbg !17868
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !17869
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !17869
  store i32 1, i32* %tmp8.i, align 4, !dbg !17869
  %39 = load i32, i32* %tmp8.i, align 4, !dbg !17869
  %40 = load i64, i64* %flags.addr.i, align 8, !dbg !17870
  call void @arch_local_irq_restore(i64 %40) #12, !dbg !17870
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17871, !srcloc !6997
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i87, align 8, !dbg !17872
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !17872
  %rlock.i88 = bitcast %union.anon.0* %42 to %struct.raw_spinlock*, !dbg !17872
  br label %done, !dbg !17873

done:                                             ; preds = %done_not_linked, %if.then22, %if.then11
  call void @llvm.dbg.label(metadata !17874), !dbg !17875
  %43 = load i32, i32* %status, align 4, !dbg !17876
  store i32 %43, i32* %retval, align 4, !dbg !17877
  br label %return, !dbg !17877

return:                                           ; preds = %done, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !17878
  ret i32 %44, !dbg !17878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sitd_submit(%struct.ehci_hcd* %ehci, %struct.urb* %urb, i32 %mem_flags) #0 !dbg !17879 {
entry:
  %lock.addr.i68 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i68, metadata !6709, metadata !DIExpression()), !dbg !17880
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !17882
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !17883
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %mem_flags.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %flags = alloca i64, align 8
  %stream = alloca %struct.ehci_iso_stream*, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy16 = alloca i64, align 8
  %__dummy217 = alloca i64, align 8
  %tmp20 = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !17890, metadata !DIExpression()), !dbg !17891
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !17892, metadata !DIExpression()), !dbg !17893
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !17894, metadata !DIExpression()), !dbg !17895
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17896, metadata !DIExpression()), !dbg !17897
  store i32 -22, i32* %status, align 4, !dbg !17897
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !17898, metadata !DIExpression()), !dbg !17899
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream, metadata !17900, metadata !DIExpression()), !dbg !17901
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17902
  %1 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17903
  %call = call %struct.ehci_iso_stream* @iso_stream_find(%struct.ehci_hcd* %0, %struct.urb* %1) #11, !dbg !17904
  store %struct.ehci_iso_stream* %call, %struct.ehci_iso_stream** %stream, align 8, !dbg !17905
  %2 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !17906
  %cmp = icmp eq %struct.ehci_iso_stream* %2, null, !dbg !17908
  br i1 %cmp, label %if.then, label %if.end, !dbg !17909

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !17910
  br label %return, !dbg !17910

if.end:                                           ; preds = %entry
  %3 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17912
  %interval = getelementptr inbounds %struct.urb, %struct.urb* %3, i32 0, i32 25, !dbg !17914
  %4 = load i32, i32* %interval, align 8, !dbg !17914
  %5 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !17915
  %ps = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %5, i32 0, i32 5, !dbg !17916
  %period = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 5, !dbg !17917
  %6 = load i16, i16* %period, align 4, !dbg !17917
  %conv = zext i16 %6 to i32, !dbg !17915
  %cmp1 = icmp ne i32 %4, %conv, !dbg !17918
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !17919

if.then3:                                         ; preds = %if.end
  br label %done, !dbg !17920

if.end4:                                          ; preds = %if.end
  %7 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !17922
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17923
  %9 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17924
  %10 = load i32, i32* %mem_flags.addr, align 4, !dbg !17925
  %call5 = call i32 @sitd_urb_transaction(%struct.ehci_iso_stream* %7, %struct.ehci_hcd* %8, %struct.urb* %9, i32 %10) #11, !dbg !17926
  store i32 %call5, i32* %status, align 4, !dbg !17927
  %11 = load i32, i32* %status, align 4, !dbg !17928
  %cmp6 = icmp slt i32 %11, 0, !dbg !17930
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !17931

if.then8:                                         ; preds = %if.end4
  br label %done, !dbg !17932

if.end9:                                          ; preds = %if.end4
  br label %do.body, !dbg !17934

do.body:                                          ; preds = %if.end9
  br label %do.body10, !dbg !17935

do.body10:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !17936, metadata !DIExpression()), !dbg !17938
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !17939, metadata !DIExpression()), !dbg !17938
  %cmp11 = icmp eq i64* %__dummy, %__dummy2, !dbg !17938
  %conv12 = zext i1 %cmp11 to i32, !dbg !17938
  store i32 1, i32* %tmp, align 4, !dbg !17938
  %12 = load i32, i32* %tmp, align 4, !dbg !17938
  br label %do.body13, !dbg !17940

do.body13:                                        ; preds = %do.body10
  br label %do.body14, !dbg !17941

do.body14:                                        ; preds = %do.body13
  br label %do.body15, !dbg !17942

do.body15:                                        ; preds = %do.body14
  call void @llvm.dbg.declare(metadata i64* %__dummy16, metadata !17944, metadata !DIExpression()), !dbg !17947
  call void @llvm.dbg.declare(metadata i64* %__dummy217, metadata !17948, metadata !DIExpression()), !dbg !17947
  %cmp18 = icmp eq i64* %__dummy16, %__dummy217, !dbg !17947
  %conv19 = zext i1 %cmp18 to i32, !dbg !17947
  store i32 1, i32* %tmp20, align 4, !dbg !17947
  %13 = load i32, i32* %tmp20, align 4, !dbg !17947
  %call21 = call i64 @arch_local_irq_save() #11, !dbg !17949
  store i64 %call21, i64* %flags, align 8, !dbg !17949
  br label %do.end, !dbg !17949

do.end:                                           ; preds = %do.body15
  br label %do.end22, !dbg !17942

do.end22:                                         ; preds = %do.end
  br label %do.body23, !dbg !17941

do.body23:                                        ; preds = %do.end22
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !17950, !srcloc !17951
  br label %do.body24, !dbg !17950

do.body24:                                        ; preds = %do.body23
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17952
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 11, !dbg !17952
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !17953
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !17954
  %rlock.i = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !17954
  br label %do.end26, !dbg !17952

do.end26:                                         ; preds = %do.body24
  br label %do.end27, !dbg !17950

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !17941

do.end28:                                         ; preds = %do.end27
  br label %do.end29, !dbg !17940

do.end29:                                         ; preds = %do.end28
  br label %do.end30, !dbg !17935

do.end30:                                         ; preds = %do.end29
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17955
  %call31 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %17) #11, !dbg !17955
  %flags32 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call31, i32 0, i32 12, !dbg !17955
  %18 = load i64, i64* %flags32, align 8, !dbg !17955
  %and = and i64 %18, 1, !dbg !17955
  %tobool = icmp ne i64 %and, 0, !dbg !17955
  %lnot = xor i1 %tobool, true, !dbg !17955
  %lnot33 = xor i1 %lnot, true, !dbg !17955
  %lnot34 = xor i1 %lnot33, true, !dbg !17955
  %lnot.ext = zext i1 %lnot34 to i32, !dbg !17955
  %conv35 = sext i32 %lnot.ext to i64, !dbg !17955
  %tobool36 = icmp ne i64 %conv35, 0, !dbg !17955
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !17957

if.then37:                                        ; preds = %do.end30
  store i32 -108, i32* %status, align 4, !dbg !17958
  br label %done_not_linked, !dbg !17960

if.end38:                                         ; preds = %do.end30
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17961
  %call39 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %19) #11, !dbg !17962
  %20 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17963
  %call40 = call i32 @usb_hcd_link_urb_to_ep(%struct.usb_hcd* %call39, %struct.urb* %20) #11, !dbg !17964
  store i32 %call40, i32* %status, align 4, !dbg !17965
  %21 = load i32, i32* %status, align 4, !dbg !17966
  %tobool41 = icmp ne i32 %21, 0, !dbg !17966
  %lnot42 = xor i1 %tobool41, true, !dbg !17966
  %lnot44 = xor i1 %lnot42, true, !dbg !17966
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !17966
  %conv46 = sext i32 %lnot.ext45 to i64, !dbg !17966
  %tobool47 = icmp ne i64 %conv46, 0, !dbg !17966
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !17968

if.then48:                                        ; preds = %if.end38
  br label %done_not_linked, !dbg !17969

if.end49:                                         ; preds = %if.end38
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17970
  %23 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17971
  %24 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !17972
  %call50 = call i32 @iso_stream_schedule(%struct.ehci_hcd* %22, %struct.urb* %23, %struct.ehci_iso_stream* %24) #11, !dbg !17973
  store i32 %call50, i32* %status, align 4, !dbg !17974
  %25 = load i32, i32* %status, align 4, !dbg !17975
  %cmp51 = icmp eq i32 %25, 0, !dbg !17975
  %lnot53 = xor i1 %cmp51, true, !dbg !17975
  %lnot55 = xor i1 %lnot53, true, !dbg !17975
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !17975
  %conv57 = sext i32 %lnot.ext56 to i64, !dbg !17975
  %tobool58 = icmp ne i64 %conv57, 0, !dbg !17975
  br i1 %tobool58, label %if.then59, label %if.else, !dbg !17977

if.then59:                                        ; preds = %if.end49
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17978
  %27 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17980
  %28 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17981
  %periodic_size = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %28, i32 0, i32 23, !dbg !17982
  %29 = load i32, i32* %periodic_size, align 8, !dbg !17982
  %shl = shl i32 %29, 3, !dbg !17983
  %30 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !17984
  call void @sitd_link_urb(%struct.ehci_hcd* %26, %struct.urb* %27, i32 %shl, %struct.ehci_iso_stream* %30) #11, !dbg !17985
  br label %if.end66, !dbg !17986

if.else:                                          ; preds = %if.end49
  %31 = load i32, i32* %status, align 4, !dbg !17987
  %cmp60 = icmp sgt i32 %31, 0, !dbg !17989
  br i1 %cmp60, label %if.then62, label %if.else63, !dbg !17990

if.then62:                                        ; preds = %if.else
  store i32 0, i32* %status, align 4, !dbg !17991
  %32 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17993
  %33 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !17994
  call void @ehci_urb_done(%struct.ehci_hcd* %32, %struct.urb* %33, i32 0) #11, !dbg !17995
  br label %if.end65, !dbg !17996

if.else63:                                        ; preds = %if.else
  %34 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !17997
  %call64 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %34) #11, !dbg !17999
  %35 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18000
  call void @usb_hcd_unlink_urb_from_ep(%struct.usb_hcd* %call64, %struct.urb* %35) #11, !dbg !18001
  br label %if.end65

if.end65:                                         ; preds = %if.else63, %if.then62
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then59
  br label %done_not_linked, !dbg !17975

done_not_linked:                                  ; preds = %if.end66, %if.then48, %if.then37
  call void @llvm.dbg.label(metadata !18002), !dbg !18003
  %36 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18004
  %lock67 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %36, i32 0, i32 11, !dbg !18005
  %37 = load i64, i64* %flags, align 8, !dbg !18006
  store %struct.spinlock* %lock67, %struct.spinlock** %lock.addr.i68, align 8
  store i64 %37, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !18007
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !18007
  store i32 1, i32* %tmp.i, align 4, !dbg !18007
  %38 = load i32, i32* %tmp.i, align 4, !dbg !18007
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !18008
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !18008
  store i32 1, i32* %tmp8.i, align 4, !dbg !18008
  %39 = load i32, i32* %tmp8.i, align 4, !dbg !18008
  %40 = load i64, i64* %flags.addr.i, align 8, !dbg !18009
  call void @arch_local_irq_restore(i64 %40) #12, !dbg !18009
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !18010, !srcloc !6997
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i68, align 8, !dbg !18011
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !18011
  %rlock.i69 = bitcast %union.anon.0* %42 to %struct.raw_spinlock*, !dbg !18011
  br label %done, !dbg !18012

done:                                             ; preds = %done_not_linked, %if.then8, %if.then3
  call void @llvm.dbg.label(metadata !18013), !dbg !18014
  %43 = load i32, i32* %status, align 4, !dbg !18015
  store i32 %43, i32* %retval, align 4, !dbg !18016
  br label %return, !dbg !18016

return:                                           ; preds = %done, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !18017
  ret i32 %44, !dbg !18017
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @qtd_fill(%struct.ehci_hcd* %ehci, %struct.ehci_qtd* %qtd, i64 %buf, i64 %len, i32 %token, i32 %maxpacket) #0 !dbg !18018 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qtd.addr = alloca %struct.ehci_qtd*, align 8
  %buf.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %token.addr = alloca i32, align 4
  %maxpacket.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %addr = alloca i64, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !18021, metadata !DIExpression()), !dbg !18022
  store %struct.ehci_qtd* %qtd, %struct.ehci_qtd** %qtd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_qtd** %qtd.addr, metadata !18023, metadata !DIExpression()), !dbg !18024
  store i64 %buf, i64* %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %buf.addr, metadata !18025, metadata !DIExpression()), !dbg !18026
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !18027, metadata !DIExpression()), !dbg !18028
  store i32 %token, i32* %token.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %token.addr, metadata !18029, metadata !DIExpression()), !dbg !18030
  store i32 %maxpacket, i32* %maxpacket.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %maxpacket.addr, metadata !18031, metadata !DIExpression()), !dbg !18032
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18033, metadata !DIExpression()), !dbg !18034
  call void @llvm.dbg.declare(metadata i32* %count, metadata !18035, metadata !DIExpression()), !dbg !18036
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !18037, metadata !DIExpression()), !dbg !18038
  %0 = load i64, i64* %buf.addr, align 8, !dbg !18039
  store i64 %0, i64* %addr, align 8, !dbg !18038
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18040
  %2 = load i64, i64* %addr, align 8, !dbg !18041
  %conv = trunc i64 %2 to i32, !dbg !18042
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %1, i32 %conv) #11, !dbg !18043
  %3 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !18044
  %hw_buf = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %3, i32 0, i32 3, !dbg !18045
  %arrayidx = getelementptr [5 x i32], [5 x i32]* %hw_buf, i64 0, i64 0, !dbg !18044
  store i32 %call, i32* %arrayidx, align 4, !dbg !18046
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18047
  %5 = load i64, i64* %addr, align 8, !dbg !18048
  %shr = lshr i64 %5, 32, !dbg !18049
  %conv1 = trunc i64 %shr to i32, !dbg !18050
  %call2 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %4, i32 %conv1) #11, !dbg !18051
  %6 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !18052
  %hw_buf_hi = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %6, i32 0, i32 4, !dbg !18053
  %arrayidx3 = getelementptr [5 x i32], [5 x i32]* %hw_buf_hi, i64 0, i64 0, !dbg !18052
  store i32 %call2, i32* %arrayidx3, align 32, !dbg !18054
  %7 = load i64, i64* %buf.addr, align 8, !dbg !18055
  %and = and i64 %7, 4095, !dbg !18056
  %sub = sub i64 4096, %and, !dbg !18057
  %conv4 = trunc i64 %sub to i32, !dbg !18058
  store i32 %conv4, i32* %count, align 4, !dbg !18059
  %8 = load i64, i64* %len.addr, align 8, !dbg !18060
  %9 = load i32, i32* %count, align 4, !dbg !18060
  %conv5 = sext i32 %9 to i64, !dbg !18060
  %cmp = icmp ult i64 %8, %conv5, !dbg !18060
  %lnot = xor i1 %cmp, true, !dbg !18060
  %lnot7 = xor i1 %lnot, true, !dbg !18060
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !18060
  %conv8 = sext i32 %lnot.ext to i64, !dbg !18060
  %tobool = icmp ne i64 %conv8, 0, !dbg !18060
  br i1 %tobool, label %if.then, label %if.else, !dbg !18062

if.then:                                          ; preds = %entry
  %10 = load i64, i64* %len.addr, align 8, !dbg !18063
  %conv9 = trunc i64 %10 to i32, !dbg !18063
  store i32 %conv9, i32* %count, align 4, !dbg !18064
  br label %if.end41, !dbg !18065

if.else:                                          ; preds = %entry
  %11 = load i64, i64* %buf.addr, align 8, !dbg !18066
  %add = add i64 %11, 4096, !dbg !18066
  store i64 %add, i64* %buf.addr, align 8, !dbg !18066
  %12 = load i64, i64* %buf.addr, align 8, !dbg !18068
  %and10 = and i64 %12, -4096, !dbg !18068
  store i64 %and10, i64* %buf.addr, align 8, !dbg !18068
  store i32 1, i32* %i, align 4, !dbg !18069
  br label %for.cond, !dbg !18071

for.cond:                                         ; preds = %for.inc, %if.else
  %13 = load i32, i32* %count, align 4, !dbg !18072
  %conv11 = sext i32 %13 to i64, !dbg !18072
  %14 = load i64, i64* %len.addr, align 8, !dbg !18074
  %cmp12 = icmp ult i64 %conv11, %14, !dbg !18075
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !18076

land.rhs:                                         ; preds = %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !18077
  %cmp14 = icmp slt i32 %15, 5, !dbg !18078
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %16 = phi i1 [ false, %for.cond ], [ %cmp14, %land.rhs ], !dbg !18079
  br i1 %16, label %for.body, label %for.end, !dbg !18080

for.body:                                         ; preds = %land.end
  %17 = load i64, i64* %buf.addr, align 8, !dbg !18081
  store i64 %17, i64* %addr, align 8, !dbg !18083
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18084
  %19 = load i64, i64* %addr, align 8, !dbg !18085
  %conv16 = trunc i64 %19 to i32, !dbg !18086
  %call17 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %18, i32 %conv16) #11, !dbg !18087
  %20 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !18088
  %hw_buf18 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %20, i32 0, i32 3, !dbg !18089
  %21 = load i32, i32* %i, align 4, !dbg !18090
  %idxprom = sext i32 %21 to i64, !dbg !18088
  %arrayidx19 = getelementptr [5 x i32], [5 x i32]* %hw_buf18, i64 0, i64 %idxprom, !dbg !18088
  store i32 %call17, i32* %arrayidx19, align 4, !dbg !18091
  %22 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18092
  %23 = load i64, i64* %addr, align 8, !dbg !18093
  %shr20 = lshr i64 %23, 32, !dbg !18094
  %conv21 = trunc i64 %shr20 to i32, !dbg !18095
  %call22 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %22, i32 %conv21) #11, !dbg !18096
  %24 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !18097
  %hw_buf_hi23 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %24, i32 0, i32 4, !dbg !18098
  %25 = load i32, i32* %i, align 4, !dbg !18099
  %idxprom24 = sext i32 %25 to i64, !dbg !18097
  %arrayidx25 = getelementptr [5 x i32], [5 x i32]* %hw_buf_hi23, i64 0, i64 %idxprom24, !dbg !18097
  store i32 %call22, i32* %arrayidx25, align 4, !dbg !18100
  %26 = load i64, i64* %buf.addr, align 8, !dbg !18101
  %add26 = add i64 %26, 4096, !dbg !18101
  store i64 %add26, i64* %buf.addr, align 8, !dbg !18101
  %27 = load i32, i32* %count, align 4, !dbg !18102
  %add27 = add i32 %27, 4096, !dbg !18104
  %conv28 = sext i32 %add27 to i64, !dbg !18105
  %28 = load i64, i64* %len.addr, align 8, !dbg !18106
  %cmp29 = icmp ult i64 %conv28, %28, !dbg !18107
  br i1 %cmp29, label %if.then31, label %if.else33, !dbg !18108

if.then31:                                        ; preds = %for.body
  %29 = load i32, i32* %count, align 4, !dbg !18109
  %add32 = add i32 %29, 4096, !dbg !18109
  store i32 %add32, i32* %count, align 4, !dbg !18109
  br label %if.end, !dbg !18110

if.else33:                                        ; preds = %for.body
  %30 = load i64, i64* %len.addr, align 8, !dbg !18111
  %conv34 = trunc i64 %30 to i32, !dbg !18111
  store i32 %conv34, i32* %count, align 4, !dbg !18112
  br label %if.end

if.end:                                           ; preds = %if.else33, %if.then31
  br label %for.inc, !dbg !18113

for.inc:                                          ; preds = %if.end
  %31 = load i32, i32* %i, align 4, !dbg !18114
  %inc = add i32 %31, 1, !dbg !18114
  store i32 %inc, i32* %i, align 4, !dbg !18114
  br label %for.cond, !dbg !18115, !llvm.loop !18116

for.end:                                          ; preds = %land.end
  %32 = load i32, i32* %count, align 4, !dbg !18118
  %conv35 = sext i32 %32 to i64, !dbg !18118
  %33 = load i64, i64* %len.addr, align 8, !dbg !18120
  %cmp36 = icmp ne i64 %conv35, %33, !dbg !18121
  br i1 %cmp36, label %if.then38, label %if.end40, !dbg !18122

if.then38:                                        ; preds = %for.end
  %34 = load i32, i32* %count, align 4, !dbg !18123
  %35 = load i32, i32* %maxpacket.addr, align 4, !dbg !18124
  %rem = srem i32 %34, %35, !dbg !18125
  %36 = load i32, i32* %count, align 4, !dbg !18126
  %sub39 = sub i32 %36, %rem, !dbg !18126
  store i32 %sub39, i32* %count, align 4, !dbg !18126
  br label %if.end40, !dbg !18127

if.end40:                                         ; preds = %if.then38, %for.end
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then
  %37 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18128
  %38 = load i32, i32* %count, align 4, !dbg !18129
  %shl = shl i32 %38, 16, !dbg !18130
  %39 = load i32, i32* %token.addr, align 4, !dbg !18131
  %or = or i32 %shl, %39, !dbg !18132
  %call42 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %37, i32 %or) #11, !dbg !18133
  %40 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !18134
  %hw_token = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %40, i32 0, i32 2, !dbg !18135
  store i32 %call42, i32* %hw_token, align 8, !dbg !18136
  %41 = load i32, i32* %count, align 4, !dbg !18137
  %conv43 = sext i32 %41 to i64, !dbg !18137
  %42 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd.addr, align 8, !dbg !18138
  %length = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %42, i32 0, i32 8, !dbg !18139
  store i64 %conv43, i64* %length, align 8, !dbg !18140
  %43 = load i32, i32* %count, align 4, !dbg !18141
  ret i32 %43, !dbg !18142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @usb_maxpacket(%struct.usb_device* %udev, i32 %pipe, i32 %is_out) #0 !dbg !18143 {
entry:
  %retval = alloca i16, align 2
  %udev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %is_out.addr = alloca i32, align 4
  %ep = alloca %struct.usb_host_endpoint*, align 8
  %epnum = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on23 = alloca i32, align 4
  %tmp49 = alloca i64, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !18146, metadata !DIExpression()), !dbg !18147
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !18148, metadata !DIExpression()), !dbg !18149
  store i32 %is_out, i32* %is_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_out.addr, metadata !18150, metadata !DIExpression()), !dbg !18151
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep, metadata !18152, metadata !DIExpression()), !dbg !18153
  call void @llvm.dbg.declare(metadata i32* %epnum, metadata !18154, metadata !DIExpression()), !dbg !18155
  %0 = load i32, i32* %pipe.addr, align 4, !dbg !18156
  %shr = ashr i32 %0, 15, !dbg !18156
  %and = and i32 %shr, 15, !dbg !18156
  store i32 %and, i32* %epnum, align 4, !dbg !18155
  %1 = load i32, i32* %is_out.addr, align 4, !dbg !18157
  %tobool = icmp ne i32 %1, 0, !dbg !18157
  br i1 %tobool, label %if.then, label %if.else, !dbg !18159

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !18160, metadata !DIExpression()), !dbg !18163
  %2 = load i32, i32* %pipe.addr, align 4, !dbg !18163
  %and1 = and i32 %2, 128, !dbg !18163
  %tobool2 = icmp ne i32 %and1, 0, !dbg !18163
  %lnot = xor i1 %tobool2, true, !dbg !18163
  %lnot3 = xor i1 %lnot, true, !dbg !18163
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !18163
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !18163
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !18164
  %tobool4 = icmp ne i32 %3, 0, !dbg !18164
  %lnot5 = xor i1 %tobool4, true, !dbg !18164
  %lnot7 = xor i1 %lnot5, true, !dbg !18164
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !18164
  %conv = sext i32 %lnot.ext8 to i64, !dbg !18164
  %tobool9 = icmp ne i64 %conv, 0, !dbg !18164
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !18163

if.then10:                                        ; preds = %if.then
  br label %do.body, !dbg !18164

do.body:                                          ; preds = %if.then10
  br label %do.body11, !dbg !18166

do.body11:                                        ; preds = %do.body
  br label %do.end, !dbg !18168

do.end:                                           ; preds = %do.body11
  br label %do.body12, !dbg !18166

do.body12:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.32, i64 0, i64 0), i32 1986, i32 2305, i64 12) #7, !dbg !18170, !srcloc !18172
  br label %do.end13, !dbg !18170

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 240) #7, !dbg !18173, !srcloc !18175
  br label %do.body14, !dbg !18166

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !18176

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !18166

do.end16:                                         ; preds = %do.end15
  br label %if.end, !dbg !18166

if.end:                                           ; preds = %do.end16, %if.then
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !18163
  %tobool17 = icmp ne i32 %4, 0, !dbg !18163
  %lnot18 = xor i1 %tobool17, true, !dbg !18163
  %lnot20 = xor i1 %lnot18, true, !dbg !18163
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !18163
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !18163
  store i64 %conv22, i64* %tmp, align 8, !dbg !18164
  %5 = load i64, i64* %tmp, align 8, !dbg !18163
  %6 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !18178
  %ep_out = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 21, !dbg !18179
  %7 = load i32, i32* %epnum, align 4, !dbg !18180
  %idxprom = zext i32 %7 to i64, !dbg !18178
  %arrayidx = getelementptr [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %ep_out, i64 0, i64 %idxprom, !dbg !18178
  %8 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx, align 8, !dbg !18178
  store %struct.usb_host_endpoint* %8, %struct.usb_host_endpoint** %ep, align 8, !dbg !18181
  br label %if.end58, !dbg !18182

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on23, metadata !18183, metadata !DIExpression()), !dbg !18186
  %9 = load i32, i32* %pipe.addr, align 4, !dbg !18186
  %and24 = and i32 %9, 128, !dbg !18186
  %tobool25 = icmp ne i32 %and24, 0, !dbg !18186
  %lnot26 = xor i1 %tobool25, true, !dbg !18186
  %lnot28 = xor i1 %lnot26, true, !dbg !18186
  %lnot30 = xor i1 %lnot28, true, !dbg !18186
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !18186
  store i32 %lnot.ext31, i32* %__ret_warn_on23, align 4, !dbg !18186
  %10 = load i32, i32* %__ret_warn_on23, align 4, !dbg !18187
  %tobool32 = icmp ne i32 %10, 0, !dbg !18187
  %lnot33 = xor i1 %tobool32, true, !dbg !18187
  %lnot35 = xor i1 %lnot33, true, !dbg !18187
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !18187
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !18187
  %tobool38 = icmp ne i64 %conv37, 0, !dbg !18187
  br i1 %tobool38, label %if.then39, label %if.end48, !dbg !18186

if.then39:                                        ; preds = %if.else
  br label %do.body40, !dbg !18187

do.body40:                                        ; preds = %if.then39
  br label %do.body41, !dbg !18189

do.body41:                                        ; preds = %do.body40
  br label %do.end42, !dbg !18191

do.end42:                                         ; preds = %do.body41
  br label %do.body43, !dbg !18189

do.body43:                                        ; preds = %do.end42
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.32, i64 0, i64 0), i32 1989, i32 2305, i64 12) #7, !dbg !18193, !srcloc !18195
  br label %do.end44, !dbg !18193

do.end44:                                         ; preds = %do.body43
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 241) #7, !dbg !18196, !srcloc !18198
  br label %do.body45, !dbg !18189

do.body45:                                        ; preds = %do.end44
  br label %do.end46, !dbg !18199

do.end46:                                         ; preds = %do.body45
  br label %do.end47, !dbg !18189

do.end47:                                         ; preds = %do.end46
  br label %if.end48, !dbg !18189

if.end48:                                         ; preds = %do.end47, %if.else
  %11 = load i32, i32* %__ret_warn_on23, align 4, !dbg !18186
  %tobool50 = icmp ne i32 %11, 0, !dbg !18186
  %lnot51 = xor i1 %tobool50, true, !dbg !18186
  %lnot53 = xor i1 %lnot51, true, !dbg !18186
  %lnot.ext54 = zext i1 %lnot53 to i32, !dbg !18186
  %conv55 = sext i32 %lnot.ext54 to i64, !dbg !18186
  store i64 %conv55, i64* %tmp49, align 8, !dbg !18187
  %12 = load i64, i64* %tmp49, align 8, !dbg !18186
  %13 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !18201
  %ep_in = getelementptr inbounds %struct.usb_device, %struct.usb_device* %13, i32 0, i32 20, !dbg !18202
  %14 = load i32, i32* %epnum, align 4, !dbg !18203
  %idxprom56 = zext i32 %14 to i64, !dbg !18201
  %arrayidx57 = getelementptr [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %ep_in, i64 0, i64 %idxprom56, !dbg !18201
  %15 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx57, align 8, !dbg !18201
  store %struct.usb_host_endpoint* %15, %struct.usb_host_endpoint** %ep, align 8, !dbg !18204
  br label %if.end58

if.end58:                                         ; preds = %if.end48, %if.end
  %16 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !18205
  %tobool59 = icmp ne %struct.usb_host_endpoint* %16, null, !dbg !18205
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !18207

if.then60:                                        ; preds = %if.end58
  store i16 0, i16* %retval, align 2, !dbg !18208
  br label %return, !dbg !18208

if.end61:                                         ; preds = %if.end58
  %17 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !18209
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %17, i32 0, i32 0, !dbg !18210
  %call = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !18211
  %conv62 = trunc i32 %call to i16, !dbg !18211
  store i16 %conv62, i16* %retval, align 2, !dbg !18212
  br label %return, !dbg !18212

return:                                           ; preds = %if.end61, %if.then60
  %18 = load i16, i16* %retval, align 2, !dbg !18213
  ret i16 %18, !dbg !18213
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @qtd_list_free(%struct.ehci_hcd* %ehci, %struct.urb* %urb, %struct.list_head* %qtd_list) #0 !dbg !18214 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %qtd_list.addr = alloca %struct.list_head*, align 8
  %entry1 = alloca %struct.list_head*, align 8
  %temp = alloca %struct.list_head*, align 8
  %qtd = alloca %struct.ehci_qtd*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ehci_qtd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !18217, metadata !DIExpression()), !dbg !18218
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !18219, metadata !DIExpression()), !dbg !18220
  store %struct.list_head* %qtd_list, %struct.list_head** %qtd_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %qtd_list.addr, metadata !18221, metadata !DIExpression()), !dbg !18222
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry1, metadata !18223, metadata !DIExpression()), !dbg !18224
  call void @llvm.dbg.declare(metadata %struct.list_head** %temp, metadata !18225, metadata !DIExpression()), !dbg !18226
  %0 = load %struct.list_head*, %struct.list_head** %qtd_list.addr, align 8, !dbg !18227
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !18227
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !18227
  store %struct.list_head* %1, %struct.list_head** %entry1, align 8, !dbg !18227
  %2 = load %struct.list_head*, %struct.list_head** %entry1, align 8, !dbg !18227
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !18227
  %3 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !18227
  store %struct.list_head* %3, %struct.list_head** %temp, align 8, !dbg !18227
  br label %for.cond, !dbg !18227

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.list_head*, %struct.list_head** %entry1, align 8, !dbg !18229
  %5 = load %struct.list_head*, %struct.list_head** %qtd_list.addr, align 8, !dbg !18229
  %cmp = icmp ne %struct.list_head* %4, %5, !dbg !18229
  br i1 %cmp, label %for.body, label %for.end, !dbg !18227

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ehci_qtd** %qtd, metadata !18231, metadata !DIExpression()), !dbg !18233
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18234, metadata !DIExpression()), !dbg !18236
  %6 = load %struct.list_head*, %struct.list_head** %entry1, align 8, !dbg !18236
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !18236
  store i8* %7, i8** %__mptr, align 8, !dbg !18236
  br label %do.body, !dbg !18236

do.body:                                          ; preds = %for.body
  br label %do.end, !dbg !18237

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !18236
  %add.ptr = getelementptr i8, i8* %8, i64 -64, !dbg !18236
  %9 = bitcast i8* %add.ptr to %struct.ehci_qtd*, !dbg !18236
  store %struct.ehci_qtd* %9, %struct.ehci_qtd** %tmp, align 8, !dbg !18237
  %10 = load %struct.ehci_qtd*, %struct.ehci_qtd** %tmp, align 8, !dbg !18236
  store %struct.ehci_qtd* %10, %struct.ehci_qtd** %qtd, align 8, !dbg !18239
  %11 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !18240
  %qtd_list3 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %11, i32 0, i32 6, !dbg !18241
  call void @list_del(%struct.list_head* %qtd_list3) #11, !dbg !18242
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18243
  %13 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !18244
  call void @ehci_qtd_free(%struct.ehci_hcd* %12, %struct.ehci_qtd* %13) #11, !dbg !18245
  br label %for.inc, !dbg !18246

for.inc:                                          ; preds = %do.end
  %14 = load %struct.list_head*, %struct.list_head** %temp, align 8, !dbg !18229
  store %struct.list_head* %14, %struct.list_head** %entry1, align 8, !dbg !18229
  %15 = load %struct.list_head*, %struct.list_head** %entry1, align 8, !dbg !18229
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %15, i32 0, i32 0, !dbg !18229
  %16 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !18229
  store %struct.list_head* %16, %struct.list_head** %temp, align 8, !dbg !18229
  br label %for.cond, !dbg !18229, !llvm.loop !18247

for.end:                                          ; preds = %for.cond
  ret void, !dbg !18249
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %epd) #0 !dbg !18250 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !18255, metadata !DIExpression()), !dbg !18256
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !18257
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 4, !dbg !18257
  %1 = load i16, i16* %wMaxPacketSize, align 1, !dbg !18257
  %conv = zext i16 %1 to i32, !dbg !18257
  %and = and i32 %conv, 2047, !dbg !18258
  ret i32 %and, !dbg !18259
}

; Function Attrs: noredzone
declare dso_local i32 @usb_hcd_link_urb_to_ep(%struct.usb_hcd*, %struct.urb*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ehci_qh* @qh_append_tds(%struct.ehci_hcd* %ehci, %struct.urb* %urb, %struct.list_head* %qtd_list, i32 %epnum, i8** %ptr) #0 !dbg !18260 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %qtd_list.addr = alloca %struct.list_head*, align 8
  %epnum.addr = alloca i32, align 4
  %ptr.addr = alloca i8**, align 8
  %qh = alloca %struct.ehci_qh*, align 8
  %qh_addr_mask = alloca i32, align 4
  %qtd = alloca %struct.ehci_qtd*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ehci_qtd*, align 8
  %dummy = alloca %struct.ehci_qtd*, align 8
  %dma = alloca i64, align 8
  %token = alloca i32, align 4
  %__mptr56 = alloca i8*, align 8
  %tmp60 = alloca %struct.ehci_qtd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !18263, metadata !DIExpression()), !dbg !18264
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !18265, metadata !DIExpression()), !dbg !18266
  store %struct.list_head* %qtd_list, %struct.list_head** %qtd_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %qtd_list.addr, metadata !18267, metadata !DIExpression()), !dbg !18268
  store i32 %epnum, i32* %epnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %epnum.addr, metadata !18269, metadata !DIExpression()), !dbg !18270
  store i8** %ptr, i8*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !18271, metadata !DIExpression()), !dbg !18272
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !18273, metadata !DIExpression()), !dbg !18274
  store %struct.ehci_qh* null, %struct.ehci_qh** %qh, align 8, !dbg !18274
  call void @llvm.dbg.declare(metadata i32* %qh_addr_mask, metadata !18275, metadata !DIExpression()), !dbg !18276
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18277
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %0, i32 127) #11, !dbg !18278
  store i32 %call, i32* %qh_addr_mask, align 4, !dbg !18276
  %1 = load i8**, i8*** %ptr.addr, align 8, !dbg !18279
  %2 = load i8*, i8** %1, align 8, !dbg !18280
  %3 = bitcast i8* %2 to %struct.ehci_qh*, !dbg !18281
  store %struct.ehci_qh* %3, %struct.ehci_qh** %qh, align 8, !dbg !18282
  %4 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18283
  %cmp = icmp eq %struct.ehci_qh* %4, null, !dbg !18283
  %lnot = xor i1 %cmp, true, !dbg !18283
  %lnot1 = xor i1 %lnot, true, !dbg !18283
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !18283
  %conv = sext i32 %lnot.ext to i64, !dbg !18283
  %tobool = icmp ne i64 %conv, 0, !dbg !18283
  br i1 %tobool, label %if.then, label %if.end, !dbg !18285

if.then:                                          ; preds = %entry
  %5 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18286
  %6 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18288
  %call2 = call %struct.ehci_qh* @qh_make(%struct.ehci_hcd* %5, %struct.urb* %6, i32 2592) #11, !dbg !18289
  store %struct.ehci_qh* %call2, %struct.ehci_qh** %qh, align 8, !dbg !18290
  %7 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18291
  %8 = bitcast %struct.ehci_qh* %7 to i8*, !dbg !18291
  %9 = load i8**, i8*** %ptr.addr, align 8, !dbg !18292
  store i8* %8, i8** %9, align 8, !dbg !18293
  br label %if.end, !dbg !18294

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18295
  %cmp3 = icmp ne %struct.ehci_qh* %10, null, !dbg !18295
  %lnot5 = xor i1 %cmp3, true, !dbg !18295
  %lnot7 = xor i1 %lnot5, true, !dbg !18295
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !18295
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !18295
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !18295
  br i1 %tobool10, label %if.then11, label %if.end66, !dbg !18297

if.then11:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.ehci_qtd** %qtd, metadata !18298, metadata !DIExpression()), !dbg !18300
  %11 = load %struct.list_head*, %struct.list_head** %qtd_list.addr, align 8, !dbg !18301
  %call12 = call i32 @list_empty(%struct.list_head* %11) #11, !dbg !18301
  %tobool13 = icmp ne i32 %call12, 0, !dbg !18301
  %lnot14 = xor i1 %tobool13, true, !dbg !18301
  %lnot16 = xor i1 %lnot14, true, !dbg !18301
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !18301
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !18301
  %tobool19 = icmp ne i64 %conv18, 0, !dbg !18301
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !18303

if.then20:                                        ; preds = %if.then11
  store %struct.ehci_qtd* null, %struct.ehci_qtd** %qtd, align 8, !dbg !18304
  br label %if.end21, !dbg !18305

if.else:                                          ; preds = %if.then11
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18306, metadata !DIExpression()), !dbg !18308
  %12 = load %struct.list_head*, %struct.list_head** %qtd_list.addr, align 8, !dbg !18308
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %12, i32 0, i32 0, !dbg !18308
  %13 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !18308
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !18308
  store i8* %14, i8** %__mptr, align 8, !dbg !18308
  br label %do.body, !dbg !18308

do.body:                                          ; preds = %if.else
  br label %do.end, !dbg !18309

do.end:                                           ; preds = %do.body
  %15 = load i8*, i8** %__mptr, align 8, !dbg !18308
  %add.ptr = getelementptr i8, i8* %15, i64 -64, !dbg !18308
  %16 = bitcast i8* %add.ptr to %struct.ehci_qtd*, !dbg !18308
  store %struct.ehci_qtd* %16, %struct.ehci_qtd** %tmp, align 8, !dbg !18309
  %17 = load %struct.ehci_qtd*, %struct.ehci_qtd** %tmp, align 8, !dbg !18308
  store %struct.ehci_qtd* %17, %struct.ehci_qtd** %qtd, align 8, !dbg !18311
  br label %if.end21

if.end21:                                         ; preds = %do.end, %if.then20
  %18 = load i32, i32* %epnum.addr, align 4, !dbg !18312
  %cmp22 = icmp eq i32 %18, 0, !dbg !18312
  %lnot24 = xor i1 %cmp22, true, !dbg !18312
  %lnot26 = xor i1 %lnot24, true, !dbg !18312
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !18312
  %conv28 = sext i32 %lnot.ext27 to i64, !dbg !18312
  %tobool29 = icmp ne i64 %conv28, 0, !dbg !18312
  br i1 %tobool29, label %if.then30, label %if.end36, !dbg !18314

if.then30:                                        ; preds = %if.end21
  %19 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18315
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %19, i32 0, i32 10, !dbg !18315
  %20 = load i32, i32* %pipe, align 8, !dbg !18315
  %shr = lshr i32 %20, 8, !dbg !18315
  %and = and i32 %shr, 127, !dbg !18315
  %cmp31 = icmp eq i32 %and, 0, !dbg !18318
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !18319

if.then33:                                        ; preds = %if.then30
  %21 = load i32, i32* %qh_addr_mask, align 4, !dbg !18320
  %neg = xor i32 %21, -1, !dbg !18321
  %22 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18322
  %hw = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %22, i32 0, i32 0, !dbg !18323
  %23 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !18323
  %hw_info1 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %23, i32 0, i32 1, !dbg !18324
  %24 = load i32, i32* %hw_info1, align 4, !dbg !18325
  %and34 = and i32 %24, %neg, !dbg !18325
  store i32 %and34, i32* %hw_info1, align 4, !dbg !18325
  br label %if.end35, !dbg !18322

if.end35:                                         ; preds = %if.then33, %if.then30
  br label %if.end36, !dbg !18326

if.end36:                                         ; preds = %if.end35, %if.end21
  %25 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !18327
  %cmp37 = icmp ne %struct.ehci_qtd* %25, null, !dbg !18327
  %lnot39 = xor i1 %cmp37, true, !dbg !18327
  %lnot41 = xor i1 %lnot39, true, !dbg !18327
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !18327
  %conv43 = sext i32 %lnot.ext42 to i64, !dbg !18327
  %tobool44 = icmp ne i64 %conv43, 0, !dbg !18327
  br i1 %tobool44, label %if.then45, label %if.end65, !dbg !18329

if.then45:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata %struct.ehci_qtd** %dummy, metadata !18330, metadata !DIExpression()), !dbg !18332
  call void @llvm.dbg.declare(metadata i64* %dma, metadata !18333, metadata !DIExpression()), !dbg !18334
  call void @llvm.dbg.declare(metadata i32* %token, metadata !18335, metadata !DIExpression()), !dbg !18336
  %26 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !18337
  %hw_token = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %26, i32 0, i32 2, !dbg !18338
  %27 = load i32, i32* %hw_token, align 8, !dbg !18338
  store i32 %27, i32* %token, align 4, !dbg !18339
  %28 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18340
  %call46 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %28, i32 64) #11, !dbg !18340
  %29 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !18341
  %hw_token47 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %29, i32 0, i32 2, !dbg !18342
  store i32 %call46, i32* %hw_token47, align 8, !dbg !18343
  %30 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18344
  %dummy48 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %30, i32 0, i32 5, !dbg !18345
  %31 = load %struct.ehci_qtd*, %struct.ehci_qtd** %dummy48, align 8, !dbg !18345
  store %struct.ehci_qtd* %31, %struct.ehci_qtd** %dummy, align 8, !dbg !18346
  %32 = load %struct.ehci_qtd*, %struct.ehci_qtd** %dummy, align 8, !dbg !18347
  %qtd_dma = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %32, i32 0, i32 5, !dbg !18348
  %33 = load i64, i64* %qtd_dma, align 8, !dbg !18348
  store i64 %33, i64* %dma, align 8, !dbg !18349
  %34 = load %struct.ehci_qtd*, %struct.ehci_qtd** %dummy, align 8, !dbg !18350
  %35 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !18351
  %36 = bitcast %struct.ehci_qtd* %34 to i8*, !dbg !18352
  %37 = bitcast %struct.ehci_qtd* %35 to i8*, !dbg !18352
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 32 %36, i8* align 32 %37, i64 96, i1 false), !dbg !18352
  %38 = load i64, i64* %dma, align 8, !dbg !18353
  %39 = load %struct.ehci_qtd*, %struct.ehci_qtd** %dummy, align 8, !dbg !18354
  %qtd_dma49 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %39, i32 0, i32 5, !dbg !18355
  store i64 %38, i64* %qtd_dma49, align 8, !dbg !18356
  %40 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !18357
  %qtd_list50 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %40, i32 0, i32 6, !dbg !18358
  call void @list_del(%struct.list_head* %qtd_list50) #11, !dbg !18359
  %41 = load %struct.ehci_qtd*, %struct.ehci_qtd** %dummy, align 8, !dbg !18360
  %qtd_list51 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %41, i32 0, i32 6, !dbg !18361
  %42 = load %struct.list_head*, %struct.list_head** %qtd_list.addr, align 8, !dbg !18362
  call void @list_add(%struct.list_head* %qtd_list51, %struct.list_head* %42) #11, !dbg !18363
  %43 = load %struct.list_head*, %struct.list_head** %qtd_list.addr, align 8, !dbg !18364
  %44 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18365
  %qtd_list52 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %44, i32 0, i32 3, !dbg !18366
  call void @list_splice_tail(%struct.list_head* %43, %struct.list_head* %qtd_list52) #11, !dbg !18367
  %45 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18368
  %46 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !18369
  %47 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !18370
  %qtd_dma53 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %47, i32 0, i32 5, !dbg !18371
  %48 = load i64, i64* %qtd_dma53, align 8, !dbg !18371
  call void @ehci_qtd_init(%struct.ehci_hcd* %45, %struct.ehci_qtd* %46, i64 %48) #11, !dbg !18372
  %49 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !18373
  %50 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18374
  %dummy54 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %50, i32 0, i32 5, !dbg !18375
  store %struct.ehci_qtd* %49, %struct.ehci_qtd** %dummy54, align 8, !dbg !18376
  %51 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !18377
  %qtd_dma55 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %51, i32 0, i32 5, !dbg !18378
  %52 = load i64, i64* %qtd_dma55, align 8, !dbg !18378
  store i64 %52, i64* %dma, align 8, !dbg !18379
  call void @llvm.dbg.declare(metadata i8** %__mptr56, metadata !18380, metadata !DIExpression()), !dbg !18382
  %53 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18382
  %qtd_list57 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %53, i32 0, i32 3, !dbg !18382
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %qtd_list57, i32 0, i32 1, !dbg !18382
  %54 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !18382
  %55 = bitcast %struct.list_head* %54 to i8*, !dbg !18382
  store i8* %55, i8** %__mptr56, align 8, !dbg !18382
  br label %do.body58, !dbg !18382

do.body58:                                        ; preds = %if.then45
  br label %do.end59, !dbg !18383

do.end59:                                         ; preds = %do.body58
  %56 = load i8*, i8** %__mptr56, align 8, !dbg !18382
  %add.ptr61 = getelementptr i8, i8* %56, i64 -64, !dbg !18382
  %57 = bitcast i8* %add.ptr61 to %struct.ehci_qtd*, !dbg !18382
  store %struct.ehci_qtd* %57, %struct.ehci_qtd** %tmp60, align 8, !dbg !18383
  %58 = load %struct.ehci_qtd*, %struct.ehci_qtd** %tmp60, align 8, !dbg !18382
  store %struct.ehci_qtd* %58, %struct.ehci_qtd** %qtd, align 8, !dbg !18385
  %59 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18386
  %60 = load i64, i64* %dma, align 8, !dbg !18386
  %conv62 = trunc i64 %60 to i32, !dbg !18386
  %call63 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %59, i32 %conv62) #11, !dbg !18386
  %61 = load %struct.ehci_qtd*, %struct.ehci_qtd** %qtd, align 8, !dbg !18387
  %hw_next = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %61, i32 0, i32 0, !dbg !18388
  store i32 %call63, i32* %hw_next, align 32, !dbg !18389
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !18390, !srcloc !18391
  %62 = load i32, i32* %token, align 4, !dbg !18392
  %63 = load %struct.ehci_qtd*, %struct.ehci_qtd** %dummy, align 8, !dbg !18393
  %hw_token64 = getelementptr inbounds %struct.ehci_qtd, %struct.ehci_qtd* %63, i32 0, i32 2, !dbg !18394
  store i32 %62, i32* %hw_token64, align 8, !dbg !18395
  %64 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18396
  %65 = bitcast %struct.ehci_qh* %64 to i8*, !dbg !18396
  %66 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18397
  %hcpriv = getelementptr inbounds %struct.urb, %struct.urb* %66, i32 0, i32 2, !dbg !18398
  store i8* %65, i8** %hcpriv, align 8, !dbg !18399
  br label %if.end65, !dbg !18400

if.end65:                                         ; preds = %do.end59, %if.end36
  br label %if.end66, !dbg !18401

if.end66:                                         ; preds = %if.end65, %if.end
  %67 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18402
  ret %struct.ehci_qh* %67, !dbg !18403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ehci_qh* @qh_make(%struct.ehci_hcd* %ehci, %struct.urb* %urb, i32 %flags) #0 !dbg !18404 {
entry:
  %retval = alloca %struct.ehci_qh*, align 8
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %flags.addr = alloca i32, align 4
  %qh = alloca %struct.ehci_qh*, align 8
  %ep = alloca %struct.usb_host_endpoint*, align 8
  %info1 = alloca i32, align 4
  %info2 = alloca i32, align 4
  %is_input = alloca i32, align 4
  %type = alloca i32, align 4
  %maxp = alloca i32, align 4
  %mult = alloca i32, align 4
  %tt = alloca %struct.usb_tt*, align 8
  %hw = alloca %struct.ehci_qh_hw*, align 8
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x330 = alloca i32, align 4
  %__UNIQUE_ID___y331 = alloca i32, align 4
  %tmp55 = alloca i32, align 4
  %__UNIQUE_ID___x332 = alloca i32, align 4
  %__UNIQUE_ID___y333 = alloca i32, align 4
  %tmp59 = alloca i32, align 4
  %think_time = alloca i32, align 4
  %__UNIQUE_ID___x334 = alloca i32, align 4
  %__UNIQUE_ID___y335 = alloca i32, align 4
  %tmp134 = alloca i32, align 4
  %__UNIQUE_ID___x336 = alloca i32, align 4
  %__UNIQUE_ID___y337 = alloca i32, align 4
  %tmp596 = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !18407, metadata !DIExpression()), !dbg !18408
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !18409, metadata !DIExpression()), !dbg !18410
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !18411, metadata !DIExpression()), !dbg !18412
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !18413, metadata !DIExpression()), !dbg !18414
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18415
  %1 = load i32, i32* %flags.addr, align 4, !dbg !18416
  %call = call %struct.ehci_qh* @ehci_qh_alloc(%struct.ehci_hcd* %0, i32 %1) #11, !dbg !18417
  store %struct.ehci_qh* %call, %struct.ehci_qh** %qh, align 8, !dbg !18414
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep, metadata !18418, metadata !DIExpression()), !dbg !18419
  call void @llvm.dbg.declare(metadata i32* %info1, metadata !18420, metadata !DIExpression()), !dbg !18421
  store i32 0, i32* %info1, align 4, !dbg !18421
  call void @llvm.dbg.declare(metadata i32* %info2, metadata !18422, metadata !DIExpression()), !dbg !18423
  store i32 0, i32* %info2, align 4, !dbg !18423
  call void @llvm.dbg.declare(metadata i32* %is_input, metadata !18424, metadata !DIExpression()), !dbg !18425
  call void @llvm.dbg.declare(metadata i32* %type, metadata !18426, metadata !DIExpression()), !dbg !18427
  call void @llvm.dbg.declare(metadata i32* %maxp, metadata !18428, metadata !DIExpression()), !dbg !18429
  store i32 0, i32* %maxp, align 4, !dbg !18429
  call void @llvm.dbg.declare(metadata i32* %mult, metadata !18430, metadata !DIExpression()), !dbg !18431
  call void @llvm.dbg.declare(metadata %struct.usb_tt** %tt, metadata !18432, metadata !DIExpression()), !dbg !18433
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18434
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 8, !dbg !18435
  %3 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !18435
  %tt1 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %3, i32 0, i32 7, !dbg !18436
  %4 = load %struct.usb_tt*, %struct.usb_tt** %tt1, align 8, !dbg !18436
  store %struct.usb_tt* %4, %struct.usb_tt** %tt, align 8, !dbg !18433
  call void @llvm.dbg.declare(metadata %struct.ehci_qh_hw** %hw, metadata !18437, metadata !DIExpression()), !dbg !18438
  %5 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18439
  %tobool = icmp ne %struct.ehci_qh* %5, null, !dbg !18439
  br i1 %tobool, label %if.end, label %if.then, !dbg !18441

if.then:                                          ; preds = %entry
  %6 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18442
  store %struct.ehci_qh* %6, %struct.ehci_qh** %retval, align 8, !dbg !18443
  br label %return, !dbg !18443

if.end:                                           ; preds = %entry
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18444
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 10, !dbg !18444
  %8 = load i32, i32* %pipe, align 8, !dbg !18444
  %shr = lshr i32 %8, 15, !dbg !18444
  %and = and i32 %shr, 15, !dbg !18444
  %shl = shl i32 %and, 8, !dbg !18445
  %9 = load i32, i32* %info1, align 4, !dbg !18446
  %or = or i32 %9, %shl, !dbg !18446
  store i32 %or, i32* %info1, align 4, !dbg !18446
  %10 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18447
  %pipe2 = getelementptr inbounds %struct.urb, %struct.urb* %10, i32 0, i32 10, !dbg !18447
  %11 = load i32, i32* %pipe2, align 8, !dbg !18447
  %shr3 = lshr i32 %11, 8, !dbg !18447
  %and4 = and i32 %shr3, 127, !dbg !18447
  %shl5 = shl i32 %and4, 0, !dbg !18448
  %12 = load i32, i32* %info1, align 4, !dbg !18449
  %or6 = or i32 %12, %shl5, !dbg !18449
  store i32 %or6, i32* %info1, align 4, !dbg !18449
  %13 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18450
  %pipe7 = getelementptr inbounds %struct.urb, %struct.urb* %13, i32 0, i32 10, !dbg !18450
  %14 = load i32, i32* %pipe7, align 8, !dbg !18450
  %and8 = and i32 %14, 128, !dbg !18450
  store i32 %and8, i32* %is_input, align 4, !dbg !18451
  %15 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18452
  %pipe9 = getelementptr inbounds %struct.urb, %struct.urb* %15, i32 0, i32 10, !dbg !18452
  %16 = load i32, i32* %pipe9, align 8, !dbg !18452
  %shr10 = lshr i32 %16, 30, !dbg !18452
  %and11 = and i32 %shr10, 3, !dbg !18452
  store i32 %and11, i32* %type, align 4, !dbg !18453
  %17 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18454
  %dev12 = getelementptr inbounds %struct.urb, %struct.urb* %17, i32 0, i32 8, !dbg !18455
  %18 = load %struct.usb_device*, %struct.usb_device** %dev12, align 8, !dbg !18455
  %19 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18456
  %pipe13 = getelementptr inbounds %struct.urb, %struct.urb* %19, i32 0, i32 10, !dbg !18457
  %20 = load i32, i32* %pipe13, align 8, !dbg !18457
  %call14 = call %struct.usb_host_endpoint* @usb_pipe_endpoint(%struct.usb_device* %18, i32 %20) #11, !dbg !18458
  store %struct.usb_host_endpoint* %call14, %struct.usb_host_endpoint** %ep, align 8, !dbg !18459
  %21 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !18460
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %21, i32 0, i32 0, !dbg !18461
  %call15 = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !18462
  store i32 %call15, i32* %maxp, align 4, !dbg !18463
  %22 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !18464
  %desc16 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %22, i32 0, i32 0, !dbg !18465
  %call17 = call i32 @usb_endpoint_maxp_mult(%struct.usb_endpoint_descriptor* %desc16) #11, !dbg !18466
  store i32 %call17, i32* %mult, align 4, !dbg !18467
  %23 = load i32, i32* %maxp, align 4, !dbg !18468
  %cmp = icmp sgt i32 %23, 1024, !dbg !18470
  br i1 %cmp, label %if.then18, label %if.end19, !dbg !18471

if.then18:                                        ; preds = %if.end
  br label %done, !dbg !18472

if.end19:                                         ; preds = %if.end
  %24 = load i32, i32* %type, align 4, !dbg !18474
  %cmp20 = icmp eq i32 %24, 1, !dbg !18476
  br i1 %cmp20, label %if.then21, label %if.end614, !dbg !18477

if.then21:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !18478, metadata !DIExpression()), !dbg !18480
  %25 = load i32, i32* %is_input, align 4, !dbg !18481
  %26 = load i32, i32* %mult, align 4, !dbg !18481
  %27 = load i32, i32* %maxp, align 4, !dbg !18481
  %mul = mul i32 %26, %27, !dbg !18481
  %call22 = call i64 @usb_calc_bus_time(i32 3, i32 %25, i32 0, i32 %mul) #11, !dbg !18481
  %add = add i64 %call22, 1000, !dbg !18481
  %sub = sub i64 %add, 1, !dbg !18481
  %div = sdiv i64 %sub, 1000, !dbg !18481
  %conv = trunc i64 %div to i8, !dbg !18481
  %28 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18482
  %ps = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %28, i32 0, i32 7, !dbg !18483
  %usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 9, !dbg !18484
  store i8 %conv, i8* %usecs, align 2, !dbg !18485
  %29 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18486
  %ps23 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %29, i32 0, i32 7, !dbg !18487
  %phase = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps23, i32 0, i32 6, !dbg !18488
  store i16 29999, i16* %phase, align 2, !dbg !18489
  %30 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18490
  %dev24 = getelementptr inbounds %struct.urb, %struct.urb* %30, i32 0, i32 8, !dbg !18492
  %31 = load %struct.usb_device*, %struct.usb_device** %dev24, align 8, !dbg !18492
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %31, i32 0, i32 4, !dbg !18493
  %32 = load i32, i32* %speed, align 4, !dbg !18493
  %cmp25 = icmp eq i32 %32, 3, !dbg !18494
  br i1 %cmp25, label %if.then27, label %if.else74, !dbg !18495

if.then27:                                        ; preds = %if.then21
  %33 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18496
  %ps28 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %33, i32 0, i32 7, !dbg !18498
  %c_usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps28, i32 0, i32 10, !dbg !18499
  store i8 0, i8* %c_usecs, align 1, !dbg !18500
  %34 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18501
  %gap_uf = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %34, i32 0, i32 12, !dbg !18502
  store i8 0, i8* %gap_uf, align 1, !dbg !18503
  %35 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18504
  %interval = getelementptr inbounds %struct.urb, %struct.urb* %35, i32 0, i32 25, !dbg !18506
  %36 = load i32, i32* %interval, align 8, !dbg !18506
  %cmp29 = icmp sgt i32 %36, 1, !dbg !18507
  br i1 %cmp29, label %land.lhs.true, label %if.else, !dbg !18508

land.lhs.true:                                    ; preds = %if.then27
  %37 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18509
  %interval31 = getelementptr inbounds %struct.urb, %struct.urb* %37, i32 0, i32 25, !dbg !18510
  %38 = load i32, i32* %interval31, align 8, !dbg !18510
  %cmp32 = icmp slt i32 %38, 8, !dbg !18511
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !18512

if.then34:                                        ; preds = %land.lhs.true
  %39 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18513
  %interval35 = getelementptr inbounds %struct.urb, %struct.urb* %39, i32 0, i32 25, !dbg !18515
  store i32 1, i32* %interval35, align 8, !dbg !18516
  br label %if.end45, !dbg !18517

if.else:                                          ; preds = %land.lhs.true, %if.then27
  %40 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18518
  %interval36 = getelementptr inbounds %struct.urb, %struct.urb* %40, i32 0, i32 25, !dbg !18520
  %41 = load i32, i32* %interval36, align 8, !dbg !18520
  %42 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18521
  %periodic_size = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %42, i32 0, i32 23, !dbg !18522
  %43 = load i32, i32* %periodic_size, align 8, !dbg !18522
  %shl37 = shl i32 %43, 3, !dbg !18523
  %cmp38 = icmp ugt i32 %41, %shl37, !dbg !18524
  br i1 %cmp38, label %if.then40, label %if.end44, !dbg !18525

if.then40:                                        ; preds = %if.else
  %44 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18526
  %periodic_size41 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %44, i32 0, i32 23, !dbg !18528
  %45 = load i32, i32* %periodic_size41, align 8, !dbg !18528
  %shl42 = shl i32 %45, 3, !dbg !18529
  %46 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18530
  %interval43 = getelementptr inbounds %struct.urb, %struct.urb* %46, i32 0, i32 25, !dbg !18531
  store i32 %shl42, i32* %interval43, align 8, !dbg !18532
  br label %if.end44, !dbg !18533

if.end44:                                         ; preds = %if.then40, %if.else
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then34
  %47 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18534
  %interval46 = getelementptr inbounds %struct.urb, %struct.urb* %47, i32 0, i32 25, !dbg !18535
  %48 = load i32, i32* %interval46, align 8, !dbg !18535
  %shr47 = ashr i32 %48, 3, !dbg !18536
  %conv48 = trunc i32 %shr47 to i16, !dbg !18534
  %49 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18537
  %ps49 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %49, i32 0, i32 7, !dbg !18538
  %period = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps49, i32 0, i32 5, !dbg !18539
  store i16 %conv48, i16* %period, align 4, !dbg !18540
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x330, metadata !18541, metadata !DIExpression()), !dbg !18543
  store i32 64, i32* %__UNIQUE_ID___x330, align 4, !dbg !18543
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y331, metadata !18544, metadata !DIExpression()), !dbg !18543
  %50 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18543
  %ep50 = getelementptr inbounds %struct.urb, %struct.urb* %50, i32 0, i32 9, !dbg !18543
  %51 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep50, align 8, !dbg !18543
  %desc51 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %51, i32 0, i32 0, !dbg !18543
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc51, i32 0, i32 5, !dbg !18543
  %52 = load i8, i8* %bInterval, align 2, !dbg !18543
  %conv52 = zext i8 %52 to i32, !dbg !18543
  %sub53 = sub i32 %conv52, 1, !dbg !18543
  %shl54 = shl i32 1, %sub53, !dbg !18543
  store i32 %shl54, i32* %__UNIQUE_ID___y331, align 4, !dbg !18543
  %53 = load i32, i32* %__UNIQUE_ID___x330, align 4, !dbg !18543
  %54 = load i32, i32* %__UNIQUE_ID___y331, align 4, !dbg !18543
  %cmp56 = icmp ult i32 %53, %54, !dbg !18543
  br i1 %cmp56, label %cond.true, label %cond.false, !dbg !18543

cond.true:                                        ; preds = %if.end45
  %55 = load i32, i32* %__UNIQUE_ID___x330, align 4, !dbg !18543
  br label %cond.end, !dbg !18543

cond.false:                                       ; preds = %if.end45
  %56 = load i32, i32* %__UNIQUE_ID___y331, align 4, !dbg !18543
  br label %cond.end, !dbg !18543

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %55, %cond.true ], [ %56, %cond.false ], !dbg !18543
  store i32 %cond, i32* %tmp55, align 4, !dbg !18543
  %57 = load i32, i32* %tmp55, align 4, !dbg !18543
  store i32 %57, i32* %tmp, align 4, !dbg !18545
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x332, metadata !18546, metadata !DIExpression()), !dbg !18548
  %58 = load i32, i32* %tmp, align 4, !dbg !18548
  store i32 %58, i32* %__UNIQUE_ID___x332, align 4, !dbg !18548
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y333, metadata !18549, metadata !DIExpression()), !dbg !18548
  %59 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18548
  %interval58 = getelementptr inbounds %struct.urb, %struct.urb* %59, i32 0, i32 25, !dbg !18548
  %60 = load i32, i32* %interval58, align 8, !dbg !18548
  store i32 %60, i32* %__UNIQUE_ID___y333, align 4, !dbg !18548
  %61 = load i32, i32* %__UNIQUE_ID___x332, align 4, !dbg !18548
  %62 = load i32, i32* %__UNIQUE_ID___y333, align 4, !dbg !18548
  %cmp60 = icmp ult i32 %61, %62, !dbg !18548
  br i1 %cmp60, label %cond.true62, label %cond.false63, !dbg !18548

cond.true62:                                      ; preds = %cond.end
  %63 = load i32, i32* %__UNIQUE_ID___x332, align 4, !dbg !18548
  br label %cond.end64, !dbg !18548

cond.false63:                                     ; preds = %cond.end
  %64 = load i32, i32* %__UNIQUE_ID___y333, align 4, !dbg !18548
  br label %cond.end64, !dbg !18548

cond.end64:                                       ; preds = %cond.false63, %cond.true62
  %cond65 = phi i32 [ %63, %cond.true62 ], [ %64, %cond.false63 ], !dbg !18548
  store i32 %cond65, i32* %tmp59, align 4, !dbg !18548
  %65 = load i32, i32* %tmp59, align 4, !dbg !18548
  %conv66 = trunc i32 %65 to i8, !dbg !18550
  %66 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18551
  %ps67 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %66, i32 0, i32 7, !dbg !18552
  %bw_uperiod = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps67, i32 0, i32 11, !dbg !18553
  store i8 %conv66, i8* %bw_uperiod, align 4, !dbg !18554
  %67 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18555
  %ps68 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %67, i32 0, i32 7, !dbg !18556
  %bw_uperiod69 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps68, i32 0, i32 11, !dbg !18557
  %68 = load i8, i8* %bw_uperiod69, align 4, !dbg !18557
  %conv70 = zext i8 %68 to i32, !dbg !18555
  %shr71 = ashr i32 %conv70, 3, !dbg !18558
  %conv72 = trunc i32 %shr71 to i8, !dbg !18555
  %69 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18559
  %ps73 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %69, i32 0, i32 7, !dbg !18560
  %bw_period = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps73, i32 0, i32 12, !dbg !18561
  store i8 %conv72, i8* %bw_period, align 1, !dbg !18562
  br label %if.end613, !dbg !18563

if.else74:                                        ; preds = %if.then21
  call void @llvm.dbg.declare(metadata i32* %think_time, metadata !18564, metadata !DIExpression()), !dbg !18566
  %70 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18567
  %dev75 = getelementptr inbounds %struct.urb, %struct.urb* %70, i32 0, i32 8, !dbg !18568
  %71 = load %struct.usb_device*, %struct.usb_device** %dev75, align 8, !dbg !18568
  %speed76 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %71, i32 0, i32 4, !dbg !18569
  %72 = load i32, i32* %speed76, align 4, !dbg !18569
  %73 = load i32, i32* %is_input, align 4, !dbg !18570
  %74 = load i32, i32* %maxp, align 4, !dbg !18571
  %call77 = call i64 @usb_calc_bus_time(i32 %72, i32 %73, i32 0, i32 %74) #11, !dbg !18572
  %div78 = sdiv i64 %call77, 125000, !dbg !18573
  %add79 = add i64 1, %div78, !dbg !18574
  %conv80 = trunc i64 %add79 to i8, !dbg !18575
  %75 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18576
  %gap_uf81 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %75, i32 0, i32 12, !dbg !18577
  store i8 %conv80, i8* %gap_uf81, align 1, !dbg !18578
  %76 = load i32, i32* %is_input, align 4, !dbg !18579
  %tobool82 = icmp ne i32 %76, 0, !dbg !18579
  br i1 %tobool82, label %if.then83, label %if.else93, !dbg !18581

if.then83:                                        ; preds = %if.else74
  %77 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18582
  %ps84 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %77, i32 0, i32 7, !dbg !18584
  %usecs85 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps84, i32 0, i32 9, !dbg !18585
  %78 = load i8, i8* %usecs85, align 2, !dbg !18585
  %conv86 = zext i8 %78 to i64, !dbg !18582
  %add87 = add i64 %conv86, 1, !dbg !18586
  %conv88 = trunc i64 %add87 to i8, !dbg !18582
  %79 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18587
  %ps89 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %79, i32 0, i32 7, !dbg !18588
  %c_usecs90 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps89, i32 0, i32 10, !dbg !18589
  store i8 %conv88, i8* %c_usecs90, align 1, !dbg !18590
  %80 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18591
  %ps91 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %80, i32 0, i32 7, !dbg !18592
  %usecs92 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps91, i32 0, i32 9, !dbg !18593
  store i8 1, i8* %usecs92, align 2, !dbg !18594
  br label %if.end101, !dbg !18595

if.else93:                                        ; preds = %if.else74
  %81 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18596
  %ps94 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %81, i32 0, i32 7, !dbg !18598
  %usecs95 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps94, i32 0, i32 9, !dbg !18599
  %82 = load i8, i8* %usecs95, align 2, !dbg !18600
  %conv96 = zext i8 %82 to i64, !dbg !18600
  %add97 = add i64 %conv96, 1, !dbg !18600
  %conv98 = trunc i64 %add97 to i8, !dbg !18600
  store i8 %conv98, i8* %usecs95, align 2, !dbg !18600
  %83 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18601
  %ps99 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %83, i32 0, i32 7, !dbg !18602
  %c_usecs100 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps99, i32 0, i32 10, !dbg !18603
  store i8 1, i8* %c_usecs100, align 1, !dbg !18604
  br label %if.end101

if.end101:                                        ; preds = %if.else93, %if.then83
  %84 = load %struct.usb_tt*, %struct.usb_tt** %tt, align 8, !dbg !18605
  %tobool102 = icmp ne %struct.usb_tt* %84, null, !dbg !18605
  br i1 %tobool102, label %cond.true103, label %cond.false105, !dbg !18605

cond.true103:                                     ; preds = %if.end101
  %85 = load %struct.usb_tt*, %struct.usb_tt** %tt, align 8, !dbg !18606
  %think_time104 = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %85, i32 0, i32 2, !dbg !18607
  %86 = load i32, i32* %think_time104, align 4, !dbg !18607
  br label %cond.end106, !dbg !18605

cond.false105:                                    ; preds = %if.end101
  br label %cond.end106, !dbg !18605

cond.end106:                                      ; preds = %cond.false105, %cond.true103
  %cond107 = phi i32 [ %86, %cond.true103 ], [ 0, %cond.false105 ], !dbg !18605
  store i32 %cond107, i32* %think_time, align 4, !dbg !18608
  %87 = load i32, i32* %think_time, align 4, !dbg !18609
  %conv108 = sext i32 %87 to i64, !dbg !18609
  %88 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18609
  %dev109 = getelementptr inbounds %struct.urb, %struct.urb* %88, i32 0, i32 8, !dbg !18609
  %89 = load %struct.usb_device*, %struct.usb_device** %dev109, align 8, !dbg !18609
  %speed110 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %89, i32 0, i32 4, !dbg !18609
  %90 = load i32, i32* %speed110, align 4, !dbg !18609
  %91 = load i32, i32* %is_input, align 4, !dbg !18609
  %92 = load i32, i32* %maxp, align 4, !dbg !18609
  %call111 = call i64 @usb_calc_bus_time(i32 %90, i32 %91, i32 0, i32 %92) #11, !dbg !18609
  %add112 = add i64 %conv108, %call111, !dbg !18609
  %add113 = add i64 %add112, 1000, !dbg !18609
  %sub114 = sub i64 %add113, 1, !dbg !18609
  %div115 = sdiv i64 %sub114, 1000, !dbg !18609
  %conv116 = trunc i64 %div115 to i16, !dbg !18609
  %93 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18610
  %ps117 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %93, i32 0, i32 7, !dbg !18611
  %tt_usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps117, i32 0, i32 3, !dbg !18612
  store i16 %conv116, i16* %tt_usecs, align 8, !dbg !18613
  %94 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18614
  %interval118 = getelementptr inbounds %struct.urb, %struct.urb* %94, i32 0, i32 25, !dbg !18616
  %95 = load i32, i32* %interval118, align 8, !dbg !18616
  %96 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18617
  %periodic_size119 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %96, i32 0, i32 23, !dbg !18618
  %97 = load i32, i32* %periodic_size119, align 8, !dbg !18618
  %cmp120 = icmp ugt i32 %95, %97, !dbg !18619
  br i1 %cmp120, label %if.then122, label %if.end125, !dbg !18620

if.then122:                                       ; preds = %cond.end106
  %98 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18621
  %periodic_size123 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %98, i32 0, i32 23, !dbg !18622
  %99 = load i32, i32* %periodic_size123, align 8, !dbg !18622
  %100 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18623
  %interval124 = getelementptr inbounds %struct.urb, %struct.urb* %100, i32 0, i32 25, !dbg !18624
  store i32 %99, i32* %interval124, align 8, !dbg !18625
  br label %if.end125, !dbg !18623

if.end125:                                        ; preds = %if.then122, %cond.end106
  %101 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18626
  %interval126 = getelementptr inbounds %struct.urb, %struct.urb* %101, i32 0, i32 25, !dbg !18627
  %102 = load i32, i32* %interval126, align 8, !dbg !18627
  %conv127 = trunc i32 %102 to i16, !dbg !18626
  %103 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18628
  %ps128 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %103, i32 0, i32 7, !dbg !18629
  %period129 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps128, i32 0, i32 5, !dbg !18630
  store i16 %conv127, i16* %period129, align 4, !dbg !18631
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x334, metadata !18632, metadata !DIExpression()), !dbg !18634
  store i32 8, i32* %__UNIQUE_ID___x334, align 4, !dbg !18634
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y335, metadata !18635, metadata !DIExpression()), !dbg !18634
  %104 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18634
  %ep130 = getelementptr inbounds %struct.urb, %struct.urb* %104, i32 0, i32 9, !dbg !18634
  %105 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep130, align 8, !dbg !18634
  %desc131 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %105, i32 0, i32 0, !dbg !18634
  %bInterval132 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc131, i32 0, i32 5, !dbg !18634
  %106 = load i8, i8* %bInterval132, align 2, !dbg !18634
  %conv133 = zext i8 %106 to i32, !dbg !18634
  store i32 %conv133, i32* %__UNIQUE_ID___y335, align 4, !dbg !18634
  %107 = load i32, i32* %__UNIQUE_ID___x334, align 4, !dbg !18634
  %108 = load i32, i32* %__UNIQUE_ID___y335, align 4, !dbg !18634
  %cmp135 = icmp ult i32 %107, %108, !dbg !18634
  br i1 %cmp135, label %cond.true137, label %cond.false138, !dbg !18634

cond.true137:                                     ; preds = %if.end125
  %109 = load i32, i32* %__UNIQUE_ID___x334, align 4, !dbg !18634
  br label %cond.end139, !dbg !18634

cond.false138:                                    ; preds = %if.end125
  %110 = load i32, i32* %__UNIQUE_ID___y335, align 4, !dbg !18634
  br label %cond.end139, !dbg !18634

cond.end139:                                      ; preds = %cond.false138, %cond.true137
  %cond140 = phi i32 [ %109, %cond.true137 ], [ %110, %cond.false138 ], !dbg !18634
  store i32 %cond140, i32* %tmp134, align 4, !dbg !18634
  %111 = load i32, i32* %tmp134, align 4, !dbg !18634
  store i32 %111, i32* %tmp, align 4, !dbg !18636
  %112 = load i32, i32* %tmp, align 4, !dbg !18637
  %113 = call i1 @llvm.is.constant.i32(i32 %112), !dbg !18637
  br i1 %113, label %cond.true141, label %cond.false589, !dbg !18637

cond.true141:                                     ; preds = %cond.end139
  %114 = load i32, i32* %tmp, align 4, !dbg !18637
  %115 = call i1 @llvm.is.constant.i32(i32 %114), !dbg !18637
  br i1 %115, label %cond.true142, label %cond.false584, !dbg !18637

cond.true142:                                     ; preds = %cond.true141
  %116 = load i32, i32* %tmp, align 4, !dbg !18637
  %117 = call i1 @llvm.is.constant.i32(i32 %116), !dbg !18637
  br i1 %117, label %cond.true143, label %cond.false581, !dbg !18637

cond.true143:                                     ; preds = %cond.true142
  %118 = load i32, i32* %tmp, align 4, !dbg !18637
  %cmp144 = icmp ult i32 %118, 2, !dbg !18637
  br i1 %cmp144, label %cond.true146, label %cond.false147, !dbg !18637

cond.true146:                                     ; preds = %cond.true143
  br label %cond.end579, !dbg !18637

cond.false147:                                    ; preds = %cond.true143
  %119 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv148 = zext i32 %119 to i64, !dbg !18637
  %and149 = and i64 %conv148, -9223372036854775808, !dbg !18637
  %tobool150 = icmp ne i64 %and149, 0, !dbg !18637
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !18637

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end577, !dbg !18637

cond.false152:                                    ; preds = %cond.false147
  %120 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv153 = zext i32 %120 to i64, !dbg !18637
  %and154 = and i64 %conv153, 4611686018427387904, !dbg !18637
  %tobool155 = icmp ne i64 %and154, 0, !dbg !18637
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !18637

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end575, !dbg !18637

cond.false157:                                    ; preds = %cond.false152
  %121 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv158 = zext i32 %121 to i64, !dbg !18637
  %and159 = and i64 %conv158, 2305843009213693952, !dbg !18637
  %tobool160 = icmp ne i64 %and159, 0, !dbg !18637
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !18637

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end573, !dbg !18637

cond.false162:                                    ; preds = %cond.false157
  %122 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv163 = zext i32 %122 to i64, !dbg !18637
  %and164 = and i64 %conv163, 1152921504606846976, !dbg !18637
  %tobool165 = icmp ne i64 %and164, 0, !dbg !18637
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !18637

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end571, !dbg !18637

cond.false167:                                    ; preds = %cond.false162
  %123 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv168 = zext i32 %123 to i64, !dbg !18637
  %and169 = and i64 %conv168, 576460752303423488, !dbg !18637
  %tobool170 = icmp ne i64 %and169, 0, !dbg !18637
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !18637

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end569, !dbg !18637

cond.false172:                                    ; preds = %cond.false167
  %124 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv173 = zext i32 %124 to i64, !dbg !18637
  %and174 = and i64 %conv173, 288230376151711744, !dbg !18637
  %tobool175 = icmp ne i64 %and174, 0, !dbg !18637
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !18637

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end567, !dbg !18637

cond.false177:                                    ; preds = %cond.false172
  %125 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv178 = zext i32 %125 to i64, !dbg !18637
  %and179 = and i64 %conv178, 144115188075855872, !dbg !18637
  %tobool180 = icmp ne i64 %and179, 0, !dbg !18637
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !18637

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end565, !dbg !18637

cond.false182:                                    ; preds = %cond.false177
  %126 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv183 = zext i32 %126 to i64, !dbg !18637
  %and184 = and i64 %conv183, 72057594037927936, !dbg !18637
  %tobool185 = icmp ne i64 %and184, 0, !dbg !18637
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !18637

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end563, !dbg !18637

cond.false187:                                    ; preds = %cond.false182
  %127 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv188 = zext i32 %127 to i64, !dbg !18637
  %and189 = and i64 %conv188, 36028797018963968, !dbg !18637
  %tobool190 = icmp ne i64 %and189, 0, !dbg !18637
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !18637

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end561, !dbg !18637

cond.false192:                                    ; preds = %cond.false187
  %128 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv193 = zext i32 %128 to i64, !dbg !18637
  %and194 = and i64 %conv193, 18014398509481984, !dbg !18637
  %tobool195 = icmp ne i64 %and194, 0, !dbg !18637
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !18637

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end559, !dbg !18637

cond.false197:                                    ; preds = %cond.false192
  %129 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv198 = zext i32 %129 to i64, !dbg !18637
  %and199 = and i64 %conv198, 9007199254740992, !dbg !18637
  %tobool200 = icmp ne i64 %and199, 0, !dbg !18637
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !18637

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end557, !dbg !18637

cond.false202:                                    ; preds = %cond.false197
  %130 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv203 = zext i32 %130 to i64, !dbg !18637
  %and204 = and i64 %conv203, 4503599627370496, !dbg !18637
  %tobool205 = icmp ne i64 %and204, 0, !dbg !18637
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !18637

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end555, !dbg !18637

cond.false207:                                    ; preds = %cond.false202
  %131 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv208 = zext i32 %131 to i64, !dbg !18637
  %and209 = and i64 %conv208, 2251799813685248, !dbg !18637
  %tobool210 = icmp ne i64 %and209, 0, !dbg !18637
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !18637

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end553, !dbg !18637

cond.false212:                                    ; preds = %cond.false207
  %132 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv213 = zext i32 %132 to i64, !dbg !18637
  %and214 = and i64 %conv213, 1125899906842624, !dbg !18637
  %tobool215 = icmp ne i64 %and214, 0, !dbg !18637
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !18637

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end551, !dbg !18637

cond.false217:                                    ; preds = %cond.false212
  %133 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv218 = zext i32 %133 to i64, !dbg !18637
  %and219 = and i64 %conv218, 562949953421312, !dbg !18637
  %tobool220 = icmp ne i64 %and219, 0, !dbg !18637
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !18637

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end549, !dbg !18637

cond.false222:                                    ; preds = %cond.false217
  %134 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv223 = zext i32 %134 to i64, !dbg !18637
  %and224 = and i64 %conv223, 281474976710656, !dbg !18637
  %tobool225 = icmp ne i64 %and224, 0, !dbg !18637
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !18637

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end547, !dbg !18637

cond.false227:                                    ; preds = %cond.false222
  %135 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv228 = zext i32 %135 to i64, !dbg !18637
  %and229 = and i64 %conv228, 140737488355328, !dbg !18637
  %tobool230 = icmp ne i64 %and229, 0, !dbg !18637
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !18637

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end545, !dbg !18637

cond.false232:                                    ; preds = %cond.false227
  %136 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv233 = zext i32 %136 to i64, !dbg !18637
  %and234 = and i64 %conv233, 70368744177664, !dbg !18637
  %tobool235 = icmp ne i64 %and234, 0, !dbg !18637
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !18637

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end543, !dbg !18637

cond.false237:                                    ; preds = %cond.false232
  %137 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv238 = zext i32 %137 to i64, !dbg !18637
  %and239 = and i64 %conv238, 35184372088832, !dbg !18637
  %tobool240 = icmp ne i64 %and239, 0, !dbg !18637
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !18637

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end541, !dbg !18637

cond.false242:                                    ; preds = %cond.false237
  %138 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv243 = zext i32 %138 to i64, !dbg !18637
  %and244 = and i64 %conv243, 17592186044416, !dbg !18637
  %tobool245 = icmp ne i64 %and244, 0, !dbg !18637
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !18637

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end539, !dbg !18637

cond.false247:                                    ; preds = %cond.false242
  %139 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv248 = zext i32 %139 to i64, !dbg !18637
  %and249 = and i64 %conv248, 8796093022208, !dbg !18637
  %tobool250 = icmp ne i64 %and249, 0, !dbg !18637
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !18637

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end537, !dbg !18637

cond.false252:                                    ; preds = %cond.false247
  %140 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv253 = zext i32 %140 to i64, !dbg !18637
  %and254 = and i64 %conv253, 4398046511104, !dbg !18637
  %tobool255 = icmp ne i64 %and254, 0, !dbg !18637
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !18637

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end535, !dbg !18637

cond.false257:                                    ; preds = %cond.false252
  %141 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv258 = zext i32 %141 to i64, !dbg !18637
  %and259 = and i64 %conv258, 2199023255552, !dbg !18637
  %tobool260 = icmp ne i64 %and259, 0, !dbg !18637
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !18637

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end533, !dbg !18637

cond.false262:                                    ; preds = %cond.false257
  %142 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv263 = zext i32 %142 to i64, !dbg !18637
  %and264 = and i64 %conv263, 1099511627776, !dbg !18637
  %tobool265 = icmp ne i64 %and264, 0, !dbg !18637
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !18637

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end531, !dbg !18637

cond.false267:                                    ; preds = %cond.false262
  %143 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv268 = zext i32 %143 to i64, !dbg !18637
  %and269 = and i64 %conv268, 549755813888, !dbg !18637
  %tobool270 = icmp ne i64 %and269, 0, !dbg !18637
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !18637

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end529, !dbg !18637

cond.false272:                                    ; preds = %cond.false267
  %144 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv273 = zext i32 %144 to i64, !dbg !18637
  %and274 = and i64 %conv273, 274877906944, !dbg !18637
  %tobool275 = icmp ne i64 %and274, 0, !dbg !18637
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !18637

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end527, !dbg !18637

cond.false277:                                    ; preds = %cond.false272
  %145 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv278 = zext i32 %145 to i64, !dbg !18637
  %and279 = and i64 %conv278, 137438953472, !dbg !18637
  %tobool280 = icmp ne i64 %and279, 0, !dbg !18637
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !18637

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end525, !dbg !18637

cond.false282:                                    ; preds = %cond.false277
  %146 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv283 = zext i32 %146 to i64, !dbg !18637
  %and284 = and i64 %conv283, 68719476736, !dbg !18637
  %tobool285 = icmp ne i64 %and284, 0, !dbg !18637
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !18637

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end523, !dbg !18637

cond.false287:                                    ; preds = %cond.false282
  %147 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv288 = zext i32 %147 to i64, !dbg !18637
  %and289 = and i64 %conv288, 34359738368, !dbg !18637
  %tobool290 = icmp ne i64 %and289, 0, !dbg !18637
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !18637

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end521, !dbg !18637

cond.false292:                                    ; preds = %cond.false287
  %148 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv293 = zext i32 %148 to i64, !dbg !18637
  %and294 = and i64 %conv293, 17179869184, !dbg !18637
  %tobool295 = icmp ne i64 %and294, 0, !dbg !18637
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !18637

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end519, !dbg !18637

cond.false297:                                    ; preds = %cond.false292
  %149 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv298 = zext i32 %149 to i64, !dbg !18637
  %and299 = and i64 %conv298, 8589934592, !dbg !18637
  %tobool300 = icmp ne i64 %and299, 0, !dbg !18637
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !18637

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end517, !dbg !18637

cond.false302:                                    ; preds = %cond.false297
  %150 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv303 = zext i32 %150 to i64, !dbg !18637
  %and304 = and i64 %conv303, 4294967296, !dbg !18637
  %tobool305 = icmp ne i64 %and304, 0, !dbg !18637
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !18637

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end515, !dbg !18637

cond.false307:                                    ; preds = %cond.false302
  %151 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv308 = zext i32 %151 to i64, !dbg !18637
  %and309 = and i64 %conv308, 2147483648, !dbg !18637
  %tobool310 = icmp ne i64 %and309, 0, !dbg !18637
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !18637

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end513, !dbg !18637

cond.false312:                                    ; preds = %cond.false307
  %152 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv313 = zext i32 %152 to i64, !dbg !18637
  %and314 = and i64 %conv313, 1073741824, !dbg !18637
  %tobool315 = icmp ne i64 %and314, 0, !dbg !18637
  br i1 %tobool315, label %cond.true316, label %cond.false317, !dbg !18637

cond.true316:                                     ; preds = %cond.false312
  br label %cond.end511, !dbg !18637

cond.false317:                                    ; preds = %cond.false312
  %153 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv318 = zext i32 %153 to i64, !dbg !18637
  %and319 = and i64 %conv318, 536870912, !dbg !18637
  %tobool320 = icmp ne i64 %and319, 0, !dbg !18637
  br i1 %tobool320, label %cond.true321, label %cond.false322, !dbg !18637

cond.true321:                                     ; preds = %cond.false317
  br label %cond.end509, !dbg !18637

cond.false322:                                    ; preds = %cond.false317
  %154 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv323 = zext i32 %154 to i64, !dbg !18637
  %and324 = and i64 %conv323, 268435456, !dbg !18637
  %tobool325 = icmp ne i64 %and324, 0, !dbg !18637
  br i1 %tobool325, label %cond.true326, label %cond.false327, !dbg !18637

cond.true326:                                     ; preds = %cond.false322
  br label %cond.end507, !dbg !18637

cond.false327:                                    ; preds = %cond.false322
  %155 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv328 = zext i32 %155 to i64, !dbg !18637
  %and329 = and i64 %conv328, 134217728, !dbg !18637
  %tobool330 = icmp ne i64 %and329, 0, !dbg !18637
  br i1 %tobool330, label %cond.true331, label %cond.false332, !dbg !18637

cond.true331:                                     ; preds = %cond.false327
  br label %cond.end505, !dbg !18637

cond.false332:                                    ; preds = %cond.false327
  %156 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv333 = zext i32 %156 to i64, !dbg !18637
  %and334 = and i64 %conv333, 67108864, !dbg !18637
  %tobool335 = icmp ne i64 %and334, 0, !dbg !18637
  br i1 %tobool335, label %cond.true336, label %cond.false337, !dbg !18637

cond.true336:                                     ; preds = %cond.false332
  br label %cond.end503, !dbg !18637

cond.false337:                                    ; preds = %cond.false332
  %157 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv338 = zext i32 %157 to i64, !dbg !18637
  %and339 = and i64 %conv338, 33554432, !dbg !18637
  %tobool340 = icmp ne i64 %and339, 0, !dbg !18637
  br i1 %tobool340, label %cond.true341, label %cond.false342, !dbg !18637

cond.true341:                                     ; preds = %cond.false337
  br label %cond.end501, !dbg !18637

cond.false342:                                    ; preds = %cond.false337
  %158 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv343 = zext i32 %158 to i64, !dbg !18637
  %and344 = and i64 %conv343, 16777216, !dbg !18637
  %tobool345 = icmp ne i64 %and344, 0, !dbg !18637
  br i1 %tobool345, label %cond.true346, label %cond.false347, !dbg !18637

cond.true346:                                     ; preds = %cond.false342
  br label %cond.end499, !dbg !18637

cond.false347:                                    ; preds = %cond.false342
  %159 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv348 = zext i32 %159 to i64, !dbg !18637
  %and349 = and i64 %conv348, 8388608, !dbg !18637
  %tobool350 = icmp ne i64 %and349, 0, !dbg !18637
  br i1 %tobool350, label %cond.true351, label %cond.false352, !dbg !18637

cond.true351:                                     ; preds = %cond.false347
  br label %cond.end497, !dbg !18637

cond.false352:                                    ; preds = %cond.false347
  %160 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv353 = zext i32 %160 to i64, !dbg !18637
  %and354 = and i64 %conv353, 4194304, !dbg !18637
  %tobool355 = icmp ne i64 %and354, 0, !dbg !18637
  br i1 %tobool355, label %cond.true356, label %cond.false357, !dbg !18637

cond.true356:                                     ; preds = %cond.false352
  br label %cond.end495, !dbg !18637

cond.false357:                                    ; preds = %cond.false352
  %161 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv358 = zext i32 %161 to i64, !dbg !18637
  %and359 = and i64 %conv358, 2097152, !dbg !18637
  %tobool360 = icmp ne i64 %and359, 0, !dbg !18637
  br i1 %tobool360, label %cond.true361, label %cond.false362, !dbg !18637

cond.true361:                                     ; preds = %cond.false357
  br label %cond.end493, !dbg !18637

cond.false362:                                    ; preds = %cond.false357
  %162 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv363 = zext i32 %162 to i64, !dbg !18637
  %and364 = and i64 %conv363, 1048576, !dbg !18637
  %tobool365 = icmp ne i64 %and364, 0, !dbg !18637
  br i1 %tobool365, label %cond.true366, label %cond.false367, !dbg !18637

cond.true366:                                     ; preds = %cond.false362
  br label %cond.end491, !dbg !18637

cond.false367:                                    ; preds = %cond.false362
  %163 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv368 = zext i32 %163 to i64, !dbg !18637
  %and369 = and i64 %conv368, 524288, !dbg !18637
  %tobool370 = icmp ne i64 %and369, 0, !dbg !18637
  br i1 %tobool370, label %cond.true371, label %cond.false372, !dbg !18637

cond.true371:                                     ; preds = %cond.false367
  br label %cond.end489, !dbg !18637

cond.false372:                                    ; preds = %cond.false367
  %164 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv373 = zext i32 %164 to i64, !dbg !18637
  %and374 = and i64 %conv373, 262144, !dbg !18637
  %tobool375 = icmp ne i64 %and374, 0, !dbg !18637
  br i1 %tobool375, label %cond.true376, label %cond.false377, !dbg !18637

cond.true376:                                     ; preds = %cond.false372
  br label %cond.end487, !dbg !18637

cond.false377:                                    ; preds = %cond.false372
  %165 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv378 = zext i32 %165 to i64, !dbg !18637
  %and379 = and i64 %conv378, 131072, !dbg !18637
  %tobool380 = icmp ne i64 %and379, 0, !dbg !18637
  br i1 %tobool380, label %cond.true381, label %cond.false382, !dbg !18637

cond.true381:                                     ; preds = %cond.false377
  br label %cond.end485, !dbg !18637

cond.false382:                                    ; preds = %cond.false377
  %166 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv383 = zext i32 %166 to i64, !dbg !18637
  %and384 = and i64 %conv383, 65536, !dbg !18637
  %tobool385 = icmp ne i64 %and384, 0, !dbg !18637
  br i1 %tobool385, label %cond.true386, label %cond.false387, !dbg !18637

cond.true386:                                     ; preds = %cond.false382
  br label %cond.end483, !dbg !18637

cond.false387:                                    ; preds = %cond.false382
  %167 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv388 = zext i32 %167 to i64, !dbg !18637
  %and389 = and i64 %conv388, 32768, !dbg !18637
  %tobool390 = icmp ne i64 %and389, 0, !dbg !18637
  br i1 %tobool390, label %cond.true391, label %cond.false392, !dbg !18637

cond.true391:                                     ; preds = %cond.false387
  br label %cond.end481, !dbg !18637

cond.false392:                                    ; preds = %cond.false387
  %168 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv393 = zext i32 %168 to i64, !dbg !18637
  %and394 = and i64 %conv393, 16384, !dbg !18637
  %tobool395 = icmp ne i64 %and394, 0, !dbg !18637
  br i1 %tobool395, label %cond.true396, label %cond.false397, !dbg !18637

cond.true396:                                     ; preds = %cond.false392
  br label %cond.end479, !dbg !18637

cond.false397:                                    ; preds = %cond.false392
  %169 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv398 = zext i32 %169 to i64, !dbg !18637
  %and399 = and i64 %conv398, 8192, !dbg !18637
  %tobool400 = icmp ne i64 %and399, 0, !dbg !18637
  br i1 %tobool400, label %cond.true401, label %cond.false402, !dbg !18637

cond.true401:                                     ; preds = %cond.false397
  br label %cond.end477, !dbg !18637

cond.false402:                                    ; preds = %cond.false397
  %170 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv403 = zext i32 %170 to i64, !dbg !18637
  %and404 = and i64 %conv403, 4096, !dbg !18637
  %tobool405 = icmp ne i64 %and404, 0, !dbg !18637
  br i1 %tobool405, label %cond.true406, label %cond.false407, !dbg !18637

cond.true406:                                     ; preds = %cond.false402
  br label %cond.end475, !dbg !18637

cond.false407:                                    ; preds = %cond.false402
  %171 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv408 = zext i32 %171 to i64, !dbg !18637
  %and409 = and i64 %conv408, 2048, !dbg !18637
  %tobool410 = icmp ne i64 %and409, 0, !dbg !18637
  br i1 %tobool410, label %cond.true411, label %cond.false412, !dbg !18637

cond.true411:                                     ; preds = %cond.false407
  br label %cond.end473, !dbg !18637

cond.false412:                                    ; preds = %cond.false407
  %172 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv413 = zext i32 %172 to i64, !dbg !18637
  %and414 = and i64 %conv413, 1024, !dbg !18637
  %tobool415 = icmp ne i64 %and414, 0, !dbg !18637
  br i1 %tobool415, label %cond.true416, label %cond.false417, !dbg !18637

cond.true416:                                     ; preds = %cond.false412
  br label %cond.end471, !dbg !18637

cond.false417:                                    ; preds = %cond.false412
  %173 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv418 = zext i32 %173 to i64, !dbg !18637
  %and419 = and i64 %conv418, 512, !dbg !18637
  %tobool420 = icmp ne i64 %and419, 0, !dbg !18637
  br i1 %tobool420, label %cond.true421, label %cond.false422, !dbg !18637

cond.true421:                                     ; preds = %cond.false417
  br label %cond.end469, !dbg !18637

cond.false422:                                    ; preds = %cond.false417
  %174 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv423 = zext i32 %174 to i64, !dbg !18637
  %and424 = and i64 %conv423, 256, !dbg !18637
  %tobool425 = icmp ne i64 %and424, 0, !dbg !18637
  br i1 %tobool425, label %cond.true426, label %cond.false427, !dbg !18637

cond.true426:                                     ; preds = %cond.false422
  br label %cond.end467, !dbg !18637

cond.false427:                                    ; preds = %cond.false422
  %175 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv428 = zext i32 %175 to i64, !dbg !18637
  %and429 = and i64 %conv428, 128, !dbg !18637
  %tobool430 = icmp ne i64 %and429, 0, !dbg !18637
  br i1 %tobool430, label %cond.true431, label %cond.false432, !dbg !18637

cond.true431:                                     ; preds = %cond.false427
  br label %cond.end465, !dbg !18637

cond.false432:                                    ; preds = %cond.false427
  %176 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv433 = zext i32 %176 to i64, !dbg !18637
  %and434 = and i64 %conv433, 64, !dbg !18637
  %tobool435 = icmp ne i64 %and434, 0, !dbg !18637
  br i1 %tobool435, label %cond.true436, label %cond.false437, !dbg !18637

cond.true436:                                     ; preds = %cond.false432
  br label %cond.end463, !dbg !18637

cond.false437:                                    ; preds = %cond.false432
  %177 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv438 = zext i32 %177 to i64, !dbg !18637
  %and439 = and i64 %conv438, 32, !dbg !18637
  %tobool440 = icmp ne i64 %and439, 0, !dbg !18637
  br i1 %tobool440, label %cond.true441, label %cond.false442, !dbg !18637

cond.true441:                                     ; preds = %cond.false437
  br label %cond.end461, !dbg !18637

cond.false442:                                    ; preds = %cond.false437
  %178 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv443 = zext i32 %178 to i64, !dbg !18637
  %and444 = and i64 %conv443, 16, !dbg !18637
  %tobool445 = icmp ne i64 %and444, 0, !dbg !18637
  br i1 %tobool445, label %cond.true446, label %cond.false447, !dbg !18637

cond.true446:                                     ; preds = %cond.false442
  br label %cond.end459, !dbg !18637

cond.false447:                                    ; preds = %cond.false442
  %179 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv448 = zext i32 %179 to i64, !dbg !18637
  %and449 = and i64 %conv448, 8, !dbg !18637
  %tobool450 = icmp ne i64 %and449, 0, !dbg !18637
  br i1 %tobool450, label %cond.true451, label %cond.false452, !dbg !18637

cond.true451:                                     ; preds = %cond.false447
  br label %cond.end457, !dbg !18637

cond.false452:                                    ; preds = %cond.false447
  %180 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv453 = zext i32 %180 to i64, !dbg !18637
  %and454 = and i64 %conv453, 4, !dbg !18637
  %tobool455 = icmp ne i64 %and454, 0, !dbg !18637
  %181 = zext i1 %tobool455 to i64, !dbg !18637
  %cond456 = select i1 %tobool455, i32 2, i32 1, !dbg !18637
  br label %cond.end457, !dbg !18637

cond.end457:                                      ; preds = %cond.false452, %cond.true451
  %cond458 = phi i32 [ 3, %cond.true451 ], [ %cond456, %cond.false452 ], !dbg !18637
  br label %cond.end459, !dbg !18637

cond.end459:                                      ; preds = %cond.end457, %cond.true446
  %cond460 = phi i32 [ 4, %cond.true446 ], [ %cond458, %cond.end457 ], !dbg !18637
  br label %cond.end461, !dbg !18637

cond.end461:                                      ; preds = %cond.end459, %cond.true441
  %cond462 = phi i32 [ 5, %cond.true441 ], [ %cond460, %cond.end459 ], !dbg !18637
  br label %cond.end463, !dbg !18637

cond.end463:                                      ; preds = %cond.end461, %cond.true436
  %cond464 = phi i32 [ 6, %cond.true436 ], [ %cond462, %cond.end461 ], !dbg !18637
  br label %cond.end465, !dbg !18637

cond.end465:                                      ; preds = %cond.end463, %cond.true431
  %cond466 = phi i32 [ 7, %cond.true431 ], [ %cond464, %cond.end463 ], !dbg !18637
  br label %cond.end467, !dbg !18637

cond.end467:                                      ; preds = %cond.end465, %cond.true426
  %cond468 = phi i32 [ 8, %cond.true426 ], [ %cond466, %cond.end465 ], !dbg !18637
  br label %cond.end469, !dbg !18637

cond.end469:                                      ; preds = %cond.end467, %cond.true421
  %cond470 = phi i32 [ 9, %cond.true421 ], [ %cond468, %cond.end467 ], !dbg !18637
  br label %cond.end471, !dbg !18637

cond.end471:                                      ; preds = %cond.end469, %cond.true416
  %cond472 = phi i32 [ 10, %cond.true416 ], [ %cond470, %cond.end469 ], !dbg !18637
  br label %cond.end473, !dbg !18637

cond.end473:                                      ; preds = %cond.end471, %cond.true411
  %cond474 = phi i32 [ 11, %cond.true411 ], [ %cond472, %cond.end471 ], !dbg !18637
  br label %cond.end475, !dbg !18637

cond.end475:                                      ; preds = %cond.end473, %cond.true406
  %cond476 = phi i32 [ 12, %cond.true406 ], [ %cond474, %cond.end473 ], !dbg !18637
  br label %cond.end477, !dbg !18637

cond.end477:                                      ; preds = %cond.end475, %cond.true401
  %cond478 = phi i32 [ 13, %cond.true401 ], [ %cond476, %cond.end475 ], !dbg !18637
  br label %cond.end479, !dbg !18637

cond.end479:                                      ; preds = %cond.end477, %cond.true396
  %cond480 = phi i32 [ 14, %cond.true396 ], [ %cond478, %cond.end477 ], !dbg !18637
  br label %cond.end481, !dbg !18637

cond.end481:                                      ; preds = %cond.end479, %cond.true391
  %cond482 = phi i32 [ 15, %cond.true391 ], [ %cond480, %cond.end479 ], !dbg !18637
  br label %cond.end483, !dbg !18637

cond.end483:                                      ; preds = %cond.end481, %cond.true386
  %cond484 = phi i32 [ 16, %cond.true386 ], [ %cond482, %cond.end481 ], !dbg !18637
  br label %cond.end485, !dbg !18637

cond.end485:                                      ; preds = %cond.end483, %cond.true381
  %cond486 = phi i32 [ 17, %cond.true381 ], [ %cond484, %cond.end483 ], !dbg !18637
  br label %cond.end487, !dbg !18637

cond.end487:                                      ; preds = %cond.end485, %cond.true376
  %cond488 = phi i32 [ 18, %cond.true376 ], [ %cond486, %cond.end485 ], !dbg !18637
  br label %cond.end489, !dbg !18637

cond.end489:                                      ; preds = %cond.end487, %cond.true371
  %cond490 = phi i32 [ 19, %cond.true371 ], [ %cond488, %cond.end487 ], !dbg !18637
  br label %cond.end491, !dbg !18637

cond.end491:                                      ; preds = %cond.end489, %cond.true366
  %cond492 = phi i32 [ 20, %cond.true366 ], [ %cond490, %cond.end489 ], !dbg !18637
  br label %cond.end493, !dbg !18637

cond.end493:                                      ; preds = %cond.end491, %cond.true361
  %cond494 = phi i32 [ 21, %cond.true361 ], [ %cond492, %cond.end491 ], !dbg !18637
  br label %cond.end495, !dbg !18637

cond.end495:                                      ; preds = %cond.end493, %cond.true356
  %cond496 = phi i32 [ 22, %cond.true356 ], [ %cond494, %cond.end493 ], !dbg !18637
  br label %cond.end497, !dbg !18637

cond.end497:                                      ; preds = %cond.end495, %cond.true351
  %cond498 = phi i32 [ 23, %cond.true351 ], [ %cond496, %cond.end495 ], !dbg !18637
  br label %cond.end499, !dbg !18637

cond.end499:                                      ; preds = %cond.end497, %cond.true346
  %cond500 = phi i32 [ 24, %cond.true346 ], [ %cond498, %cond.end497 ], !dbg !18637
  br label %cond.end501, !dbg !18637

cond.end501:                                      ; preds = %cond.end499, %cond.true341
  %cond502 = phi i32 [ 25, %cond.true341 ], [ %cond500, %cond.end499 ], !dbg !18637
  br label %cond.end503, !dbg !18637

cond.end503:                                      ; preds = %cond.end501, %cond.true336
  %cond504 = phi i32 [ 26, %cond.true336 ], [ %cond502, %cond.end501 ], !dbg !18637
  br label %cond.end505, !dbg !18637

cond.end505:                                      ; preds = %cond.end503, %cond.true331
  %cond506 = phi i32 [ 27, %cond.true331 ], [ %cond504, %cond.end503 ], !dbg !18637
  br label %cond.end507, !dbg !18637

cond.end507:                                      ; preds = %cond.end505, %cond.true326
  %cond508 = phi i32 [ 28, %cond.true326 ], [ %cond506, %cond.end505 ], !dbg !18637
  br label %cond.end509, !dbg !18637

cond.end509:                                      ; preds = %cond.end507, %cond.true321
  %cond510 = phi i32 [ 29, %cond.true321 ], [ %cond508, %cond.end507 ], !dbg !18637
  br label %cond.end511, !dbg !18637

cond.end511:                                      ; preds = %cond.end509, %cond.true316
  %cond512 = phi i32 [ 30, %cond.true316 ], [ %cond510, %cond.end509 ], !dbg !18637
  br label %cond.end513, !dbg !18637

cond.end513:                                      ; preds = %cond.end511, %cond.true311
  %cond514 = phi i32 [ 31, %cond.true311 ], [ %cond512, %cond.end511 ], !dbg !18637
  br label %cond.end515, !dbg !18637

cond.end515:                                      ; preds = %cond.end513, %cond.true306
  %cond516 = phi i32 [ 32, %cond.true306 ], [ %cond514, %cond.end513 ], !dbg !18637
  br label %cond.end517, !dbg !18637

cond.end517:                                      ; preds = %cond.end515, %cond.true301
  %cond518 = phi i32 [ 33, %cond.true301 ], [ %cond516, %cond.end515 ], !dbg !18637
  br label %cond.end519, !dbg !18637

cond.end519:                                      ; preds = %cond.end517, %cond.true296
  %cond520 = phi i32 [ 34, %cond.true296 ], [ %cond518, %cond.end517 ], !dbg !18637
  br label %cond.end521, !dbg !18637

cond.end521:                                      ; preds = %cond.end519, %cond.true291
  %cond522 = phi i32 [ 35, %cond.true291 ], [ %cond520, %cond.end519 ], !dbg !18637
  br label %cond.end523, !dbg !18637

cond.end523:                                      ; preds = %cond.end521, %cond.true286
  %cond524 = phi i32 [ 36, %cond.true286 ], [ %cond522, %cond.end521 ], !dbg !18637
  br label %cond.end525, !dbg !18637

cond.end525:                                      ; preds = %cond.end523, %cond.true281
  %cond526 = phi i32 [ 37, %cond.true281 ], [ %cond524, %cond.end523 ], !dbg !18637
  br label %cond.end527, !dbg !18637

cond.end527:                                      ; preds = %cond.end525, %cond.true276
  %cond528 = phi i32 [ 38, %cond.true276 ], [ %cond526, %cond.end525 ], !dbg !18637
  br label %cond.end529, !dbg !18637

cond.end529:                                      ; preds = %cond.end527, %cond.true271
  %cond530 = phi i32 [ 39, %cond.true271 ], [ %cond528, %cond.end527 ], !dbg !18637
  br label %cond.end531, !dbg !18637

cond.end531:                                      ; preds = %cond.end529, %cond.true266
  %cond532 = phi i32 [ 40, %cond.true266 ], [ %cond530, %cond.end529 ], !dbg !18637
  br label %cond.end533, !dbg !18637

cond.end533:                                      ; preds = %cond.end531, %cond.true261
  %cond534 = phi i32 [ 41, %cond.true261 ], [ %cond532, %cond.end531 ], !dbg !18637
  br label %cond.end535, !dbg !18637

cond.end535:                                      ; preds = %cond.end533, %cond.true256
  %cond536 = phi i32 [ 42, %cond.true256 ], [ %cond534, %cond.end533 ], !dbg !18637
  br label %cond.end537, !dbg !18637

cond.end537:                                      ; preds = %cond.end535, %cond.true251
  %cond538 = phi i32 [ 43, %cond.true251 ], [ %cond536, %cond.end535 ], !dbg !18637
  br label %cond.end539, !dbg !18637

cond.end539:                                      ; preds = %cond.end537, %cond.true246
  %cond540 = phi i32 [ 44, %cond.true246 ], [ %cond538, %cond.end537 ], !dbg !18637
  br label %cond.end541, !dbg !18637

cond.end541:                                      ; preds = %cond.end539, %cond.true241
  %cond542 = phi i32 [ 45, %cond.true241 ], [ %cond540, %cond.end539 ], !dbg !18637
  br label %cond.end543, !dbg !18637

cond.end543:                                      ; preds = %cond.end541, %cond.true236
  %cond544 = phi i32 [ 46, %cond.true236 ], [ %cond542, %cond.end541 ], !dbg !18637
  br label %cond.end545, !dbg !18637

cond.end545:                                      ; preds = %cond.end543, %cond.true231
  %cond546 = phi i32 [ 47, %cond.true231 ], [ %cond544, %cond.end543 ], !dbg !18637
  br label %cond.end547, !dbg !18637

cond.end547:                                      ; preds = %cond.end545, %cond.true226
  %cond548 = phi i32 [ 48, %cond.true226 ], [ %cond546, %cond.end545 ], !dbg !18637
  br label %cond.end549, !dbg !18637

cond.end549:                                      ; preds = %cond.end547, %cond.true221
  %cond550 = phi i32 [ 49, %cond.true221 ], [ %cond548, %cond.end547 ], !dbg !18637
  br label %cond.end551, !dbg !18637

cond.end551:                                      ; preds = %cond.end549, %cond.true216
  %cond552 = phi i32 [ 50, %cond.true216 ], [ %cond550, %cond.end549 ], !dbg !18637
  br label %cond.end553, !dbg !18637

cond.end553:                                      ; preds = %cond.end551, %cond.true211
  %cond554 = phi i32 [ 51, %cond.true211 ], [ %cond552, %cond.end551 ], !dbg !18637
  br label %cond.end555, !dbg !18637

cond.end555:                                      ; preds = %cond.end553, %cond.true206
  %cond556 = phi i32 [ 52, %cond.true206 ], [ %cond554, %cond.end553 ], !dbg !18637
  br label %cond.end557, !dbg !18637

cond.end557:                                      ; preds = %cond.end555, %cond.true201
  %cond558 = phi i32 [ 53, %cond.true201 ], [ %cond556, %cond.end555 ], !dbg !18637
  br label %cond.end559, !dbg !18637

cond.end559:                                      ; preds = %cond.end557, %cond.true196
  %cond560 = phi i32 [ 54, %cond.true196 ], [ %cond558, %cond.end557 ], !dbg !18637
  br label %cond.end561, !dbg !18637

cond.end561:                                      ; preds = %cond.end559, %cond.true191
  %cond562 = phi i32 [ 55, %cond.true191 ], [ %cond560, %cond.end559 ], !dbg !18637
  br label %cond.end563, !dbg !18637

cond.end563:                                      ; preds = %cond.end561, %cond.true186
  %cond564 = phi i32 [ 56, %cond.true186 ], [ %cond562, %cond.end561 ], !dbg !18637
  br label %cond.end565, !dbg !18637

cond.end565:                                      ; preds = %cond.end563, %cond.true181
  %cond566 = phi i32 [ 57, %cond.true181 ], [ %cond564, %cond.end563 ], !dbg !18637
  br label %cond.end567, !dbg !18637

cond.end567:                                      ; preds = %cond.end565, %cond.true176
  %cond568 = phi i32 [ 58, %cond.true176 ], [ %cond566, %cond.end565 ], !dbg !18637
  br label %cond.end569, !dbg !18637

cond.end569:                                      ; preds = %cond.end567, %cond.true171
  %cond570 = phi i32 [ 59, %cond.true171 ], [ %cond568, %cond.end567 ], !dbg !18637
  br label %cond.end571, !dbg !18637

cond.end571:                                      ; preds = %cond.end569, %cond.true166
  %cond572 = phi i32 [ 60, %cond.true166 ], [ %cond570, %cond.end569 ], !dbg !18637
  br label %cond.end573, !dbg !18637

cond.end573:                                      ; preds = %cond.end571, %cond.true161
  %cond574 = phi i32 [ 61, %cond.true161 ], [ %cond572, %cond.end571 ], !dbg !18637
  br label %cond.end575, !dbg !18637

cond.end575:                                      ; preds = %cond.end573, %cond.true156
  %cond576 = phi i32 [ 62, %cond.true156 ], [ %cond574, %cond.end573 ], !dbg !18637
  br label %cond.end577, !dbg !18637

cond.end577:                                      ; preds = %cond.end575, %cond.true151
  %cond578 = phi i32 [ 63, %cond.true151 ], [ %cond576, %cond.end575 ], !dbg !18637
  br label %cond.end579, !dbg !18637

cond.end579:                                      ; preds = %cond.end577, %cond.true146
  %cond580 = phi i32 [ 0, %cond.true146 ], [ %cond578, %cond.end577 ], !dbg !18637
  br label %cond.end582, !dbg !18637

cond.false581:                                    ; preds = %cond.true142
  br label %cond.end582, !dbg !18637

cond.end582:                                      ; preds = %cond.false581, %cond.end579
  %cond583 = phi i32 [ %cond580, %cond.end579 ], [ -1, %cond.false581 ], !dbg !18637
  br label %cond.end586, !dbg !18637

cond.false584:                                    ; preds = %cond.true141
  %182 = load i32, i32* %tmp, align 4, !dbg !18637
  %call585 = call i32 @__ilog2_u32(i32 %182) #14, !dbg !18637
  br label %cond.end586, !dbg !18637

cond.end586:                                      ; preds = %cond.false584, %cond.end582
  %cond587 = phi i32 [ %cond583, %cond.end582 ], [ %call585, %cond.false584 ], !dbg !18637
  %sh_prom = zext i32 %cond587 to i64, !dbg !18637
  %shl588 = shl i64 1, %sh_prom, !dbg !18637
  br label %cond.end592, !dbg !18637

cond.false589:                                    ; preds = %cond.end139
  %183 = load i32, i32* %tmp, align 4, !dbg !18637
  %conv590 = zext i32 %183 to i64, !dbg !18637
  %call591 = call i64 @__rounddown_pow_of_two(i64 %conv590) #14, !dbg !18637
  br label %cond.end592, !dbg !18637

cond.end592:                                      ; preds = %cond.false589, %cond.end586
  %cond593 = phi i64 [ %shl588, %cond.end586 ], [ %call591, %cond.false589 ], !dbg !18637
  %conv594 = trunc i64 %cond593 to i32, !dbg !18637
  store i32 %conv594, i32* %tmp, align 4, !dbg !18638
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x336, metadata !18639, metadata !DIExpression()), !dbg !18641
  %184 = load i32, i32* %tmp, align 4, !dbg !18641
  store i32 %184, i32* %__UNIQUE_ID___x336, align 4, !dbg !18641
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y337, metadata !18642, metadata !DIExpression()), !dbg !18641
  %185 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18641
  %interval595 = getelementptr inbounds %struct.urb, %struct.urb* %185, i32 0, i32 25, !dbg !18641
  %186 = load i32, i32* %interval595, align 8, !dbg !18641
  store i32 %186, i32* %__UNIQUE_ID___y337, align 4, !dbg !18641
  %187 = load i32, i32* %__UNIQUE_ID___x336, align 4, !dbg !18641
  %188 = load i32, i32* %__UNIQUE_ID___y337, align 4, !dbg !18641
  %cmp597 = icmp ult i32 %187, %188, !dbg !18641
  br i1 %cmp597, label %cond.true599, label %cond.false600, !dbg !18641

cond.true599:                                     ; preds = %cond.end592
  %189 = load i32, i32* %__UNIQUE_ID___x336, align 4, !dbg !18641
  br label %cond.end601, !dbg !18641

cond.false600:                                    ; preds = %cond.end592
  %190 = load i32, i32* %__UNIQUE_ID___y337, align 4, !dbg !18641
  br label %cond.end601, !dbg !18641

cond.end601:                                      ; preds = %cond.false600, %cond.true599
  %cond602 = phi i32 [ %189, %cond.true599 ], [ %190, %cond.false600 ], !dbg !18641
  store i32 %cond602, i32* %tmp596, align 4, !dbg !18641
  %191 = load i32, i32* %tmp596, align 4, !dbg !18641
  %conv603 = trunc i32 %191 to i8, !dbg !18643
  %192 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18644
  %ps604 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %192, i32 0, i32 7, !dbg !18645
  %bw_period605 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps604, i32 0, i32 12, !dbg !18646
  store i8 %conv603, i8* %bw_period605, align 1, !dbg !18647
  %193 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18648
  %ps606 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %193, i32 0, i32 7, !dbg !18649
  %bw_period607 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps606, i32 0, i32 12, !dbg !18650
  %194 = load i8, i8* %bw_period607, align 1, !dbg !18650
  %conv608 = zext i8 %194 to i32, !dbg !18648
  %shl609 = shl i32 %conv608, 3, !dbg !18651
  %conv610 = trunc i32 %shl609 to i8, !dbg !18648
  %195 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18652
  %ps611 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %195, i32 0, i32 7, !dbg !18653
  %bw_uperiod612 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps611, i32 0, i32 11, !dbg !18654
  store i8 %conv610, i8* %bw_uperiod612, align 4, !dbg !18655
  br label %if.end613

if.end613:                                        ; preds = %cond.end601, %cond.end64
  br label %if.end614, !dbg !18656

if.end614:                                        ; preds = %if.end613, %if.end19
  %196 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18657
  %dev615 = getelementptr inbounds %struct.urb, %struct.urb* %196, i32 0, i32 8, !dbg !18658
  %197 = load %struct.usb_device*, %struct.usb_device** %dev615, align 8, !dbg !18658
  %198 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18659
  %ps616 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %198, i32 0, i32 7, !dbg !18660
  %udev = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps616, i32 0, i32 0, !dbg !18661
  store %struct.usb_device* %197, %struct.usb_device** %udev, align 8, !dbg !18662
  %199 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18663
  %ep617 = getelementptr inbounds %struct.urb, %struct.urb* %199, i32 0, i32 9, !dbg !18664
  %200 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep617, align 8, !dbg !18664
  %201 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18665
  %ps618 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %201, i32 0, i32 7, !dbg !18666
  %ep619 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps618, i32 0, i32 1, !dbg !18667
  store %struct.usb_host_endpoint* %200, %struct.usb_host_endpoint** %ep619, align 8, !dbg !18668
  %202 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18669
  %dev620 = getelementptr inbounds %struct.urb, %struct.urb* %202, i32 0, i32 8, !dbg !18670
  %203 = load %struct.usb_device*, %struct.usb_device** %dev620, align 8, !dbg !18670
  %speed621 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %203, i32 0, i32 4, !dbg !18671
  %204 = load i32, i32* %speed621, align 4, !dbg !18671
  switch i32 %204, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb623
    i32 3, label %sw.bb650
  ], !dbg !18672

sw.bb:                                            ; preds = %if.end614
  %205 = load i32, i32* %info1, align 4, !dbg !18673
  %or622 = or i32 %205, 4096, !dbg !18673
  store i32 %or622, i32* %info1, align 4, !dbg !18673
  br label %sw.bb623, !dbg !18675

sw.bb623:                                         ; preds = %if.end614, %sw.bb
  %206 = load i32, i32* %type, align 4, !dbg !18676
  %cmp624 = icmp ne i32 %206, 1, !dbg !18678
  br i1 %cmp624, label %if.then626, label %if.end627, !dbg !18679

if.then626:                                       ; preds = %sw.bb623
  %207 = load i32, i32* %info1, align 4, !dbg !18680
  store i32 %207, i32* %info1, align 4, !dbg !18680
  br label %if.end627, !dbg !18681

if.end627:                                        ; preds = %if.then626, %sw.bb623
  %208 = load i32, i32* %type, align 4, !dbg !18682
  %cmp628 = icmp eq i32 %208, 2, !dbg !18684
  br i1 %cmp628, label %if.then630, label %if.end633, !dbg !18685

if.then630:                                       ; preds = %if.end627
  %209 = load i32, i32* %info1, align 4, !dbg !18686
  %or631 = or i32 %209, 134217728, !dbg !18686
  store i32 %or631, i32* %info1, align 4, !dbg !18686
  %210 = load i32, i32* %info1, align 4, !dbg !18688
  %or632 = or i32 %210, 16384, !dbg !18688
  store i32 %or632, i32* %info1, align 4, !dbg !18688
  br label %if.end633, !dbg !18689

if.end633:                                        ; preds = %if.then630, %if.end627
  %211 = load i32, i32* %maxp, align 4, !dbg !18690
  %shl634 = shl i32 %211, 16, !dbg !18691
  %212 = load i32, i32* %info1, align 4, !dbg !18692
  %or635 = or i32 %212, %shl634, !dbg !18692
  store i32 %or635, i32* %info1, align 4, !dbg !18692
  %213 = load i32, i32* %info2, align 4, !dbg !18693
  %or636 = or i32 %213, 1073741824, !dbg !18693
  store i32 %or636, i32* %info2, align 4, !dbg !18693
  %214 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18694
  %dev637 = getelementptr inbounds %struct.urb, %struct.urb* %214, i32 0, i32 8, !dbg !18696
  %215 = load %struct.usb_device*, %struct.usb_device** %dev637, align 8, !dbg !18696
  %ttport = getelementptr inbounds %struct.usb_device, %struct.usb_device* %215, i32 0, i32 8, !dbg !18697
  %216 = load i32, i32* %ttport, align 8, !dbg !18697
  %shl638 = shl i32 %216, 23, !dbg !18698
  %217 = load i32, i32* %info2, align 4, !dbg !18699
  %or639 = or i32 %217, %shl638, !dbg !18699
  store i32 %or639, i32* %info2, align 4, !dbg !18699
  %218 = load %struct.usb_tt*, %struct.usb_tt** %tt, align 8, !dbg !18700
  %tobool640 = icmp ne %struct.usb_tt* %218, null, !dbg !18700
  br i1 %tobool640, label %land.lhs.true641, label %if.end649, !dbg !18702

land.lhs.true641:                                 ; preds = %if.end633
  %219 = load %struct.usb_tt*, %struct.usb_tt** %tt, align 8, !dbg !18703
  %hub = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %219, i32 0, i32 0, !dbg !18704
  %220 = load %struct.usb_device*, %struct.usb_device** %hub, align 8, !dbg !18704
  %221 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18705
  %call642 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %221) #11, !dbg !18706
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call642, i32 0, i32 0, !dbg !18707
  %root_hub = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 11, !dbg !18708
  %222 = load %struct.usb_device*, %struct.usb_device** %root_hub, align 8, !dbg !18708
  %cmp643 = icmp ne %struct.usb_device* %220, %222, !dbg !18709
  br i1 %cmp643, label %if.then645, label %if.end649, !dbg !18710

if.then645:                                       ; preds = %land.lhs.true641
  %223 = load %struct.usb_tt*, %struct.usb_tt** %tt, align 8, !dbg !18711
  %hub646 = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %223, i32 0, i32 0, !dbg !18712
  %224 = load %struct.usb_device*, %struct.usb_device** %hub646, align 8, !dbg !18712
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %224, i32 0, i32 0, !dbg !18713
  %225 = load i32, i32* %devnum, align 8, !dbg !18713
  %shl647 = shl i32 %225, 16, !dbg !18714
  %226 = load i32, i32* %info2, align 4, !dbg !18715
  %or648 = or i32 %226, %shl647, !dbg !18715
  store i32 %or648, i32* %info2, align 4, !dbg !18715
  br label %if.end649, !dbg !18716

if.end649:                                        ; preds = %if.then645, %land.lhs.true641, %if.end633
  br label %sw.epilog, !dbg !18717

sw.bb650:                                         ; preds = %if.end614
  %227 = load i32, i32* %info1, align 4, !dbg !18718
  %or651 = or i32 %227, 8192, !dbg !18718
  store i32 %or651, i32* %info1, align 4, !dbg !18718
  %228 = load i32, i32* %type, align 4, !dbg !18719
  %cmp652 = icmp eq i32 %228, 2, !dbg !18721
  br i1 %cmp652, label %if.then654, label %if.else659, !dbg !18722

if.then654:                                       ; preds = %sw.bb650
  %229 = load i32, i32* %info1, align 4, !dbg !18723
  %or655 = or i32 %229, 1073741824, !dbg !18723
  store i32 %or655, i32* %info1, align 4, !dbg !18723
  %230 = load i32, i32* %info1, align 4, !dbg !18725
  %or656 = or i32 %230, 4194304, !dbg !18725
  store i32 %or656, i32* %info1, align 4, !dbg !18725
  %231 = load i32, i32* %info1, align 4, !dbg !18726
  %or657 = or i32 %231, 16384, !dbg !18726
  store i32 %or657, i32* %info1, align 4, !dbg !18726
  %232 = load i32, i32* %info2, align 4, !dbg !18727
  %or658 = or i32 %232, 1073741824, !dbg !18727
  store i32 %or658, i32* %info2, align 4, !dbg !18727
  br label %if.end673, !dbg !18728

if.else659:                                       ; preds = %sw.bb650
  %233 = load i32, i32* %type, align 4, !dbg !18729
  %cmp660 = icmp eq i32 %233, 3, !dbg !18731
  br i1 %cmp660, label %if.then662, label %if.else667, !dbg !18732

if.then662:                                       ; preds = %if.else659
  %234 = load i32, i32* %info1, align 4, !dbg !18733
  %or663 = or i32 %234, 1073741824, !dbg !18733
  store i32 %or663, i32* %info1, align 4, !dbg !18733
  %235 = load i32, i32* %maxp, align 4, !dbg !18735
  %shl664 = shl i32 %235, 16, !dbg !18736
  %236 = load i32, i32* %info1, align 4, !dbg !18737
  %or665 = or i32 %236, %shl664, !dbg !18737
  store i32 %or665, i32* %info1, align 4, !dbg !18737
  %237 = load i32, i32* %info2, align 4, !dbg !18738
  %or666 = or i32 %237, 1073741824, !dbg !18738
  store i32 %or666, i32* %info2, align 4, !dbg !18738
  br label %if.end672, !dbg !18739

if.else667:                                       ; preds = %if.else659
  %238 = load i32, i32* %maxp, align 4, !dbg !18740
  %shl668 = shl i32 %238, 16, !dbg !18742
  %239 = load i32, i32* %info1, align 4, !dbg !18743
  %or669 = or i32 %239, %shl668, !dbg !18743
  store i32 %or669, i32* %info1, align 4, !dbg !18743
  %240 = load i32, i32* %mult, align 4, !dbg !18744
  %shl670 = shl i32 %240, 30, !dbg !18745
  %241 = load i32, i32* %info2, align 4, !dbg !18746
  %or671 = or i32 %241, %shl670, !dbg !18746
  store i32 %or671, i32* %info2, align 4, !dbg !18746
  br label %if.end672

if.end672:                                        ; preds = %if.else667, %if.then662
  br label %if.end673

if.end673:                                        ; preds = %if.end672, %if.then654
  br label %sw.epilog, !dbg !18747

sw.default:                                       ; preds = %if.end614
  br label %done, !dbg !18748

done:                                             ; preds = %sw.default, %if.then18
  call void @llvm.dbg.label(metadata !18749), !dbg !18750
  %242 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18751
  %243 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18752
  call void @qh_destroy(%struct.ehci_hcd* %242, %struct.ehci_qh* %243) #11, !dbg !18753
  store %struct.ehci_qh* null, %struct.ehci_qh** %retval, align 8, !dbg !18754
  br label %return, !dbg !18754

sw.epilog:                                        ; preds = %if.end673, %if.end649
  %244 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18755
  %qh_state = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %244, i32 0, i32 9, !dbg !18756
  store i8 3, i8* %qh_state, align 4, !dbg !18757
  %245 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18758
  %hw674 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %245, i32 0, i32 0, !dbg !18759
  %246 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw674, align 8, !dbg !18759
  store %struct.ehci_qh_hw* %246, %struct.ehci_qh_hw** %hw, align 8, !dbg !18760
  %247 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18761
  %248 = load i32, i32* %info1, align 4, !dbg !18762
  %call675 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %247, i32 %248) #11, !dbg !18763
  %249 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !18764
  %hw_info1 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %249, i32 0, i32 1, !dbg !18765
  store i32 %call675, i32* %hw_info1, align 4, !dbg !18766
  %250 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18767
  %251 = load i32, i32* %info2, align 4, !dbg !18768
  %call676 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %250, i32 %251) #11, !dbg !18769
  %252 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !18770
  %hw_info2 = getelementptr inbounds %struct.ehci_qh_hw, %struct.ehci_qh_hw* %252, i32 0, i32 2, !dbg !18771
  store i32 %call676, i32* %hw_info2, align 8, !dbg !18772
  %253 = load i32, i32* %is_input, align 4, !dbg !18773
  %tobool677 = icmp ne i32 %253, 0, !dbg !18774
  %lnot = xor i1 %tobool677, true, !dbg !18774
  %lnot.ext = zext i1 %lnot to i32, !dbg !18774
  %254 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18775
  %is_out = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %254, i32 0, i32 13, !dbg !18776
  %255 = trunc i32 %lnot.ext to i8, !dbg !18777
  %bf.load = load i8, i8* %is_out, align 8, !dbg !18777
  %bf.value = and i8 %255, 1, !dbg !18777
  %bf.clear = and i8 %bf.load, -2, !dbg !18777
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !18777
  store i8 %bf.set, i8* %is_out, align 8, !dbg !18777
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !18777
  %256 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18778
  %dev678 = getelementptr inbounds %struct.urb, %struct.urb* %256, i32 0, i32 8, !dbg !18778
  %257 = load %struct.usb_device*, %struct.usb_device** %dev678, align 8, !dbg !18778
  %toggle = getelementptr inbounds %struct.usb_device, %struct.usb_device* %257, i32 0, i32 9, !dbg !18778
  %258 = load i32, i32* %is_input, align 4, !dbg !18778
  %tobool679 = icmp ne i32 %258, 0, !dbg !18778
  %lnot680 = xor i1 %tobool679, true, !dbg !18778
  %lnot.ext681 = zext i1 %lnot680 to i32, !dbg !18778
  %idxprom = sext i32 %lnot.ext681 to i64, !dbg !18778
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %toggle, i64 0, i64 %idxprom, !dbg !18778
  %259 = load i32, i32* %arrayidx, align 4, !dbg !18778
  %260 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18778
  %pipe682 = getelementptr inbounds %struct.urb, %struct.urb* %260, i32 0, i32 10, !dbg !18778
  %261 = load i32, i32* %pipe682, align 8, !dbg !18778
  %shr683 = lshr i32 %261, 15, !dbg !18778
  %and684 = and i32 %shr683, 15, !dbg !18778
  %shl685 = shl i32 1, %and684, !dbg !18778
  %neg = xor i32 %shl685, -1, !dbg !18778
  %and686 = and i32 %259, %neg, !dbg !18778
  %262 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18778
  %pipe687 = getelementptr inbounds %struct.urb, %struct.urb* %262, i32 0, i32 10, !dbg !18778
  %263 = load i32, i32* %pipe687, align 8, !dbg !18778
  %shr688 = lshr i32 %263, 15, !dbg !18778
  %and689 = and i32 %shr688, 15, !dbg !18778
  %shl690 = shl i32 1, %and689, !dbg !18778
  %or691 = or i32 %and686, %shl690, !dbg !18778
  %264 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18778
  %dev692 = getelementptr inbounds %struct.urb, %struct.urb* %264, i32 0, i32 8, !dbg !18778
  %265 = load %struct.usb_device*, %struct.usb_device** %dev692, align 8, !dbg !18778
  %toggle693 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %265, i32 0, i32 9, !dbg !18778
  %266 = load i32, i32* %is_input, align 4, !dbg !18778
  %tobool694 = icmp ne i32 %266, 0, !dbg !18778
  %lnot695 = xor i1 %tobool694, true, !dbg !18778
  %lnot.ext696 = zext i1 %lnot695 to i32, !dbg !18778
  %idxprom697 = sext i32 %lnot.ext696 to i64, !dbg !18778
  %arrayidx698 = getelementptr [2 x i32], [2 x i32]* %toggle693, i64 0, i64 %idxprom697, !dbg !18778
  store i32 %or691, i32* %arrayidx698, align 4, !dbg !18778
  %267 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !18779
  store %struct.ehci_qh* %267, %struct.ehci_qh** %retval, align 8, !dbg !18780
  br label %return, !dbg !18780

return:                                           ; preds = %sw.epilog, %done, %if.then
  %268 = load %struct.ehci_qh*, %struct.ehci_qh** %retval, align 8, !dbg !18781
  ret %struct.ehci_qh* %268, !dbg !18781
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice_tail(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !18782 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !18783, metadata !DIExpression()), !dbg !18784
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !18785, metadata !DIExpression()), !dbg !18786
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !18787
  %call = call i32 @list_empty(%struct.list_head* %0) #11, !dbg !18789
  %tobool = icmp ne i32 %call, 0, !dbg !18789
  br i1 %tobool, label %if.end, label %if.then, !dbg !18790

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !18791
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !18792
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !18793
  %3 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !18793
  %4 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !18794
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %3, %struct.list_head* %4) #11, !dbg !18795
  br label %if.end, !dbg !18795

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !18796
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.usb_host_endpoint* @usb_pipe_endpoint(%struct.usb_device* %dev, i32 %pipe) #0 !dbg !18797 {
entry:
  %dev.addr = alloca %struct.usb_device*, align 8
  %pipe.addr = alloca i32, align 4
  %eps = alloca %struct.usb_host_endpoint**, align 8
  store %struct.usb_device* %dev, %struct.usb_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev.addr, metadata !18800, metadata !DIExpression()), !dbg !18801
  store i32 %pipe, i32* %pipe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pipe.addr, metadata !18802, metadata !DIExpression()), !dbg !18803
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint*** %eps, metadata !18804, metadata !DIExpression()), !dbg !18805
  %0 = load i32, i32* %pipe.addr, align 4, !dbg !18806
  %and = and i32 %0, 128, !dbg !18806
  %tobool = icmp ne i32 %and, 0, !dbg !18806
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18806

cond.true:                                        ; preds = %entry
  %1 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !18807
  %ep_in = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 20, !dbg !18808
  %arraydecay = getelementptr inbounds [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %ep_in, i64 0, i64 0, !dbg !18807
  br label %cond.end, !dbg !18806

cond.false:                                       ; preds = %entry
  %2 = load %struct.usb_device*, %struct.usb_device** %dev.addr, align 8, !dbg !18809
  %ep_out = getelementptr inbounds %struct.usb_device, %struct.usb_device* %2, i32 0, i32 21, !dbg !18810
  %arraydecay1 = getelementptr inbounds [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %ep_out, i64 0, i64 0, !dbg !18809
  br label %cond.end, !dbg !18806

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.usb_host_endpoint** [ %arraydecay, %cond.true ], [ %arraydecay1, %cond.false ], !dbg !18806
  store %struct.usb_host_endpoint** %cond, %struct.usb_host_endpoint*** %eps, align 8, !dbg !18811
  %3 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %eps, align 8, !dbg !18812
  %4 = load i32, i32* %pipe.addr, align 4, !dbg !18813
  %shr = lshr i32 %4, 15, !dbg !18813
  %and2 = and i32 %shr, 15, !dbg !18813
  %idxprom = zext i32 %and2 to i64, !dbg !18812
  %arrayidx = getelementptr %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %3, i64 %idxprom, !dbg !18812
  %5 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx, align 8, !dbg !18812
  ret %struct.usb_host_endpoint* %5, !dbg !18814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_maxp_mult(%struct.usb_endpoint_descriptor* %epd) #0 !dbg !18815 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  %maxp = alloca i32, align 4
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !18816, metadata !DIExpression()), !dbg !18817
  call void @llvm.dbg.declare(metadata i32* %maxp, metadata !18818, metadata !DIExpression()), !dbg !18819
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !18820
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 4, !dbg !18820
  %1 = load i16, i16* %wMaxPacketSize, align 1, !dbg !18820
  %conv = zext i16 %1 to i32, !dbg !18820
  store i32 %conv, i32* %maxp, align 4, !dbg !18819
  %2 = load i32, i32* %maxp, align 4, !dbg !18821
  %and = and i32 %2, 6144, !dbg !18821
  %shr = ashr i32 %and, 11, !dbg !18821
  %add = add i32 %shr, 1, !dbg !18822
  ret i32 %add, !dbg !18823
}

; Function Attrs: noredzone
declare dso_local i64 @usb_calc_bus_time(i32, i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u32(i32 %n) #10 !dbg !18824 {
entry:
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !18827, metadata !DIExpression()), !dbg !18831
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !18833, metadata !DIExpression()), !dbg !18834
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !18835, metadata !DIExpression()), !dbg !18836
  %0 = load i32, i32* %n.addr, align 4, !dbg !18837
  store i32 %0, i32* %x.addr.i, align 4
  %1 = load i32, i32* %x.addr.i, align 4, !dbg !18838
  %2 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %1, i32 -1) #6, !dbg !18839, !srcloc !18840
  store i32 %2, i32* %r.i, align 4, !dbg !18839
  %3 = load i32, i32* %r.i, align 4, !dbg !18841
  %add.i = add i32 %3, 1, !dbg !18842
  %sub = sub i32 %add.i, 1, !dbg !18843
  ret i32 %sub, !dbg !18844
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__rounddown_pow_of_two(i64 %n) #10 !dbg !18845 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18848, metadata !DIExpression()), !dbg !18849
  %0 = load i64, i64* %n.addr, align 8, !dbg !18850
  %call = call i32 @fls_long(i64 %0) #11, !dbg !18851
  %sub = sub i32 %call, 1, !dbg !18852
  %sh_prom = zext i32 %sub to i64, !dbg !18853
  %shl = shl i64 1, %sh_prom, !dbg !18853
  ret i64 %shl, !dbg !18854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fls_long(i64 %l) #0 !dbg !18855 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !12369, metadata !DIExpression()), !dbg !18859
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !12375, metadata !DIExpression()), !dbg !18861
  %l.addr = alloca i64, align 8
  store i64 %l, i64* %l.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %l.addr, metadata !18862, metadata !DIExpression()), !dbg !18863
  %0 = load i64, i64* %l.addr, align 8, !dbg !18864
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !18861
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !18865
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !18866
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !18865, !srcloc !12402
  store i32 %3, i32* %bitpos.i, align 4, !dbg !18865
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !18867
  %add.i = add i32 %4, 1, !dbg !18868
  ret i32 %add.i, !dbg !18869
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ehci_iso_stream* @iso_stream_find(%struct.ehci_hcd* %ehci, %struct.urb* %urb) #0 !dbg !18870 {
entry:
  %lock.addr.i55 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i55, metadata !6709, metadata !DIExpression()), !dbg !18873
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !18875
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !18876
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %epnum = alloca i32, align 4
  %stream = alloca %struct.ehci_iso_stream*, align 8
  %ep = alloca %struct.usb_host_endpoint*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy10 = alloca i64, align 8
  %__dummy211 = alloca i64, align 8
  %tmp14 = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !18883, metadata !DIExpression()), !dbg !18884
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !18885, metadata !DIExpression()), !dbg !18886
  call void @llvm.dbg.declare(metadata i32* %epnum, metadata !18887, metadata !DIExpression()), !dbg !18888
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream, metadata !18889, metadata !DIExpression()), !dbg !18890
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep, metadata !18891, metadata !DIExpression()), !dbg !18892
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !18893, metadata !DIExpression()), !dbg !18894
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18895
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 10, !dbg !18895
  %1 = load i32, i32* %pipe, align 8, !dbg !18895
  %shr = lshr i32 %1, 15, !dbg !18895
  %and = and i32 %shr, 15, !dbg !18895
  store i32 %and, i32* %epnum, align 4, !dbg !18896
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18897
  %pipe1 = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 10, !dbg !18897
  %3 = load i32, i32* %pipe1, align 8, !dbg !18897
  %and2 = and i32 %3, 128, !dbg !18897
  %tobool = icmp ne i32 %and2, 0, !dbg !18897
  br i1 %tobool, label %if.then, label %if.else, !dbg !18899

if.then:                                          ; preds = %entry
  %4 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18900
  %dev = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 8, !dbg !18901
  %5 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !18901
  %ep_in = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 20, !dbg !18902
  %6 = load i32, i32* %epnum, align 4, !dbg !18903
  %idxprom = zext i32 %6 to i64, !dbg !18900
  %arrayidx = getelementptr [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %ep_in, i64 0, i64 %idxprom, !dbg !18900
  %7 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx, align 8, !dbg !18900
  store %struct.usb_host_endpoint* %7, %struct.usb_host_endpoint** %ep, align 8, !dbg !18904
  br label %if.end, !dbg !18905

if.else:                                          ; preds = %entry
  %8 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18906
  %dev3 = getelementptr inbounds %struct.urb, %struct.urb* %8, i32 0, i32 8, !dbg !18907
  %9 = load %struct.usb_device*, %struct.usb_device** %dev3, align 8, !dbg !18907
  %ep_out = getelementptr inbounds %struct.usb_device, %struct.usb_device* %9, i32 0, i32 21, !dbg !18908
  %10 = load i32, i32* %epnum, align 4, !dbg !18909
  %idxprom4 = zext i32 %10 to i64, !dbg !18906
  %arrayidx5 = getelementptr [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %ep_out, i64 0, i64 %idxprom4, !dbg !18906
  %11 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %arrayidx5, align 8, !dbg !18906
  store %struct.usb_host_endpoint* %11, %struct.usb_host_endpoint** %ep, align 8, !dbg !18910
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.body, !dbg !18911

do.body:                                          ; preds = %if.end
  br label %do.body6, !dbg !18912

do.body6:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !18913, metadata !DIExpression()), !dbg !18915
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !18916, metadata !DIExpression()), !dbg !18915
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !18915
  %conv = zext i1 %cmp to i32, !dbg !18915
  store i32 1, i32* %tmp, align 4, !dbg !18915
  %12 = load i32, i32* %tmp, align 4, !dbg !18915
  br label %do.body7, !dbg !18917

do.body7:                                         ; preds = %do.body6
  br label %do.body8, !dbg !18918

do.body8:                                         ; preds = %do.body7
  br label %do.body9, !dbg !18919

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy10, metadata !18921, metadata !DIExpression()), !dbg !18924
  call void @llvm.dbg.declare(metadata i64* %__dummy211, metadata !18925, metadata !DIExpression()), !dbg !18924
  %cmp12 = icmp eq i64* %__dummy10, %__dummy211, !dbg !18924
  %conv13 = zext i1 %cmp12 to i32, !dbg !18924
  store i32 1, i32* %tmp14, align 4, !dbg !18924
  %13 = load i32, i32* %tmp14, align 4, !dbg !18924
  %call = call i64 @arch_local_irq_save() #11, !dbg !18926
  store i64 %call, i64* %flags, align 8, !dbg !18926
  br label %do.end, !dbg !18926

do.end:                                           ; preds = %do.body9
  br label %do.end15, !dbg !18919

do.end15:                                         ; preds = %do.end
  br label %do.body16, !dbg !18918

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !18927, !srcloc !18928
  br label %do.body17, !dbg !18927

do.body17:                                        ; preds = %do.body16
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18929
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %14, i32 0, i32 11, !dbg !18929
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !18930
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !18931
  %rlock.i = bitcast %union.anon.0* %16 to %struct.raw_spinlock*, !dbg !18931
  br label %do.end19, !dbg !18929

do.end19:                                         ; preds = %do.body17
  br label %do.end20, !dbg !18927

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !18918

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !18917

do.end22:                                         ; preds = %do.end21
  br label %do.end23, !dbg !18912

do.end23:                                         ; preds = %do.end22
  %17 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !18932
  %hcpriv = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %17, i32 0, i32 5, !dbg !18933
  %18 = load i8*, i8** %hcpriv, align 8, !dbg !18933
  %19 = bitcast i8* %18 to %struct.ehci_iso_stream*, !dbg !18932
  store %struct.ehci_iso_stream* %19, %struct.ehci_iso_stream** %stream, align 8, !dbg !18934
  %20 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !18935
  %cmp24 = icmp eq %struct.ehci_iso_stream* %20, null, !dbg !18935
  %lnot = xor i1 %cmp24, true, !dbg !18935
  %lnot26 = xor i1 %lnot, true, !dbg !18935
  %lnot.ext = zext i1 %lnot26 to i32, !dbg !18935
  %conv27 = sext i32 %lnot.ext to i64, !dbg !18935
  %tobool28 = icmp ne i64 %conv27, 0, !dbg !18935
  br i1 %tobool28, label %if.then29, label %if.else42, !dbg !18937

if.then29:                                        ; preds = %do.end23
  %call30 = call %struct.ehci_iso_stream* @iso_stream_alloc(i32 2592) #11, !dbg !18938
  store %struct.ehci_iso_stream* %call30, %struct.ehci_iso_stream** %stream, align 8, !dbg !18940
  %21 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !18941
  %cmp31 = icmp ne %struct.ehci_iso_stream* %21, null, !dbg !18941
  %lnot33 = xor i1 %cmp31, true, !dbg !18941
  %lnot35 = xor i1 %lnot33, true, !dbg !18941
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !18941
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !18941
  %tobool38 = icmp ne i64 %conv37, 0, !dbg !18941
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !18943

if.then39:                                        ; preds = %if.then29
  %22 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !18944
  %23 = bitcast %struct.ehci_iso_stream* %22 to i8*, !dbg !18944
  %24 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !18946
  %hcpriv40 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %24, i32 0, i32 5, !dbg !18947
  store i8* %23, i8** %hcpriv40, align 8, !dbg !18948
  %25 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18949
  %26 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !18950
  %27 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !18951
  call void @iso_stream_init(%struct.ehci_hcd* %25, %struct.ehci_iso_stream* %26, %struct.urb* %27) #11, !dbg !18952
  br label %if.end41, !dbg !18953

if.end41:                                         ; preds = %if.then39, %if.then29
  br label %if.end53, !dbg !18954

if.else42:                                        ; preds = %do.end23
  %28 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !18955
  %hw = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %28, i32 0, i32 0, !dbg !18955
  %29 = load %struct.ehci_qh_hw*, %struct.ehci_qh_hw** %hw, align 8, !dbg !18955
  %cmp43 = icmp ne %struct.ehci_qh_hw* %29, null, !dbg !18955
  %lnot45 = xor i1 %cmp43, true, !dbg !18955
  %lnot47 = xor i1 %lnot45, true, !dbg !18955
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !18955
  %conv49 = sext i32 %lnot.ext48 to i64, !dbg !18955
  %tobool50 = icmp ne i64 %conv49, 0, !dbg !18955
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !18957

if.then51:                                        ; preds = %if.else42
  store %struct.ehci_iso_stream* null, %struct.ehci_iso_stream** %stream, align 8, !dbg !18958
  br label %if.end52, !dbg !18960

if.end52:                                         ; preds = %if.then51, %if.else42
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.end41
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !18961
  %lock54 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %30, i32 0, i32 11, !dbg !18962
  %31 = load i64, i64* %flags, align 8, !dbg !18963
  store %struct.spinlock* %lock54, %struct.spinlock** %lock.addr.i55, align 8
  store i64 %31, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !18964
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !18964
  store i32 1, i32* %tmp.i, align 4, !dbg !18964
  %32 = load i32, i32* %tmp.i, align 4, !dbg !18964
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !18965
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !18965
  store i32 1, i32* %tmp8.i, align 4, !dbg !18965
  %33 = load i32, i32* %tmp8.i, align 4, !dbg !18965
  %34 = load i64, i64* %flags.addr.i, align 8, !dbg !18966
  call void @arch_local_irq_restore(i64 %34) #12, !dbg !18966
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !18967, !srcloc !6997
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i55, align 8, !dbg !18968
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !18968
  %rlock.i56 = bitcast %union.anon.0* %36 to %struct.raw_spinlock*, !dbg !18968
  %37 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !18969
  ret %struct.ehci_iso_stream* %37, !dbg !18970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @itd_urb_transaction(%struct.ehci_iso_stream* %stream, %struct.ehci_hcd* %ehci, %struct.urb* %urb, i32 %mem_flags) #0 !dbg !18971 {
entry:
  %lock.addr.i99 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i99, metadata !6709, metadata !DIExpression()), !dbg !18974
  %flags.addr.i100 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i100, metadata !6715, metadata !DIExpression()), !dbg !18983
  %tmp.i101 = alloca i32, align 4
  %tmp8.i102 = alloca i32, align 4
  %lock.addr.i97 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i97, metadata !6695, metadata !DIExpression()), !dbg !18984
  %lock.addr.i92 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i92, metadata !6709, metadata !DIExpression()), !dbg !18991
  %flags.addr.i93 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i93, metadata !6715, metadata !DIExpression()), !dbg !18993
  %tmp.i94 = alloca i32, align 4
  %tmp8.i95 = alloca i32, align 4
  %lock.addr.i90 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i90, metadata !6709, metadata !DIExpression()), !dbg !18994
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !18996
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !18997
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct.ehci_iso_stream*, align 8
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %mem_flags.addr = alloca i32, align 4
  %itd = alloca %struct.ehci_itd*, align 8
  %itd_dma = alloca i64, align 8
  %i = alloca i32, align 4
  %num_itds = alloca i32, align 4
  %sched = alloca %struct.ehci_iso_sched*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy14 = alloca i64, align 8
  %__dummy215 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp45 = alloca %struct.ehci_itd*, align 8
  %__dummy56 = alloca i64, align 8
  %__dummy257 = alloca i64, align 8
  %tmp60 = alloca i32, align 4
  %__dummy64 = alloca i64, align 8
  %__dummy265 = alloca i64, align 8
  %tmp68 = alloca i32, align 4
  store %struct.ehci_iso_stream* %stream, %struct.ehci_iso_stream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream.addr, metadata !19004, metadata !DIExpression()), !dbg !19005
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !19006, metadata !DIExpression()), !dbg !19007
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !19008, metadata !DIExpression()), !dbg !19009
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !19010, metadata !DIExpression()), !dbg !19011
  call void @llvm.dbg.declare(metadata %struct.ehci_itd** %itd, metadata !19012, metadata !DIExpression()), !dbg !19013
  call void @llvm.dbg.declare(metadata i64* %itd_dma, metadata !19014, metadata !DIExpression()), !dbg !19015
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19016, metadata !DIExpression()), !dbg !19017
  call void @llvm.dbg.declare(metadata i32* %num_itds, metadata !19018, metadata !DIExpression()), !dbg !19019
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_sched** %sched, metadata !19020, metadata !DIExpression()), !dbg !19035
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !19036, metadata !DIExpression()), !dbg !19037
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19038
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 24, !dbg !19039
  %1 = load i32, i32* %number_of_packets, align 4, !dbg !19039
  %2 = load i32, i32* %mem_flags.addr, align 4, !dbg !19040
  %call = call %struct.ehci_iso_sched* @iso_sched_alloc(i32 %1, i32 %2) #11, !dbg !19041
  store %struct.ehci_iso_sched* %call, %struct.ehci_iso_sched** %sched, align 8, !dbg !19042
  %3 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !19043
  %cmp = icmp eq %struct.ehci_iso_sched* %3, null, !dbg !19043
  %lnot = xor i1 %cmp, true, !dbg !19043
  %lnot1 = xor i1 %lnot, true, !dbg !19043
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !19043
  %conv = sext i32 %lnot.ext to i64, !dbg !19043
  %tobool = icmp ne i64 %conv, 0, !dbg !19043
  br i1 %tobool, label %if.then, label %if.end, !dbg !19045

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !19046
  br label %return, !dbg !19046

if.end:                                           ; preds = %entry
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19047
  %5 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !19048
  %6 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19049
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19050
  call void @itd_sched_init(%struct.ehci_hcd* %4, %struct.ehci_iso_sched* %5, %struct.ehci_iso_stream* %6, %struct.urb* %7) #11, !dbg !19051
  %8 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19052
  %interval = getelementptr inbounds %struct.urb, %struct.urb* %8, i32 0, i32 25, !dbg !19054
  %9 = load i32, i32* %interval, align 8, !dbg !19054
  %cmp2 = icmp slt i32 %9, 8, !dbg !19055
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !19056

if.then4:                                         ; preds = %if.end
  %10 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !19057
  %span = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %10, i32 0, i32 1, !dbg !19058
  %11 = load i32, i32* %span, align 8, !dbg !19058
  %add = add i32 %11, 7, !dbg !19059
  %div = udiv i32 %add, 8, !dbg !19060
  %add5 = add i32 1, %div, !dbg !19061
  store i32 %add5, i32* %num_itds, align 4, !dbg !19062
  br label %if.end7, !dbg !19063

if.else:                                          ; preds = %if.end
  %12 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19064
  %number_of_packets6 = getelementptr inbounds %struct.urb, %struct.urb* %12, i32 0, i32 24, !dbg !19065
  %13 = load i32, i32* %number_of_packets6, align 4, !dbg !19065
  store i32 %13, i32* %num_itds, align 4, !dbg !19066
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then4
  br label %do.body, !dbg !19067

do.body:                                          ; preds = %if.end7
  br label %do.body8, !dbg !19068

do.body8:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !19069, metadata !DIExpression()), !dbg !19071
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !19072, metadata !DIExpression()), !dbg !19071
  %cmp9 = icmp eq i64* %__dummy, %__dummy2, !dbg !19071
  %conv10 = zext i1 %cmp9 to i32, !dbg !19071
  store i32 1, i32* %tmp, align 4, !dbg !19071
  %14 = load i32, i32* %tmp, align 4, !dbg !19071
  br label %do.body11, !dbg !19073

do.body11:                                        ; preds = %do.body8
  br label %do.body12, !dbg !19074

do.body12:                                        ; preds = %do.body11
  br label %do.body13, !dbg !19075

do.body13:                                        ; preds = %do.body12
  call void @llvm.dbg.declare(metadata i64* %__dummy14, metadata !19077, metadata !DIExpression()), !dbg !19080
  call void @llvm.dbg.declare(metadata i64* %__dummy215, metadata !19081, metadata !DIExpression()), !dbg !19080
  %cmp16 = icmp eq i64* %__dummy14, %__dummy215, !dbg !19080
  %conv17 = zext i1 %cmp16 to i32, !dbg !19080
  store i32 1, i32* %tmp18, align 4, !dbg !19080
  %15 = load i32, i32* %tmp18, align 4, !dbg !19080
  %call19 = call i64 @arch_local_irq_save() #11, !dbg !19082
  store i64 %call19, i64* %flags, align 8, !dbg !19082
  br label %do.end, !dbg !19082

do.end:                                           ; preds = %do.body13
  br label %do.end20, !dbg !19075

do.end20:                                         ; preds = %do.end
  br label %do.body21, !dbg !19074

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !19083, !srcloc !19084
  br label %do.body22, !dbg !19083

do.body22:                                        ; preds = %do.body21
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19085
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %16, i32 0, i32 11, !dbg !19085
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !19086
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !19087
  %rlock.i = bitcast %union.anon.0* %18 to %struct.raw_spinlock*, !dbg !19087
  br label %do.end24, !dbg !19085

do.end24:                                         ; preds = %do.body22
  br label %do.end25, !dbg !19083

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !19074

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !19073

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !19068

do.end28:                                         ; preds = %do.end27
  store i32 0, i32* %i, align 4, !dbg !19088
  br label %for.cond, !dbg !19089

for.cond:                                         ; preds = %for.inc, %do.end28
  %19 = load i32, i32* %i, align 4, !dbg !19090
  %20 = load i32, i32* %num_itds, align 4, !dbg !19091
  %cmp29 = icmp ult i32 %19, %20, !dbg !19092
  br i1 %cmp29, label %for.body, label %for.end, !dbg !19093

for.body:                                         ; preds = %for.cond
  %21 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19094
  %free_list = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %21, i32 0, i32 4, !dbg !19094
  %call31 = call i32 @list_empty(%struct.list_head* %free_list) #11, !dbg !19094
  %tobool32 = icmp ne i32 %call31, 0, !dbg !19094
  %lnot33 = xor i1 %tobool32, true, !dbg !19094
  %lnot35 = xor i1 %lnot33, true, !dbg !19094
  %lnot37 = xor i1 %lnot35, true, !dbg !19094
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !19094
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !19094
  %tobool40 = icmp ne i64 %conv39, 0, !dbg !19094
  br i1 %tobool40, label %if.then41, label %if.else51, !dbg !19095

if.then41:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19096, metadata !DIExpression()), !dbg !19099
  %22 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19099
  %free_list42 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %22, i32 0, i32 4, !dbg !19099
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %free_list42, i32 0, i32 0, !dbg !19099
  %23 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !19099
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !19099
  store i8* %24, i8** %__mptr, align 8, !dbg !19099
  br label %do.body43, !dbg !19099

do.body43:                                        ; preds = %if.then41
  br label %do.end44, !dbg !19100

do.end44:                                         ; preds = %do.body43
  %25 = load i8*, i8** %__mptr, align 8, !dbg !19099
  %add.ptr = getelementptr i8, i8* %25, i64 -128, !dbg !19099
  %26 = bitcast i8* %add.ptr to %struct.ehci_itd*, !dbg !19099
  store %struct.ehci_itd* %26, %struct.ehci_itd** %tmp45, align 8, !dbg !19100
  %27 = load %struct.ehci_itd*, %struct.ehci_itd** %tmp45, align 8, !dbg !19099
  store %struct.ehci_itd* %27, %struct.ehci_itd** %itd, align 8, !dbg !19102
  %28 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19103
  %frame = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %28, i32 0, i32 9, !dbg !19105
  %29 = load i32, i32* %frame, align 16, !dbg !19105
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19106
  %now_frame = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %30, i32 0, i32 33, !dbg !19107
  %31 = load i32, i32* %now_frame, align 8, !dbg !19107
  %cmp46 = icmp eq i32 %29, %31, !dbg !19108
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !19109

if.then48:                                        ; preds = %do.end44
  br label %alloc_itd, !dbg !19110

if.end49:                                         ; preds = %do.end44
  %32 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19111
  %itd_list = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %32, i32 0, i32 8, !dbg !19112
  call void @list_del(%struct.list_head* %itd_list) #11, !dbg !19113
  %33 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19114
  %itd_dma50 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %33, i32 0, i32 4, !dbg !19115
  %34 = load i64, i64* %itd_dma50, align 32, !dbg !19115
  store i64 %34, i64* %itd_dma, align 8, !dbg !19116
  br label %if.end85, !dbg !19117

if.else51:                                        ; preds = %for.body
  br label %alloc_itd, !dbg !19118

alloc_itd:                                        ; preds = %if.else51, %if.then48
  call void @llvm.dbg.label(metadata !19119), !dbg !19120
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19121
  %lock52 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %35, i32 0, i32 11, !dbg !19122
  %36 = load i64, i64* %flags, align 8, !dbg !19123
  store %struct.spinlock* %lock52, %struct.spinlock** %lock.addr.i92, align 8
  store i64 %36, i64* %flags.addr.i93, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !19124
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !19124
  store i32 1, i32* %tmp.i94, align 4, !dbg !19124
  %37 = load i32, i32* %tmp.i94, align 4, !dbg !19124
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !19125
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !19125
  store i32 1, i32* %tmp8.i95, align 4, !dbg !19125
  %38 = load i32, i32* %tmp8.i95, align 4, !dbg !19125
  %39 = load i64, i64* %flags.addr.i93, align 8, !dbg !19126
  call void @arch_local_irq_restore(i64 %39) #12, !dbg !19126
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !19127, !srcloc !6997
  %40 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i92, align 8, !dbg !19128
  %41 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %40, i32 0, i32 0, !dbg !19128
  %rlock.i96 = bitcast %union.anon.0* %41 to %struct.raw_spinlock*, !dbg !19128
  %42 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19129
  %itd_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %42, i32 0, i32 52, !dbg !19130
  %43 = load %struct.dma_pool*, %struct.dma_pool** %itd_pool, align 8, !dbg !19130
  %44 = load i32, i32* %mem_flags.addr, align 4, !dbg !19131
  %call53 = call i8* @dma_pool_alloc(%struct.dma_pool* %43, i32 %44, i64* %itd_dma) #11, !dbg !19132
  %45 = bitcast i8* %call53 to %struct.ehci_itd*, !dbg !19132
  store %struct.ehci_itd* %45, %struct.ehci_itd** %itd, align 8, !dbg !19133
  br label %do.body54, !dbg !19134

do.body54:                                        ; preds = %alloc_itd
  br label %do.body55, !dbg !19135

do.body55:                                        ; preds = %do.body54
  call void @llvm.dbg.declare(metadata i64* %__dummy56, metadata !19136, metadata !DIExpression()), !dbg !19138
  call void @llvm.dbg.declare(metadata i64* %__dummy257, metadata !19139, metadata !DIExpression()), !dbg !19138
  %cmp58 = icmp eq i64* %__dummy56, %__dummy257, !dbg !19138
  %conv59 = zext i1 %cmp58 to i32, !dbg !19138
  store i32 1, i32* %tmp60, align 4, !dbg !19138
  %46 = load i32, i32* %tmp60, align 4, !dbg !19138
  br label %do.body61, !dbg !19140

do.body61:                                        ; preds = %do.body55
  br label %do.body62, !dbg !19141

do.body62:                                        ; preds = %do.body61
  br label %do.body63, !dbg !19142

do.body63:                                        ; preds = %do.body62
  call void @llvm.dbg.declare(metadata i64* %__dummy64, metadata !19144, metadata !DIExpression()), !dbg !19147
  call void @llvm.dbg.declare(metadata i64* %__dummy265, metadata !19148, metadata !DIExpression()), !dbg !19147
  %cmp66 = icmp eq i64* %__dummy64, %__dummy265, !dbg !19147
  %conv67 = zext i1 %cmp66 to i32, !dbg !19147
  store i32 1, i32* %tmp68, align 4, !dbg !19147
  %47 = load i32, i32* %tmp68, align 4, !dbg !19147
  %call69 = call i64 @arch_local_irq_save() #11, !dbg !19149
  store i64 %call69, i64* %flags, align 8, !dbg !19149
  br label %do.end70, !dbg !19149

do.end70:                                         ; preds = %do.body63
  br label %do.end71, !dbg !19142

do.end71:                                         ; preds = %do.end70
  br label %do.body72, !dbg !19141

do.body72:                                        ; preds = %do.end71
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !19150, !srcloc !19151
  br label %do.body73, !dbg !19150

do.body73:                                        ; preds = %do.body72
  %48 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19152
  %lock74 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %48, i32 0, i32 11, !dbg !19152
  store %struct.spinlock* %lock74, %struct.spinlock** %lock.addr.i97, align 8
  %49 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i97, align 8, !dbg !19153
  %50 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %49, i32 0, i32 0, !dbg !19154
  %rlock.i98 = bitcast %union.anon.0* %50 to %struct.raw_spinlock*, !dbg !19154
  br label %do.end76, !dbg !19152

do.end76:                                         ; preds = %do.body73
  br label %do.end77, !dbg !19150

do.end77:                                         ; preds = %do.end76
  br label %do.end78, !dbg !19141

do.end78:                                         ; preds = %do.end77
  br label %do.end79, !dbg !19140

do.end79:                                         ; preds = %do.end78
  br label %do.end80, !dbg !19135

do.end80:                                         ; preds = %do.end79
  %51 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19155
  %tobool81 = icmp ne %struct.ehci_itd* %51, null, !dbg !19155
  br i1 %tobool81, label %if.end84, label %if.then82, !dbg !19156

if.then82:                                        ; preds = %do.end80
  %52 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19157
  %53 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !19158
  call void @iso_sched_free(%struct.ehci_iso_stream* %52, %struct.ehci_iso_sched* %53) #11, !dbg !19159
  %54 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19160
  %lock83 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %54, i32 0, i32 11, !dbg !19161
  %55 = load i64, i64* %flags, align 8, !dbg !19162
  store %struct.spinlock* %lock83, %struct.spinlock** %lock.addr.i99, align 8
  store i64 %55, i64* %flags.addr.i100, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !19163
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !19163
  store i32 1, i32* %tmp.i101, align 4, !dbg !19163
  %56 = load i32, i32* %tmp.i101, align 4, !dbg !19163
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !19164
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !19164
  store i32 1, i32* %tmp8.i102, align 4, !dbg !19164
  %57 = load i32, i32* %tmp8.i102, align 4, !dbg !19164
  %58 = load i64, i64* %flags.addr.i100, align 8, !dbg !19165
  call void @arch_local_irq_restore(i64 %58) #12, !dbg !19165
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !19166, !srcloc !6997
  %59 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i99, align 8, !dbg !19167
  %60 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %59, i32 0, i32 0, !dbg !19167
  %rlock.i103 = bitcast %union.anon.0* %60 to %struct.raw_spinlock*, !dbg !19167
  store i32 -12, i32* %retval, align 4, !dbg !19168
  br label %return, !dbg !19168

if.end84:                                         ; preds = %do.end80
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.end49
  %61 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19169
  %62 = bitcast %struct.ehci_itd* %61 to i8*, !dbg !19170
  call void @llvm.memset.p0i8.i64(i8* align 32 %62, i8 0, i64 192, i1 false), !dbg !19170
  %63 = load i64, i64* %itd_dma, align 8, !dbg !19171
  %64 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19172
  %itd_dma86 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %64, i32 0, i32 4, !dbg !19173
  store i64 %63, i64* %itd_dma86, align 32, !dbg !19174
  %65 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19175
  %frame87 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %65, i32 0, i32 9, !dbg !19176
  store i32 29999, i32* %frame87, align 16, !dbg !19177
  %66 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19178
  %itd_list88 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %66, i32 0, i32 8, !dbg !19179
  %67 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !19180
  %td_list = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %67, i32 0, i32 0, !dbg !19181
  call void @list_add(%struct.list_head* %itd_list88, %struct.list_head* %td_list) #11, !dbg !19182
  br label %for.inc, !dbg !19183

for.inc:                                          ; preds = %if.end85
  %68 = load i32, i32* %i, align 4, !dbg !19184
  %inc = add i32 %68, 1, !dbg !19184
  store i32 %inc, i32* %i, align 4, !dbg !19184
  br label %for.cond, !dbg !19185, !llvm.loop !19186

for.end:                                          ; preds = %for.cond
  %69 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19188
  %lock89 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %69, i32 0, i32 11, !dbg !19189
  %70 = load i64, i64* %flags, align 8, !dbg !19190
  store %struct.spinlock* %lock89, %struct.spinlock** %lock.addr.i90, align 8
  store i64 %70, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !19191
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !19191
  store i32 1, i32* %tmp.i, align 4, !dbg !19191
  %71 = load i32, i32* %tmp.i, align 4, !dbg !19191
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !19192
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !19192
  store i32 1, i32* %tmp8.i, align 4, !dbg !19192
  %72 = load i32, i32* %tmp8.i, align 4, !dbg !19192
  %73 = load i64, i64* %flags.addr.i, align 8, !dbg !19193
  call void @arch_local_irq_restore(i64 %73) #12, !dbg !19193
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !19194, !srcloc !6997
  %74 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i90, align 8, !dbg !19195
  %75 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %74, i32 0, i32 0, !dbg !19195
  %rlock.i91 = bitcast %union.anon.0* %75 to %struct.raw_spinlock*, !dbg !19195
  %76 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !19196
  %77 = bitcast %struct.ehci_iso_sched* %76 to i8*, !dbg !19196
  %78 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19197
  %hcpriv = getelementptr inbounds %struct.urb, %struct.urb* %78, i32 0, i32 2, !dbg !19198
  store i8* %77, i8** %hcpriv, align 8, !dbg !19199
  %79 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19200
  %error_count = getelementptr inbounds %struct.urb, %struct.urb* %79, i32 0, i32 26, !dbg !19201
  store i32 0, i32* %error_count, align 4, !dbg !19202
  store i32 0, i32* %retval, align 4, !dbg !19203
  br label %return, !dbg !19203

return:                                           ; preds = %for.end, %if.then82, %if.then
  %80 = load i32, i32* %retval, align 4, !dbg !19204
  ret i32 %80, !dbg !19204
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iso_stream_schedule(%struct.ehci_hcd* %ehci, %struct.urb* %urb, %struct.ehci_iso_stream* %stream) #0 !dbg !19205 {
entry:
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %stream.addr = alloca %struct.ehci_iso_stream*, align 8
  %now = alloca i32, align 4
  %base = alloca i32, align 4
  %next = alloca i32, align 4
  %start = alloca i32, align 4
  %period = alloca i32, align 4
  %span = alloca i32, align 4
  %now2 = alloca i32, align 4
  %wrap = alloca i32, align 4
  %skip = alloca i32, align 4
  %status = alloca i32, align 4
  %mod = alloca i32, align 4
  %sched = alloca %struct.ehci_iso_sched*, align 8
  %empty = alloca i8, align 1
  %new_stream = alloca i8, align 1
  %done = alloca i32, align 4
  %tt = alloca %struct.ehci_tt*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !19208, metadata !DIExpression()), !dbg !19209
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !19210, metadata !DIExpression()), !dbg !19211
  store %struct.ehci_iso_stream* %stream, %struct.ehci_iso_stream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream.addr, metadata !19212, metadata !DIExpression()), !dbg !19213
  call void @llvm.dbg.declare(metadata i32* %now, metadata !19214, metadata !DIExpression()), !dbg !19215
  call void @llvm.dbg.declare(metadata i32* %base, metadata !19216, metadata !DIExpression()), !dbg !19217
  call void @llvm.dbg.declare(metadata i32* %next, metadata !19218, metadata !DIExpression()), !dbg !19219
  call void @llvm.dbg.declare(metadata i32* %start, metadata !19220, metadata !DIExpression()), !dbg !19221
  call void @llvm.dbg.declare(metadata i32* %period, metadata !19222, metadata !DIExpression()), !dbg !19223
  call void @llvm.dbg.declare(metadata i32* %span, metadata !19224, metadata !DIExpression()), !dbg !19225
  call void @llvm.dbg.declare(metadata i32* %now2, metadata !19226, metadata !DIExpression()), !dbg !19227
  call void @llvm.dbg.declare(metadata i32* %wrap, metadata !19228, metadata !DIExpression()), !dbg !19229
  store i32 0, i32* %wrap, align 4, !dbg !19229
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !19230, metadata !DIExpression()), !dbg !19231
  store i32 0, i32* %skip, align 4, !dbg !19231
  call void @llvm.dbg.declare(metadata i32* %status, metadata !19232, metadata !DIExpression()), !dbg !19233
  store i32 0, i32* %status, align 4, !dbg !19233
  call void @llvm.dbg.declare(metadata i32* %mod, metadata !19234, metadata !DIExpression()), !dbg !19235
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19236
  %periodic_size = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 23, !dbg !19237
  %1 = load i32, i32* %periodic_size, align 8, !dbg !19237
  %shl = shl i32 %1, 3, !dbg !19238
  store i32 %shl, i32* %mod, align 4, !dbg !19235
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_sched** %sched, metadata !19239, metadata !DIExpression()), !dbg !19240
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19241
  %hcpriv = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 2, !dbg !19242
  %3 = load i8*, i8** %hcpriv, align 8, !dbg !19242
  %4 = bitcast i8* %3 to %struct.ehci_iso_sched*, !dbg !19241
  store %struct.ehci_iso_sched* %4, %struct.ehci_iso_sched** %sched, align 8, !dbg !19240
  call void @llvm.dbg.declare(metadata i8* %empty, metadata !19243, metadata !DIExpression()), !dbg !19244
  %5 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19245
  %td_list = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %5, i32 0, i32 3, !dbg !19246
  %call = call i32 @list_empty(%struct.list_head* %td_list) #11, !dbg !19247
  %tobool = icmp ne i32 %call, 0, !dbg !19247
  %frombool = zext i1 %tobool to i8, !dbg !19244
  store i8 %frombool, i8* %empty, align 1, !dbg !19244
  call void @llvm.dbg.declare(metadata i8* %new_stream, metadata !19248, metadata !DIExpression()), !dbg !19249
  store i8 0, i8* %new_stream, align 1, !dbg !19249
  %6 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19250
  %uperiod = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %6, i32 0, i32 8, !dbg !19251
  %7 = load i16, i16* %uperiod, align 8, !dbg !19251
  %conv = zext i16 %7 to i32, !dbg !19250
  store i32 %conv, i32* %period, align 4, !dbg !19252
  %8 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !19253
  %span1 = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %8, i32 0, i32 1, !dbg !19254
  %9 = load i32, i32* %span1, align 8, !dbg !19254
  store i32 %9, i32* %span, align 4, !dbg !19255
  %10 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19256
  %highspeed = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %10, i32 0, i32 2, !dbg !19258
  %11 = load i8, i8* %highspeed, align 1, !dbg !19258
  %tobool2 = icmp ne i8 %11, 0, !dbg !19256
  br i1 %tobool2, label %if.end, label %if.then, !dbg !19259

if.then:                                          ; preds = %entry
  %12 = load i32, i32* %span, align 4, !dbg !19260
  %shl3 = shl i32 %12, 3, !dbg !19260
  store i32 %shl3, i32* %span, align 4, !dbg !19260
  br label %if.end, !dbg !19261

if.end:                                           ; preds = %if.then, %entry
  %13 = load i8, i8* %empty, align 1, !dbg !19262
  %tobool4 = trunc i8 %13 to i1, !dbg !19262
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !19262

land.rhs:                                         ; preds = %if.end
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19262
  %call6 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %14) #11, !dbg !19262
  %15 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19262
  %ep = getelementptr inbounds %struct.urb, %struct.urb* %15, i32 0, i32 9, !dbg !19262
  %16 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !19262
  %call7 = call zeroext i1 @hcd_periodic_completion_in_progress(%struct.usb_hcd* %call6, %struct.usb_host_endpoint* %16) #11, !dbg !19262
  %lnot = xor i1 %call7, true, !dbg !19262
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %17 = phi i1 [ false, %if.end ], [ %lnot, %land.rhs ], !dbg !19264
  %lnot8 = xor i1 %17, true, !dbg !19262
  %lnot9 = xor i1 %lnot8, true, !dbg !19262
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !19262
  %conv10 = sext i32 %lnot.ext to i64, !dbg !19262
  %tobool11 = icmp ne i64 %conv10, 0, !dbg !19262
  br i1 %tobool11, label %if.then12, label %if.end81, !dbg !19265

if.then12:                                        ; preds = %land.end
  %18 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19266
  %ps = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %18, i32 0, i32 5, !dbg !19269
  %phase = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 6, !dbg !19270
  %19 = load i16, i16* %phase, align 2, !dbg !19270
  %conv13 = zext i16 %19 to i32, !dbg !19266
  %cmp = icmp eq i32 %conv13, 29999, !dbg !19271
  br i1 %cmp, label %if.then15, label %if.else71, !dbg !19272

if.then15:                                        ; preds = %if.then12
  call void @llvm.dbg.declare(metadata i32* %done, metadata !19273, metadata !DIExpression()), !dbg !19275
  store i32 0, i32* %done, align 4, !dbg !19275
  call void @llvm.dbg.declare(metadata %struct.ehci_tt** %tt, metadata !19276, metadata !DIExpression()), !dbg !19277
  %20 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19278
  %ps16 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %20, i32 0, i32 5, !dbg !19279
  %udev = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps16, i32 0, i32 0, !dbg !19280
  %21 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !19280
  %call17 = call %struct.ehci_tt* @find_tt(%struct.usb_device* %21) #11, !dbg !19281
  store %struct.ehci_tt* %call17, %struct.ehci_tt** %tt, align 8, !dbg !19277
  %22 = load %struct.ehci_tt*, %struct.ehci_tt** %tt, align 8, !dbg !19282
  %23 = bitcast %struct.ehci_tt* %22 to i8*, !dbg !19282
  %call18 = call zeroext i1 @IS_ERR(i8* %23) #11, !dbg !19284
  br i1 %call18, label %if.then19, label %if.end22, !dbg !19285

if.then19:                                        ; preds = %if.then15
  %24 = load %struct.ehci_tt*, %struct.ehci_tt** %tt, align 8, !dbg !19286
  %25 = bitcast %struct.ehci_tt* %24 to i8*, !dbg !19286
  %call20 = call i64 @PTR_ERR(i8* %25) #11, !dbg !19288
  %conv21 = trunc i64 %call20 to i32, !dbg !19288
  store i32 %conv21, i32* %status, align 4, !dbg !19289
  br label %fail, !dbg !19290

if.end22:                                         ; preds = %if.then15
  %26 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19291
  %tt_budget = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %26, i32 0, i32 63, !dbg !19292
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %tt_budget, i64 0, i64 0, !dbg !19291
  %27 = load %struct.ehci_tt*, %struct.ehci_tt** %tt, align 8, !dbg !19293
  call void @compute_tt_budget(i8* %arraydecay, %struct.ehci_tt* %27) #11, !dbg !19294
  %28 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19295
  %random_frame = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %28, i32 0, i32 54, !dbg !19296
  %29 = load i32, i32* %random_frame, align 8, !dbg !19297
  %inc = add i32 %29, 1, !dbg !19297
  store i32 %inc, i32* %random_frame, align 8, !dbg !19297
  %sub = sub i32 0, %inc, !dbg !19298
  %shl23 = shl i32 %sub, 3, !dbg !19299
  %30 = load i32, i32* %period, align 4, !dbg !19300
  %sub24 = sub i32 %30, 1, !dbg !19301
  %and = and i32 %shl23, %sub24, !dbg !19302
  store i32 %and, i32* %start, align 4, !dbg !19303
  %31 = load i32, i32* %start, align 4, !dbg !19304
  store i32 %31, i32* %next, align 4, !dbg !19305
  %32 = load i32, i32* %period, align 4, !dbg !19306
  %33 = load i32, i32* %start, align 4, !dbg !19307
  %add = add i32 %33, %32, !dbg !19307
  store i32 %add, i32* %start, align 4, !dbg !19307
  br label %do.body, !dbg !19308

do.body:                                          ; preds = %land.end47, %if.end22
  %34 = load i32, i32* %start, align 4, !dbg !19309
  %dec = add i32 %34, -1, !dbg !19309
  store i32 %dec, i32* %start, align 4, !dbg !19309
  %35 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19311
  %highspeed25 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %35, i32 0, i32 2, !dbg !19313
  %36 = load i8, i8* %highspeed25, align 1, !dbg !19313
  %tobool26 = icmp ne i8 %36, 0, !dbg !19311
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !19314

if.then27:                                        ; preds = %do.body
  %37 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19315
  %38 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19318
  %39 = load i32, i32* %start, align 4, !dbg !19319
  %call28 = call i32 @itd_slot_ok(%struct.ehci_hcd* %37, %struct.ehci_iso_stream* %38, i32 %39) #11, !dbg !19320
  %tobool29 = icmp ne i32 %call28, 0, !dbg !19320
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !19321

if.then30:                                        ; preds = %if.then27
  store i32 1, i32* %done, align 4, !dbg !19322
  br label %if.end31, !dbg !19323

if.end31:                                         ; preds = %if.then30, %if.then27
  br label %if.end40, !dbg !19324

if.else:                                          ; preds = %do.body
  %40 = load i32, i32* %start, align 4, !dbg !19325
  %rem = urem i32 %40, 8, !dbg !19328
  %cmp32 = icmp uge i32 %rem, 6, !dbg !19329
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !19330

if.then34:                                        ; preds = %if.else
  br label %do.cond, !dbg !19331

if.end35:                                         ; preds = %if.else
  %41 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19332
  %42 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19334
  %43 = load i32, i32* %start, align 4, !dbg !19335
  %44 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !19336
  %45 = load %struct.ehci_tt*, %struct.ehci_tt** %tt, align 8, !dbg !19337
  %call36 = call i32 @sitd_slot_ok(%struct.ehci_hcd* %41, %struct.ehci_iso_stream* %42, i32 %43, %struct.ehci_iso_sched* %44, %struct.ehci_tt* %45) #11, !dbg !19338
  %tobool37 = icmp ne i32 %call36, 0, !dbg !19338
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !19339

if.then38:                                        ; preds = %if.end35
  store i32 1, i32* %done, align 4, !dbg !19340
  br label %if.end39, !dbg !19341

if.end39:                                         ; preds = %if.then38, %if.end35
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end31
  br label %do.cond, !dbg !19342

do.cond:                                          ; preds = %if.end40, %if.then34
  %46 = load i32, i32* %start, align 4, !dbg !19343
  %47 = load i32, i32* %next, align 4, !dbg !19344
  %cmp41 = icmp ugt i32 %46, %47, !dbg !19345
  br i1 %cmp41, label %land.rhs43, label %land.end47, !dbg !19346

land.rhs43:                                       ; preds = %do.cond
  %48 = load i32, i32* %done, align 4, !dbg !19347
  %tobool44 = icmp ne i32 %48, 0, !dbg !19348
  %lnot45 = xor i1 %tobool44, true, !dbg !19348
  br label %land.end47

land.end47:                                       ; preds = %land.rhs43, %do.cond
  %49 = phi i1 [ false, %do.cond ], [ %lnot45, %land.rhs43 ], !dbg !19349
  br i1 %49, label %do.body, label %do.end, !dbg !19342, !llvm.loop !19350

do.end:                                           ; preds = %land.end47
  %50 = load i32, i32* %done, align 4, !dbg !19352
  %tobool48 = icmp ne i32 %50, 0, !dbg !19352
  br i1 %tobool48, label %if.end50, label %if.then49, !dbg !19354

if.then49:                                        ; preds = %do.end
  store i32 -28, i32* %status, align 4, !dbg !19355
  br label %fail, !dbg !19357

if.end50:                                         ; preds = %do.end
  %51 = load i32, i32* %start, align 4, !dbg !19358
  %shr = lshr i32 %51, 3, !dbg !19359
  %52 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19360
  %ps51 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %52, i32 0, i32 5, !dbg !19361
  %period52 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps51, i32 0, i32 5, !dbg !19362
  %53 = load i16, i16* %period52, align 4, !dbg !19362
  %conv53 = zext i16 %53 to i32, !dbg !19360
  %sub54 = sub i32 %conv53, 1, !dbg !19363
  %and55 = and i32 %shr, %sub54, !dbg !19364
  %conv56 = trunc i32 %and55 to i16, !dbg !19365
  %54 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19366
  %ps57 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %54, i32 0, i32 5, !dbg !19367
  %phase58 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps57, i32 0, i32 6, !dbg !19368
  store i16 %conv56, i16* %phase58, align 2, !dbg !19369
  %55 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19370
  %ps59 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %55, i32 0, i32 5, !dbg !19371
  %phase60 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps59, i32 0, i32 6, !dbg !19372
  %56 = load i16, i16* %phase60, align 2, !dbg !19372
  %conv61 = zext i16 %56 to i32, !dbg !19370
  %57 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19373
  %ps62 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %57, i32 0, i32 5, !dbg !19374
  %bw_period = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps62, i32 0, i32 12, !dbg !19375
  %58 = load i8, i8* %bw_period, align 1, !dbg !19375
  %conv63 = zext i8 %58 to i32, !dbg !19373
  %sub64 = sub i32 %conv63, 1, !dbg !19376
  %and65 = and i32 %conv61, %sub64, !dbg !19377
  %conv66 = trunc i32 %and65 to i8, !dbg !19370
  %59 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19378
  %ps67 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %59, i32 0, i32 5, !dbg !19379
  %bw_phase = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps67, i32 0, i32 7, !dbg !19380
  store i8 %conv66, i8* %bw_phase, align 8, !dbg !19381
  %60 = load i32, i32* %start, align 4, !dbg !19382
  %and68 = and i32 %60, 7, !dbg !19383
  %conv69 = trunc i32 %and68 to i8, !dbg !19382
  %61 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19384
  %ps70 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %61, i32 0, i32 5, !dbg !19385
  %phase_uf = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps70, i32 0, i32 8, !dbg !19386
  store i8 %conv69, i8* %phase_uf, align 1, !dbg !19387
  %62 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19388
  %63 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19389
  call void @reserve_release_iso_bandwidth(%struct.ehci_hcd* %62, %struct.ehci_iso_stream* %63, i32 1) #11, !dbg !19390
  br label %if.end80, !dbg !19391

if.else71:                                        ; preds = %if.then12
  %64 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19392
  %ps72 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %64, i32 0, i32 5, !dbg !19394
  %phase73 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps72, i32 0, i32 6, !dbg !19395
  %65 = load i16, i16* %phase73, align 2, !dbg !19395
  %conv74 = zext i16 %65 to i32, !dbg !19392
  %shl75 = shl i32 %conv74, 3, !dbg !19396
  %66 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19397
  %ps76 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %66, i32 0, i32 5, !dbg !19398
  %phase_uf77 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps76, i32 0, i32 8, !dbg !19399
  %67 = load i8, i8* %phase_uf77, align 1, !dbg !19399
  %conv78 = zext i8 %67 to i32, !dbg !19397
  %add79 = add i32 %shl75, %conv78, !dbg !19400
  store i32 %add79, i32* %start, align 4, !dbg !19401
  br label %if.end80

if.end80:                                         ; preds = %if.else71, %if.end50
  %68 = load i32, i32* %start, align 4, !dbg !19402
  %69 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19403
  %next_uframe = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %69, i32 0, i32 6, !dbg !19404
  store i32 %68, i32* %next_uframe, align 8, !dbg !19405
  store i8 1, i8* %new_stream, align 1, !dbg !19406
  br label %if.end81, !dbg !19407

if.end81:                                         ; preds = %if.end80, %land.end
  %70 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19408
  %call82 = call i32 @ehci_read_frame_index(%struct.ehci_hcd* %70) #11, !dbg !19409
  %71 = load i32, i32* %mod, align 4, !dbg !19410
  %sub83 = sub i32 %71, 1, !dbg !19411
  %and84 = and i32 %call82, %sub83, !dbg !19412
  store i32 %and84, i32* %now, align 4, !dbg !19413
  %72 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19414
  %i_thresh = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %72, i32 0, i32 27, !dbg !19416
  %73 = load i32, i32* %i_thresh, align 8, !dbg !19416
  %tobool85 = icmp ne i32 %73, 0, !dbg !19414
  br i1 %tobool85, label %if.then86, label %if.else89, !dbg !19417

if.then86:                                        ; preds = %if.end81
  %74 = load i32, i32* %now, align 4, !dbg !19418
  %75 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19419
  %i_thresh87 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %75, i32 0, i32 27, !dbg !19420
  %76 = load i32, i32* %i_thresh87, align 8, !dbg !19420
  %add88 = add i32 %74, %76, !dbg !19421
  store i32 %add88, i32* %next, align 4, !dbg !19422
  br label %if.end93, !dbg !19423

if.else89:                                        ; preds = %if.end81
  %77 = load i32, i32* %now, align 4, !dbg !19424
  %add90 = add i32 %77, 2, !dbg !19425
  %add91 = add i32 %add90, 7, !dbg !19426
  %and92 = and i32 %add91, -8, !dbg !19427
  store i32 %and92, i32* %next, align 4, !dbg !19428
  br label %if.end93

if.end93:                                         ; preds = %if.else89, %if.then86
  %78 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19429
  %isoc_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %78, i32 0, i32 36, !dbg !19431
  %79 = load i32, i32* %isoc_count, align 4, !dbg !19431
  %cmp94 = icmp eq i32 %79, 0, !dbg !19432
  br i1 %cmp94, label %if.then96, label %if.end98, !dbg !19433

if.then96:                                        ; preds = %if.end93
  %80 = load i32, i32* %now, align 4, !dbg !19434
  %shr97 = lshr i32 %80, 3, !dbg !19435
  %81 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19436
  %last_iso_frame = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %81, i32 0, i32 34, !dbg !19437
  store i32 %shr97, i32* %last_iso_frame, align 4, !dbg !19438
  br label %if.end98, !dbg !19436

if.end98:                                         ; preds = %if.then96, %if.end93
  %82 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19439
  %last_iso_frame99 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %82, i32 0, i32 34, !dbg !19440
  %83 = load i32, i32* %last_iso_frame99, align 4, !dbg !19440
  %shl100 = shl i32 %83, 3, !dbg !19441
  store i32 %shl100, i32* %base, align 4, !dbg !19442
  %84 = load i32, i32* %next, align 4, !dbg !19443
  %85 = load i32, i32* %base, align 4, !dbg !19444
  %sub101 = sub i32 %84, %85, !dbg !19445
  %86 = load i32, i32* %mod, align 4, !dbg !19446
  %sub102 = sub i32 %86, 1, !dbg !19447
  %and103 = and i32 %sub101, %sub102, !dbg !19448
  store i32 %and103, i32* %next, align 4, !dbg !19449
  %87 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19450
  %next_uframe104 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %87, i32 0, i32 6, !dbg !19451
  %88 = load i32, i32* %next_uframe104, align 8, !dbg !19451
  %89 = load i32, i32* %base, align 4, !dbg !19452
  %sub105 = sub i32 %88, %89, !dbg !19453
  %90 = load i32, i32* %mod, align 4, !dbg !19454
  %sub106 = sub i32 %90, 1, !dbg !19455
  %and107 = and i32 %sub105, %sub106, !dbg !19456
  store i32 %and107, i32* %start, align 4, !dbg !19457
  %91 = load i8, i8* %new_stream, align 1, !dbg !19458
  %tobool108 = trunc i8 %91 to i1, !dbg !19458
  %lnot109 = xor i1 %tobool108, true, !dbg !19458
  %lnot111 = xor i1 %lnot109, true, !dbg !19458
  %lnot.ext112 = zext i1 %lnot111 to i32, !dbg !19458
  %conv113 = sext i32 %lnot.ext112 to i64, !dbg !19458
  %tobool114 = icmp ne i64 %conv113, 0, !dbg !19458
  br i1 %tobool114, label %if.then115, label %if.end116, !dbg !19460

if.then115:                                       ; preds = %if.end98
  br label %do_ASAP, !dbg !19461

if.end116:                                        ; preds = %if.end98
  %92 = load i32, i32* %now, align 4, !dbg !19462
  %93 = load i32, i32* %base, align 4, !dbg !19463
  %sub117 = sub i32 %92, %93, !dbg !19464
  %94 = load i32, i32* %mod, align 4, !dbg !19465
  %sub118 = sub i32 %94, 1, !dbg !19466
  %and119 = and i32 %sub117, %sub118, !dbg !19467
  store i32 %and119, i32* %now2, align 4, !dbg !19468
  %95 = load i8, i8* %empty, align 1, !dbg !19469
  %tobool120 = trunc i8 %95 to i1, !dbg !19469
  br i1 %tobool120, label %land.end124, label %land.rhs121, !dbg !19469

land.rhs121:                                      ; preds = %if.end116
  %96 = load i32, i32* %start, align 4, !dbg !19469
  %97 = load i32, i32* %period, align 4, !dbg !19469
  %cmp122 = icmp ult i32 %96, %97, !dbg !19469
  br label %land.end124

land.end124:                                      ; preds = %land.rhs121, %if.end116
  %98 = phi i1 [ false, %if.end116 ], [ %cmp122, %land.rhs121 ], !dbg !19471
  %lnot125 = xor i1 %98, true, !dbg !19469
  %lnot127 = xor i1 %lnot125, true, !dbg !19469
  %lnot.ext128 = zext i1 %lnot127 to i32, !dbg !19469
  %conv129 = sext i32 %lnot.ext128 to i64, !dbg !19469
  %tobool130 = icmp ne i64 %conv129, 0, !dbg !19469
  br i1 %tobool130, label %if.then131, label %if.end132, !dbg !19472

if.then131:                                       ; preds = %land.end124
  store i32 -27, i32* %status, align 4, !dbg !19473
  br label %fail, !dbg !19475

if.end132:                                        ; preds = %land.end124
  %99 = load i8, i8* %empty, align 1, !dbg !19476
  %tobool133 = trunc i8 %99 to i1, !dbg !19476
  br i1 %tobool133, label %lor.rhs, label %lor.end, !dbg !19476

lor.rhs:                                          ; preds = %if.end132
  %100 = load i32, i32* %start, align 4, !dbg !19476
  %101 = load i32, i32* %now2, align 4, !dbg !19476
  %102 = load i32, i32* %period, align 4, !dbg !19476
  %add134 = add i32 %101, %102, !dbg !19476
  %cmp135 = icmp ule i32 %100, %add134, !dbg !19476
  br label %lor.end, !dbg !19476

lor.end:                                          ; preds = %lor.rhs, %if.end132
  %103 = phi i1 [ true, %if.end132 ], [ %cmp135, %lor.rhs ]
  %lnot137 = xor i1 %103, true, !dbg !19476
  %lnot139 = xor i1 %lnot137, true, !dbg !19476
  %lnot.ext140 = zext i1 %lnot139 to i32, !dbg !19476
  %conv141 = sext i32 %lnot.ext140 to i64, !dbg !19476
  %tobool142 = icmp ne i64 %conv141, 0, !dbg !19476
  br i1 %tobool142, label %if.then143, label %if.else168, !dbg !19478

if.then143:                                       ; preds = %lor.end
  %104 = load i32, i32* %start, align 4, !dbg !19479
  %105 = load i32, i32* %next, align 4, !dbg !19479
  %cmp144 = icmp ult i32 %104, %105, !dbg !19479
  br i1 %cmp144, label %land.rhs146, label %land.end149, !dbg !19479

land.rhs146:                                      ; preds = %if.then143
  %106 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19479
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %106, i32 0, i32 13, !dbg !19479
  %107 = load i32, i32* %transfer_flags, align 4, !dbg !19479
  %and147 = and i32 %107, 2, !dbg !19479
  %tobool148 = icmp ne i32 %and147, 0, !dbg !19479
  br label %land.end149

land.end149:                                      ; preds = %land.rhs146, %if.then143
  %108 = phi i1 [ false, %if.then143 ], [ %tobool148, %land.rhs146 ], !dbg !19482
  %lnot150 = xor i1 %108, true, !dbg !19479
  %lnot152 = xor i1 %lnot150, true, !dbg !19479
  %lnot.ext153 = zext i1 %lnot152 to i32, !dbg !19479
  %conv154 = sext i32 %lnot.ext153 to i64, !dbg !19479
  %tobool155 = icmp ne i64 %conv154, 0, !dbg !19479
  br i1 %tobool155, label %if.then156, label %if.end157, !dbg !19483

if.then156:                                       ; preds = %land.end149
  br label %do_ASAP, !dbg !19484

if.end157:                                        ; preds = %land.end149
  %109 = load i32, i32* %start, align 4, !dbg !19485
  %110 = load i32, i32* %now2, align 4, !dbg !19485
  %cmp158 = icmp uge i32 %109, %110, !dbg !19485
  %lnot160 = xor i1 %cmp158, true, !dbg !19485
  %lnot162 = xor i1 %lnot160, true, !dbg !19485
  %lnot.ext163 = zext i1 %lnot162 to i32, !dbg !19485
  %conv164 = sext i32 %lnot.ext163 to i64, !dbg !19485
  %tobool165 = icmp ne i64 %conv164, 0, !dbg !19485
  br i1 %tobool165, label %if.then166, label %if.end167, !dbg !19487

if.then166:                                       ; preds = %if.end157
  br label %use_start, !dbg !19488

if.end167:                                        ; preds = %if.end157
  br label %if.end175, !dbg !19489

if.else168:                                       ; preds = %lor.end
  %111 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19490
  %transfer_flags169 = getelementptr inbounds %struct.urb, %struct.urb* %111, i32 0, i32 13, !dbg !19493
  %112 = load i32, i32* %transfer_flags169, align 4, !dbg !19493
  %and170 = and i32 %112, 2, !dbg !19494
  %tobool171 = icmp ne i32 %and170, 0, !dbg !19494
  br i1 %tobool171, label %if.then172, label %if.end173, !dbg !19495

if.then172:                                       ; preds = %if.else168
  br label %do_ASAP, !dbg !19496

if.end173:                                        ; preds = %if.else168
  %113 = load i32, i32* %mod, align 4, !dbg !19497
  store i32 %113, i32* %wrap, align 4, !dbg !19498
  %114 = load i32, i32* %mod, align 4, !dbg !19499
  %115 = load i32, i32* %now2, align 4, !dbg !19500
  %add174 = add i32 %115, %114, !dbg !19500
  store i32 %add174, i32* %now2, align 4, !dbg !19500
  br label %if.end175

if.end175:                                        ; preds = %if.end173, %if.end167
  %116 = load i32, i32* %now2, align 4, !dbg !19501
  %117 = load i32, i32* %start, align 4, !dbg !19502
  %sub176 = sub i32 %116, %117, !dbg !19503
  %118 = load i32, i32* %period, align 4, !dbg !19504
  %add177 = add i32 %sub176, %118, !dbg !19505
  %sub178 = sub i32 %add177, 1, !dbg !19506
  %119 = load i32, i32* %period, align 4, !dbg !19507
  %sub179 = sub i32 0, %119, !dbg !19508
  %and180 = and i32 %sub178, %sub179, !dbg !19509
  store i32 %and180, i32* %skip, align 4, !dbg !19510
  %120 = load i32, i32* %skip, align 4, !dbg !19511
  %121 = load i32, i32* %span, align 4, !dbg !19513
  %cmp181 = icmp uge i32 %120, %121, !dbg !19514
  br i1 %cmp181, label %if.then183, label %if.end188, !dbg !19515

if.then183:                                       ; preds = %if.end175
  %122 = load i32, i32* %span, align 4, !dbg !19516
  %123 = load i32, i32* %period, align 4, !dbg !19518
  %sub184 = sub i32 %122, %123, !dbg !19519
  store i32 %sub184, i32* %skip, align 4, !dbg !19520
  %124 = load i8, i8* %empty, align 1, !dbg !19521
  %tobool185 = trunc i8 %124 to i1, !dbg !19521
  br i1 %tobool185, label %if.then186, label %if.end187, !dbg !19523

if.then186:                                       ; preds = %if.then183
  %125 = load i32, i32* %span, align 4, !dbg !19524
  store i32 %125, i32* %skip, align 4, !dbg !19526
  store i32 1, i32* %status, align 4, !dbg !19527
  %126 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19528
  %127 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !19529
  call void @iso_sched_free(%struct.ehci_iso_stream* %126, %struct.ehci_iso_sched* %127) #11, !dbg !19530
  store %struct.ehci_iso_sched* null, %struct.ehci_iso_sched** %sched, align 8, !dbg !19531
  br label %if.end187, !dbg !19532

if.end187:                                        ; preds = %if.then186, %if.then183
  br label %if.end188, !dbg !19533

if.end188:                                        ; preds = %if.end187, %if.end175
  %128 = load i32, i32* %skip, align 4, !dbg !19534
  %129 = load i32, i32* %period, align 4, !dbg !19535
  %div = udiv i32 %128, %129, !dbg !19536
  %130 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19537
  %error_count = getelementptr inbounds %struct.urb, %struct.urb* %130, i32 0, i32 26, !dbg !19538
  store i32 %div, i32* %error_count, align 4, !dbg !19539
  %131 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !19540
  %tobool189 = icmp ne %struct.ehci_iso_sched* %131, null, !dbg !19540
  br i1 %tobool189, label %if.then190, label %if.end192, !dbg !19542

if.then190:                                       ; preds = %if.end188
  %132 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19543
  %error_count191 = getelementptr inbounds %struct.urb, %struct.urb* %132, i32 0, i32 26, !dbg !19544
  %133 = load i32, i32* %error_count191, align 4, !dbg !19544
  %134 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !19545
  %first_packet = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %134, i32 0, i32 2, !dbg !19546
  store i32 %133, i32* %first_packet, align 4, !dbg !19547
  br label %if.end192, !dbg !19545

if.end192:                                        ; preds = %if.then190, %if.end188
  br label %use_start, !dbg !19548

do_ASAP:                                          ; preds = %if.then172, %if.then156, %if.then115
  call void @llvm.dbg.label(metadata !19549), !dbg !19550
  %135 = load i32, i32* %next, align 4, !dbg !19551
  %136 = load i32, i32* %start, align 4, !dbg !19552
  %137 = load i32, i32* %next, align 4, !dbg !19553
  %sub193 = sub i32 %136, %137, !dbg !19554
  %138 = load i32, i32* %period, align 4, !dbg !19555
  %sub194 = sub i32 %138, 1, !dbg !19556
  %and195 = and i32 %sub193, %sub194, !dbg !19557
  %add196 = add i32 %135, %and195, !dbg !19558
  store i32 %add196, i32* %start, align 4, !dbg !19559
  br label %use_start, !dbg !19560

use_start:                                        ; preds = %do_ASAP, %if.end192, %if.then166
  call void @llvm.dbg.label(metadata !19561), !dbg !19562
  %139 = load i32, i32* %start, align 4, !dbg !19563
  %140 = load i32, i32* %span, align 4, !dbg !19563
  %add197 = add i32 %139, %140, !dbg !19563
  %141 = load i32, i32* %period, align 4, !dbg !19563
  %sub198 = sub i32 %add197, %141, !dbg !19563
  %142 = load i32, i32* %mod, align 4, !dbg !19563
  %143 = load i32, i32* %wrap, align 4, !dbg !19563
  %add199 = add i32 %142, %143, !dbg !19563
  %cmp200 = icmp uge i32 %sub198, %add199, !dbg !19563
  %lnot202 = xor i1 %cmp200, true, !dbg !19563
  %lnot204 = xor i1 %lnot202, true, !dbg !19563
  %lnot.ext205 = zext i1 %lnot204 to i32, !dbg !19563
  %conv206 = sext i32 %lnot.ext205 to i64, !dbg !19563
  %tobool207 = icmp ne i64 %conv206, 0, !dbg !19563
  br i1 %tobool207, label %if.then208, label %if.end209, !dbg !19565

if.then208:                                       ; preds = %use_start
  store i32 -27, i32* %status, align 4, !dbg !19566
  br label %fail, !dbg !19568

if.end209:                                        ; preds = %use_start
  %144 = load i32, i32* %base, align 4, !dbg !19569
  %145 = load i32, i32* %start, align 4, !dbg !19570
  %add210 = add i32 %145, %144, !dbg !19570
  store i32 %add210, i32* %start, align 4, !dbg !19570
  %146 = load i32, i32* %start, align 4, !dbg !19571
  %147 = load i32, i32* %skip, align 4, !dbg !19572
  %add211 = add i32 %146, %147, !dbg !19573
  %148 = load i32, i32* %mod, align 4, !dbg !19574
  %sub212 = sub i32 %148, 1, !dbg !19575
  %and213 = and i32 %add211, %sub212, !dbg !19576
  %149 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19577
  %next_uframe214 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %149, i32 0, i32 6, !dbg !19578
  store i32 %and213, i32* %next_uframe214, align 8, !dbg !19579
  %150 = load i32, i32* %start, align 4, !dbg !19580
  %151 = load i32, i32* %mod, align 4, !dbg !19581
  %sub215 = sub i32 %151, 1, !dbg !19582
  %and216 = and i32 %150, %sub215, !dbg !19583
  %152 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19584
  %start_frame = getelementptr inbounds %struct.urb, %struct.urb* %152, i32 0, i32 23, !dbg !19585
  store i32 %and216, i32* %start_frame, align 8, !dbg !19586
  %153 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19587
  %highspeed217 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %153, i32 0, i32 2, !dbg !19589
  %154 = load i8, i8* %highspeed217, align 1, !dbg !19589
  %tobool218 = icmp ne i8 %154, 0, !dbg !19587
  br i1 %tobool218, label %if.end222, label %if.then219, !dbg !19590

if.then219:                                       ; preds = %if.end209
  %155 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19591
  %start_frame220 = getelementptr inbounds %struct.urb, %struct.urb* %155, i32 0, i32 23, !dbg !19592
  %156 = load i32, i32* %start_frame220, align 8, !dbg !19593
  %shr221 = ashr i32 %156, 3, !dbg !19593
  store i32 %shr221, i32* %start_frame220, align 8, !dbg !19593
  br label %if.end222, !dbg !19591

if.end222:                                        ; preds = %if.then219, %if.end209
  %157 = load i32, i32* %status, align 4, !dbg !19594
  store i32 %157, i32* %retval, align 4, !dbg !19595
  br label %return, !dbg !19595

fail:                                             ; preds = %if.then208, %if.then131, %if.then49, %if.then19
  call void @llvm.dbg.label(metadata !19596), !dbg !19597
  %158 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19598
  %159 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !19599
  call void @iso_sched_free(%struct.ehci_iso_stream* %158, %struct.ehci_iso_sched* %159) #11, !dbg !19600
  %160 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19601
  %hcpriv223 = getelementptr inbounds %struct.urb, %struct.urb* %160, i32 0, i32 2, !dbg !19602
  store i8* null, i8** %hcpriv223, align 8, !dbg !19603
  %161 = load i32, i32* %status, align 4, !dbg !19604
  store i32 %161, i32* %retval, align 4, !dbg !19605
  br label %return, !dbg !19605

return:                                           ; preds = %fail, %if.end222
  %162 = load i32, i32* %retval, align 4, !dbg !19606
  ret i32 %162, !dbg !19606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @itd_link_urb(%struct.ehci_hcd* %ehci, %struct.urb* %urb, i32 %mod, %struct.ehci_iso_stream* %stream) #0 !dbg !19607 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %mod.addr = alloca i32, align 4
  %stream.addr = alloca %struct.ehci_iso_stream*, align 8
  %packet = alloca i32, align 4
  %next_uframe = alloca i32, align 4
  %uframe = alloca i32, align 4
  %frame = alloca i32, align 4
  %iso_sched = alloca %struct.ehci_iso_sched*, align 8
  %itd = alloca %struct.ehci_itd*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ehci_itd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !19610, metadata !DIExpression()), !dbg !19611
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !19612, metadata !DIExpression()), !dbg !19613
  store i32 %mod, i32* %mod.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mod.addr, metadata !19614, metadata !DIExpression()), !dbg !19615
  store %struct.ehci_iso_stream* %stream, %struct.ehci_iso_stream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream.addr, metadata !19616, metadata !DIExpression()), !dbg !19617
  call void @llvm.dbg.declare(metadata i32* %packet, metadata !19618, metadata !DIExpression()), !dbg !19619
  call void @llvm.dbg.declare(metadata i32* %next_uframe, metadata !19620, metadata !DIExpression()), !dbg !19621
  call void @llvm.dbg.declare(metadata i32* %uframe, metadata !19622, metadata !DIExpression()), !dbg !19623
  call void @llvm.dbg.declare(metadata i32* %frame, metadata !19624, metadata !DIExpression()), !dbg !19625
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_sched** %iso_sched, metadata !19626, metadata !DIExpression()), !dbg !19627
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19628
  %hcpriv = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 2, !dbg !19629
  %1 = load i8*, i8** %hcpriv, align 8, !dbg !19629
  %2 = bitcast i8* %1 to %struct.ehci_iso_sched*, !dbg !19628
  store %struct.ehci_iso_sched* %2, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !19627
  call void @llvm.dbg.declare(metadata %struct.ehci_itd** %itd, metadata !19630, metadata !DIExpression()), !dbg !19631
  %3 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19632
  %next_uframe1 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %3, i32 0, i32 6, !dbg !19633
  %4 = load i32, i32* %next_uframe1, align 8, !dbg !19633
  %5 = load i32, i32* %mod.addr, align 4, !dbg !19634
  %sub = sub i32 %5, 1, !dbg !19635
  %and = and i32 %4, %sub, !dbg !19636
  store i32 %and, i32* %next_uframe, align 4, !dbg !19637
  %6 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19638
  %td_list = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %6, i32 0, i32 3, !dbg !19638
  %call = call i32 @list_empty(%struct.list_head* %td_list) #11, !dbg !19638
  %tobool = icmp ne i32 %call, 0, !dbg !19638
  %lnot = xor i1 %tobool, true, !dbg !19638
  %lnot2 = xor i1 %lnot, true, !dbg !19638
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !19638
  %conv = sext i32 %lnot.ext to i64, !dbg !19638
  %tobool3 = icmp ne i64 %conv, 0, !dbg !19638
  br i1 %tobool3, label %if.then, label %if.end, !dbg !19640

if.then:                                          ; preds = %entry
  %7 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19641
  %bandwidth = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %7, i32 0, i32 10, !dbg !19642
  %8 = load i32, i32* %bandwidth, align 4, !dbg !19642
  %9 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19643
  %call4 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %9) #11, !dbg !19644
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call4, i32 0, i32 0, !dbg !19645
  %bandwidth_allocated = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 13, !dbg !19646
  %10 = load i32, i32* %bandwidth_allocated, align 8, !dbg !19647
  %add = add i32 %10, %8, !dbg !19647
  store i32 %add, i32* %bandwidth_allocated, align 8, !dbg !19647
  br label %if.end, !dbg !19644

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19648
  %call5 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %11) #11, !dbg !19650
  %self6 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call5, i32 0, i32 0, !dbg !19651
  %bandwidth_isoc_reqs = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self6, i32 0, i32 15, !dbg !19652
  %12 = load i32, i32* %bandwidth_isoc_reqs, align 8, !dbg !19652
  %cmp = icmp eq i32 %12, 0, !dbg !19653
  br i1 %cmp, label %if.then8, label %if.end13, !dbg !19654

if.then8:                                         ; preds = %if.end
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19655
  %amd_pll_fix = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %13, i32 0, i32 58, !dbg !19658
  %bf.load = load i16, i16* %amd_pll_fix, align 4, !dbg !19658
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !19658
  %bf.clear = and i16 %bf.lshr, 1, !dbg !19658
  %bf.cast = zext i16 %bf.clear to i32, !dbg !19658
  %cmp9 = icmp eq i32 %bf.cast, 1, !dbg !19659
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !19660

if.then11:                                        ; preds = %if.then8
  call void @usb_amd_quirk_pll_disable() #11, !dbg !19661
  br label %if.end12, !dbg !19661

if.end12:                                         ; preds = %if.then11, %if.then8
  br label %if.end13, !dbg !19662

if.end13:                                         ; preds = %if.end12, %if.end
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19663
  %call14 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %14) #11, !dbg !19664
  %self15 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call14, i32 0, i32 0, !dbg !19665
  %bandwidth_isoc_reqs16 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self15, i32 0, i32 15, !dbg !19666
  %15 = load i32, i32* %bandwidth_isoc_reqs16, align 8, !dbg !19667
  %inc = add i32 %15, 1, !dbg !19667
  store i32 %inc, i32* %bandwidth_isoc_reqs16, align 8, !dbg !19667
  %16 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !19668
  %first_packet = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %16, i32 0, i32 2, !dbg !19670
  %17 = load i32, i32* %first_packet, align 4, !dbg !19670
  store i32 %17, i32* %packet, align 4, !dbg !19671
  store %struct.ehci_itd* null, %struct.ehci_itd** %itd, align 8, !dbg !19672
  br label %for.cond, !dbg !19673

for.cond:                                         ; preds = %if.end43, %if.end13
  %18 = load i32, i32* %packet, align 4, !dbg !19674
  %19 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19676
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %19, i32 0, i32 24, !dbg !19677
  %20 = load i32, i32* %number_of_packets, align 4, !dbg !19677
  %cmp17 = icmp slt i32 %18, %20, !dbg !19678
  br i1 %cmp17, label %for.body, label %for.end, !dbg !19679

for.body:                                         ; preds = %for.cond
  %21 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19680
  %cmp19 = icmp eq %struct.ehci_itd* %21, null, !dbg !19683
  br i1 %cmp19, label %if.then21, label %if.end26, !dbg !19684

if.then21:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19685, metadata !DIExpression()), !dbg !19688
  %22 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !19688
  %td_list22 = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %22, i32 0, i32 0, !dbg !19688
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %td_list22, i32 0, i32 0, !dbg !19688
  %23 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !19688
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !19688
  store i8* %24, i8** %__mptr, align 8, !dbg !19688
  br label %do.body, !dbg !19688

do.body:                                          ; preds = %if.then21
  br label %do.end, !dbg !19689

do.end:                                           ; preds = %do.body
  %25 = load i8*, i8** %__mptr, align 8, !dbg !19688
  %add.ptr = getelementptr i8, i8* %25, i64 -128, !dbg !19688
  %26 = bitcast i8* %add.ptr to %struct.ehci_itd*, !dbg !19688
  store %struct.ehci_itd* %26, %struct.ehci_itd** %tmp, align 8, !dbg !19689
  %27 = load %struct.ehci_itd*, %struct.ehci_itd** %tmp, align 8, !dbg !19688
  store %struct.ehci_itd* %27, %struct.ehci_itd** %itd, align 8, !dbg !19691
  %28 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19692
  %itd_list = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %28, i32 0, i32 8, !dbg !19693
  %29 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19694
  %td_list23 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %29, i32 0, i32 3, !dbg !19695
  call void @list_move_tail(%struct.list_head* %itd_list, %struct.list_head* %td_list23) #11, !dbg !19696
  %30 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19697
  %31 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19698
  %stream24 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %31, i32 0, i32 7, !dbg !19699
  store %struct.ehci_iso_stream* %30, %struct.ehci_iso_stream** %stream24, align 8, !dbg !19700
  %32 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19701
  %33 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19702
  %urb25 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %33, i32 0, i32 6, !dbg !19703
  store %struct.urb* %32, %struct.urb** %urb25, align 16, !dbg !19704
  %34 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19705
  %35 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19706
  %36 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19707
  call void @itd_init(%struct.ehci_hcd* %34, %struct.ehci_iso_stream* %35, %struct.ehci_itd* %36) #11, !dbg !19708
  br label %if.end26, !dbg !19709

if.end26:                                         ; preds = %do.end, %for.body
  %37 = load i32, i32* %next_uframe, align 4, !dbg !19710
  %and27 = and i32 %37, 7, !dbg !19711
  store i32 %and27, i32* %uframe, align 4, !dbg !19712
  %38 = load i32, i32* %next_uframe, align 4, !dbg !19713
  %shr = lshr i32 %38, 3, !dbg !19714
  store i32 %shr, i32* %frame, align 4, !dbg !19715
  %39 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19716
  %40 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19717
  %41 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !19718
  %42 = load i32, i32* %packet, align 4, !dbg !19719
  %43 = load i32, i32* %uframe, align 4, !dbg !19720
  %conv28 = trunc i32 %43 to i16, !dbg !19720
  call void @itd_patch(%struct.ehci_hcd* %39, %struct.ehci_itd* %40, %struct.ehci_iso_sched* %41, i32 %42, i16 zeroext %conv28) #11, !dbg !19721
  %44 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19722
  %uperiod = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %44, i32 0, i32 8, !dbg !19723
  %45 = load i16, i16* %uperiod, align 8, !dbg !19723
  %conv29 = zext i16 %45 to i32, !dbg !19722
  %46 = load i32, i32* %next_uframe, align 4, !dbg !19724
  %add30 = add i32 %46, %conv29, !dbg !19724
  store i32 %add30, i32* %next_uframe, align 4, !dbg !19724
  %47 = load i32, i32* %mod.addr, align 4, !dbg !19725
  %sub31 = sub i32 %47, 1, !dbg !19726
  %48 = load i32, i32* %next_uframe, align 4, !dbg !19727
  %and32 = and i32 %48, %sub31, !dbg !19727
  store i32 %and32, i32* %next_uframe, align 4, !dbg !19727
  %49 = load i32, i32* %packet, align 4, !dbg !19728
  %inc33 = add i32 %49, 1, !dbg !19728
  store i32 %inc33, i32* %packet, align 4, !dbg !19728
  %50 = load i32, i32* %next_uframe, align 4, !dbg !19729
  %shr34 = lshr i32 %50, 3, !dbg !19731
  %51 = load i32, i32* %frame, align 4, !dbg !19732
  %cmp35 = icmp ne i32 %shr34, %51, !dbg !19733
  br i1 %cmp35, label %if.then40, label %lor.lhs.false, !dbg !19734

lor.lhs.false:                                    ; preds = %if.end26
  %52 = load i32, i32* %packet, align 4, !dbg !19735
  %53 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19736
  %number_of_packets37 = getelementptr inbounds %struct.urb, %struct.urb* %53, i32 0, i32 24, !dbg !19737
  %54 = load i32, i32* %number_of_packets37, align 4, !dbg !19737
  %cmp38 = icmp eq i32 %52, %54, !dbg !19738
  br i1 %cmp38, label %if.then40, label %if.end43, !dbg !19739

if.then40:                                        ; preds = %lor.lhs.false, %if.end26
  %55 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19740
  %56 = load i32, i32* %frame, align 4, !dbg !19742
  %57 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19743
  %periodic_size = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %57, i32 0, i32 23, !dbg !19744
  %58 = load i32, i32* %periodic_size, align 8, !dbg !19744
  %sub41 = sub i32 %58, 1, !dbg !19745
  %and42 = and i32 %56, %sub41, !dbg !19746
  %59 = load %struct.ehci_itd*, %struct.ehci_itd** %itd, align 8, !dbg !19747
  call void @itd_link(%struct.ehci_hcd* %55, i32 %and42, %struct.ehci_itd* %59) #11, !dbg !19748
  store %struct.ehci_itd* null, %struct.ehci_itd** %itd, align 8, !dbg !19749
  br label %if.end43, !dbg !19750

if.end43:                                         ; preds = %if.then40, %lor.lhs.false
  br label %for.cond, !dbg !19751, !llvm.loop !19752

for.end:                                          ; preds = %for.cond
  %60 = load i32, i32* %next_uframe, align 4, !dbg !19754
  %61 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19755
  %next_uframe44 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %61, i32 0, i32 6, !dbg !19756
  store i32 %60, i32* %next_uframe44, align 8, !dbg !19757
  %62 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19758
  %63 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !19759
  call void @iso_sched_free(%struct.ehci_iso_stream* %62, %struct.ehci_iso_sched* %63) #11, !dbg !19760
  %64 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19761
  %65 = bitcast %struct.ehci_iso_stream* %64 to i8*, !dbg !19761
  %66 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19762
  %hcpriv45 = getelementptr inbounds %struct.urb, %struct.urb* %66, i32 0, i32 2, !dbg !19763
  store i8* %65, i8** %hcpriv45, align 8, !dbg !19764
  %67 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19765
  %isoc_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %67, i32 0, i32 36, !dbg !19766
  %68 = load i32, i32* %isoc_count, align 4, !dbg !19767
  %inc46 = add i32 %68, 1, !dbg !19767
  store i32 %inc46, i32* %isoc_count, align 4, !dbg !19767
  %69 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19768
  call void @enable_periodic(%struct.ehci_hcd* %69) #11, !dbg !19769
  ret void, !dbg !19770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ehci_iso_stream* @iso_stream_alloc(i32 %mem_flags) #0 !dbg !19771 {
entry:
  %mem_flags.addr = alloca i32, align 4
  %stream = alloca %struct.ehci_iso_stream*, align 8
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !19774, metadata !DIExpression()), !dbg !19775
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream, metadata !19776, metadata !DIExpression()), !dbg !19777
  %0 = load i32, i32* %mem_flags.addr, align 4, !dbg !19778
  %call = call i8* @kzalloc(i64 128, i32 %0) #11, !dbg !19779
  %1 = bitcast i8* %call to %struct.ehci_iso_stream*, !dbg !19779
  store %struct.ehci_iso_stream* %1, %struct.ehci_iso_stream** %stream, align 8, !dbg !19780
  %2 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !19781
  %cmp = icmp ne %struct.ehci_iso_stream* %2, null, !dbg !19781
  %lnot = xor i1 %cmp, true, !dbg !19781
  %lnot1 = xor i1 %lnot, true, !dbg !19781
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !19781
  %conv = sext i32 %lnot.ext to i64, !dbg !19781
  %tobool = icmp ne i64 %conv, 0, !dbg !19781
  br i1 %tobool, label %if.then, label %if.end, !dbg !19783

if.then:                                          ; preds = %entry
  %3 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !19784
  %td_list = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %3, i32 0, i32 3, !dbg !19786
  call void @INIT_LIST_HEAD(%struct.list_head* %td_list) #11, !dbg !19787
  %4 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !19788
  %free_list = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %4, i32 0, i32 4, !dbg !19789
  call void @INIT_LIST_HEAD(%struct.list_head* %free_list) #11, !dbg !19790
  %5 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !19791
  %next_uframe = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %5, i32 0, i32 6, !dbg !19792
  store i32 29999, i32* %next_uframe, align 8, !dbg !19793
  %6 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !19794
  %ps = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %6, i32 0, i32 5, !dbg !19795
  %phase = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 6, !dbg !19796
  store i16 29999, i16* %phase, align 2, !dbg !19797
  br label %if.end, !dbg !19798

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream, align 8, !dbg !19799
  ret %struct.ehci_iso_stream* %7, !dbg !19800
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @iso_stream_init(%struct.ehci_hcd* %ehci, %struct.ehci_iso_stream* %stream, %struct.urb* %urb) #0 !dbg !6268 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %stream.addr = alloca %struct.ehci_iso_stream*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %dev = alloca %struct.usb_device*, align 8
  %buf1 = alloca i32, align 4
  %epnum = alloca i32, align 4
  %maxp = alloca i32, align 4
  %is_input = alloca i32, align 4
  %tmp = alloca i32, align 4
  %multi = alloca i32, align 4
  %__UNIQUE_ID___x352 = alloca i32, align 4
  %__UNIQUE_ID___y353 = alloca i32, align 4
  %tmp27 = alloca i32, align 4
  %__UNIQUE_ID___x354 = alloca i32, align 4
  %__UNIQUE_ID___y355 = alloca i32, align 4
  %tmp31 = alloca i32, align 4
  %addr = alloca i32, align 4
  %think_time = alloca i32, align 4
  %hs_transfers = alloca i32, align 4
  %__UNIQUE_ID___x356 = alloca i32, align 4
  %__UNIQUE_ID___y357 = alloca i32, align 4
  %tmp89 = alloca i32, align 4
  %tmp98 = alloca i32, align 4
  %__UNIQUE_ID___x358 = alloca i32, align 4
  %__UNIQUE_ID___y359 = alloca i32, align 4
  %tmp126 = alloca i32, align 4
  %__UNIQUE_ID___x360 = alloca i32, align 4
  %__UNIQUE_ID___y361 = alloca i32, align 4
  %tmp134 = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !19801, metadata !DIExpression()), !dbg !19802
  store %struct.ehci_iso_stream* %stream, %struct.ehci_iso_stream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream.addr, metadata !19803, metadata !DIExpression()), !dbg !19804
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !19805, metadata !DIExpression()), !dbg !19806
  call void @llvm.dbg.declare(metadata %struct.usb_device** %dev, metadata !19807, metadata !DIExpression()), !dbg !19808
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19809
  %dev1 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 8, !dbg !19810
  %1 = load %struct.usb_device*, %struct.usb_device** %dev1, align 8, !dbg !19810
  store %struct.usb_device* %1, %struct.usb_device** %dev, align 8, !dbg !19808
  call void @llvm.dbg.declare(metadata i32* %buf1, metadata !19811, metadata !DIExpression()), !dbg !19812
  call void @llvm.dbg.declare(metadata i32* %epnum, metadata !19813, metadata !DIExpression()), !dbg !19814
  call void @llvm.dbg.declare(metadata i32* %maxp, metadata !19815, metadata !DIExpression()), !dbg !19816
  call void @llvm.dbg.declare(metadata i32* %is_input, metadata !19817, metadata !DIExpression()), !dbg !19818
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !19819, metadata !DIExpression()), !dbg !19820
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19821
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 10, !dbg !19821
  %3 = load i32, i32* %pipe, align 8, !dbg !19821
  %shr = lshr i32 %3, 15, !dbg !19821
  %and = and i32 %shr, 15, !dbg !19821
  store i32 %and, i32* %epnum, align 4, !dbg !19822
  %4 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19823
  %pipe2 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 10, !dbg !19823
  %5 = load i32, i32* %pipe2, align 8, !dbg !19823
  %and3 = and i32 %5, 128, !dbg !19823
  %tobool = icmp ne i32 %and3, 0, !dbg !19823
  %6 = zext i1 %tobool to i64, !dbg !19823
  %cond = select i1 %tobool, i32 128, i32 0, !dbg !19823
  store i32 %cond, i32* %is_input, align 4, !dbg !19824
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19825
  %ep = getelementptr inbounds %struct.urb, %struct.urb* %7, i32 0, i32 9, !dbg !19826
  %8 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep, align 8, !dbg !19826
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %8, i32 0, i32 0, !dbg !19827
  %call = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc) #11, !dbg !19828
  store i32 %call, i32* %maxp, align 4, !dbg !19829
  %9 = load i32, i32* %is_input, align 4, !dbg !19830
  %tobool4 = icmp ne i32 %9, 0, !dbg !19830
  %10 = zext i1 %tobool4 to i64, !dbg !19830
  %cond5 = select i1 %tobool4, i32 2048, i32 0, !dbg !19830
  store i32 %cond5, i32* %buf1, align 4, !dbg !19831
  %11 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !19832
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %11, i32 0, i32 4, !dbg !19834
  %12 = load i32, i32* %speed, align 4, !dbg !19834
  %cmp = icmp eq i32 %12, 3, !dbg !19835
  br i1 %cmp, label %if.then, label %if.else, !dbg !19836

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %multi, metadata !19837, metadata !DIExpression()), !dbg !19839
  %13 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19840
  %ep6 = getelementptr inbounds %struct.urb, %struct.urb* %13, i32 0, i32 9, !dbg !19841
  %14 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep6, align 8, !dbg !19841
  %desc7 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %14, i32 0, i32 0, !dbg !19842
  %call8 = call i32 @usb_endpoint_maxp_mult(%struct.usb_endpoint_descriptor* %desc7) #11, !dbg !19843
  store i32 %call8, i32* %multi, align 4, !dbg !19839
  %15 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19844
  %highspeed = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %15, i32 0, i32 2, !dbg !19845
  store i8 1, i8* %highspeed, align 1, !dbg !19846
  %16 = load i32, i32* %maxp, align 4, !dbg !19847
  %17 = load i32, i32* %buf1, align 4, !dbg !19848
  %or = or i32 %17, %16, !dbg !19848
  store i32 %or, i32* %buf1, align 4, !dbg !19848
  %18 = load i32, i32* %multi, align 4, !dbg !19849
  %19 = load i32, i32* %maxp, align 4, !dbg !19850
  %mul = mul i32 %19, %18, !dbg !19850
  store i32 %mul, i32* %maxp, align 4, !dbg !19850
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19851
  %21 = load i32, i32* %epnum, align 4, !dbg !19852
  %shl = shl i32 %21, 8, !dbg !19853
  %22 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !19854
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %22, i32 0, i32 0, !dbg !19855
  %23 = load i32, i32* %devnum, align 8, !dbg !19855
  %or9 = or i32 %shl, %23, !dbg !19856
  %call10 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %20, i32 %or9) #11, !dbg !19857
  %24 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19858
  %buf0 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %24, i32 0, i32 11, !dbg !19859
  store i32 %call10, i32* %buf0, align 8, !dbg !19860
  %25 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19861
  %26 = load i32, i32* %buf1, align 4, !dbg !19862
  %call11 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %25, i32 %26) #11, !dbg !19863
  %27 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19864
  %buf112 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %27, i32 0, i32 12, !dbg !19865
  store i32 %call11, i32* %buf112, align 4, !dbg !19866
  %28 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !19867
  %29 = load i32, i32* %multi, align 4, !dbg !19868
  %call13 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %28, i32 %29) #11, !dbg !19869
  %30 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19870
  %buf2 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %30, i32 0, i32 13, !dbg !19871
  store i32 %call13, i32* %buf2, align 8, !dbg !19872
  %31 = load i32, i32* %maxp, align 4, !dbg !19873
  %mul14 = mul i32 56, %31, !dbg !19873
  %div = udiv i32 %mul14, 6, !dbg !19873
  %add = add i32 3, %div, !dbg !19873
  %conv = zext i32 %add to i64, !dbg !19873
  %mul15 = mul i64 2083, %conv, !dbg !19873
  %add16 = add i64 633232, %mul15, !dbg !19873
  %div17 = udiv i64 %add16, 1000, !dbg !19873
  %add18 = add i64 %div17, 5, !dbg !19873
  %add19 = add i64 %add18, 1000, !dbg !19873
  %sub = sub i64 %add19, 1, !dbg !19873
  %div20 = udiv i64 %sub, 1000, !dbg !19873
  %conv21 = trunc i64 %div20 to i8, !dbg !19873
  %32 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19874
  %ps = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %32, i32 0, i32 5, !dbg !19875
  %usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 9, !dbg !19876
  store i8 %conv21, i8* %usecs, align 2, !dbg !19877
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x352, metadata !19878, metadata !DIExpression()), !dbg !19880
  store i32 64, i32* %__UNIQUE_ID___x352, align 4, !dbg !19880
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y353, metadata !19881, metadata !DIExpression()), !dbg !19880
  %33 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19880
  %ep22 = getelementptr inbounds %struct.urb, %struct.urb* %33, i32 0, i32 9, !dbg !19880
  %34 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep22, align 8, !dbg !19880
  %desc23 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %34, i32 0, i32 0, !dbg !19880
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc23, i32 0, i32 5, !dbg !19880
  %35 = load i8, i8* %bInterval, align 2, !dbg !19880
  %conv24 = zext i8 %35 to i32, !dbg !19880
  %sub25 = sub i32 %conv24, 1, !dbg !19880
  %shl26 = shl i32 1, %sub25, !dbg !19880
  store i32 %shl26, i32* %__UNIQUE_ID___y353, align 4, !dbg !19880
  %36 = load i32, i32* %__UNIQUE_ID___x352, align 4, !dbg !19880
  %37 = load i32, i32* %__UNIQUE_ID___y353, align 4, !dbg !19880
  %cmp28 = icmp ult i32 %36, %37, !dbg !19880
  br i1 %cmp28, label %cond.true, label %cond.false, !dbg !19880

cond.true:                                        ; preds = %if.then
  %38 = load i32, i32* %__UNIQUE_ID___x352, align 4, !dbg !19880
  br label %cond.end, !dbg !19880

cond.false:                                       ; preds = %if.then
  %39 = load i32, i32* %__UNIQUE_ID___y353, align 4, !dbg !19880
  br label %cond.end, !dbg !19880

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond30 = phi i32 [ %38, %cond.true ], [ %39, %cond.false ], !dbg !19880
  store i32 %cond30, i32* %tmp27, align 4, !dbg !19880
  %40 = load i32, i32* %tmp27, align 4, !dbg !19880
  store i32 %40, i32* %tmp, align 4, !dbg !19882
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x354, metadata !19883, metadata !DIExpression()), !dbg !19885
  %41 = load i32, i32* %tmp, align 4, !dbg !19885
  store i32 %41, i32* %__UNIQUE_ID___x354, align 4, !dbg !19885
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y355, metadata !19886, metadata !DIExpression()), !dbg !19885
  %42 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19885
  %interval = getelementptr inbounds %struct.urb, %struct.urb* %42, i32 0, i32 25, !dbg !19885
  %43 = load i32, i32* %interval, align 8, !dbg !19885
  store i32 %43, i32* %__UNIQUE_ID___y355, align 4, !dbg !19885
  %44 = load i32, i32* %__UNIQUE_ID___x354, align 4, !dbg !19885
  %45 = load i32, i32* %__UNIQUE_ID___y355, align 4, !dbg !19885
  %cmp32 = icmp ult i32 %44, %45, !dbg !19885
  br i1 %cmp32, label %cond.true34, label %cond.false35, !dbg !19885

cond.true34:                                      ; preds = %cond.end
  %46 = load i32, i32* %__UNIQUE_ID___x354, align 4, !dbg !19885
  br label %cond.end36, !dbg !19885

cond.false35:                                     ; preds = %cond.end
  %47 = load i32, i32* %__UNIQUE_ID___y355, align 4, !dbg !19885
  br label %cond.end36, !dbg !19885

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond37 = phi i32 [ %46, %cond.true34 ], [ %47, %cond.false35 ], !dbg !19885
  store i32 %cond37, i32* %tmp31, align 4, !dbg !19885
  %48 = load i32, i32* %tmp31, align 4, !dbg !19885
  %conv38 = trunc i32 %48 to i8, !dbg !19887
  %49 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19888
  %ps39 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %49, i32 0, i32 5, !dbg !19889
  %bw_uperiod = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps39, i32 0, i32 11, !dbg !19890
  store i8 %conv38, i8* %bw_uperiod, align 4, !dbg !19891
  %50 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19892
  %interval40 = getelementptr inbounds %struct.urb, %struct.urb* %50, i32 0, i32 25, !dbg !19893
  %51 = load i32, i32* %interval40, align 8, !dbg !19893
  %conv41 = trunc i32 %51 to i16, !dbg !19892
  %52 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19894
  %uperiod = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %52, i32 0, i32 8, !dbg !19895
  store i16 %conv41, i16* %uperiod, align 8, !dbg !19896
  %53 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !19897
  %interval42 = getelementptr inbounds %struct.urb, %struct.urb* %53, i32 0, i32 25, !dbg !19898
  %54 = load i32, i32* %interval42, align 8, !dbg !19898
  %shr43 = ashr i32 %54, 3, !dbg !19899
  %conv44 = trunc i32 %shr43 to i16, !dbg !19897
  %55 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19900
  %ps45 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %55, i32 0, i32 5, !dbg !19901
  %period = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps45, i32 0, i32 5, !dbg !19902
  store i16 %conv44, i16* %period, align 4, !dbg !19903
  %56 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19904
  %ps46 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %56, i32 0, i32 5, !dbg !19905
  %usecs47 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps46, i32 0, i32 9, !dbg !19906
  %57 = load i8, i8* %usecs47, align 2, !dbg !19906
  %conv48 = zext i8 %57 to i32, !dbg !19904
  %mul49 = mul i32 %conv48, 8, !dbg !19907
  %58 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19908
  %ps50 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %58, i32 0, i32 5, !dbg !19909
  %bw_uperiod51 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps50, i32 0, i32 11, !dbg !19910
  %59 = load i8, i8* %bw_uperiod51, align 4, !dbg !19910
  %conv52 = zext i8 %59 to i32, !dbg !19908
  %div53 = sdiv i32 %mul49, %conv52, !dbg !19911
  %60 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19912
  %bandwidth = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %60, i32 0, i32 10, !dbg !19913
  store i32 %div53, i32* %bandwidth, align 4, !dbg !19914
  br label %if.end171, !dbg !19915

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %addr, metadata !19916, metadata !DIExpression()), !dbg !19918
  call void @llvm.dbg.declare(metadata i32* %think_time, metadata !19919, metadata !DIExpression()), !dbg !19920
  call void @llvm.dbg.declare(metadata i32* %hs_transfers, metadata !19921, metadata !DIExpression()), !dbg !19922
  %61 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !19923
  %ttport = getelementptr inbounds %struct.usb_device, %struct.usb_device* %61, i32 0, i32 8, !dbg !19924
  %62 = load i32, i32* %ttport, align 8, !dbg !19924
  %shl54 = shl i32 %62, 24, !dbg !19925
  store i32 %shl54, i32* %addr, align 4, !dbg !19926
  %63 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !19927
  %tt = getelementptr inbounds %struct.usb_device, %struct.usb_device* %63, i32 0, i32 7, !dbg !19929
  %64 = load %struct.usb_tt*, %struct.usb_tt** %tt, align 8, !dbg !19929
  %hub = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %64, i32 0, i32 0, !dbg !19930
  %65 = load %struct.usb_device*, %struct.usb_device** %hub, align 8, !dbg !19930
  %devnum55 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %65, i32 0, i32 0, !dbg !19931
  %66 = load i32, i32* %devnum55, align 8, !dbg !19931
  %shl56 = shl i32 %66, 16, !dbg !19932
  %67 = load i32, i32* %addr, align 4, !dbg !19933
  %or57 = or i32 %67, %shl56, !dbg !19933
  store i32 %or57, i32* %addr, align 4, !dbg !19933
  %68 = load i32, i32* %epnum, align 4, !dbg !19934
  %shl58 = shl i32 %68, 8, !dbg !19935
  %69 = load i32, i32* %addr, align 4, !dbg !19936
  %or59 = or i32 %69, %shl58, !dbg !19936
  store i32 %or59, i32* %addr, align 4, !dbg !19936
  %70 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !19937
  %devnum60 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %70, i32 0, i32 0, !dbg !19938
  %71 = load i32, i32* %devnum60, align 8, !dbg !19938
  %72 = load i32, i32* %addr, align 4, !dbg !19939
  %or61 = or i32 %72, %71, !dbg !19939
  store i32 %or61, i32* %addr, align 4, !dbg !19939
  %73 = load i32, i32* %maxp, align 4, !dbg !19940
  %mul62 = mul i32 56, %73, !dbg !19940
  %div63 = udiv i32 %mul62, 6, !dbg !19940
  %add64 = add i32 3, %div63, !dbg !19940
  %conv65 = zext i32 %add64 to i64, !dbg !19940
  %mul66 = mul i64 2083, %conv65, !dbg !19940
  %add67 = add i64 633232, %mul66, !dbg !19940
  %div68 = udiv i64 %add67, 1000, !dbg !19940
  %add69 = add i64 %div68, 5, !dbg !19940
  %add70 = add i64 %add69, 1000, !dbg !19940
  %sub71 = sub i64 %add70, 1, !dbg !19940
  %div72 = udiv i64 %sub71, 1000, !dbg !19940
  %conv73 = trunc i64 %div72 to i8, !dbg !19940
  %74 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19941
  %ps74 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %74, i32 0, i32 5, !dbg !19942
  %usecs75 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps74, i32 0, i32 9, !dbg !19943
  store i8 %conv73, i8* %usecs75, align 2, !dbg !19944
  %75 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !19945
  %tt76 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %75, i32 0, i32 7, !dbg !19946
  %76 = load %struct.usb_tt*, %struct.usb_tt** %tt76, align 8, !dbg !19946
  %think_time77 = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %76, i32 0, i32 2, !dbg !19947
  %77 = load i32, i32* %think_time77, align 4, !dbg !19947
  store i32 %77, i32* %think_time, align 4, !dbg !19948
  %78 = load i32, i32* %think_time, align 4, !dbg !19949
  %conv78 = sext i32 %78 to i64, !dbg !19949
  %79 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !19949
  %speed79 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %79, i32 0, i32 4, !dbg !19949
  %80 = load i32, i32* %speed79, align 4, !dbg !19949
  %81 = load i32, i32* %is_input, align 4, !dbg !19949
  %82 = load i32, i32* %maxp, align 4, !dbg !19949
  %call80 = call i64 @usb_calc_bus_time(i32 %80, i32 %81, i32 1, i32 %82) #11, !dbg !19949
  %add81 = add i64 %conv78, %call80, !dbg !19949
  %add82 = add i64 %add81, 1000, !dbg !19949
  %sub83 = sub i64 %add82, 1, !dbg !19949
  %div84 = sdiv i64 %sub83, 1000, !dbg !19949
  %conv85 = trunc i64 %div84 to i16, !dbg !19949
  %83 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19950
  %ps86 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %83, i32 0, i32 5, !dbg !19951
  %tt_usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps86, i32 0, i32 3, !dbg !19952
  store i16 %conv85, i16* %tt_usecs, align 8, !dbg !19953
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x356, metadata !19954, metadata !DIExpression()), !dbg !19956
  store i32 1, i32* %__UNIQUE_ID___x356, align 4, !dbg !19956
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y357, metadata !19957, metadata !DIExpression()), !dbg !19956
  %84 = load i32, i32* %maxp, align 4, !dbg !19956
  %add87 = add i32 %84, 187, !dbg !19956
  %div88 = udiv i32 %add87, 188, !dbg !19956
  store i32 %div88, i32* %__UNIQUE_ID___y357, align 4, !dbg !19956
  %85 = load i32, i32* %__UNIQUE_ID___x356, align 4, !dbg !19956
  %86 = load i32, i32* %__UNIQUE_ID___y357, align 4, !dbg !19956
  %cmp90 = icmp ugt i32 %85, %86, !dbg !19956
  br i1 %cmp90, label %cond.true92, label %cond.false93, !dbg !19956

cond.true92:                                      ; preds = %if.else
  %87 = load i32, i32* %__UNIQUE_ID___x356, align 4, !dbg !19956
  br label %cond.end94, !dbg !19956

cond.false93:                                     ; preds = %if.else
  %88 = load i32, i32* %__UNIQUE_ID___y357, align 4, !dbg !19956
  br label %cond.end94, !dbg !19956

cond.end94:                                       ; preds = %cond.false93, %cond.true92
  %cond95 = phi i32 [ %87, %cond.true92 ], [ %88, %cond.false93 ], !dbg !19956
  store i32 %cond95, i32* %tmp89, align 4, !dbg !19956
  %89 = load i32, i32* %tmp89, align 4, !dbg !19956
  store i32 %89, i32* %hs_transfers, align 4, !dbg !19958
  %90 = load i32, i32* %is_input, align 4, !dbg !19959
  %tobool96 = icmp ne i32 %90, 0, !dbg !19959
  br i1 %tobool96, label %if.then97, label %if.else115, !dbg !19961

if.then97:                                        ; preds = %cond.end94
  call void @llvm.dbg.declare(metadata i32* %tmp98, metadata !19962, metadata !DIExpression()), !dbg !19964
  %91 = load i32, i32* %addr, align 4, !dbg !19965
  %or99 = or i32 %91, -2147483648, !dbg !19965
  store i32 %or99, i32* %addr, align 4, !dbg !19965
  %92 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19966
  %ps100 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %92, i32 0, i32 5, !dbg !19967
  %usecs101 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps100, i32 0, i32 9, !dbg !19968
  %93 = load i8, i8* %usecs101, align 2, !dbg !19968
  %94 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19969
  %ps102 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %94, i32 0, i32 5, !dbg !19970
  %c_usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps102, i32 0, i32 10, !dbg !19971
  store i8 %93, i8* %c_usecs, align 1, !dbg !19972
  %95 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19973
  %ps103 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %95, i32 0, i32 5, !dbg !19974
  %usecs104 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps103, i32 0, i32 9, !dbg !19975
  store i8 1, i8* %usecs104, align 2, !dbg !19976
  %96 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19977
  %ps105 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %96, i32 0, i32 5, !dbg !19978
  %cs_mask = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps105, i32 0, i32 4, !dbg !19979
  store i16 1, i16* %cs_mask, align 2, !dbg !19980
  %97 = load i32, i32* %hs_transfers, align 4, !dbg !19981
  %add106 = add i32 %97, 2, !dbg !19982
  %shl107 = shl i32 1, %add106, !dbg !19983
  %sub108 = sub i32 %shl107, 1, !dbg !19984
  store i32 %sub108, i32* %tmp98, align 4, !dbg !19985
  %98 = load i32, i32* %tmp98, align 4, !dbg !19986
  %shl109 = shl i32 %98, 10, !dbg !19987
  %99 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19988
  %ps110 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %99, i32 0, i32 5, !dbg !19989
  %cs_mask111 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps110, i32 0, i32 4, !dbg !19990
  %100 = load i16, i16* %cs_mask111, align 2, !dbg !19991
  %conv112 = zext i16 %100 to i32, !dbg !19991
  %or113 = or i32 %conv112, %shl109, !dbg !19991
  %conv114 = trunc i32 %or113 to i16, !dbg !19991
  store i16 %conv114, i16* %cs_mask111, align 2, !dbg !19991
  br label %if.end, !dbg !19992

if.else115:                                       ; preds = %cond.end94
  %101 = load i32, i32* %hs_transfers, align 4, !dbg !19993
  %sub116 = sub i32 %101, 1, !dbg !19994
  %idxprom = sext i32 %sub116 to i64, !dbg !19995
  %arrayidx = getelementptr [6 x i8], [6 x i8]* @iso_stream_init.smask_out, i64 0, i64 %idxprom, !dbg !19995
  %102 = load i8, i8* %arrayidx, align 1, !dbg !19995
  %conv117 = zext i8 %102 to i16, !dbg !19995
  %103 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !19996
  %ps118 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %103, i32 0, i32 5, !dbg !19997
  %cs_mask119 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps118, i32 0, i32 4, !dbg !19998
  store i16 %conv117, i16* %cs_mask119, align 2, !dbg !19999
  br label %if.end

if.end:                                           ; preds = %if.else115, %if.then97
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x358, metadata !20000, metadata !DIExpression()), !dbg !20002
  store i32 8, i32* %__UNIQUE_ID___x358, align 4, !dbg !20002
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y359, metadata !20003, metadata !DIExpression()), !dbg !20002
  %104 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20002
  %ep120 = getelementptr inbounds %struct.urb, %struct.urb* %104, i32 0, i32 9, !dbg !20002
  %105 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep120, align 8, !dbg !20002
  %desc121 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %105, i32 0, i32 0, !dbg !20002
  %bInterval122 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc121, i32 0, i32 5, !dbg !20002
  %106 = load i8, i8* %bInterval122, align 2, !dbg !20002
  %conv123 = zext i8 %106 to i32, !dbg !20002
  %sub124 = sub i32 %conv123, 1, !dbg !20002
  %shl125 = shl i32 1, %sub124, !dbg !20002
  store i32 %shl125, i32* %__UNIQUE_ID___y359, align 4, !dbg !20002
  %107 = load i32, i32* %__UNIQUE_ID___x358, align 4, !dbg !20002
  %108 = load i32, i32* %__UNIQUE_ID___y359, align 4, !dbg !20002
  %cmp127 = icmp ult i32 %107, %108, !dbg !20002
  br i1 %cmp127, label %cond.true129, label %cond.false130, !dbg !20002

cond.true129:                                     ; preds = %if.end
  %109 = load i32, i32* %__UNIQUE_ID___x358, align 4, !dbg !20002
  br label %cond.end131, !dbg !20002

cond.false130:                                    ; preds = %if.end
  %110 = load i32, i32* %__UNIQUE_ID___y359, align 4, !dbg !20002
  br label %cond.end131, !dbg !20002

cond.end131:                                      ; preds = %cond.false130, %cond.true129
  %cond132 = phi i32 [ %109, %cond.true129 ], [ %110, %cond.false130 ], !dbg !20002
  store i32 %cond132, i32* %tmp126, align 4, !dbg !20002
  %111 = load i32, i32* %tmp126, align 4, !dbg !20002
  store i32 %111, i32* %tmp, align 4, !dbg !20004
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x360, metadata !20005, metadata !DIExpression()), !dbg !20007
  %112 = load i32, i32* %tmp, align 4, !dbg !20007
  store i32 %112, i32* %__UNIQUE_ID___x360, align 4, !dbg !20007
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y361, metadata !20008, metadata !DIExpression()), !dbg !20007
  %113 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20007
  %interval133 = getelementptr inbounds %struct.urb, %struct.urb* %113, i32 0, i32 25, !dbg !20007
  %114 = load i32, i32* %interval133, align 8, !dbg !20007
  store i32 %114, i32* %__UNIQUE_ID___y361, align 4, !dbg !20007
  %115 = load i32, i32* %__UNIQUE_ID___x360, align 4, !dbg !20007
  %116 = load i32, i32* %__UNIQUE_ID___y361, align 4, !dbg !20007
  %cmp135 = icmp ult i32 %115, %116, !dbg !20007
  br i1 %cmp135, label %cond.true137, label %cond.false138, !dbg !20007

cond.true137:                                     ; preds = %cond.end131
  %117 = load i32, i32* %__UNIQUE_ID___x360, align 4, !dbg !20007
  br label %cond.end139, !dbg !20007

cond.false138:                                    ; preds = %cond.end131
  %118 = load i32, i32* %__UNIQUE_ID___y361, align 4, !dbg !20007
  br label %cond.end139, !dbg !20007

cond.end139:                                      ; preds = %cond.false138, %cond.true137
  %cond140 = phi i32 [ %117, %cond.true137 ], [ %118, %cond.false138 ], !dbg !20007
  store i32 %cond140, i32* %tmp134, align 4, !dbg !20007
  %119 = load i32, i32* %tmp134, align 4, !dbg !20007
  %conv141 = trunc i32 %119 to i8, !dbg !20009
  %120 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20010
  %ps142 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %120, i32 0, i32 5, !dbg !20011
  %bw_period = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps142, i32 0, i32 12, !dbg !20012
  store i8 %conv141, i8* %bw_period, align 1, !dbg !20013
  %121 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20014
  %ps143 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %121, i32 0, i32 5, !dbg !20015
  %bw_period144 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps143, i32 0, i32 12, !dbg !20016
  %122 = load i8, i8* %bw_period144, align 1, !dbg !20016
  %conv145 = zext i8 %122 to i32, !dbg !20014
  %shl146 = shl i32 %conv145, 3, !dbg !20017
  %conv147 = trunc i32 %shl146 to i8, !dbg !20014
  %123 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20018
  %ps148 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %123, i32 0, i32 5, !dbg !20019
  %bw_uperiod149 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps148, i32 0, i32 11, !dbg !20020
  store i8 %conv147, i8* %bw_uperiod149, align 4, !dbg !20021
  %124 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20022
  %interval150 = getelementptr inbounds %struct.urb, %struct.urb* %124, i32 0, i32 25, !dbg !20023
  %125 = load i32, i32* %interval150, align 8, !dbg !20023
  %conv151 = trunc i32 %125 to i16, !dbg !20022
  %126 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20024
  %ps152 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %126, i32 0, i32 5, !dbg !20025
  %period153 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps152, i32 0, i32 5, !dbg !20026
  store i16 %conv151, i16* %period153, align 4, !dbg !20027
  %127 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20028
  %interval154 = getelementptr inbounds %struct.urb, %struct.urb* %127, i32 0, i32 25, !dbg !20029
  %128 = load i32, i32* %interval154, align 8, !dbg !20029
  %shl155 = shl i32 %128, 3, !dbg !20030
  %conv156 = trunc i32 %shl155 to i16, !dbg !20028
  %129 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20031
  %uperiod157 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %129, i32 0, i32 8, !dbg !20032
  store i16 %conv156, i16* %uperiod157, align 8, !dbg !20033
  %130 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20034
  %ps158 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %130, i32 0, i32 5, !dbg !20035
  %usecs159 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps158, i32 0, i32 9, !dbg !20036
  %131 = load i8, i8* %usecs159, align 2, !dbg !20036
  %conv160 = zext i8 %131 to i32, !dbg !20034
  %132 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20037
  %ps161 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %132, i32 0, i32 5, !dbg !20038
  %c_usecs162 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps161, i32 0, i32 10, !dbg !20039
  %133 = load i8, i8* %c_usecs162, align 1, !dbg !20039
  %conv163 = zext i8 %133 to i32, !dbg !20037
  %add164 = add i32 %conv160, %conv163, !dbg !20040
  %134 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20041
  %ps165 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %134, i32 0, i32 5, !dbg !20042
  %bw_period166 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps165, i32 0, i32 12, !dbg !20043
  %135 = load i8, i8* %bw_period166, align 1, !dbg !20043
  %conv167 = zext i8 %135 to i32, !dbg !20041
  %div168 = sdiv i32 %add164, %conv167, !dbg !20044
  %136 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20045
  %bandwidth169 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %136, i32 0, i32 10, !dbg !20046
  store i32 %div168, i32* %bandwidth169, align 4, !dbg !20047
  %137 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20048
  %138 = load i32, i32* %addr, align 4, !dbg !20049
  %call170 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %137, i32 %138) #11, !dbg !20050
  %139 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20051
  %address = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %139, i32 0, i32 14, !dbg !20052
  store i32 %call170, i32* %address, align 4, !dbg !20053
  br label %if.end171

if.end171:                                        ; preds = %cond.end139, %cond.end36
  %140 = load %struct.usb_device*, %struct.usb_device** %dev, align 8, !dbg !20054
  %141 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20055
  %ps172 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %141, i32 0, i32 5, !dbg !20056
  %udev = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps172, i32 0, i32 0, !dbg !20057
  store %struct.usb_device* %140, %struct.usb_device** %udev, align 8, !dbg !20058
  %142 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20059
  %ep173 = getelementptr inbounds %struct.urb, %struct.urb* %142, i32 0, i32 9, !dbg !20060
  %143 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep173, align 8, !dbg !20060
  %144 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20061
  %ps174 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %144, i32 0, i32 5, !dbg !20062
  %ep175 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps174, i32 0, i32 1, !dbg !20063
  store %struct.usb_host_endpoint* %143, %struct.usb_host_endpoint** %ep175, align 8, !dbg !20064
  %145 = load i32, i32* %is_input, align 4, !dbg !20065
  %146 = load i32, i32* %epnum, align 4, !dbg !20066
  %or176 = or i32 %145, %146, !dbg !20067
  %conv177 = trunc i32 %or176 to i8, !dbg !20065
  %147 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20068
  %bEndpointAddress = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %147, i32 0, i32 1, !dbg !20069
  store i8 %conv177, i8* %bEndpointAddress, align 8, !dbg !20070
  %148 = load i32, i32* %maxp, align 4, !dbg !20071
  %conv178 = trunc i32 %148 to i16, !dbg !20071
  %149 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20072
  %maxp179 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %149, i32 0, i32 9, !dbg !20073
  store i16 %conv178, i16* %maxp179, align 2, !dbg !20074
  ret void, !dbg !20075
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.ehci_iso_sched* @iso_sched_alloc(i32 %packets, i32 %mem_flags) #0 !dbg !20076 {
entry:
  %packets.addr = alloca i32, align 4
  %mem_flags.addr = alloca i32, align 4
  %iso_sched = alloca %struct.ehci_iso_sched*, align 8
  %size = alloca i32, align 4
  store i32 %packets, i32* %packets.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %packets.addr, metadata !20079, metadata !DIExpression()), !dbg !20080
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !20081, metadata !DIExpression()), !dbg !20082
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_sched** %iso_sched, metadata !20083, metadata !DIExpression()), !dbg !20084
  call void @llvm.dbg.declare(metadata i32* %size, metadata !20085, metadata !DIExpression()), !dbg !20086
  store i32 24, i32* %size, align 4, !dbg !20086
  %0 = load i32, i32* %packets.addr, align 4, !dbg !20087
  %conv = zext i32 %0 to i64, !dbg !20087
  %mul = mul i64 %conv, 24, !dbg !20088
  %1 = load i32, i32* %size, align 4, !dbg !20089
  %conv1 = sext i32 %1 to i64, !dbg !20089
  %add = add i64 %conv1, %mul, !dbg !20089
  %conv2 = trunc i64 %add to i32, !dbg !20089
  store i32 %conv2, i32* %size, align 4, !dbg !20089
  %2 = load i32, i32* %size, align 4, !dbg !20090
  %conv3 = sext i32 %2 to i64, !dbg !20090
  %3 = load i32, i32* %mem_flags.addr, align 4, !dbg !20091
  %call = call i8* @kzalloc(i64 %conv3, i32 %3) #11, !dbg !20092
  %4 = bitcast i8* %call to %struct.ehci_iso_sched*, !dbg !20092
  store %struct.ehci_iso_sched* %4, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !20093
  %5 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !20094
  %cmp = icmp ne %struct.ehci_iso_sched* %5, null, !dbg !20094
  %lnot = xor i1 %cmp, true, !dbg !20094
  %lnot5 = xor i1 %lnot, true, !dbg !20094
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !20094
  %conv6 = sext i32 %lnot.ext to i64, !dbg !20094
  %tobool = icmp ne i64 %conv6, 0, !dbg !20094
  br i1 %tobool, label %if.then, label %if.end, !dbg !20096

if.then:                                          ; preds = %entry
  %6 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !20097
  %td_list = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %6, i32 0, i32 0, !dbg !20098
  call void @INIT_LIST_HEAD(%struct.list_head* %td_list) #11, !dbg !20099
  br label %if.end, !dbg !20099

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !20100
  ret %struct.ehci_iso_sched* %7, !dbg !20101
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @itd_sched_init(%struct.ehci_hcd* %ehci, %struct.ehci_iso_sched* %iso_sched, %struct.ehci_iso_stream* %stream, %struct.urb* %urb) #0 !dbg !20102 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %iso_sched.addr = alloca %struct.ehci_iso_sched*, align 8
  %stream.addr = alloca %struct.ehci_iso_stream*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %i = alloca i32, align 4
  %dma = alloca i64, align 8
  %uframe = alloca %struct.ehci_iso_packet*, align 8
  %length = alloca i32, align 4
  %buf = alloca i64, align 8
  %trans = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !20105, metadata !DIExpression()), !dbg !20106
  store %struct.ehci_iso_sched* %iso_sched, %struct.ehci_iso_sched** %iso_sched.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_sched** %iso_sched.addr, metadata !20107, metadata !DIExpression()), !dbg !20108
  store %struct.ehci_iso_stream* %stream, %struct.ehci_iso_stream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream.addr, metadata !20109, metadata !DIExpression()), !dbg !20110
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !20111, metadata !DIExpression()), !dbg !20112
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20113, metadata !DIExpression()), !dbg !20114
  call void @llvm.dbg.declare(metadata i64* %dma, metadata !20115, metadata !DIExpression()), !dbg !20116
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20117
  %transfer_dma = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 15, !dbg !20118
  %1 = load i64, i64* %transfer_dma, align 8, !dbg !20118
  store i64 %1, i64* %dma, align 8, !dbg !20116
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20119
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 24, !dbg !20120
  %3 = load i32, i32* %number_of_packets, align 4, !dbg !20120
  %4 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20121
  %uperiod = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %4, i32 0, i32 8, !dbg !20122
  %5 = load i16, i16* %uperiod, align 8, !dbg !20122
  %conv = zext i16 %5 to i32, !dbg !20121
  %mul = mul i32 %3, %conv, !dbg !20123
  %6 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched.addr, align 8, !dbg !20124
  %span = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %6, i32 0, i32 1, !dbg !20125
  store i32 %mul, i32* %span, align 8, !dbg !20126
  store i32 0, i32* %i, align 4, !dbg !20127
  br label %for.cond, !dbg !20129

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !20130
  %8 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20132
  %number_of_packets1 = getelementptr inbounds %struct.urb, %struct.urb* %8, i32 0, i32 24, !dbg !20133
  %9 = load i32, i32* %number_of_packets1, align 4, !dbg !20133
  %cmp = icmp ult i32 %7, %9, !dbg !20134
  br i1 %cmp, label %for.body, label %for.end, !dbg !20135

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_packet** %uframe, metadata !20136, metadata !DIExpression()), !dbg !20139
  %10 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched.addr, align 8, !dbg !20140
  %packet = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %10, i32 0, i32 3, !dbg !20141
  %11 = load i32, i32* %i, align 4, !dbg !20142
  %idxprom = zext i32 %11 to i64, !dbg !20140
  %arrayidx = getelementptr [0 x %struct.ehci_iso_packet], [0 x %struct.ehci_iso_packet]* %packet, i64 0, i64 %idxprom, !dbg !20140
  store %struct.ehci_iso_packet* %arrayidx, %struct.ehci_iso_packet** %uframe, align 8, !dbg !20139
  call void @llvm.dbg.declare(metadata i32* %length, metadata !20143, metadata !DIExpression()), !dbg !20144
  call void @llvm.dbg.declare(metadata i64* %buf, metadata !20145, metadata !DIExpression()), !dbg !20146
  call void @llvm.dbg.declare(metadata i32* %trans, metadata !20147, metadata !DIExpression()), !dbg !20148
  %12 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20149
  %iso_frame_desc = getelementptr inbounds %struct.urb, %struct.urb* %12, i32 0, i32 29, !dbg !20150
  %13 = load i32, i32* %i, align 4, !dbg !20151
  %idxprom3 = zext i32 %13 to i64, !dbg !20149
  %arrayidx4 = getelementptr [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %iso_frame_desc, i64 0, i64 %idxprom3, !dbg !20149
  %length5 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %arrayidx4, i32 0, i32 1, !dbg !20152
  %14 = load i32, i32* %length5, align 4, !dbg !20152
  store i32 %14, i32* %length, align 4, !dbg !20153
  %15 = load i64, i64* %dma, align 8, !dbg !20154
  %16 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20155
  %iso_frame_desc6 = getelementptr inbounds %struct.urb, %struct.urb* %16, i32 0, i32 29, !dbg !20156
  %17 = load i32, i32* %i, align 4, !dbg !20157
  %idxprom7 = zext i32 %17 to i64, !dbg !20155
  %arrayidx8 = getelementptr [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %iso_frame_desc6, i64 0, i64 %idxprom7, !dbg !20155
  %offset = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %arrayidx8, i32 0, i32 0, !dbg !20158
  %18 = load i32, i32* %offset, align 8, !dbg !20158
  %conv9 = zext i32 %18 to i64, !dbg !20155
  %add = add i64 %15, %conv9, !dbg !20159
  store i64 %add, i64* %buf, align 8, !dbg !20160
  store i32 -2147483648, i32* %trans, align 4, !dbg !20161
  %19 = load i64, i64* %buf, align 8, !dbg !20162
  %and = and i64 %19, 4095, !dbg !20163
  %20 = load i32, i32* %trans, align 4, !dbg !20164
  %conv10 = zext i32 %20 to i64, !dbg !20164
  %or = or i64 %conv10, %and, !dbg !20164
  %conv11 = trunc i64 %or to i32, !dbg !20164
  store i32 %conv11, i32* %trans, align 4, !dbg !20164
  %21 = load i32, i32* %i, align 4, !dbg !20165
  %add12 = add i32 %21, 1, !dbg !20165
  %22 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20165
  %number_of_packets13 = getelementptr inbounds %struct.urb, %struct.urb* %22, i32 0, i32 24, !dbg !20165
  %23 = load i32, i32* %number_of_packets13, align 4, !dbg !20165
  %cmp14 = icmp eq i32 %add12, %23, !dbg !20165
  %lnot = xor i1 %cmp14, true, !dbg !20165
  %lnot16 = xor i1 %lnot, true, !dbg !20165
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !20165
  %conv17 = sext i32 %lnot.ext to i64, !dbg !20165
  %tobool = icmp ne i64 %conv17, 0, !dbg !20165
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !20167

land.lhs.true:                                    ; preds = %for.body
  %24 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20168
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %24, i32 0, i32 13, !dbg !20169
  %25 = load i32, i32* %transfer_flags, align 4, !dbg !20169
  %and18 = and i32 %25, 128, !dbg !20170
  %tobool19 = icmp ne i32 %and18, 0, !dbg !20170
  br i1 %tobool19, label %if.end, label %if.then, !dbg !20171

if.then:                                          ; preds = %land.lhs.true
  %26 = load i32, i32* %trans, align 4, !dbg !20172
  %or20 = or i32 %26, 32768, !dbg !20172
  store i32 %or20, i32* %trans, align 4, !dbg !20172
  br label %if.end, !dbg !20173

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %27 = load i32, i32* %length, align 4, !dbg !20174
  %shl = shl i32 %27, 16, !dbg !20175
  %28 = load i32, i32* %trans, align 4, !dbg !20176
  %or21 = or i32 %28, %shl, !dbg !20176
  store i32 %or21, i32* %trans, align 4, !dbg !20176
  %29 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20177
  %30 = load i32, i32* %trans, align 4, !dbg !20178
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %29, i32 %30) #11, !dbg !20179
  %31 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %uframe, align 8, !dbg !20180
  %transaction = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %31, i32 0, i32 1, !dbg !20181
  store i32 %call, i32* %transaction, align 8, !dbg !20182
  %32 = load i64, i64* %buf, align 8, !dbg !20183
  %and22 = and i64 %32, -4096, !dbg !20184
  %33 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %uframe, align 8, !dbg !20185
  %bufp = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %33, i32 0, i32 0, !dbg !20186
  store i64 %and22, i64* %bufp, align 8, !dbg !20187
  %34 = load i32, i32* %length, align 4, !dbg !20188
  %conv23 = zext i32 %34 to i64, !dbg !20188
  %35 = load i64, i64* %buf, align 8, !dbg !20189
  %add24 = add i64 %35, %conv23, !dbg !20189
  store i64 %add24, i64* %buf, align 8, !dbg !20189
  %36 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %uframe, align 8, !dbg !20190
  %bufp25 = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %36, i32 0, i32 0, !dbg !20190
  %37 = load i64, i64* %bufp25, align 8, !dbg !20190
  %38 = load i64, i64* %buf, align 8, !dbg !20190
  %and26 = and i64 %38, -4096, !dbg !20190
  %cmp27 = icmp ne i64 %37, %and26, !dbg !20190
  %lnot29 = xor i1 %cmp27, true, !dbg !20190
  %lnot31 = xor i1 %lnot29, true, !dbg !20190
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !20190
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !20190
  %tobool34 = icmp ne i64 %conv33, 0, !dbg !20190
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !20192

if.then35:                                        ; preds = %if.end
  %39 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %uframe, align 8, !dbg !20193
  %cross = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %39, i32 0, i32 2, !dbg !20194
  store i8 1, i8* %cross, align 4, !dbg !20195
  br label %if.end36, !dbg !20193

if.end36:                                         ; preds = %if.then35, %if.end
  br label %for.inc, !dbg !20196

for.inc:                                          ; preds = %if.end36
  %40 = load i32, i32* %i, align 4, !dbg !20197
  %inc = add i32 %40, 1, !dbg !20197
  store i32 %inc, i32* %i, align 4, !dbg !20197
  br label %for.cond, !dbg !20198, !llvm.loop !20199

for.end:                                          ; preds = %for.cond
  ret void, !dbg !20201
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @iso_sched_free(%struct.ehci_iso_stream* %stream, %struct.ehci_iso_sched* %iso_sched) #0 !dbg !20202 {
entry:
  %stream.addr = alloca %struct.ehci_iso_stream*, align 8
  %iso_sched.addr = alloca %struct.ehci_iso_sched*, align 8
  store %struct.ehci_iso_stream* %stream, %struct.ehci_iso_stream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream.addr, metadata !20205, metadata !DIExpression()), !dbg !20206
  store %struct.ehci_iso_sched* %iso_sched, %struct.ehci_iso_sched** %iso_sched.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_sched** %iso_sched.addr, metadata !20207, metadata !DIExpression()), !dbg !20208
  %0 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched.addr, align 8, !dbg !20209
  %tobool = icmp ne %struct.ehci_iso_sched* %0, null, !dbg !20209
  br i1 %tobool, label %if.end, label %if.then, !dbg !20211

if.then:                                          ; preds = %entry
  br label %return, !dbg !20212

if.end:                                           ; preds = %entry
  %1 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched.addr, align 8, !dbg !20213
  %td_list = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %1, i32 0, i32 0, !dbg !20214
  %2 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20215
  %free_list = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %2, i32 0, i32 4, !dbg !20216
  call void @list_splice(%struct.list_head* %td_list, %struct.list_head* %free_list) #11, !dbg !20217
  %3 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched.addr, align 8, !dbg !20218
  %4 = bitcast %struct.ehci_iso_sched* %3 to i8*, !dbg !20218
  call void @kfree(i8* %4) #11, !dbg !20219
  br label %return, !dbg !20220

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !20220
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !20221 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !20224, metadata !DIExpression()), !dbg !20225
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !20226, metadata !DIExpression()), !dbg !20227
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !20228
  %call = call i32 @list_empty(%struct.list_head* %0) #11, !dbg !20230
  %tobool = icmp ne i32 %call, 0, !dbg !20230
  br i1 %tobool, label %if.end, label %if.then, !dbg !20231

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !20232
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !20233
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !20234
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !20235
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !20235
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %2, %struct.list_head* %4) #11, !dbg !20236
  br label %if.end, !dbg !20236

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !20237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @hcd_periodic_completion_in_progress(%struct.usb_hcd* %hcd, %struct.usb_host_endpoint* %ep) #0 !dbg !20238 {
entry:
  %hcd.addr = alloca %struct.usb_hcd*, align 8
  %ep.addr = alloca %struct.usb_host_endpoint*, align 8
  store %struct.usb_hcd* %hcd, %struct.usb_hcd** %hcd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd.addr, metadata !20241, metadata !DIExpression()), !dbg !20242
  store %struct.usb_host_endpoint* %ep, %struct.usb_host_endpoint** %ep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_host_endpoint** %ep.addr, metadata !20243, metadata !DIExpression()), !dbg !20244
  %0 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd.addr, align 8, !dbg !20245
  %high_prio_bh = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %0, i32 0, i32 20, !dbg !20246
  %completing_ep = getelementptr inbounds %struct.giveback_urb_bh, %struct.giveback_urb_bh* %high_prio_bh, i32 0, i32 4, !dbg !20247
  %1 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %completing_ep, align 8, !dbg !20247
  %2 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %ep.addr, align 8, !dbg !20248
  %cmp = icmp eq %struct.usb_host_endpoint* %1, %2, !dbg !20249
  ret i1 %cmp, !dbg !20250
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @itd_slot_ok(%struct.ehci_hcd* %ehci, %struct.ehci_iso_stream* %stream, i32 %uframe) #0 !dbg !20251 {
entry:
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %stream.addr = alloca %struct.ehci_iso_stream*, align 8
  %uframe.addr = alloca i32, align 4
  %usecs = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !20254, metadata !DIExpression()), !dbg !20255
  store %struct.ehci_iso_stream* %stream, %struct.ehci_iso_stream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream.addr, metadata !20256, metadata !DIExpression()), !dbg !20257
  store i32 %uframe, i32* %uframe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uframe.addr, metadata !20258, metadata !DIExpression()), !dbg !20259
  call void @llvm.dbg.declare(metadata i32* %usecs, metadata !20260, metadata !DIExpression()), !dbg !20261
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20262
  %uframe_periodic_max = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 38, !dbg !20263
  %1 = load i32, i32* %uframe_periodic_max, align 4, !dbg !20263
  %2 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20264
  %ps = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %2, i32 0, i32 5, !dbg !20265
  %usecs1 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 9, !dbg !20266
  %3 = load i8, i8* %usecs1, align 2, !dbg !20266
  %conv = zext i8 %3 to i32, !dbg !20264
  %sub = sub i32 %1, %conv, !dbg !20267
  store i32 %sub, i32* %usecs, align 4, !dbg !20268
  %4 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20269
  %ps2 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %4, i32 0, i32 5, !dbg !20271
  %bw_uperiod = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps2, i32 0, i32 11, !dbg !20272
  %5 = load i8, i8* %bw_uperiod, align 4, !dbg !20272
  %conv3 = zext i8 %5 to i32, !dbg !20269
  %sub4 = sub i32 %conv3, 1, !dbg !20273
  %6 = load i32, i32* %uframe.addr, align 4, !dbg !20274
  %and = and i32 %6, %sub4, !dbg !20274
  store i32 %and, i32* %uframe.addr, align 4, !dbg !20274
  br label %for.cond, !dbg !20275

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %uframe.addr, align 4, !dbg !20276
  %cmp = icmp ult i32 %7, 64, !dbg !20278
  br i1 %cmp, label %for.body, label %for.end, !dbg !20279

for.body:                                         ; preds = %for.cond
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20280
  %bandwidth = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 62, !dbg !20283
  %9 = load i32, i32* %uframe.addr, align 4, !dbg !20284
  %idxprom = zext i32 %9 to i64, !dbg !20280
  %arrayidx = getelementptr [64 x i8], [64 x i8]* %bandwidth, i64 0, i64 %idxprom, !dbg !20280
  %10 = load i8, i8* %arrayidx, align 1, !dbg !20280
  %conv6 = zext i8 %10 to i32, !dbg !20280
  %11 = load i32, i32* %usecs, align 4, !dbg !20285
  %cmp7 = icmp ugt i32 %conv6, %11, !dbg !20286
  br i1 %cmp7, label %if.then, label %if.end, !dbg !20287

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !20288
  br label %return, !dbg !20288

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !20289

for.inc:                                          ; preds = %if.end
  %12 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20290
  %ps9 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %12, i32 0, i32 5, !dbg !20291
  %bw_uperiod10 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps9, i32 0, i32 11, !dbg !20292
  %13 = load i8, i8* %bw_uperiod10, align 4, !dbg !20292
  %conv11 = zext i8 %13 to i32, !dbg !20290
  %14 = load i32, i32* %uframe.addr, align 4, !dbg !20293
  %add = add i32 %14, %conv11, !dbg !20293
  store i32 %add, i32* %uframe.addr, align 4, !dbg !20293
  br label %for.cond, !dbg !20294, !llvm.loop !20295

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !20297
  br label %return, !dbg !20297

return:                                           ; preds = %for.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !20298
  ret i32 %15, !dbg !20298
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sitd_slot_ok(%struct.ehci_hcd* %ehci, %struct.ehci_iso_stream* %stream, i32 %uframe, %struct.ehci_iso_sched* %sched, %struct.ehci_tt* %tt) #0 !dbg !20299 {
entry:
  %retval = alloca i32, align 4
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %stream.addr = alloca %struct.ehci_iso_stream*, align 8
  %uframe.addr = alloca i32, align 4
  %sched.addr = alloca %struct.ehci_iso_sched*, align 8
  %tt.addr = alloca %struct.ehci_tt*, align 8
  %mask = alloca i32, align 4
  %tmp = alloca i32, align 4
  %frame = alloca i32, align 4
  %uf = alloca i32, align 4
  %max_used = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !20302, metadata !DIExpression()), !dbg !20303
  store %struct.ehci_iso_stream* %stream, %struct.ehci_iso_stream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream.addr, metadata !20304, metadata !DIExpression()), !dbg !20305
  store i32 %uframe, i32* %uframe.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uframe.addr, metadata !20306, metadata !DIExpression()), !dbg !20307
  store %struct.ehci_iso_sched* %sched, %struct.ehci_iso_sched** %sched.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_sched** %sched.addr, metadata !20308, metadata !DIExpression()), !dbg !20309
  store %struct.ehci_tt* %tt, %struct.ehci_tt** %tt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_tt** %tt.addr, metadata !20310, metadata !DIExpression()), !dbg !20311
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !20312, metadata !DIExpression()), !dbg !20313
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !20314, metadata !DIExpression()), !dbg !20315
  call void @llvm.dbg.declare(metadata i32* %frame, metadata !20316, metadata !DIExpression()), !dbg !20317
  call void @llvm.dbg.declare(metadata i32* %uf, metadata !20318, metadata !DIExpression()), !dbg !20319
  %0 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20320
  %ps = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %0, i32 0, i32 5, !dbg !20321
  %cs_mask = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 4, !dbg !20322
  %1 = load i16, i16* %cs_mask, align 2, !dbg !20322
  %conv = zext i16 %1 to i32, !dbg !20320
  %2 = load i32, i32* %uframe.addr, align 4, !dbg !20323
  %and = and i32 %2, 7, !dbg !20324
  %shl = shl i32 %conv, %and, !dbg !20325
  store i32 %shl, i32* %mask, align 4, !dbg !20326
  %3 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20327
  %ps1 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %3, i32 0, i32 5, !dbg !20329
  %cs_mask2 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps1, i32 0, i32 4, !dbg !20330
  %4 = load i16, i16* %cs_mask2, align 2, !dbg !20330
  %conv3 = zext i16 %4 to i32, !dbg !20327
  %and4 = and i32 %conv3, 255, !dbg !20331
  %5 = load i32, i32* %uframe.addr, align 4, !dbg !20332
  %and5 = and i32 %5, 7, !dbg !20333
  %shl6 = shl i32 %and4, %and5, !dbg !20334
  %cmp = icmp sge i32 %shl6, 128, !dbg !20335
  br i1 %cmp, label %if.then, label %if.end, !dbg !20336

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !20337
  br label %return, !dbg !20337

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %mask, align 4, !dbg !20338
  %and8 = and i32 %6, -65536, !dbg !20340
  %tobool = icmp ne i32 %and8, 0, !dbg !20340
  br i1 %tobool, label %if.then9, label %if.end10, !dbg !20341

if.then9:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !20342
  br label %return, !dbg !20342

if.end10:                                         ; preds = %if.end
  %7 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20343
  %ps11 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %7, i32 0, i32 5, !dbg !20344
  %bw_uperiod = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps11, i32 0, i32 11, !dbg !20345
  %8 = load i8, i8* %bw_uperiod, align 4, !dbg !20345
  %conv12 = zext i8 %8 to i32, !dbg !20343
  %sub = sub i32 %conv12, 1, !dbg !20346
  %9 = load i32, i32* %uframe.addr, align 4, !dbg !20347
  %and13 = and i32 %9, %sub, !dbg !20347
  store i32 %and13, i32* %uframe.addr, align 4, !dbg !20347
  %10 = load i32, i32* %uframe.addr, align 4, !dbg !20348
  %shr = lshr i32 %10, 3, !dbg !20349
  store i32 %shr, i32* %frame, align 4, !dbg !20350
  %11 = load i32, i32* %uframe.addr, align 4, !dbg !20351
  %and14 = and i32 %11, 7, !dbg !20352
  store i32 %and14, i32* %uf, align 4, !dbg !20353
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20354
  %13 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20356
  %ps15 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %13, i32 0, i32 5, !dbg !20357
  %14 = load %struct.ehci_tt*, %struct.ehci_tt** %tt.addr, align 8, !dbg !20358
  %15 = load i32, i32* %frame, align 4, !dbg !20359
  %16 = load i32, i32* %uf, align 4, !dbg !20360
  %call = call i32 @tt_available(%struct.ehci_hcd* %12, %struct.ehci_per_sched* %ps15, %struct.ehci_tt* %14, i32 %15, i32 %16) #11, !dbg !20361
  %tobool16 = icmp ne i32 %call, 0, !dbg !20361
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !20362

if.then17:                                        ; preds = %if.end10
  store i32 0, i32* %retval, align 4, !dbg !20363
  br label %return, !dbg !20363

if.end18:                                         ; preds = %if.end10
  br label %do.body, !dbg !20364

do.body:                                          ; preds = %do.cond, %if.end18
  call void @llvm.dbg.declare(metadata i32* %max_used, metadata !20365, metadata !DIExpression()), !dbg !20367
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20368, metadata !DIExpression()), !dbg !20369
  %17 = load i32, i32* %uframe.addr, align 4, !dbg !20370
  store i32 %17, i32* %uf, align 4, !dbg !20371
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20372
  %uframe_periodic_max = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %18, i32 0, i32 38, !dbg !20373
  %19 = load i32, i32* %uframe_periodic_max, align 4, !dbg !20373
  %20 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20374
  %ps19 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %20, i32 0, i32 5, !dbg !20375
  %usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps19, i32 0, i32 9, !dbg !20376
  %21 = load i8, i8* %usecs, align 2, !dbg !20376
  %conv20 = zext i8 %21 to i32, !dbg !20374
  %sub21 = sub i32 %19, %conv20, !dbg !20377
  store i32 %sub21, i32* %max_used, align 4, !dbg !20378
  %22 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20379
  %ps22 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %22, i32 0, i32 5, !dbg !20381
  %cs_mask23 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps22, i32 0, i32 4, !dbg !20382
  %23 = load i16, i16* %cs_mask23, align 2, !dbg !20382
  %conv24 = zext i16 %23 to i32, !dbg !20379
  %and25 = and i32 %conv24, 255, !dbg !20383
  store i32 %and25, i32* %tmp, align 4, !dbg !20384
  br label %for.cond, !dbg !20385

for.cond:                                         ; preds = %for.inc, %do.body
  %24 = load i32, i32* %tmp, align 4, !dbg !20386
  %tobool26 = icmp ne i32 %24, 0, !dbg !20388
  br i1 %tobool26, label %for.body, label %for.end, !dbg !20388

for.body:                                         ; preds = %for.cond
  %25 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20389
  %bandwidth = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %25, i32 0, i32 62, !dbg !20392
  %26 = load i32, i32* %uf, align 4, !dbg !20393
  %idxprom = zext i32 %26 to i64, !dbg !20389
  %arrayidx = getelementptr [64 x i8], [64 x i8]* %bandwidth, i64 0, i64 %idxprom, !dbg !20389
  %27 = load i8, i8* %arrayidx, align 1, !dbg !20389
  %conv27 = zext i8 %27 to i32, !dbg !20389
  %28 = load i32, i32* %max_used, align 4, !dbg !20394
  %cmp28 = icmp ugt i32 %conv27, %28, !dbg !20395
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !20396

if.then30:                                        ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !20397
  br label %return, !dbg !20397

if.end31:                                         ; preds = %for.body
  br label %for.inc, !dbg !20398

for.inc:                                          ; preds = %if.end31
  %29 = load i32, i32* %tmp, align 4, !dbg !20399
  %shr32 = lshr i32 %29, 1, !dbg !20399
  store i32 %shr32, i32* %tmp, align 4, !dbg !20399
  %30 = load i32, i32* %uf, align 4, !dbg !20400
  %inc = add i32 %30, 1, !dbg !20400
  store i32 %inc, i32* %uf, align 4, !dbg !20400
  br label %for.cond, !dbg !20401, !llvm.loop !20402

for.end:                                          ; preds = %for.cond
  %31 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20404
  %ps33 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %31, i32 0, i32 5, !dbg !20406
  %c_usecs = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps33, i32 0, i32 10, !dbg !20407
  %32 = load i8, i8* %c_usecs, align 1, !dbg !20407
  %tobool34 = icmp ne i8 %32, 0, !dbg !20404
  br i1 %tobool34, label %if.then35, label %if.end68, !dbg !20408

if.then35:                                        ; preds = %for.end
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20409
  %uframe_periodic_max36 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %33, i32 0, i32 38, !dbg !20411
  %34 = load i32, i32* %uframe_periodic_max36, align 4, !dbg !20411
  %35 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20412
  %ps37 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %35, i32 0, i32 5, !dbg !20413
  %c_usecs38 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps37, i32 0, i32 10, !dbg !20414
  %36 = load i8, i8* %c_usecs38, align 1, !dbg !20414
  %conv39 = zext i8 %36 to i32, !dbg !20412
  %sub40 = sub i32 %34, %conv39, !dbg !20415
  store i32 %sub40, i32* %max_used, align 4, !dbg !20416
  %37 = load i32, i32* %uframe.addr, align 4, !dbg !20417
  %and41 = and i32 %37, -8, !dbg !20418
  store i32 %and41, i32* %uf, align 4, !dbg !20419
  store i32 1024, i32* %tmp, align 4, !dbg !20420
  %38 = load i32, i32* %uframe.addr, align 4, !dbg !20421
  %and42 = and i32 %38, 7, !dbg !20423
  %add = add i32 %and42, 2, !dbg !20424
  store i32 %add, i32* %i, align 4, !dbg !20425
  br label %for.cond43, !dbg !20426

for.cond43:                                       ; preds = %for.inc64, %if.then35
  %39 = load i32, i32* %i, align 4, !dbg !20427
  %cmp44 = icmp ult i32 %39, 8, !dbg !20429
  br i1 %cmp44, label %for.body46, label %for.end67, !dbg !20430

for.body46:                                       ; preds = %for.cond43
  %40 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20431
  %ps47 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %40, i32 0, i32 5, !dbg !20434
  %cs_mask48 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps47, i32 0, i32 4, !dbg !20435
  %41 = load i16, i16* %cs_mask48, align 2, !dbg !20435
  %conv49 = zext i16 %41 to i32, !dbg !20431
  %42 = load i32, i32* %tmp, align 4, !dbg !20436
  %and50 = and i32 %conv49, %42, !dbg !20437
  %cmp51 = icmp eq i32 %and50, 0, !dbg !20438
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !20439

if.then53:                                        ; preds = %for.body46
  br label %for.inc64, !dbg !20440

if.end54:                                         ; preds = %for.body46
  %43 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20441
  %bandwidth55 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %43, i32 0, i32 62, !dbg !20443
  %44 = load i32, i32* %uf, align 4, !dbg !20444
  %45 = load i32, i32* %i, align 4, !dbg !20445
  %add56 = add i32 %44, %45, !dbg !20446
  %idxprom57 = zext i32 %add56 to i64, !dbg !20441
  %arrayidx58 = getelementptr [64 x i8], [64 x i8]* %bandwidth55, i64 0, i64 %idxprom57, !dbg !20441
  %46 = load i8, i8* %arrayidx58, align 1, !dbg !20441
  %conv59 = zext i8 %46 to i32, !dbg !20441
  %47 = load i32, i32* %max_used, align 4, !dbg !20447
  %cmp60 = icmp ugt i32 %conv59, %47, !dbg !20448
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !20449

if.then62:                                        ; preds = %if.end54
  store i32 0, i32* %retval, align 4, !dbg !20450
  br label %return, !dbg !20450

if.end63:                                         ; preds = %if.end54
  br label %for.inc64, !dbg !20451

for.inc64:                                        ; preds = %if.end63, %if.then53
  %48 = load i32, i32* %i, align 4, !dbg !20452
  %inc65 = add i32 %48, 1, !dbg !20452
  store i32 %inc65, i32* %i, align 4, !dbg !20452
  %49 = load i32, i32* %tmp, align 4, !dbg !20453
  %shl66 = shl i32 %49, 1, !dbg !20453
  store i32 %shl66, i32* %tmp, align 4, !dbg !20453
  br label %for.cond43, !dbg !20454, !llvm.loop !20455

for.end67:                                        ; preds = %for.cond43
  br label %if.end68, !dbg !20457

if.end68:                                         ; preds = %for.end67, %for.end
  %50 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20458
  %ps69 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %50, i32 0, i32 5, !dbg !20459
  %bw_uperiod70 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps69, i32 0, i32 11, !dbg !20460
  %51 = load i8, i8* %bw_uperiod70, align 4, !dbg !20460
  %conv71 = zext i8 %51 to i32, !dbg !20458
  %52 = load i32, i32* %uframe.addr, align 4, !dbg !20461
  %add72 = add i32 %52, %conv71, !dbg !20461
  store i32 %add72, i32* %uframe.addr, align 4, !dbg !20461
  br label %do.cond, !dbg !20462

do.cond:                                          ; preds = %if.end68
  %53 = load i32, i32* %uframe.addr, align 4, !dbg !20463
  %cmp73 = icmp ult i32 %53, 64, !dbg !20464
  br i1 %cmp73, label %do.body, label %do.end, !dbg !20462, !llvm.loop !20465

do.end:                                           ; preds = %do.cond
  %54 = load i32, i32* %uframe.addr, align 4, !dbg !20467
  %and75 = and i32 %54, 7, !dbg !20468
  %55 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20469
  %ps76 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %55, i32 0, i32 5, !dbg !20470
  %cs_mask77 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps76, i32 0, i32 4, !dbg !20471
  %56 = load i16, i16* %cs_mask77, align 2, !dbg !20472
  %conv78 = zext i16 %56 to i32, !dbg !20472
  %shl79 = shl i32 %conv78, %and75, !dbg !20472
  %conv80 = trunc i32 %shl79 to i16, !dbg !20472
  store i16 %conv80, i16* %cs_mask77, align 2, !dbg !20472
  %57 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20473
  %58 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20474
  %ps81 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %58, i32 0, i32 5, !dbg !20475
  %cs_mask82 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps81, i32 0, i32 4, !dbg !20476
  %59 = load i16, i16* %cs_mask82, align 2, !dbg !20476
  %conv83 = zext i16 %59 to i32, !dbg !20474
  %call84 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %57, i32 %conv83) #11, !dbg !20477
  %60 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20478
  %splits = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %60, i32 0, i32 7, !dbg !20479
  store i32 %call84, i32* %splits, align 4, !dbg !20480
  store i32 1, i32* %retval, align 4, !dbg !20481
  br label %return, !dbg !20481

return:                                           ; preds = %do.end, %if.then62, %if.then30, %if.then17, %if.then9, %if.then
  %61 = load i32, i32* %retval, align 4, !dbg !20482
  ret i32 %61, !dbg !20482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reserve_release_iso_bandwidth(%struct.ehci_hcd* %ehci, %struct.ehci_iso_stream* %stream, i32 %sign) #0 !dbg !20483 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %stream.addr = alloca %struct.ehci_iso_stream*, align 8
  %sign.addr = alloca i32, align 4
  %uframe = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %s_mask = alloca i32, align 4
  %c_mask = alloca i32, align 4
  %m = alloca i32, align 4
  %usecs = alloca i32, align 4
  %c_usecs = alloca i32, align 4
  %tt_usecs = alloca i32, align 4
  %tt = alloca %struct.ehci_tt*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !20486, metadata !DIExpression()), !dbg !20487
  store %struct.ehci_iso_stream* %stream, %struct.ehci_iso_stream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream.addr, metadata !20488, metadata !DIExpression()), !dbg !20489
  store i32 %sign, i32* %sign.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sign.addr, metadata !20490, metadata !DIExpression()), !dbg !20491
  call void @llvm.dbg.declare(metadata i32* %uframe, metadata !20492, metadata !DIExpression()), !dbg !20493
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20494, metadata !DIExpression()), !dbg !20495
  call void @llvm.dbg.declare(metadata i32* %j, metadata !20496, metadata !DIExpression()), !dbg !20497
  call void @llvm.dbg.declare(metadata i32* %s_mask, metadata !20498, metadata !DIExpression()), !dbg !20499
  call void @llvm.dbg.declare(metadata i32* %c_mask, metadata !20500, metadata !DIExpression()), !dbg !20501
  call void @llvm.dbg.declare(metadata i32* %m, metadata !20502, metadata !DIExpression()), !dbg !20503
  call void @llvm.dbg.declare(metadata i32* %usecs, metadata !20504, metadata !DIExpression()), !dbg !20505
  %0 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20506
  %ps = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %0, i32 0, i32 5, !dbg !20507
  %usecs1 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 9, !dbg !20508
  %1 = load i8, i8* %usecs1, align 2, !dbg !20508
  %conv = zext i8 %1 to i32, !dbg !20506
  store i32 %conv, i32* %usecs, align 4, !dbg !20505
  call void @llvm.dbg.declare(metadata i32* %c_usecs, metadata !20509, metadata !DIExpression()), !dbg !20510
  %2 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20511
  %ps2 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %2, i32 0, i32 5, !dbg !20512
  %c_usecs3 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps2, i32 0, i32 10, !dbg !20513
  %3 = load i8, i8* %c_usecs3, align 1, !dbg !20513
  %conv4 = zext i8 %3 to i32, !dbg !20511
  store i32 %conv4, i32* %c_usecs, align 4, !dbg !20510
  call void @llvm.dbg.declare(metadata i32* %tt_usecs, metadata !20514, metadata !DIExpression()), !dbg !20515
  %4 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20516
  %ps5 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %4, i32 0, i32 5, !dbg !20517
  %tt_usecs6 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps5, i32 0, i32 3, !dbg !20518
  %5 = load i16, i16* %tt_usecs6, align 8, !dbg !20518
  %conv7 = zext i16 %5 to i32, !dbg !20516
  store i32 %conv7, i32* %tt_usecs, align 4, !dbg !20515
  call void @llvm.dbg.declare(metadata %struct.ehci_tt** %tt, metadata !20519, metadata !DIExpression()), !dbg !20520
  %6 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20521
  %ps8 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %6, i32 0, i32 5, !dbg !20523
  %phase = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps8, i32 0, i32 6, !dbg !20524
  %7 = load i16, i16* %phase, align 2, !dbg !20524
  %conv9 = zext i16 %7 to i32, !dbg !20521
  %cmp = icmp eq i32 %conv9, 29999, !dbg !20525
  br i1 %cmp, label %if.then, label %if.end, !dbg !20526

if.then:                                          ; preds = %entry
  br label %if.end102, !dbg !20527

if.end:                                           ; preds = %entry
  %8 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20528
  %ps11 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %8, i32 0, i32 5, !dbg !20529
  %bw_phase = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps11, i32 0, i32 7, !dbg !20530
  %9 = load i8, i8* %bw_phase, align 8, !dbg !20530
  %conv12 = zext i8 %9 to i32, !dbg !20528
  %shl = shl i32 %conv12, 3, !dbg !20531
  store i32 %shl, i32* %uframe, align 4, !dbg !20532
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20533
  %11 = load i32, i32* %sign.addr, align 4, !dbg !20534
  %12 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20535
  %ps13 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %12, i32 0, i32 5, !dbg !20536
  call void @bandwidth_dbg(%struct.ehci_hcd* %10, i32 %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0), %struct.ehci_per_sched* %ps13) #11, !dbg !20537
  %13 = load i32, i32* %sign.addr, align 4, !dbg !20538
  %cmp14 = icmp slt i32 %13, 0, !dbg !20540
  br i1 %cmp14, label %if.then16, label %if.end19, !dbg !20541

if.then16:                                        ; preds = %if.end
  %14 = load i32, i32* %usecs, align 4, !dbg !20542
  %sub = sub i32 0, %14, !dbg !20544
  store i32 %sub, i32* %usecs, align 4, !dbg !20545
  %15 = load i32, i32* %c_usecs, align 4, !dbg !20546
  %sub17 = sub i32 0, %15, !dbg !20547
  store i32 %sub17, i32* %c_usecs, align 4, !dbg !20548
  %16 = load i32, i32* %tt_usecs, align 4, !dbg !20549
  %sub18 = sub i32 0, %16, !dbg !20550
  store i32 %sub18, i32* %tt_usecs, align 4, !dbg !20551
  br label %if.end19, !dbg !20552

if.end19:                                         ; preds = %if.then16, %if.end
  %17 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20553
  %splits = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %17, i32 0, i32 7, !dbg !20555
  %18 = load i32, i32* %splits, align 4, !dbg !20555
  %tobool = icmp ne i32 %18, 0, !dbg !20553
  br i1 %tobool, label %if.else, label %if.then20, !dbg !20556

if.then20:                                        ; preds = %if.end19
  %19 = load i32, i32* %uframe, align 4, !dbg !20557
  %20 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20560
  %ps21 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %20, i32 0, i32 5, !dbg !20561
  %phase_uf = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps21, i32 0, i32 8, !dbg !20562
  %21 = load i8, i8* %phase_uf, align 1, !dbg !20562
  %conv22 = zext i8 %21 to i32, !dbg !20560
  %add = add i32 %19, %conv22, !dbg !20563
  store i32 %add, i32* %i, align 4, !dbg !20564
  br label %for.cond, !dbg !20565

for.cond:                                         ; preds = %for.inc, %if.then20
  %22 = load i32, i32* %i, align 4, !dbg !20566
  %cmp23 = icmp ult i32 %22, 64, !dbg !20568
  br i1 %cmp23, label %for.body, label %for.end, !dbg !20569

for.body:                                         ; preds = %for.cond
  %23 = load i32, i32* %usecs, align 4, !dbg !20570
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20571
  %bandwidth = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %24, i32 0, i32 62, !dbg !20572
  %25 = load i32, i32* %i, align 4, !dbg !20573
  %idxprom = zext i32 %25 to i64, !dbg !20571
  %arrayidx = getelementptr [64 x i8], [64 x i8]* %bandwidth, i64 0, i64 %idxprom, !dbg !20571
  %26 = load i8, i8* %arrayidx, align 1, !dbg !20574
  %conv25 = zext i8 %26 to i32, !dbg !20574
  %add26 = add i32 %conv25, %23, !dbg !20574
  %conv27 = trunc i32 %add26 to i8, !dbg !20574
  store i8 %conv27, i8* %arrayidx, align 1, !dbg !20574
  br label %for.inc, !dbg !20571

for.inc:                                          ; preds = %for.body
  %27 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20575
  %ps28 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %27, i32 0, i32 5, !dbg !20576
  %bw_uperiod = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps28, i32 0, i32 11, !dbg !20577
  %28 = load i8, i8* %bw_uperiod, align 4, !dbg !20577
  %conv29 = zext i8 %28 to i32, !dbg !20575
  %29 = load i32, i32* %i, align 4, !dbg !20578
  %add30 = add i32 %29, %conv29, !dbg !20578
  store i32 %add30, i32* %i, align 4, !dbg !20578
  br label %for.cond, !dbg !20579, !llvm.loop !20580

for.end:                                          ; preds = %for.cond
  br label %if.end102, !dbg !20582

if.else:                                          ; preds = %if.end19
  %30 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20583
  %ps31 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %30, i32 0, i32 5, !dbg !20585
  %cs_mask = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps31, i32 0, i32 4, !dbg !20586
  %31 = load i16, i16* %cs_mask, align 2, !dbg !20586
  %conv32 = zext i16 %31 to i32, !dbg !20583
  store i32 %conv32, i32* %s_mask, align 4, !dbg !20587
  %32 = load i32, i32* %s_mask, align 4, !dbg !20588
  %shr = lshr i32 %32, 8, !dbg !20589
  store i32 %shr, i32* %c_mask, align 4, !dbg !20590
  %33 = load i32, i32* %uframe, align 4, !dbg !20591
  store i32 %33, i32* %i, align 4, !dbg !20593
  br label %for.cond33, !dbg !20594

for.cond33:                                       ; preds = %for.inc70, %if.else
  %34 = load i32, i32* %i, align 4, !dbg !20595
  %cmp34 = icmp ult i32 %34, 64, !dbg !20597
  br i1 %cmp34, label %for.body36, label %for.end75, !dbg !20598

for.body36:                                       ; preds = %for.cond33
  %35 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20599
  %ps37 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %35, i32 0, i32 5, !dbg !20602
  %phase_uf38 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps37, i32 0, i32 8, !dbg !20603
  %36 = load i8, i8* %phase_uf38, align 1, !dbg !20603
  %conv39 = zext i8 %36 to i32, !dbg !20599
  store i32 %conv39, i32* %j, align 4, !dbg !20604
  %37 = load i32, i32* %j, align 4, !dbg !20605
  %shl40 = shl i32 1, %37, !dbg !20606
  store i32 %shl40, i32* %m, align 4, !dbg !20607
  br label %for.cond41, !dbg !20608

for.cond41:                                       ; preds = %for.inc67, %for.body36
  %38 = load i32, i32* %j, align 4, !dbg !20609
  %cmp42 = icmp ult i32 %38, 8, !dbg !20611
  br i1 %cmp42, label %for.body44, label %for.end69, !dbg !20612

for.body44:                                       ; preds = %for.cond41
  %39 = load i32, i32* %s_mask, align 4, !dbg !20613
  %40 = load i32, i32* %m, align 4, !dbg !20616
  %and = and i32 %39, %40, !dbg !20617
  %tobool45 = icmp ne i32 %and, 0, !dbg !20617
  br i1 %tobool45, label %if.then46, label %if.else54, !dbg !20618

if.then46:                                        ; preds = %for.body44
  %41 = load i32, i32* %usecs, align 4, !dbg !20619
  %42 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20620
  %bandwidth47 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %42, i32 0, i32 62, !dbg !20621
  %43 = load i32, i32* %i, align 4, !dbg !20622
  %44 = load i32, i32* %j, align 4, !dbg !20623
  %add48 = add i32 %43, %44, !dbg !20624
  %idxprom49 = zext i32 %add48 to i64, !dbg !20620
  %arrayidx50 = getelementptr [64 x i8], [64 x i8]* %bandwidth47, i64 0, i64 %idxprom49, !dbg !20620
  %45 = load i8, i8* %arrayidx50, align 1, !dbg !20625
  %conv51 = zext i8 %45 to i32, !dbg !20625
  %add52 = add i32 %conv51, %41, !dbg !20625
  %conv53 = trunc i32 %add52 to i8, !dbg !20625
  store i8 %conv53, i8* %arrayidx50, align 1, !dbg !20625
  br label %if.end66, !dbg !20620

if.else54:                                        ; preds = %for.body44
  %46 = load i32, i32* %c_mask, align 4, !dbg !20626
  %47 = load i32, i32* %m, align 4, !dbg !20628
  %and55 = and i32 %46, %47, !dbg !20629
  %tobool56 = icmp ne i32 %and55, 0, !dbg !20629
  br i1 %tobool56, label %if.then57, label %if.end65, !dbg !20630

if.then57:                                        ; preds = %if.else54
  %48 = load i32, i32* %c_usecs, align 4, !dbg !20631
  %49 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20632
  %bandwidth58 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %49, i32 0, i32 62, !dbg !20633
  %50 = load i32, i32* %i, align 4, !dbg !20634
  %51 = load i32, i32* %j, align 4, !dbg !20635
  %add59 = add i32 %50, %51, !dbg !20636
  %idxprom60 = zext i32 %add59 to i64, !dbg !20632
  %arrayidx61 = getelementptr [64 x i8], [64 x i8]* %bandwidth58, i64 0, i64 %idxprom60, !dbg !20632
  %52 = load i8, i8* %arrayidx61, align 1, !dbg !20637
  %conv62 = zext i8 %52 to i32, !dbg !20637
  %add63 = add i32 %conv62, %48, !dbg !20637
  %conv64 = trunc i32 %add63 to i8, !dbg !20637
  store i8 %conv64, i8* %arrayidx61, align 1, !dbg !20637
  br label %if.end65, !dbg !20632

if.end65:                                         ; preds = %if.then57, %if.else54
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then46
  br label %for.inc67, !dbg !20638

for.inc67:                                        ; preds = %if.end66
  %53 = load i32, i32* %j, align 4, !dbg !20639
  %inc = add i32 %53, 1, !dbg !20639
  store i32 %inc, i32* %j, align 4, !dbg !20639
  %54 = load i32, i32* %m, align 4, !dbg !20640
  %shl68 = shl i32 %54, 1, !dbg !20640
  store i32 %shl68, i32* %m, align 4, !dbg !20640
  br label %for.cond41, !dbg !20641, !llvm.loop !20642

for.end69:                                        ; preds = %for.cond41
  br label %for.inc70, !dbg !20644

for.inc70:                                        ; preds = %for.end69
  %55 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20645
  %ps71 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %55, i32 0, i32 5, !dbg !20646
  %bw_uperiod72 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps71, i32 0, i32 11, !dbg !20647
  %56 = load i8, i8* %bw_uperiod72, align 4, !dbg !20647
  %conv73 = zext i8 %56 to i32, !dbg !20645
  %57 = load i32, i32* %i, align 4, !dbg !20648
  %add74 = add i32 %57, %conv73, !dbg !20648
  store i32 %add74, i32* %i, align 4, !dbg !20648
  br label %for.cond33, !dbg !20649, !llvm.loop !20650

for.end75:                                        ; preds = %for.cond33
  %58 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20652
  %ps76 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %58, i32 0, i32 5, !dbg !20653
  %udev = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps76, i32 0, i32 0, !dbg !20654
  %59 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !dbg !20654
  %call = call %struct.ehci_tt* @find_tt(%struct.usb_device* %59) #11, !dbg !20655
  store %struct.ehci_tt* %call, %struct.ehci_tt** %tt, align 8, !dbg !20656
  %60 = load i32, i32* %sign.addr, align 4, !dbg !20657
  %cmp77 = icmp sgt i32 %60, 0, !dbg !20659
  br i1 %cmp77, label %if.then79, label %if.else82, !dbg !20660

if.then79:                                        ; preds = %for.end75
  %61 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20661
  %ps80 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %61, i32 0, i32 5, !dbg !20662
  %ps_list = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps80, i32 0, i32 2, !dbg !20663
  %62 = load %struct.ehci_tt*, %struct.ehci_tt** %tt, align 8, !dbg !20664
  %ps_list81 = getelementptr inbounds %struct.ehci_tt, %struct.ehci_tt* %62, i32 0, i32 2, !dbg !20665
  call void @list_add_tail(%struct.list_head* %ps_list, %struct.list_head* %ps_list81) #11, !dbg !20666
  br label %if.end85, !dbg !20666

if.else82:                                        ; preds = %for.end75
  %63 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20667
  %ps83 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %63, i32 0, i32 5, !dbg !20668
  %ps_list84 = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps83, i32 0, i32 2, !dbg !20669
  call void @list_del(%struct.list_head* %ps_list84) #11, !dbg !20670
  br label %if.end85

if.end85:                                         ; preds = %if.else82, %if.then79
  %64 = load i32, i32* %uframe, align 4, !dbg !20671
  %shr86 = lshr i32 %64, 3, !dbg !20673
  store i32 %shr86, i32* %i, align 4, !dbg !20674
  br label %for.cond87, !dbg !20675

for.cond87:                                       ; preds = %for.inc97, %if.end85
  %65 = load i32, i32* %i, align 4, !dbg !20676
  %cmp88 = icmp ult i32 %65, 8, !dbg !20678
  br i1 %cmp88, label %for.body90, label %for.end101, !dbg !20679

for.body90:                                       ; preds = %for.cond87
  %66 = load i32, i32* %tt_usecs, align 4, !dbg !20680
  %67 = load %struct.ehci_tt*, %struct.ehci_tt** %tt, align 8, !dbg !20681
  %bandwidth91 = getelementptr inbounds %struct.ehci_tt, %struct.ehci_tt* %67, i32 0, i32 0, !dbg !20682
  %68 = load i32, i32* %i, align 4, !dbg !20683
  %idxprom92 = zext i32 %68 to i64, !dbg !20681
  %arrayidx93 = getelementptr [8 x i16], [8 x i16]* %bandwidth91, i64 0, i64 %idxprom92, !dbg !20681
  %69 = load i16, i16* %arrayidx93, align 2, !dbg !20684
  %conv94 = zext i16 %69 to i32, !dbg !20684
  %add95 = add i32 %conv94, %66, !dbg !20684
  %conv96 = trunc i32 %add95 to i16, !dbg !20684
  store i16 %conv96, i16* %arrayidx93, align 2, !dbg !20684
  br label %for.inc97, !dbg !20681

for.inc97:                                        ; preds = %for.body90
  %70 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20685
  %ps98 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %70, i32 0, i32 5, !dbg !20686
  %bw_period = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps98, i32 0, i32 12, !dbg !20687
  %71 = load i8, i8* %bw_period, align 1, !dbg !20687
  %conv99 = zext i8 %71 to i32, !dbg !20685
  %72 = load i32, i32* %i, align 4, !dbg !20688
  %add100 = add i32 %72, %conv99, !dbg !20688
  store i32 %add100, i32* %i, align 4, !dbg !20688
  br label %for.cond87, !dbg !20689, !llvm.loop !20690

for.end101:                                       ; preds = %for.cond87
  br label %if.end102

if.end102:                                        ; preds = %if.then, %for.end101, %for.end
  ret void, !dbg !20692
}

; Function Attrs: noredzone
declare dso_local void @usb_amd_quirk_pll_disable() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @itd_init(%struct.ehci_hcd* %ehci, %struct.ehci_iso_stream* %stream, %struct.ehci_itd* %itd) #0 !dbg !20693 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %stream.addr = alloca %struct.ehci_iso_stream*, align 8
  %itd.addr = alloca %struct.ehci_itd*, align 8
  %i = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !20696, metadata !DIExpression()), !dbg !20697
  store %struct.ehci_iso_stream* %stream, %struct.ehci_iso_stream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream.addr, metadata !20698, metadata !DIExpression()), !dbg !20699
  store %struct.ehci_itd* %itd, %struct.ehci_itd** %itd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_itd** %itd.addr, metadata !20700, metadata !DIExpression()), !dbg !20701
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20702, metadata !DIExpression()), !dbg !20703
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20704
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %0, i32 1) #11, !dbg !20704
  %1 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20705
  %hw_next = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %1, i32 0, i32 0, !dbg !20706
  store i32 %call, i32* %hw_next, align 32, !dbg !20707
  %2 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20708
  %buf0 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %2, i32 0, i32 11, !dbg !20709
  %3 = load i32, i32* %buf0, align 8, !dbg !20709
  %4 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20710
  %hw_bufp = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %4, i32 0, i32 2, !dbg !20711
  %arrayidx = getelementptr [7 x i32], [7 x i32]* %hw_bufp, i64 0, i64 0, !dbg !20710
  store i32 %3, i32* %arrayidx, align 4, !dbg !20712
  %5 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20713
  %buf1 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %5, i32 0, i32 12, !dbg !20714
  %6 = load i32, i32* %buf1, align 4, !dbg !20714
  %7 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20715
  %hw_bufp1 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %7, i32 0, i32 2, !dbg !20716
  %arrayidx2 = getelementptr [7 x i32], [7 x i32]* %hw_bufp1, i64 0, i64 1, !dbg !20715
  store i32 %6, i32* %arrayidx2, align 4, !dbg !20717
  %8 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20718
  %buf2 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %8, i32 0, i32 13, !dbg !20719
  %9 = load i32, i32* %buf2, align 8, !dbg !20719
  %10 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20720
  %hw_bufp3 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %10, i32 0, i32 2, !dbg !20721
  %arrayidx4 = getelementptr [7 x i32], [7 x i32]* %hw_bufp3, i64 0, i64 2, !dbg !20720
  store i32 %9, i32* %arrayidx4, align 4, !dbg !20722
  store i32 0, i32* %i, align 4, !dbg !20723
  br label %for.cond, !dbg !20725

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %i, align 4, !dbg !20726
  %cmp = icmp slt i32 %11, 8, !dbg !20728
  br i1 %cmp, label %for.body, label %for.end, !dbg !20729

for.body:                                         ; preds = %for.cond
  %12 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20730
  %index = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %12, i32 0, i32 11, !dbg !20731
  %13 = load i32, i32* %i, align 4, !dbg !20732
  %idxprom = sext i32 %13 to i64, !dbg !20730
  %arrayidx5 = getelementptr [8 x i32], [8 x i32]* %index, i64 0, i64 %idxprom, !dbg !20730
  store i32 -1, i32* %arrayidx5, align 4, !dbg !20733
  br label %for.inc, !dbg !20730

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !20734
  %inc = add i32 %14, 1, !dbg !20734
  store i32 %inc, i32* %i, align 4, !dbg !20734
  br label %for.cond, !dbg !20735, !llvm.loop !20736

for.end:                                          ; preds = %for.cond
  ret void, !dbg !20738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @itd_patch(%struct.ehci_hcd* %ehci, %struct.ehci_itd* %itd, %struct.ehci_iso_sched* %iso_sched, i32 %index, i16 zeroext %uframe) #0 !dbg !20739 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %itd.addr = alloca %struct.ehci_itd*, align 8
  %iso_sched.addr = alloca %struct.ehci_iso_sched*, align 8
  %index.addr = alloca i32, align 4
  %uframe.addr = alloca i16, align 2
  %uf = alloca %struct.ehci_iso_packet*, align 8
  %pg = alloca i32, align 4
  %bufp26 = alloca i64, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !20742, metadata !DIExpression()), !dbg !20743
  store %struct.ehci_itd* %itd, %struct.ehci_itd** %itd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_itd** %itd.addr, metadata !20744, metadata !DIExpression()), !dbg !20745
  store %struct.ehci_iso_sched* %iso_sched, %struct.ehci_iso_sched** %iso_sched.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_sched** %iso_sched.addr, metadata !20746, metadata !DIExpression()), !dbg !20747
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !20748, metadata !DIExpression()), !dbg !20749
  store i16 %uframe, i16* %uframe.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %uframe.addr, metadata !20750, metadata !DIExpression()), !dbg !20751
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_packet** %uf, metadata !20752, metadata !DIExpression()), !dbg !20753
  %0 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched.addr, align 8, !dbg !20754
  %packet = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %0, i32 0, i32 3, !dbg !20755
  %1 = load i32, i32* %index.addr, align 4, !dbg !20756
  %idxprom = zext i32 %1 to i64, !dbg !20754
  %arrayidx = getelementptr [0 x %struct.ehci_iso_packet], [0 x %struct.ehci_iso_packet]* %packet, i64 0, i64 %idxprom, !dbg !20754
  store %struct.ehci_iso_packet* %arrayidx, %struct.ehci_iso_packet** %uf, align 8, !dbg !20753
  call void @llvm.dbg.declare(metadata i32* %pg, metadata !20757, metadata !DIExpression()), !dbg !20758
  %2 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20759
  %pg1 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %2, i32 0, i32 10, !dbg !20760
  %3 = load i32, i32* %pg1, align 4, !dbg !20760
  store i32 %3, i32* %pg, align 4, !dbg !20758
  %4 = load i16, i16* %uframe.addr, align 2, !dbg !20761
  %conv = zext i16 %4 to i32, !dbg !20761
  %and = and i32 %conv, 7, !dbg !20761
  %conv2 = trunc i32 %and to i16, !dbg !20761
  store i16 %conv2, i16* %uframe.addr, align 2, !dbg !20761
  %5 = load i32, i32* %index.addr, align 4, !dbg !20762
  %6 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20763
  %index3 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %6, i32 0, i32 11, !dbg !20764
  %7 = load i16, i16* %uframe.addr, align 2, !dbg !20765
  %idxprom4 = zext i16 %7 to i64, !dbg !20763
  %arrayidx5 = getelementptr [8 x i32], [8 x i32]* %index3, i64 0, i64 %idxprom4, !dbg !20763
  store i32 %5, i32* %arrayidx5, align 4, !dbg !20766
  %8 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %uf, align 8, !dbg !20767
  %transaction = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %8, i32 0, i32 1, !dbg !20768
  %9 = load i32, i32* %transaction, align 8, !dbg !20768
  %10 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20769
  %hw_transaction = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %10, i32 0, i32 1, !dbg !20770
  %11 = load i16, i16* %uframe.addr, align 2, !dbg !20771
  %idxprom6 = zext i16 %11 to i64, !dbg !20769
  %arrayidx7 = getelementptr [8 x i32], [8 x i32]* %hw_transaction, i64 0, i64 %idxprom6, !dbg !20769
  store i32 %9, i32* %arrayidx7, align 4, !dbg !20772
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20773
  %13 = load i32, i32* %pg, align 4, !dbg !20774
  %shl = shl i32 %13, 12, !dbg !20775
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %12, i32 %shl) #11, !dbg !20776
  %14 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20777
  %hw_transaction8 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %14, i32 0, i32 1, !dbg !20778
  %15 = load i16, i16* %uframe.addr, align 2, !dbg !20779
  %idxprom9 = zext i16 %15 to i64, !dbg !20777
  %arrayidx10 = getelementptr [8 x i32], [8 x i32]* %hw_transaction8, i64 0, i64 %idxprom9, !dbg !20777
  %16 = load i32, i32* %arrayidx10, align 4, !dbg !20780
  %or = or i32 %16, %call, !dbg !20780
  store i32 %or, i32* %arrayidx10, align 4, !dbg !20780
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20781
  %18 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %uf, align 8, !dbg !20782
  %bufp = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %18, i32 0, i32 0, !dbg !20783
  %19 = load i64, i64* %bufp, align 8, !dbg !20783
  %and11 = and i64 %19, 4294967295, !dbg !20784
  %conv12 = trunc i64 %and11 to i32, !dbg !20782
  %call13 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %17, i32 %conv12) #11, !dbg !20785
  %20 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20786
  %hw_bufp = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %20, i32 0, i32 2, !dbg !20787
  %21 = load i32, i32* %pg, align 4, !dbg !20788
  %idxprom14 = zext i32 %21 to i64, !dbg !20786
  %arrayidx15 = getelementptr [7 x i32], [7 x i32]* %hw_bufp, i64 0, i64 %idxprom14, !dbg !20786
  %22 = load i32, i32* %arrayidx15, align 4, !dbg !20789
  %or16 = or i32 %22, %call13, !dbg !20789
  store i32 %or16, i32* %arrayidx15, align 4, !dbg !20789
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20790
  %24 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %uf, align 8, !dbg !20791
  %bufp17 = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %24, i32 0, i32 0, !dbg !20792
  %25 = load i64, i64* %bufp17, align 8, !dbg !20792
  %shr = lshr i64 %25, 32, !dbg !20793
  %conv18 = trunc i64 %shr to i32, !dbg !20794
  %call19 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %23, i32 %conv18) #11, !dbg !20795
  %26 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20796
  %hw_bufp_hi = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %26, i32 0, i32 3, !dbg !20797
  %27 = load i32, i32* %pg, align 4, !dbg !20798
  %idxprom20 = zext i32 %27 to i64, !dbg !20796
  %arrayidx21 = getelementptr [7 x i32], [7 x i32]* %hw_bufp_hi, i64 0, i64 %idxprom20, !dbg !20796
  %28 = load i32, i32* %arrayidx21, align 4, !dbg !20799
  %or22 = or i32 %28, %call19, !dbg !20799
  store i32 %or22, i32* %arrayidx21, align 4, !dbg !20799
  %29 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %uf, align 8, !dbg !20800
  %cross = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %29, i32 0, i32 2, !dbg !20800
  %30 = load i8, i8* %cross, align 4, !dbg !20800
  %tobool = icmp ne i8 %30, 0, !dbg !20800
  %lnot = xor i1 %tobool, true, !dbg !20800
  %lnot23 = xor i1 %lnot, true, !dbg !20800
  %lnot.ext = zext i1 %lnot23 to i32, !dbg !20800
  %conv24 = sext i32 %lnot.ext to i64, !dbg !20800
  %tobool25 = icmp ne i64 %conv24, 0, !dbg !20800
  br i1 %tobool25, label %if.then, label %if.end, !dbg !20802

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %bufp26, metadata !20803, metadata !DIExpression()), !dbg !20805
  %31 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %uf, align 8, !dbg !20806
  %bufp27 = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %31, i32 0, i32 0, !dbg !20807
  %32 = load i64, i64* %bufp27, align 8, !dbg !20807
  %add = add i64 %32, 4096, !dbg !20808
  store i64 %add, i64* %bufp26, align 8, !dbg !20805
  %33 = load i32, i32* %pg, align 4, !dbg !20809
  %inc = add i32 %33, 1, !dbg !20809
  store i32 %inc, i32* %pg, align 4, !dbg !20809
  %34 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20810
  %pg28 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %34, i32 0, i32 10, !dbg !20811
  store i32 %inc, i32* %pg28, align 4, !dbg !20812
  %35 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20813
  %36 = load i64, i64* %bufp26, align 8, !dbg !20814
  %and29 = and i64 %36, 4294967295, !dbg !20815
  %conv30 = trunc i64 %and29 to i32, !dbg !20814
  %call31 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %35, i32 %conv30) #11, !dbg !20816
  %37 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20817
  %hw_bufp32 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %37, i32 0, i32 2, !dbg !20818
  %38 = load i32, i32* %pg, align 4, !dbg !20819
  %idxprom33 = zext i32 %38 to i64, !dbg !20817
  %arrayidx34 = getelementptr [7 x i32], [7 x i32]* %hw_bufp32, i64 0, i64 %idxprom33, !dbg !20817
  %39 = load i32, i32* %arrayidx34, align 4, !dbg !20820
  %or35 = or i32 %39, %call31, !dbg !20820
  store i32 %or35, i32* %arrayidx34, align 4, !dbg !20820
  %40 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20821
  %41 = load i64, i64* %bufp26, align 8, !dbg !20822
  %shr36 = lshr i64 %41, 32, !dbg !20823
  %conv37 = trunc i64 %shr36 to i32, !dbg !20824
  %call38 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %40, i32 %conv37) #11, !dbg !20825
  %42 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20826
  %hw_bufp_hi39 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %42, i32 0, i32 3, !dbg !20827
  %43 = load i32, i32* %pg, align 4, !dbg !20828
  %idxprom40 = zext i32 %43 to i64, !dbg !20826
  %arrayidx41 = getelementptr [7 x i32], [7 x i32]* %hw_bufp_hi39, i64 0, i64 %idxprom40, !dbg !20826
  %44 = load i32, i32* %arrayidx41, align 4, !dbg !20829
  %or42 = or i32 %44, %call38, !dbg !20829
  store i32 %or42, i32* %arrayidx41, align 4, !dbg !20829
  br label %if.end, !dbg !20830

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !20831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @itd_link(%struct.ehci_hcd* %ehci, i32 %frame, %struct.ehci_itd* %itd) #0 !dbg !20832 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %frame.addr = alloca i32, align 4
  %itd.addr = alloca %struct.ehci_itd*, align 8
  %prev = alloca %union.ehci_shadow*, align 8
  %hw_p = alloca i32*, align 8
  %here = alloca %union.ehci_shadow, align 8
  %type = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !20835, metadata !DIExpression()), !dbg !20836
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !20837, metadata !DIExpression()), !dbg !20838
  store %struct.ehci_itd* %itd, %struct.ehci_itd** %itd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_itd** %itd.addr, metadata !20839, metadata !DIExpression()), !dbg !20840
  call void @llvm.dbg.declare(metadata %union.ehci_shadow** %prev, metadata !20841, metadata !DIExpression()), !dbg !20842
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20843
  %pshadow = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 28, !dbg !20844
  %1 = load %union.ehci_shadow*, %union.ehci_shadow** %pshadow, align 8, !dbg !20844
  %2 = load i32, i32* %frame.addr, align 4, !dbg !20845
  %idxprom = zext i32 %2 to i64, !dbg !20843
  %arrayidx = getelementptr %union.ehci_shadow, %union.ehci_shadow* %1, i64 %idxprom, !dbg !20843
  store %union.ehci_shadow* %arrayidx, %union.ehci_shadow** %prev, align 8, !dbg !20842
  call void @llvm.dbg.declare(metadata i32** %hw_p, metadata !20846, metadata !DIExpression()), !dbg !20847
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20848
  %periodic = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 24, !dbg !20849
  %4 = load i32*, i32** %periodic, align 8, !dbg !20849
  %5 = load i32, i32* %frame.addr, align 4, !dbg !20850
  %idxprom1 = zext i32 %5 to i64, !dbg !20848
  %arrayidx2 = getelementptr i32, i32* %4, i64 %idxprom1, !dbg !20848
  store i32* %arrayidx2, i32** %hw_p, align 8, !dbg !20847
  call void @llvm.dbg.declare(metadata %union.ehci_shadow* %here, metadata !20851, metadata !DIExpression()), !dbg !20852
  %6 = load %union.ehci_shadow*, %union.ehci_shadow** %prev, align 8, !dbg !20853
  %7 = bitcast %union.ehci_shadow* %here to i8*, !dbg !20854
  %8 = bitcast %union.ehci_shadow* %6 to i8*, !dbg !20854
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 8, i1 false), !dbg !20854
  call void @llvm.dbg.declare(metadata i32* %type, metadata !20855, metadata !DIExpression()), !dbg !20856
  store i32 0, i32* %type, align 4, !dbg !20856
  br label %while.cond, !dbg !20857

while.cond:                                       ; preds = %if.end, %entry
  %ptr = bitcast %union.ehci_shadow* %here to i8**, !dbg !20858
  %9 = load i8*, i8** %ptr, align 8, !dbg !20858
  %tobool = icmp ne i8* %9, null, !dbg !20857
  br i1 %tobool, label %while.body, label %while.end, !dbg !20857

while.body:                                       ; preds = %while.cond
  %10 = load i32*, i32** %hw_p, align 8, !dbg !20859
  %11 = load i32, i32* %10, align 4, !dbg !20859
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20859
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %12, i32 6) #11, !dbg !20859
  %and = and i32 %11, %call, !dbg !20859
  store i32 %and, i32* %type, align 4, !dbg !20861
  %13 = load i32, i32* %type, align 4, !dbg !20862
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20864
  %call3 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %14, i32 2) #11, !dbg !20865
  %cmp = icmp eq i32 %13, %call3, !dbg !20866
  br i1 %cmp, label %if.then, label %if.end, !dbg !20867

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !20868

if.end:                                           ; preds = %while.body
  %15 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20869
  %16 = load %union.ehci_shadow*, %union.ehci_shadow** %prev, align 8, !dbg !20870
  %17 = load i32, i32* %type, align 4, !dbg !20871
  %call4 = call %union.ehci_shadow* @periodic_next_shadow(%struct.ehci_hcd* %15, %union.ehci_shadow* %16, i32 %17) #11, !dbg !20872
  store %union.ehci_shadow* %call4, %union.ehci_shadow** %prev, align 8, !dbg !20873
  %18 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20874
  %19 = load i32, i32* %type, align 4, !dbg !20875
  %call5 = call i32* @shadow_next_periodic(%struct.ehci_hcd* %18, %union.ehci_shadow* %here, i32 %19) #11, !dbg !20876
  store i32* %call5, i32** %hw_p, align 8, !dbg !20877
  %20 = load %union.ehci_shadow*, %union.ehci_shadow** %prev, align 8, !dbg !20878
  %21 = bitcast %union.ehci_shadow* %here to i8*, !dbg !20879
  %22 = bitcast %union.ehci_shadow* %20 to i8*, !dbg !20879
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !20879
  br label %while.cond, !dbg !20857, !llvm.loop !20880

while.end:                                        ; preds = %if.then, %while.cond
  %23 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20882
  %itd_next = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %23, i32 0, i32 5, !dbg !20883
  %24 = bitcast %union.ehci_shadow* %itd_next to i8*, !dbg !20884
  %25 = bitcast %union.ehci_shadow* %here to i8*, !dbg !20884
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 8, i1 false), !dbg !20884
  %26 = load i32*, i32** %hw_p, align 8, !dbg !20885
  %27 = load i32, i32* %26, align 4, !dbg !20886
  %28 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20887
  %hw_next = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %28, i32 0, i32 0, !dbg !20888
  store i32 %27, i32* %hw_next, align 32, !dbg !20889
  %29 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20890
  %30 = load %union.ehci_shadow*, %union.ehci_shadow** %prev, align 8, !dbg !20891
  %itd6 = bitcast %union.ehci_shadow* %30 to %struct.ehci_itd**, !dbg !20892
  store %struct.ehci_itd* %29, %struct.ehci_itd** %itd6, align 8, !dbg !20893
  %31 = load i32, i32* %frame.addr, align 4, !dbg !20894
  %32 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20895
  %frame7 = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %32, i32 0, i32 9, !dbg !20896
  store i32 %31, i32* %frame7, align 16, !dbg !20897
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !20898, !srcloc !20899
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20900
  %34 = load %struct.ehci_itd*, %struct.ehci_itd** %itd.addr, align 8, !dbg !20901
  %itd_dma = getelementptr inbounds %struct.ehci_itd, %struct.ehci_itd* %34, i32 0, i32 4, !dbg !20902
  %35 = load i64, i64* %itd_dma, align 32, !dbg !20902
  %conv = trunc i64 %35 to i32, !dbg !20901
  %call8 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %33, i32 %conv) #11, !dbg !20903
  %36 = load i32*, i32** %hw_p, align 8, !dbg !20904
  store i32 %call8, i32* %36, align 4, !dbg !20905
  ret void, !dbg !20906
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sitd_urb_transaction(%struct.ehci_iso_stream* %stream, %struct.ehci_hcd* %ehci, %struct.urb* %urb, i32 %mem_flags) #0 !dbg !20907 {
entry:
  %lock.addr.i86 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i86, metadata !6709, metadata !DIExpression()), !dbg !20908
  %flags.addr.i87 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i87, metadata !6715, metadata !DIExpression()), !dbg !20917
  %tmp.i88 = alloca i32, align 4
  %tmp8.i89 = alloca i32, align 4
  %lock.addr.i84 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i84, metadata !6695, metadata !DIExpression()), !dbg !20918
  %lock.addr.i79 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i79, metadata !6709, metadata !DIExpression()), !dbg !20925
  %flags.addr.i80 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i80, metadata !6715, metadata !DIExpression()), !dbg !20927
  %tmp.i81 = alloca i32, align 4
  %tmp8.i82 = alloca i32, align 4
  %lock.addr.i77 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i77, metadata !6709, metadata !DIExpression()), !dbg !20928
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !6715, metadata !DIExpression()), !dbg !20930
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6695, metadata !DIExpression()), !dbg !20931
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct.ehci_iso_stream*, align 8
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %mem_flags.addr = alloca i32, align 4
  %sitd = alloca %struct.ehci_sitd*, align 8
  %sitd_dma = alloca i64, align 8
  %i = alloca i32, align 4
  %iso_sched = alloca %struct.ehci_iso_sched*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp33 = alloca %struct.ehci_sitd*, align 8
  %__dummy43 = alloca i64, align 8
  %__dummy244 = alloca i64, align 8
  %tmp47 = alloca i32, align 4
  %__dummy51 = alloca i64, align 8
  %__dummy252 = alloca i64, align 8
  %tmp55 = alloca i32, align 4
  store %struct.ehci_iso_stream* %stream, %struct.ehci_iso_stream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream.addr, metadata !20938, metadata !DIExpression()), !dbg !20939
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !20940, metadata !DIExpression()), !dbg !20941
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !20942, metadata !DIExpression()), !dbg !20943
  store i32 %mem_flags, i32* %mem_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mem_flags.addr, metadata !20944, metadata !DIExpression()), !dbg !20945
  call void @llvm.dbg.declare(metadata %struct.ehci_sitd** %sitd, metadata !20946, metadata !DIExpression()), !dbg !20947
  call void @llvm.dbg.declare(metadata i64* %sitd_dma, metadata !20948, metadata !DIExpression()), !dbg !20949
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20950, metadata !DIExpression()), !dbg !20951
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_sched** %iso_sched, metadata !20952, metadata !DIExpression()), !dbg !20953
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !20954, metadata !DIExpression()), !dbg !20955
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20956
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 24, !dbg !20957
  %1 = load i32, i32* %number_of_packets, align 4, !dbg !20957
  %2 = load i32, i32* %mem_flags.addr, align 4, !dbg !20958
  %call = call %struct.ehci_iso_sched* @iso_sched_alloc(i32 %1, i32 %2) #11, !dbg !20959
  store %struct.ehci_iso_sched* %call, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !20960
  %3 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !20961
  %cmp = icmp eq %struct.ehci_iso_sched* %3, null, !dbg !20963
  br i1 %cmp, label %if.then, label %if.end, !dbg !20964

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !20965
  br label %return, !dbg !20965

if.end:                                           ; preds = %entry
  %4 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20966
  %5 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !20967
  %6 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20968
  %7 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20969
  call void @sitd_sched_init(%struct.ehci_hcd* %4, %struct.ehci_iso_sched* %5, %struct.ehci_iso_stream* %6, %struct.urb* %7) #11, !dbg !20970
  br label %do.body, !dbg !20971

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !20972

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !20973, metadata !DIExpression()), !dbg !20975
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !20976, metadata !DIExpression()), !dbg !20975
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !20975
  %conv = zext i1 %cmp2 to i32, !dbg !20975
  store i32 1, i32* %tmp, align 4, !dbg !20975
  %8 = load i32, i32* %tmp, align 4, !dbg !20975
  br label %do.body3, !dbg !20977

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !20978

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !20979

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !20981, metadata !DIExpression()), !dbg !20984
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !20985, metadata !DIExpression()), !dbg !20984
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !20984
  %conv9 = zext i1 %cmp8 to i32, !dbg !20984
  store i32 1, i32* %tmp10, align 4, !dbg !20984
  %9 = load i32, i32* %tmp10, align 4, !dbg !20984
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !20986
  store i64 %call11, i64* %flags, align 8, !dbg !20986
  br label %do.end, !dbg !20986

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !20979

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !20978

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !20987, !srcloc !20988
  br label %do.body14, !dbg !20987

do.body14:                                        ; preds = %do.body13
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !20989
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %10, i32 0, i32 11, !dbg !20989
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !20990
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !20991
  %rlock.i = bitcast %union.anon.0* %12 to %struct.raw_spinlock*, !dbg !20991
  br label %do.end16, !dbg !20989

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !20987

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !20978

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !20977

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !20972

do.end20:                                         ; preds = %do.end19
  store i32 0, i32* %i, align 4, !dbg !20992
  br label %for.cond, !dbg !20993

for.cond:                                         ; preds = %for.inc, %do.end20
  %13 = load i32, i32* %i, align 4, !dbg !20994
  %14 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !20995
  %number_of_packets21 = getelementptr inbounds %struct.urb, %struct.urb* %14, i32 0, i32 24, !dbg !20996
  %15 = load i32, i32* %number_of_packets21, align 4, !dbg !20996
  %cmp22 = icmp slt i32 %13, %15, !dbg !20997
  br i1 %cmp22, label %for.body, label %for.end, !dbg !20998

for.body:                                         ; preds = %for.cond
  %16 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !20999
  %free_list = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %16, i32 0, i32 4, !dbg !20999
  %call24 = call i32 @list_empty(%struct.list_head* %free_list) #11, !dbg !20999
  %tobool = icmp ne i32 %call24, 0, !dbg !20999
  %lnot = xor i1 %tobool, true, !dbg !20999
  %lnot25 = xor i1 %lnot, true, !dbg !20999
  %lnot26 = xor i1 %lnot25, true, !dbg !20999
  %lnot.ext = zext i1 %lnot26 to i32, !dbg !20999
  %conv27 = sext i32 %lnot.ext to i64, !dbg !20999
  %tobool28 = icmp ne i64 %conv27, 0, !dbg !20999
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !21000

if.then29:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !21001, metadata !DIExpression()), !dbg !21004
  %17 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21004
  %free_list30 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %17, i32 0, i32 4, !dbg !21004
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %free_list30, i32 0, i32 0, !dbg !21004
  %18 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !21004
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !21004
  store i8* %19, i8** %__mptr, align 8, !dbg !21004
  br label %do.body31, !dbg !21004

do.body31:                                        ; preds = %if.then29
  br label %do.end32, !dbg !21005

do.end32:                                         ; preds = %do.body31
  %20 = load i8*, i8** %__mptr, align 8, !dbg !21004
  %add.ptr = getelementptr i8, i8* %20, i64 -72, !dbg !21004
  %21 = bitcast i8* %add.ptr to %struct.ehci_sitd*, !dbg !21004
  store %struct.ehci_sitd* %21, %struct.ehci_sitd** %tmp33, align 8, !dbg !21005
  %22 = load %struct.ehci_sitd*, %struct.ehci_sitd** %tmp33, align 8, !dbg !21004
  store %struct.ehci_sitd* %22, %struct.ehci_sitd** %sitd, align 8, !dbg !21007
  %23 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !21008
  %frame = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %23, i32 0, i32 12, !dbg !21010
  %24 = load i32, i32* %frame, align 8, !dbg !21010
  %25 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21011
  %now_frame = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %25, i32 0, i32 33, !dbg !21012
  %26 = load i32, i32* %now_frame, align 8, !dbg !21012
  %cmp34 = icmp eq i32 %24, %26, !dbg !21013
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !21014

if.then36:                                        ; preds = %do.end32
  br label %alloc_sitd, !dbg !21015

if.end37:                                         ; preds = %do.end32
  %27 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !21016
  %sitd_list = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %27, i32 0, i32 11, !dbg !21017
  call void @list_del(%struct.list_head* %sitd_list) #11, !dbg !21018
  %28 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !21019
  %sitd_dma38 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %28, i32 0, i32 7, !dbg !21020
  %29 = load i64, i64* %sitd_dma38, align 8, !dbg !21020
  store i64 %29, i64* %sitd_dma, align 8, !dbg !21021
  br label %if.end72, !dbg !21022

if.else:                                          ; preds = %for.body
  br label %alloc_sitd, !dbg !21023

alloc_sitd:                                       ; preds = %if.else, %if.then36
  call void @llvm.dbg.label(metadata !21024), !dbg !21025
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21026
  %lock39 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %30, i32 0, i32 11, !dbg !21027
  %31 = load i64, i64* %flags, align 8, !dbg !21028
  store %struct.spinlock* %lock39, %struct.spinlock** %lock.addr.i79, align 8
  store i64 %31, i64* %flags.addr.i80, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !21029
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !21029
  store i32 1, i32* %tmp.i81, align 4, !dbg !21029
  %32 = load i32, i32* %tmp.i81, align 4, !dbg !21029
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !21030
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !21030
  store i32 1, i32* %tmp8.i82, align 4, !dbg !21030
  %33 = load i32, i32* %tmp8.i82, align 4, !dbg !21030
  %34 = load i64, i64* %flags.addr.i80, align 8, !dbg !21031
  call void @arch_local_irq_restore(i64 %34) #12, !dbg !21031
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !21032, !srcloc !6997
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i79, align 8, !dbg !21033
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !21033
  %rlock.i83 = bitcast %union.anon.0* %36 to %struct.raw_spinlock*, !dbg !21033
  %37 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21034
  %sitd_pool = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %37, i32 0, i32 53, !dbg !21035
  %38 = load %struct.dma_pool*, %struct.dma_pool** %sitd_pool, align 8, !dbg !21035
  %39 = load i32, i32* %mem_flags.addr, align 4, !dbg !21036
  %call40 = call i8* @dma_pool_alloc(%struct.dma_pool* %38, i32 %39, i64* %sitd_dma) #11, !dbg !21037
  %40 = bitcast i8* %call40 to %struct.ehci_sitd*, !dbg !21037
  store %struct.ehci_sitd* %40, %struct.ehci_sitd** %sitd, align 8, !dbg !21038
  br label %do.body41, !dbg !21039

do.body41:                                        ; preds = %alloc_sitd
  br label %do.body42, !dbg !21040

do.body42:                                        ; preds = %do.body41
  call void @llvm.dbg.declare(metadata i64* %__dummy43, metadata !21041, metadata !DIExpression()), !dbg !21043
  call void @llvm.dbg.declare(metadata i64* %__dummy244, metadata !21044, metadata !DIExpression()), !dbg !21043
  %cmp45 = icmp eq i64* %__dummy43, %__dummy244, !dbg !21043
  %conv46 = zext i1 %cmp45 to i32, !dbg !21043
  store i32 1, i32* %tmp47, align 4, !dbg !21043
  %41 = load i32, i32* %tmp47, align 4, !dbg !21043
  br label %do.body48, !dbg !21045

do.body48:                                        ; preds = %do.body42
  br label %do.body49, !dbg !21046

do.body49:                                        ; preds = %do.body48
  br label %do.body50, !dbg !21047

do.body50:                                        ; preds = %do.body49
  call void @llvm.dbg.declare(metadata i64* %__dummy51, metadata !21049, metadata !DIExpression()), !dbg !21052
  call void @llvm.dbg.declare(metadata i64* %__dummy252, metadata !21053, metadata !DIExpression()), !dbg !21052
  %cmp53 = icmp eq i64* %__dummy51, %__dummy252, !dbg !21052
  %conv54 = zext i1 %cmp53 to i32, !dbg !21052
  store i32 1, i32* %tmp55, align 4, !dbg !21052
  %42 = load i32, i32* %tmp55, align 4, !dbg !21052
  %call56 = call i64 @arch_local_irq_save() #11, !dbg !21054
  store i64 %call56, i64* %flags, align 8, !dbg !21054
  br label %do.end57, !dbg !21054

do.end57:                                         ; preds = %do.body50
  br label %do.end58, !dbg !21047

do.end58:                                         ; preds = %do.end57
  br label %do.body59, !dbg !21046

do.body59:                                        ; preds = %do.end58
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !21055, !srcloc !21056
  br label %do.body60, !dbg !21055

do.body60:                                        ; preds = %do.body59
  %43 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21057
  %lock61 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %43, i32 0, i32 11, !dbg !21057
  store %struct.spinlock* %lock61, %struct.spinlock** %lock.addr.i84, align 8
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i84, align 8, !dbg !21058
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !21059
  %rlock.i85 = bitcast %union.anon.0* %45 to %struct.raw_spinlock*, !dbg !21059
  br label %do.end63, !dbg !21057

do.end63:                                         ; preds = %do.body60
  br label %do.end64, !dbg !21055

do.end64:                                         ; preds = %do.end63
  br label %do.end65, !dbg !21046

do.end65:                                         ; preds = %do.end64
  br label %do.end66, !dbg !21045

do.end66:                                         ; preds = %do.end65
  br label %do.end67, !dbg !21040

do.end67:                                         ; preds = %do.end66
  %46 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !21060
  %tobool68 = icmp ne %struct.ehci_sitd* %46, null, !dbg !21060
  br i1 %tobool68, label %if.end71, label %if.then69, !dbg !21061

if.then69:                                        ; preds = %do.end67
  %47 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21062
  %48 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !21063
  call void @iso_sched_free(%struct.ehci_iso_stream* %47, %struct.ehci_iso_sched* %48) #11, !dbg !21064
  %49 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21065
  %lock70 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %49, i32 0, i32 11, !dbg !21066
  %50 = load i64, i64* %flags, align 8, !dbg !21067
  store %struct.spinlock* %lock70, %struct.spinlock** %lock.addr.i86, align 8
  store i64 %50, i64* %flags.addr.i87, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !21068
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !21068
  store i32 1, i32* %tmp.i88, align 4, !dbg !21068
  %51 = load i32, i32* %tmp.i88, align 4, !dbg !21068
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !21069
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !21069
  store i32 1, i32* %tmp8.i89, align 4, !dbg !21069
  %52 = load i32, i32* %tmp8.i89, align 4, !dbg !21069
  %53 = load i64, i64* %flags.addr.i87, align 8, !dbg !21070
  call void @arch_local_irq_restore(i64 %53) #12, !dbg !21070
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !21071, !srcloc !6997
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i86, align 8, !dbg !21072
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !21072
  %rlock.i90 = bitcast %union.anon.0* %55 to %struct.raw_spinlock*, !dbg !21072
  store i32 -12, i32* %retval, align 4, !dbg !21073
  br label %return, !dbg !21073

if.end71:                                         ; preds = %do.end67
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.end37
  %56 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !21074
  %57 = bitcast %struct.ehci_sitd* %56 to i8*, !dbg !21075
  call void @llvm.memset.p0i8.i64(i8* align 32 %57, i8 0, i64 96, i1 false), !dbg !21075
  %58 = load i64, i64* %sitd_dma, align 8, !dbg !21076
  %59 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !21077
  %sitd_dma73 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %59, i32 0, i32 7, !dbg !21078
  store i64 %58, i64* %sitd_dma73, align 8, !dbg !21079
  %60 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !21080
  %frame74 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %60, i32 0, i32 12, !dbg !21081
  store i32 29999, i32* %frame74, align 8, !dbg !21082
  %61 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !21083
  %sitd_list75 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %61, i32 0, i32 11, !dbg !21084
  %62 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !21085
  %td_list = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %62, i32 0, i32 0, !dbg !21086
  call void @list_add(%struct.list_head* %sitd_list75, %struct.list_head* %td_list) #11, !dbg !21087
  br label %for.inc, !dbg !21088

for.inc:                                          ; preds = %if.end72
  %63 = load i32, i32* %i, align 4, !dbg !21089
  %inc = add i32 %63, 1, !dbg !21089
  store i32 %inc, i32* %i, align 4, !dbg !21089
  br label %for.cond, !dbg !21090, !llvm.loop !21091

for.end:                                          ; preds = %for.cond
  %64 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched, align 8, !dbg !21093
  %65 = bitcast %struct.ehci_iso_sched* %64 to i8*, !dbg !21093
  %66 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21094
  %hcpriv = getelementptr inbounds %struct.urb, %struct.urb* %66, i32 0, i32 2, !dbg !21095
  store i8* %65, i8** %hcpriv, align 8, !dbg !21096
  %67 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21097
  %error_count = getelementptr inbounds %struct.urb, %struct.urb* %67, i32 0, i32 26, !dbg !21098
  store i32 0, i32* %error_count, align 4, !dbg !21099
  %68 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21100
  %lock76 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %68, i32 0, i32 11, !dbg !21101
  %69 = load i64, i64* %flags, align 8, !dbg !21102
  store %struct.spinlock* %lock76, %struct.spinlock** %lock.addr.i77, align 8
  store i64 %69, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !389, metadata !6982, metadata !DIExpression()) #7, !dbg !21103
  call void @llvm.dbg.declare(metadata !389, metadata !6986, metadata !DIExpression()) #7, !dbg !21103
  store i32 1, i32* %tmp.i, align 4, !dbg !21103
  %70 = load i32, i32* %tmp.i, align 4, !dbg !21103
  call void @llvm.dbg.declare(metadata !389, metadata !6987, metadata !DIExpression()) #7, !dbg !21104
  call void @llvm.dbg.declare(metadata !389, metadata !6993, metadata !DIExpression()) #7, !dbg !21104
  store i32 1, i32* %tmp8.i, align 4, !dbg !21104
  %71 = load i32, i32* %tmp8.i, align 4, !dbg !21104
  %72 = load i64, i64* %flags.addr.i, align 8, !dbg !21105
  call void @arch_local_irq_restore(i64 %72) #12, !dbg !21105
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !21106, !srcloc !6997
  %73 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i77, align 8, !dbg !21107
  %74 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %73, i32 0, i32 0, !dbg !21107
  %rlock.i78 = bitcast %union.anon.0* %74 to %struct.raw_spinlock*, !dbg !21107
  store i32 0, i32* %retval, align 4, !dbg !21108
  br label %return, !dbg !21108

return:                                           ; preds = %for.end, %if.then69, %if.then
  %75 = load i32, i32* %retval, align 4, !dbg !21109
  ret i32 %75, !dbg !21109
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sitd_link_urb(%struct.ehci_hcd* %ehci, %struct.urb* %urb, i32 %mod, %struct.ehci_iso_stream* %stream) #0 !dbg !21110 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %mod.addr = alloca i32, align 4
  %stream.addr = alloca %struct.ehci_iso_stream*, align 8
  %packet = alloca i32, align 4
  %next_uframe = alloca i32, align 4
  %sched = alloca %struct.ehci_iso_sched*, align 8
  %sitd = alloca %struct.ehci_sitd*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.ehci_sitd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !21111, metadata !DIExpression()), !dbg !21112
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !21113, metadata !DIExpression()), !dbg !21114
  store i32 %mod, i32* %mod.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mod.addr, metadata !21115, metadata !DIExpression()), !dbg !21116
  store %struct.ehci_iso_stream* %stream, %struct.ehci_iso_stream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream.addr, metadata !21117, metadata !DIExpression()), !dbg !21118
  call void @llvm.dbg.declare(metadata i32* %packet, metadata !21119, metadata !DIExpression()), !dbg !21120
  call void @llvm.dbg.declare(metadata i32* %next_uframe, metadata !21121, metadata !DIExpression()), !dbg !21122
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_sched** %sched, metadata !21123, metadata !DIExpression()), !dbg !21124
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21125
  %hcpriv = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 2, !dbg !21126
  %1 = load i8*, i8** %hcpriv, align 8, !dbg !21126
  %2 = bitcast i8* %1 to %struct.ehci_iso_sched*, !dbg !21125
  store %struct.ehci_iso_sched* %2, %struct.ehci_iso_sched** %sched, align 8, !dbg !21124
  call void @llvm.dbg.declare(metadata %struct.ehci_sitd** %sitd, metadata !21127, metadata !DIExpression()), !dbg !21128
  %3 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21129
  %next_uframe1 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %3, i32 0, i32 6, !dbg !21130
  %4 = load i32, i32* %next_uframe1, align 8, !dbg !21130
  store i32 %4, i32* %next_uframe, align 4, !dbg !21131
  %5 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21132
  %td_list = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %5, i32 0, i32 3, !dbg !21134
  %call = call i32 @list_empty(%struct.list_head* %td_list) #11, !dbg !21135
  %tobool = icmp ne i32 %call, 0, !dbg !21135
  br i1 %tobool, label %if.then, label %if.end, !dbg !21136

if.then:                                          ; preds = %entry
  %6 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21137
  %bandwidth = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %6, i32 0, i32 10, !dbg !21138
  %7 = load i32, i32* %bandwidth, align 4, !dbg !21138
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21139
  %call2 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %8) #11, !dbg !21140
  %self = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call2, i32 0, i32 0, !dbg !21141
  %bandwidth_allocated = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self, i32 0, i32 13, !dbg !21142
  %9 = load i32, i32* %bandwidth_allocated, align 8, !dbg !21143
  %add = add i32 %9, %7, !dbg !21143
  store i32 %add, i32* %bandwidth_allocated, align 8, !dbg !21143
  br label %if.end, !dbg !21140

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21144
  %call3 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %10) #11, !dbg !21146
  %self4 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call3, i32 0, i32 0, !dbg !21147
  %bandwidth_isoc_reqs = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self4, i32 0, i32 15, !dbg !21148
  %11 = load i32, i32* %bandwidth_isoc_reqs, align 8, !dbg !21148
  %cmp = icmp eq i32 %11, 0, !dbg !21149
  br i1 %cmp, label %if.then5, label %if.end9, !dbg !21150

if.then5:                                         ; preds = %if.end
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21151
  %amd_pll_fix = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 58, !dbg !21154
  %bf.load = load i16, i16* %amd_pll_fix, align 4, !dbg !21154
  %bf.lshr = lshr i16 %bf.load, 9, !dbg !21154
  %bf.clear = and i16 %bf.lshr, 1, !dbg !21154
  %bf.cast = zext i16 %bf.clear to i32, !dbg !21154
  %cmp6 = icmp eq i32 %bf.cast, 1, !dbg !21155
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !21156

if.then7:                                         ; preds = %if.then5
  call void @usb_amd_quirk_pll_disable() #11, !dbg !21157
  br label %if.end8, !dbg !21157

if.end8:                                          ; preds = %if.then7, %if.then5
  br label %if.end9, !dbg !21158

if.end9:                                          ; preds = %if.end8, %if.end
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21159
  %call10 = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %13) #11, !dbg !21160
  %self11 = getelementptr inbounds %struct.usb_hcd, %struct.usb_hcd* %call10, i32 0, i32 0, !dbg !21161
  %bandwidth_isoc_reqs12 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %self11, i32 0, i32 15, !dbg !21162
  %14 = load i32, i32* %bandwidth_isoc_reqs12, align 8, !dbg !21163
  %inc = add i32 %14, 1, !dbg !21163
  store i32 %inc, i32* %bandwidth_isoc_reqs12, align 8, !dbg !21163
  %15 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !21164
  %first_packet = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %15, i32 0, i32 2, !dbg !21166
  %16 = load i32, i32* %first_packet, align 4, !dbg !21166
  store i32 %16, i32* %packet, align 4, !dbg !21167
  store %struct.ehci_sitd* null, %struct.ehci_sitd** %sitd, align 8, !dbg !21168
  br label %for.cond, !dbg !21169

for.cond:                                         ; preds = %for.inc, %if.end9
  %17 = load i32, i32* %packet, align 4, !dbg !21170
  %18 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21172
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %18, i32 0, i32 24, !dbg !21173
  %19 = load i32, i32* %number_of_packets, align 4, !dbg !21173
  %cmp13 = icmp slt i32 %17, %19, !dbg !21174
  br i1 %cmp13, label %for.body, label %for.end, !dbg !21175

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !21176

do.body:                                          ; preds = %for.body
  %20 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !21178
  %td_list14 = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %20, i32 0, i32 0, !dbg !21178
  %call15 = call i32 @list_empty(%struct.list_head* %td_list14) #11, !dbg !21178
  %tobool16 = icmp ne i32 %call15, 0, !dbg !21178
  %lnot = xor i1 %tobool16, true, !dbg !21178
  %lnot17 = xor i1 %lnot, true, !dbg !21178
  %lnot.ext = zext i1 %lnot17 to i32, !dbg !21178
  %conv = sext i32 %lnot.ext to i64, !dbg !21178
  %tobool18 = icmp ne i64 %conv, 0, !dbg !21178
  br i1 %tobool18, label %if.then19, label %if.end27, !dbg !21181

if.then19:                                        ; preds = %do.body
  br label %do.body20, !dbg !21178

do.body20:                                        ; preds = %if.then19
  br label %do.body21, !dbg !21182

do.body21:                                        ; preds = %do.body20
  br label %do.end, !dbg !21184

do.end:                                           ; preds = %do.body21
  br label %do.body22, !dbg !21182

do.body22:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.33, i64 0, i64 0), i32 2163, i32 0, i64 12) #7, !dbg !21186, !srcloc !21188
  br label %do.end23, !dbg !21186

do.end23:                                         ; preds = %do.body22
  br label %do.body24, !dbg !21182

do.body24:                                        ; preds = %do.end23
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 365) #7, !dbg !21189, !srcloc !21192
  unreachable, !dbg !21193

do.end25:                                         ; No predecessors!
  br label %do.end26, !dbg !21182

do.end26:                                         ; preds = %do.end25
  br label %if.end27, !dbg !21182

if.end27:                                         ; preds = %do.end26, %do.body
  br label %do.end28, !dbg !21181

do.end28:                                         ; preds = %if.end27
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !21194, metadata !DIExpression()), !dbg !21196
  %21 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !21196
  %td_list29 = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %21, i32 0, i32 0, !dbg !21196
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %td_list29, i32 0, i32 0, !dbg !21196
  %22 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !21196
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !21196
  store i8* %23, i8** %__mptr, align 8, !dbg !21196
  br label %do.body30, !dbg !21196

do.body30:                                        ; preds = %do.end28
  br label %do.end31, !dbg !21197

do.end31:                                         ; preds = %do.body30
  %24 = load i8*, i8** %__mptr, align 8, !dbg !21196
  %add.ptr = getelementptr i8, i8* %24, i64 -72, !dbg !21196
  %25 = bitcast i8* %add.ptr to %struct.ehci_sitd*, !dbg !21196
  store %struct.ehci_sitd* %25, %struct.ehci_sitd** %tmp, align 8, !dbg !21197
  %26 = load %struct.ehci_sitd*, %struct.ehci_sitd** %tmp, align 8, !dbg !21196
  store %struct.ehci_sitd* %26, %struct.ehci_sitd** %sitd, align 8, !dbg !21199
  %27 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !21200
  %sitd_list = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %27, i32 0, i32 11, !dbg !21201
  %28 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21202
  %td_list32 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %28, i32 0, i32 3, !dbg !21203
  call void @list_move_tail(%struct.list_head* %sitd_list, %struct.list_head* %td_list32) #11, !dbg !21204
  %29 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21205
  %30 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !21206
  %stream33 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %30, i32 0, i32 10, !dbg !21207
  store %struct.ehci_iso_stream* %29, %struct.ehci_iso_stream** %stream33, align 32, !dbg !21208
  %31 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21209
  %32 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !21210
  %urb34 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %32, i32 0, i32 9, !dbg !21211
  store %struct.urb* %31, %struct.urb** %urb34, align 8, !dbg !21212
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21213
  %34 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21214
  %35 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !21215
  %36 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !21216
  %37 = load i32, i32* %packet, align 4, !dbg !21217
  call void @sitd_patch(%struct.ehci_hcd* %33, %struct.ehci_iso_stream* %34, %struct.ehci_sitd* %35, %struct.ehci_iso_sched* %36, i32 %37) #11, !dbg !21218
  %38 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21219
  %39 = load i32, i32* %next_uframe, align 4, !dbg !21220
  %shr = lshr i32 %39, 3, !dbg !21221
  %40 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21222
  %periodic_size = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %40, i32 0, i32 23, !dbg !21223
  %41 = load i32, i32* %periodic_size, align 8, !dbg !21223
  %sub = sub i32 %41, 1, !dbg !21224
  %and = and i32 %shr, %sub, !dbg !21225
  %42 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd, align 8, !dbg !21226
  call void @sitd_link(%struct.ehci_hcd* %38, i32 %and, %struct.ehci_sitd* %42) #11, !dbg !21227
  %43 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21228
  %uperiod = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %43, i32 0, i32 8, !dbg !21229
  %44 = load i16, i16* %uperiod, align 8, !dbg !21229
  %conv35 = zext i16 %44 to i32, !dbg !21228
  %45 = load i32, i32* %next_uframe, align 4, !dbg !21230
  %add36 = add i32 %45, %conv35, !dbg !21230
  store i32 %add36, i32* %next_uframe, align 4, !dbg !21230
  br label %for.inc, !dbg !21231

for.inc:                                          ; preds = %do.end31
  %46 = load i32, i32* %packet, align 4, !dbg !21232
  %inc37 = add i32 %46, 1, !dbg !21232
  store i32 %inc37, i32* %packet, align 4, !dbg !21232
  br label %for.cond, !dbg !21233, !llvm.loop !21234

for.end:                                          ; preds = %for.cond
  %47 = load i32, i32* %next_uframe, align 4, !dbg !21236
  %48 = load i32, i32* %mod.addr, align 4, !dbg !21237
  %sub38 = sub i32 %48, 1, !dbg !21238
  %and39 = and i32 %47, %sub38, !dbg !21239
  %49 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21240
  %next_uframe40 = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %49, i32 0, i32 6, !dbg !21241
  store i32 %and39, i32* %next_uframe40, align 8, !dbg !21242
  %50 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21243
  %51 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %sched, align 8, !dbg !21244
  call void @iso_sched_free(%struct.ehci_iso_stream* %50, %struct.ehci_iso_sched* %51) #11, !dbg !21245
  %52 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21246
  %53 = bitcast %struct.ehci_iso_stream* %52 to i8*, !dbg !21246
  %54 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21247
  %hcpriv41 = getelementptr inbounds %struct.urb, %struct.urb* %54, i32 0, i32 2, !dbg !21248
  store i8* %53, i8** %hcpriv41, align 8, !dbg !21249
  %55 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21250
  %isoc_count = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %55, i32 0, i32 36, !dbg !21251
  %56 = load i32, i32* %isoc_count, align 4, !dbg !21252
  %inc42 = add i32 %56, 1, !dbg !21252
  store i32 %inc42, i32* %isoc_count, align 4, !dbg !21252
  %57 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21253
  call void @enable_periodic(%struct.ehci_hcd* %57) #11, !dbg !21254
  ret void, !dbg !21255
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sitd_sched_init(%struct.ehci_hcd* %ehci, %struct.ehci_iso_sched* %iso_sched, %struct.ehci_iso_stream* %stream, %struct.urb* %urb) #0 !dbg !21256 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %iso_sched.addr = alloca %struct.ehci_iso_sched*, align 8
  %stream.addr = alloca %struct.ehci_iso_stream*, align 8
  %urb.addr = alloca %struct.urb*, align 8
  %i = alloca i32, align 4
  %dma = alloca i64, align 8
  %packet = alloca %struct.ehci_iso_packet*, align 8
  %length = alloca i32, align 4
  %buf = alloca i64, align 8
  %trans = alloca i32, align 4
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !21257, metadata !DIExpression()), !dbg !21258
  store %struct.ehci_iso_sched* %iso_sched, %struct.ehci_iso_sched** %iso_sched.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_sched** %iso_sched.addr, metadata !21259, metadata !DIExpression()), !dbg !21260
  store %struct.ehci_iso_stream* %stream, %struct.ehci_iso_stream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream.addr, metadata !21261, metadata !DIExpression()), !dbg !21262
  store %struct.urb* %urb, %struct.urb** %urb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.urb** %urb.addr, metadata !21263, metadata !DIExpression()), !dbg !21264
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21265, metadata !DIExpression()), !dbg !21266
  call void @llvm.dbg.declare(metadata i64* %dma, metadata !21267, metadata !DIExpression()), !dbg !21268
  %0 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21269
  %transfer_dma = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 15, !dbg !21270
  %1 = load i64, i64* %transfer_dma, align 8, !dbg !21270
  store i64 %1, i64* %dma, align 8, !dbg !21268
  %2 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21271
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %2, i32 0, i32 24, !dbg !21272
  %3 = load i32, i32* %number_of_packets, align 4, !dbg !21272
  %4 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21273
  %ps = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %4, i32 0, i32 5, !dbg !21274
  %period = getelementptr inbounds %struct.ehci_per_sched, %struct.ehci_per_sched* %ps, i32 0, i32 5, !dbg !21275
  %5 = load i16, i16* %period, align 4, !dbg !21275
  %conv = zext i16 %5 to i32, !dbg !21273
  %mul = mul i32 %3, %conv, !dbg !21276
  %6 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched.addr, align 8, !dbg !21277
  %span = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %6, i32 0, i32 1, !dbg !21278
  store i32 %mul, i32* %span, align 8, !dbg !21279
  store i32 0, i32* %i, align 4, !dbg !21280
  br label %for.cond, !dbg !21282

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !21283
  %8 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21285
  %number_of_packets1 = getelementptr inbounds %struct.urb, %struct.urb* %8, i32 0, i32 24, !dbg !21286
  %9 = load i32, i32* %number_of_packets1, align 4, !dbg !21286
  %cmp = icmp ult i32 %7, %9, !dbg !21287
  br i1 %cmp, label %for.body, label %for.end, !dbg !21288

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_packet** %packet, metadata !21289, metadata !DIExpression()), !dbg !21291
  %10 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched.addr, align 8, !dbg !21292
  %packet3 = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %10, i32 0, i32 3, !dbg !21293
  %11 = load i32, i32* %i, align 4, !dbg !21294
  %idxprom = zext i32 %11 to i64, !dbg !21292
  %arrayidx = getelementptr [0 x %struct.ehci_iso_packet], [0 x %struct.ehci_iso_packet]* %packet3, i64 0, i64 %idxprom, !dbg !21292
  store %struct.ehci_iso_packet* %arrayidx, %struct.ehci_iso_packet** %packet, align 8, !dbg !21291
  call void @llvm.dbg.declare(metadata i32* %length, metadata !21295, metadata !DIExpression()), !dbg !21296
  call void @llvm.dbg.declare(metadata i64* %buf, metadata !21297, metadata !DIExpression()), !dbg !21298
  call void @llvm.dbg.declare(metadata i32* %trans, metadata !21299, metadata !DIExpression()), !dbg !21300
  %12 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21301
  %iso_frame_desc = getelementptr inbounds %struct.urb, %struct.urb* %12, i32 0, i32 29, !dbg !21302
  %13 = load i32, i32* %i, align 4, !dbg !21303
  %idxprom4 = zext i32 %13 to i64, !dbg !21301
  %arrayidx5 = getelementptr [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %iso_frame_desc, i64 0, i64 %idxprom4, !dbg !21301
  %length6 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %arrayidx5, i32 0, i32 1, !dbg !21304
  %14 = load i32, i32* %length6, align 4, !dbg !21304
  %and = and i32 %14, 1023, !dbg !21305
  store i32 %and, i32* %length, align 4, !dbg !21306
  %15 = load i64, i64* %dma, align 8, !dbg !21307
  %16 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21308
  %iso_frame_desc7 = getelementptr inbounds %struct.urb, %struct.urb* %16, i32 0, i32 29, !dbg !21309
  %17 = load i32, i32* %i, align 4, !dbg !21310
  %idxprom8 = zext i32 %17 to i64, !dbg !21308
  %arrayidx9 = getelementptr [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %iso_frame_desc7, i64 0, i64 %idxprom8, !dbg !21308
  %offset = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %arrayidx9, i32 0, i32 0, !dbg !21311
  %18 = load i32, i32* %offset, align 8, !dbg !21311
  %conv10 = zext i32 %18 to i64, !dbg !21308
  %add = add i64 %15, %conv10, !dbg !21312
  store i64 %add, i64* %buf, align 8, !dbg !21313
  store i32 128, i32* %trans, align 4, !dbg !21314
  %19 = load i32, i32* %i, align 4, !dbg !21315
  %add11 = add i32 %19, 1, !dbg !21317
  %20 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21318
  %number_of_packets12 = getelementptr inbounds %struct.urb, %struct.urb* %20, i32 0, i32 24, !dbg !21319
  %21 = load i32, i32* %number_of_packets12, align 4, !dbg !21319
  %cmp13 = icmp eq i32 %add11, %21, !dbg !21320
  br i1 %cmp13, label %land.lhs.true, label %if.end, !dbg !21321

land.lhs.true:                                    ; preds = %for.body
  %22 = load %struct.urb*, %struct.urb** %urb.addr, align 8, !dbg !21322
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %22, i32 0, i32 13, !dbg !21323
  %23 = load i32, i32* %transfer_flags, align 4, !dbg !21323
  %and15 = and i32 %23, 128, !dbg !21324
  %tobool = icmp ne i32 %and15, 0, !dbg !21324
  br i1 %tobool, label %if.end, label %if.then, !dbg !21325

if.then:                                          ; preds = %land.lhs.true
  %24 = load i32, i32* %trans, align 4, !dbg !21326
  %or = or i32 %24, -2147483648, !dbg !21326
  store i32 %or, i32* %trans, align 4, !dbg !21326
  br label %if.end, !dbg !21327

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %25 = load i32, i32* %length, align 4, !dbg !21328
  %shl = shl i32 %25, 16, !dbg !21329
  %26 = load i32, i32* %trans, align 4, !dbg !21330
  %or16 = or i32 %26, %shl, !dbg !21330
  store i32 %or16, i32* %trans, align 4, !dbg !21330
  %27 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21331
  %28 = load i32, i32* %trans, align 4, !dbg !21332
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %27, i32 %28) #11, !dbg !21333
  %29 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %packet, align 8, !dbg !21334
  %transaction = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %29, i32 0, i32 1, !dbg !21335
  store i32 %call, i32* %transaction, align 8, !dbg !21336
  %30 = load i64, i64* %buf, align 8, !dbg !21337
  %31 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %packet, align 8, !dbg !21338
  %bufp = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %31, i32 0, i32 0, !dbg !21339
  store i64 %30, i64* %bufp, align 8, !dbg !21340
  %32 = load i64, i64* %buf, align 8, !dbg !21341
  %33 = load i32, i32* %length, align 4, !dbg !21342
  %conv17 = zext i32 %33 to i64, !dbg !21342
  %add18 = add i64 %32, %conv17, !dbg !21343
  %and19 = and i64 %add18, -4096, !dbg !21344
  %conv20 = trunc i64 %and19 to i32, !dbg !21345
  %34 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %packet, align 8, !dbg !21346
  %buf1 = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %34, i32 0, i32 3, !dbg !21347
  store i32 %conv20, i32* %buf1, align 8, !dbg !21348
  %35 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %packet, align 8, !dbg !21349
  %buf121 = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %35, i32 0, i32 3, !dbg !21351
  %36 = load i32, i32* %buf121, align 8, !dbg !21351
  %conv22 = zext i32 %36 to i64, !dbg !21349
  %37 = load i64, i64* %buf, align 8, !dbg !21352
  %and23 = and i64 %37, -4096, !dbg !21353
  %cmp24 = icmp ne i64 %conv22, %and23, !dbg !21354
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !21355

if.then26:                                        ; preds = %if.end
  %38 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %packet, align 8, !dbg !21356
  %cross = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %38, i32 0, i32 2, !dbg !21357
  store i8 1, i8* %cross, align 4, !dbg !21358
  br label %if.end27, !dbg !21356

if.end27:                                         ; preds = %if.then26, %if.end
  %39 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21359
  %bEndpointAddress = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %39, i32 0, i32 1, !dbg !21361
  %40 = load i8, i8* %bEndpointAddress, align 8, !dbg !21361
  %conv28 = zext i8 %40 to i32, !dbg !21359
  %and29 = and i32 %conv28, 128, !dbg !21362
  %tobool30 = icmp ne i32 %and29, 0, !dbg !21362
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !21363

if.then31:                                        ; preds = %if.end27
  br label %for.inc, !dbg !21364

if.end32:                                         ; preds = %if.end27
  %41 = load i32, i32* %length, align 4, !dbg !21365
  %add33 = add i32 %41, 187, !dbg !21366
  %div = udiv i32 %add33, 188, !dbg !21367
  store i32 %div, i32* %length, align 4, !dbg !21368
  %42 = load i32, i32* %length, align 4, !dbg !21369
  %cmp34 = icmp ugt i32 %42, 1, !dbg !21371
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !21372

if.then36:                                        ; preds = %if.end32
  %43 = load i32, i32* %length, align 4, !dbg !21373
  %or37 = or i32 %43, 8, !dbg !21373
  store i32 %or37, i32* %length, align 4, !dbg !21373
  br label %if.end38, !dbg !21374

if.end38:                                         ; preds = %if.then36, %if.end32
  %44 = load i32, i32* %length, align 4, !dbg !21375
  %45 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %packet, align 8, !dbg !21376
  %buf139 = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %45, i32 0, i32 3, !dbg !21377
  %46 = load i32, i32* %buf139, align 8, !dbg !21378
  %or40 = or i32 %46, %44, !dbg !21378
  store i32 %or40, i32* %buf139, align 8, !dbg !21378
  br label %for.inc, !dbg !21379

for.inc:                                          ; preds = %if.end38, %if.then31
  %47 = load i32, i32* %i, align 4, !dbg !21380
  %inc = add i32 %47, 1, !dbg !21380
  store i32 %inc, i32* %i, align 4, !dbg !21380
  br label %for.cond, !dbg !21381, !llvm.loop !21382

for.end:                                          ; preds = %for.cond
  ret void, !dbg !21384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sitd_patch(%struct.ehci_hcd* %ehci, %struct.ehci_iso_stream* %stream, %struct.ehci_sitd* %sitd, %struct.ehci_iso_sched* %iso_sched, i32 %index) #0 !dbg !21385 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %stream.addr = alloca %struct.ehci_iso_stream*, align 8
  %sitd.addr = alloca %struct.ehci_sitd*, align 8
  %iso_sched.addr = alloca %struct.ehci_iso_sched*, align 8
  %index.addr = alloca i32, align 4
  %uf = alloca %struct.ehci_iso_packet*, align 8
  %bufp = alloca i64, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !21388, metadata !DIExpression()), !dbg !21389
  store %struct.ehci_iso_stream* %stream, %struct.ehci_iso_stream** %stream.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_stream** %stream.addr, metadata !21390, metadata !DIExpression()), !dbg !21391
  store %struct.ehci_sitd* %sitd, %struct.ehci_sitd** %sitd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_sitd** %sitd.addr, metadata !21392, metadata !DIExpression()), !dbg !21393
  store %struct.ehci_iso_sched* %iso_sched, %struct.ehci_iso_sched** %iso_sched.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_sched** %iso_sched.addr, metadata !21394, metadata !DIExpression()), !dbg !21395
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !21396, metadata !DIExpression()), !dbg !21397
  call void @llvm.dbg.declare(metadata %struct.ehci_iso_packet** %uf, metadata !21398, metadata !DIExpression()), !dbg !21399
  %0 = load %struct.ehci_iso_sched*, %struct.ehci_iso_sched** %iso_sched.addr, align 8, !dbg !21400
  %packet = getelementptr inbounds %struct.ehci_iso_sched, %struct.ehci_iso_sched* %0, i32 0, i32 3, !dbg !21401
  %1 = load i32, i32* %index.addr, align 4, !dbg !21402
  %idxprom = zext i32 %1 to i64, !dbg !21400
  %arrayidx = getelementptr [0 x %struct.ehci_iso_packet], [0 x %struct.ehci_iso_packet]* %packet, i64 0, i64 %idxprom, !dbg !21400
  store %struct.ehci_iso_packet* %arrayidx, %struct.ehci_iso_packet** %uf, align 8, !dbg !21399
  call void @llvm.dbg.declare(metadata i64* %bufp, metadata !21403, metadata !DIExpression()), !dbg !21404
  %2 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21405
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %2, i32 1) #11, !dbg !21405
  %3 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21406
  %hw_next = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %3, i32 0, i32 0, !dbg !21407
  store i32 %call, i32* %hw_next, align 32, !dbg !21408
  %4 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21409
  %address = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %4, i32 0, i32 14, !dbg !21410
  %5 = load i32, i32* %address, align 4, !dbg !21410
  %6 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21411
  %hw_fullspeed_ep = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %6, i32 0, i32 1, !dbg !21412
  store i32 %5, i32* %hw_fullspeed_ep, align 4, !dbg !21413
  %7 = load %struct.ehci_iso_stream*, %struct.ehci_iso_stream** %stream.addr, align 8, !dbg !21414
  %splits = getelementptr inbounds %struct.ehci_iso_stream, %struct.ehci_iso_stream* %7, i32 0, i32 7, !dbg !21415
  %8 = load i32, i32* %splits, align 4, !dbg !21415
  %9 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21416
  %hw_uframe = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %9, i32 0, i32 2, !dbg !21417
  store i32 %8, i32* %hw_uframe, align 8, !dbg !21418
  %10 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %uf, align 8, !dbg !21419
  %transaction = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %10, i32 0, i32 1, !dbg !21420
  %11 = load i32, i32* %transaction, align 8, !dbg !21420
  %12 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21421
  %hw_results = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %12, i32 0, i32 3, !dbg !21422
  store i32 %11, i32* %hw_results, align 4, !dbg !21423
  %13 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21424
  %call1 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %13, i32 1) #11, !dbg !21424
  %14 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21425
  %hw_backpointer = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %14, i32 0, i32 5, !dbg !21426
  store i32 %call1, i32* %hw_backpointer, align 8, !dbg !21427
  %15 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %uf, align 8, !dbg !21428
  %bufp2 = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %15, i32 0, i32 0, !dbg !21429
  %16 = load i64, i64* %bufp2, align 8, !dbg !21429
  store i64 %16, i64* %bufp, align 8, !dbg !21430
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21431
  %18 = load i64, i64* %bufp, align 8, !dbg !21432
  %conv = trunc i64 %18 to i32, !dbg !21432
  %call3 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %17, i32 %conv) #11, !dbg !21433
  %19 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21434
  %hw_buf = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %19, i32 0, i32 4, !dbg !21435
  %arrayidx4 = getelementptr [2 x i32], [2 x i32]* %hw_buf, i64 0, i64 0, !dbg !21434
  store i32 %call3, i32* %arrayidx4, align 16, !dbg !21436
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21437
  %21 = load i64, i64* %bufp, align 8, !dbg !21438
  %shr = lshr i64 %21, 32, !dbg !21439
  %conv5 = trunc i64 %shr to i32, !dbg !21438
  %call6 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %20, i32 %conv5) #11, !dbg !21440
  %22 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21441
  %hw_buf_hi = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %22, i32 0, i32 6, !dbg !21442
  %arrayidx7 = getelementptr [2 x i32], [2 x i32]* %hw_buf_hi, i64 0, i64 0, !dbg !21441
  store i32 %call6, i32* %arrayidx7, align 4, !dbg !21443
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21444
  %24 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %uf, align 8, !dbg !21445
  %buf1 = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %24, i32 0, i32 3, !dbg !21446
  %25 = load i32, i32* %buf1, align 8, !dbg !21446
  %call8 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %23, i32 %25) #11, !dbg !21447
  %26 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21448
  %hw_buf9 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %26, i32 0, i32 4, !dbg !21449
  %arrayidx10 = getelementptr [2 x i32], [2 x i32]* %hw_buf9, i64 0, i64 1, !dbg !21448
  store i32 %call8, i32* %arrayidx10, align 4, !dbg !21450
  %27 = load %struct.ehci_iso_packet*, %struct.ehci_iso_packet** %uf, align 8, !dbg !21451
  %cross = getelementptr inbounds %struct.ehci_iso_packet, %struct.ehci_iso_packet* %27, i32 0, i32 2, !dbg !21453
  %28 = load i8, i8* %cross, align 4, !dbg !21453
  %tobool = icmp ne i8 %28, 0, !dbg !21451
  br i1 %tobool, label %if.then, label %if.end, !dbg !21454

if.then:                                          ; preds = %entry
  %29 = load i64, i64* %bufp, align 8, !dbg !21455
  %add = add i64 %29, 4096, !dbg !21455
  store i64 %add, i64* %bufp, align 8, !dbg !21455
  br label %if.end, !dbg !21456

if.end:                                           ; preds = %if.then, %entry
  %30 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21457
  %31 = load i64, i64* %bufp, align 8, !dbg !21458
  %shr11 = lshr i64 %31, 32, !dbg !21459
  %conv12 = trunc i64 %shr11 to i32, !dbg !21458
  %call13 = call i32 @cpu_to_hc32(%struct.ehci_hcd* %30, i32 %conv12) #11, !dbg !21460
  %32 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21461
  %hw_buf_hi14 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %32, i32 0, i32 6, !dbg !21462
  %arrayidx15 = getelementptr [2 x i32], [2 x i32]* %hw_buf_hi14, i64 0, i64 1, !dbg !21461
  store i32 %call13, i32* %arrayidx15, align 4, !dbg !21463
  %33 = load i32, i32* %index.addr, align 4, !dbg !21464
  %34 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21465
  %index16 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %34, i32 0, i32 13, !dbg !21466
  store i32 %33, i32* %index16, align 4, !dbg !21467
  ret void, !dbg !21468
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sitd_link(%struct.ehci_hcd* %ehci, i32 %frame, %struct.ehci_sitd* %sitd) #0 !dbg !21469 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %frame.addr = alloca i32, align 4
  %sitd.addr = alloca %struct.ehci_sitd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !21472, metadata !DIExpression()), !dbg !21473
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !21474, metadata !DIExpression()), !dbg !21475
  store %struct.ehci_sitd* %sitd, %struct.ehci_sitd** %sitd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_sitd** %sitd.addr, metadata !21476, metadata !DIExpression()), !dbg !21477
  %0 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21478
  %sitd_next = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %0, i32 0, i32 8, !dbg !21479
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21480
  %pshadow = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 28, !dbg !21481
  %2 = load %union.ehci_shadow*, %union.ehci_shadow** %pshadow, align 8, !dbg !21481
  %3 = load i32, i32* %frame.addr, align 4, !dbg !21482
  %idxprom = zext i32 %3 to i64, !dbg !21480
  %arrayidx = getelementptr %union.ehci_shadow, %union.ehci_shadow* %2, i64 %idxprom, !dbg !21480
  %4 = bitcast %union.ehci_shadow* %sitd_next to i8*, !dbg !21480
  %5 = bitcast %union.ehci_shadow* %arrayidx to i8*, !dbg !21480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %4, i8* align 8 %5, i64 8, i1 false), !dbg !21480
  %6 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21483
  %periodic = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %6, i32 0, i32 24, !dbg !21484
  %7 = load i32*, i32** %periodic, align 8, !dbg !21484
  %8 = load i32, i32* %frame.addr, align 4, !dbg !21485
  %idxprom1 = zext i32 %8 to i64, !dbg !21483
  %arrayidx2 = getelementptr i32, i32* %7, i64 %idxprom1, !dbg !21483
  %9 = load i32, i32* %arrayidx2, align 4, !dbg !21483
  %10 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21486
  %hw_next = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %10, i32 0, i32 0, !dbg !21487
  store i32 %9, i32* %hw_next, align 32, !dbg !21488
  %11 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21489
  %12 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21490
  %pshadow3 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %12, i32 0, i32 28, !dbg !21491
  %13 = load %union.ehci_shadow*, %union.ehci_shadow** %pshadow3, align 8, !dbg !21491
  %14 = load i32, i32* %frame.addr, align 4, !dbg !21492
  %idxprom4 = zext i32 %14 to i64, !dbg !21490
  %arrayidx5 = getelementptr %union.ehci_shadow, %union.ehci_shadow* %13, i64 %idxprom4, !dbg !21490
  %sitd6 = bitcast %union.ehci_shadow* %arrayidx5 to %struct.ehci_sitd**, !dbg !21493
  store %struct.ehci_sitd* %11, %struct.ehci_sitd** %sitd6, align 8, !dbg !21494
  %15 = load i32, i32* %frame.addr, align 4, !dbg !21495
  %16 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21496
  %frame7 = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %16, i32 0, i32 12, !dbg !21497
  store i32 %15, i32* %frame7, align 8, !dbg !21498
  call void asm sideeffect "sfence", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !21499, !srcloc !21500
  %17 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21501
  %18 = load %struct.ehci_sitd*, %struct.ehci_sitd** %sitd.addr, align 8, !dbg !21502
  %sitd_dma = getelementptr inbounds %struct.ehci_sitd, %struct.ehci_sitd* %18, i32 0, i32 7, !dbg !21503
  %19 = load i64, i64* %sitd_dma, align 8, !dbg !21503
  %or = or i64 %19, 4, !dbg !21504
  %conv = trunc i64 %or to i32, !dbg !21502
  %call = call i32 @cpu_to_hc32(%struct.ehci_hcd* %17, i32 %conv) #11, !dbg !21505
  %20 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21506
  %periodic8 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %20, i32 0, i32 24, !dbg !21507
  %21 = load i32*, i32** %periodic8, align 8, !dbg !21507
  %22 = load i32, i32* %frame.addr, align 4, !dbg !21508
  %idxprom9 = zext i32 %22 to i64, !dbg !21506
  %arrayidx10 = getelementptr i32, i32* %21, i64 %idxprom9, !dbg !21506
  store i32 %call, i32* %arrayidx10, align 4, !dbg !21509
  ret void, !dbg !21510
}

; Function Attrs: noredzone
declare dso_local i32 @usb_hcd_check_unlink_urb(%struct.usb_hcd*, %struct.urb*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %epd) #0 !dbg !21511 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !21512, metadata !DIExpression()), !dbg !21513
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !21514
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3, !dbg !21515
  %1 = load i8, i8* %bmAttributes, align 1, !dbg !21515
  %conv = zext i8 %1 to i32, !dbg !21514
  %and = and i32 %conv, 3, !dbg !21516
  ret i32 %and, !dbg !21517
}

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout_uninterruptible(i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_num(%struct.usb_endpoint_descriptor* %epd) #0 !dbg !21518 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !21519, metadata !DIExpression()), !dbg !21520
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !21521
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 2, !dbg !21522
  %1 = load i8, i8* %bEndpointAddress, align 1, !dbg !21522
  %conv = zext i8 %1 to i32, !dbg !21521
  %and = and i32 %conv, 15, !dbg !21523
  ret i32 %and, !dbg !21524
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @usb_endpoint_dir_out(%struct.usb_endpoint_descriptor* %epd) #0 !dbg !21525 {
entry:
  %epd.addr = alloca %struct.usb_endpoint_descriptor*, align 8
  store %struct.usb_endpoint_descriptor* %epd, %struct.usb_endpoint_descriptor** %epd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_endpoint_descriptor** %epd.addr, metadata !21526, metadata !DIExpression()), !dbg !21527
  %0 = load %struct.usb_endpoint_descriptor*, %struct.usb_endpoint_descriptor** %epd.addr, align 8, !dbg !21528
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 2, !dbg !21529
  %1 = load i8, i8* %bEndpointAddress, align 1, !dbg !21529
  %conv = zext i8 %1 to i32, !dbg !21528
  %and = and i32 %conv, 128, !dbg !21530
  %cmp = icmp eq i32 %and, 0, !dbg !21531
  %conv1 = zext i1 %cmp to i32, !dbg !21531
  ret i32 %conv1, !dbg !21532
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @unlink_empty_async_suspended(%struct.ehci_hcd* %ehci) #0 !dbg !21533 {
entry:
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %qh = alloca %struct.ehci_qh*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !21534, metadata !DIExpression()), !dbg !21535
  call void @llvm.dbg.declare(metadata %struct.ehci_qh** %qh, metadata !21536, metadata !DIExpression()), !dbg !21537
  br label %while.cond, !dbg !21538

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21539
  %async = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %0, i32 0, i32 15, !dbg !21540
  %1 = load %struct.ehci_qh*, %struct.ehci_qh** %async, align 8, !dbg !21540
  %qh_next = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %1, i32 0, i32 2, !dbg !21541
  %qh1 = bitcast %union.ehci_shadow* %qh_next to %struct.ehci_qh**, !dbg !21542
  %2 = load %struct.ehci_qh*, %struct.ehci_qh** %qh1, align 8, !dbg !21542
  %tobool = icmp ne %struct.ehci_qh* %2, null, !dbg !21538
  br i1 %tobool, label %while.body, label %while.end, !dbg !21538

while.body:                                       ; preds = %while.cond
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21543
  %async2 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 15, !dbg !21545
  %4 = load %struct.ehci_qh*, %struct.ehci_qh** %async2, align 8, !dbg !21545
  %qh_next3 = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %4, i32 0, i32 2, !dbg !21546
  %qh4 = bitcast %union.ehci_shadow* %qh_next3 to %struct.ehci_qh**, !dbg !21547
  %5 = load %struct.ehci_qh*, %struct.ehci_qh** %qh4, align 8, !dbg !21547
  store %struct.ehci_qh* %5, %struct.ehci_qh** %qh, align 8, !dbg !21548
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !21549, metadata !DIExpression()), !dbg !21551
  %6 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !21551
  %qtd_list = getelementptr inbounds %struct.ehci_qh, %struct.ehci_qh* %6, i32 0, i32 3, !dbg !21551
  %call = call i32 @list_empty(%struct.list_head* %qtd_list) #11, !dbg !21551
  %tobool5 = icmp ne i32 %call, 0, !dbg !21551
  %lnot = xor i1 %tobool5, true, !dbg !21551
  %lnot6 = xor i1 %lnot, true, !dbg !21551
  %lnot7 = xor i1 %lnot6, true, !dbg !21551
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !21551
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !21551
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !21552
  %tobool8 = icmp ne i32 %7, 0, !dbg !21552
  %lnot9 = xor i1 %tobool8, true, !dbg !21552
  %lnot11 = xor i1 %lnot9, true, !dbg !21552
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !21552
  %conv = sext i32 %lnot.ext12 to i64, !dbg !21552
  %tobool13 = icmp ne i64 %conv, 0, !dbg !21552
  br i1 %tobool13, label %if.then, label %if.end, !dbg !21551

if.then:                                          ; preds = %while.body
  br label %do.body, !dbg !21552

do.body:                                          ; preds = %if.then
  br label %do.body14, !dbg !21554

do.body14:                                        ; preds = %do.body
  br label %do.end, !dbg !21556

do.end:                                           ; preds = %do.body14
  br label %do.body15, !dbg !21554

do.body15:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i32 1463, i32 2305, i64 12) #7, !dbg !21558, !srcloc !21560
  br label %do.end16, !dbg !21558

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 344) #7, !dbg !21561, !srcloc !21563
  br label %do.body17, !dbg !21554

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !21564

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !21554

do.end19:                                         ; preds = %do.end18
  br label %if.end, !dbg !21554

if.end:                                           ; preds = %do.end19, %while.body
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !21551
  %tobool20 = icmp ne i32 %8, 0, !dbg !21551
  %lnot21 = xor i1 %tobool20, true, !dbg !21551
  %lnot23 = xor i1 %lnot21, true, !dbg !21551
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !21551
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !21551
  store i64 %conv25, i64* %tmp, align 8, !dbg !21552
  %9 = load i64, i64* %tmp, align 8, !dbg !21551
  %10 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21566
  %11 = load %struct.ehci_qh*, %struct.ehci_qh** %qh, align 8, !dbg !21567
  call void @single_unlink_async(%struct.ehci_hcd* %10, %struct.ehci_qh* %11) #11, !dbg !21568
  br label %while.cond, !dbg !21538, !llvm.loop !21569

while.end:                                        ; preds = %while.cond
  ret void, !dbg !21571
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ehci_handover_companion_ports(%struct.ehci_hcd* %ehci) #0 !dbg !21572 {
entry:
  %lock.addr.i102 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i102, metadata !6492, metadata !DIExpression()), !dbg !21573
  %lock.addr.i100 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i100, metadata !6499, metadata !DIExpression()), !dbg !21575
  %lock.addr.i98 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i98, metadata !6492, metadata !DIExpression()), !dbg !21580
  %lock.addr.i96 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i96, metadata !6499, metadata !DIExpression()), !dbg !21582
  %lock.addr.i94 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i94, metadata !6492, metadata !DIExpression()), !dbg !21584
  %lock.addr.i92 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i92, metadata !6499, metadata !DIExpression()), !dbg !21586
  %lock.addr.i90 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i90, metadata !6492, metadata !DIExpression()), !dbg !21594
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !6499, metadata !DIExpression()), !dbg !21596
  %ehci.addr = alloca %struct.ehci_hcd*, align 8
  %reg = alloca i32*, align 8
  %status = alloca i32, align 4
  %port = alloca i32, align 4
  %buf = alloca i32, align 4
  %hcd = alloca %struct.usb_hcd*, align 8
  store %struct.ehci_hcd* %ehci, %struct.ehci_hcd** %ehci.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ehci_hcd** %ehci.addr, metadata !21598, metadata !DIExpression()), !dbg !21599
  call void @llvm.dbg.declare(metadata i32** %reg, metadata !21600, metadata !DIExpression()), !dbg !21601
  call void @llvm.dbg.declare(metadata i32* %status, metadata !21602, metadata !DIExpression()), !dbg !21603
  call void @llvm.dbg.declare(metadata i32* %port, metadata !21604, metadata !DIExpression()), !dbg !21605
  call void @llvm.dbg.declare(metadata i32* %buf, metadata !21606, metadata !DIExpression()), !dbg !21607
  call void @llvm.dbg.declare(metadata %struct.usb_hcd** %hcd, metadata !21608, metadata !DIExpression()), !dbg !21609
  %0 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21610
  %call = call %struct.usb_hcd* @ehci_to_hcd(%struct.ehci_hcd* %0) #11, !dbg !21611
  store %struct.usb_hcd* %call, %struct.usb_hcd** %hcd, align 8, !dbg !21609
  %1 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21612
  %owned_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %1, i32 0, i32 46, !dbg !21614
  %2 = load i64, i64* %owned_ports, align 8, !dbg !21614
  %tobool = icmp ne i64 %2, 0, !dbg !21612
  br i1 %tobool, label %if.end, label %if.then, !dbg !21615

if.then:                                          ; preds = %entry
  br label %return, !dbg !21616

if.end:                                           ; preds = %entry
  %call1 = call i32 @usb_for_each_dev(i8* null, i32 (%struct.usb_device*, i8*)* @persist_enabled_on_companion) #11, !dbg !21617
  %tobool2 = icmp ne i32 %call1, 0, !dbg !21617
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !21619

if.then3:                                         ; preds = %if.end
  br label %return, !dbg !21620

if.end4:                                          ; preds = %if.end
  %3 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21621
  %hcs_params = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %3, i32 0, i32 10, !dbg !21621
  %4 = load i32, i32* %hcs_params, align 8, !dbg !21621
  %shr = lshr i32 %4, 0, !dbg !21621
  %and = and i32 %shr, 15, !dbg !21621
  store i32 %and, i32* %port, align 4, !dbg !21622
  br label %while.cond, !dbg !21623

while.cond:                                       ; preds = %if.end16, %if.end4
  %5 = load i32, i32* %port, align 4, !dbg !21624
  %dec = add i32 %5, -1, !dbg !21624
  store i32 %dec, i32* %port, align 4, !dbg !21624
  %tobool5 = icmp ne i32 %5, 0, !dbg !21623
  br i1 %tobool5, label %while.body, label %while.end, !dbg !21623

while.body:                                       ; preds = %while.cond
  %6 = load i32, i32* %port, align 4, !dbg !21625
  %conv = sext i32 %6 to i64, !dbg !21625
  %7 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21628
  %owned_ports6 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %7, i32 0, i32 46, !dbg !21629
  %call7 = call zeroext i1 @test_bit(i64 %conv, i64* %owned_ports6) #11, !dbg !21630
  br i1 %call7, label %if.then8, label %if.end16, !dbg !21631

if.then8:                                         ; preds = %while.body
  %8 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21632
  %regs = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %8, i32 0, i32 8, !dbg !21634
  %9 = load %struct.ehci_regs*, %struct.ehci_regs** %regs, align 8, !dbg !21634
  %port_status = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %9, i32 0, i32 11, !dbg !21635
  %10 = load i32, i32* %port, align 4, !dbg !21636
  %idxprom = sext i32 %10 to i64, !dbg !21632
  %arrayidx = getelementptr [0 x i32], [0 x i32]* %port_status, i64 0, i64 %idxprom, !dbg !21632
  store i32* %arrayidx, i32** %reg, align 8, !dbg !21637
  %11 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21638
  %12 = load i32*, i32** %reg, align 8, !dbg !21639
  %call9 = call i32 @ehci_readl(%struct.ehci_hcd* %11, i32* %12) #11, !dbg !21640
  %and10 = and i32 %call9, -43, !dbg !21641
  store i32 %and10, i32* %status, align 4, !dbg !21642
  %13 = load i32, i32* %status, align 4, !dbg !21643
  %and11 = and i32 %13, 4096, !dbg !21645
  %tobool12 = icmp ne i32 %and11, 0, !dbg !21645
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !21646

if.then13:                                        ; preds = %if.then8
  %14 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21647
  %15 = load i32, i32* %port, align 4, !dbg !21648
  %call14 = call i32 @ehci_port_power(%struct.ehci_hcd* %14, i32 %15, i1 zeroext true) #11, !dbg !21649
  br label %if.end15, !dbg !21649

if.end15:                                         ; preds = %if.then13, %if.then8
  br label %if.end16, !dbg !21650

if.end16:                                         ; preds = %if.end15, %while.body
  br label %while.cond, !dbg !21623, !llvm.loop !21651

while.end:                                        ; preds = %while.cond
  call void @msleep(i32 20) #11, !dbg !21653
  %16 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21654
  %lock = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %16, i32 0, i32 11, !dbg !21655
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  call void @arch_local_irq_disable() #12, !dbg !21656
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !21657, !srcloc !6536
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !21658
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !21658
  %rlock.i = bitcast %union.anon.0* %18 to %struct.raw_spinlock*, !dbg !21658
  %19 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21659
  %hcs_params17 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %19, i32 0, i32 10, !dbg !21659
  %20 = load i32, i32* %hcs_params17, align 8, !dbg !21659
  %shr18 = lshr i32 %20, 0, !dbg !21659
  %and19 = and i32 %shr18, 15, !dbg !21659
  store i32 %and19, i32* %port, align 4, !dbg !21660
  br label %while.cond20, !dbg !21661

while.cond20:                                     ; preds = %if.end50, %while.end
  %21 = load i32, i32* %port, align 4, !dbg !21662
  %dec21 = add i32 %21, -1, !dbg !21662
  store i32 %dec21, i32* %port, align 4, !dbg !21662
  %tobool22 = icmp ne i32 %21, 0, !dbg !21661
  br i1 %tobool22, label %while.body23, label %while.end51, !dbg !21661

while.body23:                                     ; preds = %while.cond20
  %22 = load i32, i32* %port, align 4, !dbg !21663
  %conv24 = sext i32 %22 to i64, !dbg !21663
  %23 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21664
  %owned_ports25 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %23, i32 0, i32 46, !dbg !21665
  %call26 = call zeroext i1 @test_bit(i64 %conv24, i64* %owned_ports25) #11, !dbg !21666
  br i1 %call26, label %if.then27, label %if.end50, !dbg !21667

if.then27:                                        ; preds = %while.body23
  %24 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21668
  %regs28 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %24, i32 0, i32 8, !dbg !21669
  %25 = load %struct.ehci_regs*, %struct.ehci_regs** %regs28, align 8, !dbg !21669
  %port_status29 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %25, i32 0, i32 11, !dbg !21670
  %26 = load i32, i32* %port, align 4, !dbg !21671
  %idxprom30 = sext i32 %26 to i64, !dbg !21668
  %arrayidx31 = getelementptr [0 x i32], [0 x i32]* %port_status29, i64 0, i64 %idxprom30, !dbg !21668
  store i32* %arrayidx31, i32** %reg, align 8, !dbg !21672
  %27 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21673
  %28 = load i32*, i32** %reg, align 8, !dbg !21674
  %call32 = call i32 @ehci_readl(%struct.ehci_hcd* %27, i32* %28) #11, !dbg !21675
  %and33 = and i32 %call32, -43, !dbg !21676
  store i32 %and33, i32* %status, align 4, !dbg !21677
  %29 = load i32, i32* %status, align 4, !dbg !21678
  %and34 = and i32 %29, 8192, !dbg !21679
  %tobool35 = icmp ne i32 %and34, 0, !dbg !21679
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !21680

if.then36:                                        ; preds = %if.then27
  %30 = load i32, i32* %port, align 4, !dbg !21681
  %conv37 = sext i32 %30 to i64, !dbg !21681
  %31 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21682
  %owned_ports38 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %31, i32 0, i32 46, !dbg !21683
  call void @clear_bit(i64 %conv37, i64* %owned_ports38) #11, !dbg !21684
  br label %if.end49, !dbg !21684

if.else:                                          ; preds = %if.then27
  %32 = load i32, i32* %port, align 4, !dbg !21685
  %conv39 = sext i32 %32 to i64, !dbg !21685
  %33 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21686
  %companion_ports = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %33, i32 0, i32 45, !dbg !21687
  %call40 = call zeroext i1 @test_bit(i64 %conv39, i64* %companion_ports) #11, !dbg !21688
  br i1 %call40, label %if.then41, label %if.else43, !dbg !21689

if.then41:                                        ; preds = %if.else
  %34 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21690
  %35 = load i32, i32* %status, align 4, !dbg !21691
  %and42 = and i32 %35, -5, !dbg !21692
  %36 = load i32*, i32** %reg, align 8, !dbg !21693
  call void @ehci_writel(%struct.ehci_hcd* %34, i32 %and42, i32* %36) #11, !dbg !21694
  br label %if.end48, !dbg !21694

if.else43:                                        ; preds = %if.else
  %37 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21695
  %lock44 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %37, i32 0, i32 11, !dbg !21696
  store %struct.spinlock* %lock44, %struct.spinlock** %lock.addr.i90, align 8
  call void @arch_local_irq_enable() #12, !dbg !21697
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !21698, !srcloc !6571
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i90, align 8, !dbg !21699
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !21699
  %rlock.i91 = bitcast %union.anon.0* %39 to %struct.raw_spinlock*, !dbg !21699
  %40 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !21700
  %41 = load i32, i32* %port, align 4, !dbg !21701
  %add = add i32 %41, 1, !dbg !21702
  %conv45 = trunc i32 %add to i16, !dbg !21701
  %call46 = call i32 @ehci_hub_control(%struct.usb_hcd* %40, i16 zeroext 8963, i16 zeroext 4, i16 zeroext %conv45, i8* null, i16 zeroext 0) #11, !dbg !21703
  %42 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21704
  %lock47 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %42, i32 0, i32 11, !dbg !21705
  store %struct.spinlock* %lock47, %struct.spinlock** %lock.addr.i92, align 8
  call void @arch_local_irq_disable() #12, !dbg !21706
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !21707, !srcloc !6536
  %43 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i92, align 8, !dbg !21708
  %44 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %43, i32 0, i32 0, !dbg !21708
  %rlock.i93 = bitcast %union.anon.0* %44 to %struct.raw_spinlock*, !dbg !21708
  br label %if.end48

if.end48:                                         ; preds = %if.else43, %if.then41
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then36
  br label %if.end50, !dbg !21709

if.end50:                                         ; preds = %if.end49, %while.body23
  br label %while.cond20, !dbg !21661, !llvm.loop !21710

while.end51:                                      ; preds = %while.cond20
  %45 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21712
  %lock52 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %45, i32 0, i32 11, !dbg !21713
  store %struct.spinlock* %lock52, %struct.spinlock** %lock.addr.i94, align 8
  call void @arch_local_irq_enable() #12, !dbg !21714
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !21715, !srcloc !6571
  %46 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i94, align 8, !dbg !21716
  %47 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %46, i32 0, i32 0, !dbg !21716
  %rlock.i95 = bitcast %union.anon.0* %47 to %struct.raw_spinlock*, !dbg !21716
  %48 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21717
  %owned_ports53 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %48, i32 0, i32 46, !dbg !21719
  %49 = load i64, i64* %owned_ports53, align 8, !dbg !21719
  %tobool54 = icmp ne i64 %49, 0, !dbg !21717
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !21720

if.then55:                                        ; preds = %while.end51
  br label %return, !dbg !21721

if.end56:                                         ; preds = %while.end51
  call void @msleep(i32 90) #11, !dbg !21722
  %50 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21723
  %lock57 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %50, i32 0, i32 11, !dbg !21724
  store %struct.spinlock* %lock57, %struct.spinlock** %lock.addr.i96, align 8
  call void @arch_local_irq_disable() #12, !dbg !21725
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !21726, !srcloc !6536
  %51 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i96, align 8, !dbg !21727
  %52 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %51, i32 0, i32 0, !dbg !21727
  %rlock.i97 = bitcast %union.anon.0* %52 to %struct.raw_spinlock*, !dbg !21727
  %53 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21728
  %hcs_params58 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %53, i32 0, i32 10, !dbg !21728
  %54 = load i32, i32* %hcs_params58, align 8, !dbg !21728
  %shr59 = lshr i32 %54, 0, !dbg !21728
  %and60 = and i32 %shr59, 15, !dbg !21728
  store i32 %and60, i32* %port, align 4, !dbg !21729
  br label %while.cond61, !dbg !21730

while.cond61:                                     ; preds = %if.end86, %if.end56
  %55 = load i32, i32* %port, align 4, !dbg !21731
  %dec62 = add i32 %55, -1, !dbg !21731
  store i32 %dec62, i32* %port, align 4, !dbg !21731
  %tobool63 = icmp ne i32 %55, 0, !dbg !21730
  br i1 %tobool63, label %while.body64, label %while.end87, !dbg !21730

while.body64:                                     ; preds = %while.cond61
  %56 = load i32, i32* %port, align 4, !dbg !21732
  %conv65 = sext i32 %56 to i64, !dbg !21732
  %57 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21733
  %owned_ports66 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %57, i32 0, i32 46, !dbg !21734
  %call67 = call zeroext i1 @test_bit(i64 %conv65, i64* %owned_ports66) #11, !dbg !21735
  br i1 %call67, label %if.then68, label %if.end86, !dbg !21736

if.then68:                                        ; preds = %while.body64
  %58 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21737
  %lock69 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %58, i32 0, i32 11, !dbg !21738
  store %struct.spinlock* %lock69, %struct.spinlock** %lock.addr.i98, align 8
  call void @arch_local_irq_enable() #12, !dbg !21739
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !21740, !srcloc !6571
  %59 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i98, align 8, !dbg !21741
  %60 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %59, i32 0, i32 0, !dbg !21741
  %rlock.i99 = bitcast %union.anon.0* %60 to %struct.raw_spinlock*, !dbg !21741
  %61 = load %struct.usb_hcd*, %struct.usb_hcd** %hcd, align 8, !dbg !21742
  %62 = load i32, i32* %port, align 4, !dbg !21743
  %add70 = add i32 %62, 1, !dbg !21744
  %conv71 = trunc i32 %add70 to i16, !dbg !21743
  %63 = bitcast i32* %buf to i8*, !dbg !21745
  %call72 = call i32 @ehci_hub_control(%struct.usb_hcd* %61, i16 zeroext -23808, i16 zeroext 0, i16 zeroext %conv71, i8* %63, i16 zeroext 4) #11, !dbg !21746
  %64 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21747
  %lock73 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %64, i32 0, i32 11, !dbg !21748
  store %struct.spinlock* %lock73, %struct.spinlock** %lock.addr.i100, align 8
  call void @arch_local_irq_disable() #12, !dbg !21749
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !21750, !srcloc !6536
  %65 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i100, align 8, !dbg !21751
  %66 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %65, i32 0, i32 0, !dbg !21751
  %rlock.i101 = bitcast %union.anon.0* %66 to %struct.raw_spinlock*, !dbg !21751
  %67 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21752
  %regs74 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %67, i32 0, i32 8, !dbg !21753
  %68 = load %struct.ehci_regs*, %struct.ehci_regs** %regs74, align 8, !dbg !21753
  %port_status75 = getelementptr inbounds %struct.ehci_regs, %struct.ehci_regs* %68, i32 0, i32 11, !dbg !21754
  %69 = load i32, i32* %port, align 4, !dbg !21755
  %idxprom76 = sext i32 %69 to i64, !dbg !21752
  %arrayidx77 = getelementptr [0 x i32], [0 x i32]* %port_status75, i64 0, i64 %idxprom76, !dbg !21752
  store i32* %arrayidx77, i32** %reg, align 8, !dbg !21756
  %70 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21757
  %71 = load i32*, i32** %reg, align 8, !dbg !21758
  %call78 = call i32 @ehci_readl(%struct.ehci_hcd* %70, i32* %71) #11, !dbg !21759
  %and79 = and i32 %call78, -43, !dbg !21760
  store i32 %and79, i32* %status, align 4, !dbg !21761
  %72 = load i32, i32* %status, align 4, !dbg !21762
  %and80 = and i32 %72, 8192, !dbg !21764
  %tobool81 = icmp ne i32 %and80, 0, !dbg !21764
  br i1 %tobool81, label %if.then82, label %if.else83, !dbg !21765

if.then82:                                        ; preds = %if.then68
  %73 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21766
  %74 = load i32, i32* %status, align 4, !dbg !21767
  %or = or i32 %74, 2, !dbg !21768
  %75 = load i32*, i32** %reg, align 8, !dbg !21769
  call void @ehci_writel(%struct.ehci_hcd* %73, i32 %or, i32* %75) #11, !dbg !21770
  br label %if.end85, !dbg !21770

if.else83:                                        ; preds = %if.then68
  %76 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21771
  %77 = load i32, i32* %status, align 4, !dbg !21773
  %and84 = and i32 %77, -5, !dbg !21774
  %78 = load i32*, i32** %reg, align 8, !dbg !21775
  call void @ehci_writel(%struct.ehci_hcd* %76, i32 %and84, i32* %78) #11, !dbg !21776
  br label %if.end85

if.end85:                                         ; preds = %if.else83, %if.then82
  br label %if.end86, !dbg !21777

if.end86:                                         ; preds = %if.end85, %while.body64
  br label %while.cond61, !dbg !21730, !llvm.loop !21778

while.end87:                                      ; preds = %while.cond61
  %79 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21780
  %owned_ports88 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %79, i32 0, i32 46, !dbg !21781
  store i64 0, i64* %owned_ports88, align 8, !dbg !21782
  %80 = load %struct.ehci_hcd*, %struct.ehci_hcd** %ehci.addr, align 8, !dbg !21783
  %lock89 = getelementptr inbounds %struct.ehci_hcd, %struct.ehci_hcd* %80, i32 0, i32 11, !dbg !21784
  store %struct.spinlock* %lock89, %struct.spinlock** %lock.addr.i102, align 8
  call void @arch_local_irq_enable() #12, !dbg !21785
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !21786, !srcloc !6571
  %81 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i102, align 8, !dbg !21787
  %82 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %81, i32 0, i32 0, !dbg !21787
  %rlock.i103 = bitcast %union.anon.0* %82 to %struct.raw_spinlock*, !dbg !21787
  br label %return, !dbg !21788

return:                                           ; preds = %while.end87, %if.then55, %if.then3, %if.then
  ret void, !dbg !21788
}

; Function Attrs: noredzone
declare dso_local i32 @usb_for_each_dev(i8*, i32 (%struct.usb_device*, i8*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @persist_enabled_on_companion(%struct.usb_device* %udev, i8* %unused) #0 !dbg !21789 {
entry:
  %udev.addr = alloca %struct.usb_device*, align 8
  %unused.addr = alloca i8*, align 8
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !21792, metadata !DIExpression()), !dbg !21793
  store i8* %unused, i8** %unused.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %unused.addr, metadata !21794, metadata !DIExpression()), !dbg !21795
  %0 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !21796
  %maxchild = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 35, !dbg !21797
  %1 = load i32, i32* %maxchild, align 8, !dbg !21797
  %tobool = icmp ne i32 %1, 0, !dbg !21796
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !21798

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !21799
  %persist_enabled = getelementptr inbounds %struct.usb_device, %struct.usb_device* %2, i32 0, i32 27, !dbg !21800
  %bf.load = load i16, i16* %persist_enabled, align 1, !dbg !21800
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !21800
  %bf.clear = and i16 %bf.lshr, 1, !dbg !21800
  %bf.cast = zext i16 %bf.clear to i32, !dbg !21800
  %tobool1 = icmp ne i32 %bf.cast, 0, !dbg !21799
  br i1 %tobool1, label %land.rhs, label %land.end, !dbg !21801

land.rhs:                                         ; preds = %land.lhs.true
  %3 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !21802
  %bus = getelementptr inbounds %struct.usb_device, %struct.usb_device* %3, i32 0, i32 12, !dbg !21803
  %4 = load %struct.usb_bus*, %struct.usb_bus** %bus, align 8, !dbg !21803
  %root_hub = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %4, i32 0, i32 11, !dbg !21804
  %5 = load %struct.usb_device*, %struct.usb_device** %root_hub, align 8, !dbg !21804
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 4, !dbg !21805
  %6 = load i32, i32* %speed, align 4, !dbg !21805
  %cmp = icmp ult i32 %6, 3, !dbg !21806
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %7 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp, %land.rhs ], !dbg !21807
  %land.ext = zext i1 %7 to i32, !dbg !21801
  ret i32 %land.ext, !dbg !21808
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drop_tt(%struct.usb_device* %udev) #0 !dbg !21809 {
entry:
  %udev.addr = alloca %struct.usb_device*, align 8
  %utt = alloca %struct.usb_tt*, align 8
  %tt1 = alloca %struct.ehci_tt*, align 8
  %tt_index = alloca %struct.ehci_tt**, align 8
  %ptt = alloca %struct.ehci_tt**, align 8
  %cnt = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.usb_device* %udev, %struct.usb_device** %udev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.usb_device** %udev.addr, metadata !21812, metadata !DIExpression()), !dbg !21813
  call void @llvm.dbg.declare(metadata %struct.usb_tt** %utt, metadata !21814, metadata !DIExpression()), !dbg !21815
  %0 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !21816
  %tt = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 7, !dbg !21817
  %1 = load %struct.usb_tt*, %struct.usb_tt** %tt, align 8, !dbg !21817
  store %struct.usb_tt* %1, %struct.usb_tt** %utt, align 8, !dbg !21815
  call void @llvm.dbg.declare(metadata %struct.ehci_tt** %tt1, metadata !21818, metadata !DIExpression()), !dbg !21819
  call void @llvm.dbg.declare(metadata %struct.ehci_tt*** %tt_index, metadata !21820, metadata !DIExpression()), !dbg !21821
  call void @llvm.dbg.declare(metadata %struct.ehci_tt*** %ptt, metadata !21822, metadata !DIExpression()), !dbg !21823
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !21824, metadata !DIExpression()), !dbg !21825
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21826, metadata !DIExpression()), !dbg !21827
  %2 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !21828
  %tobool = icmp ne %struct.usb_tt* %2, null, !dbg !21828
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !21830

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !21831
  %hcpriv = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %3, i32 0, i32 3, !dbg !21832
  %4 = load i8*, i8** %hcpriv, align 8, !dbg !21832
  %tobool2 = icmp ne i8* %4, null, !dbg !21831
  br i1 %tobool2, label %if.end, label %if.then, !dbg !21833

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end20, !dbg !21834

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %cnt, align 4, !dbg !21835
  %5 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !21836
  %multi = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %5, i32 0, i32 1, !dbg !21838
  %6 = load i32, i32* %multi, align 8, !dbg !21838
  %tobool3 = icmp ne i32 %6, 0, !dbg !21836
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !21839

if.then4:                                         ; preds = %if.end
  %7 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !21840
  %hcpriv5 = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %7, i32 0, i32 3, !dbg !21842
  %8 = load i8*, i8** %hcpriv5, align 8, !dbg !21842
  %9 = bitcast i8* %8 to %struct.ehci_tt**, !dbg !21840
  store %struct.ehci_tt** %9, %struct.ehci_tt*** %tt_index, align 8, !dbg !21843
  %10 = load %struct.ehci_tt**, %struct.ehci_tt*** %tt_index, align 8, !dbg !21844
  %11 = load %struct.usb_device*, %struct.usb_device** %udev.addr, align 8, !dbg !21845
  %ttport = getelementptr inbounds %struct.usb_device, %struct.usb_device* %11, i32 0, i32 8, !dbg !21846
  %12 = load i32, i32* %ttport, align 8, !dbg !21846
  %sub = sub i32 %12, 1, !dbg !21847
  %idxprom = sext i32 %sub to i64, !dbg !21844
  %arrayidx = getelementptr %struct.ehci_tt*, %struct.ehci_tt** %10, i64 %idxprom, !dbg !21844
  store %struct.ehci_tt** %arrayidx, %struct.ehci_tt*** %ptt, align 8, !dbg !21848
  store i32 0, i32* %i, align 4, !dbg !21849
  br label %for.cond, !dbg !21851

for.cond:                                         ; preds = %for.inc, %if.then4
  %13 = load i32, i32* %i, align 4, !dbg !21852
  %14 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !21854
  %hub = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %14, i32 0, i32 0, !dbg !21855
  %15 = load %struct.usb_device*, %struct.usb_device** %hub, align 8, !dbg !21855
  %maxchild = getelementptr inbounds %struct.usb_device, %struct.usb_device* %15, i32 0, i32 35, !dbg !21856
  %16 = load i32, i32* %maxchild, align 8, !dbg !21856
  %cmp = icmp slt i32 %13, %16, !dbg !21857
  br i1 %cmp, label %for.body, label %for.end, !dbg !21858

for.body:                                         ; preds = %for.cond
  %17 = load %struct.ehci_tt**, %struct.ehci_tt*** %tt_index, align 8, !dbg !21859
  %18 = load i32, i32* %i, align 4, !dbg !21860
  %idxprom6 = sext i32 %18 to i64, !dbg !21859
  %arrayidx7 = getelementptr %struct.ehci_tt*, %struct.ehci_tt** %17, i64 %idxprom6, !dbg !21859
  %19 = load %struct.ehci_tt*, %struct.ehci_tt** %arrayidx7, align 8, !dbg !21859
  %tobool8 = icmp ne %struct.ehci_tt* %19, null, !dbg !21861
  %lnot = xor i1 %tobool8, true, !dbg !21861
  %lnot9 = xor i1 %lnot, true, !dbg !21862
  %lnot.ext = zext i1 %lnot9 to i32, !dbg !21862
  %20 = load i32, i32* %cnt, align 4, !dbg !21863
  %add = add i32 %20, %lnot.ext, !dbg !21863
  store i32 %add, i32* %cnt, align 4, !dbg !21863
  br label %for.inc, !dbg !21864

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %i, align 4, !dbg !21865
  %inc = add i32 %21, 1, !dbg !21865
  store i32 %inc, i32* %i, align 4, !dbg !21865
  br label %for.cond, !dbg !21866, !llvm.loop !21867

for.end:                                          ; preds = %for.cond
  br label %if.end11, !dbg !21869

if.else:                                          ; preds = %if.end
  store %struct.ehci_tt** null, %struct.ehci_tt*** %tt_index, align 8, !dbg !21870
  %22 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !21872
  %hcpriv10 = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %22, i32 0, i32 3, !dbg !21873
  %23 = bitcast i8** %hcpriv10 to %struct.ehci_tt**, !dbg !21874
  store %struct.ehci_tt** %23, %struct.ehci_tt*** %ptt, align 8, !dbg !21875
  br label %if.end11

if.end11:                                         ; preds = %if.else, %for.end
  %24 = load %struct.ehci_tt**, %struct.ehci_tt*** %ptt, align 8, !dbg !21876
  %25 = load %struct.ehci_tt*, %struct.ehci_tt** %24, align 8, !dbg !21877
  store %struct.ehci_tt* %25, %struct.ehci_tt** %tt1, align 8, !dbg !21878
  %26 = load %struct.ehci_tt*, %struct.ehci_tt** %tt1, align 8, !dbg !21879
  %tobool12 = icmp ne %struct.ehci_tt* %26, null, !dbg !21879
  br i1 %tobool12, label %lor.lhs.false13, label %if.then15, !dbg !21881

lor.lhs.false13:                                  ; preds = %if.end11
  %27 = load %struct.ehci_tt*, %struct.ehci_tt** %tt1, align 8, !dbg !21882
  %ps_list = getelementptr inbounds %struct.ehci_tt, %struct.ehci_tt* %27, i32 0, i32 2, !dbg !21883
  %call = call i32 @list_empty(%struct.list_head* %ps_list) #11, !dbg !21884
  %tobool14 = icmp ne i32 %call, 0, !dbg !21884
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !21885

if.then15:                                        ; preds = %lor.lhs.false13, %if.end11
  br label %if.end20, !dbg !21886

if.end16:                                         ; preds = %lor.lhs.false13
  %28 = load %struct.ehci_tt*, %struct.ehci_tt** %tt1, align 8, !dbg !21887
  %tt_list = getelementptr inbounds %struct.ehci_tt, %struct.ehci_tt* %28, i32 0, i32 1, !dbg !21888
  call void @list_del(%struct.list_head* %tt_list) #11, !dbg !21889
  %29 = load %struct.ehci_tt**, %struct.ehci_tt*** %ptt, align 8, !dbg !21890
  store %struct.ehci_tt* null, %struct.ehci_tt** %29, align 8, !dbg !21891
  %30 = load %struct.ehci_tt*, %struct.ehci_tt** %tt1, align 8, !dbg !21892
  %31 = bitcast %struct.ehci_tt* %30 to i8*, !dbg !21892
  call void @kfree(i8* %31) #11, !dbg !21893
  %32 = load i32, i32* %cnt, align 4, !dbg !21894
  %cmp17 = icmp eq i32 %32, 1, !dbg !21896
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !21897

if.then18:                                        ; preds = %if.end16
  %33 = load %struct.usb_tt*, %struct.usb_tt** %utt, align 8, !dbg !21898
  %hcpriv19 = getelementptr inbounds %struct.usb_tt, %struct.usb_tt* %33, i32 0, i32 3, !dbg !21900
  store i8* null, i8** %hcpriv19, align 8, !dbg !21901
  %34 = load %struct.ehci_tt**, %struct.ehci_tt*** %tt_index, align 8, !dbg !21902
  %35 = bitcast %struct.ehci_tt** %34 to i8*, !dbg !21902
  call void @kfree(i8* %35) #11, !dbg !21903
  br label %if.end20, !dbg !21904

if.end20:                                         ; preds = %if.then, %if.then15, %if.then18, %if.end16
  ret void, !dbg !21905
}

; Function Attrs: noredzone
declare dso_local i32 @usb_disabled() #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { noredzone nounwind }
attributes #13 = { cold noredzone }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!6279}
!llvm.module.flags = !{!6280, !6281, !6282, !6283}
!llvm.ident = !{!6284}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_log2_irq_thresh", scope: !2, file: !3, line: 80, type: !6276, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !302, globals: !6106, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/usb/host/ehci-hcd.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !22, !27, !33, !45, !54, !59, !66, !72, !79, !91, !98, !103, !109, !115, !122, !128, !137, !145, !151, !157, !164, !171, !178, !183, !189, !195, !201, !208, !231, !247, !255, !260, !266, !271, !288, !295}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ehci_hrtimer_event", file: !6, line: 94, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "drivers/usb/host/ehci.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21}
!9 = !DIEnumerator(name: "EHCI_HRTIMER_POLL_ASS", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "EHCI_HRTIMER_POLL_PSS", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "EHCI_HRTIMER_POLL_DEAD", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "EHCI_HRTIMER_UNLINK_INTR", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "EHCI_HRTIMER_FREE_ITDS", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "EHCI_HRTIMER_ACTIVE_UNLINK", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "EHCI_HRTIMER_START_UNLINK_INTR", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "EHCI_HRTIMER_ASYNC_UNLINKS", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "EHCI_HRTIMER_IAA_WATCHDOG", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "EHCI_HRTIMER_DISABLE_PERIODIC", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "EHCI_HRTIMER_DISABLE_ASYNC", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "EHCI_HRTIMER_IO_WATCHDOG", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "EHCI_HRTIMER_NUM_EVENTS", value: 12, isUnsigned: true)
!22 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !23, line: 65, baseType: !7, size: 32, elements: !24)
!23 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!24 = !{!25, !26}
!25 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!26 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ehci_rh_state", file: !6, line: 82, baseType: !7, size: 32, elements: !28)
!28 = !{!29, !30, !31, !32}
!29 = !DIEnumerator(name: "EHCI_RH_HALTED", value: 0, isUnsigned: true)
!30 = !DIEnumerator(name: "EHCI_RH_SUSPENDED", value: 1, isUnsigned: true)
!31 = !DIEnumerator(name: "EHCI_RH_RUNNING", value: 2, isUnsigned: true)
!32 = !DIEnumerator(name: "EHCI_RH_STOPPING", value: 3, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_state", file: !34, line: 1156, baseType: !7, size: 32, elements: !35)
!34 = !DIFile(filename: "./include/uapi/linux/usb/ch9.h", directory: "/home/lizy2001/genbc/linux")
!35 = !{!36, !37, !38, !39, !40, !41, !42, !43, !44}
!36 = !DIEnumerator(name: "USB_STATE_NOTATTACHED", value: 0, isUnsigned: true)
!37 = !DIEnumerator(name: "USB_STATE_ATTACHED", value: 1, isUnsigned: true)
!38 = !DIEnumerator(name: "USB_STATE_POWERED", value: 2, isUnsigned: true)
!39 = !DIEnumerator(name: "USB_STATE_RECONNECTING", value: 3, isUnsigned: true)
!40 = !DIEnumerator(name: "USB_STATE_UNAUTHENTICATED", value: 4, isUnsigned: true)
!41 = !DIEnumerator(name: "USB_STATE_DEFAULT", value: 5, isUnsigned: true)
!42 = !DIEnumerator(name: "USB_STATE_ADDRESS", value: 6, isUnsigned: true)
!43 = !DIEnumerator(name: "USB_STATE_CONFIGURED", value: 7, isUnsigned: true)
!44 = !DIEnumerator(name: "USB_STATE_SUSPENDED", value: 8, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_speed", file: !34, line: 1146, baseType: !7, size: 32, elements: !46)
!46 = !{!47, !48, !49, !50, !51, !52, !53}
!47 = !DIEnumerator(name: "USB_SPEED_UNKNOWN", value: 0, isUnsigned: true)
!48 = !DIEnumerator(name: "USB_SPEED_LOW", value: 1, isUnsigned: true)
!49 = !DIEnumerator(name: "USB_SPEED_FULL", value: 2, isUnsigned: true)
!50 = !DIEnumerator(name: "USB_SPEED_HIGH", value: 3, isUnsigned: true)
!51 = !DIEnumerator(name: "USB_SPEED_WIRELESS", value: 4, isUnsigned: true)
!52 = !DIEnumerator(name: "USB_SPEED_SUPER", value: 5, isUnsigned: true)
!53 = !DIEnumerator(name: "USB_SPEED_SUPER_PLUS", value: 6, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !55, line: 41, baseType: !7, size: 32, elements: !56)
!55 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!56 = !{!57, !58}
!57 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!58 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !60, line: 15, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65}
!62 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !67, line: 118, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !73, line: 19, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !80, line: 49, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86, !87, !88, !89, !90}
!82 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!87 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!88 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!89 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!90 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !92, line: 502, baseType: !7, size: 32, elements: !93)
!92 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!93 = !{!94, !95, !96, !97}
!94 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!95 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!96 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!97 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!98 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !67, line: 315, baseType: !7, size: 32, elements: !99)
!99 = !{!100, !101, !102}
!100 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!101 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!102 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !104, line: 546, baseType: !7, size: 32, elements: !105)
!104 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!105 = !{!106, !107, !108}
!106 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!107 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!108 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!109 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !110, line: 16, baseType: !7, size: 32, elements: !111)
!110 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!111 = !{!112, !113, !114}
!112 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!113 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!114 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !116, line: 59, baseType: !7, size: 32, elements: !117)
!116 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!117 = !{!118, !119, !120, !121}
!118 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!119 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!120 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!121 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !123, line: 54, baseType: !7, size: 32, elements: !124)
!123 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!124 = !{!125, !126, !127}
!125 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!127 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !129, line: 296, baseType: !7, size: 32, elements: !130)
!129 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!130 = !{!131, !132, !133, !134, !135, !136}
!131 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!134 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!135 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!136 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !138, line: 9, baseType: !7, size: 32, elements: !139)
!138 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!139 = !{!140, !141, !142, !143, !144}
!140 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!141 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!142 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!143 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!144 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !146, line: 26, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!147 = !{!148, !149, !150}
!148 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!150 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!151 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !152, line: 44, baseType: !7, size: 32, elements: !153)
!152 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!153 = !{!154, !155, !156}
!154 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!155 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!156 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !158, line: 343, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!159 = !{!160, !161, !162, !163}
!160 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!164 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !92, line: 524, baseType: !7, size: 32, elements: !165)
!165 = !{!166, !167, !168, !169, !170}
!166 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!170 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!171 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_interface_condition", file: !172, line: 96, baseType: !7, size: 32, elements: !173)
!172 = !DIFile(filename: "./include/linux/usb.h", directory: "/home/lizy2001/genbc/linux")
!173 = !{!174, !175, !176, !177}
!174 = !DIEnumerator(name: "USB_INTERFACE_UNBOUND", value: 0, isUnsigned: true)
!175 = !DIEnumerator(name: "USB_INTERFACE_BINDING", value: 1, isUnsigned: true)
!176 = !DIEnumerator(name: "USB_INTERFACE_BOUND", value: 2, isUnsigned: true)
!177 = !DIEnumerator(name: "USB_INTERFACE_UNBINDING", value: 3, isUnsigned: true)
!178 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_device_removable", file: !172, line: 476, baseType: !7, size: 32, elements: !179)
!179 = !{!180, !181, !182}
!180 = !DIEnumerator(name: "USB_DEVICE_REMOVABLE_UNKNOWN", value: 0, isUnsigned: true)
!181 = !DIEnumerator(name: "USB_DEVICE_REMOVABLE", value: 1, isUnsigned: true)
!182 = !DIEnumerator(name: "USB_DEVICE_FIXED", value: 2, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !184, line: 11, baseType: !7, size: 32, elements: !185)
!184 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!185 = !{!186, !187, !188}
!186 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!187 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!188 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb3_link_state", file: !34, line: 1181, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194}
!191 = !DIEnumerator(name: "USB3_LPM_U0", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "USB3_LPM_U1", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "USB3_LPM_U2", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "USB3_LPM_U3", value: 3, isUnsigned: true)
!195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_phy_type", file: !196, line: 36, baseType: !7, size: 32, elements: !197)
!196 = !DIFile(filename: "./include/linux/usb/phy.h", directory: "/home/lizy2001/genbc/linux")
!197 = !{!198, !199, !200}
!198 = !DIEnumerator(name: "USB_PHY_TYPE_UNDEFINED", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "USB_PHY_TYPE_USB2", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "USB_PHY_TYPE_USB3", value: 2, isUnsigned: true)
!201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_phy_events", file: !196, line: 27, baseType: !7, size: 32, elements: !202)
!202 = !{!203, !204, !205, !206, !207}
!203 = !DIEnumerator(name: "USB_EVENT_NONE", value: 0, isUnsigned: true)
!204 = !DIEnumerator(name: "USB_EVENT_VBUS", value: 1, isUnsigned: true)
!205 = !DIEnumerator(name: "USB_EVENT_ID", value: 2, isUnsigned: true)
!206 = !DIEnumerator(name: "USB_EVENT_CHARGER", value: 3, isUnsigned: true)
!207 = !DIEnumerator(name: "USB_EVENT_ENUMERATED", value: 4, isUnsigned: true)
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "phy_mode", file: !209, line: 24, baseType: !7, size: 32, elements: !210)
!209 = !DIFile(filename: "./include/linux/phy/phy.h", directory: "/home/lizy2001/genbc/linux")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230}
!211 = !DIEnumerator(name: "PHY_MODE_INVALID", value: 0, isUnsigned: true)
!212 = !DIEnumerator(name: "PHY_MODE_USB_HOST", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "PHY_MODE_USB_HOST_LS", value: 2, isUnsigned: true)
!214 = !DIEnumerator(name: "PHY_MODE_USB_HOST_FS", value: 3, isUnsigned: true)
!215 = !DIEnumerator(name: "PHY_MODE_USB_HOST_HS", value: 4, isUnsigned: true)
!216 = !DIEnumerator(name: "PHY_MODE_USB_HOST_SS", value: 5, isUnsigned: true)
!217 = !DIEnumerator(name: "PHY_MODE_USB_DEVICE", value: 6, isUnsigned: true)
!218 = !DIEnumerator(name: "PHY_MODE_USB_DEVICE_LS", value: 7, isUnsigned: true)
!219 = !DIEnumerator(name: "PHY_MODE_USB_DEVICE_FS", value: 8, isUnsigned: true)
!220 = !DIEnumerator(name: "PHY_MODE_USB_DEVICE_HS", value: 9, isUnsigned: true)
!221 = !DIEnumerator(name: "PHY_MODE_USB_DEVICE_SS", value: 10, isUnsigned: true)
!222 = !DIEnumerator(name: "PHY_MODE_USB_OTG", value: 11, isUnsigned: true)
!223 = !DIEnumerator(name: "PHY_MODE_UFS_HS_A", value: 12, isUnsigned: true)
!224 = !DIEnumerator(name: "PHY_MODE_UFS_HS_B", value: 13, isUnsigned: true)
!225 = !DIEnumerator(name: "PHY_MODE_PCIE", value: 14, isUnsigned: true)
!226 = !DIEnumerator(name: "PHY_MODE_ETHERNET", value: 15, isUnsigned: true)
!227 = !DIEnumerator(name: "PHY_MODE_MIPI_DPHY", value: 16, isUnsigned: true)
!228 = !DIEnumerator(name: "PHY_MODE_SATA", value: 17, isUnsigned: true)
!229 = !DIEnumerator(name: "PHY_MODE_LVDS", value: 18, isUnsigned: true)
!230 = !DIEnumerator(name: "PHY_MODE_DP", value: 19, isUnsigned: true)
!231 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_otg_state", file: !196, line: 43, baseType: !7, size: 32, elements: !232)
!232 = !{!233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246}
!233 = !DIEnumerator(name: "OTG_STATE_UNDEFINED", value: 0, isUnsigned: true)
!234 = !DIEnumerator(name: "OTG_STATE_B_IDLE", value: 1, isUnsigned: true)
!235 = !DIEnumerator(name: "OTG_STATE_B_SRP_INIT", value: 2, isUnsigned: true)
!236 = !DIEnumerator(name: "OTG_STATE_B_PERIPHERAL", value: 3, isUnsigned: true)
!237 = !DIEnumerator(name: "OTG_STATE_B_WAIT_ACON", value: 4, isUnsigned: true)
!238 = !DIEnumerator(name: "OTG_STATE_B_HOST", value: 5, isUnsigned: true)
!239 = !DIEnumerator(name: "OTG_STATE_A_IDLE", value: 6, isUnsigned: true)
!240 = !DIEnumerator(name: "OTG_STATE_A_WAIT_VRISE", value: 7, isUnsigned: true)
!241 = !DIEnumerator(name: "OTG_STATE_A_WAIT_BCON", value: 8, isUnsigned: true)
!242 = !DIEnumerator(name: "OTG_STATE_A_HOST", value: 9, isUnsigned: true)
!243 = !DIEnumerator(name: "OTG_STATE_A_SUSPEND", value: 10, isUnsigned: true)
!244 = !DIEnumerator(name: "OTG_STATE_A_PERIPHERAL", value: 11, isUnsigned: true)
!245 = !DIEnumerator(name: "OTG_STATE_A_WAIT_VFALL", value: 12, isUnsigned: true)
!246 = !DIEnumerator(name: "OTG_STATE_A_VBUS_ERR", value: 13, isUnsigned: true)
!247 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_charger_type", file: !248, line: 16, baseType: !7, size: 32, elements: !249)
!248 = !DIFile(filename: "./include/uapi/linux/usb/charger.h", directory: "/home/lizy2001/genbc/linux")
!249 = !{!250, !251, !252, !253, !254}
!250 = !DIEnumerator(name: "UNKNOWN_TYPE", value: 0, isUnsigned: true)
!251 = !DIEnumerator(name: "SDP_TYPE", value: 1, isUnsigned: true)
!252 = !DIEnumerator(name: "DCP_TYPE", value: 2, isUnsigned: true)
!253 = !DIEnumerator(name: "CDP_TYPE", value: 3, isUnsigned: true)
!254 = !DIEnumerator(name: "ACA_TYPE", value: 4, isUnsigned: true)
!255 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_charger_state", file: !248, line: 25, baseType: !7, size: 32, elements: !256)
!256 = !{!257, !258, !259}
!257 = !DIEnumerator(name: "USB_CHARGER_DEFAULT", value: 0, isUnsigned: true)
!258 = !DIEnumerator(name: "USB_CHARGER_PRESENT", value: 1, isUnsigned: true)
!259 = !DIEnumerator(name: "USB_CHARGER_ABSENT", value: 2, isUnsigned: true)
!260 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "usb_dev_authorize_policy", file: !261, line: 75, baseType: !7, size: 32, elements: !262)
!261 = !DIFile(filename: "./include/linux/usb/hcd.h", directory: "/home/lizy2001/genbc/linux")
!262 = !{!263, !264, !265}
!263 = !DIEnumerator(name: "USB_DEVICE_AUTHORIZE_NONE", value: 0, isUnsigned: true)
!264 = !DIEnumerator(name: "USB_DEVICE_AUTHORIZE_ALL", value: 1, isUnsigned: true)
!265 = !DIEnumerator(name: "USB_DEVICE_AUTHORIZE_INTERNAL", value: 2, isUnsigned: true)
!266 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !267, line: 10, baseType: !7, size: 32, elements: !268)
!267 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!268 = !{!269, !270}
!269 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!270 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!271 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_mode", file: !23, line: 39, baseType: !7, size: 32, elements: !272)
!272 = !{!273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287}
!273 = !DIEnumerator(name: "HRTIMER_MODE_ABS", value: 0, isUnsigned: true)
!274 = !DIEnumerator(name: "HRTIMER_MODE_REL", value: 1, isUnsigned: true)
!275 = !DIEnumerator(name: "HRTIMER_MODE_PINNED", value: 2, isUnsigned: true)
!276 = !DIEnumerator(name: "HRTIMER_MODE_SOFT", value: 4, isUnsigned: true)
!277 = !DIEnumerator(name: "HRTIMER_MODE_HARD", value: 8, isUnsigned: true)
!278 = !DIEnumerator(name: "HRTIMER_MODE_ABS_PINNED", value: 2, isUnsigned: true)
!279 = !DIEnumerator(name: "HRTIMER_MODE_REL_PINNED", value: 3, isUnsigned: true)
!280 = !DIEnumerator(name: "HRTIMER_MODE_ABS_SOFT", value: 4, isUnsigned: true)
!281 = !DIEnumerator(name: "HRTIMER_MODE_REL_SOFT", value: 5, isUnsigned: true)
!282 = !DIEnumerator(name: "HRTIMER_MODE_ABS_PINNED_SOFT", value: 6, isUnsigned: true)
!283 = !DIEnumerator(name: "HRTIMER_MODE_REL_PINNED_SOFT", value: 7, isUnsigned: true)
!284 = !DIEnumerator(name: "HRTIMER_MODE_ABS_HARD", value: 8, isUnsigned: true)
!285 = !DIEnumerator(name: "HRTIMER_MODE_REL_HARD", value: 9, isUnsigned: true)
!286 = !DIEnumerator(name: "HRTIMER_MODE_ABS_PINNED_HARD", value: 10, isUnsigned: true)
!287 = !DIEnumerator(name: "HRTIMER_MODE_REL_PINNED_HARD", value: 11, isUnsigned: true)
!288 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !289, line: 305, baseType: !7, size: 32, elements: !290)
!289 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!290 = !{!291, !292, !293, !294}
!291 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!292 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!293 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!294 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!295 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tk_offsets", file: !296, line: 60, baseType: !7, size: 32, elements: !297)
!296 = !DIFile(filename: "./include/linux/timekeeping.h", directory: "/home/lizy2001/genbc/linux")
!297 = !{!298, !299, !300, !301}
!298 = !DIEnumerator(name: "TK_OFFS_REAL", value: 0, isUnsigned: true)
!299 = !DIEnumerator(name: "TK_OFFS_BOOT", value: 1, isUnsigned: true)
!300 = !DIEnumerator(name: "TK_OFFS_TAI", value: 2, isUnsigned: true)
!301 = !DIEnumerator(name: "TK_OFFS_MAX", value: 3, isUnsigned: true)
!302 = !{!303, !307, !340, !341, !342, !5812, !5814, !465, !401, !6087, !6089, !317, !319, !6090, !5103, !305, !5988, !946, !7, !5884, !6091, !6094, !5993, !6095, !6105, !5907, !5961, !5888, !558, !417}
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !304, line: 21, baseType: !305)
!304 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !306, line: 27, baseType: !7)
!306 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_hub_descriptor", file: !309, line: 262, size: 120, elements: !310)
!309 = !DIFile(filename: "./include/uapi/linux/usb/ch11.h", directory: "/home/lizy2001/genbc/linux")
!310 = !{!311, !314, !315, !316, !321, !322, !323}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "bDescLength", scope: !308, file: !309, line: 263, baseType: !312, size: 8)
!312 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !306, line: 21, baseType: !313)
!313 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !308, file: !309, line: 264, baseType: !312, size: 8, offset: 8)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "bNbrPorts", scope: !308, file: !309, line: 265, baseType: !312, size: 8, offset: 16)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "wHubCharacteristics", scope: !308, file: !309, line: 266, baseType: !317, size: 16, offset: 24)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !318, line: 29, baseType: !319)
!318 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !306, line: 24, baseType: !320)
!320 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "bPwrOn2PwrGood", scope: !308, file: !309, line: 267, baseType: !312, size: 8, offset: 40)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "bHubContrCurrent", scope: !308, file: !309, line: 268, baseType: !312, size: 8, offset: 48)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !308, file: !309, line: 283, baseType: !324, size: 64, offset: 56)
!324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !308, file: !309, line: 271, size: 64, elements: !325)
!325 = !{!326, !334}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "hs", scope: !324, file: !309, line: 276, baseType: !327, size: 64)
!327 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !324, file: !309, line: 272, size: 64, elements: !328)
!328 = !{!329, !333}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceRemovable", scope: !327, file: !309, line: 274, baseType: !330, size: 32)
!330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 32, elements: !331)
!331 = !{!332}
!332 = !DISubrange(count: 4)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "PortPwrCtrlMask", scope: !327, file: !309, line: 275, baseType: !330, size: 32, offset: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !324, file: !309, line: 282, baseType: !335, size: 40)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !324, file: !309, line: 278, size: 40, elements: !336)
!336 = !{!337, !338, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "bHubHdrDecLat", scope: !335, file: !309, line: 279, baseType: !312, size: 8)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "wHubDelay", scope: !335, file: !309, line: 280, baseType: !317, size: 16, offset: 8)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceRemovable", scope: !335, file: !309, line: 281, baseType: !317, size: 16, offset: 24)
!340 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_hcd", file: !261, line: 81, size: 4672, elements: !344)
!344 = !{!345, !5336, !5337, !5338, !5339, !5341, !5342, !5404, !5405, !5406, !5527, !5745, !5748, !5749, !5750, !5751, !5752, !5753, !5754, !5755, !5756, !5757, !5758, !5759, !5760, !5761, !5762, !5763, !5764, !5766, !5767, !5768, !5796, !5797, !5799, !5800, !5801, !5802, !5807, !5808, !5811}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !343, file: !261, line: 86, baseType: !346, size: 960)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_bus", file: !172, line: 424, size: 960, elements: !347)
!347 = !{!348, !5029, !5030, !5031, !5032, !5033, !5034, !5035, !5036, !5037, !5038, !5039, !5040, !5041, !5046, !5331, !5332, !5333, !5334, !5335}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !346, file: !172, line: 425, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !158, line: 461, size: 5568, elements: !351)
!351 = !{!352, !4573, !4574, !4577, !4578, !4628, !4719, !4720, !4721, !4722, !4723, !4732, !4826, !4839, !4842, !4843, !4847, !4849, !4850, !4851, !4855, !4861, !4862, !4865, !4980, !4981, !4982, !4983, !4984, !4985, !5017, !5018, !5019, !5022, !5025, !5026, !5027, !5028}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !350, file: !158, line: 462, baseType: !353, size: 512)
!353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !354, line: 64, size: 512, elements: !355)
!354 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!355 = !{!356, !360, !367, !369, !430, !4440, !4567, !4568, !4569, !4570, !4571, !4572}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !353, file: !354, line: 65, baseType: !357, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !359)
!359 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !353, file: !354, line: 66, baseType: !361, size: 128, offset: 64)
!361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !362, line: 178, size: 128, elements: !363)
!362 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!363 = !{!364, !366}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !361, file: !362, line: 179, baseType: !365, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !361, file: !362, line: 179, baseType: !365, size: 64, offset: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !353, file: !354, line: 67, baseType: !368, size: 64, offset: 192)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !353, file: !354, line: 68, baseType: !370, size: 64, offset: 256)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !354, line: 192, size: 704, elements: !372)
!372 = !{!373, !374, !390, !391}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !371, file: !354, line: 193, baseType: !361, size: 128)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !371, file: !354, line: 194, baseType: !375, offset: 128)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !376, line: 83, baseType: !377)
!376 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !376, line: 71, elements: !378)
!378 = !{!379}
!379 = !DIDerivedType(tag: DW_TAG_member, scope: !377, file: !376, line: 72, baseType: !380)
!380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !377, file: !376, line: 72, elements: !381)
!381 = !{!382}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !380, file: !376, line: 73, baseType: !383)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !376, line: 20, elements: !384)
!384 = !{!385}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !383, file: !376, line: 21, baseType: !386)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !387, line: 25, baseType: !388)
!387 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!388 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 25, elements: !389)
!389 = !{}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !371, file: !354, line: 195, baseType: !353, size: 512, offset: 128)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !371, file: !354, line: 196, baseType: !392, size: 64, offset: 640)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !394)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !354, line: 156, size: 192, elements: !395)
!395 = !{!396, !402, !407}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !394, file: !354, line: 157, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !398)
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !399, size: 64)
!399 = !DISubroutineType(types: !400)
!400 = !{!401, !370, !368}
!401 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !394, file: !354, line: 158, baseType: !403, size: 64, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !404)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DISubroutineType(types: !406)
!406 = !{!357, !370, !368}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !394, file: !354, line: 159, baseType: !408, size: 64, offset: 128)
!408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !409)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!410 = !DISubroutineType(types: !411)
!411 = !{!401, !370, !368, !412}
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !354, line: 148, size: 20736, elements: !414)
!414 = !{!415, !420, !424, !425, !429}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !413, file: !354, line: 149, baseType: !416, size: 192)
!416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 192, elements: !418)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!418 = !{!419}
!419 = !DISubrange(count: 3)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !413, file: !354, line: 150, baseType: !421, size: 4096, offset: 192)
!421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 4096, elements: !422)
!422 = !{!423}
!423 = !DISubrange(count: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !413, file: !354, line: 151, baseType: !401, size: 32, offset: 4288)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !413, file: !354, line: 152, baseType: !426, size: 16384, offset: 4320)
!426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !359, size: 16384, elements: !427)
!427 = !{!428}
!428 = !DISubrange(count: 2048)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !413, file: !354, line: 153, baseType: !401, size: 32, offset: 20704)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !353, file: !354, line: 69, baseType: !431, size: 64, offset: 320)
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !354, line: 138, size: 448, elements: !433)
!433 = !{!434, !438, !466, !468, !4404, !4432, !4436}
!434 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !432, file: !354, line: 139, baseType: !435, size: 64)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DISubroutineType(types: !437)
!437 = !{null, !368}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !432, file: !354, line: 140, baseType: !439, size: 64, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !441)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !442, line: 230, size: 128, elements: !443)
!442 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!443 = !{!444, !458}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !441, file: !442, line: 231, baseType: !445, size: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DISubroutineType(types: !447)
!447 = !{!448, !368, !452, !417}
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !362, line: 60, baseType: !449)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !450, line: 73, baseType: !451)
!450 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !450, line: 15, baseType: !340)
!452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !442, line: 30, size: 128, elements: !454)
!454 = !{!455, !456}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !453, file: !442, line: 31, baseType: !357, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !453, file: !442, line: 32, baseType: !457, size: 16, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !362, line: 19, baseType: !320)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !441, file: !442, line: 232, baseType: !459, size: 64, offset: 64)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = !DISubroutineType(types: !461)
!461 = !{!448, !368, !452, !357, !462}
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !362, line: 55, baseType: !463)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !450, line: 72, baseType: !464)
!464 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !450, line: 16, baseType: !465)
!465 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !432, file: !354, line: 141, baseType: !467, size: 64, offset: 128)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !432, file: !354, line: 142, baseType: !469, size: 64, offset: 192)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !472)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !442, line: 84, size: 320, elements: !473)
!473 = !{!474, !475, !479, !4401, !4402}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !472, file: !442, line: 85, baseType: !357, size: 64)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !472, file: !442, line: 86, baseType: !476, size: 64, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = !DISubroutineType(types: !478)
!478 = !{!457, !368, !452, !401}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !472, file: !442, line: 88, baseType: !480, size: 64, offset: 128)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = !DISubroutineType(types: !482)
!482 = !{!457, !368, !483, !401}
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !442, line: 168, size: 448, elements: !485)
!485 = !{!486, !487, !488, !489, !4396, !4397}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !484, file: !442, line: 169, baseType: !453, size: 128)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !484, file: !442, line: 170, baseType: !462, size: 64, offset: 128)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !484, file: !442, line: 171, baseType: !341, size: 64, offset: 192)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !484, file: !442, line: 172, baseType: !490, size: 64, offset: 256)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!491 = !DISubroutineType(types: !492)
!492 = !{!448, !493, !368, !483, !417, !667, !462}
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !129, line: 916, size: 1856, align: 32, elements: !495)
!495 = !{!496, !514, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4379, !4380, !4389, !4390, !4391, !4392, !4393, !4394, !4395}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !494, file: !129, line: 920, baseType: !497, size: 128)
!497 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !494, file: !129, line: 917, size: 128, elements: !498)
!498 = !{!499, !505}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !497, file: !129, line: 918, baseType: !500, size: 64)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !501, line: 58, size: 64, elements: !502)
!501 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!502 = !{!503}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !500, file: !501, line: 59, baseType: !504, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !497, file: !129, line: 919, baseType: !506, size: 128, align: 64)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !362, line: 216, size: 128, align: 64, elements: !507)
!507 = !{!508, !510}
!508 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !506, file: !362, line: 217, baseType: !509, size: 64)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !506, file: !362, line: 218, baseType: !511, size: 64, offset: 64)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = !DISubroutineType(types: !513)
!513 = !{null, !509}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !494, file: !129, line: 921, baseType: !515, size: 128, offset: 128)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !516, line: 8, size: 128, elements: !517)
!516 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!517 = !{!518, !522}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !515, file: !516, line: 9, baseType: !519, size: 64)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !521, line: 18, flags: DIFlagFwdDecl)
!521 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!522 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !515, file: !516, line: 10, baseType: !523, size: 64, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !521, line: 89, size: 1536, elements: !525)
!525 = !{!526, !527, !537, !545, !546, !564, !4329, !4331, !4343, !4344, !4345, !4346, !4347, !4353, !4354, !4355}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !524, file: !521, line: 91, baseType: !7, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !524, file: !521, line: 92, baseType: !528, size: 32, offset: 32)
!528 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !529, line: 277, baseType: !530)
!529 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !529, line: 277, size: 32, elements: !531)
!531 = !{!532}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !530, file: !529, line: 277, baseType: !533, size: 32)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !529, line: 70, baseType: !534)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !529, line: 65, size: 32, elements: !535)
!535 = !{!536}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !534, file: !529, line: 66, baseType: !7, size: 32)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !524, file: !521, line: 93, baseType: !538, size: 128, offset: 64)
!538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !539, line: 38, size: 128, elements: !540)
!539 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!540 = !{!541, !543}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !538, file: !539, line: 39, baseType: !542, size: 64)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !538, file: !539, line: 39, baseType: !544, size: 64, offset: 64)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !524, file: !521, line: 94, baseType: !523, size: 64, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !524, file: !521, line: 95, baseType: !547, size: 128, offset: 256)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !521, line: 47, size: 128, elements: !548)
!548 = !{!549, !561}
!549 = !DIDerivedType(tag: DW_TAG_member, scope: !547, file: !521, line: 48, baseType: !550, size: 64)
!550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !547, file: !521, line: 48, size: 64, elements: !551)
!551 = !{!552, !557}
!552 = !DIDerivedType(tag: DW_TAG_member, scope: !550, file: !521, line: 49, baseType: !553, size: 64)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !550, file: !521, line: 49, size: 64, elements: !554)
!554 = !{!555, !556}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !553, file: !521, line: 50, baseType: !303, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !553, file: !521, line: 50, baseType: !303, size: 32, offset: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !550, file: !521, line: 52, baseType: !558, size: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !304, line: 23, baseType: !559)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !306, line: 31, baseType: !560)
!560 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !547, file: !521, line: 54, baseType: !562, size: 64, offset: 64)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !313)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !524, file: !521, line: 96, baseType: !565, size: 64, offset: 384)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !129, line: 610, size: 4224, elements: !567)
!567 = !{!568, !569, !570, !578, !585, !586, !734, !4043, !4044, !4045, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4074, !4075, !4076, !4077, !4078, !4079, !4080, !4305, !4313, !4314, !4315, !4325, !4326, !4327, !4328}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !566, file: !129, line: 611, baseType: !457, size: 16)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !566, file: !129, line: 612, baseType: !320, size: 16, offset: 16)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !566, file: !129, line: 613, baseType: !571, size: 32, offset: 32)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !572, line: 23, baseType: !573)
!572 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 21, size: 32, elements: !574)
!574 = !{!575}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !573, file: !572, line: 22, baseType: !576, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !362, line: 32, baseType: !577)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !450, line: 49, baseType: !7)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !566, file: !129, line: 614, baseType: !579, size: 32, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !572, line: 28, baseType: !580)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 26, size: 32, elements: !581)
!581 = !{!582}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !580, file: !572, line: 27, baseType: !583, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !362, line: 33, baseType: !584)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !450, line: 50, baseType: !7)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !566, file: !129, line: 615, baseType: !7, size: 32, offset: 96)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !566, file: !129, line: 622, baseType: !587, size: 64, offset: 128)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !129, line: 1864, size: 1536, align: 512, elements: !590)
!590 = !{!591, !595, !608, !612, !618, !622, !628, !632, !636, !640, !644, !645, !651, !655, !681, !710, !714, !720, !725, !729, !730}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !589, file: !129, line: 1865, baseType: !592, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = !DISubroutineType(types: !594)
!594 = !{!523, !565, !523, !7}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !589, file: !129, line: 1866, baseType: !596, size: 64, offset: 64)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DISubroutineType(types: !598)
!598 = !{!357, !523, !565, !599}
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !601, line: 10, size: 128, elements: !602)
!601 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!602 = !{!603, !607}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !600, file: !601, line: 11, baseType: !604, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = !DISubroutineType(types: !606)
!606 = !{null, !341}
!607 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !600, file: !601, line: 12, baseType: !341, size: 64, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !589, file: !129, line: 1867, baseType: !609, size: 64, offset: 128)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DISubroutineType(types: !611)
!611 = !{!401, !565, !401}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !589, file: !129, line: 1868, baseType: !613, size: 64, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DISubroutineType(types: !615)
!615 = !{!616, !565, !401}
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!617 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !129, line: 581, flags: DIFlagFwdDecl)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !589, file: !129, line: 1870, baseType: !619, size: 64, offset: 256)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DISubroutineType(types: !621)
!621 = !{!401, !523, !417, !401}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !589, file: !129, line: 1872, baseType: !623, size: 64, offset: 320)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DISubroutineType(types: !625)
!625 = !{!401, !565, !523, !457, !626}
!626 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !362, line: 30, baseType: !627)
!627 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !589, file: !129, line: 1873, baseType: !629, size: 64, offset: 384)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DISubroutineType(types: !631)
!631 = !{!401, !523, !565, !523}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !589, file: !129, line: 1874, baseType: !633, size: 64, offset: 448)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DISubroutineType(types: !635)
!635 = !{!401, !565, !523}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !589, file: !129, line: 1875, baseType: !637, size: 64, offset: 512)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = !DISubroutineType(types: !639)
!639 = !{!401, !565, !523, !357}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !589, file: !129, line: 1876, baseType: !641, size: 64, offset: 576)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DISubroutineType(types: !643)
!643 = !{!401, !565, !523, !457}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !589, file: !129, line: 1877, baseType: !633, size: 64, offset: 640)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !589, file: !129, line: 1878, baseType: !646, size: 64, offset: 704)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = !DISubroutineType(types: !648)
!648 = !{!401, !565, !523, !457, !649}
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !362, line: 16, baseType: !650)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !362, line: 13, baseType: !303)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !589, file: !129, line: 1879, baseType: !652, size: 64, offset: 768)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DISubroutineType(types: !654)
!654 = !{!401, !565, !523, !565, !523, !7}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !589, file: !129, line: 1881, baseType: !656, size: 64, offset: 832)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DISubroutineType(types: !658)
!658 = !{!401, !523, !659}
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !129, line: 219, size: 640, elements: !661)
!661 = !{!662, !663, !664, !665, !666, !670, !678, !679, !680}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !660, file: !129, line: 220, baseType: !7, size: 32)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !660, file: !129, line: 221, baseType: !457, size: 16, offset: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !660, file: !129, line: 222, baseType: !571, size: 32, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !660, file: !129, line: 223, baseType: !579, size: 32, offset: 96)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !660, file: !129, line: 224, baseType: !667, size: 64, offset: 128)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !362, line: 46, baseType: !668)
!668 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !450, line: 88, baseType: !669)
!669 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !660, file: !129, line: 225, baseType: !671, size: 128, offset: 192)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !672, line: 13, size: 128, elements: !673)
!672 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!673 = !{!674, !677}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !671, file: !672, line: 14, baseType: !675, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !672, line: 8, baseType: !676)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !306, line: 30, baseType: !669)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !671, file: !672, line: 15, baseType: !340, size: 64, offset: 64)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !660, file: !129, line: 226, baseType: !671, size: 128, offset: 320)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !660, file: !129, line: 227, baseType: !671, size: 128, offset: 448)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !660, file: !129, line: 234, baseType: !493, size: 64, offset: 576)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !589, file: !129, line: 1882, baseType: !682, size: 64, offset: 896)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DISubroutineType(types: !684)
!684 = !{!401, !685, !687, !303, !7}
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !515)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !689, line: 22, size: 1152, elements: !690)
!689 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!690 = !{!691, !692, !693, !694, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !688, file: !689, line: 23, baseType: !303, size: 32)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !688, file: !689, line: 24, baseType: !457, size: 16, offset: 32)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !688, file: !689, line: 25, baseType: !7, size: 32, offset: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !688, file: !689, line: 26, baseType: !695, size: 32, offset: 96)
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !362, line: 104, baseType: !303)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !688, file: !689, line: 27, baseType: !558, size: 64, offset: 128)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !688, file: !689, line: 28, baseType: !558, size: 64, offset: 192)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !688, file: !689, line: 37, baseType: !558, size: 64, offset: 256)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !688, file: !689, line: 38, baseType: !649, size: 32, offset: 320)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !688, file: !689, line: 39, baseType: !649, size: 32, offset: 352)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !688, file: !689, line: 40, baseType: !571, size: 32, offset: 384)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !688, file: !689, line: 41, baseType: !579, size: 32, offset: 416)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !688, file: !689, line: 42, baseType: !667, size: 64, offset: 448)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !688, file: !689, line: 43, baseType: !671, size: 128, offset: 512)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !688, file: !689, line: 44, baseType: !671, size: 128, offset: 640)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !688, file: !689, line: 45, baseType: !671, size: 128, offset: 768)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !688, file: !689, line: 46, baseType: !671, size: 128, offset: 896)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !688, file: !689, line: 47, baseType: !558, size: 64, offset: 1024)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !688, file: !689, line: 48, baseType: !558, size: 64, offset: 1088)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !589, file: !129, line: 1883, baseType: !711, size: 64, offset: 960)
!711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!712 = !DISubroutineType(types: !713)
!713 = !{!448, !523, !417, !462}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !589, file: !129, line: 1884, baseType: !715, size: 64, offset: 1024)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DISubroutineType(types: !717)
!717 = !{!401, !565, !718, !558, !558}
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !129, line: 50, flags: DIFlagFwdDecl)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !589, file: !129, line: 1886, baseType: !721, size: 64, offset: 1088)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DISubroutineType(types: !723)
!723 = !{!401, !565, !724, !401}
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !589, file: !129, line: 1887, baseType: !726, size: 64, offset: 1152)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = !DISubroutineType(types: !728)
!728 = !{!401, !565, !523, !493, !7, !457}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !589, file: !129, line: 1890, baseType: !641, size: 64, offset: 1216)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !589, file: !129, line: 1891, baseType: !731, size: 64, offset: 1280)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = !DISubroutineType(types: !733)
!733 = !{!401, !565, !616, !401}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !566, file: !129, line: 623, baseType: !735, size: 64, offset: 192)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !129, line: 1416, size: 9472, elements: !737)
!737 = !{!738, !739, !740, !741, !742, !743, !793, !3657, !3739, !3822, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3838, !3842, !3843, !3844, !3845, !3848, !3849, !3850, !3891, !3917, !3918, !3919, !3920, !3921, !3922, !3925, !3926, !3933, !3934, !3935, !3936, !3937, !3996, !3997, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !736, file: !129, line: 1417, baseType: !361, size: 128)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !736, file: !129, line: 1418, baseType: !649, size: 32, offset: 128)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !736, file: !129, line: 1419, baseType: !313, size: 8, offset: 160)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !736, file: !129, line: 1420, baseType: !465, size: 64, offset: 192)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !736, file: !129, line: 1421, baseType: !667, size: 64, offset: 256)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !736, file: !129, line: 1422, baseType: !744, size: 64, offset: 320)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !129, line: 2228, size: 576, elements: !746)
!746 = !{!747, !748, !749, !756, !760, !764, !768, !772, !773, !783, !786, !787, !788, !790, !791, !792}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !745, file: !129, line: 2229, baseType: !357, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !745, file: !129, line: 2230, baseType: !401, size: 32, offset: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !745, file: !129, line: 2238, baseType: !750, size: 64, offset: 128)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DISubroutineType(types: !752)
!752 = !{!401, !753}
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !755, line: 28, flags: DIFlagFwdDecl)
!755 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!756 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !745, file: !129, line: 2239, baseType: !757, size: 64, offset: 192)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !759)
!759 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !129, line: 70, flags: DIFlagFwdDecl)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !745, file: !129, line: 2240, baseType: !761, size: 64, offset: 256)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DISubroutineType(types: !763)
!763 = !{!523, !744, !401, !357, !341}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !745, file: !129, line: 2242, baseType: !765, size: 64, offset: 320)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DISubroutineType(types: !767)
!767 = !{null, !735}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !745, file: !129, line: 2243, baseType: !769, size: 64, offset: 384)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !771, line: 76, flags: DIFlagFwdDecl)
!771 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!772 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !745, file: !129, line: 2244, baseType: !744, size: 64, offset: 448)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !745, file: !129, line: 2245, baseType: !774, size: 64, offset: 512)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !362, line: 182, size: 64, elements: !775)
!775 = !{!776}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !774, file: !362, line: 183, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !362, line: 186, size: 128, elements: !779)
!779 = !{!780, !781}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !778, file: !362, line: 187, baseType: !777, size: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !778, file: !362, line: 187, baseType: !782, size: 64, offset: 64)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !745, file: !129, line: 2247, baseType: !784, offset: 576)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !785, line: 187, elements: !389)
!785 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!786 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !745, file: !129, line: 2248, baseType: !784, offset: 576)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !745, file: !129, line: 2249, baseType: !784, offset: 576)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !745, file: !129, line: 2250, baseType: !789, offset: 576)
!789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !784, elements: !418)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !745, file: !129, line: 2252, baseType: !784, offset: 576)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !745, file: !129, line: 2253, baseType: !784, offset: 576)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !745, file: !129, line: 2254, baseType: !784, offset: 576)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !736, file: !129, line: 1423, baseType: !794, size: 64, offset: 384)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !796)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !129, line: 1935, size: 1472, elements: !797)
!797 = !{!798, !802, !806, !807, !811, !831, !835, !836, !837, !841, !845, !846, !847, !848, !854, !859, !860, !916, !917, !918, !919, !3641, !3656}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !796, file: !129, line: 1936, baseType: !799, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DISubroutineType(types: !801)
!801 = !{!565, !735}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !796, file: !129, line: 1937, baseType: !803, size: 64, offset: 64)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DISubroutineType(types: !805)
!805 = !{null, !565}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !796, file: !129, line: 1938, baseType: !803, size: 64, offset: 128)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !796, file: !129, line: 1940, baseType: !808, size: 64, offset: 192)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !809, size: 64)
!809 = !DISubroutineType(types: !810)
!810 = !{null, !565, !401}
!811 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !796, file: !129, line: 1941, baseType: !812, size: 64, offset: 256)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = !DISubroutineType(types: !814)
!814 = !{!401, !565, !815}
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !55, line: 51, size: 320, elements: !817)
!817 = !{!818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !816, file: !55, line: 52, baseType: !340, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !816, file: !55, line: 54, baseType: !340, size: 64, offset: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !816, file: !55, line: 61, baseType: !667, size: 64, offset: 128)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !816, file: !55, line: 62, baseType: !667, size: 64, offset: 192)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !816, file: !55, line: 64, baseType: !54, size: 32, offset: 256)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !816, file: !55, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !816, file: !55, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !816, file: !55, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !816, file: !55, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !816, file: !55, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !816, file: !55, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !816, file: !55, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !816, file: !55, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !796, file: !129, line: 1942, baseType: !832, size: 64, offset: 320)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DISubroutineType(types: !834)
!834 = !{!401, !565}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !796, file: !129, line: 1943, baseType: !803, size: 64, offset: 384)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !796, file: !129, line: 1944, baseType: !765, size: 64, offset: 448)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !796, file: !129, line: 1945, baseType: !838, size: 64, offset: 512)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DISubroutineType(types: !840)
!840 = !{!401, !735, !401}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !796, file: !129, line: 1946, baseType: !842, size: 64, offset: 576)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DISubroutineType(types: !844)
!844 = !{!401, !735}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !796, file: !129, line: 1947, baseType: !842, size: 64, offset: 640)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !796, file: !129, line: 1948, baseType: !842, size: 64, offset: 704)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !796, file: !129, line: 1949, baseType: !842, size: 64, offset: 768)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !796, file: !129, line: 1950, baseType: !849, size: 64, offset: 832)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DISubroutineType(types: !851)
!851 = !{!401, !523, !852}
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !129, line: 57, flags: DIFlagFwdDecl)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !796, file: !129, line: 1951, baseType: !855, size: 64, offset: 896)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DISubroutineType(types: !857)
!857 = !{!401, !735, !858, !417}
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !796, file: !129, line: 1952, baseType: !765, size: 64, offset: 960)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !796, file: !129, line: 1954, baseType: !861, size: 64, offset: 1024)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{!401, !864, !523}
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !866, line: 16, size: 896, elements: !867)
!866 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !889, !911, !912, !915}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !865, file: !866, line: 17, baseType: !417, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !865, file: !866, line: 18, baseType: !462, size: 64, offset: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !865, file: !866, line: 19, baseType: !462, size: 64, offset: 128)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !865, file: !866, line: 20, baseType: !462, size: 64, offset: 192)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !865, file: !866, line: 21, baseType: !462, size: 64, offset: 256)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !865, file: !866, line: 22, baseType: !667, size: 64, offset: 320)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !865, file: !866, line: 23, baseType: !667, size: 64, offset: 384)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !865, file: !866, line: 24, baseType: !876, size: 192, offset: 448)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !877, line: 53, size: 192, elements: !878)
!877 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!878 = !{!879, !887, !888}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !876, file: !877, line: 54, baseType: !880, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !881, line: 13, baseType: !882)
!881 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!882 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !362, line: 175, baseType: !883)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !362, line: 173, size: 64, elements: !884)
!884 = !{!885}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !883, file: !362, line: 174, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !304, line: 22, baseType: !676)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !876, file: !877, line: 55, baseType: !375, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !876, file: !877, line: 59, baseType: !361, size: 128, offset: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !865, file: !866, line: 25, baseType: !890, size: 64, offset: 640)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !892)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !866, line: 31, size: 256, elements: !893)
!893 = !{!894, !899, !903, !907}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !892, file: !866, line: 32, baseType: !895, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{!341, !864, !898}
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !892, file: !866, line: 33, baseType: !900, size: 64, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DISubroutineType(types: !902)
!902 = !{null, !864, !341}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !892, file: !866, line: 34, baseType: !904, size: 64, offset: 128)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!341, !864, !341, !898}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !892, file: !866, line: 35, baseType: !908, size: 64, offset: 192)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DISubroutineType(types: !910)
!910 = !{!401, !864, !341}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !865, file: !866, line: 26, baseType: !401, size: 32, offset: 704)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !865, file: !866, line: 27, baseType: !913, size: 64, offset: 768)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !865, file: !866, line: 28, baseType: !341, size: 64, offset: 832)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !796, file: !129, line: 1955, baseType: !861, size: 64, offset: 1088)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !796, file: !129, line: 1956, baseType: !861, size: 64, offset: 1152)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !796, file: !129, line: 1957, baseType: !861, size: 64, offset: 1216)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !796, file: !129, line: 1963, baseType: !920, size: 64, offset: 1280)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DISubroutineType(types: !922)
!922 = !{!401, !735, !923, !946}
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !925, line: 68, size: 512, align: 128, elements: !926)
!925 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!926 = !{!927, !928, !3633, !3640}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !924, file: !925, line: 69, baseType: !465, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, scope: !924, file: !925, line: 77, baseType: !929, size: 320, offset: 64)
!929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !924, file: !925, line: 77, size: 320, elements: !930)
!930 = !{!931, !2060, !2065, !2091, !2099, !2105, !3584, !3632}
!931 = !DIDerivedType(tag: DW_TAG_member, scope: !929, file: !925, line: 78, baseType: !932, size: 320)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !929, file: !925, line: 78, size: 320, elements: !933)
!933 = !{!934, !935, !2058, !2059}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !932, file: !925, line: 84, baseType: !361, size: 128)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !932, file: !925, line: 86, baseType: !936, size: 64, offset: 128)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !129, line: 451, size: 1216, align: 64, elements: !938)
!938 = !{!939, !940, !948, !949, !954, !969, !978, !979, !980, !981, !2051, !2052, !2055, !2056, !2057}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !937, file: !129, line: 452, baseType: !565, size: 64)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !937, file: !129, line: 453, baseType: !941, size: 128, offset: 64)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !942, line: 292, size: 128, elements: !943)
!942 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!943 = !{!944, !945, !947}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !941, file: !942, line: 293, baseType: !375)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !941, file: !942, line: 295, baseType: !946, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !362, line: 148, baseType: !7)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !941, file: !942, line: 296, baseType: !341, size: 64, offset: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !937, file: !129, line: 454, baseType: !946, size: 32, offset: 192)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !937, file: !129, line: 455, baseType: !950, size: 32, offset: 224)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !362, line: 168, baseType: !951)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !362, line: 166, size: 32, elements: !952)
!952 = !{!953}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !951, file: !362, line: 167, baseType: !401, size: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !937, file: !129, line: 460, baseType: !955, size: 128, offset: 256)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !956, line: 125, size: 128, elements: !957)
!956 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!957 = !{!958, !968}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !955, file: !956, line: 126, baseType: !959, size: 64)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !956, line: 31, size: 64, elements: !960)
!960 = !{!961}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !959, file: !956, line: 32, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !956, line: 24, size: 192, align: 64, elements: !964)
!964 = !{!965, !966, !967}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !963, file: !956, line: 25, baseType: !465, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !963, file: !956, line: 26, baseType: !962, size: 64, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !963, file: !956, line: 27, baseType: !962, size: 64, offset: 128)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !955, file: !956, line: 127, baseType: !962, size: 64, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !937, file: !129, line: 461, baseType: !970, size: 256, offset: 384)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !971, line: 35, size: 256, elements: !972)
!971 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!972 = !{!973, !974, !975, !977}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !970, file: !971, line: 36, baseType: !880, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !970, file: !971, line: 42, baseType: !880, size: 64, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !970, file: !971, line: 46, baseType: !976, offset: 128)
!976 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !376, line: 29, baseType: !383)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !970, file: !971, line: 47, baseType: !361, size: 128, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !937, file: !129, line: 462, baseType: !465, size: 64, offset: 640)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !937, file: !129, line: 463, baseType: !465, size: 64, offset: 704)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !937, file: !129, line: 464, baseType: !465, size: 64, offset: 768)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !937, file: !129, line: 465, baseType: !982, size: 64, offset: 832)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !984)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !129, line: 367, size: 1408, elements: !985)
!985 = !{!986, !990, !994, !998, !1002, !1006, !1019, !1025, !1029, !1034, !1038, !1042, !1046, !1090, !1094, !1100, !1101, !1102, !1106, !1111, !1115, !2047}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !984, file: !129, line: 368, baseType: !987, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DISubroutineType(types: !989)
!989 = !{!401, !923, !815}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !984, file: !129, line: 369, baseType: !991, size: 64, offset: 64)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DISubroutineType(types: !993)
!993 = !{!401, !493, !923}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !984, file: !129, line: 372, baseType: !995, size: 64, offset: 128)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DISubroutineType(types: !997)
!997 = !{!401, !936, !815}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !984, file: !129, line: 375, baseType: !999, size: 64, offset: 192)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!401, !923}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !984, file: !129, line: 381, baseType: !1003, size: 64, offset: 256)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{!401, !493, !936, !365, !7}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !984, file: !129, line: 383, baseType: !1007, size: 64, offset: 320)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = !DISubroutineType(types: !1009)
!1009 = !{null, !1010}
!1010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1012, line: 795, size: 256, elements: !1013)
!1012 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1013 = !{!1014, !1015, !1016, !1017, !1018}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1011, file: !1012, line: 796, baseType: !493, size: 64)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1011, file: !1012, line: 797, baseType: !936, size: 64, offset: 64)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !1011, file: !1012, line: 799, baseType: !465, size: 64, offset: 128)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !1011, file: !1012, line: 800, baseType: !7, size: 32, offset: 192)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !1011, file: !1012, line: 801, baseType: !7, size: 32, offset: 224)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !984, file: !129, line: 385, baseType: !1020, size: 64, offset: 384)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!401, !493, !936, !667, !7, !7, !1023, !1024}
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !984, file: !129, line: 388, baseType: !1026, size: 64, offset: 448)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DISubroutineType(types: !1028)
!1028 = !{!401, !493, !936, !667, !7, !7, !923, !341}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !984, file: !129, line: 393, baseType: !1030, size: 64, offset: 512)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DISubroutineType(types: !1032)
!1032 = !{!1033, !936, !1033}
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !362, line: 125, baseType: !558)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !984, file: !129, line: 394, baseType: !1035, size: 64, offset: 576)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{null, !923, !7, !7}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !984, file: !129, line: 395, baseType: !1039, size: 64, offset: 640)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DISubroutineType(types: !1041)
!1041 = !{!401, !923, !946}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !984, file: !129, line: 396, baseType: !1043, size: 64, offset: 704)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{null, !923}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !984, file: !129, line: 397, baseType: !1047, size: 64, offset: 768)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!448, !1050, !1088}
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !129, line: 320, size: 384, elements: !1052)
!1052 = !{!1053, !1054, !1055, !1059, !1060, !1061, !1063, !1064}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1051, file: !129, line: 321, baseType: !493, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1051, file: !129, line: 326, baseType: !667, size: 64, offset: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1051, file: !129, line: 327, baseType: !1056, size: 64, offset: 128)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{null, !1050, !340, !340}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1051, file: !129, line: 328, baseType: !341, size: 64, offset: 192)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1051, file: !129, line: 329, baseType: !401, size: 32, offset: 256)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1051, file: !129, line: 330, baseType: !1062, size: 16, offset: 288)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !304, line: 19, baseType: !319)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1051, file: !129, line: 331, baseType: !1062, size: 16, offset: 304)
!1064 = !DIDerivedType(tag: DW_TAG_member, scope: !1051, file: !129, line: 332, baseType: !1065, size: 64, offset: 320)
!1065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1051, file: !129, line: 332, size: 64, elements: !1066)
!1066 = !{!1067, !1068}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1065, file: !129, line: 333, baseType: !7, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1065, file: !129, line: 334, baseType: !1069, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1012, line: 569, size: 448, elements: !1071)
!1071 = !{!1072, !1073, !1074}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1070, file: !1012, line: 570, baseType: !923, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1070, file: !1012, line: 571, baseType: !401, size: 32, offset: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1070, file: !1012, line: 572, baseType: !1075, size: 320, offset: 128)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1076, line: 14, baseType: !1077)
!1076 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1076, line: 29, size: 320, elements: !1078)
!1078 = !{!1079, !1080, !1081, !1087}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1077, file: !1076, line: 30, baseType: !7, size: 32)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1077, file: !1076, line: 31, baseType: !341, size: 64, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1077, file: !1076, line: 32, baseType: !1082, size: 64, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1076, line: 16, baseType: !1083)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!401, !1086, !7, !401, !341}
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1077, file: !1076, line: 33, baseType: !361, size: 128, offset: 192)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !129, line: 64, flags: DIFlagFwdDecl)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !984, file: !129, line: 402, baseType: !1091, size: 64, offset: 832)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!401, !936, !923, !923, !59}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !984, file: !129, line: 404, baseType: !1095, size: 64, offset: 896)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!626, !923, !1098}
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1099, line: 305, baseType: !7)
!1099 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !984, file: !129, line: 405, baseType: !1043, size: 64, offset: 960)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !984, file: !129, line: 406, baseType: !999, size: 64, offset: 1024)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !984, file: !129, line: 407, baseType: !1103, size: 64, offset: 1088)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!401, !923, !465, !465}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !984, file: !129, line: 409, baseType: !1107, size: 64, offset: 1152)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{null, !923, !1110, !1110}
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !984, file: !129, line: 410, baseType: !1112, size: 64, offset: 1216)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!401, !936, !923}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !984, file: !129, line: 413, baseType: !1116, size: 64, offset: 1280)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 64)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{!401, !1119, !493, !2046}
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !1121, line: 240, size: 1600, elements: !1122)
!1121 = !DIFile(filename: "./include/linux/swap.h", directory: "/home/lizy2001/genbc/linux")
!1122 = !{!1123, !1124, !1126, !1133, !1135, !1136, !1138, !1145, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1158, !1164, !1165, !2038, !2039, !2040, !2041, !2042, !2043, !2044}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1120, file: !1121, line: 241, baseType: !465, size: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1120, file: !1121, line: 242, baseType: !1125, size: 16, offset: 64)
!1125 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1120, file: !1121, line: 243, baseType: !1127, size: 320, offset: 128)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "plist_node", file: !1128, line: 83, size: 320, elements: !1129)
!1128 = !DIFile(filename: "./include/linux/plist.h", directory: "/home/lizy2001/genbc/linux")
!1129 = !{!1130, !1131, !1132}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1127, file: !1128, line: 84, baseType: !401, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "prio_list", scope: !1127, file: !1128, line: 85, baseType: !361, size: 128, offset: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "node_list", scope: !1127, file: !1128, line: 86, baseType: !361, size: 128, offset: 192)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1120, file: !1121, line: 244, baseType: !1134, size: 8, offset: 448)
!1134 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1120, file: !1121, line: 245, baseType: !7, size: 32, offset: 480)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "swap_map", scope: !1120, file: !1121, line: 246, baseType: !1137, size: 64, offset: 512)
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_info", scope: !1120, file: !1121, line: 247, baseType: !1139, size: 64, offset: 576)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_info", file: !1121, line: 208, size: 32, elements: !1141)
!1141 = !{!1142, !1143, !1144}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1140, file: !1121, line: 209, baseType: !375)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1140, file: !1121, line: 215, baseType: !7, size: 24, flags: DIFlagBitField, extraData: i64 0)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1140, file: !1121, line: 216, baseType: !7, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "free_clusters", scope: !1120, file: !1121, line: 248, baseType: !1146, size: 64, offset: 640)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swap_cluster_list", file: !1121, line: 232, size: 64, elements: !1147)
!1147 = !{!1148, !1149}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1146, file: !1121, line: 233, baseType: !1140, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1146, file: !1121, line: 234, baseType: !1140, size: 32, offset: 32)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_bit", scope: !1120, file: !1121, line: 249, baseType: !7, size: 32, offset: 704)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "highest_bit", scope: !1120, file: !1121, line: 250, baseType: !7, size: 32, offset: 736)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1120, file: !1121, line: 251, baseType: !7, size: 32, offset: 768)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_pages", scope: !1120, file: !1121, line: 252, baseType: !7, size: 32, offset: 800)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next", scope: !1120, file: !1121, line: 253, baseType: !7, size: 32, offset: 832)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_nr", scope: !1120, file: !1121, line: 254, baseType: !7, size: 32, offset: 864)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "cluster_next_cpu", scope: !1120, file: !1121, line: 255, baseType: !1157, size: 64, offset: 896)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_cluster", scope: !1120, file: !1121, line: 256, baseType: !1159, size: 64, offset: 960)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_cluster", file: !1121, line: 227, size: 64, elements: !1161)
!1161 = !{!1162, !1163}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1160, file: !1121, line: 228, baseType: !1140, size: 32)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1160, file: !1121, line: 229, baseType: !7, size: 32, offset: 32)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "swap_extent_root", scope: !1120, file: !1121, line: 257, baseType: !959, size: 64, offset: 1024)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "bdev", scope: !1120, file: !1121, line: 258, baseType: !1166, size: 64, offset: 1088)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !1168, line: 22, size: 1344, elements: !1169)
!1168 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!1169 = !{!1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1183, !1248, !1249, !1250, !2035, !2036, !2037}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !1167, file: !1168, line: 23, baseType: !649, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !1167, file: !1168, line: 24, baseType: !401, size: 32, offset: 32)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !1167, file: !1168, line: 25, baseType: !565, size: 64, offset: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !1167, file: !1168, line: 26, baseType: !735, size: 64, offset: 128)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !1167, file: !1168, line: 27, baseType: !876, size: 192, offset: 192)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !1167, file: !1168, line: 28, baseType: !341, size: 64, offset: 384)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !1167, file: !1168, line: 29, baseType: !341, size: 64, offset: 448)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !1167, file: !1168, line: 30, baseType: !401, size: 32, offset: 512)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !1167, file: !1168, line: 31, baseType: !626, size: 8, offset: 544)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !1167, file: !1168, line: 33, baseType: !361, size: 128, offset: 576)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !1167, file: !1168, line: 35, baseType: !1166, size: 64, offset: 704)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !1167, file: !1168, line: 36, baseType: !1182, size: 8, offset: 768)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !304, line: 17, baseType: !312)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !1167, file: !1168, line: 37, baseType: !1184, size: 64, offset: 832)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !1186, line: 53, size: 6592, elements: !1187)
!1186 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!1187 = !{!1188, !1189, !1190, !1191, !1194, !1215, !1216, !1217, !1218, !1219, !1229}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !1185, file: !1186, line: 54, baseType: !1033, size: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !1185, file: !1186, line: 60, baseType: !1033, size: 64, offset: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1185, file: !1186, line: 64, baseType: !465, size: 64, offset: 128)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !1185, file: !1186, line: 65, baseType: !1192, size: 64, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !1186, line: 65, flags: DIFlagFwdDecl)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1185, file: !1186, line: 66, baseType: !1195, size: 128, offset: 256)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !1196, line: 105, size: 128, elements: !1197)
!1196 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!1197 = !{!1198, !1199}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !1195, file: !1196, line: 110, baseType: !465, size: 64)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1195, file: !1196, line: 118, baseType: !1200, size: 64, offset: 64)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !1196, line: 95, size: 448, elements: !1202)
!1202 = !{!1203, !1204, !1210, !1211, !1212, !1213, !1214}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1201, file: !1196, line: 96, baseType: !880, size: 64)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1201, file: !1196, line: 97, baseType: !1205, size: 64, offset: 64)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !1196, line: 60, baseType: !1207)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{null, !1209}
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !1201, file: !1196, line: 98, baseType: !1205, size: 64, offset: 128)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !1201, file: !1196, line: 99, baseType: !626, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !1201, file: !1196, line: 100, baseType: !626, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1201, file: !1196, line: 101, baseType: !506, size: 128, align: 64, offset: 256)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1201, file: !1196, line: 102, baseType: !1209, size: 64, offset: 384)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !1185, file: !1186, line: 68, baseType: !350, size: 5568, offset: 384)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !1185, file: !1186, line: 69, baseType: !368, size: 64, offset: 5952)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1185, file: !1186, line: 70, baseType: !401, size: 32, offset: 6016)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !1185, file: !1186, line: 70, baseType: !401, size: 32, offset: 6048)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1185, file: !1186, line: 71, baseType: !1220, size: 64, offset: 6080)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !1186, line: 48, size: 808, elements: !1222)
!1222 = !{!1223, !1227}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !1221, file: !1186, line: 49, baseType: !1224, size: 296)
!1224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !359, size: 296, elements: !1225)
!1225 = !{!1226}
!1226 = !DISubrange(count: 37)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !1221, file: !1186, line: 50, baseType: !1228, size: 512, offset: 296)
!1228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1182, size: 512, elements: !422)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !1185, file: !1186, line: 75, baseType: !1230, size: 448, offset: 6144)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1231, line: 124, size: 448, elements: !1232)
!1231 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1232 = !{!1233, !1244, !1245}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1230, file: !1231, line: 125, baseType: !1234, size: 256)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1231, line: 102, size: 256, elements: !1235)
!1235 = !{!1236, !1237, !1238}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1234, file: !1231, line: 103, baseType: !880, size: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1234, file: !1231, line: 104, baseType: !361, size: 128, offset: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1234, file: !1231, line: 105, baseType: !1239, size: 64, offset: 192)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1231, line: 21, baseType: !1240)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{null, !1243}
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1230, file: !1231, line: 126, baseType: !506, size: 128, align: 64, offset: 256)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !1230, file: !1231, line: 129, baseType: !1246, size: 64, offset: 384)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1231, line: 18, flags: DIFlagFwdDecl)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !1167, file: !1168, line: 39, baseType: !7, size: 32, offset: 896)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !1167, file: !1168, line: 41, baseType: !375, offset: 928)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !1167, file: !1168, line: 42, baseType: !1251, size: 64, offset: 960)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !1186, line: 167, size: 8512, elements: !1253)
!1253 = !{!1254, !1255, !1256, !1257, !1261, !1262, !1263, !1274, !1275, !1462, !2016, !2017, !2018, !2019, !2020, !2021, !2024, !2025, !2028, !2029, !2030, !2033}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !1252, file: !1186, line: 171, baseType: !401, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !1252, file: !1186, line: 172, baseType: !401, size: 32, offset: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !1252, file: !1186, line: 173, baseType: !401, size: 32, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !1252, file: !1186, line: 176, baseType: !1258, size: 256, offset: 96)
!1258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !359, size: 256, elements: !1259)
!1259 = !{!1260}
!1260 = !DISubrange(count: 32)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1252, file: !1186, line: 178, baseType: !320, size: 16, offset: 352)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !1252, file: !1186, line: 179, baseType: !320, size: 16, offset: 368)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !1252, file: !1186, line: 186, baseType: !1264, size: 64, offset: 384)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !1186, line: 149, size: 256, elements: !1266)
!1266 = !{!1267, !1268, !1269, !1270}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1265, file: !1186, line: 150, baseType: !506, size: 128, align: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1265, file: !1186, line: 151, baseType: !401, size: 32, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !1265, file: !1186, line: 152, baseType: !1184, size: 64, offset: 192)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !1265, file: !1186, line: 153, baseType: !1271, offset: 256)
!1271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1184, elements: !1272)
!1272 = !{!1273}
!1273 = !DISubrange(count: -1)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !1252, file: !1186, line: 187, baseType: !1185, size: 6592, offset: 448)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !1252, file: !1186, line: 189, baseType: !1276, size: 64, offset: 7040)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1278)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !67, line: 1844, size: 960, elements: !1279)
!1279 = !{!1280, !1387, !1392, !1396, !1400, !1404, !1405, !1409, !1413, !1417, !1423, !1427, !1452, !1457, !1458}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !1278, file: !67, line: 1845, baseType: !1281, size: 64)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{!1284, !1285}
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !1168, line: 515, baseType: !7)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !1168, line: 203, size: 832, elements: !1287)
!1287 = !{!1288, !1289, !1290, !1291, !1292, !1293, !1294, !1296, !1297, !1298, !1306, !1311, !1312, !1337, !1338, !1339, !1340, !1341, !1386}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !1286, file: !1168, line: 204, baseType: !1285, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !1286, file: !1168, line: 205, baseType: !1251, size: 64, offset: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !1286, file: !1168, line: 206, baseType: !7, size: 32, offset: 128)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !1286, file: !1168, line: 210, baseType: !320, size: 16, offset: 160)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !1286, file: !1168, line: 211, baseType: !320, size: 16, offset: 176)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !1286, file: !1168, line: 212, baseType: !320, size: 16, offset: 192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !1286, file: !1168, line: 213, baseType: !1295, size: 8, offset: 208)
!1295 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !1168, line: 58, baseType: !1182)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !1286, file: !1168, line: 214, baseType: !1182, size: 8, offset: 216)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !1286, file: !1168, line: 215, baseType: !950, size: 32, offset: 224)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !1286, file: !1168, line: 217, baseType: !1299, size: 192, offset: 256)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !1300, line: 37, size: 192, elements: !1301)
!1300 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!1301 = !{!1302, !1303, !1304, !1305}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !1299, file: !1300, line: 38, baseType: !1033, size: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !1299, file: !1300, line: 40, baseType: !7, size: 32, offset: 64)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !1299, file: !1300, line: 42, baseType: !7, size: 32, offset: 96)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !1299, file: !1300, line: 44, baseType: !7, size: 32, offset: 128)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !1286, file: !1168, line: 219, baseType: !1307, size: 64, offset: 448)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !1168, line: 19, baseType: !1309)
!1309 = !DISubroutineType(types: !1310)
!1310 = !{null, !1285}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !1286, file: !1168, line: 221, baseType: !341, size: 64, offset: 512)
!1312 = !DIDerivedType(tag: DW_TAG_member, scope: !1286, file: !1168, line: 240, baseType: !1313, size: 64, offset: 576)
!1313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1286, file: !1168, line: 240, size: 64, elements: !1314)
!1314 = !{!1315}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !1313, file: !1168, line: 242, baseType: !1316, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !1318, line: 313, size: 832, elements: !1319)
!1318 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!1319 = !{!1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1335}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !1317, file: !1318, line: 314, baseType: !1285, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !1317, file: !1318, line: 316, baseType: !1299, size: 192, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !1317, file: !1318, line: 318, baseType: !320, size: 16, offset: 256)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !1317, file: !1318, line: 319, baseType: !320, size: 16, offset: 272)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !1317, file: !1318, line: 320, baseType: !320, size: 16, offset: 288)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !1317, file: !1318, line: 321, baseType: !320, size: 16, offset: 304)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !1317, file: !1318, line: 323, baseType: !1299, size: 192, offset: 320)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !1317, file: !1318, line: 325, baseType: !1234, size: 256, offset: 512)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !1317, file: !1318, line: 327, baseType: !1329, size: 64, offset: 768)
!1329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1330, size: 64)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !1300, line: 31, size: 128, elements: !1331)
!1331 = !{!1332, !1333, !1334}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !1330, file: !1300, line: 32, baseType: !923, size: 64)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !1330, file: !1300, line: 33, baseType: !7, size: 32, offset: 64)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !1330, file: !1300, line: 34, baseType: !7, size: 32, offset: 96)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !1317, file: !1318, line: 328, baseType: !1336, offset: 832)
!1336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1330, elements: !1272)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !1286, file: !1168, line: 246, baseType: !320, size: 16, offset: 640)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !1286, file: !1168, line: 252, baseType: !320, size: 16, offset: 656)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !1286, file: !1168, line: 254, baseType: !950, size: 32, offset: 672)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !1286, file: !1168, line: 256, baseType: !1329, size: 64, offset: 704)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !1286, file: !1168, line: 258, baseType: !1342, size: 64, offset: 768)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 64)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !1318, line: 682, size: 2368, elements: !1344)
!1344 = !{!1345, !1348, !1349, !1375, !1376, !1377, !1378, !1379, !1384, !1385}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !1343, file: !1318, line: 683, baseType: !1346, size: 64)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1347, size: 64)
!1347 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !925, line: 117, flags: DIFlagFwdDecl)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !1343, file: !1318, line: 684, baseType: !7, size: 32, offset: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !1343, file: !1318, line: 686, baseType: !1350, size: 448, offset: 128)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !1351, line: 26, baseType: !1352)
!1351 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !1351, line: 16, size: 448, elements: !1353)
!1353 = !{!1354, !1355, !1356, !1357, !1358, !1359, !1364, !1369}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1352, file: !1351, line: 17, baseType: !375)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !1352, file: !1351, line: 18, baseType: !401, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !1352, file: !1351, line: 19, baseType: !401, size: 32, offset: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1352, file: !1351, line: 20, baseType: !1024, size: 64, offset: 64)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !1352, file: !1351, line: 22, baseType: !341, size: 64, offset: 128)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1352, file: !1351, line: 23, baseType: !1360, size: 64, offset: 192)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !1351, line: 13, baseType: !1362)
!1362 = !DISubroutineType(types: !1363)
!1363 = !{!341, !946, !341}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1352, file: !1351, line: 24, baseType: !1365, size: 64, offset: 256)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !1351, line: 14, baseType: !1367)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{null, !341, !341}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1352, file: !1351, line: 25, baseType: !1370, size: 128, offset: 320)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1076, line: 40, baseType: !1371)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1076, line: 36, size: 128, elements: !1372)
!1372 = !{!1373, !1374}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1371, file: !1076, line: 37, baseType: !375)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1371, file: !1076, line: 38, baseType: !361, size: 128)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !1343, file: !1318, line: 687, baseType: !1350, size: 448, offset: 576)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !1343, file: !1318, line: 689, baseType: !1350, size: 448, offset: 1024)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !1343, file: !1318, line: 690, baseType: !1350, size: 448, offset: 1472)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !1343, file: !1318, line: 697, baseType: !375, offset: 1920)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !1343, file: !1318, line: 698, baseType: !1380, size: 128, offset: 1920)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1318, line: 554, size: 128, elements: !1381)
!1381 = !{!1382, !1383}
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1380, file: !1318, line: 555, baseType: !1285, size: 64)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1380, file: !1318, line: 556, baseType: !1285, size: 64, offset: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !1343, file: !1318, line: 699, baseType: !1234, size: 256, offset: 2048)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !1343, file: !1318, line: 700, baseType: !1246, size: 64, offset: 2304)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !1286, file: !1168, line: 265, baseType: !1336, offset: 832)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1278, file: !67, line: 1846, baseType: !1388, size: 64, offset: 64)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1389 = !DISubroutineType(types: !1390)
!1390 = !{!401, !1166, !1391}
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !362, line: 150, baseType: !7)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1278, file: !67, line: 1847, baseType: !1393, size: 64, offset: 128)
!1393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!1394 = !DISubroutineType(types: !1395)
!1395 = !{null, !1251, !1391}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !1278, file: !67, line: 1848, baseType: !1397, size: 64, offset: 192)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = !DISubroutineType(types: !1399)
!1399 = !{!401, !1166, !1033, !923, !7}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !1278, file: !67, line: 1849, baseType: !1401, size: 64, offset: 256)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = !DISubroutineType(types: !1403)
!1403 = !{!401, !1166, !1391, !7, !465}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1278, file: !67, line: 1850, baseType: !1401, size: 64, offset: 320)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !1278, file: !67, line: 1851, baseType: !1406, size: 64, offset: 384)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{!7, !1251, !7}
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !1278, file: !67, line: 1853, baseType: !1410, size: 64, offset: 448)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{null, !1251}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !1278, file: !67, line: 1854, baseType: !1414, size: 64, offset: 512)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!401, !1251}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !1278, file: !67, line: 1855, baseType: !1418, size: 64, offset: 576)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!401, !1166, !1421}
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1422 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !129, line: 51, flags: DIFlagFwdDecl)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !1278, file: !67, line: 1857, baseType: !1424, size: 64, offset: 640)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{null, !1166, !465}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !1278, file: !67, line: 1858, baseType: !1428, size: 64, offset: 704)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{!401, !1251, !1033, !7, !1431, !341}
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !67, line: 354, baseType: !1432)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{!401, !1435, !7, !341}
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !1437, line: 106, size: 512, elements: !1438)
!1437 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!1438 = !{!1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1436, file: !1437, line: 107, baseType: !559, size: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1436, file: !1437, line: 108, baseType: !559, size: 64, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !1436, file: !1437, line: 109, baseType: !559, size: 64, offset: 128)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1436, file: !1437, line: 110, baseType: !312, size: 8, offset: 192)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1436, file: !1437, line: 111, baseType: !312, size: 8, offset: 200)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !1436, file: !1437, line: 112, baseType: !312, size: 8, offset: 208)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !1436, file: !1437, line: 113, baseType: !312, size: 8, offset: 216)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !1436, file: !1437, line: 114, baseType: !330, size: 32, offset: 224)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1436, file: !1437, line: 115, baseType: !559, size: 64, offset: 256)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !1436, file: !1437, line: 116, baseType: !1449, size: 192, offset: 320)
!1449 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 192, elements: !1450)
!1450 = !{!1451}
!1451 = !DISubrange(count: 24)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !1278, file: !67, line: 1860, baseType: !1453, size: 64, offset: 768)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{!417, !1251, !1456}
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1278, file: !67, line: 1861, baseType: !769, size: 64, offset: 832)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !1278, file: !67, line: 1862, baseType: !1459, size: 64, offset: 896)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1461)
!1461 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !67, line: 41, flags: DIFlagFwdDecl)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1252, file: !1186, line: 190, baseType: !1463, size: 64, offset: 7104)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !67, line: 399, size: 14464, elements: !1465)
!1465 = !{!1466, !1602, !1724, !1725, !1728, !1731, !1735, !1736, !1737, !1739, !1740, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1877, !1888, !1889, !1890, !1891, !1892, !1922, !1923, !1924, !1925, !1926, !1927, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !2001, !2002, !2003, !2004, !2007, !2008, !2009, !2010, !2011, !2012}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !1464, file: !67, line: 400, baseType: !1467, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !67, line: 130, size: 2176, elements: !1469)
!1469 = !{!1470, !1471, !1474, !1477, !1478, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1492, !1499, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1565, !1566, !1567, !1600, !1601}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1468, file: !67, line: 131, baseType: !1463, size: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !1468, file: !67, line: 132, baseType: !1472, size: 64, offset: 64)
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 64)
!1473 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !67, line: 132, flags: DIFlagFwdDecl)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !1468, file: !67, line: 133, baseType: !1475, size: 64, offset: 128)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !67, line: 133, flags: DIFlagFwdDecl)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !1468, file: !67, line: 135, baseType: !7, size: 32, offset: 192)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !1468, file: !67, line: 136, baseType: !1479, size: 32, offset: 224)
!1479 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !67, line: 66, baseType: !305)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1468, file: !67, line: 138, baseType: !401, size: 32, offset: 256)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !1468, file: !67, line: 139, baseType: !401, size: 32, offset: 288)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !1468, file: !67, line: 142, baseType: !7, size: 32, offset: 320)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !1468, file: !67, line: 143, baseType: !1033, size: 64, offset: 384)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !1468, file: !67, line: 145, baseType: !1285, size: 64, offset: 448)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !1468, file: !67, line: 146, baseType: !1285, size: 64, offset: 512)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !1468, file: !67, line: 148, baseType: !361, size: 128, offset: 576)
!1487 = !DIDerivedType(tag: DW_TAG_member, scope: !1468, file: !67, line: 157, baseType: !1488, size: 128, offset: 704)
!1488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1468, file: !67, line: 157, size: 128, elements: !1489)
!1489 = !{!1490, !1491}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1488, file: !67, line: 158, baseType: !778, size: 128)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !1488, file: !67, line: 159, baseType: !361, size: 128)
!1492 = !DIDerivedType(tag: DW_TAG_member, scope: !1468, file: !67, line: 167, baseType: !1493, size: 192, offset: 832)
!1493 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1468, file: !67, line: 167, size: 192, elements: !1494)
!1494 = !{!1495, !1496, !1497, !1498}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1493, file: !67, line: 168, baseType: !963, size: 192, align: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !1493, file: !67, line: 169, baseType: !1330, size: 128)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !1493, file: !67, line: 170, baseType: !341, size: 64)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !1493, file: !67, line: 171, baseType: !401, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, scope: !1468, file: !67, line: 180, baseType: !1500, size: 256, offset: 1024)
!1500 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1468, file: !67, line: 180, size: 256, elements: !1501)
!1501 = !{!1502, !1539}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !1500, file: !67, line: 184, baseType: !1503, size: 192)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1500, file: !67, line: 181, size: 192, elements: !1504)
!1504 = !{!1505, !1535}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !1503, file: !67, line: 182, baseType: !1506, size: 64)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1508, line: 73, size: 448, elements: !1509)
!1508 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1509 = !{!1510, !1511, !1524, !1529, !1534}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1507, file: !1508, line: 74, baseType: !1463, size: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1507, file: !1508, line: 75, baseType: !1512, size: 64, offset: 64)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1508, line: 99, size: 704, elements: !1514)
!1514 = !{!1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523}
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1513, file: !1508, line: 100, baseType: !880, size: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1513, file: !1508, line: 101, baseType: !950, size: 32, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1513, file: !1508, line: 102, baseType: !950, size: 32, offset: 96)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1513, file: !1508, line: 105, baseType: !375, offset: 128)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1513, file: !1508, line: 107, baseType: !320, size: 16, offset: 128)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1513, file: !1508, line: 109, baseType: !941, size: 128, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1513, file: !1508, line: 110, baseType: !1506, size: 64, offset: 320)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1513, file: !1508, line: 111, baseType: !774, size: 64, offset: 384)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1513, file: !1508, line: 113, baseType: !1234, size: 256, offset: 448)
!1524 = !DIDerivedType(tag: DW_TAG_member, scope: !1507, file: !1508, line: 83, baseType: !1525, size: 128, offset: 128)
!1525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1507, file: !1508, line: 83, size: 128, elements: !1526)
!1526 = !{!1527, !1528}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1525, file: !1508, line: 84, baseType: !361, size: 128)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1525, file: !1508, line: 85, baseType: !1346, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, scope: !1507, file: !1508, line: 87, baseType: !1530, size: 128, offset: 256)
!1530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1507, file: !1508, line: 87, size: 128, elements: !1531)
!1531 = !{!1532, !1533}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1530, file: !1508, line: 88, baseType: !778, size: 128)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1530, file: !1508, line: 89, baseType: !506, size: 128, align: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1507, file: !1508, line: 92, baseType: !7, size: 32, offset: 384)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !1503, file: !67, line: 183, baseType: !1536, size: 128, offset: 64)
!1536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 128, elements: !1537)
!1537 = !{!1538}
!1538 = !DISubrange(count: 2)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1500, file: !67, line: 190, baseType: !1540, size: 256)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1500, file: !67, line: 186, size: 256, elements: !1541)
!1541 = !{!1542, !1543, !1544}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1540, file: !67, line: 187, baseType: !7, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1540, file: !67, line: 188, baseType: !361, size: 128, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !1540, file: !67, line: 189, baseType: !1545, size: 64, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !67, line: 62, baseType: !1547)
!1547 = !DISubroutineType(types: !1548)
!1548 = !{null, !1467, !1295}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !1468, file: !67, line: 193, baseType: !1251, size: 64, offset: 1280)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !1468, file: !67, line: 194, baseType: !1184, size: 64, offset: 1344)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !1468, file: !67, line: 200, baseType: !558, size: 64, offset: 1408)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !1468, file: !67, line: 202, baseType: !558, size: 64, offset: 1472)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !1468, file: !67, line: 212, baseType: !320, size: 16, offset: 1536)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !1468, file: !67, line: 218, baseType: !320, size: 16, offset: 1552)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !1468, file: !67, line: 221, baseType: !320, size: 16, offset: 1568)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !1468, file: !67, line: 229, baseType: !320, size: 16, offset: 1584)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1468, file: !67, line: 230, baseType: !320, size: 16, offset: 1600)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1468, file: !67, line: 232, baseType: !66, size: 32, offset: 1632)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1468, file: !67, line: 233, baseType: !1560, size: 32, offset: 1664)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1561, line: 113, baseType: !1562)
!1561 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1561, line: 111, size: 32, elements: !1563)
!1563 = !{!1564}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1562, file: !1561, line: 112, baseType: !950, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1468, file: !67, line: 235, baseType: !7, size: 32, offset: 1696)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1468, file: !67, line: 236, baseType: !465, size: 64, offset: 1728)
!1567 = !DIDerivedType(tag: DW_TAG_member, scope: !1468, file: !67, line: 238, baseType: !1568, size: 256, offset: 1792)
!1568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1468, file: !67, line: 238, size: 256, elements: !1569)
!1569 = !{!1570, !1599}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !1568, file: !67, line: 239, baseType: !1571, size: 256)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !1572, line: 23, size: 256, elements: !1573)
!1572 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!1573 = !{!1574, !1596, !1598}
!1574 = !DIDerivedType(tag: DW_TAG_member, scope: !1571, file: !1572, line: 24, baseType: !1575, size: 128)
!1575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1571, file: !1572, line: 24, size: 128, elements: !1576)
!1576 = !{!1577, !1589}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1575, file: !1572, line: 25, baseType: !1578, size: 128)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !1579, line: 58, size: 128, elements: !1580)
!1579 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!1580 = !{!1581, !1582, !1587, !1588}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !1578, file: !1579, line: 59, baseType: !500, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, scope: !1578, file: !1579, line: 60, baseType: !1583, size: 32, offset: 64)
!1583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1578, file: !1579, line: 60, size: 32, elements: !1584)
!1584 = !{!1585, !1586}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !1583, file: !1579, line: 61, baseType: !7, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !1583, file: !1579, line: 62, baseType: !950, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1578, file: !1579, line: 65, baseType: !1062, size: 16, offset: 96)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !1578, file: !1579, line: 65, baseType: !1062, size: 16, offset: 112)
!1589 = !DIDerivedType(tag: DW_TAG_member, scope: !1575, file: !1572, line: 26, baseType: !1590, size: 128)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1575, file: !1572, line: 26, size: 128, elements: !1591)
!1591 = !{!1592, !1593, !1594, !1595}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !1590, file: !1572, line: 27, baseType: !500, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1590, file: !1572, line: 28, baseType: !7, size: 32, offset: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1590, file: !1572, line: 30, baseType: !1062, size: 16, offset: 96)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !1590, file: !1572, line: 30, baseType: !1062, size: 16, offset: 112)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1571, file: !1572, line: 34, baseType: !1597, size: 64, offset: 128)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !1572, line: 17, baseType: !604)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1571, file: !1572, line: 35, baseType: !341, size: 64, offset: 192)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !1568, file: !67, line: 240, baseType: !558, size: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !1468, file: !67, line: 246, baseType: !1545, size: 64, offset: 2048)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !1468, file: !67, line: 247, baseType: !341, size: 64, offset: 2112)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !1464, file: !67, line: 401, baseType: !1603, size: 64, offset: 64)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !73, line: 101, size: 4992, elements: !1605)
!1605 = !{!1606, !1718, !1719, !1720, !1721, !1722}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1604, file: !73, line: 103, baseType: !1607, size: 64)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !73, line: 66, size: 2240, elements: !1609)
!1609 = !{!1610, !1611, !1693, !1694, !1695, !1708, !1709, !1710, !1712, !1713, !1717}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !1608, file: !73, line: 69, baseType: !1346, size: 64)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1608, file: !73, line: 72, baseType: !1612, size: 1408, offset: 64)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !73, line: 29, size: 1408, elements: !1613)
!1613 = !{!1614, !1618, !1622, !1626, !1630, !1634, !1638, !1642, !1647, !1651, !1655, !1661, !1665, !1666, !1670, !1674, !1678, !1682, !1683, !1687, !1688, !1692}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !1612, file: !73, line: 30, baseType: !1615, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{!401, !1463, !1607}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !1612, file: !73, line: 31, baseType: !1619, size: 64, offset: 64)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{null, !1603}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !1612, file: !73, line: 32, baseType: !1623, size: 64, offset: 128)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DISubroutineType(types: !1625)
!1625 = !{!401, !1475, !7}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !1612, file: !73, line: 33, baseType: !1627, size: 64, offset: 192)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = !DISubroutineType(types: !1629)
!1629 = !{null, !1475, !7}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !1612, file: !73, line: 34, baseType: !1631, size: 64, offset: 256)
!1631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1632, size: 64)
!1632 = !DISubroutineType(types: !1633)
!1633 = !{null, !1475}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !1612, file: !73, line: 36, baseType: !1635, size: 64, offset: 320)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!626, !1463, !1467, !1285}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !1612, file: !73, line: 37, baseType: !1639, size: 64, offset: 384)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!626, !1475, !1285, !7}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !1612, file: !73, line: 38, baseType: !1643, size: 64, offset: 448)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{!401, !1463, !1646, !1285}
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !1612, file: !73, line: 39, baseType: !1648, size: 64, offset: 512)
!1648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1649, size: 64)
!1649 = !DISubroutineType(types: !1650)
!1650 = !{null, !1463, !1467, !72}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !1612, file: !73, line: 40, baseType: !1652, size: 64, offset: 576)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = !DISubroutineType(types: !1654)
!1654 = !{null, !1463, !1467, !1467}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !1612, file: !73, line: 41, baseType: !1656, size: 64, offset: 640)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{null, !7, !1659}
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !73, line: 26, flags: DIFlagFwdDecl)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !1612, file: !73, line: 42, baseType: !1662, size: 64, offset: 704)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DISubroutineType(types: !1664)
!1664 = !{null, !1467}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !1612, file: !73, line: 43, baseType: !1662, size: 64, offset: 768)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !1612, file: !73, line: 44, baseType: !1667, size: 64, offset: 832)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = !DISubroutineType(types: !1669)
!1669 = !{null, !1475, !365, !626}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !1612, file: !73, line: 45, baseType: !1671, size: 64, offset: 896)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64)
!1672 = !DISubroutineType(types: !1673)
!1673 = !{!1467, !1475}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !1612, file: !73, line: 46, baseType: !1675, size: 64, offset: 960)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = !DISubroutineType(types: !1677)
!1677 = !{!626, !1475}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !1612, file: !73, line: 47, baseType: !1679, size: 64, offset: 1024)
!1679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1680 = !DISubroutineType(types: !1681)
!1681 = !{null, !1467, !558}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !1612, file: !73, line: 48, baseType: !1662, size: 64, offset: 1088)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !1612, file: !73, line: 49, baseType: !1684, size: 64, offset: 1152)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{!1467, !1463, !1467}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !1612, file: !73, line: 50, baseType: !1684, size: 64, offset: 1216)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !1612, file: !73, line: 51, baseType: !1689, size: 64, offset: 1280)
!1689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1690, size: 64)
!1690 = !DISubroutineType(types: !1691)
!1691 = !{null, !1506}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !1612, file: !73, line: 52, baseType: !1689, size: 64, offset: 1344)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !1608, file: !73, line: 74, baseType: !462, size: 64, offset: 1472)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !1608, file: !73, line: 75, baseType: !462, size: 64, offset: 1536)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !1608, file: !73, line: 76, baseType: !1696, size: 64, offset: 1600)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !73, line: 57, size: 256, elements: !1698)
!1698 = !{!1699, !1700, !1704}
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1697, file: !73, line: 58, baseType: !453, size: 128)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1697, file: !73, line: 59, baseType: !1701, size: 64, offset: 128)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!1702 = !DISubroutineType(types: !1703)
!1703 = !{!448, !1603, !417}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1697, file: !73, line: 60, baseType: !1705, size: 64, offset: 192)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!448, !1603, !357, !462}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !1608, file: !73, line: 77, baseType: !357, size: 64, offset: 1664)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !1608, file: !73, line: 78, baseType: !357, size: 64, offset: 1728)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !1608, file: !73, line: 79, baseType: !1711, size: 32, offset: 1792)
!1711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !1608, file: !73, line: 80, baseType: !769, size: 64, offset: 1856)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !1608, file: !73, line: 87, baseType: !1714, size: 176, offset: 1920)
!1714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !359, size: 176, elements: !1715)
!1715 = !{!1716}
!1716 = !DISubrange(count: 22)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1608, file: !73, line: 88, baseType: !361, size: 128, offset: 2112)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !1604, file: !73, line: 104, baseType: !341, size: 64, offset: 64)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1604, file: !73, line: 105, baseType: !353, size: 512, offset: 128)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !1604, file: !73, line: 106, baseType: !876, size: 192, offset: 640)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !1604, file: !73, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1604, file: !73, line: 108, baseType: !1723, size: 4096, offset: 896)
!1723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !774, size: 4096, elements: !422)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !1464, file: !67, line: 403, baseType: !1195, size: 128, offset: 128)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1464, file: !67, line: 405, baseType: !1726, size: 64, offset: 256)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !67, line: 43, flags: DIFlagFwdDecl)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !1464, file: !67, line: 406, baseType: !1729, size: 64, offset: 320)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !67, line: 42, flags: DIFlagFwdDecl)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !1464, file: !67, line: 408, baseType: !1732, size: 64, offset: 384)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 64)
!1733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1734)
!1734 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !67, line: 408, flags: DIFlagFwdDecl)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !1464, file: !67, line: 411, baseType: !1472, size: 64, offset: 448)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !1464, file: !67, line: 413, baseType: !7, size: 32, offset: 512)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !1464, file: !67, line: 416, baseType: !1738, size: 64, offset: 576)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1475, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !1464, file: !67, line: 417, baseType: !7, size: 32, offset: 640)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1464, file: !67, line: 419, baseType: !1741, size: 64, offset: 704)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 64)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !80, line: 165, size: 4672, elements: !1743)
!1743 = !{!1744, !1745, !1746, !1747, !1748, !1749, !1754, !1755, !1756, !1757, !1758, !1759, !1815, !1816, !1817, !1818, !1820, !1821}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1742, file: !80, line: 166, baseType: !558, size: 64)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1742, file: !80, line: 167, baseType: !963, size: 192, align: 64, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !1742, file: !80, line: 168, baseType: !361, size: 128, offset: 256)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1742, file: !80, line: 169, baseType: !465, size: 64, offset: 384)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !1742, file: !80, line: 170, baseType: !465, size: 64, offset: 448)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !1742, file: !80, line: 172, baseType: !1750, size: 32, offset: 512)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1751, line: 19, size: 32, elements: !1752)
!1751 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1752 = !{!1753}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1750, file: !1751, line: 20, baseType: !1560, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !1742, file: !80, line: 173, baseType: !7, size: 32, offset: 544)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !1742, file: !80, line: 174, baseType: !7, size: 32, offset: 576)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !1742, file: !80, line: 175, baseType: !7, size: 32, offset: 608)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !1742, file: !80, line: 175, baseType: !7, size: 32, offset: 640)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !1742, file: !80, line: 181, baseType: !880, size: 64, offset: 704)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !1742, file: !80, line: 183, baseType: !1760, size: 2688, offset: 768)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !80, line: 107, size: 2688, elements: !1761)
!1761 = !{!1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1791, !1792, !1793, !1794, !1795, !1813, !1814}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !1760, file: !80, line: 108, baseType: !1741, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1760, file: !80, line: 110, baseType: !465, size: 64, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !1760, file: !80, line: 111, baseType: !465, size: 64, offset: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !1760, file: !80, line: 113, baseType: !361, size: 128, offset: 192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !1760, file: !80, line: 114, baseType: !361, size: 128, offset: 320)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !1760, file: !80, line: 115, baseType: !361, size: 128, offset: 448)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !1760, file: !80, line: 116, baseType: !361, size: 128, offset: 576)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1760, file: !80, line: 117, baseType: !375, offset: 704)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !1760, file: !80, line: 119, baseType: !1771, size: 256, offset: 704)
!1771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1772, size: 256, elements: !331)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !1773, line: 97, size: 64, elements: !1774)
!1773 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!1774 = !{!1775}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1772, file: !1773, line: 98, baseType: !886, size: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !1760, file: !80, line: 121, baseType: !465, size: 64, offset: 960)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !1760, file: !80, line: 123, baseType: !465, size: 64, offset: 1024)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !1760, file: !80, line: 124, baseType: !465, size: 64, offset: 1088)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !1760, file: !80, line: 125, baseType: !465, size: 64, offset: 1152)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !1760, file: !80, line: 126, baseType: !465, size: 64, offset: 1216)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !1760, file: !80, line: 127, baseType: !465, size: 64, offset: 1280)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !1760, file: !80, line: 135, baseType: !465, size: 64, offset: 1344)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !1760, file: !80, line: 136, baseType: !465, size: 64, offset: 1408)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !1760, file: !80, line: 138, baseType: !1785, size: 128, offset: 1472)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !1786, line: 76, size: 128, elements: !1787)
!1786 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!1787 = !{!1788, !1789, !1790}
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1785, file: !1786, line: 78, baseType: !1772, size: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !1785, file: !1786, line: 80, baseType: !7, size: 32, offset: 64)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1785, file: !1786, line: 81, baseType: !976, offset: 96)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !1760, file: !80, line: 139, baseType: !401, size: 32, offset: 1600)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !1760, file: !80, line: 140, baseType: !79, size: 32, offset: 1632)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !1760, file: !80, line: 142, baseType: !375, offset: 1664)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !1760, file: !80, line: 143, baseType: !361, size: 128, offset: 1664)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !1760, file: !80, line: 144, baseType: !1796, size: 704, offset: 1792)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1231, line: 115, size: 704, elements: !1797)
!1797 = !{!1798, !1799, !1811, !1812}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1796, file: !1231, line: 116, baseType: !1234, size: 256)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !1796, file: !1231, line: 117, baseType: !1800, size: 320, offset: 256)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !1801, line: 11, size: 320, elements: !1802)
!1801 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!1802 = !{!1803, !1804, !1805, !1810}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1800, file: !1801, line: 16, baseType: !778, size: 128)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1800, file: !1801, line: 17, baseType: !465, size: 64, offset: 128)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1800, file: !1801, line: 18, baseType: !1806, size: 64, offset: 192)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DISubroutineType(types: !1808)
!1808 = !{null, !1809}
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1800, file: !1801, line: 19, baseType: !303, size: 32, offset: 256)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !1796, file: !1231, line: 120, baseType: !1246, size: 64, offset: 576)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1796, file: !1231, line: 121, baseType: !401, size: 32, offset: 640)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !1760, file: !80, line: 146, baseType: !465, size: 64, offset: 2496)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !1760, file: !80, line: 148, baseType: !361, size: 128, offset: 2560)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !1742, file: !80, line: 184, baseType: !361, size: 128, offset: 3456)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !1742, file: !80, line: 190, baseType: !1370, size: 128, offset: 3584)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1742, file: !80, line: 192, baseType: !349, size: 64, offset: 3712)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !1742, file: !80, line: 193, baseType: !1819, size: 512, offset: 3776)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !359, size: 512, elements: !422)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1742, file: !80, line: 194, baseType: !349, size: 64, offset: 4288)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !1742, file: !80, line: 196, baseType: !1800, size: 320, offset: 4352)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !1464, file: !67, line: 425, baseType: !341, size: 64, offset: 768)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !1464, file: !67, line: 430, baseType: !465, size: 64, offset: 832)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !1464, file: !67, line: 436, baseType: !950, size: 32, offset: 896)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1464, file: !67, line: 442, baseType: !401, size: 32, offset: 928)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !1464, file: !67, line: 447, baseType: !946, size: 32, offset: 960)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !1464, file: !67, line: 449, baseType: !375, offset: 992)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1464, file: !67, line: 454, baseType: !353, size: 512, offset: 1024)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !1464, file: !67, line: 459, baseType: !368, size: 64, offset: 1536)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !1464, file: !67, line: 462, baseType: !1831, size: 128, offset: 1600)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !1186, line: 159, size: 128, elements: !1832)
!1832 = !{!1833, !1862, !1863, !1864, !1865}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1831, file: !1186, line: 160, baseType: !1834, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1835, size: 64)
!1835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1836)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !67, line: 1664, size: 320, elements: !1837)
!1837 = !{!1838, !1852, !1853, !1856, !1861}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !1836, file: !67, line: 1665, baseType: !1839, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !67, line: 1660, baseType: !1841)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{!1295, !1843}
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !67, line: 1651, size: 320, elements: !1845)
!1845 = !{!1846, !1847, !1848, !1849, !1850, !1851}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !1844, file: !67, line: 1652, baseType: !341, size: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !1844, file: !67, line: 1653, baseType: !341, size: 64, offset: 64)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !1844, file: !67, line: 1654, baseType: !1033, size: 64, offset: 128)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !1844, file: !67, line: 1655, baseType: !7, size: 32, offset: 192)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1844, file: !67, line: 1656, baseType: !320, size: 16, offset: 224)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !1844, file: !67, line: 1657, baseType: !357, size: 64, offset: 256)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !1836, file: !67, line: 1666, baseType: !1839, size: 64, offset: 64)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !1836, file: !67, line: 1667, baseType: !1854, size: 64, offset: 128)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !67, line: 1661, baseType: !1663)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !1836, file: !67, line: 1668, baseType: !1857, size: 64, offset: 192)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !67, line: 1662, baseType: !1859)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{null, !1467, !7}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1836, file: !67, line: 1669, baseType: !357, size: 64, offset: 256)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1831, file: !1186, line: 161, baseType: !313, size: 8, offset: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !1831, file: !1186, line: 162, baseType: !313, size: 8, offset: 72)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !1831, file: !1186, line: 163, baseType: !313, size: 8, offset: 80)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !1831, file: !1186, line: 164, baseType: !313, size: 8, offset: 88)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1464, file: !67, line: 466, baseType: !349, size: 64, offset: 1728)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !1464, file: !67, line: 467, baseType: !91, size: 32, offset: 1792)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !1464, file: !67, line: 468, baseType: !7, size: 32, offset: 1824)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !1464, file: !67, line: 474, baseType: !465, size: 64, offset: 1856)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !1464, file: !67, line: 476, baseType: !7, size: 32, offset: 1920)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !1464, file: !67, line: 477, baseType: !7, size: 32, offset: 1952)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !1464, file: !67, line: 484, baseType: !7, size: 32, offset: 1984)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !1464, file: !67, line: 485, baseType: !401, size: 32, offset: 2016)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !1464, file: !67, line: 487, baseType: !1875, size: 64, offset: 2048)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !67, line: 44, flags: DIFlagFwdDecl)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !1464, file: !67, line: 488, baseType: !1878, size: 5120, offset: 2112)
!1878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1879, size: 5120, elements: !1886)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !1168, line: 540, size: 320, elements: !1880)
!1880 = !{!1881, !1882, !1883, !1884, !1885}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !1879, file: !1168, line: 541, baseType: !558, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !1879, file: !1168, line: 542, baseType: !558, size: 64, offset: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1879, file: !1168, line: 543, baseType: !558, size: 64, offset: 128)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !1879, file: !1168, line: 544, baseType: !303, size: 32, offset: 192)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1879, file: !1168, line: 545, baseType: !558, size: 64, offset: 256)
!1886 = !{!1887}
!1887 = !DISubrange(count: 16)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1464, file: !67, line: 490, baseType: !1800, size: 320, offset: 7232)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !1464, file: !67, line: 491, baseType: !1234, size: 256, offset: 7552)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !1464, file: !67, line: 493, baseType: !950, size: 32, offset: 7808)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1464, file: !67, line: 495, baseType: !361, size: 128, offset: 7872)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !1464, file: !67, line: 502, baseType: !1893, size: 896, offset: 8000)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !67, line: 321, size: 896, elements: !1894)
!1894 = !{!1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !1893, file: !67, line: 322, baseType: !465, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !1893, file: !67, line: 323, baseType: !465, size: 64, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !1893, file: !67, line: 324, baseType: !465, size: 64, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !1893, file: !67, line: 326, baseType: !7, size: 32, offset: 192)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !1893, file: !67, line: 327, baseType: !7, size: 32, offset: 224)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !1893, file: !67, line: 328, baseType: !7, size: 32, offset: 256)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !1893, file: !67, line: 329, baseType: !7, size: 32, offset: 288)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !1893, file: !67, line: 330, baseType: !7, size: 32, offset: 320)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !1893, file: !67, line: 331, baseType: !7, size: 32, offset: 352)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !1893, file: !67, line: 332, baseType: !7, size: 32, offset: 384)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !1893, file: !67, line: 333, baseType: !7, size: 32, offset: 416)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !1893, file: !67, line: 334, baseType: !7, size: 32, offset: 448)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !1893, file: !67, line: 335, baseType: !7, size: 32, offset: 480)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !1893, file: !67, line: 336, baseType: !7, size: 32, offset: 512)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !1893, file: !67, line: 337, baseType: !7, size: 32, offset: 544)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !1893, file: !67, line: 338, baseType: !7, size: 32, offset: 576)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !1893, file: !67, line: 339, baseType: !7, size: 32, offset: 608)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !1893, file: !67, line: 340, baseType: !7, size: 32, offset: 640)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !1893, file: !67, line: 341, baseType: !7, size: 32, offset: 672)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !1893, file: !67, line: 342, baseType: !7, size: 32, offset: 704)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !1893, file: !67, line: 344, baseType: !320, size: 16, offset: 736)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !1893, file: !67, line: 345, baseType: !320, size: 16, offset: 752)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !1893, file: !67, line: 346, baseType: !320, size: 16, offset: 768)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !1893, file: !67, line: 348, baseType: !313, size: 8, offset: 784)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !1893, file: !67, line: 349, baseType: !313, size: 8, offset: 792)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !1893, file: !67, line: 350, baseType: !313, size: 8, offset: 800)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !1893, file: !67, line: 351, baseType: !98, size: 32, offset: 832)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !1464, file: !67, line: 504, baseType: !7, size: 32, offset: 8896)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !1464, file: !67, line: 534, baseType: !7, size: 32, offset: 8928)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !1464, file: !67, line: 535, baseType: !7, size: 32, offset: 8960)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1464, file: !67, line: 536, baseType: !401, size: 32, offset: 8992)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !1464, file: !67, line: 537, baseType: !876, size: 192, offset: 9024)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !1464, file: !67, line: 544, baseType: !1928, size: 64, offset: 9216)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !67, line: 40, flags: DIFlagFwdDecl)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !1464, file: !67, line: 546, baseType: !361, size: 128, offset: 9280)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !1464, file: !67, line: 547, baseType: !375, offset: 9408)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !1464, file: !67, line: 548, baseType: !1796, size: 704, offset: 9408)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !1464, file: !67, line: 550, baseType: !876, size: 192, offset: 10112)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !1464, file: !67, line: 551, baseType: !876, size: 192, offset: 10304)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !1464, file: !67, line: 557, baseType: !361, size: 128, offset: 10496)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !1464, file: !67, line: 558, baseType: !375, offset: 10624)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !1464, file: !67, line: 560, baseType: !401, size: 32, offset: 10624)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !1464, file: !67, line: 563, baseType: !1939, size: 256, offset: 10688)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !1940, line: 18, size: 256, elements: !1941)
!1940 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!1941 = !{!1942, !1943, !1944, !1945}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !1939, file: !1940, line: 19, baseType: !349, size: 64)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !1939, file: !1940, line: 20, baseType: !401, size: 32, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1939, file: !1940, line: 21, baseType: !1463, size: 64, offset: 128)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1939, file: !1940, line: 22, baseType: !1946, size: 64, offset: 192)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1948)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !1940, line: 10, size: 256, elements: !1949)
!1949 = !{!1950, !1992, !1996, !2000}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !1948, file: !1940, line: 11, baseType: !1951, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{!401, !1954}
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1955, size: 64)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !1956, line: 22, size: 1280, elements: !1957)
!1956 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!1957 = !{!1958, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !1955, file: !1956, line: 23, baseType: !1959, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !306, line: 26, baseType: !401)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !1955, file: !1956, line: 24, baseType: !305, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !1955, file: !1956, line: 25, baseType: !305, size: 32, offset: 64)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !1955, file: !1956, line: 28, baseType: !305, size: 32, offset: 96)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !1955, file: !1956, line: 29, baseType: !559, size: 64, offset: 128)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !1955, file: !1956, line: 30, baseType: !559, size: 64, offset: 192)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !1955, file: !1956, line: 31, baseType: !305, size: 32, offset: 256)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !1955, file: !1956, line: 32, baseType: !305, size: 32, offset: 288)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !1955, file: !1956, line: 33, baseType: !305, size: 32, offset: 320)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !1955, file: !1956, line: 34, baseType: !305, size: 32, offset: 352)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !1955, file: !1956, line: 35, baseType: !559, size: 64, offset: 384)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !1955, file: !1956, line: 38, baseType: !305, size: 32, offset: 448)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !1955, file: !1956, line: 40, baseType: !305, size: 32, offset: 480)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !1955, file: !1956, line: 41, baseType: !305, size: 32, offset: 512)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !1955, file: !1956, line: 42, baseType: !305, size: 32, offset: 544)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !1955, file: !1956, line: 43, baseType: !559, size: 64, offset: 576)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !1955, file: !1956, line: 44, baseType: !559, size: 64, offset: 640)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1955, file: !1956, line: 46, baseType: !305, size: 32, offset: 704)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1955, file: !1956, line: 47, baseType: !305, size: 32, offset: 736)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !1955, file: !1956, line: 48, baseType: !559, size: 64, offset: 768)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !1955, file: !1956, line: 49, baseType: !305, size: 32, offset: 832)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !1955, file: !1956, line: 51, baseType: !305, size: 32, offset: 864)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !1955, file: !1956, line: 52, baseType: !305, size: 32, offset: 896)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !1955, file: !1956, line: 53, baseType: !305, size: 32, offset: 928)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !1955, file: !1956, line: 54, baseType: !305, size: 32, offset: 960)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1955, file: !1956, line: 55, baseType: !305, size: 32, offset: 992)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !1955, file: !1956, line: 56, baseType: !305, size: 32, offset: 1024)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !1955, file: !1956, line: 57, baseType: !305, size: 32, offset: 1056)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !1955, file: !1956, line: 58, baseType: !1959, size: 32, offset: 1088)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !1955, file: !1956, line: 59, baseType: !1959, size: 32, offset: 1120)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !1955, file: !1956, line: 60, baseType: !559, size: 64, offset: 1152)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !1955, file: !1956, line: 61, baseType: !305, size: 32, offset: 1216)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !1955, file: !1956, line: 63, baseType: !305, size: 32, offset: 1248)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !1948, file: !1940, line: 12, baseType: !1993, size: 64, offset: 64)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!1994 = !DISubroutineType(types: !1995)
!1995 = !{!401, !1467, !1954, !1391}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !1948, file: !1940, line: 14, baseType: !1997, size: 64, offset: 128)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{!401, !1467, !1954}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !1948, file: !1940, line: 15, baseType: !1662, size: 64, offset: 192)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1464, file: !67, line: 570, baseType: !506, size: 128, align: 64, offset: 10944)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !1464, file: !67, line: 571, baseType: !1370, size: 128, offset: 11072)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !1464, file: !67, line: 576, baseType: !876, size: 192, offset: 11200)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !1464, file: !67, line: 578, baseType: !2005, size: 64, offset: 11392)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !67, line: 578, flags: DIFlagFwdDecl)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !1464, file: !67, line: 579, baseType: !361, size: 128, offset: 11456)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !1464, file: !67, line: 580, baseType: !1343, size: 2368, offset: 11584)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !1464, file: !67, line: 582, baseType: !523, size: 64, offset: 13952)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !1464, file: !67, line: 589, baseType: !626, size: 8, offset: 14016)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !1464, file: !67, line: 591, baseType: !462, size: 64, offset: 14080)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !1464, file: !67, line: 594, baseType: !2013, size: 320, offset: 14144)
!2013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !558, size: 320, elements: !2014)
!2014 = !{!2015}
!2015 = !DISubrange(count: 5)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1252, file: !1186, line: 191, baseType: !341, size: 64, offset: 7168)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1252, file: !1186, line: 193, baseType: !401, size: 32, offset: 7232)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1252, file: !1186, line: 194, baseType: !465, size: 64, offset: 7296)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !1252, file: !1186, line: 196, baseType: !970, size: 256, offset: 7360)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !1252, file: !1186, line: 197, baseType: !368, size: 64, offset: 7616)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !1252, file: !1186, line: 199, baseType: !2022, size: 64, offset: 7680)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !1186, line: 199, flags: DIFlagFwdDecl)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !1252, file: !1186, line: 200, baseType: !950, size: 32, offset: 7744)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !1252, file: !1186, line: 201, baseType: !2026, size: 64, offset: 7808)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !1186, line: 156, flags: DIFlagFwdDecl)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !1252, file: !1186, line: 203, baseType: !353, size: 512, offset: 7872)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !1252, file: !1186, line: 208, baseType: !401, size: 32, offset: 8384)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1252, file: !1186, line: 209, baseType: !2031, size: 64, offset: 8448)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !1186, line: 157, flags: DIFlagFwdDecl)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !1252, file: !1186, line: 210, baseType: !2034, offset: 8512)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !785, line: 192, elements: !389)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !1167, file: !1168, line: 43, baseType: !1741, size: 64, offset: 1024)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !1167, file: !1168, line: 46, baseType: !401, size: 32, offset: 1088)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !1167, file: !1168, line: 48, baseType: !876, size: 192, offset: 1152)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "swap_file", scope: !1120, file: !1121, line: 259, baseType: !493, size: 64, offset: 1152)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "old_block_size", scope: !1120, file: !1121, line: 260, baseType: !7, size: 32, offset: 1216)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1120, file: !1121, line: 265, baseType: !375, offset: 1248)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "cont_lock", scope: !1120, file: !1121, line: 278, baseType: !375, offset: 1248)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "discard_work", scope: !1120, file: !1121, line: 282, baseType: !1234, size: 256, offset: 1280)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "discard_clusters", scope: !1120, file: !1121, line: 283, baseType: !1146, size: 64, offset: 1536)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "avail_lists", scope: !1120, file: !1121, line: 284, baseType: !2045, offset: 1600)
!2045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1127, elements: !1272)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !984, file: !129, line: 415, baseType: !2048, size: 64, offset: 1344)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DISubroutineType(types: !2050)
!2050 = !{null, !493}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !937, file: !129, line: 466, baseType: !465, size: 64, offset: 896)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !937, file: !129, line: 467, baseType: !2053, size: 32, offset: 960)
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !2054, line: 8, baseType: !303)
!2054 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !937, file: !129, line: 468, baseType: !375, offset: 992)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !937, file: !129, line: 469, baseType: !361, size: 128, offset: 1024)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !937, file: !129, line: 470, baseType: !341, size: 64, offset: 1152)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !932, file: !925, line: 87, baseType: !465, size: 64, offset: 192)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !932, file: !925, line: 94, baseType: !465, size: 64, offset: 256)
!2060 = !DIDerivedType(tag: DW_TAG_member, scope: !929, file: !925, line: 96, baseType: !2061, size: 64)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !929, file: !925, line: 96, size: 64, elements: !2062)
!2062 = !{!2063}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2061, file: !925, line: 101, baseType: !2064, size: 64)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !362, line: 143, baseType: !558)
!2065 = !DIDerivedType(tag: DW_TAG_member, scope: !929, file: !925, line: 103, baseType: !2066, size: 320)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !929, file: !925, line: 103, size: 320, elements: !2067)
!2067 = !{!2068, !2078, !2079, !2080}
!2068 = !DIDerivedType(tag: DW_TAG_member, scope: !2066, file: !925, line: 104, baseType: !2069, size: 128)
!2069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2066, file: !925, line: 104, size: 128, elements: !2070)
!2070 = !{!2071, !2072}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2069, file: !925, line: 105, baseType: !361, size: 128)
!2072 = !DIDerivedType(tag: DW_TAG_member, scope: !2069, file: !925, line: 106, baseType: !2073, size: 128)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2069, file: !925, line: 106, size: 128, elements: !2074)
!2074 = !{!2075, !2076, !2077}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2073, file: !925, line: 107, baseType: !923, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2073, file: !925, line: 109, baseType: !401, size: 32, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2073, file: !925, line: 110, baseType: !401, size: 32, offset: 96)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2066, file: !925, line: 117, baseType: !1346, size: 64, offset: 128)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2066, file: !925, line: 119, baseType: !341, size: 64, offset: 192)
!2080 = !DIDerivedType(tag: DW_TAG_member, scope: !2066, file: !925, line: 120, baseType: !2081, size: 64, offset: 256)
!2081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2066, file: !925, line: 120, size: 64, elements: !2082)
!2082 = !{!2083, !2084, !2085}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2081, file: !925, line: 121, baseType: !341, size: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2081, file: !925, line: 122, baseType: !465, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, scope: !2081, file: !925, line: 123, baseType: !2086, size: 32)
!2086 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2081, file: !925, line: 123, size: 32, elements: !2087)
!2087 = !{!2088, !2089, !2090}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2086, file: !925, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2086, file: !925, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2086, file: !925, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2091 = !DIDerivedType(tag: DW_TAG_member, scope: !929, file: !925, line: 130, baseType: !2092, size: 192)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !929, file: !925, line: 130, size: 192, elements: !2093)
!2093 = !{!2094, !2095, !2096, !2097, !2098}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2092, file: !925, line: 131, baseType: !465, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2092, file: !925, line: 134, baseType: !313, size: 8, offset: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2092, file: !925, line: 135, baseType: !313, size: 8, offset: 72)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2092, file: !925, line: 136, baseType: !950, size: 32, offset: 96)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2092, file: !925, line: 137, baseType: !7, size: 32, offset: 128)
!2099 = !DIDerivedType(tag: DW_TAG_member, scope: !929, file: !925, line: 139, baseType: !2100, size: 256)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !929, file: !925, line: 139, size: 256, elements: !2101)
!2101 = !{!2102, !2103, !2104}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2100, file: !925, line: 140, baseType: !465, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2100, file: !925, line: 141, baseType: !950, size: 32, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2100, file: !925, line: 143, baseType: !361, size: 128, offset: 128)
!2105 = !DIDerivedType(tag: DW_TAG_member, scope: !929, file: !925, line: 145, baseType: !2106, size: 256)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !929, file: !925, line: 145, size: 256, elements: !2107)
!2107 = !{!2108, !2109, !2112, !2113, !3583}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2106, file: !925, line: 146, baseType: !465, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2106, file: !925, line: 147, baseType: !2110, size: 64, offset: 64)
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !2111, line: 509, baseType: !923)
!2111 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2106, file: !925, line: 148, baseType: !465, size: 64, offset: 128)
!2113 = !DIDerivedType(tag: DW_TAG_member, scope: !2106, file: !925, line: 149, baseType: !2114, size: 64, offset: 192)
!2114 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2106, file: !925, line: 149, size: 64, elements: !2115)
!2115 = !{!2116, !3582}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2114, file: !925, line: 150, baseType: !2117, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !925, line: 388, size: 7296, elements: !2119)
!2119 = !{!2120, !3580}
!2120 = !DIDerivedType(tag: DW_TAG_member, scope: !2118, file: !925, line: 389, baseType: !2121, size: 7296)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2118, file: !925, line: 389, size: 7296, elements: !2122)
!2122 = !{!2123, !2241, !2242, !2243, !2247, !2248, !2249, !2250, !2251, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2292, !2298, !2301, !2340, !2341, !3564, !3565, !3568, !3569, !3570, !3573, !3574, !3575, !3578, !3579}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2121, file: !925, line: 390, baseType: !2124, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !925, line: 305, size: 1472, elements: !2126)
!2126 = !{!2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2141, !2142, !2147, !2148, !2151, !2235, !2236, !2237, !2238, !2239}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !2125, file: !925, line: 308, baseType: !465, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !2125, file: !925, line: 309, baseType: !465, size: 64, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !2125, file: !925, line: 313, baseType: !2124, size: 64, offset: 128)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !2125, file: !925, line: 313, baseType: !2124, size: 64, offset: 192)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !2125, file: !925, line: 315, baseType: !963, size: 192, align: 64, offset: 256)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !2125, file: !925, line: 323, baseType: !465, size: 64, offset: 448)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !2125, file: !925, line: 327, baseType: !2117, size: 64, offset: 512)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !2125, file: !925, line: 333, baseType: !2135, size: 64, offset: 576)
!2135 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !2111, line: 284, baseType: !2136)
!2136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !2111, line: 284, size: 64, elements: !2137)
!2137 = !{!2138}
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !2136, file: !2111, line: 284, baseType: !2139, size: 64)
!2139 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !2140, line: 19, baseType: !465)
!2140 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !2125, file: !925, line: 334, baseType: !465, size: 64, offset: 640)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !2125, file: !925, line: 343, baseType: !2143, size: 256, offset: 704)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2125, file: !925, line: 340, size: 256, elements: !2144)
!2144 = !{!2145, !2146}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !2143, file: !925, line: 341, baseType: !963, size: 192, align: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !2143, file: !925, line: 342, baseType: !465, size: 64, offset: 192)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !2125, file: !925, line: 351, baseType: !361, size: 128, offset: 960)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !2125, file: !925, line: 353, baseType: !2149, size: 64, offset: 1088)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !925, line: 353, flags: DIFlagFwdDecl)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !2125, file: !925, line: 356, baseType: !2152, size: 64, offset: 1152)
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2154)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !104, line: 557, size: 832, elements: !2155)
!2155 = !{!2156, !2160, !2161, !2165, !2169, !2209, !2213, !2217, !2221, !2222, !2223, !2227, !2231}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2154, file: !104, line: 558, baseType: !2157, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DISubroutineType(types: !2159)
!2159 = !{null, !2124}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2154, file: !104, line: 559, baseType: !2157, size: 64, offset: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !2154, file: !104, line: 560, baseType: !2162, size: 64, offset: 128)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = !DISubroutineType(types: !2164)
!2164 = !{!401, !2124, !465}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !2154, file: !104, line: 561, baseType: !2166, size: 64, offset: 192)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{!401, !2124}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !2154, file: !104, line: 562, baseType: !2170, size: 64, offset: 256)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2171 = !DISubroutineType(types: !2172)
!2172 = !{!2173, !2174}
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !925, line: 682, baseType: !7)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !104, line: 508, size: 768, elements: !2176)
!2176 = !{!2177, !2178, !2179, !2180, !2181, !2182, !2189, !2196, !2202, !2203, !2204, !2206, !2208}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2175, file: !104, line: 509, baseType: !2124, size: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2175, file: !104, line: 510, baseType: !7, size: 32, offset: 64)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2175, file: !104, line: 511, baseType: !946, size: 32, offset: 96)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2175, file: !104, line: 512, baseType: !465, size: 64, offset: 128)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2175, file: !104, line: 513, baseType: !465, size: 64, offset: 192)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2175, file: !104, line: 514, baseType: !2183, size: 64, offset: 256)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !2111, line: 385, baseType: !2185)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2111, line: 385, size: 64, elements: !2186)
!2186 = !{!2187}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2185, file: !2111, line: 385, baseType: !2188, size: 64)
!2188 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !2140, line: 15, baseType: !465)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2175, file: !104, line: 516, baseType: !2190, size: 64, offset: 320)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !2111, line: 359, baseType: !2192)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2111, line: 359, size: 64, elements: !2193)
!2193 = !{!2194}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2192, file: !2111, line: 359, baseType: !2195, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !2140, line: 16, baseType: !465)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2175, file: !104, line: 519, baseType: !2197, size: 64, offset: 384)
!2197 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !2140, line: 21, baseType: !2198)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2140, line: 21, size: 64, elements: !2199)
!2199 = !{!2200}
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2198, file: !2140, line: 21, baseType: !2201, size: 64)
!2201 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !2140, line: 14, baseType: !465)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2175, file: !104, line: 521, baseType: !923, size: 64, offset: 448)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2175, file: !104, line: 522, baseType: !923, size: 64, offset: 512)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2175, file: !104, line: 528, baseType: !2205, size: 64, offset: 576)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2175, file: !104, line: 532, baseType: !2207, size: 64, offset: 640)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2175, file: !104, line: 536, baseType: !2110, size: 64, offset: 704)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !2154, file: !104, line: 563, baseType: !2210, size: 64, offset: 320)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!2211 = !DISubroutineType(types: !2212)
!2212 = !{!2173, !2174, !103}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !2154, file: !104, line: 565, baseType: !2214, size: 64, offset: 384)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 64)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{null, !2174, !465, !465}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !2154, file: !104, line: 567, baseType: !2218, size: 64, offset: 448)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!465, !2124}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !2154, file: !104, line: 571, baseType: !2170, size: 64, offset: 512)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !2154, file: !104, line: 574, baseType: !2170, size: 64, offset: 576)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !2154, file: !104, line: 579, baseType: !2224, size: 64, offset: 640)
!2224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2225, size: 64)
!2225 = !DISubroutineType(types: !2226)
!2226 = !{!401, !2124, !465, !341, !401, !401}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2154, file: !104, line: 585, baseType: !2228, size: 64, offset: 704)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!2229 = !DISubroutineType(types: !2230)
!2230 = !{!357, !2124}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !2154, file: !104, line: 615, baseType: !2232, size: 64, offset: 768)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = !DISubroutineType(types: !2234)
!2234 = !{!923, !2124, !465}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !2125, file: !925, line: 359, baseType: !465, size: 64, offset: 1216)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !2125, file: !925, line: 361, baseType: !493, size: 64, offset: 1280)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !2125, file: !925, line: 362, baseType: !341, size: 64, offset: 1344)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !2125, file: !925, line: 365, baseType: !880, size: 64, offset: 1408)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !2125, file: !925, line: 373, baseType: !2240, offset: 1472)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !925, line: 296, elements: !389)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !2121, file: !925, line: 391, baseType: !959, size: 64, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !2121, file: !925, line: 392, baseType: !558, size: 64, offset: 128)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2121, file: !925, line: 394, baseType: !2244, size: 64, offset: 192)
!2244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2245 = !DISubroutineType(types: !2246)
!2246 = !{!465, !493, !465, !465, !465, !465}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !2121, file: !925, line: 398, baseType: !465, size: 64, offset: 256)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !2121, file: !925, line: 399, baseType: !465, size: 64, offset: 320)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !2121, file: !925, line: 405, baseType: !465, size: 64, offset: 384)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !2121, file: !925, line: 406, baseType: !465, size: 64, offset: 448)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2121, file: !925, line: 407, baseType: !2252, size: 64, offset: 512)
!2252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2253, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !2111, line: 286, baseType: !2254)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2111, line: 286, size: 64, elements: !2255)
!2255 = !{!2256}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2254, file: !2111, line: 286, baseType: !2257, size: 64)
!2257 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !2140, line: 18, baseType: !465)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !2121, file: !925, line: 416, baseType: !950, size: 32, offset: 576)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !2121, file: !925, line: 428, baseType: !950, size: 32, offset: 608)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !2121, file: !925, line: 437, baseType: !950, size: 32, offset: 640)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !2121, file: !925, line: 447, baseType: !950, size: 32, offset: 672)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !2121, file: !925, line: 450, baseType: !880, size: 64, offset: 704)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !2121, file: !925, line: 452, baseType: !401, size: 32, offset: 768)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !2121, file: !925, line: 454, baseType: !375, offset: 800)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !2121, file: !925, line: 457, baseType: !970, size: 256, offset: 832)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !2121, file: !925, line: 459, baseType: !361, size: 128, offset: 1088)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !2121, file: !925, line: 466, baseType: !465, size: 64, offset: 1216)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !2121, file: !925, line: 467, baseType: !465, size: 64, offset: 1280)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !2121, file: !925, line: 469, baseType: !465, size: 64, offset: 1344)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2121, file: !925, line: 470, baseType: !465, size: 64, offset: 1408)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !2121, file: !925, line: 471, baseType: !882, size: 64, offset: 1472)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !2121, file: !925, line: 472, baseType: !465, size: 64, offset: 1536)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !2121, file: !925, line: 473, baseType: !465, size: 64, offset: 1600)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !2121, file: !925, line: 474, baseType: !465, size: 64, offset: 1664)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !2121, file: !925, line: 475, baseType: !465, size: 64, offset: 1728)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !2121, file: !925, line: 477, baseType: !375, offset: 1792)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !2121, file: !925, line: 478, baseType: !465, size: 64, offset: 1792)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !2121, file: !925, line: 478, baseType: !465, size: 64, offset: 1856)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !2121, file: !925, line: 478, baseType: !465, size: 64, offset: 1920)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !2121, file: !925, line: 478, baseType: !465, size: 64, offset: 1984)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !2121, file: !925, line: 479, baseType: !465, size: 64, offset: 2048)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !2121, file: !925, line: 479, baseType: !465, size: 64, offset: 2112)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !2121, file: !925, line: 479, baseType: !465, size: 64, offset: 2176)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !2121, file: !925, line: 480, baseType: !465, size: 64, offset: 2240)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !2121, file: !925, line: 480, baseType: !465, size: 64, offset: 2304)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !2121, file: !925, line: 480, baseType: !465, size: 64, offset: 2368)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !2121, file: !925, line: 480, baseType: !465, size: 64, offset: 2432)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !2121, file: !925, line: 482, baseType: !2289, size: 2816, offset: 2496)
!2289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 2816, elements: !2290)
!2290 = !{!2291}
!2291 = !DISubrange(count: 44)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !2121, file: !925, line: 488, baseType: !2293, size: 256, offset: 5312)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2294, line: 60, size: 256, elements: !2295)
!2294 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2295 = !{!2296}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2293, file: !2294, line: 61, baseType: !2297, size: 256)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !880, size: 256, elements: !331)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !2121, file: !925, line: 490, baseType: !2299, size: 64, offset: 5568)
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !925, line: 490, flags: DIFlagFwdDecl)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2121, file: !925, line: 493, baseType: !2302, size: 896, offset: 5632)
!2302 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2303, line: 53, baseType: !2304)
!2303 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2303, line: 13, size: 896, elements: !2305)
!2305 = !{!2306, !2307, !2308, !2309, !2312, !2313, !2314, !2315, !2335, !2336, !2337}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2304, file: !2303, line: 18, baseType: !558, size: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2304, file: !2303, line: 28, baseType: !882, size: 64, offset: 64)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2304, file: !2303, line: 31, baseType: !970, size: 256, offset: 128)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2304, file: !2303, line: 32, baseType: !2310, size: 64, offset: 384)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 64)
!2311 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2303, line: 32, flags: DIFlagFwdDecl)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2304, file: !2303, line: 37, baseType: !320, size: 16, offset: 448)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2304, file: !2303, line: 40, baseType: !876, size: 192, offset: 512)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2304, file: !2303, line: 41, baseType: !341, size: 64, offset: 704)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2304, file: !2303, line: 42, baseType: !2316, size: 64, offset: 768)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2318)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2319, line: 13, size: 896, elements: !2320)
!2319 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2320 = !{!2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2318, file: !2319, line: 14, baseType: !341, size: 64)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2318, file: !2319, line: 15, baseType: !465, size: 64, offset: 64)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2318, file: !2319, line: 17, baseType: !465, size: 64, offset: 128)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2318, file: !2319, line: 17, baseType: !465, size: 64, offset: 192)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2318, file: !2319, line: 19, baseType: !340, size: 64, offset: 256)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2318, file: !2319, line: 21, baseType: !340, size: 64, offset: 320)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2318, file: !2319, line: 22, baseType: !340, size: 64, offset: 384)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2318, file: !2319, line: 23, baseType: !340, size: 64, offset: 448)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2318, file: !2319, line: 24, baseType: !340, size: 64, offset: 512)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2318, file: !2319, line: 25, baseType: !340, size: 64, offset: 576)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2318, file: !2319, line: 26, baseType: !340, size: 64, offset: 640)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2318, file: !2319, line: 27, baseType: !340, size: 64, offset: 704)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2318, file: !2319, line: 28, baseType: !340, size: 64, offset: 768)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2318, file: !2319, line: 29, baseType: !340, size: 64, offset: 832)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2304, file: !2303, line: 44, baseType: !950, size: 32, offset: 832)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2304, file: !2303, line: 50, baseType: !1062, size: 16, offset: 864)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2304, file: !2303, line: 51, baseType: !2338, size: 16, offset: 880)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !304, line: 18, baseType: !2339)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !306, line: 23, baseType: !1125)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2121, file: !925, line: 495, baseType: !465, size: 64, offset: 6528)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !2121, file: !925, line: 497, baseType: !2342, size: 64, offset: 6592)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !925, line: 381, size: 384, elements: !2344)
!2344 = !{!2345, !2346, !3563}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2343, file: !925, line: 382, baseType: !950, size: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2343, file: !925, line: 383, baseType: !2347, size: 128, offset: 64)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !925, line: 376, size: 128, elements: !2348)
!2348 = !{!2349, !3561}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2347, file: !925, line: 377, baseType: !2350, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2352, line: 640, size: 48640, elements: !2353)
!2352 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2353 = !{!2354, !2360, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2375, !2393, !2404, !2487, !2488, !2489, !2500, !2501, !2503, !2504, !2505, !2506, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2584, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2616, !2618, !2619, !2620, !2632, !2633, !2634, !2635, !2636, !2637, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2661, !2666, !2988, !2989, !2990, !2991, !2993, !2996, !2999, !3002, !3005, !3041, !3142, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3188, !3189, !3190, !3191, !3192, !3197, !3198, !3199, !3202, !3203, !3205, !3214, !3219, !3220, !3221, !3224, !3225, !3304, !3305, !3308, !3309, !3312, !3313, !3314, !3318, !3319, !3320, !3333, !3334, !3335, !3345, !3350, !3353, !3359, !3360, !3361, !3362, !3363, !3364, !3365, !3366, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2351, file: !2352, line: 646, baseType: !2355, size: 128)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2356, line: 56, size: 128, elements: !2357)
!2356 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2357 = !{!2358, !2359}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2355, file: !2356, line: 57, baseType: !465, size: 64)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2355, file: !2356, line: 58, baseType: !303, size: 32, offset: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2351, file: !2352, line: 649, baseType: !2361, size: 64, offset: 128)
!2361 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !340)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2351, file: !2352, line: 657, baseType: !341, size: 64, offset: 192)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2351, file: !2352, line: 658, baseType: !1560, size: 32, offset: 256)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2351, file: !2352, line: 660, baseType: !7, size: 32, offset: 288)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2351, file: !2352, line: 661, baseType: !7, size: 32, offset: 320)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2351, file: !2352, line: 684, baseType: !401, size: 32, offset: 352)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2351, file: !2352, line: 686, baseType: !401, size: 32, offset: 384)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2351, file: !2352, line: 687, baseType: !401, size: 32, offset: 416)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2351, file: !2352, line: 688, baseType: !401, size: 32, offset: 448)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2351, file: !2352, line: 689, baseType: !7, size: 32, offset: 480)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2351, file: !2352, line: 691, baseType: !2372, size: 64, offset: 512)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2374)
!2374 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2352, line: 691, flags: DIFlagFwdDecl)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2351, file: !2352, line: 692, baseType: !2376, size: 832, offset: 576)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2352, line: 451, size: 832, elements: !2377)
!2377 = !{!2378, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2376, file: !2352, line: 453, baseType: !2379, size: 128)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2352, line: 325, size: 128, elements: !2380)
!2380 = !{!2381, !2382}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2379, file: !2352, line: 326, baseType: !465, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2379, file: !2352, line: 327, baseType: !303, size: 32, offset: 64)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2376, file: !2352, line: 454, baseType: !963, size: 192, align: 64, offset: 128)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2376, file: !2352, line: 455, baseType: !361, size: 128, offset: 320)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2376, file: !2352, line: 456, baseType: !7, size: 32, offset: 448)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2376, file: !2352, line: 458, baseType: !558, size: 64, offset: 512)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2376, file: !2352, line: 459, baseType: !558, size: 64, offset: 576)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2376, file: !2352, line: 460, baseType: !558, size: 64, offset: 640)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2376, file: !2352, line: 461, baseType: !558, size: 64, offset: 704)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2376, file: !2352, line: 463, baseType: !558, size: 64, offset: 768)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2376, file: !2352, line: 465, baseType: !2392, offset: 832)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2352, line: 415, elements: !389)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2351, file: !2352, line: 693, baseType: !2394, size: 384, offset: 1408)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2352, line: 489, size: 384, elements: !2395)
!2395 = !{!2396, !2397, !2398, !2399, !2400, !2401, !2402}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2394, file: !2352, line: 490, baseType: !361, size: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2394, file: !2352, line: 491, baseType: !465, size: 64, offset: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2394, file: !2352, line: 492, baseType: !465, size: 64, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2394, file: !2352, line: 493, baseType: !7, size: 32, offset: 256)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2394, file: !2352, line: 494, baseType: !320, size: 16, offset: 288)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2394, file: !2352, line: 495, baseType: !320, size: 16, offset: 304)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2394, file: !2352, line: 497, baseType: !2403, size: 64, offset: 320)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2351, file: !2352, line: 697, baseType: !2405, size: 1792, offset: 1792)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2352, line: 507, size: 1792, elements: !2406)
!2406 = !{!2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2484, !2485}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2405, file: !2352, line: 508, baseType: !963, size: 192, align: 64)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2405, file: !2352, line: 515, baseType: !558, size: 64, offset: 192)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2405, file: !2352, line: 516, baseType: !558, size: 64, offset: 256)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2405, file: !2352, line: 517, baseType: !558, size: 64, offset: 320)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2405, file: !2352, line: 518, baseType: !558, size: 64, offset: 384)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2405, file: !2352, line: 519, baseType: !558, size: 64, offset: 448)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2405, file: !2352, line: 526, baseType: !886, size: 64, offset: 512)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2405, file: !2352, line: 527, baseType: !558, size: 64, offset: 576)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2405, file: !2352, line: 528, baseType: !7, size: 32, offset: 640)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2405, file: !2352, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2405, file: !2352, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2405, file: !2352, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2405, file: !2352, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2405, file: !2352, line: 563, baseType: !2421, size: 512, offset: 704)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !23, line: 118, size: 512, elements: !2422)
!2422 = !{!2423, !2431, !2432, !2437, !2480, !2481, !2482, !2483}
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2421, file: !23, line: 119, baseType: !2424, size: 256)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2425, line: 9, size: 256, elements: !2426)
!2425 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2426 = !{!2427, !2428}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2424, file: !2425, line: 10, baseType: !963, size: 192, align: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2424, file: !2425, line: 11, baseType: !2429, size: 64, offset: 192)
!2429 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !2430, line: 29, baseType: !886)
!2430 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2421, file: !23, line: 120, baseType: !2429, size: 64, offset: 256)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2421, file: !23, line: 121, baseType: !2433, size: 64, offset: 320)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 64)
!2434 = !DISubroutineType(types: !2435)
!2435 = !{!22, !2436}
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2421, file: !23, line: 122, baseType: !2438, size: 64, offset: 384)
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 64)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !23, line: 159, size: 512, align: 512, elements: !2440)
!2440 = !{!2441, !2461, !2462, !2465, !2470, !2471, !2475, !2479}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2439, file: !23, line: 160, baseType: !2442, size: 64)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 64)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !23, line: 214, size: 4608, align: 512, elements: !2444)
!2444 = !{!2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2443, file: !23, line: 215, baseType: !976)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2443, file: !23, line: 216, baseType: !7, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2443, file: !23, line: 217, baseType: !7, size: 32, offset: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2443, file: !23, line: 218, baseType: !7, size: 32, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2443, file: !23, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2443, file: !23, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2443, file: !23, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2443, file: !23, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2443, file: !23, line: 233, baseType: !2429, size: 64, offset: 128)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2443, file: !23, line: 234, baseType: !2436, size: 64, offset: 192)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2443, file: !23, line: 235, baseType: !2429, size: 64, offset: 256)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2443, file: !23, line: 236, baseType: !2436, size: 64, offset: 320)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2443, file: !23, line: 237, baseType: !2458, size: 4096, offset: 512)
!2458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2439, size: 4096, elements: !2459)
!2459 = !{!2460}
!2460 = !DISubrange(count: 8)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2439, file: !23, line: 161, baseType: !7, size: 32, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2439, file: !23, line: 162, baseType: !2463, size: 32, offset: 96)
!2463 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !362, line: 27, baseType: !2464)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !450, line: 96, baseType: !401)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2439, file: !23, line: 163, baseType: !2466, size: 32, offset: 128)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !529, line: 276, baseType: !2467)
!2467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !529, line: 276, size: 32, elements: !2468)
!2468 = !{!2469}
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2467, file: !529, line: 276, baseType: !533, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2439, file: !23, line: 164, baseType: !2436, size: 64, offset: 192)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2439, file: !23, line: 165, baseType: !2472, size: 128, offset: 256)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2425, line: 14, size: 128, elements: !2473)
!2473 = !{!2474}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2472, file: !2425, line: 15, baseType: !955, size: 128)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2439, file: !23, line: 166, baseType: !2476, size: 64, offset: 384)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = !DISubroutineType(types: !2478)
!2478 = !{!2429}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2439, file: !23, line: 167, baseType: !2429, size: 64, offset: 448)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2421, file: !23, line: 123, baseType: !1182, size: 8, offset: 448)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2421, file: !23, line: 124, baseType: !1182, size: 8, offset: 456)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2421, file: !23, line: 125, baseType: !1182, size: 8, offset: 464)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2421, file: !23, line: 126, baseType: !1182, size: 8, offset: 472)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2405, file: !2352, line: 572, baseType: !2421, size: 512, offset: 1216)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2405, file: !2352, line: 580, baseType: !2486, size: 64, offset: 1728)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2351, file: !2352, line: 721, baseType: !7, size: 32, offset: 3584)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2351, file: !2352, line: 722, baseType: !401, size: 32, offset: 3616)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2351, file: !2352, line: 723, baseType: !2490, size: 64, offset: 3648)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2492)
!2492 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2493, line: 17, baseType: !2494)
!2493 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2493, line: 17, size: 64, elements: !2495)
!2495 = !{!2496}
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2494, file: !2493, line: 17, baseType: !2497, size: 64)
!2497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 64, elements: !2498)
!2498 = !{!2499}
!2499 = !DISubrange(count: 1)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2351, file: !2352, line: 724, baseType: !2492, size: 64, offset: 3712)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2351, file: !2352, line: 749, baseType: !2502, offset: 3776)
!2502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2352, line: 290, elements: !389)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2351, file: !2352, line: 751, baseType: !361, size: 128, offset: 3776)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2351, file: !2352, line: 757, baseType: !2117, size: 64, offset: 3904)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2351, file: !2352, line: 758, baseType: !2117, size: 64, offset: 3968)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2351, file: !2352, line: 761, baseType: !2507, size: 320, offset: 4032)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2294, line: 34, size: 320, elements: !2508)
!2508 = !{!2509, !2510}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2507, file: !2294, line: 35, baseType: !558, size: 64)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2507, file: !2294, line: 36, baseType: !2511, size: 256, offset: 64)
!2511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2124, size: 256, elements: !331)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2351, file: !2352, line: 766, baseType: !401, size: 32, offset: 4352)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2351, file: !2352, line: 767, baseType: !401, size: 32, offset: 4384)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2351, file: !2352, line: 768, baseType: !401, size: 32, offset: 4416)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2351, file: !2352, line: 770, baseType: !401, size: 32, offset: 4448)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2351, file: !2352, line: 772, baseType: !465, size: 64, offset: 4480)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2351, file: !2352, line: 775, baseType: !7, size: 32, offset: 4544)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2351, file: !2352, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2351, file: !2352, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2351, file: !2352, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2351, file: !2352, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2351, file: !2352, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2351, file: !2352, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2351, file: !2352, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2351, file: !2352, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2351, file: !2352, line: 831, baseType: !465, size: 64, offset: 4672)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2351, file: !2352, line: 833, baseType: !2528, size: 384, offset: 4736)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !110, line: 25, size: 384, elements: !2529)
!2529 = !{!2530, !2535}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2528, file: !110, line: 26, baseType: !2531, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = !DISubroutineType(types: !2533)
!2533 = !{!340, !2534}
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2535 = !DIDerivedType(tag: DW_TAG_member, scope: !2528, file: !110, line: 27, baseType: !2536, size: 320, offset: 64)
!2536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2528, file: !110, line: 27, size: 320, elements: !2537)
!2537 = !{!2538, !2548, !2574}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2536, file: !110, line: 36, baseType: !2539, size: 320)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2536, file: !110, line: 29, size: 320, elements: !2540)
!2540 = !{!2541, !2543, !2544, !2545, !2546, !2547}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2539, file: !110, line: 30, baseType: !2542, size: 64)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2539, file: !110, line: 31, baseType: !303, size: 32, offset: 64)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2539, file: !110, line: 32, baseType: !303, size: 32, offset: 96)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2539, file: !110, line: 33, baseType: !303, size: 32, offset: 128)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2539, file: !110, line: 34, baseType: !558, size: 64, offset: 192)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2539, file: !110, line: 35, baseType: !2542, size: 64, offset: 256)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2536, file: !110, line: 46, baseType: !2549, size: 192)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2536, file: !110, line: 38, size: 192, elements: !2550)
!2550 = !{!2551, !2552, !2553, !2573}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2549, file: !110, line: 39, baseType: !2463, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2549, file: !110, line: 40, baseType: !109, size: 32, offset: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, scope: !2549, file: !110, line: 41, baseType: !2554, size: 64, offset: 64)
!2554 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2549, file: !110, line: 41, size: 64, elements: !2555)
!2555 = !{!2556, !2564}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2554, file: !110, line: 42, baseType: !2557, size: 64)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2559, line: 7, size: 128, elements: !2560)
!2559 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2560 = !{!2561, !2563}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2558, file: !2559, line: 8, baseType: !2562, size: 64)
!2562 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !450, line: 93, baseType: !669)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2558, file: !2559, line: 9, baseType: !669, size: 64, offset: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2554, file: !110, line: 43, baseType: !2565, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2567, line: 7, size: 64, elements: !2568)
!2567 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2568 = !{!2569, !2572}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2566, file: !2567, line: 8, baseType: !2570, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2567, line: 5, baseType: !2571)
!2571 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !304, line: 20, baseType: !1959)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2566, file: !2567, line: 9, baseType: !2571, size: 32, offset: 32)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2549, file: !110, line: 45, baseType: !558, size: 64, offset: 128)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2536, file: !110, line: 54, baseType: !2575, size: 256)
!2575 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2536, file: !110, line: 48, size: 256, elements: !2576)
!2576 = !{!2577, !2580, !2581, !2582, !2583}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2575, file: !110, line: 49, baseType: !2578, size: 64)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !110, line: 14, flags: DIFlagFwdDecl)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2575, file: !110, line: 50, baseType: !401, size: 32, offset: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2575, file: !110, line: 51, baseType: !401, size: 32, offset: 96)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2575, file: !110, line: 52, baseType: !465, size: 64, offset: 128)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2575, file: !110, line: 53, baseType: !465, size: 64, offset: 192)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2351, file: !2352, line: 835, baseType: !2585, size: 32, offset: 5120)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !362, line: 22, baseType: !2586)
!2586 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !450, line: 28, baseType: !401)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2351, file: !2352, line: 836, baseType: !2585, size: 32, offset: 5152)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2351, file: !2352, line: 840, baseType: !465, size: 64, offset: 5184)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2351, file: !2352, line: 849, baseType: !2350, size: 64, offset: 5248)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2351, file: !2352, line: 852, baseType: !2350, size: 64, offset: 5312)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2351, file: !2352, line: 857, baseType: !361, size: 128, offset: 5376)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2351, file: !2352, line: 858, baseType: !361, size: 128, offset: 5504)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2351, file: !2352, line: 859, baseType: !2350, size: 64, offset: 5632)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2351, file: !2352, line: 867, baseType: !361, size: 128, offset: 5696)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2351, file: !2352, line: 868, baseType: !361, size: 128, offset: 5824)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2351, file: !2352, line: 871, baseType: !2597, size: 64, offset: 5952)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !138, line: 59, size: 768, elements: !2599)
!2599 = !{!2600, !2601, !2602, !2603, !2605, !2606, !2607, !2608}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2598, file: !138, line: 61, baseType: !1560, size: 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2598, file: !138, line: 62, baseType: !7, size: 32, offset: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2598, file: !138, line: 63, baseType: !375, offset: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2598, file: !138, line: 65, baseType: !2604, size: 256, offset: 64)
!2604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !774, size: 256, elements: !331)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2598, file: !138, line: 66, baseType: !774, size: 64, offset: 320)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2598, file: !138, line: 68, baseType: !1370, size: 128, offset: 384)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2598, file: !138, line: 69, baseType: !506, size: 128, align: 64, offset: 512)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2598, file: !138, line: 70, baseType: !2609, size: 128, offset: 640)
!2609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2610, size: 128, elements: !2498)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !138, line: 54, size: 128, elements: !2611)
!2611 = !{!2612, !2613}
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2610, file: !138, line: 55, baseType: !401, size: 32)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2610, file: !138, line: 56, baseType: !2614, size: 64, offset: 64)
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 64)
!2615 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !138, line: 56, flags: DIFlagFwdDecl)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2351, file: !2352, line: 872, baseType: !2617, size: 512, offset: 6016)
!2617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !778, size: 512, elements: !331)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2351, file: !2352, line: 873, baseType: !361, size: 128, offset: 6528)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2351, file: !2352, line: 874, baseType: !361, size: 128, offset: 6656)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2351, file: !2352, line: 876, baseType: !2621, size: 64, offset: 6784)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 64)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2623, line: 26, size: 192, elements: !2624)
!2623 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2624 = !{!2625, !2626}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2622, file: !2623, line: 27, baseType: !7, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2622, file: !2623, line: 28, baseType: !2627, size: 128, offset: 64)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2628, line: 43, size: 128, elements: !2629)
!2628 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2629 = !{!2630, !2631}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2627, file: !2628, line: 44, baseType: !976)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2627, file: !2628, line: 45, baseType: !361, size: 128)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2351, file: !2352, line: 879, baseType: !858, size: 64, offset: 6848)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2351, file: !2352, line: 882, baseType: !858, size: 64, offset: 6912)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2351, file: !2352, line: 884, baseType: !558, size: 64, offset: 6976)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2351, file: !2352, line: 885, baseType: !558, size: 64, offset: 7040)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2351, file: !2352, line: 890, baseType: !558, size: 64, offset: 7104)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2351, file: !2352, line: 891, baseType: !2638, size: 128, offset: 7168)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2352, line: 242, size: 128, elements: !2639)
!2639 = !{!2640, !2641, !2642}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2638, file: !2352, line: 244, baseType: !558, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2638, file: !2352, line: 245, baseType: !558, size: 64, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2638, file: !2352, line: 246, baseType: !976, offset: 128)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2351, file: !2352, line: 900, baseType: !465, size: 64, offset: 7296)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2351, file: !2352, line: 901, baseType: !465, size: 64, offset: 7360)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2351, file: !2352, line: 904, baseType: !558, size: 64, offset: 7424)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2351, file: !2352, line: 907, baseType: !558, size: 64, offset: 7488)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2351, file: !2352, line: 910, baseType: !465, size: 64, offset: 7552)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2351, file: !2352, line: 911, baseType: !465, size: 64, offset: 7616)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2351, file: !2352, line: 914, baseType: !2650, size: 640, offset: 7680)
!2650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2651, line: 123, size: 640, elements: !2652)
!2651 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2652 = !{!2653, !2659, !2660}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2650, file: !2651, line: 124, baseType: !2654, size: 576)
!2654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2655, size: 576, elements: !418)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2651, line: 108, size: 192, elements: !2656)
!2656 = !{!2657, !2658}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2655, file: !2651, line: 109, baseType: !558, size: 64)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2655, file: !2651, line: 110, baseType: !2472, size: 128, offset: 64)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2650, file: !2651, line: 125, baseType: !7, size: 32, offset: 576)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2650, file: !2651, line: 126, baseType: !7, size: 32, offset: 608)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2351, file: !2352, line: 917, baseType: !2662, size: 192, offset: 8320)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2651, line: 134, size: 192, elements: !2663)
!2663 = !{!2664, !2665}
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2662, file: !2651, line: 135, baseType: !506, size: 128, align: 64)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2662, file: !2651, line: 136, baseType: !7, size: 32, offset: 128)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2351, file: !2352, line: 923, baseType: !2667, size: 64, offset: 8512)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 64)
!2668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2669)
!2669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2670, line: 111, size: 1280, elements: !2671)
!2670 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2671 = !{!2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2689, !2690, !2691, !2692, !2693, !2694, !2801, !2802, !2803, !2804, !2830, !2973, !2983}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2669, file: !2670, line: 112, baseType: !950, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2669, file: !2670, line: 120, baseType: !571, size: 32, offset: 32)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2669, file: !2670, line: 121, baseType: !579, size: 32, offset: 64)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2669, file: !2670, line: 122, baseType: !571, size: 32, offset: 96)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2669, file: !2670, line: 123, baseType: !579, size: 32, offset: 128)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2669, file: !2670, line: 124, baseType: !571, size: 32, offset: 160)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2669, file: !2670, line: 125, baseType: !579, size: 32, offset: 192)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2669, file: !2670, line: 126, baseType: !571, size: 32, offset: 224)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2669, file: !2670, line: 127, baseType: !579, size: 32, offset: 256)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2669, file: !2670, line: 128, baseType: !7, size: 32, offset: 288)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2669, file: !2670, line: 129, baseType: !2683, size: 64, offset: 320)
!2683 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2684, line: 26, baseType: !2685)
!2684 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2684, line: 24, size: 64, elements: !2686)
!2686 = !{!2687}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2685, file: !2684, line: 25, baseType: !2688, size: 64)
!2688 = !DICompositeType(tag: DW_TAG_array_type, baseType: !305, size: 64, elements: !1537)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2669, file: !2670, line: 130, baseType: !2683, size: 64, offset: 384)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2669, file: !2670, line: 131, baseType: !2683, size: 64, offset: 448)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2669, file: !2670, line: 132, baseType: !2683, size: 64, offset: 512)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2669, file: !2670, line: 133, baseType: !2683, size: 64, offset: 576)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2669, file: !2670, line: 135, baseType: !313, size: 8, offset: 640)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2669, file: !2670, line: 137, baseType: !2695, size: 64, offset: 704)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2697, line: 189, size: 1664, elements: !2698)
!2697 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2698 = !{!2699, !2700, !2703, !2708, !2709, !2712, !2713, !2718, !2719, !2720, !2721, !2723, !2724, !2725, !2726, !2727, !2765, !2786}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2696, file: !2697, line: 190, baseType: !1560, size: 32)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2696, file: !2697, line: 191, baseType: !2701, size: 32, offset: 32)
!2701 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2697, line: 28, baseType: !2702)
!2702 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !362, line: 98, baseType: !2571)
!2703 = !DIDerivedType(tag: DW_TAG_member, scope: !2696, file: !2697, line: 192, baseType: !2704, size: 192, offset: 64)
!2704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2696, file: !2697, line: 192, size: 192, elements: !2705)
!2705 = !{!2706, !2707}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2704, file: !2697, line: 193, baseType: !361, size: 128)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2704, file: !2697, line: 194, baseType: !963, size: 192, align: 64)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2696, file: !2697, line: 199, baseType: !970, size: 256, offset: 256)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2696, file: !2697, line: 200, baseType: !2710, size: 64, offset: 512)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!2711 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2697, line: 200, flags: DIFlagFwdDecl)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2696, file: !2697, line: 201, baseType: !341, size: 64, offset: 576)
!2713 = !DIDerivedType(tag: DW_TAG_member, scope: !2696, file: !2697, line: 202, baseType: !2714, size: 64, offset: 640)
!2714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2696, file: !2697, line: 202, size: 64, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2714, file: !2697, line: 203, baseType: !675, size: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2714, file: !2697, line: 204, baseType: !675, size: 64)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2696, file: !2697, line: 206, baseType: !675, size: 64, offset: 704)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2696, file: !2697, line: 207, baseType: !571, size: 32, offset: 768)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2696, file: !2697, line: 208, baseType: !579, size: 32, offset: 800)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2696, file: !2697, line: 209, baseType: !2722, size: 32, offset: 832)
!2722 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2697, line: 31, baseType: !695)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2696, file: !2697, line: 210, baseType: !320, size: 16, offset: 864)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2696, file: !2697, line: 211, baseType: !320, size: 16, offset: 880)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2696, file: !2697, line: 215, baseType: !1125, size: 16, offset: 896)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2696, file: !2697, line: 222, baseType: !465, size: 64, offset: 960)
!2727 = !DIDerivedType(tag: DW_TAG_member, scope: !2696, file: !2697, line: 239, baseType: !2728, size: 320, offset: 1024)
!2728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2696, file: !2697, line: 239, size: 320, elements: !2729)
!2729 = !{!2730, !2757}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2728, file: !2697, line: 240, baseType: !2731, size: 320)
!2731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2697, line: 108, size: 320, elements: !2732)
!2732 = !{!2733, !2734, !2746, !2749, !2756}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2731, file: !2697, line: 110, baseType: !465, size: 64)
!2734 = !DIDerivedType(tag: DW_TAG_member, scope: !2731, file: !2697, line: 111, baseType: !2735, size: 64, offset: 64)
!2735 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2731, file: !2697, line: 111, size: 64, elements: !2736)
!2736 = !{!2737, !2745}
!2737 = !DIDerivedType(tag: DW_TAG_member, scope: !2735, file: !2697, line: 112, baseType: !2738, size: 64)
!2738 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2735, file: !2697, line: 112, size: 64, elements: !2739)
!2739 = !{!2740, !2741}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2738, file: !2697, line: 114, baseType: !1062, size: 16)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2738, file: !2697, line: 115, baseType: !2742, size: 48, offset: 16)
!2742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !359, size: 48, elements: !2743)
!2743 = !{!2744}
!2744 = !DISubrange(count: 6)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2735, file: !2697, line: 121, baseType: !465, size: 64)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2731, file: !2697, line: 123, baseType: !2747, size: 64, offset: 128)
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2748, size: 64)
!2748 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2697, line: 96, flags: DIFlagFwdDecl)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2731, file: !2697, line: 124, baseType: !2750, size: 64, offset: 192)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 64)
!2751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2697, line: 102, size: 192, elements: !2752)
!2752 = !{!2753, !2754, !2755}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2751, file: !2697, line: 103, baseType: !506, size: 128, align: 64)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2751, file: !2697, line: 104, baseType: !1560, size: 32, offset: 128)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2751, file: !2697, line: 105, baseType: !626, size: 8, offset: 160)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2731, file: !2697, line: 125, baseType: !357, size: 64, offset: 256)
!2757 = !DIDerivedType(tag: DW_TAG_member, scope: !2728, file: !2697, line: 241, baseType: !2758, size: 320)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2728, file: !2697, line: 241, size: 320, elements: !2759)
!2759 = !{!2760, !2761, !2762, !2763, !2764}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2758, file: !2697, line: 242, baseType: !465, size: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2758, file: !2697, line: 243, baseType: !465, size: 64, offset: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2758, file: !2697, line: 244, baseType: !2747, size: 64, offset: 128)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2758, file: !2697, line: 245, baseType: !2750, size: 64, offset: 192)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2758, file: !2697, line: 246, baseType: !417, size: 64, offset: 256)
!2765 = !DIDerivedType(tag: DW_TAG_member, scope: !2696, file: !2697, line: 254, baseType: !2766, size: 256, offset: 1344)
!2766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2696, file: !2697, line: 254, size: 256, elements: !2767)
!2767 = !{!2768, !2774}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2766, file: !2697, line: 255, baseType: !2769, size: 256)
!2769 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2697, line: 128, size: 256, elements: !2770)
!2770 = !{!2771, !2772}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2769, file: !2697, line: 129, baseType: !341, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2769, file: !2697, line: 130, baseType: !2773, size: 256)
!2773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 256, elements: !331)
!2774 = !DIDerivedType(tag: DW_TAG_member, scope: !2766, file: !2697, line: 256, baseType: !2775, size: 256)
!2775 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2766, file: !2697, line: 256, size: 256, elements: !2776)
!2776 = !{!2777, !2778}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2775, file: !2697, line: 258, baseType: !361, size: 128)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2775, file: !2697, line: 259, baseType: !2779, size: 128, offset: 128)
!2779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2780, line: 22, size: 128, elements: !2781)
!2780 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2781 = !{!2782, !2785}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2779, file: !2780, line: 23, baseType: !2783, size: 64)
!2783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2784, size: 64)
!2784 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2780, line: 23, flags: DIFlagFwdDecl)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2779, file: !2780, line: 24, baseType: !465, size: 64, offset: 64)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2696, file: !2697, line: 274, baseType: !2787, size: 64, offset: 1600)
!2787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2788, size: 64)
!2788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2697, line: 170, size: 192, elements: !2789)
!2789 = !{!2790, !2799, !2800}
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2788, file: !2697, line: 171, baseType: !2791, size: 64)
!2791 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2697, line: 165, baseType: !2792)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{!401, !2695, !2795, !2797, !2695}
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 64)
!2796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2748)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2769)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2788, file: !2697, line: 172, baseType: !2695, size: 64, offset: 64)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2788, file: !2697, line: 173, baseType: !2747, size: 64, offset: 128)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2669, file: !2670, line: 138, baseType: !2695, size: 64, offset: 768)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2669, file: !2670, line: 139, baseType: !2695, size: 64, offset: 832)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2669, file: !2670, line: 140, baseType: !2695, size: 64, offset: 896)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2669, file: !2670, line: 145, baseType: !2805, size: 64, offset: 960)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2807, line: 13, size: 896, elements: !2808)
!2807 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2808 = !{!2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2806, file: !2807, line: 14, baseType: !1560, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2806, file: !2807, line: 15, baseType: !950, size: 32, offset: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2806, file: !2807, line: 16, baseType: !950, size: 32, offset: 64)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2806, file: !2807, line: 21, baseType: !880, size: 64, offset: 128)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2806, file: !2807, line: 27, baseType: !465, size: 64, offset: 192)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2806, file: !2807, line: 28, baseType: !465, size: 64, offset: 256)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2806, file: !2807, line: 29, baseType: !880, size: 64, offset: 320)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2806, file: !2807, line: 32, baseType: !778, size: 128, offset: 384)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2806, file: !2807, line: 33, baseType: !571, size: 32, offset: 512)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2806, file: !2807, line: 37, baseType: !880, size: 64, offset: 576)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2806, file: !2807, line: 44, baseType: !2820, size: 256, offset: 640)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2821, line: 15, size: 256, elements: !2822)
!2821 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2822 = !{!2823, !2824, !2825, !2826, !2827, !2828, !2829}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2820, file: !2821, line: 16, baseType: !976)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2820, file: !2821, line: 18, baseType: !401, size: 32)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2820, file: !2821, line: 19, baseType: !401, size: 32, offset: 32)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2820, file: !2821, line: 20, baseType: !401, size: 32, offset: 64)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2820, file: !2821, line: 21, baseType: !401, size: 32, offset: 96)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2820, file: !2821, line: 22, baseType: !465, size: 64, offset: 128)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2820, file: !2821, line: 23, baseType: !465, size: 64, offset: 192)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2669, file: !2670, line: 146, baseType: !2831, size: 64, offset: 1024)
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2832, size: 64)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !2833, line: 56, size: 4160, elements: !2834)
!2833 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2834 = !{!2835, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2872, !2873, !2874, !2875, !2876, !2877, !2958, !2959, !2971}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !2832, file: !2833, line: 57, baseType: !2836, size: 576)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !2833, line: 23, size: 576, elements: !2837)
!2837 = !{!2838, !2839}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !2836, file: !2833, line: 24, baseType: !303, size: 32)
!2839 = !DIDerivedType(tag: DW_TAG_member, scope: !2836, file: !2833, line: 25, baseType: !2840, size: 512, offset: 64)
!2840 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2836, file: !2833, line: 25, size: 512, elements: !2841)
!2841 = !{!2842, !2849}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !2840, file: !2833, line: 26, baseType: !2843, size: 480)
!2843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2844, size: 480, elements: !2014)
!2844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !2833, line: 17, size: 96, elements: !2845)
!2845 = !{!2846, !2847, !2848}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2844, file: !2833, line: 18, baseType: !303, size: 32)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !2844, file: !2833, line: 19, baseType: !303, size: 32, offset: 32)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2844, file: !2833, line: 20, baseType: !303, size: 32, offset: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, scope: !2840, file: !2833, line: 27, baseType: !2850, size: 128)
!2850 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2840, file: !2833, line: 27, size: 128, elements: !2851)
!2851 = !{!2852, !2854}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !2850, file: !2833, line: 28, baseType: !2853, size: 64)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2844, size: 64)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !2850, file: !2833, line: 29, baseType: !2853, size: 64, offset: 64)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !2832, file: !2833, line: 58, baseType: !2836, size: 576, offset: 576)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !2832, file: !2833, line: 59, baseType: !2836, size: 576, offset: 1152)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2832, file: !2833, line: 60, baseType: !950, size: 32, offset: 1728)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2832, file: !2833, line: 61, baseType: !2831, size: 64, offset: 1792)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2832, file: !2833, line: 62, baseType: !401, size: 32, offset: 1856)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2832, file: !2833, line: 63, baseType: !571, size: 32, offset: 1888)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2832, file: !2833, line: 64, baseType: !579, size: 32, offset: 1920)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2832, file: !2833, line: 65, baseType: !2863, size: 192, offset: 1984)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2864, line: 7, size: 192, elements: !2865)
!2864 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2865 = !{!2866, !2867, !2871}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2863, file: !2864, line: 8, baseType: !880, size: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2863, file: !2864, line: 9, baseType: !2868, size: 64, offset: 64)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 64)
!2869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2870)
!2870 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2864, line: 5, flags: DIFlagFwdDecl)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2863, file: !2864, line: 10, baseType: !7, size: 32, offset: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2832, file: !2833, line: 66, baseType: !465, size: 64, offset: 2176)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !2832, file: !2833, line: 74, baseType: !361, size: 128, offset: 2240)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !2832, file: !2833, line: 75, baseType: !2695, size: 64, offset: 2368)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !2832, file: !2833, line: 76, baseType: !970, size: 256, offset: 2432)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2832, file: !2833, line: 83, baseType: !1234, size: 256, offset: 2688)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2832, file: !2833, line: 85, baseType: !2878, size: 768, offset: 2944)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !2879, line: 156, size: 768, elements: !2880)
!2879 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2880 = !{!2881, !2886}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !2878, file: !2879, line: 157, baseType: !2882, size: 64)
!2882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2883, size: 64)
!2883 = !DISubroutineType(types: !2884)
!2884 = !{!401, !2885}
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2878, file: !2879, line: 158, baseType: !2887, size: 704, offset: 64)
!2887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !2879, line: 150, size: 704, elements: !2888)
!2888 = !{!2889, !2957}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2887, file: !2879, line: 152, baseType: !2890, size: 640)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !2879, line: 131, size: 640, elements: !2891)
!2891 = !{!2892, !2925, !2926, !2927, !2947, !2948, !2950, !2956}
!2892 = !DIDerivedType(tag: DW_TAG_member, scope: !2890, file: !2879, line: 132, baseType: !2893, size: 192)
!2893 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2890, file: !2879, line: 132, size: 192, elements: !2894)
!2894 = !{!2895, !2924}
!2895 = !DIDerivedType(tag: DW_TAG_member, scope: !2893, file: !2879, line: 133, baseType: !2896, size: 192)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2893, file: !2879, line: 133, size: 192, elements: !2897)
!2897 = !{!2898, !2921, !2922, !2923}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !2896, file: !2879, line: 134, baseType: !2899, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 64)
!2900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !2879, line: 112, size: 512, elements: !2901)
!2901 = !{!2902, !2903, !2904, !2905, !2906, !2907, !2913, !2919, !2920}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !2900, file: !2879, line: 113, baseType: !357, size: 64)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2900, file: !2879, line: 114, baseType: !341, size: 64, offset: 64)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !2900, file: !2879, line: 115, baseType: !401, size: 32, offset: 128)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2900, file: !2879, line: 116, baseType: !457, size: 16, offset: 160)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2900, file: !2879, line: 117, baseType: !2899, size: 64, offset: 192)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !2900, file: !2879, line: 118, baseType: !2908, size: 64, offset: 256)
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64)
!2909 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !2879, line: 47, baseType: !2910)
!2910 = !DISubroutineType(types: !2911)
!2911 = !{!401, !2899, !401, !341, !2912, !898}
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2900, file: !2879, line: 119, baseType: !2914, size: 64, offset: 320)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !2879, line: 94, size: 192, elements: !2916)
!2916 = !{!2917, !2918}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !2915, file: !2879, line: 95, baseType: !950, size: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2915, file: !2879, line: 96, baseType: !1370, size: 128, offset: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !2900, file: !2879, line: 120, baseType: !341, size: 64, offset: 384)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !2900, file: !2879, line: 121, baseType: !341, size: 64, offset: 448)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2896, file: !2879, line: 135, baseType: !401, size: 32, offset: 64)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2896, file: !2879, line: 136, baseType: !401, size: 32, offset: 96)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !2896, file: !2879, line: 137, baseType: !401, size: 32, offset: 128)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2893, file: !2879, line: 139, baseType: !506, size: 128, align: 64)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !2890, file: !2879, line: 141, baseType: !2621, size: 64, offset: 192)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !2890, file: !2879, line: 142, baseType: !2899, size: 64, offset: 256)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2890, file: !2879, line: 143, baseType: !2928, size: 64, offset: 320)
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 64)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !2879, line: 161, size: 960, elements: !2930)
!2930 = !{!2931, !2932, !2936, !2943}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !2929, file: !2879, line: 162, baseType: !2878, size: 768)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !2929, file: !2879, line: 163, baseType: !2933, size: 64, offset: 768)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2934 = !DISubroutineType(types: !2935)
!2935 = !{!2885, !2928}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !2929, file: !2879, line: 164, baseType: !2937, size: 64, offset: 832)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = !DISubroutineType(types: !2939)
!2939 = !{null, !2940, !2899, !2941, !2942}
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2890, size: 64)
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !2929, file: !2879, line: 167, baseType: !2944, size: 64, offset: 896)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DISubroutineType(types: !2946)
!2946 = !{!401, !2940, !2899}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2890, file: !2879, line: 144, baseType: !2885, size: 64, offset: 384)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2890, file: !2879, line: 145, baseType: !2949, size: 64, offset: 448)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2890, file: !2879, line: 146, baseType: !2951, size: 64, offset: 512)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 64)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !2879, line: 124, size: 256, elements: !2953)
!2953 = !{!2954, !2955}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2952, file: !2879, line: 125, baseType: !963, size: 192, align: 64)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2952, file: !2879, line: 126, baseType: !2940, size: 64, offset: 192)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2890, file: !2879, line: 147, baseType: !774, size: 64, offset: 576)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2887, file: !2879, line: 153, baseType: !959, size: 64, offset: 640)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2832, file: !2833, line: 86, baseType: !2940, size: 64, offset: 3712)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2832, file: !2833, line: 88, baseType: !2960, size: 64, offset: 3776)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2833, line: 92, size: 576, elements: !2962)
!2962 = !{!2963, !2964, !2965, !2966, !2967}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2961, file: !2833, line: 93, baseType: !778, size: 128)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2961, file: !2833, line: 94, baseType: !2831, size: 64, offset: 128)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2961, file: !2833, line: 95, baseType: !571, size: 32, offset: 192)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2961, file: !2833, line: 96, baseType: !401, size: 32, offset: 224)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !2961, file: !2833, line: 97, baseType: !2968, size: 320, offset: 256)
!2968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !950, size: 320, elements: !2969)
!2969 = !{!2970}
!2970 = !DISubrange(count: 10)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !2832, file: !2833, line: 89, baseType: !2972, size: 320, offset: 3840)
!2972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !401, size: 320, elements: !2969)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2669, file: !2670, line: 147, baseType: !2974, size: 64, offset: 1088)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2670, line: 25, size: 64, elements: !2976)
!2976 = !{!2977, !2978, !2979}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2975, file: !2670, line: 26, baseType: !950, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2975, file: !2670, line: 27, baseType: !401, size: 32, offset: 32)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2975, file: !2670, line: 28, baseType: !2980, offset: 64)
!2980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !579, elements: !2981)
!2981 = !{!2982}
!2982 = !DISubrange(count: 0)
!2983 = !DIDerivedType(tag: DW_TAG_member, scope: !2669, file: !2670, line: 149, baseType: !2984, size: 128, offset: 1152)
!2984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2669, file: !2670, line: 149, size: 128, elements: !2985)
!2985 = !{!2986, !2987}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2984, file: !2670, line: 150, baseType: !401, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2984, file: !2670, line: 151, baseType: !506, size: 128, align: 64)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2351, file: !2352, line: 926, baseType: !2667, size: 64, offset: 8576)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2351, file: !2352, line: 929, baseType: !2667, size: 64, offset: 8640)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2351, file: !2352, line: 933, baseType: !2695, size: 64, offset: 8704)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2351, file: !2352, line: 943, baseType: !2992, size: 128, offset: 8768)
!2992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !359, size: 128, elements: !1886)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2351, file: !2352, line: 945, baseType: !2994, size: 64, offset: 8896)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 64)
!2995 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2352, line: 49, flags: DIFlagFwdDecl)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2351, file: !2352, line: 956, baseType: !2997, size: 64, offset: 8960)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!2998 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2352, line: 45, flags: DIFlagFwdDecl)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2351, file: !2352, line: 959, baseType: !3000, size: 64, offset: 9024)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2352, line: 959, flags: DIFlagFwdDecl)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2351, file: !2352, line: 962, baseType: !3003, size: 64, offset: 9088)
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 64)
!3004 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2352, line: 66, flags: DIFlagFwdDecl)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2351, file: !2352, line: 966, baseType: !3006, size: 64, offset: 9152)
!3006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3007, size: 64)
!3007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !3008, line: 31, size: 576, elements: !3009)
!3008 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!3009 = !{!3010, !3011, !3014, !3017, !3020, !3021, !3024, !3027, !3028}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3007, file: !3008, line: 32, baseType: !950, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !3007, file: !3008, line: 33, baseType: !3012, size: 64, offset: 64)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 64)
!3013 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !3008, line: 9, flags: DIFlagFwdDecl)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !3007, file: !3008, line: 34, baseType: !3015, size: 64, offset: 128)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !3008, line: 10, flags: DIFlagFwdDecl)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !3007, file: !3008, line: 35, baseType: !3018, size: 64, offset: 192)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3019, size: 64)
!3019 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !3008, line: 8, flags: DIFlagFwdDecl)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !3007, file: !3008, line: 36, baseType: !2614, size: 64, offset: 256)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !3007, file: !3008, line: 37, baseType: !3022, size: 64, offset: 320)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 64)
!3023 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2697, line: 34, flags: DIFlagFwdDecl)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !3007, file: !3008, line: 38, baseType: !3025, size: 64, offset: 384)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3026 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !3008, line: 38, flags: DIFlagFwdDecl)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !3007, file: !3008, line: 39, baseType: !3025, size: 64, offset: 448)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !3007, file: !3008, line: 40, baseType: !3029, size: 64, offset: 512)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 64)
!3030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3031, line: 856, size: 448, elements: !3032)
!3031 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3032 = !{!3033, !3034, !3035, !3036, !3037}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3030, file: !3031, line: 857, baseType: !1560, size: 32)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3030, file: !3031, line: 858, baseType: !2863, size: 192, offset: 64)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3030, file: !3031, line: 859, baseType: !2831, size: 64, offset: 256)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3030, file: !3031, line: 860, baseType: !2960, size: 64, offset: 320)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3030, file: !3031, line: 861, baseType: !3038, size: 64, offset: 384)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3040, line: 16, flags: DIFlagFwdDecl)
!3040 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2351, file: !2352, line: 969, baseType: !3042, size: 64, offset: 9216)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 64)
!3043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3044, line: 82, size: 7296, elements: !3045)
!3044 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3045 = !{!3046, !3047, !3048, !3049, !3050, !3051, !3052, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3081, !3090, !3091, !3093, !3094, !3095, !3098, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3128, !3129, !3136, !3137, !3138, !3139, !3140, !3141}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3043, file: !3044, line: 83, baseType: !1560, size: 32)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3043, file: !3044, line: 84, baseType: !950, size: 32, offset: 32)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3043, file: !3044, line: 85, baseType: !401, size: 32, offset: 64)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3043, file: !3044, line: 86, baseType: !361, size: 128, offset: 128)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3043, file: !3044, line: 88, baseType: !1370, size: 128, offset: 256)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3043, file: !3044, line: 91, baseType: !2350, size: 64, offset: 384)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3043, file: !3044, line: 94, baseType: !3053, size: 192, offset: 448)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3054, line: 30, size: 192, elements: !3055)
!3054 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3055 = !{!3056, !3057}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3053, file: !3054, line: 31, baseType: !361, size: 128)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3053, file: !3054, line: 32, baseType: !3058, size: 64, offset: 128)
!3058 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3059, line: 25, baseType: !3060)
!3059 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3059, line: 23, size: 64, elements: !3061)
!3061 = !{!3062}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3060, file: !3059, line: 24, baseType: !2497, size: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3043, file: !3044, line: 97, baseType: !774, size: 64, offset: 640)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3043, file: !3044, line: 100, baseType: !401, size: 32, offset: 704)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3043, file: !3044, line: 106, baseType: !401, size: 32, offset: 736)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3043, file: !3044, line: 107, baseType: !2350, size: 64, offset: 768)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3043, file: !3044, line: 110, baseType: !401, size: 32, offset: 832)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3043, file: !3044, line: 111, baseType: !7, size: 32, offset: 864)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3043, file: !3044, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3043, file: !3044, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3043, file: !3044, line: 128, baseType: !401, size: 32, offset: 928)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3043, file: !3044, line: 129, baseType: !361, size: 128, offset: 960)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3043, file: !3044, line: 132, baseType: !2421, size: 512, offset: 1088)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3043, file: !3044, line: 133, baseType: !2429, size: 64, offset: 1600)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3043, file: !3044, line: 140, baseType: !3076, size: 256, offset: 1664)
!3076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3077, size: 256, elements: !1537)
!3077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3044, line: 38, size: 128, elements: !3078)
!3078 = !{!3079, !3080}
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3077, file: !3044, line: 39, baseType: !558, size: 64)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3077, file: !3044, line: 40, baseType: !558, size: 64, offset: 64)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3043, file: !3044, line: 146, baseType: !3082, size: 192, offset: 1920)
!3082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3044, line: 66, size: 192, elements: !3083)
!3083 = !{!3084}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3082, file: !3044, line: 67, baseType: !3085, size: 192)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3044, line: 47, size: 192, elements: !3086)
!3086 = !{!3087, !3088, !3089}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3085, file: !3044, line: 48, baseType: !882, size: 64)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3085, file: !3044, line: 49, baseType: !882, size: 64, offset: 64)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3085, file: !3044, line: 50, baseType: !882, size: 64, offset: 128)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3043, file: !3044, line: 150, baseType: !2650, size: 640, offset: 2112)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3043, file: !3044, line: 153, baseType: !3092, size: 256, offset: 2752)
!3092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2597, size: 256, elements: !331)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3043, file: !3044, line: 159, baseType: !2597, size: 64, offset: 3008)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3043, file: !3044, line: 162, baseType: !401, size: 32, offset: 3072)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3043, file: !3044, line: 164, baseType: !3096, size: 64, offset: 3136)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3044, line: 164, flags: DIFlagFwdDecl)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3043, file: !3044, line: 175, baseType: !3099, size: 32, offset: 3200)
!3099 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !529, line: 805, baseType: !3100)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !529, line: 798, size: 32, elements: !3101)
!3101 = !{!3102, !3103}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !3100, file: !529, line: 803, baseType: !528, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3100, file: !529, line: 804, baseType: !375, offset: 32)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3043, file: !3044, line: 176, baseType: !558, size: 64, offset: 3264)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3043, file: !3044, line: 176, baseType: !558, size: 64, offset: 3328)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3043, file: !3044, line: 176, baseType: !558, size: 64, offset: 3392)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3043, file: !3044, line: 176, baseType: !558, size: 64, offset: 3456)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3043, file: !3044, line: 177, baseType: !558, size: 64, offset: 3520)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3043, file: !3044, line: 178, baseType: !558, size: 64, offset: 3584)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3043, file: !3044, line: 179, baseType: !2638, size: 128, offset: 3648)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3043, file: !3044, line: 180, baseType: !465, size: 64, offset: 3776)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3043, file: !3044, line: 180, baseType: !465, size: 64, offset: 3840)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3043, file: !3044, line: 180, baseType: !465, size: 64, offset: 3904)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3043, file: !3044, line: 180, baseType: !465, size: 64, offset: 3968)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3043, file: !3044, line: 181, baseType: !465, size: 64, offset: 4032)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3043, file: !3044, line: 181, baseType: !465, size: 64, offset: 4096)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3043, file: !3044, line: 181, baseType: !465, size: 64, offset: 4160)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3043, file: !3044, line: 181, baseType: !465, size: 64, offset: 4224)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3043, file: !3044, line: 182, baseType: !465, size: 64, offset: 4288)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3043, file: !3044, line: 182, baseType: !465, size: 64, offset: 4352)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3043, file: !3044, line: 182, baseType: !465, size: 64, offset: 4416)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3043, file: !3044, line: 182, baseType: !465, size: 64, offset: 4480)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3043, file: !3044, line: 183, baseType: !465, size: 64, offset: 4544)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3043, file: !3044, line: 183, baseType: !465, size: 64, offset: 4608)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3043, file: !3044, line: 184, baseType: !3126, offset: 4672)
!3126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3127, line: 12, elements: !389)
!3127 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3043, file: !3044, line: 192, baseType: !560, size: 64, offset: 4672)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3043, file: !3044, line: 203, baseType: !3130, size: 2048, offset: 4736)
!3130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3131, size: 2048, elements: !1886)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3132, line: 43, size: 128, elements: !3133)
!3132 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3133 = !{!3134, !3135}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3131, file: !3132, line: 44, baseType: !464, size: 64)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3131, file: !3132, line: 45, baseType: !464, size: 64, offset: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3043, file: !3044, line: 220, baseType: !626, size: 8, offset: 6784)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3043, file: !3044, line: 221, baseType: !1125, size: 16, offset: 6800)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3043, file: !3044, line: 222, baseType: !1125, size: 16, offset: 6816)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3043, file: !3044, line: 224, baseType: !2117, size: 64, offset: 6848)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3043, file: !3044, line: 227, baseType: !876, size: 192, offset: 6912)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3043, file: !3044, line: 233, baseType: !876, size: 192, offset: 7104)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2351, file: !2352, line: 970, baseType: !3143, size: 64, offset: 9280)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3044, line: 20, size: 16576, elements: !3145)
!3145 = !{!3146, !3147, !3148, !3149}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3144, file: !3044, line: 21, baseType: !375)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3144, file: !3044, line: 22, baseType: !1560, size: 32)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3144, file: !3044, line: 23, baseType: !1370, size: 128, offset: 64)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3144, file: !3044, line: 24, baseType: !3150, size: 16384, offset: 192)
!3150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3151, size: 16384, elements: !422)
!3151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3054, line: 49, size: 256, elements: !3152)
!3152 = !{!3153}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3151, file: !3054, line: 50, baseType: !3154, size: 256)
!3154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3054, line: 35, size: 256, elements: !3155)
!3155 = !{!3156, !3163, !3164, !3170}
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3154, file: !3054, line: 37, baseType: !3157, size: 64)
!3157 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3158, line: 19, baseType: !3159)
!3158 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3158, line: 18, baseType: !3161)
!3161 = !DISubroutineType(types: !3162)
!3162 = !{null, !401}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3154, file: !3054, line: 38, baseType: !465, size: 64, offset: 64)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3154, file: !3054, line: 44, baseType: !3165, size: 64, offset: 128)
!3165 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3158, line: 22, baseType: !3166)
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3158, line: 21, baseType: !3168)
!3168 = !DISubroutineType(types: !3169)
!3169 = !{null}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3154, file: !3054, line: 46, baseType: !3058, size: 64, offset: 192)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2351, file: !2352, line: 971, baseType: !3058, size: 64, offset: 9344)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2351, file: !2352, line: 972, baseType: !3058, size: 64, offset: 9408)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2351, file: !2352, line: 974, baseType: !3058, size: 64, offset: 9472)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2351, file: !2352, line: 975, baseType: !3053, size: 192, offset: 9536)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2351, file: !2352, line: 976, baseType: !465, size: 64, offset: 9728)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2351, file: !2352, line: 977, baseType: !462, size: 64, offset: 9792)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2351, file: !2352, line: 978, baseType: !7, size: 32, offset: 9856)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2351, file: !2352, line: 980, baseType: !509, size: 64, offset: 9920)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2351, file: !2352, line: 989, baseType: !3180, size: 128, offset: 9984)
!3180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3181, line: 35, size: 128, elements: !3182)
!3181 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3182 = !{!3183, !3184, !3185}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3180, file: !3181, line: 36, baseType: !401, size: 32)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3180, file: !3181, line: 37, baseType: !950, size: 32, offset: 32)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3180, file: !3181, line: 38, baseType: !3186, size: 64, offset: 64)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3181, line: 23, flags: DIFlagFwdDecl)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2351, file: !2352, line: 992, baseType: !558, size: 64, offset: 10112)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2351, file: !2352, line: 993, baseType: !558, size: 64, offset: 10176)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2351, file: !2352, line: 996, baseType: !375, offset: 10240)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2351, file: !2352, line: 999, baseType: !976, offset: 10240)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2351, file: !2352, line: 1001, baseType: !3193, size: 64, offset: 10240)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2352, line: 636, size: 64, elements: !3194)
!3194 = !{!3195}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3193, file: !2352, line: 637, baseType: !3196, size: 64)
!3196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2351, file: !2352, line: 1005, baseType: !955, size: 128, offset: 10304)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2351, file: !2352, line: 1007, baseType: !2350, size: 64, offset: 10432)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2351, file: !2352, line: 1009, baseType: !3200, size: 64, offset: 10496)
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3201 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2352, line: 1009, flags: DIFlagFwdDecl)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2351, file: !2352, line: 1043, baseType: !341, size: 64, offset: 10560)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2351, file: !2352, line: 1046, baseType: !3204, size: 64, offset: 10624)
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 64)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2351, file: !2352, line: 1050, baseType: !3206, size: 64, offset: 10688)
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 64)
!3207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !67, line: 1236, size: 320, elements: !3208)
!3208 = !{!3209, !3210, !3211, !3212, !3213}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !3207, file: !67, line: 1237, baseType: !361, size: 128)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !3207, file: !67, line: 1238, baseType: !361, size: 128, offset: 128)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !3207, file: !67, line: 1239, baseType: !320, size: 16, offset: 256)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !3207, file: !67, line: 1240, baseType: !626, size: 8, offset: 272)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !3207, file: !67, line: 1241, baseType: !626, size: 8, offset: 280)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2351, file: !2352, line: 1054, baseType: !3215, size: 64, offset: 10752)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1121, line: 131, size: 64, elements: !3217)
!3217 = !{!3218}
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "reclaimed_slab", scope: !3216, file: !1121, line: 132, baseType: !465, size: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2351, file: !2352, line: 1056, baseType: !1741, size: 64, offset: 10816)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2351, file: !2352, line: 1058, baseType: !1512, size: 64, offset: 10880)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2351, file: !2352, line: 1061, baseType: !3222, size: 64, offset: 10944)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 64)
!3223 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2352, line: 43, flags: DIFlagFwdDecl)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2351, file: !2352, line: 1064, baseType: !465, size: 64, offset: 11008)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2351, file: !2352, line: 1065, baseType: !3226, size: 64, offset: 11072)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3054, line: 14, baseType: !3228)
!3228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3054, line: 12, size: 384, elements: !3229)
!3229 = !{!3230}
!3230 = !DIDerivedType(tag: DW_TAG_member, scope: !3228, file: !3054, line: 13, baseType: !3231, size: 384)
!3231 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3228, file: !3054, line: 13, size: 384, elements: !3232)
!3232 = !{!3233, !3234, !3235, !3236}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3231, file: !3054, line: 13, baseType: !401, size: 32)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3231, file: !3054, line: 13, baseType: !401, size: 32, offset: 32)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3231, file: !3054, line: 13, baseType: !401, size: 32, offset: 64)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3231, file: !3054, line: 13, baseType: !3237, size: 256, offset: 128)
!3237 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3238, line: 32, size: 256, elements: !3239)
!3238 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3239 = !{!3240, !3245, !3258, !3264, !3273, !3293, !3298}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3237, file: !3238, line: 37, baseType: !3241, size: 64)
!3241 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3237, file: !3238, line: 34, size: 64, elements: !3242)
!3242 = !{!3243, !3244}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3241, file: !3238, line: 35, baseType: !2586, size: 32)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3241, file: !3238, line: 36, baseType: !577, size: 32, offset: 32)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3237, file: !3238, line: 45, baseType: !3246, size: 192)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3237, file: !3238, line: 40, size: 192, elements: !3247)
!3247 = !{!3248, !3250, !3251, !3257}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3246, file: !3238, line: 41, baseType: !3249, size: 32)
!3249 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !450, line: 95, baseType: !401)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3246, file: !3238, line: 42, baseType: !401, size: 32, offset: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3246, file: !3238, line: 43, baseType: !3252, size: 64, offset: 64)
!3252 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3238, line: 11, baseType: !3253)
!3253 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3238, line: 8, size: 64, elements: !3254)
!3254 = !{!3255, !3256}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3253, file: !3238, line: 9, baseType: !401, size: 32)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3253, file: !3238, line: 10, baseType: !341, size: 64)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3246, file: !3238, line: 44, baseType: !401, size: 32, offset: 128)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3237, file: !3238, line: 52, baseType: !3259, size: 128)
!3259 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3237, file: !3238, line: 48, size: 128, elements: !3260)
!3260 = !{!3261, !3262, !3263}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3259, file: !3238, line: 49, baseType: !2586, size: 32)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3259, file: !3238, line: 50, baseType: !577, size: 32, offset: 32)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3259, file: !3238, line: 51, baseType: !3252, size: 64, offset: 64)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3237, file: !3238, line: 61, baseType: !3265, size: 256)
!3265 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3237, file: !3238, line: 55, size: 256, elements: !3266)
!3266 = !{!3267, !3268, !3269, !3270, !3272}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3265, file: !3238, line: 56, baseType: !2586, size: 32)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3265, file: !3238, line: 57, baseType: !577, size: 32, offset: 32)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3265, file: !3238, line: 58, baseType: !401, size: 32, offset: 64)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3265, file: !3238, line: 59, baseType: !3271, size: 64, offset: 128)
!3271 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !450, line: 94, baseType: !451)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3265, file: !3238, line: 60, baseType: !3271, size: 64, offset: 192)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3237, file: !3238, line: 95, baseType: !3274, size: 256)
!3274 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3237, file: !3238, line: 64, size: 256, elements: !3275)
!3275 = !{!3276, !3277}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3274, file: !3238, line: 65, baseType: !341, size: 64)
!3277 = !DIDerivedType(tag: DW_TAG_member, scope: !3274, file: !3238, line: 77, baseType: !3278, size: 192, offset: 64)
!3278 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3274, file: !3238, line: 77, size: 192, elements: !3279)
!3279 = !{!3280, !3281, !3288}
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3278, file: !3238, line: 82, baseType: !1125, size: 16)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3278, file: !3238, line: 88, baseType: !3282, size: 192)
!3282 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3238, line: 84, size: 192, elements: !3283)
!3283 = !{!3284, !3286, !3287}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3282, file: !3238, line: 85, baseType: !3285, size: 64)
!3285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !359, size: 64, elements: !2459)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3282, file: !3238, line: 86, baseType: !341, size: 64, offset: 64)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3282, file: !3238, line: 87, baseType: !341, size: 64, offset: 128)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3278, file: !3238, line: 93, baseType: !3289, size: 96)
!3289 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3278, file: !3238, line: 90, size: 96, elements: !3290)
!3290 = !{!3291, !3292}
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3289, file: !3238, line: 91, baseType: !3285, size: 64)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3289, file: !3238, line: 92, baseType: !305, size: 32, offset: 64)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3237, file: !3238, line: 101, baseType: !3294, size: 128)
!3294 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3237, file: !3238, line: 98, size: 128, elements: !3295)
!3295 = !{!3296, !3297}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3294, file: !3238, line: 99, baseType: !340, size: 64)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3294, file: !3238, line: 100, baseType: !401, size: 32, offset: 64)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3237, file: !3238, line: 108, baseType: !3299, size: 128)
!3299 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3237, file: !3238, line: 104, size: 128, elements: !3300)
!3300 = !{!3301, !3302, !3303}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3299, file: !3238, line: 105, baseType: !341, size: 64)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3299, file: !3238, line: 106, baseType: !401, size: 32, offset: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3299, file: !3238, line: 107, baseType: !7, size: 32, offset: 96)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2351, file: !2352, line: 1067, baseType: !3126, offset: 11136)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2351, file: !2352, line: 1099, baseType: !3306, size: 64, offset: 11136)
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 64)
!3307 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2352, line: 56, flags: DIFlagFwdDecl)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2351, file: !2352, line: 1103, baseType: !361, size: 128, offset: 11200)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2351, file: !2352, line: 1104, baseType: !3310, size: 64, offset: 11328)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2352, line: 46, flags: DIFlagFwdDecl)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2351, file: !2352, line: 1105, baseType: !876, size: 192, offset: 11392)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2351, file: !2352, line: 1106, baseType: !7, size: 32, offset: 11584)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2351, file: !2352, line: 1109, baseType: !3315, size: 128, offset: 11648)
!3315 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3316, size: 128, elements: !1537)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2352, line: 51, flags: DIFlagFwdDecl)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2351, file: !2352, line: 1110, baseType: !876, size: 192, offset: 11776)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2351, file: !2352, line: 1111, baseType: !361, size: 128, offset: 11968)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2351, file: !2352, line: 1173, baseType: !3321, size: 64, offset: 12096)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 64)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3323, line: 62, size: 256, align: 256, elements: !3324)
!3323 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3324 = !{!3325, !3326, !3327, !3332}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3322, file: !3323, line: 75, baseType: !305, size: 32)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3322, file: !3323, line: 90, baseType: !305, size: 32, offset: 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3322, file: !3323, line: 124, baseType: !3328, size: 64, offset: 64)
!3328 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3322, file: !3323, line: 109, size: 64, elements: !3329)
!3329 = !{!3330, !3331}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3328, file: !3323, line: 110, baseType: !559, size: 64)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3328, file: !3323, line: 112, baseType: !559, size: 64)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3322, file: !3323, line: 144, baseType: !305, size: 32, offset: 128)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2351, file: !2352, line: 1174, baseType: !303, size: 32, offset: 12160)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2351, file: !2352, line: 1179, baseType: !465, size: 64, offset: 12224)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2351, file: !2352, line: 1182, baseType: !3336, size: 128, offset: 12288)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2294, line: 76, size: 128, elements: !3337)
!3337 = !{!3338, !3343, !3344}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3336, file: !2294, line: 85, baseType: !3339, size: 64)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3340, line: 7, size: 64, elements: !3341)
!3340 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3341 = !{!3342}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3339, file: !3340, line: 12, baseType: !2494, size: 64)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3336, file: !2294, line: 88, baseType: !626, size: 8, offset: 64)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3336, file: !2294, line: 95, baseType: !626, size: 8, offset: 72)
!3345 = !DIDerivedType(tag: DW_TAG_member, scope: !2351, file: !2352, line: 1184, baseType: !3346, size: 128, offset: 12416)
!3346 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2351, file: !2352, line: 1184, size: 128, elements: !3347)
!3347 = !{!3348, !3349}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3346, file: !2352, line: 1185, baseType: !1560, size: 32)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3346, file: !2352, line: 1186, baseType: !506, size: 128, align: 64)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2351, file: !2352, line: 1190, baseType: !3351, size: 64, offset: 12544)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !2352, line: 53, flags: DIFlagFwdDecl)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2351, file: !2352, line: 1192, baseType: !3354, size: 128, offset: 12608)
!3354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2294, line: 64, size: 128, elements: !3355)
!3355 = !{!3356, !3357, !3358}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3354, file: !2294, line: 65, baseType: !923, size: 64)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3354, file: !2294, line: 67, baseType: !305, size: 32, offset: 64)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3354, file: !2294, line: 68, baseType: !305, size: 32, offset: 96)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2351, file: !2352, line: 1206, baseType: !401, size: 32, offset: 12736)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2351, file: !2352, line: 1207, baseType: !401, size: 32, offset: 12768)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2351, file: !2352, line: 1209, baseType: !465, size: 64, offset: 12800)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2351, file: !2352, line: 1219, baseType: !558, size: 64, offset: 12864)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2351, file: !2352, line: 1220, baseType: !558, size: 64, offset: 12928)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2351, file: !2352, line: 1317, baseType: !401, size: 32, offset: 12992)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2351, file: !2352, line: 1319, baseType: !2350, size: 64, offset: 13056)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2351, file: !2352, line: 1322, baseType: !3367, size: 64, offset: 13120)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 64)
!3368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3369, line: 56, size: 512, elements: !3370)
!3369 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3370 = !{!3371, !3372, !3373, !3374, !3375, !3376, !3377, !3379}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3368, file: !3369, line: 57, baseType: !3367, size: 64)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3368, file: !3369, line: 58, baseType: !341, size: 64, offset: 64)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3368, file: !3369, line: 59, baseType: !465, size: 64, offset: 128)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3368, file: !3369, line: 60, baseType: !465, size: 64, offset: 192)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3368, file: !3369, line: 61, baseType: !1023, size: 64, offset: 256)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3368, file: !3369, line: 62, baseType: !7, size: 32, offset: 320)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3368, file: !3369, line: 63, baseType: !3378, size: 64, offset: 384)
!3378 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !362, line: 153, baseType: !558)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3368, file: !3369, line: 64, baseType: !3380, size: 64, offset: 448)
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 64)
!3381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2351, file: !2352, line: 1326, baseType: !1560, size: 32, offset: 13184)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2351, file: !2352, line: 1342, baseType: !341, size: 64, offset: 13248)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2351, file: !2352, line: 1343, baseType: !559, size: 64, offset: 13312)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2351, file: !2352, line: 1344, baseType: !558, size: 64, offset: 13376)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2351, file: !2352, line: 1345, baseType: !559, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2351, file: !2352, line: 1346, baseType: !559, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2351, file: !2352, line: 1347, baseType: !559, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2351, file: !2352, line: 1348, baseType: !506, size: 128, align: 64, offset: 13504)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2351, file: !2352, line: 1358, baseType: !3391, size: 34816, offset: 13824)
!3391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3392, line: 485, size: 34816, elements: !3393)
!3392 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3393 = !{!3394, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3423, !3424, !3425, !3426, !3427, !3428, !3431, !3432, !3433}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3391, file: !3392, line: 487, baseType: !3395, size: 192)
!3395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3396, size: 192, elements: !418)
!3396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3397, line: 16, size: 64, elements: !3398)
!3397 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3398 = !{!3399, !3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3396, file: !3397, line: 17, baseType: !1062, size: 16)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3396, file: !3397, line: 18, baseType: !1062, size: 16, offset: 16)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3396, file: !3397, line: 19, baseType: !1062, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3396, file: !3397, line: 19, baseType: !1062, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3396, file: !3397, line: 19, baseType: !1062, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3396, file: !3397, line: 19, baseType: !1062, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3396, file: !3397, line: 19, baseType: !1062, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3396, file: !3397, line: 20, baseType: !1062, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3396, file: !3397, line: 20, baseType: !1062, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3396, file: !3397, line: 20, baseType: !1062, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3396, file: !3397, line: 20, baseType: !1062, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3396, file: !3397, line: 20, baseType: !1062, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3396, file: !3397, line: 20, baseType: !1062, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3391, file: !3392, line: 491, baseType: !465, size: 64, offset: 192)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3391, file: !3392, line: 495, baseType: !320, size: 16, offset: 256)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3391, file: !3392, line: 496, baseType: !320, size: 16, offset: 272)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3391, file: !3392, line: 497, baseType: !320, size: 16, offset: 288)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3391, file: !3392, line: 498, baseType: !320, size: 16, offset: 304)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3391, file: !3392, line: 502, baseType: !465, size: 64, offset: 320)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3391, file: !3392, line: 503, baseType: !465, size: 64, offset: 384)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3391, file: !3392, line: 514, baseType: !3420, size: 256, offset: 448)
!3420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3421, size: 256, elements: !331)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3422, size: 64)
!3422 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3392, line: 483, flags: DIFlagFwdDecl)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3391, file: !3392, line: 516, baseType: !465, size: 64, offset: 704)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3391, file: !3392, line: 518, baseType: !465, size: 64, offset: 768)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3391, file: !3392, line: 520, baseType: !465, size: 64, offset: 832)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3391, file: !3392, line: 521, baseType: !465, size: 64, offset: 896)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3391, file: !3392, line: 522, baseType: !465, size: 64, offset: 960)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3391, file: !3392, line: 528, baseType: !3429, size: 64, offset: 1024)
!3429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3430, size: 64)
!3430 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3392, line: 10, flags: DIFlagFwdDecl)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3391, file: !3392, line: 535, baseType: !465, size: 64, offset: 1088)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3391, file: !3392, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3391, file: !3392, line: 540, baseType: !3434, size: 33280, offset: 1536)
!3434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3435, line: 317, size: 33280, elements: !3436)
!3435 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3436 = !{!3437, !3438, !3439}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3434, file: !3435, line: 330, baseType: !7, size: 32)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3434, file: !3435, line: 337, baseType: !465, size: 64, offset: 64)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3434, file: !3435, line: 348, baseType: !3440, size: 32768, offset: 512)
!3440 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3435, line: 304, size: 32768, elements: !3441)
!3441 = !{!3442, !3457, !3494, !3544, !3557}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3440, file: !3435, line: 305, baseType: !3443, size: 896)
!3443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3435, line: 12, size: 896, elements: !3444)
!3444 = !{!3445, !3446, !3447, !3448, !3449, !3450, !3451, !3452, !3456}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3443, file: !3435, line: 13, baseType: !303, size: 32)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3443, file: !3435, line: 14, baseType: !303, size: 32, offset: 32)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3443, file: !3435, line: 15, baseType: !303, size: 32, offset: 64)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3443, file: !3435, line: 16, baseType: !303, size: 32, offset: 96)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3443, file: !3435, line: 17, baseType: !303, size: 32, offset: 128)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3443, file: !3435, line: 18, baseType: !303, size: 32, offset: 160)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3443, file: !3435, line: 19, baseType: !303, size: 32, offset: 192)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3443, file: !3435, line: 22, baseType: !3453, size: 640, offset: 224)
!3453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 640, elements: !3454)
!3454 = !{!3455}
!3455 = !DISubrange(count: 20)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3443, file: !3435, line: 25, baseType: !303, size: 32, offset: 864)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3440, file: !3435, line: 306, baseType: !3458, size: 4096, align: 128)
!3458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3435, line: 34, size: 4096, align: 128, elements: !3459)
!3459 = !{!3460, !3461, !3462, !3463, !3464, !3479, !3480, !3481, !3483, !3485, !3489}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3458, file: !3435, line: 35, baseType: !1062, size: 16)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3458, file: !3435, line: 36, baseType: !1062, size: 16, offset: 16)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3458, file: !3435, line: 37, baseType: !1062, size: 16, offset: 32)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3458, file: !3435, line: 38, baseType: !1062, size: 16, offset: 48)
!3464 = !DIDerivedType(tag: DW_TAG_member, scope: !3458, file: !3435, line: 39, baseType: !3465, size: 128, offset: 64)
!3465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3458, file: !3435, line: 39, size: 128, elements: !3466)
!3466 = !{!3467, !3472}
!3467 = !DIDerivedType(tag: DW_TAG_member, scope: !3465, file: !3435, line: 40, baseType: !3468, size: 128)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3465, file: !3435, line: 40, size: 128, elements: !3469)
!3469 = !{!3470, !3471}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3468, file: !3435, line: 41, baseType: !558, size: 64)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3468, file: !3435, line: 42, baseType: !558, size: 64, offset: 64)
!3472 = !DIDerivedType(tag: DW_TAG_member, scope: !3465, file: !3435, line: 44, baseType: !3473, size: 128)
!3473 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3465, file: !3435, line: 44, size: 128, elements: !3474)
!3474 = !{!3475, !3476, !3477, !3478}
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3473, file: !3435, line: 45, baseType: !303, size: 32)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3473, file: !3435, line: 46, baseType: !303, size: 32, offset: 32)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3473, file: !3435, line: 47, baseType: !303, size: 32, offset: 64)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3473, file: !3435, line: 48, baseType: !303, size: 32, offset: 96)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3458, file: !3435, line: 51, baseType: !303, size: 32, offset: 192)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3458, file: !3435, line: 52, baseType: !303, size: 32, offset: 224)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3458, file: !3435, line: 55, baseType: !3482, size: 1024, offset: 256)
!3482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 1024, elements: !1259)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3458, file: !3435, line: 58, baseType: !3484, size: 2048, offset: 1280)
!3484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 2048, elements: !422)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3458, file: !3435, line: 60, baseType: !3486, size: 384, offset: 3328)
!3486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 384, elements: !3487)
!3487 = !{!3488}
!3488 = !DISubrange(count: 12)
!3489 = !DIDerivedType(tag: DW_TAG_member, scope: !3458, file: !3435, line: 62, baseType: !3490, size: 384, offset: 3712)
!3490 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3458, file: !3435, line: 62, size: 384, elements: !3491)
!3491 = !{!3492, !3493}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3490, file: !3435, line: 63, baseType: !3486, size: 384)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3490, file: !3435, line: 64, baseType: !3486, size: 384)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3440, file: !3435, line: 307, baseType: !3495, size: 1088)
!3495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3435, line: 79, size: 1088, elements: !3496)
!3496 = !{!3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3507, !3508, !3509, !3510, !3511, !3543}
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3495, file: !3435, line: 80, baseType: !303, size: 32)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3495, file: !3435, line: 81, baseType: !303, size: 32, offset: 32)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3495, file: !3435, line: 82, baseType: !303, size: 32, offset: 64)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3495, file: !3435, line: 83, baseType: !303, size: 32, offset: 96)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3495, file: !3435, line: 84, baseType: !303, size: 32, offset: 128)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3495, file: !3435, line: 85, baseType: !303, size: 32, offset: 160)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3495, file: !3435, line: 86, baseType: !303, size: 32, offset: 192)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3495, file: !3435, line: 88, baseType: !3453, size: 640, offset: 224)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3495, file: !3435, line: 89, baseType: !1182, size: 8, offset: 864)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3495, file: !3435, line: 90, baseType: !1182, size: 8, offset: 872)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3495, file: !3435, line: 91, baseType: !1182, size: 8, offset: 880)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3495, file: !3435, line: 92, baseType: !1182, size: 8, offset: 888)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3495, file: !3435, line: 93, baseType: !1182, size: 8, offset: 896)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3495, file: !3435, line: 94, baseType: !1182, size: 8, offset: 904)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3495, file: !3435, line: 95, baseType: !3512, size: 64, offset: 960)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3514, line: 11, size: 128, elements: !3515)
!3514 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3515 = !{!3516, !3517}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3513, file: !3514, line: 12, baseType: !340, size: 64)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3513, file: !3514, line: 13, baseType: !3518, size: 64, offset: 64)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 64)
!3519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3520, line: 56, size: 1344, elements: !3521)
!3520 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3521 = !{!3522, !3523, !3524, !3525, !3526, !3527, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3519, file: !3520, line: 61, baseType: !465, size: 64)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3519, file: !3520, line: 62, baseType: !465, size: 64, offset: 64)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3519, file: !3520, line: 63, baseType: !465, size: 64, offset: 128)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3519, file: !3520, line: 64, baseType: !465, size: 64, offset: 192)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3519, file: !3520, line: 65, baseType: !465, size: 64, offset: 256)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3519, file: !3520, line: 66, baseType: !465, size: 64, offset: 320)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3519, file: !3520, line: 68, baseType: !465, size: 64, offset: 384)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3519, file: !3520, line: 69, baseType: !465, size: 64, offset: 448)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3519, file: !3520, line: 70, baseType: !465, size: 64, offset: 512)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3519, file: !3520, line: 71, baseType: !465, size: 64, offset: 576)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3519, file: !3520, line: 72, baseType: !465, size: 64, offset: 640)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3519, file: !3520, line: 73, baseType: !465, size: 64, offset: 704)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3519, file: !3520, line: 74, baseType: !465, size: 64, offset: 768)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3519, file: !3520, line: 75, baseType: !465, size: 64, offset: 832)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3519, file: !3520, line: 76, baseType: !465, size: 64, offset: 896)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3519, file: !3520, line: 81, baseType: !465, size: 64, offset: 960)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3519, file: !3520, line: 83, baseType: !465, size: 64, offset: 1024)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3519, file: !3520, line: 84, baseType: !465, size: 64, offset: 1088)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3519, file: !3520, line: 85, baseType: !465, size: 64, offset: 1152)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3519, file: !3520, line: 86, baseType: !465, size: 64, offset: 1216)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3519, file: !3520, line: 87, baseType: !465, size: 64, offset: 1280)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3495, file: !3435, line: 96, baseType: !303, size: 32, offset: 1024)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3440, file: !3435, line: 308, baseType: !3545, size: 4608, align: 512)
!3545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3435, line: 289, size: 4608, align: 512, elements: !3546)
!3546 = !{!3547, !3548, !3555}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3545, file: !3435, line: 290, baseType: !3458, size: 4096, align: 128)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3545, file: !3435, line: 291, baseType: !3549, size: 512, offset: 4096)
!3549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3435, line: 268, size: 512, elements: !3550)
!3550 = !{!3551, !3552, !3553}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3549, file: !3435, line: 269, baseType: !558, size: 64)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3549, file: !3435, line: 270, baseType: !558, size: 64, offset: 64)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3549, file: !3435, line: 271, baseType: !3554, size: 384, offset: 128)
!3554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !558, size: 384, elements: !2743)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3545, file: !3435, line: 292, baseType: !3556, offset: 4608)
!3556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1182, elements: !2981)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3440, file: !3435, line: 309, baseType: !3558, size: 32768)
!3558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1182, size: 32768, elements: !3559)
!3559 = !{!3560}
!3560 = !DISubrange(count: 4096)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2347, file: !925, line: 378, baseType: !3562, size: 64, offset: 64)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2343, file: !925, line: 384, baseType: !2622, size: 192, offset: 192)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !2121, file: !925, line: 500, baseType: !375, offset: 6656)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !2121, file: !925, line: 501, baseType: !3566, size: 64, offset: 6656)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !925, line: 387, flags: DIFlagFwdDecl)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2121, file: !925, line: 516, baseType: !2831, size: 64, offset: 6720)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !2121, file: !925, line: 519, baseType: !493, size: 64, offset: 6784)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !2121, file: !925, line: 521, baseType: !3571, size: 64, offset: 6848)
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 64)
!3572 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !925, line: 521, flags: DIFlagFwdDecl)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !2121, file: !925, line: 545, baseType: !950, size: 32, offset: 6912)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !2121, file: !925, line: 548, baseType: !626, size: 8, offset: 6944)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !2121, file: !925, line: 550, baseType: !3576, offset: 6952)
!3576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3577, line: 142, elements: !389)
!3577 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !2121, file: !925, line: 554, baseType: !1234, size: 256, offset: 6976)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !2121, file: !925, line: 557, baseType: !303, size: 32, offset: 7232)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !2118, file: !925, line: 565, baseType: !3581, offset: 7296)
!3581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, elements: !1272)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2114, file: !925, line: 151, baseType: !950, size: 32)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2106, file: !925, line: 156, baseType: !375, offset: 256)
!3584 = !DIDerivedType(tag: DW_TAG_member, scope: !929, file: !925, line: 159, baseType: !3585, size: 128)
!3585 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !929, file: !925, line: 159, size: 128, elements: !3586)
!3586 = !{!3587, !3631}
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3585, file: !925, line: 161, baseType: !3588, size: 64)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3589, size: 64)
!3589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !116, line: 110, size: 1152, elements: !3590)
!3590 = !{!3591, !3601, !3602, !3603, !3604, !3605, !3606, !3618, !3619, !3620}
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3589, file: !116, line: 111, baseType: !3592, size: 384)
!3592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !116, line: 19, size: 384, elements: !3593)
!3593 = !{!3594, !3596, !3597, !3598, !3599, !3600}
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3592, file: !116, line: 20, baseType: !3595, size: 64)
!3595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !465)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3592, file: !116, line: 21, baseType: !3595, size: 64, offset: 64)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3592, file: !116, line: 22, baseType: !3595, size: 64, offset: 128)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3592, file: !116, line: 23, baseType: !465, size: 64, offset: 192)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3592, file: !116, line: 24, baseType: !465, size: 64, offset: 256)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3592, file: !116, line: 25, baseType: !465, size: 64, offset: 320)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3589, file: !116, line: 112, baseType: !1209, size: 64, offset: 384)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3589, file: !116, line: 113, baseType: !1195, size: 128, offset: 448)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3589, file: !116, line: 114, baseType: !2622, size: 192, offset: 576)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3589, file: !116, line: 115, baseType: !115, size: 32, offset: 768)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3589, file: !116, line: 116, baseType: !7, size: 32, offset: 800)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3589, file: !116, line: 117, baseType: !3607, size: 64, offset: 832)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3609)
!3609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !116, line: 67, size: 256, elements: !3610)
!3610 = !{!3611, !3612, !3616, !3617}
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3609, file: !116, line: 73, baseType: !1043, size: 64)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3609, file: !116, line: 78, baseType: !3613, size: 64, offset: 64)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{null, !3588}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3609, file: !116, line: 83, baseType: !3613, size: 64, offset: 128)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3609, file: !116, line: 89, baseType: !2170, size: 64, offset: 192)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3589, file: !116, line: 118, baseType: !341, size: 64, offset: 896)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3589, file: !116, line: 119, baseType: !401, size: 32, offset: 960)
!3620 = !DIDerivedType(tag: DW_TAG_member, scope: !3589, file: !116, line: 120, baseType: !3621, size: 128, offset: 1024)
!3621 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3589, file: !116, line: 120, size: 128, elements: !3622)
!3622 = !{!3623, !3629}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3621, file: !116, line: 121, baseType: !3624, size: 128)
!3624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3625, line: 6, size: 128, elements: !3626)
!3625 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3626 = !{!3627, !3628}
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3624, file: !3625, line: 7, baseType: !558, size: 64)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3624, file: !3625, line: 8, baseType: !558, size: 64, offset: 64)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3621, file: !116, line: 122, baseType: !3630)
!3630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3624, elements: !2981)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3585, file: !925, line: 162, baseType: !341, size: 64, offset: 64)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !929, file: !925, line: 176, baseType: !506, size: 128, align: 64)
!3633 = !DIDerivedType(tag: DW_TAG_member, scope: !924, file: !925, line: 179, baseType: !3634, size: 32, offset: 384)
!3634 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !924, file: !925, line: 179, size: 32, elements: !3635)
!3635 = !{!3636, !3637, !3638, !3639}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3634, file: !925, line: 184, baseType: !950, size: 32)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3634, file: !925, line: 192, baseType: !7, size: 32)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3634, file: !925, line: 194, baseType: !7, size: 32)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3634, file: !925, line: 195, baseType: !401, size: 32)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !924, file: !925, line: 199, baseType: !950, size: 32, offset: 416)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !796, file: !129, line: 1964, baseType: !3642, size: 64, offset: 1344)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{!340, !735, !3645}
!3645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3646, size: 64)
!3646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !3647, line: 12, size: 256, elements: !3648)
!3647 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!3648 = !{!3649, !3650, !3651, !3652, !3653}
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !3646, file: !3647, line: 13, baseType: !946, size: 32)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !3646, file: !3647, line: 16, baseType: !401, size: 32, offset: 32)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !3646, file: !3647, line: 23, baseType: !465, size: 64, offset: 64)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !3646, file: !3647, line: 30, baseType: !465, size: 64, offset: 128)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !3646, file: !3647, line: 33, baseType: !3654, size: 64, offset: 192)
!3654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3655, size: 64)
!3655 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !925, line: 27, flags: DIFlagFwdDecl)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !796, file: !129, line: 1966, baseType: !3642, size: 64, offset: 1408)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !736, file: !129, line: 1424, baseType: !3658, size: 64, offset: 448)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3660)
!3660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !123, line: 322, size: 704, elements: !3661)
!3661 = !{!3662, !3708, !3712, !3716, !3717, !3718, !3719, !3720, !3725, !3730, !3734}
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !3660, file: !123, line: 323, baseType: !3663, size: 64)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = !DISubroutineType(types: !3665)
!3665 = !{!401, !3666}
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !123, line: 294, size: 1600, elements: !3668)
!3668 = !{!3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3693, !3694, !3695}
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !3667, file: !123, line: 295, baseType: !778, size: 128)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !3667, file: !123, line: 296, baseType: !361, size: 128, offset: 128)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !3667, file: !123, line: 297, baseType: !361, size: 128, offset: 256)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !3667, file: !123, line: 298, baseType: !361, size: 128, offset: 384)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !3667, file: !123, line: 299, baseType: !876, size: 192, offset: 512)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !3667, file: !123, line: 300, baseType: !375, offset: 704)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !3667, file: !123, line: 301, baseType: !950, size: 32, offset: 704)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !3667, file: !123, line: 302, baseType: !735, size: 64, offset: 768)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !3667, file: !123, line: 303, baseType: !3678, size: 64, offset: 832)
!3678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !123, line: 68, size: 64, elements: !3679)
!3679 = !{!3680, !3692}
!3680 = !DIDerivedType(tag: DW_TAG_member, scope: !3678, file: !123, line: 69, baseType: !3681, size: 32)
!3681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3678, file: !123, line: 69, size: 32, elements: !3682)
!3682 = !{!3683, !3684, !3685}
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3681, file: !123, line: 70, baseType: !571, size: 32)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3681, file: !123, line: 71, baseType: !579, size: 32)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !3681, file: !123, line: 72, baseType: !3686, size: 32)
!3686 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !3687, line: 24, baseType: !3688)
!3687 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!3688 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3687, line: 22, size: 32, elements: !3689)
!3689 = !{!3690}
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3688, file: !3687, line: 23, baseType: !3691, size: 32)
!3691 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !3687, line: 20, baseType: !577)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3678, file: !123, line: 74, baseType: !122, size: 32, offset: 32)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !3667, file: !123, line: 304, baseType: !667, size: 64, offset: 896)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !3667, file: !123, line: 305, baseType: !465, size: 64, offset: 960)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !3667, file: !123, line: 306, baseType: !3696, size: 576, offset: 1024)
!3696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !123, line: 205, size: 576, elements: !3697)
!3697 = !{!3698, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707}
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !3696, file: !123, line: 206, baseType: !3699, size: 64)
!3699 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !123, line: 66, baseType: !669)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !3696, file: !123, line: 207, baseType: !3699, size: 64, offset: 64)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !3696, file: !123, line: 208, baseType: !3699, size: 64, offset: 128)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !3696, file: !123, line: 209, baseType: !3699, size: 64, offset: 192)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !3696, file: !123, line: 210, baseType: !3699, size: 64, offset: 256)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !3696, file: !123, line: 211, baseType: !3699, size: 64, offset: 320)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !3696, file: !123, line: 212, baseType: !3699, size: 64, offset: 384)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !3696, file: !123, line: 213, baseType: !675, size: 64, offset: 448)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !3696, file: !123, line: 214, baseType: !675, size: 64, offset: 512)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !3660, file: !123, line: 324, baseType: !3709, size: 64, offset: 64)
!3709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3710, size: 64)
!3710 = !DISubroutineType(types: !3711)
!3711 = !{!3666, !735, !401}
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !3660, file: !123, line: 325, baseType: !3713, size: 64, offset: 128)
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 64)
!3714 = !DISubroutineType(types: !3715)
!3715 = !{null, !3666}
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !3660, file: !123, line: 326, baseType: !3663, size: 64, offset: 192)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !3660, file: !123, line: 327, baseType: !3663, size: 64, offset: 256)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !3660, file: !123, line: 328, baseType: !3663, size: 64, offset: 320)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !3660, file: !123, line: 329, baseType: !838, size: 64, offset: 384)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !3660, file: !123, line: 332, baseType: !3721, size: 64, offset: 448)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{!3724, !565}
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3699, size: 64)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !3660, file: !123, line: 333, baseType: !3726, size: 64, offset: 512)
!3726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3727, size: 64)
!3727 = !DISubroutineType(types: !3728)
!3728 = !{!401, !565, !3729}
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3686, size: 64)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !3660, file: !123, line: 335, baseType: !3731, size: 64, offset: 576)
!3731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3732, size: 64)
!3732 = !DISubroutineType(types: !3733)
!3733 = !{!401, !565, !3724}
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3660, file: !123, line: 337, baseType: !3735, size: 64, offset: 640)
!3735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3736, size: 64)
!3736 = !DISubroutineType(types: !3737)
!3737 = !{!401, !735, !3738}
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !736, file: !129, line: 1425, baseType: !3740, size: 64, offset: 512)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3742)
!3742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !123, line: 428, size: 704, elements: !3743)
!3743 = !{!3744, !3748, !3749, !3753, !3754, !3755, !3770, !3793, !3797, !3798, !3821}
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !3742, file: !123, line: 429, baseType: !3745, size: 64)
!3745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3746, size: 64)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{!401, !735, !401, !401, !685}
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !3742, file: !123, line: 430, baseType: !838, size: 64, offset: 64)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !3742, file: !123, line: 431, baseType: !3750, size: 64, offset: 128)
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3751, size: 64)
!3751 = !DISubroutineType(types: !3752)
!3752 = !{!401, !735, !7}
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !3742, file: !123, line: 432, baseType: !3750, size: 64, offset: 192)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !3742, file: !123, line: 433, baseType: !838, size: 64, offset: 256)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !3742, file: !123, line: 434, baseType: !3756, size: 64, offset: 320)
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DISubroutineType(types: !3758)
!3758 = !{!401, !735, !401, !3759}
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 64)
!3760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !123, line: 415, size: 256, elements: !3761)
!3761 = !{!3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769}
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !3760, file: !123, line: 416, baseType: !401, size: 32)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !3760, file: !123, line: 417, baseType: !7, size: 32, offset: 32)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !3760, file: !123, line: 418, baseType: !7, size: 32, offset: 64)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !3760, file: !123, line: 420, baseType: !7, size: 32, offset: 96)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !3760, file: !123, line: 421, baseType: !7, size: 32, offset: 128)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !3760, file: !123, line: 422, baseType: !7, size: 32, offset: 160)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !3760, file: !123, line: 423, baseType: !7, size: 32, offset: 192)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !3760, file: !123, line: 424, baseType: !7, size: 32, offset: 224)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !3742, file: !123, line: 435, baseType: !3771, size: 64, offset: 384)
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3772, size: 64)
!3772 = !DISubroutineType(types: !3773)
!3773 = !{!401, !735, !3678, !3774}
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !123, line: 343, size: 960, elements: !3776)
!3776 = !{!3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792}
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !3775, file: !123, line: 344, baseType: !401, size: 32)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !3775, file: !123, line: 345, baseType: !558, size: 64, offset: 64)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !3775, file: !123, line: 346, baseType: !558, size: 64, offset: 128)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !3775, file: !123, line: 347, baseType: !558, size: 64, offset: 192)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !3775, file: !123, line: 348, baseType: !558, size: 64, offset: 256)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !3775, file: !123, line: 349, baseType: !558, size: 64, offset: 320)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !3775, file: !123, line: 350, baseType: !558, size: 64, offset: 384)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !3775, file: !123, line: 351, baseType: !886, size: 64, offset: 448)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !3775, file: !123, line: 353, baseType: !886, size: 64, offset: 512)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !3775, file: !123, line: 354, baseType: !401, size: 32, offset: 576)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !3775, file: !123, line: 355, baseType: !401, size: 32, offset: 608)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !3775, file: !123, line: 356, baseType: !558, size: 64, offset: 640)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !3775, file: !123, line: 357, baseType: !558, size: 64, offset: 704)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !3775, file: !123, line: 358, baseType: !558, size: 64, offset: 768)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !3775, file: !123, line: 359, baseType: !886, size: 64, offset: 832)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !3775, file: !123, line: 360, baseType: !401, size: 32, offset: 896)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !3742, file: !123, line: 436, baseType: !3794, size: 64, offset: 448)
!3794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3795, size: 64)
!3795 = !DISubroutineType(types: !3796)
!3796 = !{!401, !735, !3738, !3774}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !3742, file: !123, line: 438, baseType: !3771, size: 64, offset: 512)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !3742, file: !123, line: 439, baseType: !3799, size: 64, offset: 576)
!3799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3800, size: 64)
!3800 = !DISubroutineType(types: !3801)
!3801 = !{!401, !735, !3802}
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 64)
!3803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !123, line: 409, size: 1408, elements: !3804)
!3804 = !{!3805, !3806}
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !3803, file: !123, line: 410, baseType: !7, size: 32)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !3803, file: !123, line: 411, baseType: !3807, size: 1344, offset: 64)
!3807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3808, size: 1344, elements: !418)
!3808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !123, line: 395, size: 448, elements: !3809)
!3809 = !{!3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3820}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3808, file: !123, line: 396, baseType: !7, size: 32)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !3808, file: !123, line: 397, baseType: !7, size: 32, offset: 32)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !3808, file: !123, line: 399, baseType: !7, size: 32, offset: 64)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !3808, file: !123, line: 400, baseType: !7, size: 32, offset: 96)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !3808, file: !123, line: 401, baseType: !7, size: 32, offset: 128)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !3808, file: !123, line: 402, baseType: !7, size: 32, offset: 160)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !3808, file: !123, line: 403, baseType: !7, size: 32, offset: 192)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3808, file: !123, line: 404, baseType: !560, size: 64, offset: 256)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3808, file: !123, line: 405, baseType: !3819, size: 64, offset: 320)
!3819 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !362, line: 126, baseType: !558)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !3808, file: !123, line: 406, baseType: !3819, size: 64, offset: 384)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !3742, file: !123, line: 440, baseType: !3750, size: 64, offset: 640)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !736, file: !129, line: 1426, baseType: !3823, size: 64, offset: 576)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3825)
!3825 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !129, line: 49, flags: DIFlagFwdDecl)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !736, file: !129, line: 1427, baseType: !465, size: 64, offset: 640)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !736, file: !129, line: 1428, baseType: !465, size: 64, offset: 704)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !736, file: !129, line: 1429, baseType: !465, size: 64, offset: 768)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !736, file: !129, line: 1430, baseType: !523, size: 64, offset: 832)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !736, file: !129, line: 1431, baseType: !970, size: 256, offset: 896)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !736, file: !129, line: 1432, baseType: !401, size: 32, offset: 1152)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !736, file: !129, line: 1433, baseType: !950, size: 32, offset: 1184)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !736, file: !129, line: 1437, baseType: !3834, size: 64, offset: 1216)
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3835, size: 64)
!3835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3836, size: 64)
!3836 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3837)
!3837 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !129, line: 1437, flags: DIFlagFwdDecl)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !736, file: !129, line: 1449, baseType: !3839, size: 64, offset: 1280)
!3839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !539, line: 34, size: 64, elements: !3840)
!3840 = !{!3841}
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3839, file: !539, line: 35, baseType: !542, size: 64)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !736, file: !129, line: 1450, baseType: !361, size: 128, offset: 1344)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !736, file: !129, line: 1451, baseType: !1166, size: 64, offset: 1472)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !736, file: !129, line: 1452, baseType: !1741, size: 64, offset: 1536)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !736, file: !129, line: 1453, baseType: !3846, size: 64, offset: 1600)
!3846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3847, size: 64)
!3847 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !129, line: 1453, flags: DIFlagFwdDecl)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !736, file: !129, line: 1454, baseType: !778, size: 128, offset: 1664)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !736, file: !129, line: 1455, baseType: !7, size: 32, offset: 1792)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !736, file: !129, line: 1456, baseType: !3851, size: 2432, offset: 1856)
!3851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !123, line: 518, size: 2432, elements: !3852)
!3852 = !{!3853, !3854, !3855, !3857, !3889}
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3851, file: !123, line: 519, baseType: !7, size: 32)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3851, file: !123, line: 520, baseType: !970, size: 256, offset: 64)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3851, file: !123, line: 521, baseType: !3856, size: 192, offset: 320)
!3856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 192, elements: !418)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3851, file: !123, line: 522, baseType: !3858, size: 1728, offset: 512)
!3858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3859, size: 1728, elements: !418)
!3859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !123, line: 222, size: 576, elements: !3860)
!3860 = !{!3861, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3859, file: !123, line: 223, baseType: !3862, size: 64)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64)
!3863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !123, line: 443, size: 256, elements: !3864)
!3864 = !{!3865, !3866, !3879, !3880}
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3863, file: !123, line: 444, baseType: !401, size: 32)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3863, file: !123, line: 445, baseType: !3867, size: 64, offset: 64)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3869)
!3869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !123, line: 310, size: 512, elements: !3870)
!3870 = !{!3871, !3872, !3873, !3874, !3875, !3876, !3877, !3878}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3869, file: !123, line: 311, baseType: !838, size: 64)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3869, file: !123, line: 312, baseType: !838, size: 64, offset: 64)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3869, file: !123, line: 313, baseType: !838, size: 64, offset: 128)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3869, file: !123, line: 314, baseType: !838, size: 64, offset: 192)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3869, file: !123, line: 315, baseType: !3663, size: 64, offset: 256)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3869, file: !123, line: 316, baseType: !3663, size: 64, offset: 320)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3869, file: !123, line: 317, baseType: !3663, size: 64, offset: 384)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3869, file: !123, line: 318, baseType: !3735, size: 64, offset: 448)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3863, file: !123, line: 446, baseType: !769, size: 64, offset: 128)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3863, file: !123, line: 447, baseType: !3862, size: 64, offset: 192)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3859, file: !123, line: 224, baseType: !401, size: 32, offset: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3859, file: !123, line: 226, baseType: !361, size: 128, offset: 128)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3859, file: !123, line: 227, baseType: !465, size: 64, offset: 256)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3859, file: !123, line: 228, baseType: !7, size: 32, offset: 320)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3859, file: !123, line: 229, baseType: !7, size: 32, offset: 352)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3859, file: !123, line: 230, baseType: !3699, size: 64, offset: 384)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3859, file: !123, line: 231, baseType: !3699, size: 64, offset: 448)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3859, file: !123, line: 232, baseType: !341, size: 64, offset: 512)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3851, file: !123, line: 523, baseType: !3890, size: 192, offset: 2240)
!3890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3867, size: 192, elements: !418)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !736, file: !129, line: 1458, baseType: !3892, size: 2112, offset: 4288)
!3892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !129, line: 1410, size: 2112, elements: !3893)
!3893 = !{!3894, !3895, !3896}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3892, file: !129, line: 1411, baseType: !401, size: 32)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3892, file: !129, line: 1412, baseType: !1370, size: 128, offset: 64)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3892, file: !129, line: 1413, baseType: !3897, size: 1920, offset: 192)
!3897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3898, size: 1920, elements: !418)
!3898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3899, line: 12, size: 640, elements: !3900)
!3899 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3900 = !{!3901, !3909, !3910, !3915, !3916}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3898, file: !3899, line: 13, baseType: !3902, size: 320)
!3902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3903, line: 17, size: 320, elements: !3904)
!3903 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3904 = !{!3905, !3906, !3907, !3908}
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3902, file: !3903, line: 18, baseType: !401, size: 32)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3902, file: !3903, line: 19, baseType: !401, size: 32, offset: 32)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3902, file: !3903, line: 20, baseType: !1370, size: 128, offset: 64)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3902, file: !3903, line: 22, baseType: !506, size: 128, align: 64, offset: 192)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3898, file: !3899, line: 14, baseType: !1157, size: 64, offset: 320)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3898, file: !3899, line: 15, baseType: !3911, size: 64, offset: 384)
!3911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3912, line: 16, size: 64, elements: !3913)
!3912 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3913 = !{!3914}
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3911, file: !3912, line: 17, baseType: !2350, size: 64)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3898, file: !3899, line: 16, baseType: !1370, size: 128, offset: 448)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3898, file: !3899, line: 17, baseType: !950, size: 32, offset: 576)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !736, file: !129, line: 1465, baseType: !341, size: 64, offset: 6400)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !736, file: !129, line: 1468, baseType: !303, size: 32, offset: 6464)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !736, file: !129, line: 1470, baseType: !675, size: 64, offset: 6528)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !736, file: !129, line: 1471, baseType: !675, size: 64, offset: 6592)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !736, file: !129, line: 1473, baseType: !305, size: 32, offset: 6656)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !736, file: !129, line: 1474, baseType: !3923, size: 64, offset: 6720)
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !129, line: 603, flags: DIFlagFwdDecl)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !736, file: !129, line: 1477, baseType: !1258, size: 256, offset: 6784)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !736, file: !129, line: 1478, baseType: !3927, size: 128, offset: 7040)
!3927 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3928, line: 18, baseType: !3929)
!3928 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3929 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3928, line: 16, size: 128, elements: !3930)
!3930 = !{!3931}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3929, file: !3928, line: 17, baseType: !3932, size: 128)
!3932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 128, elements: !1886)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !736, file: !129, line: 1480, baseType: !7, size: 32, offset: 7168)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !736, file: !129, line: 1481, baseType: !1391, size: 32, offset: 7200)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !736, file: !129, line: 1487, baseType: !876, size: 192, offset: 7232)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !736, file: !129, line: 1493, baseType: !357, size: 64, offset: 7424)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !736, file: !129, line: 1495, baseType: !3938, size: 64, offset: 7488)
!3938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3939, size: 64)
!3939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3940)
!3940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !521, line: 135, size: 1024, align: 512, elements: !3941)
!3941 = !{!3942, !3946, !3947, !3954, !3960, !3964, !3968, !3972, !3973, !3977, !3981, !3986, !3990}
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !3940, file: !521, line: 136, baseType: !3943, size: 64)
!3943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3944, size: 64)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{!401, !523, !7}
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !3940, file: !521, line: 137, baseType: !3943, size: 64, offset: 64)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !3940, file: !521, line: 138, baseType: !3948, size: 64, offset: 128)
!3948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3949, size: 64)
!3949 = !DISubroutineType(types: !3950)
!3950 = !{!401, !3951, !3953}
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3952, size: 64)
!3952 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!3953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !3940, file: !521, line: 139, baseType: !3955, size: 64, offset: 192)
!3955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3956, size: 64)
!3956 = !DISubroutineType(types: !3957)
!3957 = !{!401, !3951, !7, !357, !3958}
!3958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3959, size: 64)
!3959 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !547)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !3940, file: !521, line: 141, baseType: !3961, size: 64, offset: 256)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3962, size: 64)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{!401, !3951}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !3940, file: !521, line: 142, baseType: !3965, size: 64, offset: 320)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{!401, !523}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !3940, file: !521, line: 143, baseType: !3969, size: 64, offset: 384)
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3970, size: 64)
!3970 = !DISubroutineType(types: !3971)
!3971 = !{null, !523}
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !3940, file: !521, line: 144, baseType: !3969, size: 64, offset: 448)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !3940, file: !521, line: 145, baseType: !3974, size: 64, offset: 512)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{null, !523, !565}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !3940, file: !521, line: 146, baseType: !3978, size: 64, offset: 576)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{!417, !523, !417, !401}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !3940, file: !521, line: 147, baseType: !3982, size: 64, offset: 640)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = !DISubroutineType(types: !3984)
!3984 = !{!519, !3985}
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !3940, file: !521, line: 148, baseType: !3987, size: 64, offset: 704)
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{!401, !685, !626}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !3940, file: !521, line: 149, baseType: !3991, size: 64, offset: 768)
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{!523, !523, !3994}
!3994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3995, size: 64)
!3995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !566)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !736, file: !129, line: 1500, baseType: !401, size: 32, offset: 7552)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !736, file: !129, line: 1502, baseType: !3998, size: 448, offset: 7616)
!3998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !3647, line: 60, size: 448, elements: !3999)
!3999 = !{!4000, !4005, !4006, !4007, !4008, !4009, !4010}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3998, file: !3647, line: 61, baseType: !4001, size: 64)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{!465, !4004, !3645}
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3998, file: !3647, line: 63, baseType: !4001, size: 64, offset: 64)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3998, file: !3647, line: 66, baseType: !340, size: 64, offset: 128)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3998, file: !3647, line: 67, baseType: !401, size: 32, offset: 192)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3998, file: !3647, line: 68, baseType: !7, size: 32, offset: 224)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3998, file: !3647, line: 71, baseType: !361, size: 128, offset: 256)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3998, file: !3647, line: 77, baseType: !4011, size: 64, offset: 384)
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !736, file: !129, line: 1505, baseType: !880, size: 64, offset: 8064)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !736, file: !129, line: 1508, baseType: !880, size: 64, offset: 8128)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !736, file: !129, line: 1511, baseType: !401, size: 32, offset: 8192)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !736, file: !129, line: 1514, baseType: !2053, size: 32, offset: 8224)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !736, file: !129, line: 1517, baseType: !1246, size: 64, offset: 8256)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !736, file: !129, line: 1518, baseType: !774, size: 64, offset: 8320)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !736, file: !129, line: 1525, baseType: !2831, size: 64, offset: 8384)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !736, file: !129, line: 1532, baseType: !4020, size: 64, offset: 8448)
!4020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !4021, line: 52, size: 64, elements: !4022)
!4021 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!4022 = !{!4023}
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4020, file: !4021, line: 53, baseType: !4024, size: 64)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !4021, line: 40, size: 256, elements: !4026)
!4026 = !{!4027, !4028, !4033}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4025, file: !4021, line: 42, baseType: !375)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !4025, file: !4021, line: 44, baseType: !4029, size: 192)
!4029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !4021, line: 28, size: 192, elements: !4030)
!4030 = !{!4031, !4032}
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4029, file: !4021, line: 29, baseType: !361, size: 128)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4029, file: !4021, line: 31, baseType: !340, size: 64, offset: 128)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !4025, file: !4021, line: 49, baseType: !340, size: 64, offset: 192)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !736, file: !129, line: 1533, baseType: !4020, size: 64, offset: 8512)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !736, file: !129, line: 1534, baseType: !506, size: 128, align: 64, offset: 8576)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !736, file: !129, line: 1535, baseType: !1234, size: 256, offset: 8704)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !736, file: !129, line: 1537, baseType: !876, size: 192, offset: 8960)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !736, file: !129, line: 1542, baseType: !401, size: 32, offset: 9152)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !736, file: !129, line: 1545, baseType: !375, offset: 9184)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !736, file: !129, line: 1546, baseType: !361, size: 128, offset: 9216)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !736, file: !129, line: 1548, baseType: !375, offset: 9344)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !736, file: !129, line: 1549, baseType: !361, size: 128, offset: 9344)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !566, file: !129, line: 624, baseType: !936, size: 64, offset: 256)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !566, file: !129, line: 631, baseType: !465, size: 64, offset: 320)
!4045 = !DIDerivedType(tag: DW_TAG_member, scope: !566, file: !129, line: 639, baseType: !4046, size: 32, offset: 384)
!4046 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !566, file: !129, line: 639, size: 32, elements: !4047)
!4047 = !{!4048, !4049}
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !4046, file: !129, line: 640, baseType: !1711, size: 32)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !4046, file: !129, line: 641, baseType: !7, size: 32)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !566, file: !129, line: 643, baseType: !649, size: 32, offset: 416)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !566, file: !129, line: 644, baseType: !667, size: 64, offset: 448)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !566, file: !129, line: 645, baseType: !671, size: 128, offset: 512)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !566, file: !129, line: 646, baseType: !671, size: 128, offset: 640)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !566, file: !129, line: 647, baseType: !671, size: 128, offset: 768)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !566, file: !129, line: 648, baseType: !375, offset: 896)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !566, file: !129, line: 649, baseType: !320, size: 16, offset: 896)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !566, file: !129, line: 650, baseType: !1182, size: 8, offset: 912)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !566, file: !129, line: 651, baseType: !1182, size: 8, offset: 920)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !566, file: !129, line: 652, baseType: !3819, size: 64, offset: 960)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !566, file: !129, line: 659, baseType: !465, size: 64, offset: 1024)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !566, file: !129, line: 660, baseType: !970, size: 256, offset: 1088)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !566, file: !129, line: 662, baseType: !465, size: 64, offset: 1344)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !566, file: !129, line: 663, baseType: !465, size: 64, offset: 1408)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !566, file: !129, line: 665, baseType: !778, size: 128, offset: 1472)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !566, file: !129, line: 666, baseType: !361, size: 128, offset: 1600)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !566, file: !129, line: 675, baseType: !361, size: 128, offset: 1728)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !566, file: !129, line: 676, baseType: !361, size: 128, offset: 1856)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !566, file: !129, line: 677, baseType: !361, size: 128, offset: 1984)
!4069 = !DIDerivedType(tag: DW_TAG_member, scope: !566, file: !129, line: 678, baseType: !4070, size: 128, offset: 2112)
!4070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !566, file: !129, line: 678, size: 128, elements: !4071)
!4071 = !{!4072, !4073}
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !4070, file: !129, line: 679, baseType: !774, size: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !4070, file: !129, line: 680, baseType: !506, size: 128, align: 64)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !566, file: !129, line: 682, baseType: !882, size: 64, offset: 2240)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !566, file: !129, line: 683, baseType: !882, size: 64, offset: 2304)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !566, file: !129, line: 684, baseType: !950, size: 32, offset: 2368)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !566, file: !129, line: 685, baseType: !950, size: 32, offset: 2400)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !566, file: !129, line: 686, baseType: !950, size: 32, offset: 2432)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !566, file: !129, line: 688, baseType: !950, size: 32, offset: 2464)
!4080 = !DIDerivedType(tag: DW_TAG_member, scope: !566, file: !129, line: 690, baseType: !4081, size: 64, offset: 2496)
!4081 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !566, file: !129, line: 690, size: 64, elements: !4082)
!4082 = !{!4083, !4304}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !4081, file: !129, line: 691, baseType: !4084, size: 64)
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 64)
!4085 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4086)
!4086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !129, line: 1822, size: 2048, elements: !4087)
!4087 = !{!4088, !4089, !4093, !4097, !4101, !4102, !4103, !4107, !4120, !4121, !4128, !4132, !4133, !4137, !4138, !4142, !4147, !4148, !4152, !4156, !4264, !4268, !4269, !4273, !4274, !4278, !4282, !4287, !4291, !4295, !4299, !4303}
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4086, file: !129, line: 1823, baseType: !769, size: 64)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !4086, file: !129, line: 1824, baseType: !4090, size: 64, offset: 64)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 64)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{!667, !493, !667, !401}
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4086, file: !129, line: 1825, baseType: !4094, size: 64, offset: 128)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = !DISubroutineType(types: !4096)
!4096 = !{!448, !493, !417, !462, !898}
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4086, file: !129, line: 1826, baseType: !4098, size: 64, offset: 192)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 64)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{!448, !493, !357, !462, !898}
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !4086, file: !129, line: 1827, baseType: !1047, size: 64, offset: 256)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !4086, file: !129, line: 1828, baseType: !1047, size: 64, offset: 320)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !4086, file: !129, line: 1829, baseType: !4104, size: 64, offset: 384)
!4104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4105, size: 64)
!4105 = !DISubroutineType(types: !4106)
!4106 = !{!401, !1050, !626}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !4086, file: !129, line: 1830, baseType: !4108, size: 64, offset: 448)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 64)
!4109 = !DISubroutineType(types: !4110)
!4110 = !{!401, !493, !4111}
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !129, line: 1776, size: 128, elements: !4113)
!4113 = !{!4114, !4119}
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !4112, file: !129, line: 1777, baseType: !4115, size: 64)
!4115 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !129, line: 1773, baseType: !4116)
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 64)
!4117 = !DISubroutineType(types: !4118)
!4118 = !{!401, !4111, !357, !401, !667, !558, !7}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4112, file: !129, line: 1778, baseType: !667, size: 64, offset: 64)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !4086, file: !129, line: 1831, baseType: !4108, size: 64, offset: 512)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4086, file: !129, line: 1832, baseType: !4122, size: 64, offset: 576)
!4122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4123, size: 64)
!4123 = !DISubroutineType(types: !4124)
!4124 = !{!4125, !493, !4126}
!4125 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !318, line: 52, baseType: !7)
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4127, size: 64)
!4127 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !755, line: 27, flags: DIFlagFwdDecl)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !4086, file: !129, line: 1833, baseType: !4129, size: 64, offset: 640)
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 64)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{!340, !493, !7, !465}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4086, file: !129, line: 1834, baseType: !4129, size: 64, offset: 704)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4086, file: !129, line: 1835, baseType: !4134, size: 64, offset: 768)
!4134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4135, size: 64)
!4135 = !DISubroutineType(types: !4136)
!4136 = !{!401, !493, !2124}
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !4086, file: !129, line: 1836, baseType: !465, size: 64, offset: 832)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4086, file: !129, line: 1837, baseType: !4139, size: 64, offset: 896)
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4140, size: 64)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{!401, !565, !493}
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4086, file: !129, line: 1838, baseType: !4143, size: 64, offset: 960)
!4143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4144, size: 64)
!4144 = !DISubroutineType(types: !4145)
!4145 = !{!401, !493, !4146}
!4146 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !129, line: 1007, baseType: !341)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4086, file: !129, line: 1839, baseType: !4139, size: 64, offset: 1024)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !4086, file: !129, line: 1840, baseType: !4149, size: 64, offset: 1088)
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{!401, !493, !667, !667, !401}
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !4086, file: !129, line: 1841, baseType: !4153, size: 64, offset: 1152)
!4153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4154, size: 64)
!4154 = !DISubroutineType(types: !4155)
!4155 = !{!401, !401, !493, !401}
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4086, file: !129, line: 1842, baseType: !4157, size: 64, offset: 1216)
!4157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4158, size: 64)
!4158 = !DISubroutineType(types: !4159)
!4159 = !{!401, !493, !401, !4160}
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4161, size: 64)
!4161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !129, line: 1062, size: 1664, elements: !4162)
!4162 = !{!4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4194, !4195, !4196, !4209, !4240}
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !4161, file: !129, line: 1063, baseType: !4160, size: 64)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !4161, file: !129, line: 1064, baseType: !361, size: 128, offset: 64)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !4161, file: !129, line: 1065, baseType: !778, size: 128, offset: 192)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !4161, file: !129, line: 1066, baseType: !361, size: 128, offset: 320)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !4161, file: !129, line: 1069, baseType: !361, size: 128, offset: 448)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !4161, file: !129, line: 1072, baseType: !4146, size: 64, offset: 576)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !4161, file: !129, line: 1073, baseType: !7, size: 32, offset: 640)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !4161, file: !129, line: 1074, baseType: !313, size: 8, offset: 672)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !4161, file: !129, line: 1075, baseType: !7, size: 32, offset: 704)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !4161, file: !129, line: 1076, baseType: !401, size: 32, offset: 736)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !4161, file: !129, line: 1077, baseType: !1370, size: 128, offset: 768)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !4161, file: !129, line: 1078, baseType: !493, size: 64, offset: 896)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !4161, file: !129, line: 1079, baseType: !667, size: 64, offset: 960)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !4161, file: !129, line: 1080, baseType: !667, size: 64, offset: 1024)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !4161, file: !129, line: 1082, baseType: !4178, size: 64, offset: 1088)
!4178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4179, size: 64)
!4179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !129, line: 1314, size: 320, elements: !4180)
!4180 = !{!4181, !4189, !4190, !4191, !4192, !4193}
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !4179, file: !129, line: 1315, baseType: !4182)
!4182 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !4183, line: 20, baseType: !4184)
!4183 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!4184 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !4183, line: 11, elements: !4185)
!4185 = !{!4186}
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !4184, file: !4183, line: 12, baseType: !4187)
!4187 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !387, line: 33, baseType: !4188)
!4188 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 31, elements: !389)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4179, file: !129, line: 1316, baseType: !401, size: 32)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !4179, file: !129, line: 1317, baseType: !401, size: 32, offset: 32)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !4179, file: !129, line: 1318, baseType: !4178, size: 64, offset: 64)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !4179, file: !129, line: 1319, baseType: !493, size: 64, offset: 128)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !4179, file: !129, line: 1320, baseType: !506, size: 128, align: 64, offset: 192)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !4161, file: !129, line: 1084, baseType: !465, size: 64, offset: 1152)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !4161, file: !129, line: 1085, baseType: !465, size: 64, offset: 1216)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !4161, file: !129, line: 1087, baseType: !4197, size: 64, offset: 1280)
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4198, size: 64)
!4198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4199)
!4199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !129, line: 1011, size: 128, elements: !4200)
!4200 = !{!4201, !4205}
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !4199, file: !129, line: 1012, baseType: !4202, size: 64)
!4202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4203, size: 64)
!4203 = !DISubroutineType(types: !4204)
!4204 = !{null, !4160, !4160}
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !4199, file: !129, line: 1013, baseType: !4206, size: 64, offset: 64)
!4206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4207, size: 64)
!4207 = !DISubroutineType(types: !4208)
!4208 = !{null, !4160}
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !4161, file: !129, line: 1088, baseType: !4210, size: 64, offset: 1344)
!4210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4211, size: 64)
!4211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4212)
!4212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !129, line: 1016, size: 512, elements: !4213)
!4213 = !{!4214, !4218, !4222, !4223, !4227, !4231, !4235, !4239}
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4212, file: !129, line: 1017, baseType: !4215, size: 64)
!4215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4216, size: 64)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{!4146, !4146}
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4212, file: !129, line: 1018, baseType: !4219, size: 64, offset: 64)
!4219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4220, size: 64)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{null, !4146}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4212, file: !129, line: 1019, baseType: !4206, size: 64, offset: 128)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4212, file: !129, line: 1020, baseType: !4224, size: 64, offset: 192)
!4224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4225, size: 64)
!4225 = !DISubroutineType(types: !4226)
!4226 = !{!401, !4160, !401}
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4212, file: !129, line: 1021, baseType: !4228, size: 64, offset: 256)
!4228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4229, size: 64)
!4229 = !DISubroutineType(types: !4230)
!4230 = !{!626, !4160}
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4212, file: !129, line: 1022, baseType: !4232, size: 64, offset: 320)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = !DISubroutineType(types: !4234)
!4234 = !{!401, !4160, !401, !365}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4212, file: !129, line: 1023, baseType: !4236, size: 64, offset: 384)
!4236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4237, size: 64)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{null, !4160, !1024}
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4212, file: !129, line: 1024, baseType: !4228, size: 64, offset: 448)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !4161, file: !129, line: 1097, baseType: !4241, size: 256, offset: 1408)
!4241 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4161, file: !129, line: 1089, size: 256, elements: !4242)
!4242 = !{!4243, !4252, !4258}
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4241, file: !129, line: 1090, baseType: !4244, size: 256)
!4244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4245, line: 10, size: 256, elements: !4246)
!4245 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4246 = !{!4247, !4248, !4251}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4244, file: !4245, line: 11, baseType: !303, size: 32)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4244, file: !4245, line: 12, baseType: !4249, size: 64, offset: 64)
!4249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4250, size: 64)
!4250 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4245, line: 5, flags: DIFlagFwdDecl)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4244, file: !4245, line: 13, baseType: !361, size: 128, offset: 128)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4241, file: !129, line: 1091, baseType: !4253, size: 64)
!4253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4245, line: 17, size: 64, elements: !4254)
!4254 = !{!4255}
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4253, file: !4245, line: 18, baseType: !4256, size: 64)
!4256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4257, size: 64)
!4257 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4245, line: 16, flags: DIFlagFwdDecl)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4241, file: !129, line: 1096, baseType: !4259, size: 192)
!4259 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4241, file: !129, line: 1092, size: 192, elements: !4260)
!4260 = !{!4261, !4262, !4263}
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4259, file: !129, line: 1093, baseType: !361, size: 128)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4259, file: !129, line: 1094, baseType: !401, size: 32, offset: 128)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4259, file: !129, line: 1095, baseType: !7, size: 32, offset: 160)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !4086, file: !129, line: 1843, baseType: !4265, size: 64, offset: 1280)
!4265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4266, size: 64)
!4266 = !DISubroutineType(types: !4267)
!4267 = !{!448, !493, !923, !401, !462, !898, !401}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !4086, file: !129, line: 1844, baseType: !2244, size: 64, offset: 1344)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !4086, file: !129, line: 1845, baseType: !4270, size: 64, offset: 1408)
!4270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4271, size: 64)
!4271 = !DISubroutineType(types: !4272)
!4272 = !{!401, !401}
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !4086, file: !129, line: 1846, baseType: !4157, size: 64, offset: 1472)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !4086, file: !129, line: 1847, baseType: !4275, size: 64, offset: 1536)
!4275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4276, size: 64)
!4276 = !DISubroutineType(types: !4277)
!4277 = !{!448, !3351, !493, !898, !462, !7}
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !4086, file: !129, line: 1848, baseType: !4279, size: 64, offset: 1600)
!4279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4280, size: 64)
!4280 = !DISubroutineType(types: !4281)
!4281 = !{!448, !493, !898, !3351, !462, !7}
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !4086, file: !129, line: 1849, baseType: !4283, size: 64, offset: 1664)
!4283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4284, size: 64)
!4284 = !DISubroutineType(types: !4285)
!4285 = !{!401, !493, !340, !4286, !1024}
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !4086, file: !129, line: 1850, baseType: !4288, size: 64, offset: 1728)
!4288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4289, size: 64)
!4289 = !DISubroutineType(types: !4290)
!4290 = !{!340, !493, !401, !667, !667}
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !4086, file: !129, line: 1852, baseType: !4292, size: 64, offset: 1792)
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4293, size: 64)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{null, !864, !493}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !4086, file: !129, line: 1856, baseType: !4296, size: 64, offset: 1856)
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = !DISubroutineType(types: !4298)
!4298 = !{!448, !493, !667, !493, !667, !462, !7}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !4086, file: !129, line: 1858, baseType: !4300, size: 64, offset: 1920)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = !DISubroutineType(types: !4302)
!4302 = !{!667, !493, !667, !493, !667, !667, !7}
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !4086, file: !129, line: 1861, baseType: !4149, size: 64, offset: 1984)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !4081, file: !129, line: 692, baseType: !803, size: 64)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !566, file: !129, line: 694, baseType: !4306, size: 64, offset: 2560)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4307, size: 64)
!4307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !129, line: 1100, size: 384, elements: !4308)
!4308 = !{!4309, !4310, !4311, !4312}
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4307, file: !129, line: 1101, baseType: !375)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4307, file: !129, line: 1102, baseType: !361, size: 128)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4307, file: !129, line: 1103, baseType: !361, size: 128, offset: 128)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4307, file: !129, line: 1104, baseType: !361, size: 128, offset: 256)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !566, file: !129, line: 695, baseType: !937, size: 1216, align: 64, offset: 2624)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !566, file: !129, line: 696, baseType: !361, size: 128, offset: 3840)
!4315 = !DIDerivedType(tag: DW_TAG_member, scope: !566, file: !129, line: 697, baseType: !4316, size: 64, offset: 3968)
!4316 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !566, file: !129, line: 697, size: 64, elements: !4317)
!4317 = !{!4318, !4319, !4320, !4323, !4324}
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4316, file: !129, line: 698, baseType: !3351, size: 64)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4316, file: !129, line: 699, baseType: !1166, size: 64)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4316, file: !129, line: 700, baseType: !4321, size: 64)
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!4322 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !129, line: 700, flags: DIFlagFwdDecl)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4316, file: !129, line: 701, baseType: !417, size: 64)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4316, file: !129, line: 702, baseType: !7, size: 32)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !566, file: !129, line: 705, baseType: !305, size: 32, offset: 4032)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !566, file: !129, line: 708, baseType: !305, size: 32, offset: 4064)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !566, file: !129, line: 709, baseType: !3923, size: 64, offset: 4096)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !566, file: !129, line: 720, baseType: !341, size: 64, offset: 4160)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !524, file: !521, line: 98, baseType: !4330, size: 256, offset: 448)
!4330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 256, elements: !1259)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !524, file: !521, line: 101, baseType: !4332, size: 32, offset: 704)
!4332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4333, line: 25, size: 32, elements: !4334)
!4333 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4334 = !{!4335}
!4335 = !DIDerivedType(tag: DW_TAG_member, scope: !4332, file: !4333, line: 26, baseType: !4336, size: 32)
!4336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4332, file: !4333, line: 26, size: 32, elements: !4337)
!4337 = !{!4338}
!4338 = !DIDerivedType(tag: DW_TAG_member, scope: !4336, file: !4333, line: 30, baseType: !4339, size: 32)
!4339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4336, file: !4333, line: 30, size: 32, elements: !4340)
!4340 = !{!4341, !4342}
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4339, file: !4333, line: 31, baseType: !375)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4339, file: !4333, line: 32, baseType: !401, size: 32)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !524, file: !521, line: 102, baseType: !3938, size: 64, offset: 768)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !524, file: !521, line: 103, baseType: !735, size: 64, offset: 832)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !524, file: !521, line: 104, baseType: !465, size: 64, offset: 896)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !524, file: !521, line: 105, baseType: !341, size: 64, offset: 960)
!4347 = !DIDerivedType(tag: DW_TAG_member, scope: !524, file: !521, line: 107, baseType: !4348, size: 128, offset: 1024)
!4348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !524, file: !521, line: 107, size: 128, elements: !4349)
!4349 = !{!4350, !4351}
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4348, file: !521, line: 108, baseType: !361, size: 128)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4348, file: !521, line: 109, baseType: !4352, size: 64)
!4352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !524, file: !521, line: 111, baseType: !361, size: 128, offset: 1152)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !524, file: !521, line: 112, baseType: !361, size: 128, offset: 1280)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !524, file: !521, line: 120, baseType: !4356, size: 128, offset: 1408)
!4356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !524, file: !521, line: 116, size: 128, elements: !4357)
!4357 = !{!4358, !4359, !4360}
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4356, file: !521, line: 117, baseType: !778, size: 128)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4356, file: !521, line: 118, baseType: !538, size: 128)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4356, file: !521, line: 119, baseType: !506, size: 128, align: 64)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !494, file: !129, line: 922, baseType: !565, size: 64, offset: 256)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !494, file: !129, line: 923, baseType: !4084, size: 64, offset: 320)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !494, file: !129, line: 929, baseType: !375, offset: 384)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !494, file: !129, line: 930, baseType: !128, size: 32, offset: 384)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !494, file: !129, line: 931, baseType: !880, size: 64, offset: 448)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !494, file: !129, line: 932, baseType: !7, size: 32, offset: 512)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !494, file: !129, line: 933, baseType: !1391, size: 32, offset: 544)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !494, file: !129, line: 934, baseType: !876, size: 192, offset: 576)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !494, file: !129, line: 935, baseType: !667, size: 64, offset: 768)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !494, file: !129, line: 936, baseType: !4371, size: 192, offset: 832)
!4371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !129, line: 885, size: 192, elements: !4372)
!4372 = !{!4373, !4374, !4375, !4376, !4377, !4378}
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4371, file: !129, line: 886, baseType: !4182)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4371, file: !129, line: 887, baseType: !2597, size: 64)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !4371, file: !129, line: 888, baseType: !137, size: 32, offset: 64)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4371, file: !129, line: 889, baseType: !571, size: 32, offset: 96)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !4371, file: !129, line: 889, baseType: !571, size: 32, offset: 128)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !4371, file: !129, line: 890, baseType: !401, size: 32, offset: 160)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !494, file: !129, line: 937, baseType: !2667, size: 64, offset: 1024)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !494, file: !129, line: 938, baseType: !4381, size: 256, offset: 1088)
!4381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !129, line: 896, size: 256, elements: !4382)
!4382 = !{!4383, !4384, !4385, !4386, !4387, !4388}
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4381, file: !129, line: 897, baseType: !465, size: 64)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4381, file: !129, line: 898, baseType: !7, size: 32, offset: 64)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !4381, file: !129, line: 899, baseType: !7, size: 32, offset: 96)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4381, file: !129, line: 902, baseType: !7, size: 32, offset: 128)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !4381, file: !129, line: 903, baseType: !7, size: 32, offset: 160)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !4381, file: !129, line: 904, baseType: !667, size: 64, offset: 192)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !494, file: !129, line: 940, baseType: !558, size: 64, offset: 1344)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !494, file: !129, line: 945, baseType: !341, size: 64, offset: 1408)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !494, file: !129, line: 949, baseType: !361, size: 128, offset: 1472)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !494, file: !129, line: 950, baseType: !361, size: 128, offset: 1600)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !494, file: !129, line: 952, baseType: !936, size: 64, offset: 1728)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !494, file: !129, line: 953, baseType: !2053, size: 32, offset: 1792)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !494, file: !129, line: 954, baseType: !2053, size: 32, offset: 1824)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !484, file: !442, line: 174, baseType: !490, size: 64, offset: 320)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !484, file: !442, line: 176, baseType: !4398, size: 64, offset: 384)
!4398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4399, size: 64)
!4399 = !DISubroutineType(types: !4400)
!4400 = !{!401, !493, !368, !483, !2124}
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !472, file: !442, line: 90, baseType: !467, size: 64, offset: 192)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !472, file: !442, line: 91, baseType: !4403, size: 64, offset: 256)
!4403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !432, file: !354, line: 143, baseType: !4405, size: 64, offset: 256)
!4405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4406, size: 64)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!4408, !368}
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4409, size: 64)
!4409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4410)
!4410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !146, line: 39, size: 384, elements: !4411)
!4411 = !{!4412, !4413, !4417, !4421, !4427, !4431}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4410, file: !146, line: 40, baseType: !145, size: 32)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4410, file: !146, line: 41, baseType: !4414, size: 64, offset: 64)
!4414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4415, size: 64)
!4415 = !DISubroutineType(types: !4416)
!4416 = !{!626}
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4410, file: !146, line: 42, baseType: !4418, size: 64, offset: 128)
!4418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4419, size: 64)
!4419 = !DISubroutineType(types: !4420)
!4420 = !{!341}
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4410, file: !146, line: 43, baseType: !4422, size: 64, offset: 192)
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = !DISubroutineType(types: !4424)
!4424 = !{!3380, !4425}
!4425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4426, size: 64)
!4426 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !146, line: 19, flags: DIFlagFwdDecl)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4410, file: !146, line: 44, baseType: !4428, size: 64, offset: 256)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4429, size: 64)
!4429 = !DISubroutineType(types: !4430)
!4430 = !{!3380}
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4410, file: !146, line: 45, baseType: !604, size: 64, offset: 320)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !432, file: !354, line: 144, baseType: !4433, size: 64, offset: 320)
!4433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4434, size: 64)
!4434 = !DISubroutineType(types: !4435)
!4435 = !{!3380, !368}
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !432, file: !354, line: 145, baseType: !4437, size: 64, offset: 384)
!4437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4438, size: 64)
!4438 = !DISubroutineType(types: !4439)
!4439 = !{null, !368, !2941, !2942}
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !353, file: !354, line: 70, baseType: !4441, size: 64, offset: 384)
!4441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4442, size: 64)
!4442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !755, line: 123, size: 1024, elements: !4443)
!4443 = !{!4444, !4445, !4446, !4447, !4448, !4449, !4450, !4451, !4560, !4561, !4562, !4563, !4564}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4442, file: !755, line: 124, baseType: !950, size: 32)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4442, file: !755, line: 125, baseType: !950, size: 32, offset: 32)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4442, file: !755, line: 135, baseType: !4441, size: 64, offset: 64)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4442, file: !755, line: 136, baseType: !357, size: 64, offset: 128)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4442, file: !755, line: 138, baseType: !963, size: 192, align: 64, offset: 192)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4442, file: !755, line: 140, baseType: !3380, size: 64, offset: 384)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4442, file: !755, line: 141, baseType: !7, size: 32, offset: 448)
!4451 = !DIDerivedType(tag: DW_TAG_member, scope: !4442, file: !755, line: 142, baseType: !4452, size: 256, offset: 512)
!4452 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4442, file: !755, line: 142, size: 256, elements: !4453)
!4453 = !{!4454, !4500, !4504}
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4452, file: !755, line: 143, baseType: !4455, size: 192)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !755, line: 91, size: 192, elements: !4456)
!4456 = !{!4457, !4458, !4459}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4455, file: !755, line: 92, baseType: !465, size: 64)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4455, file: !755, line: 94, baseType: !959, size: 64, offset: 64)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4455, file: !755, line: 100, baseType: !4460, size: 64, offset: 128)
!4460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4461, size: 64)
!4461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !755, line: 180, size: 704, elements: !4462)
!4462 = !{!4463, !4464, !4465, !4472, !4473, !4474, !4498, !4499}
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4461, file: !755, line: 182, baseType: !4441, size: 64)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4461, file: !755, line: 183, baseType: !7, size: 32, offset: 64)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4461, file: !755, line: 186, baseType: !4466, size: 192, offset: 128)
!4466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !4467, line: 19, size: 192, elements: !4468)
!4467 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!4468 = !{!4469, !4470, !4471}
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !4466, file: !4467, line: 20, baseType: !941, size: 128)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !4466, file: !4467, line: 21, baseType: !7, size: 32, offset: 128)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !4466, file: !4467, line: 22, baseType: !7, size: 32, offset: 160)
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4461, file: !755, line: 187, baseType: !303, size: 32, offset: 320)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4461, file: !755, line: 188, baseType: !303, size: 32, offset: 352)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4461, file: !755, line: 189, baseType: !4475, size: 64, offset: 384)
!4475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4476, size: 64)
!4476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !755, line: 168, size: 320, elements: !4477)
!4477 = !{!4478, !4482, !4486, !4490, !4494}
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4476, file: !755, line: 169, baseType: !4479, size: 64)
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4480, size: 64)
!4480 = !DISubroutineType(types: !4481)
!4481 = !{!401, !864, !4460}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4476, file: !755, line: 171, baseType: !4483, size: 64, offset: 64)
!4483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4484, size: 64)
!4484 = !DISubroutineType(types: !4485)
!4485 = !{!401, !4441, !357, !457}
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4476, file: !755, line: 173, baseType: !4487, size: 64, offset: 128)
!4487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4488, size: 64)
!4488 = !DISubroutineType(types: !4489)
!4489 = !{!401, !4441}
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4476, file: !755, line: 174, baseType: !4491, size: 64, offset: 192)
!4491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4492, size: 64)
!4492 = !DISubroutineType(types: !4493)
!4493 = !{!401, !4441, !4441, !357}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4476, file: !755, line: 176, baseType: !4495, size: 64, offset: 256)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{!401, !864, !4441, !4460}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4461, file: !755, line: 192, baseType: !361, size: 128, offset: 448)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4461, file: !755, line: 194, baseType: !1370, size: 128, offset: 576)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4452, file: !755, line: 144, baseType: !4501, size: 64)
!4501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !755, line: 103, size: 64, elements: !4502)
!4502 = !{!4503}
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4501, file: !755, line: 104, baseType: !4441, size: 64)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4452, file: !755, line: 145, baseType: !4505, size: 256)
!4505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !755, line: 107, size: 256, elements: !4506)
!4506 = !{!4507, !4555, !4558, !4559}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4505, file: !755, line: 108, baseType: !4508, size: 64)
!4508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4509, size: 64)
!4509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4510)
!4510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !755, line: 217, size: 768, elements: !4511)
!4511 = !{!4512, !4532, !4536, !4537, !4538, !4539, !4540, !4544, !4545, !4546, !4547, !4551}
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4510, file: !755, line: 222, baseType: !4513, size: 64)
!4513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4514, size: 64)
!4514 = !DISubroutineType(types: !4515)
!4515 = !{!401, !4516}
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4517, size: 64)
!4517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !755, line: 197, size: 1088, elements: !4518)
!4518 = !{!4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4517, file: !755, line: 199, baseType: !4441, size: 64)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4517, file: !755, line: 200, baseType: !493, size: 64, offset: 64)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4517, file: !755, line: 201, baseType: !864, size: 64, offset: 128)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4517, file: !755, line: 202, baseType: !341, size: 64, offset: 192)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4517, file: !755, line: 205, baseType: !876, size: 192, offset: 256)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4517, file: !755, line: 206, baseType: !876, size: 192, offset: 448)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4517, file: !755, line: 207, baseType: !401, size: 32, offset: 640)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4517, file: !755, line: 208, baseType: !361, size: 128, offset: 704)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4517, file: !755, line: 209, baseType: !417, size: 64, offset: 832)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4517, file: !755, line: 211, baseType: !462, size: 64, offset: 896)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4517, file: !755, line: 212, baseType: !626, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4517, file: !755, line: 213, baseType: !626, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4517, file: !755, line: 214, baseType: !2152, size: 64, offset: 1024)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4510, file: !755, line: 223, baseType: !4533, size: 64, offset: 64)
!4533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4534, size: 64)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{null, !4516}
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4510, file: !755, line: 236, baseType: !908, size: 64, offset: 128)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4510, file: !755, line: 238, baseType: !895, size: 64, offset: 192)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4510, file: !755, line: 239, baseType: !904, size: 64, offset: 256)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4510, file: !755, line: 240, baseType: !900, size: 64, offset: 320)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4510, file: !755, line: 242, baseType: !4541, size: 64, offset: 384)
!4541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4542, size: 64)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{!448, !4516, !417, !462, !667}
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4510, file: !755, line: 252, baseType: !462, size: 64, offset: 448)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4510, file: !755, line: 259, baseType: !626, size: 8, offset: 512)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4510, file: !755, line: 260, baseType: !4541, size: 64, offset: 576)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4510, file: !755, line: 263, baseType: !4548, size: 64, offset: 640)
!4548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4549, size: 64)
!4549 = !DISubroutineType(types: !4550)
!4550 = !{!4125, !4516, !4126}
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4510, file: !755, line: 266, baseType: !4552, size: 64, offset: 704)
!4552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4553, size: 64)
!4553 = !DISubroutineType(types: !4554)
!4554 = !{!401, !4516, !2124}
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4505, file: !755, line: 109, baseType: !4556, size: 64, offset: 64)
!4556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4557, size: 64)
!4557 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !755, line: 31, flags: DIFlagFwdDecl)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4505, file: !755, line: 110, baseType: !667, size: 64, offset: 128)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4505, file: !755, line: 111, baseType: !4441, size: 64, offset: 192)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4442, file: !755, line: 148, baseType: !341, size: 64, offset: 768)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4442, file: !755, line: 154, baseType: !558, size: 64, offset: 832)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4442, file: !755, line: 156, baseType: !320, size: 16, offset: 896)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4442, file: !755, line: 157, baseType: !457, size: 16, offset: 912)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4442, file: !755, line: 158, baseType: !4565, size: 64, offset: 960)
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4566, size: 64)
!4566 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !755, line: 32, flags: DIFlagFwdDecl)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !353, file: !354, line: 71, baseType: !1750, size: 32, offset: 448)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !353, file: !354, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !353, file: !354, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !353, file: !354, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !353, file: !354, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !353, file: !354, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !350, file: !158, line: 463, baseType: !349, size: 64, offset: 512)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !350, file: !158, line: 465, baseType: !4575, size: 64, offset: 576)
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 64)
!4576 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !158, line: 36, flags: DIFlagFwdDecl)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !350, file: !158, line: 467, baseType: !357, size: 64, offset: 640)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !350, file: !158, line: 468, baseType: !4579, size: 64, offset: 704)
!4579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4580, size: 64)
!4580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4581)
!4581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !158, line: 87, size: 384, elements: !4582)
!4582 = !{!4583, !4584, !4585, !4589, !4593, !4597}
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4581, file: !158, line: 88, baseType: !357, size: 64)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4581, file: !158, line: 89, baseType: !469, size: 64, offset: 64)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4581, file: !158, line: 90, baseType: !4586, size: 64, offset: 128)
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4587, size: 64)
!4587 = !DISubroutineType(types: !4588)
!4588 = !{!401, !349, !412}
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4581, file: !158, line: 91, baseType: !4590, size: 64, offset: 192)
!4590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4591, size: 64)
!4591 = !DISubroutineType(types: !4592)
!4592 = !{!417, !349, !1456, !2941, !2942}
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4581, file: !158, line: 93, baseType: !4594, size: 64, offset: 256)
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4595, size: 64)
!4595 = !DISubroutineType(types: !4596)
!4596 = !{null, !349}
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4581, file: !158, line: 95, baseType: !4598, size: 64, offset: 320)
!4598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4599, size: 64)
!4599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4600)
!4600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !92, line: 278, size: 1472, elements: !4601)
!4601 = !{!4602, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627}
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4600, file: !92, line: 279, baseType: !4603, size: 64)
!4603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4604, size: 64)
!4604 = !DISubroutineType(types: !4605)
!4605 = !{!401, !349}
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4600, file: !92, line: 280, baseType: !4594, size: 64, offset: 64)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4600, file: !92, line: 281, baseType: !4603, size: 64, offset: 128)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4600, file: !92, line: 282, baseType: !4603, size: 64, offset: 192)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4600, file: !92, line: 283, baseType: !4603, size: 64, offset: 256)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4600, file: !92, line: 284, baseType: !4603, size: 64, offset: 320)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4600, file: !92, line: 285, baseType: !4603, size: 64, offset: 384)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4600, file: !92, line: 286, baseType: !4603, size: 64, offset: 448)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4600, file: !92, line: 287, baseType: !4603, size: 64, offset: 512)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4600, file: !92, line: 288, baseType: !4603, size: 64, offset: 576)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4600, file: !92, line: 289, baseType: !4603, size: 64, offset: 640)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4600, file: !92, line: 290, baseType: !4603, size: 64, offset: 704)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4600, file: !92, line: 291, baseType: !4603, size: 64, offset: 768)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4600, file: !92, line: 292, baseType: !4603, size: 64, offset: 832)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4600, file: !92, line: 293, baseType: !4603, size: 64, offset: 896)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4600, file: !92, line: 294, baseType: !4603, size: 64, offset: 960)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4600, file: !92, line: 295, baseType: !4603, size: 64, offset: 1024)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4600, file: !92, line: 296, baseType: !4603, size: 64, offset: 1088)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4600, file: !92, line: 297, baseType: !4603, size: 64, offset: 1152)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4600, file: !92, line: 298, baseType: !4603, size: 64, offset: 1216)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4600, file: !92, line: 299, baseType: !4603, size: 64, offset: 1280)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4600, file: !92, line: 300, baseType: !4603, size: 64, offset: 1344)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4600, file: !92, line: 301, baseType: !4603, size: 64, offset: 1408)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !350, file: !158, line: 470, baseType: !4629, size: 64, offset: 768)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4630, size: 64)
!4630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4631, line: 82, size: 1408, elements: !4632)
!4631 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4632 = !{!4633, !4634, !4635, !4636, !4637, !4638, !4639, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709, !4710, !4714, !4717, !4718}
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4630, file: !4631, line: 83, baseType: !357, size: 64)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4630, file: !4631, line: 84, baseType: !357, size: 64, offset: 64)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4630, file: !4631, line: 85, baseType: !349, size: 64, offset: 128)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4630, file: !4631, line: 86, baseType: !469, size: 64, offset: 192)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4630, file: !4631, line: 87, baseType: !469, size: 64, offset: 256)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4630, file: !4631, line: 88, baseType: !469, size: 64, offset: 320)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4630, file: !4631, line: 90, baseType: !4640, size: 64, offset: 384)
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4641, size: 64)
!4641 = !DISubroutineType(types: !4642)
!4642 = !{!401, !349, !4643}
!4643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 64)
!4644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !152, line: 95, size: 1152, elements: !4645)
!4645 = !{!4646, !4647, !4648, !4649, !4650, !4651, !4652, !4665, !4678, !4679, !4680, !4681, !4682, !4690, !4691, !4692, !4693, !4694, !4695}
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4644, file: !152, line: 96, baseType: !357, size: 64)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4644, file: !152, line: 97, baseType: !4629, size: 64, offset: 64)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4644, file: !152, line: 99, baseType: !769, size: 64, offset: 128)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4644, file: !152, line: 100, baseType: !357, size: 64, offset: 192)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4644, file: !152, line: 102, baseType: !626, size: 8, offset: 256)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4644, file: !152, line: 103, baseType: !151, size: 32, offset: 288)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4644, file: !152, line: 105, baseType: !4653, size: 64, offset: 320)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4654, size: 64)
!4654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4655)
!4655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4656, line: 262, size: 1600, elements: !4657)
!4656 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4657 = !{!4658, !4659, !4660, !4664}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4655, file: !4656, line: 263, baseType: !1258, size: 256)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4655, file: !4656, line: 264, baseType: !1258, size: 256, offset: 256)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4655, file: !4656, line: 265, baseType: !4661, size: 1024, offset: 512)
!4661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !359, size: 1024, elements: !4662)
!4662 = !{!4663}
!4663 = !DISubrange(count: 128)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4655, file: !4656, line: 266, baseType: !3380, size: 64, offset: 1536)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4644, file: !152, line: 106, baseType: !4666, size: 64, offset: 384)
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4667, size: 64)
!4667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4668)
!4668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4656, line: 210, size: 256, elements: !4669)
!4669 = !{!4670, !4674, !4676, !4677}
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4668, file: !4656, line: 211, baseType: !4671, size: 72)
!4671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !312, size: 72, elements: !4672)
!4672 = !{!4673}
!4673 = !DISubrange(count: 9)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4668, file: !4656, line: 212, baseType: !4675, size: 64, offset: 128)
!4675 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4656, line: 14, baseType: !465)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4668, file: !4656, line: 213, baseType: !305, size: 32, offset: 192)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4668, file: !4656, line: 214, baseType: !305, size: 32, offset: 224)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4644, file: !152, line: 108, baseType: !4603, size: 64, offset: 448)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4644, file: !152, line: 109, baseType: !4594, size: 64, offset: 512)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4644, file: !152, line: 110, baseType: !4603, size: 64, offset: 576)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4644, file: !152, line: 111, baseType: !4594, size: 64, offset: 640)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4644, file: !152, line: 112, baseType: !4683, size: 64, offset: 704)
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4684, size: 64)
!4684 = !DISubroutineType(types: !4685)
!4685 = !{!401, !349, !4686}
!4686 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !92, line: 52, baseType: !4687)
!4687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !92, line: 50, size: 32, elements: !4688)
!4688 = !{!4689}
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4687, file: !92, line: 51, baseType: !401, size: 32)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4644, file: !152, line: 113, baseType: !4603, size: 64, offset: 768)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4644, file: !152, line: 114, baseType: !469, size: 64, offset: 832)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4644, file: !152, line: 115, baseType: !469, size: 64, offset: 896)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4644, file: !152, line: 117, baseType: !4598, size: 64, offset: 960)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4644, file: !152, line: 118, baseType: !4594, size: 64, offset: 1024)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4644, file: !152, line: 120, baseType: !4696, size: 64, offset: 1088)
!4696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4697, size: 64)
!4697 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !152, line: 120, flags: DIFlagFwdDecl)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4630, file: !4631, line: 91, baseType: !4586, size: 64, offset: 448)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4630, file: !4631, line: 92, baseType: !4603, size: 64, offset: 512)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4630, file: !4631, line: 93, baseType: !4594, size: 64, offset: 576)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4630, file: !4631, line: 94, baseType: !4603, size: 64, offset: 640)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4630, file: !4631, line: 95, baseType: !4594, size: 64, offset: 704)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4630, file: !4631, line: 97, baseType: !4603, size: 64, offset: 768)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4630, file: !4631, line: 98, baseType: !4603, size: 64, offset: 832)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4630, file: !4631, line: 100, baseType: !4683, size: 64, offset: 896)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4630, file: !4631, line: 101, baseType: !4603, size: 64, offset: 960)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4630, file: !4631, line: 103, baseType: !4603, size: 64, offset: 1024)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4630, file: !4631, line: 105, baseType: !4603, size: 64, offset: 1088)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4630, file: !4631, line: 107, baseType: !4598, size: 64, offset: 1152)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4630, file: !4631, line: 109, baseType: !4711, size: 64, offset: 1216)
!4711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4712, size: 64)
!4712 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4713)
!4713 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4631, line: 109, flags: DIFlagFwdDecl)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4630, file: !4631, line: 111, baseType: !4715, size: 64, offset: 1280)
!4715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4716, size: 64)
!4716 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4631, line: 111, flags: DIFlagFwdDecl)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4630, file: !4631, line: 112, baseType: !784, offset: 1344)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4630, file: !4631, line: 114, baseType: !626, size: 8, offset: 1344)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !350, file: !158, line: 471, baseType: !4643, size: 64, offset: 832)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !350, file: !158, line: 473, baseType: !341, size: 64, offset: 896)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !350, file: !158, line: 475, baseType: !341, size: 64, offset: 960)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !350, file: !158, line: 480, baseType: !876, size: 192, offset: 1024)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !350, file: !158, line: 484, baseType: !4724, size: 576, offset: 1216)
!4724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !158, line: 361, size: 576, elements: !4725)
!4725 = !{!4726, !4727, !4728, !4729, !4730, !4731}
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4724, file: !158, line: 362, baseType: !361, size: 128)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4724, file: !158, line: 363, baseType: !361, size: 128, offset: 128)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4724, file: !158, line: 364, baseType: !361, size: 128, offset: 256)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4724, file: !158, line: 365, baseType: !361, size: 128, offset: 384)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4724, file: !158, line: 366, baseType: !626, size: 8, offset: 512)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4724, file: !158, line: 367, baseType: !157, size: 32, offset: 544)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !350, file: !158, line: 485, baseType: !4733, size: 2304, offset: 1792)
!4733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !92, line: 565, size: 2304, elements: !4734)
!4734 = !{!4735, !4736, !4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745, !4746, !4747, !4748, !4749, !4750, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4793, !4794, !4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807, !4808, !4809, !4819, !4823}
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4733, file: !92, line: 566, baseType: !4686, size: 32)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4733, file: !92, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4733, file: !92, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4733, file: !92, line: 569, baseType: !626, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4733, file: !92, line: 570, baseType: !626, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4733, file: !92, line: 571, baseType: !626, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4733, file: !92, line: 572, baseType: !626, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4733, file: !92, line: 573, baseType: !626, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4733, file: !92, line: 574, baseType: !626, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4733, file: !92, line: 575, baseType: !626, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4733, file: !92, line: 576, baseType: !626, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4733, file: !92, line: 577, baseType: !303, size: 32, offset: 64)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4733, file: !92, line: 578, baseType: !375, offset: 96)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4733, file: !92, line: 580, baseType: !361, size: 128, offset: 128)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4733, file: !92, line: 581, baseType: !2622, size: 192, offset: 256)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4733, file: !92, line: 582, baseType: !4751, size: 64, offset: 448)
!4751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4752, size: 64)
!4752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4753, line: 43, size: 1472, elements: !4754)
!4753 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4754 = !{!4755, !4756, !4757, !4758, !4759, !4762, !4763, !4764, !4765, !4766, !4767, !4768, !4769, !4770, !4771, !4772, !4773, !4774, !4775, !4776}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4752, file: !4753, line: 44, baseType: !357, size: 64)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4752, file: !4753, line: 45, baseType: !401, size: 32, offset: 64)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4752, file: !4753, line: 46, baseType: !361, size: 128, offset: 128)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4752, file: !4753, line: 47, baseType: !375, offset: 256)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4752, file: !4753, line: 48, baseType: !4760, size: 64, offset: 256)
!4760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4761, size: 64)
!4761 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !92, line: 533, flags: DIFlagFwdDecl)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4752, file: !4753, line: 49, baseType: !1800, size: 320, offset: 320)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4752, file: !4753, line: 50, baseType: !465, size: 64, offset: 640)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4752, file: !4753, line: 51, baseType: !2429, size: 64, offset: 704)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4752, file: !4753, line: 52, baseType: !2429, size: 64, offset: 768)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4752, file: !4753, line: 53, baseType: !2429, size: 64, offset: 832)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4752, file: !4753, line: 54, baseType: !2429, size: 64, offset: 896)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4752, file: !4753, line: 55, baseType: !2429, size: 64, offset: 960)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4752, file: !4753, line: 56, baseType: !465, size: 64, offset: 1024)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4752, file: !4753, line: 57, baseType: !465, size: 64, offset: 1088)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4752, file: !4753, line: 58, baseType: !465, size: 64, offset: 1152)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4752, file: !4753, line: 59, baseType: !465, size: 64, offset: 1216)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4752, file: !4753, line: 60, baseType: !465, size: 64, offset: 1280)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4752, file: !4753, line: 61, baseType: !349, size: 64, offset: 1344)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4752, file: !4753, line: 62, baseType: !626, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4752, file: !4753, line: 63, baseType: !626, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4733, file: !92, line: 583, baseType: !626, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4733, file: !92, line: 584, baseType: !626, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4733, file: !92, line: 585, baseType: !626, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4733, file: !92, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4733, file: !92, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4733, file: !92, line: 592, baseType: !2421, size: 512, offset: 576)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4733, file: !92, line: 593, baseType: !558, size: 64, offset: 1088)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4733, file: !92, line: 594, baseType: !1234, size: 256, offset: 1152)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4733, file: !92, line: 595, baseType: !1370, size: 128, offset: 1408)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4733, file: !92, line: 596, baseType: !4760, size: 64, offset: 1536)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4733, file: !92, line: 597, baseType: !950, size: 32, offset: 1600)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4733, file: !92, line: 598, baseType: !950, size: 32, offset: 1632)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4733, file: !92, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4733, file: !92, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4733, file: !92, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4733, file: !92, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4733, file: !92, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4733, file: !92, line: 604, baseType: !626, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4733, file: !92, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4733, file: !92, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4733, file: !92, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4733, file: !92, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4733, file: !92, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4733, file: !92, line: 610, baseType: !7, size: 32, offset: 1696)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4733, file: !92, line: 611, baseType: !164, size: 32, offset: 1728)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4733, file: !92, line: 612, baseType: !91, size: 32, offset: 1760)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4733, file: !92, line: 613, baseType: !401, size: 32, offset: 1792)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4733, file: !92, line: 614, baseType: !401, size: 32, offset: 1824)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4733, file: !92, line: 615, baseType: !558, size: 64, offset: 1856)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4733, file: !92, line: 616, baseType: !558, size: 64, offset: 1920)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4733, file: !92, line: 617, baseType: !558, size: 64, offset: 1984)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4733, file: !92, line: 618, baseType: !558, size: 64, offset: 2048)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4733, file: !92, line: 620, baseType: !4810, size: 64, offset: 2112)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !92, line: 536, size: 256, elements: !4812)
!4812 = !{!4813, !4814, !4815, !4816}
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4811, file: !92, line: 537, baseType: !375)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4811, file: !92, line: 538, baseType: !7, size: 32)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4811, file: !92, line: 540, baseType: !361, size: 128, offset: 64)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4811, file: !92, line: 543, baseType: !4817, size: 64, offset: 192)
!4817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4818, size: 64)
!4818 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !92, line: 534, flags: DIFlagFwdDecl)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4733, file: !92, line: 621, baseType: !4820, size: 64, offset: 2176)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 64)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{null, !349, !2571}
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4733, file: !92, line: 622, baseType: !4824, size: 64, offset: 2240)
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4825, size: 64)
!4825 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !92, line: 622, flags: DIFlagFwdDecl)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !350, file: !158, line: 486, baseType: !4827, size: 64, offset: 4096)
!4827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4828, size: 64)
!4828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !92, line: 642, size: 1792, elements: !4829)
!4829 = !{!4830, !4831, !4832, !4836, !4837, !4838}
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4828, file: !92, line: 643, baseType: !4600, size: 1472)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4828, file: !92, line: 644, baseType: !4603, size: 64, offset: 1472)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4828, file: !92, line: 645, baseType: !4833, size: 64, offset: 1536)
!4833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4834, size: 64)
!4834 = !DISubroutineType(types: !4835)
!4835 = !{null, !349, !626}
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4828, file: !92, line: 646, baseType: !4603, size: 64, offset: 1600)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4828, file: !92, line: 647, baseType: !4594, size: 64, offset: 1664)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4828, file: !92, line: 648, baseType: !4594, size: 64, offset: 1728)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !350, file: !158, line: 493, baseType: !4840, size: 64, offset: 4160)
!4840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4841, size: 64)
!4841 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !158, line: 493, flags: DIFlagFwdDecl)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !350, file: !158, line: 499, baseType: !361, size: 128, offset: 4224)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !350, file: !158, line: 502, baseType: !4844, size: 64, offset: 4352)
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4845, size: 64)
!4845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4846)
!4846 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !158, line: 502, flags: DIFlagFwdDecl)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !350, file: !158, line: 504, baseType: !4848, size: 64, offset: 4416)
!4848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !350, file: !158, line: 505, baseType: !558, size: 64, offset: 4480)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !350, file: !158, line: 510, baseType: !558, size: 64, offset: 4544)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !350, file: !158, line: 511, baseType: !4852, size: 64, offset: 4608)
!4852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4853, size: 64)
!4853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4854)
!4854 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !158, line: 511, flags: DIFlagFwdDecl)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !350, file: !158, line: 513, baseType: !4856, size: 64, offset: 4672)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!4857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !158, line: 288, size: 128, elements: !4858)
!4858 = !{!4859, !4860}
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4857, file: !158, line: 293, baseType: !7, size: 32)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4857, file: !158, line: 294, baseType: !465, size: 64, offset: 64)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !350, file: !158, line: 515, baseType: !361, size: 128, offset: 4736)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !350, file: !158, line: 526, baseType: !4863, offset: 4864)
!4863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4864, line: 5, elements: !389)
!4864 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !350, file: !158, line: 528, baseType: !4866, size: 64, offset: 4864)
!4866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4867, size: 64)
!4867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4868, line: 51, size: 1344, elements: !4869)
!4868 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!4869 = !{!4870, !4871, !4873, !4874, !4964, !4973, !4974, !4975, !4976, !4977, !4978, !4979}
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4867, file: !4868, line: 52, baseType: !357, size: 64)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !4867, file: !4868, line: 53, baseType: !4872, size: 32, offset: 64)
!4872 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !4868, line: 28, baseType: !303)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !4867, file: !4868, line: 54, baseType: !357, size: 64, offset: 128)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4867, file: !4868, line: 55, baseType: !4875, size: 192, offset: 192)
!4875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4876, line: 17, size: 192, elements: !4877)
!4876 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4877 = !{!4878, !4880, !4963}
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4875, file: !4876, line: 18, baseType: !4879, size: 64)
!4879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4875, size: 64)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4875, file: !4876, line: 19, baseType: !4881, size: 64, offset: 64)
!4881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4882, size: 64)
!4882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4883)
!4883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4876, line: 110, size: 1152, elements: !4884)
!4884 = !{!4885, !4889, !4893, !4899, !4905, !4909, !4913, !4918, !4922, !4923, !4927, !4931, !4935, !4946, !4947, !4948, !4949, !4959}
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4883, file: !4876, line: 111, baseType: !4886, size: 64)
!4886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4887, size: 64)
!4887 = !DISubroutineType(types: !4888)
!4888 = !{!4879, !4879}
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4883, file: !4876, line: 112, baseType: !4890, size: 64, offset: 64)
!4890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4891, size: 64)
!4891 = !DISubroutineType(types: !4892)
!4892 = !{null, !4879}
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4883, file: !4876, line: 113, baseType: !4894, size: 64, offset: 128)
!4894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4895, size: 64)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!626, !4897}
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4875)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4883, file: !4876, line: 114, baseType: !4900, size: 64, offset: 192)
!4900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4901, size: 64)
!4901 = !DISubroutineType(types: !4902)
!4902 = !{!3380, !4897, !4903}
!4903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4904, size: 64)
!4904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4883, file: !4876, line: 116, baseType: !4906, size: 64, offset: 256)
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4907, size: 64)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{!626, !4897, !357}
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4883, file: !4876, line: 118, baseType: !4910, size: 64, offset: 320)
!4910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4911, size: 64)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{!401, !4897, !357, !7, !341, !462}
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4883, file: !4876, line: 123, baseType: !4914, size: 64, offset: 384)
!4914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4915, size: 64)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{!401, !4897, !357, !4917, !462}
!4917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4883, file: !4876, line: 126, baseType: !4919, size: 64, offset: 448)
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4920, size: 64)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!357, !4897}
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4883, file: !4876, line: 127, baseType: !4919, size: 64, offset: 512)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4883, file: !4876, line: 128, baseType: !4924, size: 64, offset: 576)
!4924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4925, size: 64)
!4925 = !DISubroutineType(types: !4926)
!4926 = !{!4879, !4897}
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4883, file: !4876, line: 130, baseType: !4928, size: 64, offset: 640)
!4928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4929, size: 64)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{!4879, !4897, !4879}
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4883, file: !4876, line: 133, baseType: !4932, size: 64, offset: 704)
!4932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4933, size: 64)
!4933 = !DISubroutineType(types: !4934)
!4934 = !{!4879, !4897, !357}
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4883, file: !4876, line: 135, baseType: !4936, size: 64, offset: 768)
!4936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4937, size: 64)
!4937 = !DISubroutineType(types: !4938)
!4938 = !{!401, !4897, !357, !357, !7, !7, !4939}
!4939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4940, size: 64)
!4940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4876, line: 43, size: 640, elements: !4941)
!4941 = !{!4942, !4943, !4944}
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4940, file: !4876, line: 44, baseType: !4879, size: 64)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4940, file: !4876, line: 45, baseType: !7, size: 32, offset: 64)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4940, file: !4876, line: 46, baseType: !4945, size: 512, offset: 128)
!4945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !558, size: 512, elements: !2459)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4883, file: !4876, line: 140, baseType: !4928, size: 64, offset: 832)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4883, file: !4876, line: 143, baseType: !4924, size: 64, offset: 896)
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4883, file: !4876, line: 145, baseType: !4886, size: 64, offset: 960)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4883, file: !4876, line: 146, baseType: !4950, size: 64, offset: 1024)
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4951, size: 64)
!4951 = !DISubroutineType(types: !4952)
!4952 = !{!401, !4897, !4953}
!4953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4954, size: 64)
!4954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4876, line: 29, size: 128, elements: !4955)
!4955 = !{!4956, !4957, !4958}
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4954, file: !4876, line: 30, baseType: !7, size: 32)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4954, file: !4876, line: 31, baseType: !7, size: 32, offset: 32)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4954, file: !4876, line: 32, baseType: !4897, size: 64, offset: 64)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4883, file: !4876, line: 148, baseType: !4960, size: 64, offset: 1088)
!4960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4961, size: 64)
!4961 = !DISubroutineType(types: !4962)
!4962 = !{!401, !4897, !349}
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4875, file: !4876, line: 20, baseType: !349, size: 64, offset: 128)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4867, file: !4868, line: 57, baseType: !4965, size: 64, offset: 384)
!4965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4966, size: 64)
!4966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !4868, line: 31, size: 704, elements: !4967)
!4967 = !{!4968, !4969, !4970, !4971, !4972}
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4966, file: !4868, line: 32, baseType: !417, size: 64)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4966, file: !4868, line: 33, baseType: !401, size: 32, offset: 64)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4966, file: !4868, line: 34, baseType: !341, size: 64, offset: 128)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4966, file: !4868, line: 35, baseType: !4965, size: 64, offset: 192)
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4966, file: !4868, line: 43, baseType: !484, size: 448, offset: 256)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !4867, file: !4868, line: 58, baseType: !4965, size: 64, offset: 448)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4867, file: !4868, line: 59, baseType: !4866, size: 64, offset: 512)
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4867, file: !4868, line: 60, baseType: !4866, size: 64, offset: 576)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4867, file: !4868, line: 61, baseType: !4866, size: 64, offset: 640)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4867, file: !4868, line: 63, baseType: !353, size: 512, offset: 704)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4867, file: !4868, line: 65, baseType: !465, size: 64, offset: 1216)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4867, file: !4868, line: 66, baseType: !341, size: 64, offset: 1280)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !350, file: !158, line: 529, baseType: !4879, size: 64, offset: 4928)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !350, file: !158, line: 534, baseType: !649, size: 32, offset: 4992)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !350, file: !158, line: 535, baseType: !303, size: 32, offset: 5024)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !350, file: !158, line: 537, baseType: !375, offset: 5056)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !350, file: !158, line: 538, baseType: !361, size: 128, offset: 5056)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !350, file: !158, line: 540, baseType: !4986, size: 64, offset: 5184)
!4986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4987, size: 64)
!4987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4988, line: 54, size: 960, elements: !4989)
!4988 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4989 = !{!4990, !4991, !4992, !4993, !4994, !4995, !4996, !5000, !5004, !5005, !5006, !5007, !5011, !5015, !5016}
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4987, file: !4988, line: 55, baseType: !357, size: 64)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4987, file: !4988, line: 56, baseType: !769, size: 64, offset: 64)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4987, file: !4988, line: 58, baseType: !469, size: 64, offset: 128)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4987, file: !4988, line: 59, baseType: !469, size: 64, offset: 192)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4987, file: !4988, line: 60, baseType: !368, size: 64, offset: 256)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4987, file: !4988, line: 62, baseType: !4586, size: 64, offset: 320)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4987, file: !4988, line: 63, baseType: !4997, size: 64, offset: 384)
!4997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4998, size: 64)
!4998 = !DISubroutineType(types: !4999)
!4999 = !{!417, !349, !1456}
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4987, file: !4988, line: 65, baseType: !5001, size: 64, offset: 448)
!5001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5002, size: 64)
!5002 = !DISubroutineType(types: !5003)
!5003 = !{null, !4986}
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4987, file: !4988, line: 66, baseType: !4594, size: 64, offset: 512)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4987, file: !4988, line: 68, baseType: !4603, size: 64, offset: 576)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4987, file: !4988, line: 70, baseType: !4408, size: 64, offset: 640)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4987, file: !4988, line: 71, baseType: !5008, size: 64, offset: 704)
!5008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5009, size: 64)
!5009 = !DISubroutineType(types: !5010)
!5010 = !{!3380, !349}
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4987, file: !4988, line: 73, baseType: !5012, size: 64, offset: 768)
!5012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5013, size: 64)
!5013 = !DISubroutineType(types: !5014)
!5014 = !{null, !349, !2941, !2942}
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4987, file: !4988, line: 75, baseType: !4598, size: 64, offset: 832)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4987, file: !4988, line: 77, baseType: !4715, size: 64, offset: 896)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !350, file: !158, line: 541, baseType: !469, size: 64, offset: 5248)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !350, file: !158, line: 543, baseType: !4594, size: 64, offset: 5312)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !350, file: !158, line: 544, baseType: !5020, size: 64, offset: 5376)
!5020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5021, size: 64)
!5021 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !158, line: 45, flags: DIFlagFwdDecl)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !350, file: !158, line: 545, baseType: !5023, size: 64, offset: 5440)
!5023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5024, size: 64)
!5024 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !158, line: 47, flags: DIFlagFwdDecl)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !350, file: !158, line: 547, baseType: !626, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !350, file: !158, line: 548, baseType: !626, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !350, file: !158, line: 549, baseType: !626, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !350, file: !158, line: 550, baseType: !626, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "sysdev", scope: !346, file: !172, line: 426, baseType: !349, size: 64, offset: 64)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "busnum", scope: !346, file: !172, line: 427, baseType: !401, size: 32, offset: 128)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "bus_name", scope: !346, file: !172, line: 428, baseType: !357, size: 64, offset: 192)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "uses_pio_for_control", scope: !346, file: !172, line: 429, baseType: !1182, size: 8, offset: 256)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "otg_port", scope: !346, file: !172, line: 433, baseType: !1182, size: 8, offset: 264)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "is_b_host", scope: !346, file: !172, line: 434, baseType: !7, size: 1, offset: 272, flags: DIFlagBitField, extraData: i64 272)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "b_hnp_enable", scope: !346, file: !172, line: 435, baseType: !7, size: 1, offset: 273, flags: DIFlagBitField, extraData: i64 272)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "no_stop_on_short", scope: !346, file: !172, line: 436, baseType: !7, size: 1, offset: 274, flags: DIFlagBitField, extraData: i64 272)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "no_sg_constraint", scope: !346, file: !172, line: 441, baseType: !7, size: 1, offset: 275, flags: DIFlagBitField, extraData: i64 272)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "sg_tablesize", scope: !346, file: !172, line: 442, baseType: !7, size: 32, offset: 288)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "devnum_next", scope: !346, file: !172, line: 444, baseType: !401, size: 32, offset: 320)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "devnum_next_mutex", scope: !346, file: !172, line: 446, baseType: !876, size: 192, offset: 384)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "devmap", scope: !346, file: !172, line: 448, baseType: !5042, size: 128, offset: 576)
!5042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_devmap", file: !172, line: 417, size: 128, elements: !5043)
!5043 = !{!5044}
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "devicemap", scope: !5042, file: !172, line: 418, baseType: !5045, size: 128)
!5045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 128, elements: !1537)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "root_hub", scope: !346, file: !172, line: 449, baseType: !5047, size: 64, offset: 704)
!5047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5048, size: 64)
!5048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device", file: !172, line: 631, size: 10624, elements: !5049)
!5049 = !{!5050, !5051, !5052, !5053, !5054, !5055, !5056, !5057, !5068, !5069, !5071, !5072, !5074, !5113, !5114, !5131, !5192, !5274, !5275, !5277, !5278, !5280, !5281, !5282, !5283, !5284, !5285, !5286, !5287, !5288, !5289, !5290, !5291, !5292, !5293, !5294, !5295, !5296, !5297, !5298, !5299, !5300, !5301, !5302, !5303, !5304, !5305, !5306, !5307, !5308, !5309, !5310, !5313, !5314, !5315, !5320, !5327, !5328, !5329, !5330}
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "devnum", scope: !5048, file: !172, line: 632, baseType: !401, size: 32)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "devpath", scope: !5048, file: !172, line: 633, baseType: !2992, size: 128, offset: 32)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "route", scope: !5048, file: !172, line: 634, baseType: !303, size: 32, offset: 160)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5048, file: !172, line: 635, baseType: !33, size: 32, offset: 192)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !5048, file: !172, line: 636, baseType: !45, size: 32, offset: 224)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "rx_lanes", scope: !5048, file: !172, line: 637, baseType: !7, size: 32, offset: 256)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lanes", scope: !5048, file: !172, line: 638, baseType: !7, size: 32, offset: 288)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "tt", scope: !5048, file: !172, line: 640, baseType: !5058, size: 64, offset: 320)
!5058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5059, size: 64)
!5059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_tt", file: !261, line: 554, size: 576, elements: !5060)
!5060 = !{!5061, !5062, !5063, !5064, !5065, !5066, !5067}
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "hub", scope: !5059, file: !261, line: 555, baseType: !5047, size: 64)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "multi", scope: !5059, file: !261, line: 556, baseType: !401, size: 32, offset: 64)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "think_time", scope: !5059, file: !261, line: 557, baseType: !7, size: 32, offset: 96)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !5059, file: !261, line: 558, baseType: !341, size: 64, offset: 128)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5059, file: !261, line: 561, baseType: !375, offset: 192)
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "clear_list", scope: !5059, file: !261, line: 562, baseType: !361, size: 128, offset: 192)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "clear_work", scope: !5059, file: !261, line: 563, baseType: !1234, size: 256, offset: 320)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "ttport", scope: !5048, file: !172, line: 641, baseType: !401, size: 32, offset: 384)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "toggle", scope: !5048, file: !172, line: 643, baseType: !5070, size: 64, offset: 416)
!5070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1537)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5048, file: !172, line: 645, baseType: !5047, size: 64, offset: 512)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !5048, file: !172, line: 646, baseType: !5073, size: 64, offset: 576)
!5073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "ep0", scope: !5048, file: !172, line: 647, baseType: !5075, size: 640, offset: 640)
!5075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_endpoint", file: !172, line: 67, size: 640, elements: !5076)
!5076 = !{!5077, !5088, !5096, !5104, !5105, !5106, !5109, !5110, !5111, !5112}
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !5075, file: !172, line: 68, baseType: !5078, size: 72)
!5078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_endpoint_descriptor", file: !34, line: 407, size: 72, elements: !5079)
!5079 = !{!5080, !5081, !5082, !5083, !5084, !5085, !5086, !5087}
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !5078, file: !34, line: 408, baseType: !312, size: 8)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !5078, file: !34, line: 409, baseType: !312, size: 8, offset: 8)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "bEndpointAddress", scope: !5078, file: !34, line: 411, baseType: !312, size: 8, offset: 16)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !5078, file: !34, line: 412, baseType: !312, size: 8, offset: 24)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "wMaxPacketSize", scope: !5078, file: !34, line: 413, baseType: !317, size: 16, offset: 32)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "bInterval", scope: !5078, file: !34, line: 414, baseType: !312, size: 8, offset: 48)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "bRefresh", scope: !5078, file: !34, line: 418, baseType: !312, size: 8, offset: 56)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "bSynchAddress", scope: !5078, file: !34, line: 419, baseType: !312, size: 8, offset: 64)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "ss_ep_comp", scope: !5075, file: !172, line: 69, baseType: !5089, size: 48, offset: 72)
!5089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_ep_comp_descriptor", file: !34, line: 689, size: 48, elements: !5090)
!5090 = !{!5091, !5092, !5093, !5094, !5095}
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !5089, file: !34, line: 690, baseType: !312, size: 8)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !5089, file: !34, line: 691, baseType: !312, size: 8, offset: 8)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxBurst", scope: !5089, file: !34, line: 693, baseType: !312, size: 8, offset: 16)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !5089, file: !34, line: 694, baseType: !312, size: 8, offset: 24)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "wBytesPerInterval", scope: !5089, file: !34, line: 695, baseType: !317, size: 16, offset: 32)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "ssp_isoc_ep_comp", scope: !5075, file: !172, line: 70, baseType: !5097, size: 64, offset: 120)
!5097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ssp_isoc_ep_comp_descriptor", file: !34, line: 677, size: 64, elements: !5098)
!5098 = !{!5099, !5100, !5101, !5102}
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !5097, file: !34, line: 678, baseType: !312, size: 8)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !5097, file: !34, line: 679, baseType: !312, size: 8, offset: 8)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "wReseved", scope: !5097, file: !34, line: 680, baseType: !317, size: 16, offset: 16)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerInterval", scope: !5097, file: !34, line: 681, baseType: !5103, size: 32, offset: 32)
!5103 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le32", file: !318, line: 31, baseType: !305)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !5075, file: !172, line: 71, baseType: !361, size: 128, offset: 192)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !5075, file: !172, line: 72, baseType: !341, size: 64, offset: 320)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "ep_dev", scope: !5075, file: !172, line: 73, baseType: !5107, size: 64, offset: 384)
!5107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5108, size: 64)
!5108 = !DICompositeType(tag: DW_TAG_structure_type, name: "ep_device", file: !172, line: 48, flags: DIFlagFwdDecl)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !5075, file: !172, line: 75, baseType: !1137, size: 64, offset: 448)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !5075, file: !172, line: 76, baseType: !401, size: 32, offset: 512)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !5075, file: !172, line: 77, baseType: !401, size: 32, offset: 544)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !5075, file: !172, line: 78, baseType: !401, size: 32, offset: 576)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5048, file: !172, line: 649, baseType: !350, size: 5568, offset: 1280)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor", scope: !5048, file: !172, line: 651, baseType: !5115, size: 144, offset: 6848)
!5115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_device_descriptor", file: !34, line: 289, size: 144, elements: !5116)
!5116 = !{!5117, !5118, !5119, !5120, !5121, !5122, !5123, !5124, !5125, !5126, !5127, !5128, !5129, !5130}
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !5115, file: !34, line: 290, baseType: !312, size: 8)
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !5115, file: !34, line: 291, baseType: !312, size: 8, offset: 8)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "bcdUSB", scope: !5115, file: !34, line: 293, baseType: !317, size: 16, offset: 16)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceClass", scope: !5115, file: !34, line: 294, baseType: !312, size: 8, offset: 32)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceSubClass", scope: !5115, file: !34, line: 295, baseType: !312, size: 8, offset: 40)
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "bDeviceProtocol", scope: !5115, file: !34, line: 296, baseType: !312, size: 8, offset: 48)
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxPacketSize0", scope: !5115, file: !34, line: 297, baseType: !312, size: 8, offset: 56)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "idVendor", scope: !5115, file: !34, line: 298, baseType: !317, size: 16, offset: 64)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "idProduct", scope: !5115, file: !34, line: 299, baseType: !317, size: 16, offset: 80)
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "bcdDevice", scope: !5115, file: !34, line: 300, baseType: !317, size: 16, offset: 96)
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "iManufacturer", scope: !5115, file: !34, line: 301, baseType: !312, size: 8, offset: 112)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "iProduct", scope: !5115, file: !34, line: 302, baseType: !312, size: 8, offset: 120)
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "iSerialNumber", scope: !5115, file: !34, line: 303, baseType: !312, size: 8, offset: 128)
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "bNumConfigurations", scope: !5115, file: !34, line: 304, baseType: !312, size: 8, offset: 136)
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "bos", scope: !5048, file: !172, line: 652, baseType: !5132, size: 64, offset: 7040)
!5132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5133, size: 64)
!5133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_bos", file: !172, line: 396, size: 384, elements: !5134)
!5134 = !{!5135, !5143, !5151, !5163, !5176, !5185}
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !5133, file: !172, line: 397, baseType: !5136, size: 64)
!5136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5137, size: 64)
!5137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_bos_descriptor", file: !34, line: 844, size: 40, elements: !5138)
!5138 = !{!5139, !5140, !5141, !5142}
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !5137, file: !34, line: 845, baseType: !312, size: 8)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !5137, file: !34, line: 846, baseType: !312, size: 8, offset: 8)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "wTotalLength", scope: !5137, file: !34, line: 848, baseType: !317, size: 16, offset: 16)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "bNumDeviceCaps", scope: !5137, file: !34, line: 849, baseType: !312, size: 8, offset: 32)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "ext_cap", scope: !5133, file: !172, line: 400, baseType: !5144, size: 64, offset: 64)
!5144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5145, size: 64)
!5145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ext_cap_descriptor", file: !34, line: 895, size: 56, elements: !5146)
!5146 = !{!5147, !5148, !5149, !5150}
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !5145, file: !34, line: 896, baseType: !312, size: 8)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !5145, file: !34, line: 897, baseType: !312, size: 8, offset: 8)
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !5145, file: !34, line: 898, baseType: !312, size: 8, offset: 16)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !5145, file: !34, line: 899, baseType: !5103, size: 32, offset: 24)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "ss_cap", scope: !5133, file: !172, line: 401, baseType: !5152, size: 64, offset: 128)
!5152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5153, size: 64)
!5153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_cap_descriptor", file: !34, line: 917, size: 80, elements: !5154)
!5154 = !{!5155, !5156, !5157, !5158, !5159, !5160, !5161, !5162}
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !5153, file: !34, line: 918, baseType: !312, size: 8)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !5153, file: !34, line: 919, baseType: !312, size: 8, offset: 8)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !5153, file: !34, line: 920, baseType: !312, size: 8, offset: 16)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !5153, file: !34, line: 921, baseType: !312, size: 8, offset: 24)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "wSpeedSupported", scope: !5153, file: !34, line: 923, baseType: !317, size: 16, offset: 32)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionalitySupport", scope: !5153, file: !34, line: 928, baseType: !312, size: 8, offset: 48)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "bU1devExitLat", scope: !5153, file: !34, line: 929, baseType: !312, size: 8, offset: 56)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "bU2DevExitLat", scope: !5153, file: !34, line: 930, baseType: !317, size: 16, offset: 64)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "ssp_cap", scope: !5133, file: !172, line: 402, baseType: !5164, size: 64, offset: 192)
!5164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5165, size: 64)
!5165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ssp_cap_descriptor", file: !34, line: 955, size: 128, elements: !5166)
!5166 = !{!5167, !5168, !5169, !5170, !5171, !5172, !5173, !5174}
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !5165, file: !34, line: 956, baseType: !312, size: 8)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !5165, file: !34, line: 957, baseType: !312, size: 8, offset: 8)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !5165, file: !34, line: 958, baseType: !312, size: 8, offset: 16)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "bReserved", scope: !5165, file: !34, line: 959, baseType: !312, size: 8, offset: 24)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !5165, file: !34, line: 960, baseType: !5103, size: 32, offset: 32)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "wFunctionalitySupport", scope: !5165, file: !34, line: 963, baseType: !317, size: 16, offset: 64)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "wReserved", scope: !5165, file: !34, line: 967, baseType: !317, size: 16, offset: 80)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "bmSublinkSpeedAttr", scope: !5165, file: !34, line: 968, baseType: !5175, size: 32, offset: 96)
!5175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5103, size: 32, elements: !2498)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "ss_id", scope: !5133, file: !172, line: 403, baseType: !5177, size: 64, offset: 256)
!5177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5178, size: 64)
!5178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ss_container_id_descriptor", file: !34, line: 940, size: 160, elements: !5179)
!5179 = !{!5180, !5181, !5182, !5183, !5184}
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !5178, file: !34, line: 941, baseType: !312, size: 8)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !5178, file: !34, line: 942, baseType: !312, size: 8, offset: 8)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !5178, file: !34, line: 943, baseType: !312, size: 8, offset: 16)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "bReserved", scope: !5178, file: !34, line: 944, baseType: !312, size: 8, offset: 24)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "ContainerID", scope: !5178, file: !34, line: 945, baseType: !3932, size: 128, offset: 32)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "ptm_cap", scope: !5133, file: !172, line: 404, baseType: !5186, size: 64, offset: 320)
!5186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5187, size: 64)
!5187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_ptm_cap_descriptor", file: !34, line: 1080, size: 24, elements: !5188)
!5188 = !{!5189, !5190, !5191}
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !5187, file: !34, line: 1081, baseType: !312, size: 8)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !5187, file: !34, line: 1082, baseType: !312, size: 8, offset: 8)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "bDevCapabilityType", scope: !5187, file: !34, line: 1083, baseType: !312, size: 8, offset: 16)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !5048, file: !172, line: 653, baseType: !5193, size: 64, offset: 7104)
!5193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5194, size: 64)
!5194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_config", file: !172, line: 374, size: 5440, elements: !5195)
!5195 = !{!5196, !5207, !5208, !5221, !5263, !5272, !5273}
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !5194, file: !172, line: 375, baseType: !5197, size: 72)
!5197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_config_descriptor", file: !34, line: 349, size: 72, elements: !5198)
!5198 = !{!5199, !5200, !5201, !5202, !5203, !5204, !5205, !5206}
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !5197, file: !34, line: 350, baseType: !312, size: 8)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !5197, file: !34, line: 351, baseType: !312, size: 8, offset: 8)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "wTotalLength", scope: !5197, file: !34, line: 353, baseType: !317, size: 16, offset: 16)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "bNumInterfaces", scope: !5197, file: !34, line: 354, baseType: !312, size: 8, offset: 32)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "bConfigurationValue", scope: !5197, file: !34, line: 355, baseType: !312, size: 8, offset: 40)
!5204 = !DIDerivedType(tag: DW_TAG_member, name: "iConfiguration", scope: !5197, file: !34, line: 356, baseType: !312, size: 8, offset: 48)
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "bmAttributes", scope: !5197, file: !34, line: 357, baseType: !312, size: 8, offset: 56)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "bMaxPower", scope: !5197, file: !34, line: 358, baseType: !312, size: 8, offset: 64)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !5194, file: !172, line: 377, baseType: !417, size: 64, offset: 128)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "intf_assoc", scope: !5194, file: !172, line: 381, baseType: !5209, size: 1024, offset: 192)
!5209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5210, size: 1024, elements: !1886)
!5210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5211, size: 64)
!5211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_assoc_descriptor", file: !34, line: 783, size: 64, elements: !5212)
!5212 = !{!5213, !5214, !5215, !5216, !5217, !5218, !5219, !5220}
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !5211, file: !34, line: 784, baseType: !312, size: 8)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !5211, file: !34, line: 785, baseType: !312, size: 8, offset: 8)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "bFirstInterface", scope: !5211, file: !34, line: 787, baseType: !312, size: 8, offset: 16)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceCount", scope: !5211, file: !34, line: 788, baseType: !312, size: 8, offset: 24)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionClass", scope: !5211, file: !34, line: 789, baseType: !312, size: 8, offset: 32)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionSubClass", scope: !5211, file: !34, line: 790, baseType: !312, size: 8, offset: 40)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "bFunctionProtocol", scope: !5211, file: !34, line: 791, baseType: !312, size: 8, offset: 48)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "iFunction", scope: !5211, file: !34, line: 792, baseType: !312, size: 8, offset: 56)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "interface", scope: !5194, file: !172, line: 385, baseType: !5222, size: 2048, offset: 1216)
!5222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5223, size: 2048, elements: !1259)
!5223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5224, size: 64)
!5224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface", file: !172, line: 232, size: 6272, elements: !5225)
!5225 = !{!5226, !5247, !5248, !5249, !5250, !5251, !5252, !5253, !5254, !5255, !5256, !5257, !5258, !5259, !5260, !5261, !5262}
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "altsetting", scope: !5224, file: !172, line: 235, baseType: !5227, size: 64)
!5227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5228, size: 64)
!5228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_host_interface", file: !172, line: 82, size: 320, elements: !5229)
!5229 = !{!5230, !5242, !5243, !5244, !5246}
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !5228, file: !172, line: 83, baseType: !5231, size: 72)
!5231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_descriptor", file: !34, line: 389, size: 72, elements: !5232)
!5232 = !{!5233, !5234, !5235, !5236, !5237, !5238, !5239, !5240, !5241}
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "bLength", scope: !5231, file: !34, line: 390, baseType: !312, size: 8)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "bDescriptorType", scope: !5231, file: !34, line: 391, baseType: !312, size: 8, offset: 8)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceNumber", scope: !5231, file: !34, line: 393, baseType: !312, size: 8, offset: 16)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "bAlternateSetting", scope: !5231, file: !34, line: 394, baseType: !312, size: 8, offset: 24)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "bNumEndpoints", scope: !5231, file: !34, line: 395, baseType: !312, size: 8, offset: 32)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceClass", scope: !5231, file: !34, line: 396, baseType: !312, size: 8, offset: 40)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceSubClass", scope: !5231, file: !34, line: 397, baseType: !312, size: 8, offset: 48)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "bInterfaceProtocol", scope: !5231, file: !34, line: 398, baseType: !312, size: 8, offset: 56)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "iInterface", scope: !5231, file: !34, line: 399, baseType: !312, size: 8, offset: 64)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !5228, file: !172, line: 85, baseType: !401, size: 32, offset: 96)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !5228, file: !172, line: 86, baseType: !1137, size: 64, offset: 128)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "endpoint", scope: !5228, file: !172, line: 91, baseType: !5245, size: 64, offset: 192)
!5245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5075, size: 64)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !5228, file: !172, line: 93, baseType: !417, size: 64, offset: 256)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "cur_altsetting", scope: !5224, file: !172, line: 237, baseType: !5227, size: 64, offset: 64)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "num_altsetting", scope: !5224, file: !172, line: 239, baseType: !7, size: 32, offset: 128)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "intf_assoc", scope: !5224, file: !172, line: 243, baseType: !5210, size: 64, offset: 192)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !5224, file: !172, line: 245, baseType: !401, size: 32, offset: 256)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "condition", scope: !5224, file: !172, line: 247, baseType: !171, size: 32, offset: 288)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_files_created", scope: !5224, file: !172, line: 248, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "ep_devs_created", scope: !5224, file: !172, line: 249, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !5224, file: !172, line: 250, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "needs_remote_wakeup", scope: !5224, file: !172, line: 251, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "needs_altsetting0", scope: !5224, file: !172, line: 252, baseType: !7, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "needs_binding", scope: !5224, file: !172, line: 253, baseType: !7, size: 1, offset: 325, flags: DIFlagBitField, extraData: i64 320)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "resetting_device", scope: !5224, file: !172, line: 254, baseType: !7, size: 1, offset: 326, flags: DIFlagBitField, extraData: i64 320)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "authorized", scope: !5224, file: !172, line: 255, baseType: !7, size: 1, offset: 327, flags: DIFlagBitField, extraData: i64 320)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5224, file: !172, line: 257, baseType: !350, size: 5568, offset: 384)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "usb_dev", scope: !5224, file: !172, line: 258, baseType: !349, size: 64, offset: 5952)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "reset_ws", scope: !5224, file: !172, line: 259, baseType: !1234, size: 256, offset: 6016)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "intf_cache", scope: !5194, file: !172, line: 389, baseType: !5264, size: 2048, offset: 3264)
!5264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5265, size: 2048, elements: !1259)
!5265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5266, size: 64)
!5266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_interface_cache", file: !172, line: 322, size: 64, elements: !5267)
!5267 = !{!5268, !5269, !5270}
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "num_altsetting", scope: !5266, file: !172, line: 323, baseType: !7, size: 32)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5266, file: !172, line: 324, baseType: !1750, size: 32, offset: 32)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "altsetting", scope: !5266, file: !172, line: 328, baseType: !5271, offset: 64)
!5271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5228, elements: !1272)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "extra", scope: !5194, file: !172, line: 391, baseType: !1137, size: 64, offset: 5312)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "extralen", scope: !5194, file: !172, line: 392, baseType: !401, size: 32, offset: 5376)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "actconfig", scope: !5048, file: !172, line: 655, baseType: !5193, size: 64, offset: 7168)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "ep_in", scope: !5048, file: !172, line: 656, baseType: !5276, size: 1024, offset: 7232)
!5276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5245, size: 1024, elements: !1886)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "ep_out", scope: !5048, file: !172, line: 657, baseType: !5276, size: 1024, offset: 8256)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "rawdescriptors", scope: !5048, file: !172, line: 659, baseType: !5279, size: 64, offset: 9280)
!5279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "bus_mA", scope: !5048, file: !172, line: 661, baseType: !320, size: 16, offset: 9344)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "portnum", scope: !5048, file: !172, line: 662, baseType: !1182, size: 8, offset: 9360)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !5048, file: !172, line: 663, baseType: !1182, size: 8, offset: 9368)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "devaddr", scope: !5048, file: !172, line: 664, baseType: !1182, size: 8, offset: 9376)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "can_submit", scope: !5048, file: !172, line: 666, baseType: !7, size: 1, offset: 9384, flags: DIFlagBitField, extraData: i64 9384)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "persist_enabled", scope: !5048, file: !172, line: 667, baseType: !7, size: 1, offset: 9385, flags: DIFlagBitField, extraData: i64 9384)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "have_langid", scope: !5048, file: !172, line: 668, baseType: !7, size: 1, offset: 9386, flags: DIFlagBitField, extraData: i64 9384)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "authorized", scope: !5048, file: !172, line: 669, baseType: !7, size: 1, offset: 9387, flags: DIFlagBitField, extraData: i64 9384)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !5048, file: !172, line: 670, baseType: !7, size: 1, offset: 9388, flags: DIFlagBitField, extraData: i64 9384)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "wusb", scope: !5048, file: !172, line: 671, baseType: !7, size: 1, offset: 9389, flags: DIFlagBitField, extraData: i64 9384)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_capable", scope: !5048, file: !172, line: 672, baseType: !7, size: 1, offset: 9390, flags: DIFlagBitField, extraData: i64 9384)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_capable", scope: !5048, file: !172, line: 673, baseType: !7, size: 1, offset: 9391, flags: DIFlagBitField, extraData: i64 9384)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_besl_capable", scope: !5048, file: !172, line: 674, baseType: !7, size: 1, offset: 9392, flags: DIFlagBitField, extraData: i64 9384)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_enabled", scope: !5048, file: !172, line: 675, baseType: !7, size: 1, offset: 9393, flags: DIFlagBitField, extraData: i64 9384)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "usb2_hw_lpm_allowed", scope: !5048, file: !172, line: 676, baseType: !7, size: 1, offset: 9394, flags: DIFlagBitField, extraData: i64 9384)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "usb3_lpm_u1_enabled", scope: !5048, file: !172, line: 677, baseType: !7, size: 1, offset: 9395, flags: DIFlagBitField, extraData: i64 9384)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "usb3_lpm_u2_enabled", scope: !5048, file: !172, line: 678, baseType: !7, size: 1, offset: 9396, flags: DIFlagBitField, extraData: i64 9384)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "string_langid", scope: !5048, file: !172, line: 679, baseType: !401, size: 32, offset: 9408)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !5048, file: !172, line: 682, baseType: !417, size: 64, offset: 9472)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "manufacturer", scope: !5048, file: !172, line: 683, baseType: !417, size: 64, offset: 9536)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !5048, file: !172, line: 684, baseType: !417, size: 64, offset: 9600)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "filelist", scope: !5048, file: !172, line: 686, baseType: !361, size: 128, offset: 9664)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "maxchild", scope: !5048, file: !172, line: 688, baseType: !401, size: 32, offset: 9792)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !5048, file: !172, line: 690, baseType: !303, size: 32, offset: 9824)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "urbnum", scope: !5048, file: !172, line: 691, baseType: !950, size: 32, offset: 9856)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "active_duration", scope: !5048, file: !172, line: 693, baseType: !465, size: 64, offset: 9920)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "connect_time", scope: !5048, file: !172, line: 696, baseType: !465, size: 64, offset: 9984)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "do_remote_wakeup", scope: !5048, file: !172, line: 698, baseType: !7, size: 1, offset: 10048, flags: DIFlagBitField, extraData: i64 10048)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "reset_resume", scope: !5048, file: !172, line: 699, baseType: !7, size: 1, offset: 10049, flags: DIFlagBitField, extraData: i64 10048)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "port_is_suspended", scope: !5048, file: !172, line: 700, baseType: !7, size: 1, offset: 10050, flags: DIFlagBitField, extraData: i64 10048)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "wusb_dev", scope: !5048, file: !172, line: 702, baseType: !5311, size: 64, offset: 10112)
!5311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5312, size: 64)
!5312 = !DICompositeType(tag: DW_TAG_structure_type, name: "wusb_dev", file: !172, line: 28, flags: DIFlagFwdDecl)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "slot_id", scope: !5048, file: !172, line: 703, baseType: !401, size: 32, offset: 10176)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !5048, file: !172, line: 704, baseType: !178, size: 32, offset: 10208)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "l1_params", scope: !5048, file: !172, line: 705, baseType: !5316, size: 64, offset: 10240)
!5316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb2_lpm_parameters", file: !172, line: 502, size: 64, elements: !5317)
!5317 = !{!5318, !5319}
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "besl", scope: !5316, file: !172, line: 506, baseType: !7, size: 32)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5316, file: !172, line: 512, baseType: !401, size: 32, offset: 32)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "u1_params", scope: !5048, file: !172, line: 706, baseType: !5321, size: 128, offset: 10304)
!5321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb3_lpm_parameters", file: !172, line: 522, size: 128, elements: !5322)
!5322 = !{!5323, !5324, !5325, !5326}
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "mel", scope: !5321, file: !172, line: 529, baseType: !7, size: 32)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "pel", scope: !5321, file: !172, line: 535, baseType: !7, size: 32, offset: 32)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "sel", scope: !5321, file: !172, line: 545, baseType: !7, size: 32, offset: 64)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5321, file: !172, line: 551, baseType: !401, size: 32, offset: 96)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "u2_params", scope: !5048, file: !172, line: 707, baseType: !5321, size: 128, offset: 10432)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "lpm_disable_count", scope: !5048, file: !172, line: 708, baseType: !7, size: 32, offset: 10560)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "hub_delay", scope: !5048, file: !172, line: 710, baseType: !1062, size: 16, offset: 10592)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "use_generic_driver", scope: !5048, file: !172, line: 711, baseType: !7, size: 1, offset: 10608, flags: DIFlagBitField, extraData: i64 10608)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "hs_companion", scope: !346, file: !172, line: 450, baseType: !5073, size: 64, offset: 768)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_allocated", scope: !346, file: !172, line: 452, baseType: !401, size: 32, offset: 832)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_int_reqs", scope: !346, file: !172, line: 459, baseType: !401, size: 32, offset: 864)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_isoc_reqs", scope: !346, file: !172, line: 460, baseType: !401, size: 32, offset: 896)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "resuming_ports", scope: !346, file: !172, line: 462, baseType: !7, size: 32, offset: 928)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !343, file: !261, line: 87, baseType: !1750, size: 32, offset: 960)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "product_desc", scope: !343, file: !261, line: 89, baseType: !357, size: 64, offset: 1024)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !343, file: !261, line: 90, baseType: !401, size: 32, offset: 1088)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "irq_descr", scope: !343, file: !261, line: 94, baseType: !5340, size: 192, offset: 1120)
!5340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !359, size: 192, elements: !1450)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "rh_timer", scope: !343, file: !261, line: 96, baseType: !1800, size: 320, offset: 1344)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "status_urb", scope: !343, file: !261, line: 97, baseType: !5343, size: 64, offset: 1664)
!5343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5344, size: 64)
!5344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "urb", file: !172, line: 1561, size: 1472, elements: !5345)
!5345 = !{!5346, !5347, !5348, !5349, !5350, !5351, !5352, !5353, !5362, !5363, !5364, !5365, !5366, !5367, !5368, !5369, !5370, !5380, !5381, !5382, !5383, !5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5396}
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !5344, file: !172, line: 1563, baseType: !1750, size: 32)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "unlinked", scope: !5344, file: !172, line: 1564, baseType: !401, size: 32, offset: 32)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "hcpriv", scope: !5344, file: !172, line: 1565, baseType: !341, size: 64, offset: 64)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "use_count", scope: !5344, file: !172, line: 1566, baseType: !950, size: 32, offset: 128)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "reject", scope: !5344, file: !172, line: 1567, baseType: !950, size: 32, offset: 160)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !5344, file: !172, line: 1570, baseType: !361, size: 128, offset: 192)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "anchor_list", scope: !5344, file: !172, line: 1572, baseType: !361, size: 128, offset: 320)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "anchor", scope: !5344, file: !172, line: 1573, baseType: !5354, size: 64, offset: 448)
!5354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5355, size: 64)
!5355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_anchor", file: !172, line: 1360, size: 320, elements: !5356)
!5356 = !{!5357, !5358, !5359, !5360, !5361}
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "urb_list", scope: !5355, file: !172, line: 1361, baseType: !361, size: 128)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !5355, file: !172, line: 1362, baseType: !1370, size: 128, offset: 128)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5355, file: !172, line: 1363, baseType: !375, offset: 256)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_wakeups", scope: !5355, file: !172, line: 1364, baseType: !950, size: 32, offset: 256)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "poisoned", scope: !5355, file: !172, line: 1365, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5344, file: !172, line: 1574, baseType: !5047, size: 64, offset: 512)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "ep", scope: !5344, file: !172, line: 1575, baseType: !5245, size: 64, offset: 576)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !5344, file: !172, line: 1576, baseType: !7, size: 32, offset: 640)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !5344, file: !172, line: 1577, baseType: !7, size: 32, offset: 672)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5344, file: !172, line: 1578, baseType: !401, size: 32, offset: 704)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_flags", scope: !5344, file: !172, line: 1579, baseType: !7, size: 32, offset: 736)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_buffer", scope: !5344, file: !172, line: 1580, baseType: !341, size: 64, offset: 768)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_dma", scope: !5344, file: !172, line: 1581, baseType: !2064, size: 64, offset: 832)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "sg", scope: !5344, file: !172, line: 1582, baseType: !5371, size: 64, offset: 896)
!5371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5372, size: 64)
!5372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !5373, line: 11, size: 256, elements: !5374)
!5373 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!5374 = !{!5375, !5376, !5377, !5378, !5379}
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !5372, file: !5373, line: 12, baseType: !465, size: 64)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5372, file: !5373, line: 13, baseType: !7, size: 32, offset: 64)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5372, file: !5373, line: 14, baseType: !7, size: 32, offset: 96)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !5372, file: !5373, line: 15, baseType: !2064, size: 64, offset: 128)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !5372, file: !5373, line: 17, baseType: !7, size: 32, offset: 192)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "num_mapped_sgs", scope: !5344, file: !172, line: 1583, baseType: !401, size: 32, offset: 960)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "num_sgs", scope: !5344, file: !172, line: 1584, baseType: !401, size: 32, offset: 992)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_buffer_length", scope: !5344, file: !172, line: 1585, baseType: !303, size: 32, offset: 1024)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !5344, file: !172, line: 1586, baseType: !303, size: 32, offset: 1056)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "setup_packet", scope: !5344, file: !172, line: 1587, baseType: !1137, size: 64, offset: 1088)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "setup_dma", scope: !5344, file: !172, line: 1588, baseType: !2064, size: 64, offset: 1152)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !5344, file: !172, line: 1589, baseType: !401, size: 32, offset: 1216)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "number_of_packets", scope: !5344, file: !172, line: 1590, baseType: !401, size: 32, offset: 1248)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !5344, file: !172, line: 1591, baseType: !401, size: 32, offset: 1280)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !5344, file: !172, line: 1593, baseType: !401, size: 32, offset: 1312)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !5344, file: !172, line: 1594, baseType: !341, size: 64, offset: 1344)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !5344, file: !172, line: 1595, baseType: !5392, size: 64, offset: 1408)
!5392 = !DIDerivedType(tag: DW_TAG_typedef, name: "usb_complete_t", file: !172, line: 1376, baseType: !5393)
!5393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5394, size: 64)
!5394 = !DISubroutineType(types: !5395)
!5395 = !{null, !5343}
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "iso_frame_desc", scope: !5344, file: !172, line: 1596, baseType: !5397, offset: 1472)
!5397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5398, elements: !1272)
!5398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_iso_packet_descriptor", file: !172, line: 1351, size: 128, elements: !5399)
!5399 = !{!5400, !5401, !5402, !5403}
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5398, file: !172, line: 1352, baseType: !7, size: 32)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5398, file: !172, line: 1353, baseType: !7, size: 32, offset: 32)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !5398, file: !172, line: 1354, baseType: !7, size: 32, offset: 64)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5398, file: !172, line: 1355, baseType: !401, size: 32, offset: 96)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_work", scope: !343, file: !261, line: 99, baseType: !1234, size: 256, offset: 1728)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "died_work", scope: !343, file: !261, line: 101, baseType: !1234, size: 256, offset: 1984)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !343, file: !261, line: 106, baseType: !5407, size: 64, offset: 2240)
!5407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5408, size: 64)
!5408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5409)
!5409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hc_driver", file: !261, line: 249, size: 2880, elements: !5410)
!5410 = !{!5411, !5412, !5413, !5414, !5419, !5420, !5424, !5425, !5429, !5430, !5434, !5435, !5436, !5440, !5444, !5445, !5449, !5453, !5454, !5458, !5462, !5463, !5464, !5468, !5472, !5476, !5480, !5481, !5485, !5489, !5494, !5498, !5502, !5503, !5504, !5505, !5506, !5507, !5511, !5512, !5513, !5517, !5521, !5522, !5523}
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !5409, file: !261, line: 250, baseType: !357, size: 64)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "product_desc", scope: !5409, file: !261, line: 251, baseType: !357, size: 64, offset: 64)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "hcd_priv_size", scope: !5409, file: !261, line: 252, baseType: !462, size: 64, offset: 128)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5409, file: !261, line: 255, baseType: !5415, size: 64, offset: 192)
!5415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5416, size: 64)
!5416 = !DISubroutineType(types: !5417)
!5417 = !{!5418, !342}
!5418 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !184, line: 17, baseType: !183)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5409, file: !261, line: 257, baseType: !401, size: 32, offset: 256)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5409, file: !261, line: 271, baseType: !5421, size: 64, offset: 320)
!5421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5422, size: 64)
!5422 = !DISubroutineType(types: !5423)
!5423 = !{!401, !342}
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5409, file: !261, line: 272, baseType: !5421, size: 64, offset: 384)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "pci_suspend", scope: !5409, file: !261, line: 278, baseType: !5426, size: 64, offset: 448)
!5426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5427, size: 64)
!5427 = !DISubroutineType(types: !5428)
!5428 = !{!401, !342, !626}
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "pci_resume", scope: !5409, file: !261, line: 281, baseType: !5426, size: 64, offset: 512)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !5409, file: !261, line: 284, baseType: !5431, size: 64, offset: 576)
!5431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5432, size: 64)
!5432 = !DISubroutineType(types: !5433)
!5433 = !{null, !342}
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5409, file: !261, line: 287, baseType: !5431, size: 64, offset: 640)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "get_frame_number", scope: !5409, file: !261, line: 290, baseType: !5421, size: 64, offset: 704)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "urb_enqueue", scope: !5409, file: !261, line: 293, baseType: !5437, size: 64, offset: 768)
!5437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5438, size: 64)
!5438 = !DISubroutineType(types: !5439)
!5439 = !{!401, !342, !5343, !946}
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "urb_dequeue", scope: !5409, file: !261, line: 295, baseType: !5441, size: 64, offset: 832)
!5441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5442, size: 64)
!5442 = !DISubroutineType(types: !5443)
!5443 = !{!401, !342, !5343, !401}
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "map_urb_for_dma", scope: !5409, file: !261, line: 307, baseType: !5437, size: 64, offset: 896)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_urb_for_dma", scope: !5409, file: !261, line: 309, baseType: !5446, size: 64, offset: 960)
!5446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5447, size: 64)
!5447 = !DISubroutineType(types: !5448)
!5448 = !{null, !342, !5343}
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "endpoint_disable", scope: !5409, file: !261, line: 312, baseType: !5450, size: 64, offset: 1024)
!5450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5451, size: 64)
!5451 = !DISubroutineType(types: !5452)
!5452 = !{null, !342, !5245}
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "endpoint_reset", scope: !5409, file: !261, line: 317, baseType: !5450, size: 64, offset: 1088)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "hub_status_data", scope: !5409, file: !261, line: 321, baseType: !5455, size: 64, offset: 1152)
!5455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5456, size: 64)
!5456 = !DISubroutineType(types: !5457)
!5457 = !{!401, !342, !417}
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "hub_control", scope: !5409, file: !261, line: 322, baseType: !5459, size: 64, offset: 1216)
!5459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5460, size: 64)
!5460 = !DISubroutineType(types: !5461)
!5461 = !{!401, !342, !1062, !1062, !1062, !417, !1062}
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "bus_suspend", scope: !5409, file: !261, line: 325, baseType: !5421, size: 64, offset: 1280)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "bus_resume", scope: !5409, file: !261, line: 326, baseType: !5421, size: 64, offset: 1344)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "start_port_reset", scope: !5409, file: !261, line: 327, baseType: !5465, size: 64, offset: 1408)
!5465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5466, size: 64)
!5466 = !DISubroutineType(types: !5467)
!5467 = !{!401, !342, !7}
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "get_resuming_ports", scope: !5409, file: !261, line: 328, baseType: !5469, size: 64, offset: 1472)
!5469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5470, size: 64)
!5470 = !DISubroutineType(types: !5471)
!5471 = !{!465, !342}
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish_port", scope: !5409, file: !261, line: 331, baseType: !5473, size: 64, offset: 1536)
!5473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5474, size: 64)
!5474 = !DISubroutineType(types: !5475)
!5475 = !{null, !342, !401}
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "port_handed_over", scope: !5409, file: !261, line: 333, baseType: !5477, size: 64, offset: 1600)
!5477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5478, size: 64)
!5478 = !DISubroutineType(types: !5479)
!5479 = !{!401, !342, !401}
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "clear_tt_buffer_complete", scope: !5409, file: !261, line: 336, baseType: !5450, size: 64, offset: 1664)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dev", scope: !5409, file: !261, line: 341, baseType: !5482, size: 64, offset: 1728)
!5482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5483, size: 64)
!5483 = !DISubroutineType(types: !5484)
!5484 = !{!401, !342, !5047}
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "free_dev", scope: !5409, file: !261, line: 343, baseType: !5486, size: 64, offset: 1792)
!5486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5487, size: 64)
!5487 = !DISubroutineType(types: !5488)
!5488 = !{null, !342, !5047}
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_streams", scope: !5409, file: !261, line: 345, baseType: !5490, size: 64, offset: 1856)
!5490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5491, size: 64)
!5491 = !DISubroutineType(types: !5492)
!5492 = !{!401, !342, !5047, !5493, !7, !7, !946}
!5493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5245, size: 64)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "free_streams", scope: !5409, file: !261, line: 351, baseType: !5495, size: 64, offset: 1920)
!5495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5496, size: 64)
!5496 = !DISubroutineType(types: !5497)
!5497 = !{!401, !342, !5047, !5493, !7, !946}
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "add_endpoint", scope: !5409, file: !261, line: 366, baseType: !5499, size: 64, offset: 1984)
!5499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5500, size: 64)
!5500 = !DISubroutineType(types: !5501)
!5501 = !{!401, !342, !5047, !5245}
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "drop_endpoint", scope: !5409, file: !261, line: 369, baseType: !5499, size: 64, offset: 2048)
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "check_bandwidth", scope: !5409, file: !261, line: 376, baseType: !5482, size: 64, offset: 2112)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "reset_bandwidth", scope: !5409, file: !261, line: 384, baseType: !5486, size: 64, offset: 2176)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "address_device", scope: !5409, file: !261, line: 386, baseType: !5482, size: 64, offset: 2240)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "enable_device", scope: !5409, file: !261, line: 388, baseType: !5482, size: 64, offset: 2304)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "update_hub_device", scope: !5409, file: !261, line: 392, baseType: !5508, size: 64, offset: 2368)
!5508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5509, size: 64)
!5509 = !DISubroutineType(types: !5510)
!5510 = !{!401, !342, !5047, !5058, !946}
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "reset_device", scope: !5409, file: !261, line: 394, baseType: !5482, size: 64, offset: 2432)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "update_device", scope: !5409, file: !261, line: 398, baseType: !5482, size: 64, offset: 2496)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "set_usb2_hw_lpm", scope: !5409, file: !261, line: 399, baseType: !5514, size: 64, offset: 2560)
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5515, size: 64)
!5515 = !DISubroutineType(types: !5516)
!5516 = !{!401, !342, !5047, !401}
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "enable_usb3_lpm_timeout", scope: !5409, file: !261, line: 402, baseType: !5518, size: 64, offset: 2624)
!5518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5519, size: 64)
!5519 = !DISubroutineType(types: !5520)
!5520 = !{!401, !342, !5047, !189}
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "disable_usb3_lpm_timeout", scope: !5409, file: !261, line: 407, baseType: !5518, size: 64, offset: 2688)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "find_raw_port_number", scope: !5409, file: !261, line: 409, baseType: !5477, size: 64, offset: 2752)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "port_power", scope: !5409, file: !261, line: 411, baseType: !5524, size: 64, offset: 2816)
!5524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5525, size: 64)
!5525 = !DISubroutineType(types: !5526)
!5526 = !{!401, !342, !401, !626}
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "usb_phy", scope: !343, file: !261, line: 112, baseType: !5528, size: 64, offset: 2304)
!5528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5529, size: 64)
!5529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_phy", file: !196, line: 88, size: 2624, elements: !5530)
!5530 = !{!5531, !5532, !5533, !5534, !5535, !5536, !5660, !5661, !5673, !5674, !5678, !5679, !5691, !5692, !5693, !5694, !5695, !5706, !5707, !5712, !5713, !5714, !5715, !5719, !5723, !5727, !5731, !5732, !5736, !5740, !5741}
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5529, file: !196, line: 89, baseType: !349, size: 64)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !5529, file: !196, line: 90, baseType: !357, size: 64, offset: 64)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5529, file: !196, line: 91, baseType: !7, size: 32, offset: 128)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5529, file: !196, line: 93, baseType: !195, size: 32, offset: 160)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "last_event", scope: !5529, file: !196, line: 94, baseType: !201, size: 32, offset: 192)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "otg", scope: !5529, file: !196, line: 96, baseType: !5537, size: 64, offset: 256)
!5537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5538, size: 64)
!5538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_otg", file: !5539, line: 16, size: 704, elements: !5540)
!5539 = !DIFile(filename: "./include/linux/usb/otg.h", directory: "/home/lizy2001/genbc/linux")
!5540 = !{!5541, !5542, !5637, !5638, !5639, !5642, !5643, !5647, !5651, !5655, !5659}
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "default_a", scope: !5538, file: !5539, line: 17, baseType: !1182, size: 8)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "phy", scope: !5538, file: !5539, line: 19, baseType: !5543, size: 64, offset: 64)
!5543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5544, size: 64)
!5544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy", file: !209, line: 138, size: 6144, elements: !5545)
!5545 = !{!5546, !5547, !5548, !5624, !5625, !5626, !5627, !5633}
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5544, file: !209, line: 139, baseType: !350, size: 5568)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5544, file: !209, line: 140, baseType: !401, size: 32, offset: 5568)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5544, file: !209, line: 141, baseType: !5549, size: 64, offset: 5632)
!5549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5550, size: 64)
!5550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5551)
!5551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_ops", file: !209, line: 72, size: 704, elements: !5552)
!5552 = !{!5553, !5557, !5558, !5559, !5560, !5564, !5613, !5617, !5618, !5619, !5623}
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !5551, file: !209, line: 73, baseType: !5554, size: 64)
!5554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5555, size: 64)
!5555 = !DISubroutineType(types: !5556)
!5556 = !{!401, !5543}
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !5551, file: !209, line: 74, baseType: !5554, size: 64, offset: 64)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "power_on", scope: !5551, file: !209, line: 75, baseType: !5554, size: 64, offset: 128)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "power_off", scope: !5551, file: !209, line: 76, baseType: !5554, size: 64, offset: 192)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !5551, file: !209, line: 77, baseType: !5561, size: 64, offset: 256)
!5561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5562, size: 64)
!5562 = !DISubroutineType(types: !5563)
!5563 = !{!401, !5543, !208, !401}
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !5551, file: !209, line: 89, baseType: !5565, size: 64, offset: 320)
!5565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5566, size: 64)
!5566 = !DISubroutineType(types: !5567)
!5567 = !{!401, !5543, !5568}
!5568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5569, size: 64)
!5569 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "phy_configure_opts", file: !209, line: 55, size: 896, elements: !5570)
!5570 = !{!5571, !5600}
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "mipi_dphy", scope: !5569, file: !209, line: 56, baseType: !5572, size: 896)
!5572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_configure_opts_mipi_dphy", file: !5573, line: 15, size: 896, elements: !5574)
!5573 = !DIFile(filename: "./include/linux/phy/phy-mipi-dphy.h", directory: "/home/lizy2001/genbc/linux")
!5574 = !{!5575, !5576, !5577, !5578, !5579, !5580, !5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5589, !5590, !5591, !5592, !5593, !5594, !5595, !5596, !5597, !5598, !5599}
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "clk_miss", scope: !5572, file: !5573, line: 24, baseType: !7, size: 32)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "clk_post", scope: !5572, file: !5573, line: 36, baseType: !7, size: 32, offset: 32)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "clk_pre", scope: !5572, file: !5573, line: 47, baseType: !7, size: 32, offset: 64)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "clk_prepare", scope: !5572, file: !5573, line: 59, baseType: !7, size: 32, offset: 96)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "clk_settle", scope: !5572, file: !5573, line: 71, baseType: !7, size: 32, offset: 128)
!5580 = !DIDerivedType(tag: DW_TAG_member, name: "clk_term_en", scope: !5572, file: !5573, line: 81, baseType: !7, size: 32, offset: 160)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "clk_trail", scope: !5572, file: !5573, line: 92, baseType: !7, size: 32, offset: 192)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "clk_zero", scope: !5572, file: !5573, line: 100, baseType: !7, size: 32, offset: 224)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "d_term_en", scope: !5572, file: !5573, line: 110, baseType: !7, size: 32, offset: 256)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "eot", scope: !5572, file: !5573, line: 121, baseType: !7, size: 32, offset: 288)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "hs_exit", scope: !5572, file: !5573, line: 131, baseType: !7, size: 32, offset: 320)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "hs_prepare", scope: !5572, file: !5573, line: 143, baseType: !7, size: 32, offset: 352)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "hs_settle", scope: !5572, file: !5573, line: 155, baseType: !7, size: 32, offset: 384)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "hs_skip", scope: !5572, file: !5573, line: 168, baseType: !7, size: 32, offset: 416)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "hs_trail", scope: !5572, file: !5573, line: 180, baseType: !7, size: 32, offset: 448)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "hs_zero", scope: !5572, file: !5573, line: 188, baseType: !7, size: 32, offset: 480)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !5572, file: !5573, line: 198, baseType: !7, size: 32, offset: 512)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "lpx", scope: !5572, file: !5573, line: 208, baseType: !7, size: 32, offset: 544)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "ta_get", scope: !5572, file: !5573, line: 219, baseType: !7, size: 32, offset: 576)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "ta_go", scope: !5572, file: !5573, line: 230, baseType: !7, size: 32, offset: 608)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "ta_sure", scope: !5572, file: !5573, line: 242, baseType: !7, size: 32, offset: 640)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !5572, file: !5573, line: 253, baseType: !7, size: 32, offset: 672)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "hs_clk_rate", scope: !5572, file: !5573, line: 260, baseType: !465, size: 64, offset: 704)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "lp_clk_rate", scope: !5572, file: !5573, line: 267, baseType: !465, size: 64, offset: 768)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "lanes", scope: !5572, file: !5573, line: 275, baseType: !313, size: 8, offset: 832)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "dp", scope: !5569, file: !209, line: 57, baseType: !5601, size: 352)
!5601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_configure_opts_dp", file: !5602, line: 17, size: 352, elements: !5603)
!5602 = !DIFile(filename: "./include/linux/phy/phy-dp.h", directory: "/home/lizy2001/genbc/linux")
!5603 = !{!5604, !5605, !5606, !5608, !5609, !5610, !5611, !5612}
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "link_rate", scope: !5601, file: !5602, line: 25, baseType: !7, size: 32)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "lanes", scope: !5601, file: !5602, line: 35, baseType: !7, size: 32, offset: 32)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "voltage", scope: !5601, file: !5602, line: 46, baseType: !5607, size: 128, offset: 64)
!5607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !331)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "pre", scope: !5601, file: !5602, line: 56, baseType: !5607, size: 128, offset: 192)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "ssc", scope: !5601, file: !5602, line: 64, baseType: !1182, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !5601, file: !5602, line: 73, baseType: !1182, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "set_lanes", scope: !5601, file: !5602, line: 82, baseType: !1182, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "set_voltages", scope: !5601, file: !5602, line: 92, baseType: !1182, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !5551, file: !209, line: 107, baseType: !5614, size: 64, offset: 384)
!5614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5615, size: 64)
!5615 = !DISubroutineType(types: !5616)
!5616 = !{!401, !5543, !208, !401, !5568}
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5551, file: !209, line: 109, baseType: !5554, size: 64, offset: 448)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "calibrate", scope: !5551, file: !209, line: 110, baseType: !5554, size: 64, offset: 512)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5551, file: !209, line: 111, baseType: !5620, size: 64, offset: 576)
!5620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5621, size: 64)
!5621 = !DISubroutineType(types: !5622)
!5622 = !{null, !5543}
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5551, file: !209, line: 112, baseType: !769, size: 64, offset: 640)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5544, file: !209, line: 142, baseType: !876, size: 192, offset: 5696)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "init_count", scope: !5544, file: !209, line: 143, baseType: !401, size: 32, offset: 5888)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "power_count", scope: !5544, file: !209, line: 144, baseType: !401, size: 32, offset: 5920)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !5544, file: !209, line: 145, baseType: !5628, size: 96, offset: 5952)
!5628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phy_attrs", file: !209, line: 121, size: 96, elements: !5629)
!5629 = !{!5630, !5631, !5632}
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "bus_width", scope: !5628, file: !209, line: 122, baseType: !303, size: 32)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "max_link_rate", scope: !5628, file: !209, line: 123, baseType: !303, size: 32, offset: 32)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5628, file: !209, line: 124, baseType: !208, size: 32, offset: 64)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "pwr", scope: !5544, file: !209, line: 146, baseType: !5634, size: 64, offset: 6080)
!5634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5635, size: 64)
!5635 = !DICompositeType(tag: DW_TAG_structure_type, name: "regulator", file: !5636, line: 155, flags: DIFlagFwdDecl)
!5636 = !DIFile(filename: "./include/linux/regulator/consumer.h", directory: "/home/lizy2001/genbc/linux")
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "usb_phy", scope: !5538, file: !5539, line: 21, baseType: !5528, size: 64, offset: 128)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !5538, file: !5539, line: 22, baseType: !5073, size: 64, offset: 192)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "gadget", scope: !5538, file: !5539, line: 23, baseType: !5640, size: 64, offset: 256)
!5640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5641, size: 64)
!5641 = !DICompositeType(tag: DW_TAG_structure_type, name: "usb_gadget", file: !5539, line: 23, flags: DIFlagFwdDecl)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5538, file: !5539, line: 25, baseType: !231, size: 32, offset: 320)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "set_host", scope: !5538, file: !5539, line: 28, baseType: !5644, size: 64, offset: 384)
!5644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5645, size: 64)
!5645 = !DISubroutineType(types: !5646)
!5646 = !{!401, !5537, !5073}
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "set_peripheral", scope: !5538, file: !5539, line: 31, baseType: !5648, size: 64, offset: 448)
!5648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5649, size: 64)
!5649 = !DISubroutineType(types: !5650)
!5650 = !{!401, !5537, !5640}
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "set_vbus", scope: !5538, file: !5539, line: 35, baseType: !5652, size: 64, offset: 512)
!5652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5653, size: 64)
!5653 = !DISubroutineType(types: !5654)
!5654 = !{!401, !5537, !626}
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "start_srp", scope: !5538, file: !5539, line: 38, baseType: !5656, size: 64, offset: 576)
!5656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5657, size: 64)
!5657 = !DISubroutineType(types: !5658)
!5658 = !{!401, !5537}
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "start_hnp", scope: !5538, file: !5539, line: 41, baseType: !5656, size: 64, offset: 640)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "io_dev", scope: !5529, file: !196, line: 98, baseType: !349, size: 64, offset: 320)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "io_ops", scope: !5529, file: !196, line: 99, baseType: !5662, size: 64, offset: 384)
!5662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5663, size: 64)
!5663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_phy_io_ops", file: !196, line: 72, size: 128, elements: !5664)
!5664 = !{!5665, !5669}
!5665 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !5663, file: !196, line: 73, baseType: !5666, size: 64)
!5666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5667, size: 64)
!5667 = !DISubroutineType(types: !5668)
!5668 = !{!401, !5528, !303}
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !5663, file: !196, line: 74, baseType: !5670, size: 64, offset: 64)
!5670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5671, size: 64)
!5671 = !DISubroutineType(types: !5672)
!5672 = !{!401, !5528, !303, !303}
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "io_priv", scope: !5529, file: !196, line: 100, baseType: !341, size: 64, offset: 448)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "edev", scope: !5529, file: !196, line: 103, baseType: !5675, size: 64, offset: 512)
!5675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5676, size: 64)
!5676 = !DICompositeType(tag: DW_TAG_structure_type, name: "extcon_dev", file: !5677, line: 166, flags: DIFlagFwdDecl)
!5677 = !DIFile(filename: "./include/linux/extcon.h", directory: "/home/lizy2001/genbc/linux")
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "id_edev", scope: !5529, file: !196, line: 104, baseType: !5675, size: 64, offset: 576)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "vbus_nb", scope: !5529, file: !196, line: 105, baseType: !5680, size: 192, offset: 640)
!5680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !5681, line: 54, size: 192, elements: !5682)
!5681 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!5682 = !{!5683, !5689, !5690}
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !5680, file: !5681, line: 55, baseType: !5684, size: 64)
!5684 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !5681, line: 51, baseType: !5685)
!5685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5686, size: 64)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{!401, !5688, !465, !341}
!5688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5680, size: 64)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5680, file: !5681, line: 56, baseType: !5688, size: 64, offset: 64)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !5680, file: !5681, line: 57, baseType: !401, size: 32, offset: 128)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "id_nb", scope: !5529, file: !196, line: 106, baseType: !5680, size: 192, offset: 832)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "type_nb", scope: !5529, file: !196, line: 107, baseType: !5680, size: 192, offset: 1024)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "chg_type", scope: !5529, file: !196, line: 110, baseType: !247, size: 32, offset: 1216)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "chg_state", scope: !5529, file: !196, line: 111, baseType: !255, size: 32, offset: 1248)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "chg_cur", scope: !5529, file: !196, line: 112, baseType: !5696, size: 256, offset: 1280)
!5696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "usb_charger_current", file: !196, line: 77, size: 256, elements: !5697)
!5697 = !{!5698, !5699, !5700, !5701, !5702, !5703, !5704, !5705}
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "sdp_min", scope: !5696, file: !196, line: 78, baseType: !7, size: 32)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "sdp_max", scope: !5696, file: !196, line: 79, baseType: !7, size: 32, offset: 32)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "dcp_min", scope: !5696, file: !196, line: 80, baseType: !7, size: 32, offset: 64)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "dcp_max", scope: !5696, file: !196, line: 81, baseType: !7, size: 32, offset: 96)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "cdp_min", scope: !5696, file: !196, line: 82, baseType: !7, size: 32, offset: 128)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "cdp_max", scope: !5696, file: !196, line: 83, baseType: !7, size: 32, offset: 160)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "aca_min", scope: !5696, file: !196, line: 84, baseType: !7, size: 32, offset: 192)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "aca_max", scope: !5696, file: !196, line: 85, baseType: !7, size: 32, offset: 224)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "chg_work", scope: !5529, file: !196, line: 113, baseType: !1234, size: 256, offset: 1536)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "notifier", scope: !5529, file: !196, line: 116, baseType: !5708, size: 64, offset: 1792)
!5708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "atomic_notifier_head", file: !5681, line: 60, size: 64, elements: !5709)
!5709 = !{!5710, !5711}
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5708, file: !5681, line: 61, baseType: !375)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5708, file: !5681, line: 62, baseType: !5688, size: 64)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "port_status", scope: !5529, file: !196, line: 119, baseType: !1062, size: 16, offset: 1856)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "port_change", scope: !5529, file: !196, line: 120, baseType: !1062, size: 16, offset: 1872)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5529, file: !196, line: 123, baseType: !361, size: 128, offset: 1920)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !5529, file: !196, line: 126, baseType: !5716, size: 64, offset: 2048)
!5716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5717, size: 64)
!5717 = !DISubroutineType(types: !5718)
!5718 = !{!401, !5528}
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5529, file: !196, line: 127, baseType: !5720, size: 64, offset: 2112)
!5720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5721, size: 64)
!5721 = !DISubroutineType(types: !5722)
!5722 = !{null, !5528}
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "set_vbus", scope: !5529, file: !196, line: 130, baseType: !5724, size: 64, offset: 2176)
!5724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5725, size: 64)
!5725 = !DISubroutineType(types: !5726)
!5726 = !{!401, !5528, !401}
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "set_power", scope: !5529, file: !196, line: 133, baseType: !5728, size: 64, offset: 2240)
!5728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5729, size: 64)
!5729 = !DISubroutineType(types: !5730)
!5730 = !{!401, !5528, !7}
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "set_suspend", scope: !5529, file: !196, line: 137, baseType: !5724, size: 64, offset: 2304)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "set_wakeup", scope: !5529, file: !196, line: 145, baseType: !5733, size: 64, offset: 2368)
!5733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5734, size: 64)
!5734 = !DISubroutineType(types: !5735)
!5735 = !{!401, !5528, !626}
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "notify_connect", scope: !5529, file: !196, line: 148, baseType: !5737, size: 64, offset: 2432)
!5737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5738, size: 64)
!5738 = !DISubroutineType(types: !5739)
!5739 = !{!401, !5528, !45}
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "notify_disconnect", scope: !5529, file: !196, line: 150, baseType: !5737, size: 64, offset: 2496)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "charger_detect", scope: !5529, file: !196, line: 157, baseType: !5742, size: 64, offset: 2560)
!5742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5743, size: 64)
!5743 = !DISubroutineType(types: !5744)
!5744 = !{!247, !5528}
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "phy_roothub", scope: !343, file: !261, line: 113, baseType: !5746, size: 64, offset: 2368)
!5746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5747, size: 64)
!5747 = !DICompositeType(tag: DW_TAG_structure_type, name: "usb_phy_roothub", file: !261, line: 113, flags: DIFlagFwdDecl)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !343, file: !261, line: 119, baseType: !465, size: 64, offset: 2432)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "dev_policy", scope: !343, file: !261, line: 151, baseType: !260, size: 32, offset: 2496)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "rh_registered", scope: !343, file: !261, line: 154, baseType: !7, size: 1, offset: 2528, flags: DIFlagBitField, extraData: i64 2528)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "rh_pollable", scope: !343, file: !261, line: 155, baseType: !7, size: 1, offset: 2529, flags: DIFlagBitField, extraData: i64 2528)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !343, file: !261, line: 156, baseType: !7, size: 1, offset: 2530, flags: DIFlagBitField, extraData: i64 2528)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !343, file: !261, line: 157, baseType: !7, size: 1, offset: 2531, flags: DIFlagBitField, extraData: i64 2528)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "skip_phy_initialization", scope: !343, file: !261, line: 163, baseType: !7, size: 1, offset: 2532, flags: DIFlagBitField, extraData: i64 2528)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "uses_new_polling", scope: !343, file: !261, line: 167, baseType: !7, size: 1, offset: 2533, flags: DIFlagBitField, extraData: i64 2528)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "wireless", scope: !343, file: !261, line: 168, baseType: !7, size: 1, offset: 2534, flags: DIFlagBitField, extraData: i64 2528)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "has_tt", scope: !343, file: !261, line: 169, baseType: !7, size: 1, offset: 2535, flags: DIFlagBitField, extraData: i64 2528)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "amd_resume_bug", scope: !343, file: !261, line: 170, baseType: !7, size: 1, offset: 2536, flags: DIFlagBitField, extraData: i64 2528)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "can_do_streams", scope: !343, file: !261, line: 171, baseType: !7, size: 1, offset: 2537, flags: DIFlagBitField, extraData: i64 2528)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "tpl_support", scope: !343, file: !261, line: 172, baseType: !7, size: 1, offset: 2538, flags: DIFlagBitField, extraData: i64 2528)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "cant_recv_wakeups", scope: !343, file: !261, line: 173, baseType: !7, size: 1, offset: 2539, flags: DIFlagBitField, extraData: i64 2528)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !343, file: !261, line: 176, baseType: !7, size: 32, offset: 2560)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !343, file: !261, line: 177, baseType: !341, size: 64, offset: 2624)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "rsrc_start", scope: !343, file: !261, line: 178, baseType: !5765, size: 64, offset: 2688)
!5765 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !362, line: 158, baseType: !3378)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "rsrc_len", scope: !343, file: !261, line: 179, baseType: !5765, size: 64, offset: 2752)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "power_budget", scope: !343, file: !261, line: 180, baseType: !7, size: 32, offset: 2816)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "high_prio_bh", scope: !343, file: !261, line: 182, baseType: !5769, size: 576, offset: 2880)
!5769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "giveback_urb_bh", file: !261, line: 67, size: 576, elements: !5770)
!5770 = !{!5771, !5772, !5773, !5774, !5795}
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !5769, file: !261, line: 68, baseType: !626, size: 8)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5769, file: !261, line: 69, baseType: !375, offset: 8)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5769, file: !261, line: 70, baseType: !361, size: 128, offset: 64)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "bh", scope: !5769, file: !261, line: 71, baseType: !5775, size: 320, offset: 192)
!5775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tasklet_struct", file: !5776, line: 609, size: 320, elements: !5777)
!5776 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!5777 = !{!5778, !5780, !5781, !5782, !5783, !5794}
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5775, file: !5776, line: 611, baseType: !5779, size: 64)
!5779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5775, size: 64)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5775, file: !5776, line: 612, baseType: !465, size: 64, offset: 64)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5775, file: !5776, line: 613, baseType: !950, size: 32, offset: 128)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "use_callback", scope: !5775, file: !5776, line: 614, baseType: !626, size: 8, offset: 160)
!5783 = !DIDerivedType(tag: DW_TAG_member, scope: !5775, file: !5776, line: 615, baseType: !5784, size: 64, offset: 192)
!5784 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5775, file: !5776, line: 615, size: 64, elements: !5785)
!5785 = !{!5786, !5790}
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5784, file: !5776, line: 616, baseType: !5787, size: 64)
!5787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5788, size: 64)
!5788 = !DISubroutineType(types: !5789)
!5789 = !{null, !465}
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !5784, file: !5776, line: 617, baseType: !5791, size: 64)
!5791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5792, size: 64)
!5792 = !DISubroutineType(types: !5793)
!5793 = !{null, !5779}
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5775, file: !5776, line: 619, baseType: !465, size: 64, offset: 256)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "completing_ep", scope: !5769, file: !261, line: 72, baseType: !5245, size: 64, offset: 512)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "low_prio_bh", scope: !343, file: !261, line: 183, baseType: !5769, size: 576, offset: 3456)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "address0_mutex", scope: !343, file: !261, line: 196, baseType: !5798, size: 64, offset: 4032)
!5798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_mutex", scope: !343, file: !261, line: 197, baseType: !5798, size: 64, offset: 4096)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "shared_hcd", scope: !343, file: !261, line: 198, baseType: !342, size: 64, offset: 4160)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "primary_hcd", scope: !343, file: !261, line: 199, baseType: !342, size: 64, offset: 4224)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !343, file: !261, line: 203, baseType: !5803, size: 256, offset: 4288)
!5803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5804, size: 256, elements: !331)
!5804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5805, size: 64)
!5805 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_pool", file: !5806, line: 21, flags: DIFlagFwdDecl)
!5806 = !DIFile(filename: "./include/linux/dmapool.h", directory: "/home/lizy2001/genbc/linux")
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !343, file: !261, line: 205, baseType: !401, size: 32, offset: 4544)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "localmem_pool", scope: !343, file: !261, line: 220, baseType: !5809, size: 64, offset: 4608)
!5809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5810, size: 64)
!5810 = !DICompositeType(tag: DW_TAG_structure_type, name: "gen_pool", file: !261, line: 220, flags: DIFlagFwdDecl)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "hcd_priv", scope: !343, file: !261, line: 231, baseType: !3581, align: 64, offset: 4672)
!5812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5813, size: 64)
!5813 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!5814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5815, size: 64)
!5815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_hcd", file: !6, line: 111, size: 6848, elements: !5816)
!5816 = !{!5817, !5818, !5819, !5821, !5822, !5823, !5824, !5825, !5835, !5864, !5874, !5875, !5876, !5877, !5878, !5879, !5880, !5881, !5882, !5883, !6016, !6017, !6018, !6019, !6020, !6021, !6022, !6023, !6024, !6025, !6026, !6027, !6028, !6029, !6031, !6032, !6033, !6034, !6035, !6036, !6037, !6038, !6039, !6040, !6041, !6042, !6043, !6044, !6045, !6049, !6050, !6051, !6052, !6053, !6054, !6055, !6056, !6057, !6058, !6059, !6060, !6061, !6062, !6063, !6064, !6065, !6066, !6067, !6068, !6069, !6070, !6071, !6072, !6073, !6074, !6075, !6076, !6077, !6078, !6079, !6080, !6081, !6082, !6083, !6084, !6085, !6086}
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "next_hrtimer_event", scope: !5815, file: !6, line: 113, baseType: !5, size: 32)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "enabled_hrtimer_events", scope: !5815, file: !6, line: 114, baseType: !7, size: 32, offset: 32)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "hr_timeouts", scope: !5815, file: !6, line: 115, baseType: !5820, size: 768, offset: 64)
!5820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2429, size: 768, elements: !3487)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "hrtimer", scope: !5815, file: !6, line: 116, baseType: !2421, size: 512, offset: 832)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "PSS_poll_count", scope: !5815, file: !6, line: 118, baseType: !401, size: 32, offset: 1344)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "ASS_poll_count", scope: !5815, file: !6, line: 119, baseType: !401, size: 32, offset: 1376)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "died_poll_count", scope: !5815, file: !6, line: 120, baseType: !401, size: 32, offset: 1408)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !5815, file: !6, line: 123, baseType: !5826, size: 64, offset: 1472)
!5826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5827, size: 64)
!5827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_caps", file: !5828, line: 28, size: 160, elements: !5829)
!5828 = !DIFile(filename: "./include/linux/usb/ehci_def.h", directory: "/home/lizy2001/genbc/linux")
!5829 = !{!5830, !5831, !5832, !5833}
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "hc_capbase", scope: !5827, file: !5828, line: 35, baseType: !303, size: 32)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "hcs_params", scope: !5827, file: !5828, line: 40, baseType: !303, size: 32, offset: 32)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "hcc_params", scope: !5827, file: !5828, line: 49, baseType: !303, size: 32, offset: 64)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "portroute", scope: !5827, file: !5828, line: 62, baseType: !5834, size: 64, offset: 96)
!5834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1182, size: 64, elements: !2459)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5815, file: !6, line: 124, baseType: !5836, size: 64, offset: 1536)
!5836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5837, size: 64)
!5837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_regs", file: !5828, line: 67, size: 1632, elements: !5838)
!5838 = !{!5839, !5840, !5841, !5842, !5843, !5844, !5845, !5846, !5848, !5849, !5851, !5852, !5854, !5856, !5857, !5858, !5859, !5863}
!5839 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !5837, file: !5828, line: 70, baseType: !303, size: 32)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5837, file: !5828, line: 90, baseType: !303, size: 32, offset: 32)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "intr_enable", scope: !5837, file: !5828, line: 106, baseType: !303, size: 32, offset: 64)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "frame_index", scope: !5837, file: !5828, line: 109, baseType: !303, size: 32, offset: 96)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "segment", scope: !5837, file: !5828, line: 111, baseType: !303, size: 32, offset: 128)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "frame_list", scope: !5837, file: !5828, line: 113, baseType: !303, size: 32, offset: 160)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "async_next", scope: !5837, file: !5828, line: 115, baseType: !303, size: 32, offset: 192)
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !5837, file: !5828, line: 117, baseType: !5847, size: 64, offset: 224)
!5847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 64, elements: !1537)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "txfill_tuning", scope: !5837, file: !5828, line: 120, baseType: !303, size: 32, offset: 288)
!5849 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !5837, file: !5828, line: 123, baseType: !5850, size: 192, offset: 320)
!5850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 192, elements: !2743)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "configured_flag", scope: !5837, file: !5828, line: 126, baseType: !303, size: 32, offset: 512)
!5852 = !DIDerivedType(tag: DW_TAG_member, name: "port_status", scope: !5837, file: !5828, line: 130, baseType: !5853, offset: 544)
!5853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, elements: !2981)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "reserved3", scope: !5837, file: !5828, line: 168, baseType: !5855, size: 288, offset: 544)
!5855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 288, elements: !4672)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "usbmode", scope: !5837, file: !5828, line: 171, baseType: !303, size: 32, offset: 832)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "reserved4", scope: !5837, file: !5828, line: 177, baseType: !5850, size: 192, offset: 864)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "hostpc", scope: !5837, file: !5828, line: 184, baseType: !5853, offset: 1056)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "reserved5", scope: !5837, file: !5828, line: 188, baseType: !5860, size: 544, offset: 1056)
!5860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 544, elements: !5861)
!5861 = !{!5862}
!5862 = !DISubrange(count: 17)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "usbmode_ex", scope: !5837, file: !5828, line: 191, baseType: !303, size: 32, offset: 1600)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !5815, file: !6, line: 125, baseType: !5865, size: 64, offset: 1600)
!5865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5866, size: 64)
!5866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_dbg_port", file: !5867, line: 24, size: 160, elements: !5868)
!5867 = !DIFile(filename: "./include/linux/usb/ehci-dbgp.h", directory: "/home/lizy2001/genbc/linux")
!5868 = !{!5869, !5870, !5871, !5872, !5873}
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !5866, file: !5867, line: 25, baseType: !303, size: 32)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !5866, file: !5867, line: 37, baseType: !303, size: 32, offset: 32)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "data03", scope: !5866, file: !5867, line: 40, baseType: !303, size: 32, offset: 64)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "data47", scope: !5866, file: !5867, line: 41, baseType: !303, size: 32, offset: 96)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !5866, file: !5867, line: 42, baseType: !303, size: 32, offset: 128)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "hcs_params", scope: !5815, file: !6, line: 127, baseType: !305, size: 32, offset: 1664)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5815, file: !6, line: 128, baseType: !375, offset: 1696)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "rh_state", scope: !5815, file: !6, line: 129, baseType: !27, size: 32, offset: 1696)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "scanning", scope: !5815, file: !6, line: 132, baseType: !626, size: 1, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "need_rescan", scope: !5815, file: !6, line: 133, baseType: !626, size: 1, offset: 1729, flags: DIFlagBitField, extraData: i64 1728)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "intr_unlinking", scope: !5815, file: !6, line: 134, baseType: !626, size: 1, offset: 1730, flags: DIFlagBitField, extraData: i64 1728)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "iaa_in_progress", scope: !5815, file: !6, line: 135, baseType: !626, size: 1, offset: 1731, flags: DIFlagBitField, extraData: i64 1728)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "async_unlinking", scope: !5815, file: !6, line: 136, baseType: !626, size: 1, offset: 1732, flags: DIFlagBitField, extraData: i64 1728)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5815, file: !6, line: 137, baseType: !626, size: 1, offset: 1733, flags: DIFlagBitField, extraData: i64 1728)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "qh_scan_next", scope: !5815, file: !6, line: 138, baseType: !5884, size: 64, offset: 1792)
!5884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5885, size: 64)
!5885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_qh", file: !6, line: 404, size: 1152, elements: !5886)
!5886 = !{!5887, !5901, !5902, !5990, !5991, !5992, !6005, !6006, !6007, !6008, !6009, !6010, !6011, !6012, !6013, !6014, !6015}
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !5885, file: !6, line: 405, baseType: !5888, size: 64)
!5888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5889, size: 64)
!5889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_qh_hw", file: !6, line: 378, size: 768, align: 256, elements: !5890)
!5890 = !{!5891, !5892, !5893, !5894, !5895, !5896, !5897, !5898, !5900}
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "hw_next", scope: !5889, file: !6, line: 379, baseType: !5103, size: 32)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "hw_info1", scope: !5889, file: !6, line: 380, baseType: !5103, size: 32, offset: 32)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "hw_info2", scope: !5889, file: !6, line: 388, baseType: !5103, size: 32, offset: 64)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "hw_current", scope: !5889, file: !6, line: 394, baseType: !5103, size: 32, offset: 96)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "hw_qtd_next", scope: !5889, file: !6, line: 397, baseType: !5103, size: 32, offset: 128)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "hw_alt_next", scope: !5889, file: !6, line: 398, baseType: !5103, size: 32, offset: 160)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "hw_token", scope: !5889, file: !6, line: 399, baseType: !5103, size: 32, offset: 192)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "hw_buf", scope: !5889, file: !6, line: 400, baseType: !5899, size: 160, offset: 224)
!5899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5103, size: 160, elements: !2014)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "hw_buf_hi", scope: !5889, file: !6, line: 401, baseType: !5899, size: 160, offset: 384)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "qh_dma", scope: !5885, file: !6, line: 407, baseType: !2064, size: 64, offset: 64)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "qh_next", scope: !5885, file: !6, line: 408, baseType: !5903, size: 64, offset: 128)
!5903 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ehci_shadow", file: !6, line: 358, size: 64, elements: !5904)
!5904 = !{!5905, !5906, !5960, !5979, !5987, !5989}
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "qh", scope: !5903, file: !6, line: 359, baseType: !5884, size: 64)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "itd", scope: !5903, file: !6, line: 360, baseType: !5907, size: 64)
!5907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5908, size: 64)
!5908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_itd", file: !6, line: 508, size: 1536, align: 256, elements: !5909)
!5909 = !{!5910, !5911, !5913, !5917, !5918, !5919, !5920, !5921, !5955, !5956, !5957, !5958}
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "hw_next", scope: !5908, file: !6, line: 510, baseType: !5103, size: 32)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "hw_transaction", scope: !5908, file: !6, line: 511, baseType: !5912, size: 256, offset: 32)
!5912 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5103, size: 256, elements: !2459)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "hw_bufp", scope: !5908, file: !6, line: 521, baseType: !5914, size: 224, offset: 288)
!5914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5103, size: 224, elements: !5915)
!5915 = !{!5916}
!5916 = !DISubrange(count: 7)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "hw_bufp_hi", scope: !5908, file: !6, line: 522, baseType: !5914, size: 224, offset: 512)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "itd_dma", scope: !5908, file: !6, line: 525, baseType: !2064, size: 64, offset: 768)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "itd_next", scope: !5908, file: !6, line: 526, baseType: !5903, size: 64, offset: 832)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "urb", scope: !5908, file: !6, line: 528, baseType: !5343, size: 64, offset: 896)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !5908, file: !6, line: 529, baseType: !5922, size: 64, offset: 960)
!5922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5923, size: 64)
!5923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_iso_stream", file: !6, line: 470, size: 1024, elements: !5924)
!5924 = !{!5925, !5926, !5927, !5928, !5929, !5930, !5946, !5947, !5948, !5949, !5950, !5951, !5952, !5953, !5954}
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "hw", scope: !5923, file: !6, line: 472, baseType: !5888, size: 64)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "bEndpointAddress", scope: !5923, file: !6, line: 474, baseType: !1182, size: 8, offset: 64)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "highspeed", scope: !5923, file: !6, line: 475, baseType: !1182, size: 8, offset: 72)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "td_list", scope: !5923, file: !6, line: 476, baseType: !361, size: 128, offset: 128)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "free_list", scope: !5923, file: !6, line: 477, baseType: !361, size: 128, offset: 256)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !5923, file: !6, line: 480, baseType: !5931, size: 384, offset: 384)
!5931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_per_sched", file: !6, line: 48, size: 384, elements: !5932)
!5932 = !{!5933, !5934, !5935, !5936, !5937, !5938, !5939, !5940, !5941, !5942, !5943, !5944, !5945}
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "udev", scope: !5931, file: !6, line: 49, baseType: !5047, size: 64)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "ep", scope: !5931, file: !6, line: 50, baseType: !5245, size: 64, offset: 64)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "ps_list", scope: !5931, file: !6, line: 51, baseType: !361, size: 128, offset: 128)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "tt_usecs", scope: !5931, file: !6, line: 52, baseType: !1062, size: 16, offset: 256)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "cs_mask", scope: !5931, file: !6, line: 53, baseType: !1062, size: 16, offset: 272)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !5931, file: !6, line: 54, baseType: !1062, size: 16, offset: 288)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !5931, file: !6, line: 55, baseType: !1062, size: 16, offset: 304)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "bw_phase", scope: !5931, file: !6, line: 56, baseType: !1182, size: 8, offset: 320)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "phase_uf", scope: !5931, file: !6, line: 58, baseType: !1182, size: 8, offset: 328)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "usecs", scope: !5931, file: !6, line: 59, baseType: !1182, size: 8, offset: 336)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "c_usecs", scope: !5931, file: !6, line: 59, baseType: !1182, size: 8, offset: 344)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "bw_uperiod", scope: !5931, file: !6, line: 60, baseType: !1182, size: 8, offset: 352)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "bw_period", scope: !5931, file: !6, line: 62, baseType: !1182, size: 8, offset: 360)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "next_uframe", scope: !5923, file: !6, line: 481, baseType: !7, size: 32, offset: 768)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "splits", scope: !5923, file: !6, line: 482, baseType: !5103, size: 32, offset: 800)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "uperiod", scope: !5923, file: !6, line: 487, baseType: !1062, size: 16, offset: 832)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "maxp", scope: !5923, file: !6, line: 488, baseType: !1062, size: 16, offset: 848)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth", scope: !5923, file: !6, line: 489, baseType: !7, size: 32, offset: 864)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "buf0", scope: !5923, file: !6, line: 492, baseType: !5103, size: 32, offset: 896)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "buf1", scope: !5923, file: !6, line: 493, baseType: !5103, size: 32, offset: 928)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "buf2", scope: !5923, file: !6, line: 494, baseType: !5103, size: 32, offset: 960)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !5923, file: !6, line: 497, baseType: !5103, size: 32, offset: 992)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "itd_list", scope: !5908, file: !6, line: 530, baseType: !361, size: 128, offset: 1024)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !5908, file: !6, line: 533, baseType: !7, size: 32, offset: 1152)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "pg", scope: !5908, file: !6, line: 534, baseType: !7, size: 32, offset: 1184)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5908, file: !6, line: 535, baseType: !5959, size: 256, offset: 1216)
!5959 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !2459)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "sitd", scope: !5903, file: !6, line: 361, baseType: !5961, size: 64)
!5961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5962, size: 64)
!5962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_sitd", file: !6, line: 546, size: 768, align: 256, elements: !5963)
!5963 = !{!5964, !5965, !5966, !5967, !5968, !5970, !5971, !5972, !5973, !5974, !5975, !5976, !5977, !5978}
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "hw_next", scope: !5962, file: !6, line: 548, baseType: !5103, size: 32)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "hw_fullspeed_ep", scope: !5962, file: !6, line: 550, baseType: !5103, size: 32, offset: 32)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "hw_uframe", scope: !5962, file: !6, line: 551, baseType: !5103, size: 32, offset: 64)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "hw_results", scope: !5962, file: !6, line: 552, baseType: !5103, size: 32, offset: 96)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "hw_buf", scope: !5962, file: !6, line: 566, baseType: !5969, size: 64, offset: 128)
!5969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5103, size: 64, elements: !1537)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "hw_backpointer", scope: !5962, file: !6, line: 567, baseType: !5103, size: 32, offset: 192)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "hw_buf_hi", scope: !5962, file: !6, line: 568, baseType: !5969, size: 64, offset: 224)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "sitd_dma", scope: !5962, file: !6, line: 571, baseType: !2064, size: 64, offset: 320)
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "sitd_next", scope: !5962, file: !6, line: 572, baseType: !5903, size: 64, offset: 384)
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "urb", scope: !5962, file: !6, line: 574, baseType: !5343, size: 64, offset: 448)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !5962, file: !6, line: 575, baseType: !5922, size: 64, offset: 512)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "sitd_list", scope: !5962, file: !6, line: 576, baseType: !361, size: 128, offset: 576)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !5962, file: !6, line: 577, baseType: !7, size: 32, offset: 704)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5962, file: !6, line: 578, baseType: !7, size: 32, offset: 736)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "fstn", scope: !5903, file: !6, line: 362, baseType: !5980, size: 64)
!5980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5981, size: 64)
!5981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_fstn", file: !6, line: 592, size: 256, align: 256, elements: !5982)
!5982 = !{!5983, !5984, !5985, !5986}
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "hw_next", scope: !5981, file: !6, line: 593, baseType: !5103, size: 32)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "hw_prev", scope: !5981, file: !6, line: 594, baseType: !5103, size: 32, offset: 32)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "fstn_dma", scope: !5981, file: !6, line: 597, baseType: !2064, size: 64, offset: 64)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "fstn_next", scope: !5981, file: !6, line: 598, baseType: !5903, size: 64, offset: 128)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "hw_next", scope: !5903, file: !6, line: 363, baseType: !5988, size: 64)
!5988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5103, size: 64)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5903, file: !6, line: 364, baseType: !341, size: 64)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "qtd_list", scope: !5885, file: !6, line: 409, baseType: !361, size: 128, offset: 192)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "intr_node", scope: !5885, file: !6, line: 410, baseType: !361, size: 128, offset: 320)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !5885, file: !6, line: 411, baseType: !5993, size: 64, offset: 448)
!5993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5994, size: 64)
!5994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_qtd", file: !6, line: 287, size: 768, align: 256, elements: !5995)
!5995 = !{!5996, !5997, !5998, !5999, !6000, !6001, !6002, !6003, !6004}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "hw_next", scope: !5994, file: !6, line: 289, baseType: !5103, size: 32)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "hw_alt_next", scope: !5994, file: !6, line: 290, baseType: !5103, size: 32, offset: 32)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "hw_token", scope: !5994, file: !6, line: 291, baseType: !5103, size: 32, offset: 64)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "hw_buf", scope: !5994, file: !6, line: 310, baseType: !5899, size: 160, offset: 96)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "hw_buf_hi", scope: !5994, file: !6, line: 311, baseType: !5899, size: 160, offset: 256)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "qtd_dma", scope: !5994, file: !6, line: 314, baseType: !2064, size: 64, offset: 448)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "qtd_list", scope: !5994, file: !6, line: 315, baseType: !361, size: 128, offset: 512)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "urb", scope: !5994, file: !6, line: 316, baseType: !5343, size: 64, offset: 640)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5994, file: !6, line: 317, baseType: !462, size: 64, offset: 704)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_node", scope: !5885, file: !6, line: 412, baseType: !361, size: 128, offset: 512)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "ps", scope: !5885, file: !6, line: 413, baseType: !5931, size: 384, offset: 640)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_cycle", scope: !5885, file: !6, line: 415, baseType: !7, size: 32, offset: 1024)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "qh_state", scope: !5885, file: !6, line: 417, baseType: !1182, size: 8, offset: 1056)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "xacterrs", scope: !5885, file: !6, line: 424, baseType: !1182, size: 8, offset: 1064)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_reason", scope: !5885, file: !6, line: 427, baseType: !1182, size: 8, offset: 1072)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "gap_uf", scope: !5885, file: !6, line: 435, baseType: !1182, size: 8, offset: 1080)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "is_out", scope: !5885, file: !6, line: 437, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "clearing_tt", scope: !5885, file: !6, line: 438, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1088)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue_during_giveback", scope: !5885, file: !6, line: 439, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1088)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "should_be_inactive", scope: !5885, file: !6, line: 440, baseType: !7, size: 1, offset: 1091, flags: DIFlagBitField, extraData: i64 1088)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "async", scope: !5815, file: !6, line: 141, baseType: !5884, size: 64, offset: 1856)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !5815, file: !6, line: 142, baseType: !5884, size: 64, offset: 1920)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "async_unlink", scope: !5815, file: !6, line: 143, baseType: !361, size: 128, offset: 1984)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "async_idle", scope: !5815, file: !6, line: 144, baseType: !361, size: 128, offset: 2112)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "async_unlink_cycle", scope: !5815, file: !6, line: 145, baseType: !7, size: 32, offset: 2240)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "async_count", scope: !5815, file: !6, line: 146, baseType: !7, size: 32, offset: 2272)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "old_current", scope: !5815, file: !6, line: 147, baseType: !5103, size: 32, offset: 2304)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "old_token", scope: !5815, file: !6, line: 148, baseType: !5103, size: 32, offset: 2336)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_size", scope: !5815, file: !6, line: 152, baseType: !7, size: 32, offset: 2368)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "periodic", scope: !5815, file: !6, line: 153, baseType: !5988, size: 64, offset: 2432)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_dma", scope: !5815, file: !6, line: 154, baseType: !2064, size: 64, offset: 2496)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "intr_qh_list", scope: !5815, file: !6, line: 155, baseType: !361, size: 128, offset: 2560)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "i_thresh", scope: !5815, file: !6, line: 156, baseType: !7, size: 32, offset: 2688)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "pshadow", scope: !5815, file: !6, line: 158, baseType: !6030, size: 64, offset: 2752)
!6030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5903, size: 64)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "intr_unlink_wait", scope: !5815, file: !6, line: 159, baseType: !361, size: 128, offset: 2816)
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "intr_unlink", scope: !5815, file: !6, line: 160, baseType: !361, size: 128, offset: 2944)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "intr_unlink_wait_cycle", scope: !5815, file: !6, line: 161, baseType: !7, size: 32, offset: 3072)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "intr_unlink_cycle", scope: !5815, file: !6, line: 162, baseType: !7, size: 32, offset: 3104)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "now_frame", scope: !5815, file: !6, line: 163, baseType: !7, size: 32, offset: 3136)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "last_iso_frame", scope: !5815, file: !6, line: 164, baseType: !7, size: 32, offset: 3168)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "intr_count", scope: !5815, file: !6, line: 165, baseType: !7, size: 32, offset: 3200)
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "isoc_count", scope: !5815, file: !6, line: 166, baseType: !7, size: 32, offset: 3232)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_count", scope: !5815, file: !6, line: 167, baseType: !7, size: 32, offset: 3264)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "uframe_periodic_max", scope: !5815, file: !6, line: 168, baseType: !7, size: 32, offset: 3296)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "cached_itd_list", scope: !5815, file: !6, line: 172, baseType: !361, size: 128, offset: 3328)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "last_itd_to_free", scope: !5815, file: !6, line: 173, baseType: !5907, size: 64, offset: 3456)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "cached_sitd_list", scope: !5815, file: !6, line: 174, baseType: !361, size: 128, offset: 3520)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "last_sitd_to_free", scope: !5815, file: !6, line: 175, baseType: !5961, size: 64, offset: 3648)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !5815, file: !6, line: 178, baseType: !6046, size: 960, offset: 3712)
!6046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !465, size: 960, elements: !6047)
!6047 = !{!6048}
!6048 = !DISubrange(count: 15)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "bus_suspended", scope: !5815, file: !6, line: 181, baseType: !465, size: 64, offset: 4672)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "companion_ports", scope: !5815, file: !6, line: 183, baseType: !465, size: 64, offset: 4736)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "owned_ports", scope: !5815, file: !6, line: 185, baseType: !465, size: 64, offset: 4800)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "port_c_suspend", scope: !5815, file: !6, line: 187, baseType: !465, size: 64, offset: 4864)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_ports", scope: !5815, file: !6, line: 189, baseType: !465, size: 64, offset: 4928)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "resuming_ports", scope: !5815, file: !6, line: 191, baseType: !465, size: 64, offset: 4992)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "qh_pool", scope: !5815, file: !6, line: 195, baseType: !5804, size: 64, offset: 5056)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "qtd_pool", scope: !5815, file: !6, line: 196, baseType: !5804, size: 64, offset: 5120)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "itd_pool", scope: !5815, file: !6, line: 197, baseType: !5804, size: 64, offset: 5184)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "sitd_pool", scope: !5815, file: !6, line: 198, baseType: !5804, size: 64, offset: 5248)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "random_frame", scope: !5815, file: !6, line: 200, baseType: !7, size: 32, offset: 5312)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "next_statechange", scope: !5815, file: !6, line: 201, baseType: !465, size: 64, offset: 5376)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "last_periodic_enable", scope: !5815, file: !6, line: 202, baseType: !2429, size: 64, offset: 5440)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !5815, file: !6, line: 203, baseType: !303, size: 32, offset: 5504)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "no_selective_suspend", scope: !5815, file: !6, line: 206, baseType: !7, size: 1, offset: 5536, flags: DIFlagBitField, extraData: i64 5536)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "has_fsl_port_bug", scope: !5815, file: !6, line: 207, baseType: !7, size: 1, offset: 5537, flags: DIFlagBitField, extraData: i64 5536)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "has_fsl_hs_errata", scope: !5815, file: !6, line: 208, baseType: !7, size: 1, offset: 5538, flags: DIFlagBitField, extraData: i64 5536)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "has_fsl_susp_errata", scope: !5815, file: !6, line: 209, baseType: !7, size: 1, offset: 5539, flags: DIFlagBitField, extraData: i64 5536)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "big_endian_mmio", scope: !5815, file: !6, line: 210, baseType: !7, size: 1, offset: 5540, flags: DIFlagBitField, extraData: i64 5536)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "big_endian_desc", scope: !5815, file: !6, line: 211, baseType: !7, size: 1, offset: 5541, flags: DIFlagBitField, extraData: i64 5536)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "big_endian_capbase", scope: !5815, file: !6, line: 212, baseType: !7, size: 1, offset: 5542, flags: DIFlagBitField, extraData: i64 5536)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "has_amcc_usb23", scope: !5815, file: !6, line: 213, baseType: !7, size: 1, offset: 5543, flags: DIFlagBitField, extraData: i64 5536)
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "need_io_watchdog", scope: !5815, file: !6, line: 214, baseType: !7, size: 1, offset: 5544, flags: DIFlagBitField, extraData: i64 5536)
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "amd_pll_fix", scope: !5815, file: !6, line: 215, baseType: !7, size: 1, offset: 5545, flags: DIFlagBitField, extraData: i64 5536)
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "use_dummy_qh", scope: !5815, file: !6, line: 216, baseType: !7, size: 1, offset: 5546, flags: DIFlagBitField, extraData: i64 5536)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "has_synopsys_hc_bug", scope: !5815, file: !6, line: 217, baseType: !7, size: 1, offset: 5547, flags: DIFlagBitField, extraData: i64 5536)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "frame_index_bug", scope: !5815, file: !6, line: 218, baseType: !7, size: 1, offset: 5548, flags: DIFlagBitField, extraData: i64 5536)
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "need_oc_pp_cycle", scope: !5815, file: !6, line: 219, baseType: !7, size: 1, offset: 5549, flags: DIFlagBitField, extraData: i64 5536)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "imx28_write_fix", scope: !5815, file: !6, line: 220, baseType: !7, size: 1, offset: 5550, flags: DIFlagBitField, extraData: i64 5536)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "ohci_hcctrl_reg", scope: !5815, file: !6, line: 229, baseType: !5988, size: 64, offset: 5568)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "has_hostpc", scope: !5815, file: !6, line: 230, baseType: !7, size: 1, offset: 5632, flags: DIFlagBitField, extraData: i64 5632)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "has_tdi_phy_lpm", scope: !5815, file: !6, line: 231, baseType: !7, size: 1, offset: 5633, flags: DIFlagBitField, extraData: i64 5632)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "has_ppcd", scope: !5815, file: !6, line: 232, baseType: !7, size: 1, offset: 5634, flags: DIFlagBitField, extraData: i64 5632)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "sbrn", scope: !5815, file: !6, line: 233, baseType: !1182, size: 8, offset: 5640)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth", scope: !5815, file: !6, line: 251, baseType: !1228, size: 512, offset: 5648)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "tt_budget", scope: !5815, file: !6, line: 253, baseType: !1228, size: 512, offset: 6160)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "tt_list", scope: !5815, file: !6, line: 255, baseType: !361, size: 128, offset: 6720)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5815, file: !6, line: 258, baseType: !3581, align: 64, offset: 6848)
!6087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6088, size: 64)
!6088 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !359)
!6089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 64)
!6090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!6091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6092, size: 64)
!6092 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6093)
!6093 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !365)
!6094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6093, size: 64)
!6095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6096, size: 64)
!6096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6097, size: 64)
!6097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_tt", file: !6, line: 621, size: 512, elements: !6098)
!6098 = !{!6099, !6101, !6102, !6103, !6104}
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth", scope: !6097, file: !6, line: 622, baseType: !6100, size: 128)
!6100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1062, size: 128, elements: !2459)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "tt_list", scope: !6097, file: !6, line: 624, baseType: !361, size: 128, offset: 128)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "ps_list", scope: !6097, file: !6, line: 625, baseType: !361, size: 128, offset: 256)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "usb_tt", scope: !6097, file: !6, line: 626, baseType: !5058, size: 64, offset: 384)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "tt_port", scope: !6097, file: !6, line: 627, baseType: !401, size: 32, offset: 448)
!6105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5931, size: 64)
!6106 = !{!6107, !6158, !6163, !6168, !6170, !6175, !6178, !6180, !6185, !6190, !6192, !6197, !6202, !6207, !6209, !6214, !0, !6216, !6218, !6223, !6225, !6230, !6237, !6241, !6244, !6246, !6249, !6264, !6266, !6273}
!6107 = !DIGlobalVariableExpression(var: !6108, expr: !DIExpression())
!6108 = distinct !DIGlobalVariable(name: "__param_log2_irq_thresh", scope: !2, file: !3, line: 80, type: !6109, isLocal: true, isDefinition: true, align: 64)
!6109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6110)
!6110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !6111, line: 69, size: 320, elements: !6112)
!6111 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!6112 = !{!6113, !6114, !6115, !6131, !6133, !6136, !6137}
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6110, file: !6111, line: 70, baseType: !357, size: 64)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !6110, file: !6111, line: 71, baseType: !769, size: 64, offset: 64)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6110, file: !6111, line: 72, baseType: !6116, size: 64, offset: 128)
!6116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6117, size: 64)
!6117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6118)
!6118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !6111, line: 47, size: 256, elements: !6119)
!6119 = !{!6120, !6121, !6126, !6130}
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6118, file: !6111, line: 49, baseType: !7, size: 32)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !6118, file: !6111, line: 51, baseType: !6122, size: 64, offset: 64)
!6122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6123, size: 64)
!6123 = !DISubroutineType(types: !6124)
!6124 = !{!401, !357, !6125}
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6109, size: 64)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !6118, file: !6111, line: 53, baseType: !6127, size: 64, offset: 128)
!6127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6128, size: 64)
!6128 = !DISubroutineType(types: !6129)
!6129 = !{!401, !417, !6125}
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !6118, file: !6111, line: 55, baseType: !604, size: 64, offset: 192)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !6110, file: !6111, line: 73, baseType: !6132, size: 16, offset: 192)
!6132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1062)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !6110, file: !6111, line: 74, baseType: !6134, size: 8, offset: 208)
!6134 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !304, line: 16, baseType: !6135)
!6135 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !306, line: 20, baseType: !1134)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6110, file: !6111, line: 75, baseType: !1182, size: 8, offset: 216)
!6137 = !DIDerivedType(tag: DW_TAG_member, scope: !6110, file: !6111, line: 76, baseType: !6138, size: 64, offset: 256)
!6138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6110, file: !6111, line: 76, size: 64, elements: !6139)
!6139 = !{!6140, !6141, !6148}
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6138, file: !6111, line: 77, baseType: !341, size: 64)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !6138, file: !6111, line: 78, baseType: !6142, size: 64)
!6142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6143, size: 64)
!6143 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6144)
!6144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !6111, line: 86, size: 128, elements: !6145)
!6145 = !{!6146, !6147}
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !6144, file: !6111, line: 87, baseType: !7, size: 32)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !6144, file: !6111, line: 88, baseType: !417, size: 64, offset: 64)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !6138, file: !6111, line: 79, baseType: !6149, size: 64)
!6149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6150, size: 64)
!6150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6151)
!6151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !6111, line: 92, size: 256, elements: !6152)
!6152 = !{!6153, !6154, !6155, !6156, !6157}
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !6151, file: !6111, line: 94, baseType: !7, size: 32)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !6151, file: !6111, line: 95, baseType: !7, size: 32, offset: 32)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !6151, file: !6111, line: 96, baseType: !1157, size: 64, offset: 64)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6151, file: !6111, line: 97, baseType: !6116, size: 64, offset: 128)
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !6151, file: !6111, line: 98, baseType: !341, size: 64, offset: 192)
!6158 = !DIGlobalVariableExpression(var: !6159, expr: !DIExpression())
!6159 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_log2_irq_threshtype302", scope: !2, file: !3, line: 80, type: !6160, isLocal: true, isDefinition: true, align: 8)
!6160 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 304, elements: !6161)
!6161 = !{!6162}
!6162 = !DISubrange(count: 38)
!6163 = !DIGlobalVariableExpression(var: !6164, expr: !DIExpression())
!6164 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_log2_irq_thresh303", scope: !2, file: !3, line: 81, type: !6165, isLocal: true, isDefinition: true, align: 8)
!6165 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 520, elements: !6166)
!6166 = !{!6167}
!6167 = !DISubrange(count: 65)
!6168 = !DIGlobalVariableExpression(var: !6169, expr: !DIExpression())
!6169 = distinct !DIGlobalVariable(name: "__param_park", scope: !2, file: !3, line: 85, type: !6109, isLocal: true, isDefinition: true, align: 64)
!6170 = !DIGlobalVariableExpression(var: !6171, expr: !DIExpression())
!6171 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_parktype304", scope: !2, file: !3, line: 85, type: !6172, isLocal: true, isDefinition: true, align: 8)
!6172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 224, elements: !6173)
!6173 = !{!6174}
!6174 = !DISubrange(count: 28)
!6175 = !DIGlobalVariableExpression(var: !6176, expr: !DIExpression())
!6176 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_park305", scope: !2, file: !3, line: 86, type: !6177, isLocal: true, isDefinition: true, align: 8)
!6177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 512, elements: !422)
!6178 = !DIGlobalVariableExpression(var: !6179, expr: !DIExpression())
!6179 = distinct !DIGlobalVariable(name: "__param_ignore_oc", scope: !2, file: !3, line: 90, type: !6109, isLocal: true, isDefinition: true, align: 64)
!6180 = !DIGlobalVariableExpression(var: !6181, expr: !DIExpression())
!6181 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ignore_octype306", scope: !2, file: !3, line: 90, type: !6182, isLocal: true, isDefinition: true, align: 8)
!6182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 264, elements: !6183)
!6183 = !{!6184}
!6184 = !DISubrange(count: 33)
!6185 = !DIGlobalVariableExpression(var: !6186, expr: !DIExpression())
!6186 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_ignore_oc307", scope: !2, file: !3, line: 91, type: !6187, isLocal: true, isDefinition: true, align: 8)
!6187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 560, elements: !6188)
!6188 = !{!6189}
!6189 = !DISubrange(count: 70)
!6190 = !DIGlobalVariableExpression(var: !6191, expr: !DIExpression())
!6191 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description374", scope: !2, file: !3, line: 1256, type: !6187, isLocal: true, isDefinition: true, align: 8)
!6192 = !DIGlobalVariableExpression(var: !6193, expr: !DIExpression())
!6193 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author375", scope: !2, file: !3, line: 1257, type: !6194, isLocal: true, isDefinition: true, align: 8)
!6194 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 248, elements: !6195)
!6195 = !{!6196}
!6196 = !DISubrange(count: 31)
!6197 = !DIGlobalVariableExpression(var: !6198, expr: !DIExpression())
!6198 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file376", scope: !2, file: !3, line: 1258, type: !6199, isLocal: true, isDefinition: true, align: 8)
!6199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 320, elements: !6200)
!6200 = !{!6201}
!6201 = !DISubrange(count: 40)
!6202 = !DIGlobalVariableExpression(var: !6203, expr: !DIExpression())
!6203 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license377", scope: !2, file: !3, line: 1258, type: !6204, isLocal: true, isDefinition: true, align: 8)
!6204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 168, elements: !6205)
!6205 = !{!6206}
!6206 = !DISubrange(count: 21)
!6207 = !DIGlobalVariableExpression(var: !6208, expr: !DIExpression())
!6208 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_ehci_hcd_init378", scope: !2, file: !3, line: 1361, type: !341, isLocal: true, isDefinition: true)
!6209 = !DIGlobalVariableExpression(var: !6210, expr: !DIExpression())
!6210 = distinct !DIGlobalVariable(name: "__exitcall_ehci_hcd_cleanup", scope: !2, file: !3, line: 1382, type: !6211, isLocal: true, isDefinition: true)
!6211 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !6212, line: 117, baseType: !6213)
!6212 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!6213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 64)
!6214 = !DIGlobalVariableExpression(var: !6215, expr: !DIExpression())
!6215 = distinct !DIGlobalVariable(name: "ignore_oc", scope: !2, file: !3, line: 89, type: !626, isLocal: true, isDefinition: true)
!6216 = !DIGlobalVariableExpression(var: !6217, expr: !DIExpression())
!6217 = distinct !DIGlobalVariable(name: "log2_irq_thresh", scope: !2, file: !3, line: 79, type: !401, isLocal: true, isDefinition: true)
!6218 = !DIGlobalVariableExpression(var: !6219, expr: !DIExpression())
!6219 = distinct !DIGlobalVariable(name: "__param_str_park", scope: !2, file: !3, line: 85, type: !6220, isLocal: true, isDefinition: true)
!6220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 112, elements: !6221)
!6221 = !{!6222}
!6222 = !DISubrange(count: 14)
!6223 = !DIGlobalVariableExpression(var: !6224, expr: !DIExpression())
!6224 = distinct !DIGlobalVariable(name: "park", scope: !2, file: !3, line: 84, type: !7, isLocal: true, isDefinition: true)
!6225 = !DIGlobalVariableExpression(var: !6226, expr: !DIExpression())
!6226 = distinct !DIGlobalVariable(name: "__param_str_ignore_oc", scope: !2, file: !3, line: 90, type: !6227, isLocal: true, isDefinition: true)
!6227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 152, elements: !6228)
!6228 = !{!6229}
!6229 = !DISubrange(count: 19)
!6230 = !DIGlobalVariableExpression(var: !6231, expr: !DIExpression())
!6231 = distinct !DIGlobalVariable(name: "event_handlers", scope: !2, file: !6232, line: 383, type: !6233, isLocal: true, isDefinition: true)
!6232 = !DIFile(filename: "drivers/usb/host/ehci-timer.c", directory: "/home/lizy2001/genbc/linux")
!6233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6234, size: 768, elements: !3487)
!6234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6235, size: 64)
!6235 = !DISubroutineType(types: !6236)
!6236 = !{null, !5814}
!6237 = !DIGlobalVariableExpression(var: !6238, expr: !DIExpression())
!6238 = distinct !DIGlobalVariable(name: "max_tt_usecs", scope: !2, file: !6239, line: 311, type: !6240, isLocal: true, isDefinition: true)
!6239 = !DIFile(filename: "drivers/usb/host/ehci-sched.c", directory: "/home/lizy2001/genbc/linux")
!6240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !563, size: 64, elements: !2459)
!6241 = !DIGlobalVariableExpression(var: !6242, expr: !DIExpression())
!6242 = distinct !DIGlobalVariable(name: "event_delays_ns", scope: !2, file: !6232, line: 60, type: !6243, isLocal: true, isDefinition: true)
!6243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 384, elements: !3487)
!6244 = !DIGlobalVariableExpression(var: !6245, expr: !DIExpression())
!6245 = distinct !DIGlobalVariable(name: "ehci_hc_driver", scope: !2, file: !3, line: 1188, type: !5408, isLocal: true, isDefinition: true)
!6246 = !DIGlobalVariableExpression(var: !6247, expr: !DIExpression())
!6247 = distinct !DIGlobalVariable(name: "hcd_name", scope: !2, file: !3, line: 59, type: !6248, isLocal: true, isDefinition: true)
!6248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 72, elements: !4672)
!6249 = !DIGlobalVariableExpression(var: !6250, expr: !DIExpression())
!6250 = distinct !DIGlobalVariable(name: "dev_attr_companion", scope: !2, file: !6251, line: 62, type: !6252, isLocal: true, isDefinition: true)
!6251 = !DIFile(filename: "drivers/usb/host/ehci-sysfs.c", directory: "/home/lizy2001/genbc/linux")
!6252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !158, line: 99, size: 256, elements: !6253)
!6253 = !{!6254, !6255, !6260}
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6252, file: !158, line: 100, baseType: !453, size: 128)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !6252, file: !158, line: 101, baseType: !6256, size: 64, offset: 128)
!6256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6257, size: 64)
!6257 = !DISubroutineType(types: !6258)
!6258 = !{!448, !349, !6259, !417}
!6259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6252, size: 64)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !6252, file: !158, line: 103, baseType: !6261, size: 64, offset: 192)
!6261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6262, size: 64)
!6262 = !DISubroutineType(types: !6263)
!6263 = !{!448, !349, !6259, !357, !462}
!6264 = !DIGlobalVariableExpression(var: !6265, expr: !DIExpression())
!6265 = distinct !DIGlobalVariable(name: "dev_attr_uframe_periodic_max", scope: !2, file: !6251, line: 146, type: !6252, isLocal: true, isDefinition: true)
!6266 = !DIGlobalVariableExpression(var: !6267, expr: !DIExpression())
!6267 = distinct !DIGlobalVariable(name: "smask_out", scope: !6268, file: !6239, line: 1016, type: !6271, isLocal: true, isDefinition: true)
!6268 = distinct !DISubprogram(name: "iso_stream_init", scope: !6239, file: !6239, line: 1010, type: !6269, scopeLine: 1015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6269 = !DISubroutineType(types: !6270)
!6270 = !{null, !5814, !5922, !5343}
!6271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6272, size: 48, elements: !2743)
!6272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1182)
!6273 = !DIGlobalVariableExpression(var: !6274, expr: !DIExpression())
!6274 = distinct !DIGlobalVariable(name: "__warned", scope: !6275, file: !3, line: 1041, type: !626, isLocal: true, isDefinition: true)
!6275 = distinct !DISubprogram(name: "ehci_endpoint_reset", scope: !3, file: !3, line: 1019, type: !5451, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, size: 200, elements: !6277)
!6277 = !{!6278}
!6278 = !DISubrange(count: 25)
!6279 = !{!"rsp"}
!6280 = !{i32 7, !"Dwarf Version", i32 4}
!6281 = !{i32 2, !"Debug Info Version", i32 3}
!6282 = !{i32 1, !"wchar_size", i32 2}
!6283 = !{i32 1, !"Code Model", i32 2}
!6284 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!6285 = distinct !DISubprogram(name: "ehci_handshake", scope: !3, file: !3, line: 148, type: !6286, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6286 = !DISubroutineType(types: !6287)
!6287 = !{!401, !5814, !341, !303, !303, !401}
!6288 = !DILocalVariable(name: "ehci", arg: 1, scope: !6285, file: !3, line: 148, type: !5814)
!6289 = !DILocation(line: 148, column: 37, scope: !6285)
!6290 = !DILocalVariable(name: "ptr", arg: 2, scope: !6285, file: !3, line: 148, type: !341)
!6291 = !DILocation(line: 148, column: 57, scope: !6285)
!6292 = !DILocalVariable(name: "mask", arg: 3, scope: !6285, file: !3, line: 149, type: !303)
!6293 = !DILocation(line: 149, column: 10, scope: !6285)
!6294 = !DILocalVariable(name: "done", arg: 4, scope: !6285, file: !3, line: 149, type: !303)
!6295 = !DILocation(line: 149, column: 20, scope: !6285)
!6296 = !DILocalVariable(name: "usec", arg: 5, scope: !6285, file: !3, line: 149, type: !401)
!6297 = !DILocation(line: 149, column: 30, scope: !6285)
!6298 = !DILocalVariable(name: "result", scope: !6285, file: !3, line: 151, type: !303)
!6299 = !DILocation(line: 151, column: 6, scope: !6285)
!6300 = !DILocation(line: 153, column: 2, scope: !6285)
!6301 = !DILocation(line: 154, column: 23, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 153, column: 5)
!6303 = !DILocation(line: 154, column: 29, scope: !6302)
!6304 = !DILocation(line: 154, column: 12, scope: !6302)
!6305 = !DILocation(line: 154, column: 10, scope: !6302)
!6306 = !DILocation(line: 155, column: 7, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 155, column: 7)
!6308 = !DILocation(line: 155, column: 14, scope: !6307)
!6309 = !DILocation(line: 155, column: 7, scope: !6302)
!6310 = !DILocation(line: 156, column: 4, scope: !6307)
!6311 = !DILocation(line: 157, column: 13, scope: !6302)
!6312 = !DILocation(line: 157, column: 10, scope: !6302)
!6313 = !DILocation(line: 158, column: 7, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 158, column: 7)
!6315 = !DILocation(line: 158, column: 17, scope: !6314)
!6316 = !DILocation(line: 158, column: 14, scope: !6314)
!6317 = !DILocation(line: 158, column: 7, scope: !6302)
!6318 = !DILocation(line: 159, column: 4, scope: !6314)
!6319 = !DILocation(line: 160, column: 3, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 160, column: 3)
!6321 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 160, column: 3)
!6322 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 160, column: 3)
!6323 = distinct !DILexicalBlock(scope: !6302, file: !3, line: 160, column: 3)
!6324 = !DILocation(line: 161, column: 7, scope: !6302)
!6325 = !DILocation(line: 162, column: 2, scope: !6302)
!6326 = !DILocation(line: 162, column: 11, scope: !6285)
!6327 = !DILocation(line: 162, column: 16, scope: !6285)
!6328 = distinct !{!6328, !6300, !6329}
!6329 = !DILocation(line: 162, column: 19, scope: !6285)
!6330 = !DILocation(line: 163, column: 2, scope: !6285)
!6331 = !DILocation(line: 164, column: 1, scope: !6285)
!6332 = distinct !DISubprogram(name: "ehci_readl", scope: !6, file: !6, line: 738, type: !6333, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6333 = !DISubroutineType(types: !6334)
!6334 = !{!7, !6335, !6337}
!6335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6336, size: 64)
!6336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5815)
!6337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !305, size: 64)
!6338 = !DILocalVariable(name: "ehci", arg: 1, scope: !6332, file: !6, line: 738, type: !6335)
!6339 = !DILocation(line: 738, column: 62, scope: !6332)
!6340 = !DILocalVariable(name: "regs", arg: 2, scope: !6332, file: !6, line: 739, type: !6337)
!6341 = !DILocation(line: 739, column: 18, scope: !6332)
!6342 = !DILocation(line: 746, column: 15, scope: !6332)
!6343 = !DILocation(line: 746, column: 9, scope: !6332)
!6344 = !DILocation(line: 746, column: 2, scope: !6332)
!6345 = distinct !DISubprogram(name: "ehci_reset", scope: !3, file: !3, line: 230, type: !6346, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6346 = !DISubroutineType(types: !6347)
!6347 = !{!401, !5814}
!6348 = !DILocalVariable(name: "ehci", arg: 1, scope: !6345, file: !3, line: 230, type: !5814)
!6349 = !DILocation(line: 230, column: 33, scope: !6345)
!6350 = !DILocalVariable(name: "retval", scope: !6345, file: !3, line: 232, type: !401)
!6351 = !DILocation(line: 232, column: 6, scope: !6345)
!6352 = !DILocalVariable(name: "command", scope: !6345, file: !3, line: 233, type: !303)
!6353 = !DILocation(line: 233, column: 6, scope: !6345)
!6354 = !DILocation(line: 233, column: 27, scope: !6345)
!6355 = !DILocation(line: 233, column: 34, scope: !6345)
!6356 = !DILocation(line: 233, column: 40, scope: !6345)
!6357 = !DILocation(line: 233, column: 46, scope: !6345)
!6358 = !DILocation(line: 233, column: 16, scope: !6345)
!6359 = !DILocation(line: 237, column: 6, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 237, column: 6)
!6361 = !DILocation(line: 237, column: 12, scope: !6360)
!6362 = !DILocation(line: 237, column: 18, scope: !6360)
!6363 = !DILocation(line: 237, column: 50, scope: !6360)
!6364 = !DILocation(line: 237, column: 38, scope: !6360)
!6365 = !DILocation(line: 237, column: 22, scope: !6360)
!6366 = !DILocation(line: 237, column: 6, scope: !6345)
!6367 = !DILocation(line: 238, column: 3, scope: !6360)
!6368 = !DILocation(line: 238, column: 9, scope: !6360)
!6369 = !DILocation(line: 238, column: 15, scope: !6360)
!6370 = !DILocation(line: 240, column: 10, scope: !6345)
!6371 = !DILocation(line: 241, column: 11, scope: !6345)
!6372 = !DILocation(line: 241, column: 26, scope: !6345)
!6373 = !DILocation(line: 241, column: 2, scope: !6345)
!6374 = !DILocation(line: 242, column: 14, scope: !6345)
!6375 = !DILocation(line: 242, column: 20, scope: !6345)
!6376 = !DILocation(line: 242, column: 30, scope: !6345)
!6377 = !DILocation(line: 242, column: 36, scope: !6345)
!6378 = !DILocation(line: 242, column: 42, scope: !6345)
!6379 = !DILocation(line: 242, column: 2, scope: !6345)
!6380 = !DILocation(line: 243, column: 2, scope: !6345)
!6381 = !DILocation(line: 243, column: 8, scope: !6345)
!6382 = !DILocation(line: 243, column: 17, scope: !6345)
!6383 = !DILocation(line: 244, column: 27, scope: !6345)
!6384 = !DILocation(line: 244, column: 2, scope: !6345)
!6385 = !DILocation(line: 244, column: 8, scope: !6345)
!6386 = !DILocation(line: 244, column: 25, scope: !6345)
!6387 = !DILocation(line: 245, column: 26, scope: !6345)
!6388 = !DILocation(line: 245, column: 33, scope: !6345)
!6389 = !DILocation(line: 245, column: 39, scope: !6345)
!6390 = !DILocation(line: 245, column: 45, scope: !6345)
!6391 = !DILocation(line: 245, column: 32, scope: !6345)
!6392 = !DILocation(line: 245, column: 11, scope: !6345)
!6393 = !DILocation(line: 245, column: 9, scope: !6345)
!6394 = !DILocation(line: 248, column: 6, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 248, column: 6)
!6396 = !DILocation(line: 248, column: 12, scope: !6395)
!6397 = !DILocation(line: 248, column: 6, scope: !6345)
!6398 = !DILocation(line: 249, column: 15, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 248, column: 24)
!6400 = !DILocation(line: 250, column: 6, scope: !6399)
!6401 = !DILocation(line: 250, column: 12, scope: !6399)
!6402 = !DILocation(line: 250, column: 18, scope: !6399)
!6403 = !DILocation(line: 249, column: 3, scope: !6399)
!6404 = !DILocation(line: 251, column: 15, scope: !6399)
!6405 = !DILocation(line: 251, column: 38, scope: !6399)
!6406 = !DILocation(line: 251, column: 44, scope: !6399)
!6407 = !DILocation(line: 251, column: 50, scope: !6399)
!6408 = !DILocation(line: 251, column: 3, scope: !6399)
!6409 = !DILocation(line: 252, column: 2, scope: !6399)
!6410 = !DILocation(line: 253, column: 6, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 253, column: 6)
!6412 = !DILocation(line: 253, column: 6, scope: !6345)
!6413 = !DILocation(line: 254, column: 10, scope: !6411)
!6414 = !DILocation(line: 254, column: 3, scope: !6411)
!6415 = !DILocation(line: 259, column: 6, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 259, column: 6)
!6417 = !DILocation(line: 259, column: 12, scope: !6416)
!6418 = !DILocation(line: 259, column: 6, scope: !6345)
!6419 = !DILocation(line: 260, column: 37, scope: !6416)
!6420 = !DILocation(line: 260, column: 25, scope: !6416)
!6421 = !DILocation(line: 260, column: 3, scope: !6416)
!6422 = !DILocation(line: 263, column: 4, scope: !6345)
!6423 = !DILocation(line: 263, column: 10, scope: !6345)
!6424 = !DILocation(line: 263, column: 25, scope: !6345)
!6425 = !DILocation(line: 262, column: 25, scope: !6345)
!6426 = !DILocation(line: 262, column: 31, scope: !6345)
!6427 = !DILocation(line: 262, column: 47, scope: !6345)
!6428 = !DILocation(line: 262, column: 2, scope: !6345)
!6429 = !DILocation(line: 262, column: 8, scope: !6345)
!6430 = !DILocation(line: 262, column: 23, scope: !6345)
!6431 = !DILocation(line: 264, column: 9, scope: !6345)
!6432 = !DILocation(line: 264, column: 2, scope: !6345)
!6433 = !DILocation(line: 265, column: 1, scope: !6345)
!6434 = distinct !DISubprogram(name: "dbgp_reset_prep", scope: !5867, file: !5867, line: 73, type: !5422, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6435 = !DILocalVariable(name: "hcd", arg: 1, scope: !6434, file: !5867, line: 73, type: !342)
!6436 = !DILocation(line: 73, column: 51, scope: !6434)
!6437 = !DILocation(line: 75, column: 29, scope: !6434)
!6438 = !DILocation(line: 75, column: 9, scope: !6434)
!6439 = !DILocation(line: 75, column: 2, scope: !6434)
!6440 = distinct !DISubprogram(name: "ehci_to_hcd", scope: !6, file: !6, line: 266, type: !6441, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6441 = !DISubroutineType(types: !6442)
!6442 = !{!342, !5814}
!6443 = !DILocalVariable(name: "ehci", arg: 1, scope: !6440, file: !6, line: 266, type: !5814)
!6444 = !DILocation(line: 266, column: 60, scope: !6440)
!6445 = !DILocalVariable(name: "__mptr", scope: !6446, file: !6, line: 268, type: !341)
!6446 = distinct !DILexicalBlock(scope: !6440, file: !6, line: 268, column: 9)
!6447 = !DILocation(line: 268, column: 9, scope: !6446)
!6448 = !DILocation(line: 268, column: 9, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6446, file: !6, line: 268, column: 9)
!6450 = !DILocation(line: 268, column: 2, scope: !6440)
!6451 = distinct !DISubprogram(name: "dbg_cmd", scope: !6452, file: !6452, line: 1073, type: !6453, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6452 = !DIFile(filename: "drivers/usb/host/ehci-dbg.c", directory: "/home/lizy2001/genbc/linux")
!6453 = !DISubroutineType(types: !6454)
!6454 = !{null, !5814, !357, !303}
!6455 = !DILocalVariable(name: "ehci", arg: 1, scope: !6451, file: !6452, line: 1073, type: !5814)
!6456 = !DILocation(line: 1073, column: 45, scope: !6451)
!6457 = !DILocalVariable(name: "label", arg: 2, scope: !6451, file: !6452, line: 1073, type: !357)
!6458 = !DILocation(line: 1073, column: 63, scope: !6451)
!6459 = !DILocalVariable(name: "command", arg: 3, scope: !6451, file: !6452, line: 1074, type: !303)
!6460 = !DILocation(line: 1074, column: 7, scope: !6451)
!6461 = !DILocation(line: 1074, column: 18, scope: !6451)
!6462 = distinct !DISubprogram(name: "ehci_writel", scope: !6, file: !6, line: 762, type: !6463, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6463 = !DISubroutineType(types: !6464)
!6464 = !{null, !6335, !1711, !6337}
!6465 = !DILocalVariable(name: "ehci", arg: 1, scope: !6462, file: !6, line: 762, type: !6335)
!6466 = !DILocation(line: 762, column: 55, scope: !6462)
!6467 = !DILocalVariable(name: "val", arg: 2, scope: !6462, file: !6, line: 763, type: !1711)
!6468 = !DILocation(line: 763, column: 22, scope: !6462)
!6469 = !DILocalVariable(name: "regs", arg: 3, scope: !6462, file: !6, line: 763, type: !6337)
!6470 = !DILocation(line: 763, column: 42, scope: !6462)
!6471 = !DILocation(line: 770, column: 6, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6462, file: !6, line: 770, column: 6)
!6473 = !DILocation(line: 770, column: 12, scope: !6472)
!6474 = !DILocation(line: 770, column: 6, scope: !6462)
!6475 = !DILocation(line: 771, column: 21, scope: !6472)
!6476 = !DILocation(line: 771, column: 26, scope: !6472)
!6477 = !DILocation(line: 771, column: 3, scope: !6472)
!6478 = !DILocation(line: 773, column: 10, scope: !6472)
!6479 = !DILocation(line: 773, column: 15, scope: !6472)
!6480 = !DILocation(line: 773, column: 3, scope: !6472)
!6481 = !DILocation(line: 775, column: 1, scope: !6462)
!6482 = distinct !DISubprogram(name: "dbgp_external_startup", scope: !5867, file: !5867, line: 78, type: !5422, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6483 = !DILocalVariable(name: "hcd", arg: 1, scope: !6482, file: !5867, line: 78, type: !342)
!6484 = !DILocation(line: 78, column: 57, scope: !6482)
!6485 = !DILocation(line: 80, column: 35, scope: !6482)
!6486 = !DILocation(line: 80, column: 9, scope: !6482)
!6487 = !DILocation(line: 80, column: 2, scope: !6482)
!6488 = distinct !DISubprogram(name: "ehci_adjust_port_wakeup_flags", scope: !6489, file: !6489, line: 146, type: !6490, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6489 = !DIFile(filename: "drivers/usb/host/ehci-hub.c", directory: "/home/lizy2001/genbc/linux")
!6490 = !DISubroutineType(types: !6491)
!6491 = !{null, !5814, !626, !626}
!6492 = !DILocalVariable(name: "lock", arg: 1, scope: !6493, file: !6494, line: 402, type: !2207)
!6493 = distinct !DISubprogram(name: "spin_unlock_irq", scope: !6494, file: !6494, line: 402, type: !6495, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6494 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!6495 = !DISubroutineType(types: !6496)
!6496 = !{null, !2207}
!6497 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !6498)
!6498 = distinct !DILocation(line: 209, column: 2, scope: !6488)
!6499 = !DILocalVariable(name: "lock", arg: 1, scope: !6500, file: !6494, line: 377, type: !2207)
!6500 = distinct !DISubprogram(name: "spin_lock_irq", scope: !6494, file: !6494, line: 377, type: !6495, scopeLine: 378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6501 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !6502)
!6502 = distinct !DILocation(line: 173, column: 3, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6504, file: !6489, line: 163, column: 29)
!6504 = distinct !DILexicalBlock(scope: !6488, file: !6489, line: 163, column: 6)
!6505 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !6506)
!6506 = distinct !DILocation(line: 171, column: 3, scope: !6503)
!6507 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !6508)
!6508 = distinct !DILocation(line: 160, column: 2, scope: !6488)
!6509 = !DILocalVariable(name: "ehci", arg: 1, scope: !6488, file: !6489, line: 146, type: !5814)
!6510 = !DILocation(line: 146, column: 53, scope: !6488)
!6511 = !DILocalVariable(name: "suspending", arg: 2, scope: !6488, file: !6489, line: 147, type: !626)
!6512 = !DILocation(line: 147, column: 8, scope: !6488)
!6513 = !DILocalVariable(name: "do_wakeup", arg: 3, scope: !6488, file: !6489, line: 147, type: !626)
!6514 = !DILocation(line: 147, column: 25, scope: !6488)
!6515 = !DILocalVariable(name: "port", scope: !6488, file: !6489, line: 149, type: !401)
!6516 = !DILocation(line: 149, column: 7, scope: !6488)
!6517 = !DILocalVariable(name: "temp", scope: !6488, file: !6489, line: 150, type: !303)
!6518 = !DILocation(line: 150, column: 7, scope: !6488)
!6519 = !DILocation(line: 157, column: 19, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6488, file: !6489, line: 157, column: 6)
!6521 = !DILocation(line: 157, column: 7, scope: !6520)
!6522 = !DILocation(line: 157, column: 26, scope: !6520)
!6523 = !DILocation(line: 157, column: 31, scope: !6520)
!6524 = !DILocation(line: 157, column: 41, scope: !6520)
!6525 = !DILocation(line: 157, column: 58, scope: !6520)
!6526 = !DILocation(line: 157, column: 61, scope: !6520)
!6527 = !DILocation(line: 157, column: 6, scope: !6488)
!6528 = !DILocation(line: 158, column: 3, scope: !6520)
!6529 = !DILocation(line: 160, column: 17, scope: !6488)
!6530 = !DILocation(line: 160, column: 23, scope: !6488)
!6531 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !6508)
!6532 = distinct !DILexicalBlock(scope: !6533, file: !6494, line: 379, column: 2)
!6533 = distinct !DILexicalBlock(scope: !6500, file: !6494, line: 379, column: 2)
!6534 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !6508)
!6535 = distinct !DILexicalBlock(scope: !6533, file: !6494, line: 379, column: 2)
!6536 = !{i32 -2145441904}
!6537 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !6508)
!6538 = distinct !DILexicalBlock(scope: !6535, file: !6494, line: 379, column: 2)
!6539 = !DILocation(line: 163, column: 6, scope: !6504)
!6540 = !DILocation(line: 163, column: 12, scope: !6504)
!6541 = !DILocation(line: 163, column: 6, scope: !6488)
!6542 = !DILocation(line: 164, column: 10, scope: !6503)
!6543 = !DILocation(line: 164, column: 8, scope: !6503)
!6544 = !DILocation(line: 165, column: 3, scope: !6503)
!6545 = !DILocation(line: 165, column: 14, scope: !6503)
!6546 = !DILocalVariable(name: "hostpc_reg", scope: !6547, file: !6489, line: 166, type: !2542)
!6547 = distinct !DILexicalBlock(scope: !6503, file: !6489, line: 165, column: 18)
!6548 = !DILocation(line: 166, column: 17, scope: !6547)
!6549 = !DILocation(line: 166, column: 31, scope: !6547)
!6550 = !DILocation(line: 166, column: 37, scope: !6547)
!6551 = !DILocation(line: 166, column: 43, scope: !6547)
!6552 = !DILocation(line: 166, column: 50, scope: !6547)
!6553 = !DILocation(line: 168, column: 22, scope: !6547)
!6554 = !DILocation(line: 168, column: 28, scope: !6547)
!6555 = !DILocation(line: 168, column: 11, scope: !6547)
!6556 = !DILocation(line: 168, column: 9, scope: !6547)
!6557 = !DILocation(line: 169, column: 16, scope: !6547)
!6558 = !DILocation(line: 169, column: 22, scope: !6547)
!6559 = !DILocation(line: 169, column: 27, scope: !6547)
!6560 = !DILocation(line: 169, column: 43, scope: !6547)
!6561 = !DILocation(line: 169, column: 4, scope: !6547)
!6562 = distinct !{!6562, !6544, !6563}
!6563 = !DILocation(line: 170, column: 3, scope: !6503)
!6564 = !DILocation(line: 171, column: 20, scope: !6503)
!6565 = !DILocation(line: 171, column: 26, scope: !6503)
!6566 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !6506)
!6567 = distinct !DILexicalBlock(scope: !6568, file: !6494, line: 404, column: 2)
!6568 = distinct !DILexicalBlock(scope: !6493, file: !6494, line: 404, column: 2)
!6569 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !6506)
!6570 = distinct !DILexicalBlock(scope: !6568, file: !6494, line: 404, column: 2)
!6571 = !{i32 -2145440156}
!6572 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !6506)
!6573 = distinct !DILexicalBlock(scope: !6570, file: !6494, line: 404, column: 2)
!6574 = !DILocation(line: 172, column: 3, scope: !6503)
!6575 = !DILocation(line: 173, column: 18, scope: !6503)
!6576 = !DILocation(line: 173, column: 24, scope: !6503)
!6577 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !6502)
!6578 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !6502)
!6579 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !6502)
!6580 = !DILocation(line: 174, column: 2, scope: !6503)
!6581 = !DILocation(line: 176, column: 9, scope: !6488)
!6582 = !DILocation(line: 176, column: 7, scope: !6488)
!6583 = !DILocation(line: 177, column: 2, scope: !6488)
!6584 = !DILocation(line: 177, column: 13, scope: !6488)
!6585 = !DILocalVariable(name: "reg", scope: !6586, file: !6489, line: 178, type: !2542)
!6586 = distinct !DILexicalBlock(scope: !6488, file: !6489, line: 177, column: 17)
!6587 = !DILocation(line: 178, column: 16, scope: !6586)
!6588 = !DILocation(line: 178, column: 23, scope: !6586)
!6589 = !DILocation(line: 178, column: 29, scope: !6586)
!6590 = !DILocation(line: 178, column: 35, scope: !6586)
!6591 = !DILocation(line: 178, column: 47, scope: !6586)
!6592 = !DILocalVariable(name: "t1", scope: !6586, file: !6489, line: 179, type: !303)
!6593 = !DILocation(line: 179, column: 8, scope: !6586)
!6594 = !DILocation(line: 179, column: 24, scope: !6586)
!6595 = !DILocation(line: 179, column: 30, scope: !6586)
!6596 = !DILocation(line: 179, column: 13, scope: !6586)
!6597 = !DILocation(line: 179, column: 35, scope: !6586)
!6598 = !DILocalVariable(name: "t2", scope: !6586, file: !6489, line: 180, type: !303)
!6599 = !DILocation(line: 180, column: 8, scope: !6586)
!6600 = !DILocation(line: 180, column: 13, scope: !6586)
!6601 = !DILocation(line: 180, column: 16, scope: !6586)
!6602 = !DILocation(line: 185, column: 8, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6586, file: !6489, line: 185, column: 7)
!6604 = !DILocation(line: 185, column: 7, scope: !6586)
!6605 = !DILocation(line: 186, column: 8, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6607, file: !6489, line: 186, column: 8)
!6607 = distinct !DILexicalBlock(scope: !6603, file: !6489, line: 185, column: 20)
!6608 = !DILocation(line: 186, column: 11, scope: !6606)
!6609 = !DILocation(line: 186, column: 8, scope: !6607)
!6610 = !DILocation(line: 187, column: 8, scope: !6606)
!6611 = !DILocation(line: 187, column: 5, scope: !6606)
!6612 = !DILocation(line: 189, column: 8, scope: !6606)
!6613 = !DILocation(line: 190, column: 3, scope: !6607)
!6614 = !DILocation(line: 191, column: 15, scope: !6586)
!6615 = !DILocation(line: 191, column: 21, scope: !6586)
!6616 = !DILocation(line: 191, column: 25, scope: !6586)
!6617 = !DILocation(line: 191, column: 3, scope: !6586)
!6618 = distinct !{!6618, !6583, !6619}
!6619 = !DILocation(line: 192, column: 2, scope: !6488)
!6620 = !DILocation(line: 195, column: 6, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6488, file: !6489, line: 195, column: 6)
!6622 = !DILocation(line: 195, column: 12, scope: !6621)
!6623 = !DILocation(line: 195, column: 6, scope: !6488)
!6624 = !DILocation(line: 196, column: 10, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6621, file: !6489, line: 195, column: 29)
!6626 = !DILocation(line: 196, column: 8, scope: !6625)
!6627 = !DILocation(line: 197, column: 3, scope: !6625)
!6628 = !DILocation(line: 197, column: 14, scope: !6625)
!6629 = !DILocalVariable(name: "hostpc_reg", scope: !6630, file: !6489, line: 198, type: !2542)
!6630 = distinct !DILexicalBlock(scope: !6625, file: !6489, line: 197, column: 18)
!6631 = !DILocation(line: 198, column: 17, scope: !6630)
!6632 = !DILocation(line: 198, column: 31, scope: !6630)
!6633 = !DILocation(line: 198, column: 37, scope: !6630)
!6634 = !DILocation(line: 198, column: 43, scope: !6630)
!6635 = !DILocation(line: 198, column: 50, scope: !6630)
!6636 = !DILocation(line: 200, column: 22, scope: !6630)
!6637 = !DILocation(line: 200, column: 28, scope: !6630)
!6638 = !DILocation(line: 200, column: 11, scope: !6630)
!6639 = !DILocation(line: 200, column: 9, scope: !6630)
!6640 = !DILocation(line: 201, column: 16, scope: !6630)
!6641 = !DILocation(line: 201, column: 22, scope: !6630)
!6642 = !DILocation(line: 201, column: 27, scope: !6630)
!6643 = !DILocation(line: 201, column: 42, scope: !6630)
!6644 = !DILocation(line: 201, column: 4, scope: !6630)
!6645 = distinct !{!6645, !6627, !6646}
!6646 = !DILocation(line: 202, column: 3, scope: !6625)
!6647 = !DILocation(line: 203, column: 2, scope: !6625)
!6648 = !DILocation(line: 206, column: 7, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6488, file: !6489, line: 206, column: 6)
!6650 = !DILocation(line: 206, column: 18, scope: !6649)
!6651 = !DILocation(line: 206, column: 38, scope: !6649)
!6652 = !DILocation(line: 206, column: 21, scope: !6649)
!6653 = !DILocation(line: 206, column: 6, scope: !6488)
!6654 = !DILocation(line: 207, column: 39, scope: !6649)
!6655 = !DILocation(line: 207, column: 27, scope: !6649)
!6656 = !DILocation(line: 207, column: 3, scope: !6649)
!6657 = !DILocation(line: 209, column: 19, scope: !6488)
!6658 = !DILocation(line: 209, column: 25, scope: !6488)
!6659 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !6498)
!6660 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !6498)
!6661 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !6498)
!6662 = !DILocation(line: 210, column: 1, scope: !6488)
!6663 = distinct !DISubprogram(name: "ehci_port_change", scope: !6489, file: !6489, line: 125, type: !6346, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6664 = !DILocalVariable(name: "ehci", arg: 1, scope: !6663, file: !6489, line: 125, type: !5814)
!6665 = !DILocation(line: 125, column: 46, scope: !6663)
!6666 = !DILocalVariable(name: "i", scope: !6663, file: !6489, line: 127, type: !401)
!6667 = !DILocation(line: 127, column: 6, scope: !6663)
!6668 = !DILocation(line: 127, column: 10, scope: !6663)
!6669 = !DILocation(line: 131, column: 17, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6663, file: !6489, line: 131, column: 6)
!6671 = !DILocation(line: 131, column: 24, scope: !6670)
!6672 = !DILocation(line: 131, column: 30, scope: !6670)
!6673 = !DILocation(line: 131, column: 36, scope: !6670)
!6674 = !DILocation(line: 131, column: 6, scope: !6670)
!6675 = !DILocation(line: 131, column: 44, scope: !6670)
!6676 = !DILocation(line: 131, column: 6, scope: !6663)
!6677 = !DILocation(line: 132, column: 3, scope: !6670)
!6678 = !DILocation(line: 139, column: 2, scope: !6663)
!6679 = !DILocation(line: 139, column: 10, scope: !6663)
!6680 = !DILocation(line: 140, column: 18, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6663, file: !6489, line: 140, column: 7)
!6682 = !DILocation(line: 140, column: 25, scope: !6681)
!6683 = !DILocation(line: 140, column: 31, scope: !6681)
!6684 = !DILocation(line: 140, column: 37, scope: !6681)
!6685 = !DILocation(line: 140, column: 49, scope: !6681)
!6686 = !DILocation(line: 140, column: 7, scope: !6681)
!6687 = !DILocation(line: 140, column: 53, scope: !6681)
!6688 = !DILocation(line: 140, column: 7, scope: !6663)
!6689 = !DILocation(line: 141, column: 4, scope: !6681)
!6690 = distinct !{!6690, !6678, !6691}
!6691 = !DILocation(line: 141, column: 11, scope: !6663)
!6692 = !DILocation(line: 143, column: 2, scope: !6663)
!6693 = !DILocation(line: 144, column: 1, scope: !6663)
!6694 = distinct !DISubprogram(name: "ehci_hub_control", scope: !6489, file: !6489, line: 867, type: !5460, scopeLine: 874, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6695 = !DILocalVariable(name: "lock", arg: 1, scope: !6696, file: !6494, line: 327, type: !2207)
!6696 = distinct !DISubprogram(name: "spinlock_check", scope: !6494, file: !6494, line: 327, type: !6697, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6697 = !DISubroutineType(types: !6698)
!6698 = !{!6699, !2207}
!6699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!6700 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !6701)
!6701 = distinct !DILocation(line: 1290, column: 4, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6703, file: !6489, line: 1290, column: 4)
!6703 = distinct !DILexicalBlock(scope: !6704, file: !6489, line: 1290, column: 4)
!6704 = distinct !DILexicalBlock(scope: !6705, file: !6489, line: 1290, column: 4)
!6705 = distinct !DILexicalBlock(scope: !6706, file: !6489, line: 1290, column: 4)
!6706 = distinct !DILexicalBlock(scope: !6707, file: !6489, line: 1290, column: 4)
!6707 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1178, column: 19)
!6708 = distinct !DILexicalBlock(scope: !6694, file: !6489, line: 901, column: 19)
!6709 = !DILocalVariable(name: "lock", arg: 1, scope: !6710, file: !6494, line: 407, type: !2207)
!6710 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !6494, file: !6494, line: 407, type: !6711, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6711 = !DISubroutineType(types: !6712)
!6712 = !{null, !2207, !465}
!6713 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !6714)
!6714 = distinct !DILocation(line: 1288, column: 4, scope: !6707)
!6715 = !DILocalVariable(name: "flags", arg: 2, scope: !6710, file: !6494, line: 407, type: !465)
!6716 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !6714)
!6717 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !6718)
!6718 = distinct !DILocation(line: 1275, column: 4, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6720, file: !6489, line: 1275, column: 4)
!6720 = distinct !DILexicalBlock(scope: !6721, file: !6489, line: 1275, column: 4)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !6489, line: 1275, column: 4)
!6722 = distinct !DILexicalBlock(scope: !6723, file: !6489, line: 1275, column: 4)
!6723 = distinct !DILexicalBlock(scope: !6707, file: !6489, line: 1275, column: 4)
!6724 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !6725)
!6725 = distinct !DILocation(line: 1273, column: 4, scope: !6707)
!6726 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !6725)
!6727 = !DILocalVariable(name: "m", arg: 1, scope: !6728, file: !6729, line: 363, type: !1711)
!6728 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !6729, file: !6729, line: 363, type: !6730, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6729 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!6730 = !DISubroutineType(types: !6731)
!6731 = !{!465, !1711}
!6732 = !DILocation(line: 363, column: 74, scope: !6728, inlinedAt: !6733)
!6733 = distinct !DILocation(line: 1243, column: 9, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6735, file: !6489, line: 1234, column: 11)
!6735 = distinct !DILexicalBlock(scope: !6707, file: !6489, line: 1227, column: 8)
!6736 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !6737)
!6737 = distinct !DILocation(line: 1217, column: 5, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !6489, line: 1217, column: 5)
!6739 = distinct !DILexicalBlock(scope: !6740, file: !6489, line: 1217, column: 5)
!6740 = distinct !DILexicalBlock(scope: !6741, file: !6489, line: 1217, column: 5)
!6741 = distinct !DILexicalBlock(scope: !6742, file: !6489, line: 1217, column: 5)
!6742 = distinct !DILexicalBlock(scope: !6743, file: !6489, line: 1217, column: 5)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !6489, line: 1214, column: 35)
!6744 = distinct !DILexicalBlock(scope: !6707, file: !6489, line: 1214, column: 8)
!6745 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !6746)
!6746 = distinct !DILocation(line: 1215, column: 5, scope: !6743)
!6747 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !6746)
!6748 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !6749)
!6749 = distinct !DILocation(line: 1209, column: 5, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6751, file: !6489, line: 1209, column: 5)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !6489, line: 1209, column: 5)
!6752 = distinct !DILexicalBlock(scope: !6753, file: !6489, line: 1209, column: 5)
!6753 = distinct !DILexicalBlock(scope: !6754, file: !6489, line: 1209, column: 5)
!6754 = distinct !DILexicalBlock(scope: !6755, file: !6489, line: 1209, column: 5)
!6755 = distinct !DILexicalBlock(scope: !6756, file: !6489, line: 1205, column: 40)
!6756 = distinct !DILexicalBlock(scope: !6707, file: !6489, line: 1205, column: 8)
!6757 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !6758)
!6758 = distinct !DILocation(line: 1207, column: 5, scope: !6755)
!6759 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !6758)
!6760 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !6761)
!6761 = distinct !DILocation(line: 1196, column: 5, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6763, file: !6489, line: 1196, column: 5)
!6763 = distinct !DILexicalBlock(scope: !6764, file: !6489, line: 1196, column: 5)
!6764 = distinct !DILexicalBlock(scope: !6765, file: !6489, line: 1196, column: 5)
!6765 = distinct !DILexicalBlock(scope: !6766, file: !6489, line: 1196, column: 5)
!6766 = distinct !DILexicalBlock(scope: !6767, file: !6489, line: 1196, column: 5)
!6767 = distinct !DILexicalBlock(scope: !6768, file: !6489, line: 1193, column: 31)
!6768 = distinct !DILexicalBlock(scope: !6707, file: !6489, line: 1193, column: 8)
!6769 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !6770)
!6770 = distinct !DILocation(line: 1194, column: 5, scope: !6767)
!6771 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !6770)
!6772 = !DILocalVariable(name: "val", arg: 1, scope: !6773, file: !6774, line: 43, type: !303)
!6773 = distinct !DISubprogram(name: "put_unaligned_le32", scope: !6774, file: !6774, line: 43, type: !6775, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!6774 = !DIFile(filename: "./include/linux/unaligned/access_ok.h", directory: "/home/lizy2001/genbc/linux")
!6775 = !DISubroutineType(types: !6776)
!6776 = !{null, !303, !341}
!6777 = !DILocation(line: 43, column: 52, scope: !6773, inlinedAt: !6778)
!6778 = distinct !DILocation(line: 1146, column: 3, scope: !6708)
!6779 = !DILocalVariable(name: "p", arg: 2, scope: !6773, file: !6774, line: 43, type: !341)
!6780 = !DILocation(line: 43, column: 63, scope: !6773, inlinedAt: !6778)
!6781 = !DILocation(line: 363, column: 74, scope: !6728, inlinedAt: !6782)
!6782 = distinct !DILocation(line: 1039, column: 9, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6784, file: !6489, line: 1036, column: 28)
!6784 = distinct !DILexicalBlock(scope: !6785, file: !6489, line: 1036, column: 8)
!6785 = distinct !DILexicalBlock(scope: !6786, file: !6489, line: 1033, column: 34)
!6786 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1033, column: 7)
!6787 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !6788)
!6788 = distinct !DILocation(line: 1027, column: 5, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6790, file: !6489, line: 1027, column: 5)
!6790 = distinct !DILexicalBlock(scope: !6791, file: !6489, line: 1027, column: 5)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !6489, line: 1027, column: 5)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !6489, line: 1027, column: 5)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !6489, line: 1027, column: 5)
!6794 = distinct !DILexicalBlock(scope: !6795, file: !6489, line: 1024, column: 36)
!6795 = distinct !DILexicalBlock(scope: !6796, file: !6489, line: 1023, column: 8)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !6489, line: 1013, column: 39)
!6797 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1013, column: 7)
!6798 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !6799)
!6799 = distinct !DILocation(line: 1025, column: 5, scope: !6794)
!6800 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !6799)
!6801 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !6802)
!6802 = distinct !DILocation(line: 974, column: 5, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !6489, line: 974, column: 5)
!6804 = distinct !DILexicalBlock(scope: !6805, file: !6489, line: 974, column: 5)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !6489, line: 974, column: 5)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !6489, line: 974, column: 5)
!6807 = distinct !DILexicalBlock(scope: !6808, file: !6489, line: 974, column: 5)
!6808 = distinct !DILexicalBlock(scope: !6809, file: !6489, line: 971, column: 35)
!6809 = distinct !DILexicalBlock(scope: !6810, file: !6489, line: 971, column: 8)
!6810 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 926, column: 19)
!6811 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !6812)
!6812 = distinct !DILocation(line: 972, column: 5, scope: !6808)
!6813 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !6812)
!6814 = !DILocation(line: 363, column: 74, scope: !6728, inlinedAt: !6815)
!6815 = distinct !DILocation(line: 963, column: 8, scope: !6810)
!6816 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !6817)
!6817 = distinct !DILocation(line: 957, column: 5, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6819, file: !6489, line: 957, column: 5)
!6819 = distinct !DILexicalBlock(scope: !6820, file: !6489, line: 957, column: 5)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !6489, line: 957, column: 5)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !6489, line: 957, column: 5)
!6822 = distinct !DILexicalBlock(scope: !6823, file: !6489, line: 957, column: 5)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !6489, line: 951, column: 31)
!6824 = distinct !DILexicalBlock(scope: !6810, file: !6489, line: 951, column: 8)
!6825 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !6826)
!6826 = distinct !DILocation(line: 955, column: 5, scope: !6823)
!6827 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !6826)
!6828 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !6829)
!6829 = distinct !DILocation(line: 1309, column: 2, scope: !6694)
!6830 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !6829)
!6831 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !6832)
!6832 = distinct !DILocation(line: 900, column: 2, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6834, file: !6489, line: 900, column: 2)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !6489, line: 900, column: 2)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !6489, line: 900, column: 2)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !6489, line: 900, column: 2)
!6837 = distinct !DILexicalBlock(scope: !6694, file: !6489, line: 900, column: 2)
!6838 = !DILocalVariable(name: "hcd", arg: 1, scope: !6694, file: !6489, line: 868, type: !342)
!6839 = !DILocation(line: 868, column: 18, scope: !6694)
!6840 = !DILocalVariable(name: "typeReq", arg: 2, scope: !6694, file: !6489, line: 869, type: !1062)
!6841 = !DILocation(line: 869, column: 7, scope: !6694)
!6842 = !DILocalVariable(name: "wValue", arg: 3, scope: !6694, file: !6489, line: 870, type: !1062)
!6843 = !DILocation(line: 870, column: 7, scope: !6694)
!6844 = !DILocalVariable(name: "wIndex", arg: 4, scope: !6694, file: !6489, line: 871, type: !1062)
!6845 = !DILocation(line: 871, column: 7, scope: !6694)
!6846 = !DILocalVariable(name: "buf", arg: 5, scope: !6694, file: !6489, line: 872, type: !417)
!6847 = !DILocation(line: 872, column: 9, scope: !6694)
!6848 = !DILocalVariable(name: "wLength", arg: 6, scope: !6694, file: !6489, line: 873, type: !1062)
!6849 = !DILocation(line: 873, column: 7, scope: !6694)
!6850 = !DILocalVariable(name: "ehci", scope: !6694, file: !6489, line: 875, type: !5814)
!6851 = !DILocation(line: 875, column: 19, scope: !6694)
!6852 = !DILocation(line: 875, column: 39, scope: !6694)
!6853 = !DILocation(line: 875, column: 26, scope: !6694)
!6854 = !DILocalVariable(name: "ports", scope: !6694, file: !6489, line: 876, type: !401)
!6855 = !DILocation(line: 876, column: 7, scope: !6694)
!6856 = !DILocation(line: 876, column: 15, scope: !6694)
!6857 = !DILocalVariable(name: "status_reg", scope: !6694, file: !6489, line: 877, type: !2542)
!6858 = !DILocation(line: 877, column: 15, scope: !6694)
!6859 = !DILocalVariable(name: "hostpc_reg", scope: !6694, file: !6489, line: 877, type: !2542)
!6860 = !DILocation(line: 877, column: 28, scope: !6694)
!6861 = !DILocalVariable(name: "temp", scope: !6694, file: !6489, line: 878, type: !303)
!6862 = !DILocation(line: 878, column: 7, scope: !6694)
!6863 = !DILocalVariable(name: "temp1", scope: !6694, file: !6489, line: 878, type: !303)
!6864 = !DILocation(line: 878, column: 13, scope: !6694)
!6865 = !DILocalVariable(name: "status", scope: !6694, file: !6489, line: 878, type: !303)
!6866 = !DILocation(line: 878, column: 20, scope: !6694)
!6867 = !DILocalVariable(name: "flags", scope: !6694, file: !6489, line: 879, type: !465)
!6868 = !DILocation(line: 879, column: 16, scope: !6694)
!6869 = !DILocalVariable(name: "retval", scope: !6694, file: !6489, line: 880, type: !401)
!6870 = !DILocation(line: 880, column: 7, scope: !6694)
!6871 = !DILocalVariable(name: "selector", scope: !6694, file: !6489, line: 881, type: !7)
!6872 = !DILocation(line: 881, column: 11, scope: !6694)
!6873 = !DILocation(line: 888, column: 9, scope: !6694)
!6874 = !DILocation(line: 888, column: 16, scope: !6694)
!6875 = !DILocation(line: 888, column: 7, scope: !6694)
!6876 = !DILocation(line: 889, column: 11, scope: !6694)
!6877 = !DILocation(line: 889, column: 16, scope: !6694)
!6878 = !DILocation(line: 889, column: 7, scope: !6694)
!6879 = !DILocation(line: 890, column: 16, scope: !6694)
!6880 = !DILocation(line: 890, column: 22, scope: !6694)
!6881 = !DILocation(line: 890, column: 28, scope: !6694)
!6882 = !DILocation(line: 890, column: 40, scope: !6694)
!6883 = !DILocation(line: 890, column: 13, scope: !6694)
!6884 = !DILocation(line: 891, column: 16, scope: !6694)
!6885 = !DILocation(line: 891, column: 22, scope: !6694)
!6886 = !DILocation(line: 891, column: 28, scope: !6694)
!6887 = !DILocation(line: 891, column: 35, scope: !6694)
!6888 = !DILocation(line: 891, column: 13, scope: !6694)
!6889 = !DILocation(line: 900, column: 2, scope: !6694)
!6890 = !DILocation(line: 900, column: 2, scope: !6837)
!6891 = !DILocalVariable(name: "__dummy", scope: !6892, file: !6489, line: 900, type: !465)
!6892 = distinct !DILexicalBlock(scope: !6836, file: !6489, line: 900, column: 2)
!6893 = !DILocation(line: 900, column: 2, scope: !6892)
!6894 = !DILocalVariable(name: "__dummy2", scope: !6892, file: !6489, line: 900, type: !465)
!6895 = !DILocation(line: 900, column: 2, scope: !6836)
!6896 = !DILocation(line: 900, column: 2, scope: !6835)
!6897 = !DILocation(line: 900, column: 2, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6835, file: !6489, line: 900, column: 2)
!6899 = !DILocalVariable(name: "__dummy", scope: !6900, file: !6489, line: 900, type: !465)
!6900 = distinct !DILexicalBlock(scope: !6901, file: !6489, line: 900, column: 2)
!6901 = distinct !DILexicalBlock(scope: !6898, file: !6489, line: 900, column: 2)
!6902 = !DILocation(line: 900, column: 2, scope: !6900)
!6903 = !DILocalVariable(name: "__dummy2", scope: !6900, file: !6489, line: 900, type: !465)
!6904 = !DILocation(line: 900, column: 2, scope: !6901)
!6905 = !DILocation(line: 900, column: 2, scope: !6834)
!6906 = !{i32 -2140019619}
!6907 = !DILocation(line: 900, column: 2, scope: !6833)
!6908 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !6832)
!6909 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !6832)
!6910 = !DILocation(line: 901, column: 10, scope: !6694)
!6911 = !DILocation(line: 901, column: 2, scope: !6694)
!6912 = !DILocation(line: 903, column: 11, scope: !6708)
!6913 = !DILocation(line: 903, column: 3, scope: !6708)
!6914 = !DILocation(line: 907, column: 4, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 903, column: 19)
!6916 = !DILocation(line: 909, column: 4, scope: !6915)
!6917 = !DILocation(line: 911, column: 3, scope: !6708)
!6918 = !DILocation(line: 913, column: 8, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 913, column: 7)
!6920 = !DILocation(line: 913, column: 15, scope: !6919)
!6921 = !DILocation(line: 913, column: 18, scope: !6919)
!6922 = !DILocation(line: 913, column: 27, scope: !6919)
!6923 = !DILocation(line: 913, column: 25, scope: !6919)
!6924 = !DILocation(line: 913, column: 7, scope: !6708)
!6925 = !DILocation(line: 914, column: 4, scope: !6919)
!6926 = !DILocation(line: 915, column: 9, scope: !6708)
!6927 = !DILocation(line: 916, column: 21, scope: !6708)
!6928 = !DILocation(line: 916, column: 27, scope: !6708)
!6929 = !DILocation(line: 916, column: 10, scope: !6708)
!6930 = !DILocation(line: 916, column: 8, scope: !6708)
!6931 = !DILocation(line: 917, column: 8, scope: !6708)
!6932 = !DILocation(line: 926, column: 11, scope: !6708)
!6933 = !DILocation(line: 926, column: 3, scope: !6708)
!6934 = !DILocation(line: 928, column: 16, scope: !6810)
!6935 = !DILocation(line: 928, column: 22, scope: !6810)
!6936 = !DILocation(line: 928, column: 27, scope: !6810)
!6937 = !DILocation(line: 928, column: 39, scope: !6810)
!6938 = !DILocation(line: 928, column: 4, scope: !6810)
!6939 = !DILocation(line: 929, column: 4, scope: !6810)
!6940 = !DILocation(line: 931, column: 16, scope: !6810)
!6941 = !DILocation(line: 931, column: 22, scope: !6810)
!6942 = !DILocation(line: 931, column: 27, scope: !6810)
!6943 = !DILocation(line: 931, column: 39, scope: !6810)
!6944 = !DILocation(line: 931, column: 4, scope: !6810)
!6945 = !DILocation(line: 932, column: 4, scope: !6810)
!6946 = !DILocation(line: 934, column: 8, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6810, file: !6489, line: 934, column: 8)
!6948 = !DILocation(line: 934, column: 13, scope: !6947)
!6949 = !DILocation(line: 934, column: 8, scope: !6810)
!6950 = !DILocation(line: 935, column: 5, scope: !6947)
!6951 = !DILocation(line: 936, column: 8, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6810, file: !6489, line: 936, column: 8)
!6953 = !DILocation(line: 936, column: 14, scope: !6952)
!6954 = !DILocation(line: 936, column: 8, scope: !6810)
!6955 = !DILocation(line: 937, column: 5, scope: !6952)
!6956 = !DILocation(line: 945, column: 10, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6810, file: !6489, line: 945, column: 8)
!6958 = !DILocation(line: 945, column: 15, scope: !6957)
!6959 = !DILocation(line: 945, column: 8, scope: !6810)
!6960 = !DILocation(line: 946, column: 5, scope: !6957)
!6961 = !DILocation(line: 947, column: 9, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6810, file: !6489, line: 947, column: 8)
!6963 = !DILocation(line: 947, column: 14, scope: !6962)
!6964 = !DILocation(line: 947, column: 25, scope: !6962)
!6965 = !DILocation(line: 947, column: 8, scope: !6810)
!6966 = !DILocation(line: 948, column: 5, scope: !6962)
!6967 = !DILocation(line: 951, column: 8, scope: !6824)
!6968 = !DILocation(line: 951, column: 14, scope: !6824)
!6969 = !DILocation(line: 951, column: 8, scope: !6810)
!6970 = !DILocation(line: 952, column: 24, scope: !6823)
!6971 = !DILocation(line: 952, column: 30, scope: !6823)
!6972 = !DILocation(line: 952, column: 13, scope: !6823)
!6973 = !DILocation(line: 952, column: 11, scope: !6823)
!6974 = !DILocation(line: 953, column: 17, scope: !6823)
!6975 = !DILocation(line: 953, column: 23, scope: !6823)
!6976 = !DILocation(line: 953, column: 29, scope: !6823)
!6977 = !DILocation(line: 954, column: 7, scope: !6823)
!6978 = !DILocation(line: 953, column: 5, scope: !6823)
!6979 = !DILocation(line: 955, column: 29, scope: !6823)
!6980 = !DILocation(line: 955, column: 35, scope: !6823)
!6981 = !DILocation(line: 955, column: 41, scope: !6823)
!6982 = !DILocalVariable(name: "__dummy", scope: !6983, file: !6494, line: 409, type: !465)
!6983 = distinct !DILexicalBlock(scope: !6984, file: !6494, line: 409, column: 2)
!6984 = distinct !DILexicalBlock(scope: !6710, file: !6494, line: 409, column: 2)
!6985 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !6826)
!6986 = !DILocalVariable(name: "__dummy2", scope: !6983, file: !6494, line: 409, type: !465)
!6987 = !DILocalVariable(name: "__dummy", scope: !6988, file: !6494, line: 409, type: !465)
!6988 = distinct !DILexicalBlock(scope: !6989, file: !6494, line: 409, column: 2)
!6989 = distinct !DILexicalBlock(scope: !6990, file: !6494, line: 409, column: 2)
!6990 = distinct !DILexicalBlock(scope: !6991, file: !6494, line: 409, column: 2)
!6991 = distinct !DILexicalBlock(scope: !6984, file: !6494, line: 409, column: 2)
!6992 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !6826)
!6993 = !DILocalVariable(name: "__dummy2", scope: !6988, file: !6494, line: 409, type: !465)
!6994 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !6826)
!6995 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !6826)
!6996 = distinct !DILexicalBlock(scope: !6991, file: !6494, line: 409, column: 2)
!6997 = !{i32 -2145439112}
!6998 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !6826)
!6999 = distinct !DILexicalBlock(scope: !6996, file: !6494, line: 409, column: 2)
!7000 = !DILocation(line: 956, column: 5, scope: !6823)
!7001 = !DILocation(line: 957, column: 5, scope: !6823)
!7002 = !DILocation(line: 957, column: 5, scope: !6822)
!7003 = !DILocalVariable(name: "__dummy", scope: !7004, file: !6489, line: 957, type: !465)
!7004 = distinct !DILexicalBlock(scope: !6821, file: !6489, line: 957, column: 5)
!7005 = !DILocation(line: 957, column: 5, scope: !7004)
!7006 = !DILocalVariable(name: "__dummy2", scope: !7004, file: !6489, line: 957, type: !465)
!7007 = !DILocation(line: 957, column: 5, scope: !6821)
!7008 = !DILocation(line: 957, column: 5, scope: !6820)
!7009 = !DILocation(line: 957, column: 5, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !6820, file: !6489, line: 957, column: 5)
!7011 = !DILocalVariable(name: "__dummy", scope: !7012, file: !6489, line: 957, type: !465)
!7012 = distinct !DILexicalBlock(scope: !7013, file: !6489, line: 957, column: 5)
!7013 = distinct !DILexicalBlock(scope: !7010, file: !6489, line: 957, column: 5)
!7014 = !DILocation(line: 957, column: 5, scope: !7012)
!7015 = !DILocalVariable(name: "__dummy2", scope: !7012, file: !6489, line: 957, type: !465)
!7016 = !DILocation(line: 957, column: 5, scope: !7013)
!7017 = !DILocation(line: 957, column: 5, scope: !6819)
!7018 = !{i32 -2140018112}
!7019 = !DILocation(line: 957, column: 5, scope: !6818)
!7020 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !6817)
!7021 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !6817)
!7022 = !DILocation(line: 958, column: 4, scope: !6823)
!7023 = !DILocation(line: 960, column: 9, scope: !6810)
!7024 = !DILocation(line: 961, column: 16, scope: !6810)
!7025 = !DILocation(line: 961, column: 22, scope: !6810)
!7026 = !DILocation(line: 961, column: 27, scope: !6810)
!7027 = !DILocation(line: 961, column: 42, scope: !6810)
!7028 = !DILocation(line: 961, column: 4, scope: !6810)
!7029 = !DILocation(line: 962, column: 31, scope: !6810)
!7030 = !DILocation(line: 365, column: 27, scope: !7031, inlinedAt: !6815)
!7031 = distinct !DILexicalBlock(scope: !6728, file: !6729, line: 365, column: 6)
!7032 = !DILocation(line: 365, column: 6, scope: !7031, inlinedAt: !6815)
!7033 = !DILocation(line: 365, column: 6, scope: !6728, inlinedAt: !6815)
!7034 = !DILocation(line: 366, column: 12, scope: !7035, inlinedAt: !6815)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !6729, line: 366, column: 7)
!7036 = distinct !DILexicalBlock(scope: !7031, file: !6729, line: 365, column: 31)
!7037 = !DILocation(line: 366, column: 14, scope: !7035, inlinedAt: !6815)
!7038 = !DILocation(line: 366, column: 7, scope: !7036, inlinedAt: !6815)
!7039 = !DILocation(line: 367, column: 4, scope: !7035, inlinedAt: !6815)
!7040 = !DILocation(line: 368, column: 28, scope: !7036, inlinedAt: !6815)
!7041 = !DILocation(line: 368, column: 10, scope: !7036, inlinedAt: !6815)
!7042 = !DILocation(line: 368, column: 3, scope: !7036, inlinedAt: !6815)
!7043 = !DILocation(line: 370, column: 29, scope: !7044, inlinedAt: !6815)
!7044 = distinct !DILexicalBlock(scope: !7031, file: !6729, line: 369, column: 9)
!7045 = !DILocation(line: 370, column: 10, scope: !7044, inlinedAt: !6815)
!7046 = !DILocation(line: 370, column: 3, scope: !7044, inlinedAt: !6815)
!7047 = !DILocation(line: 372, column: 1, scope: !6728, inlinedAt: !6815)
!7048 = !DILocation(line: 963, column: 6, scope: !6810)
!7049 = !DILocation(line: 962, column: 4, scope: !6810)
!7050 = !DILocation(line: 962, column: 10, scope: !6810)
!7051 = !DILocation(line: 962, column: 21, scope: !6810)
!7052 = !DILocation(line: 962, column: 29, scope: !6810)
!7053 = !DILocation(line: 964, column: 12, scope: !6810)
!7054 = !DILocation(line: 964, column: 21, scope: !6810)
!7055 = !DILocation(line: 964, column: 27, scope: !6810)
!7056 = !DILocation(line: 964, column: 4, scope: !6810)
!7057 = !DILocation(line: 965, column: 31, scope: !6810)
!7058 = !DILocation(line: 965, column: 36, scope: !6810)
!7059 = !DILocation(line: 965, column: 42, scope: !6810)
!7060 = !DILocation(line: 965, column: 4, scope: !6810)
!7061 = !DILocation(line: 966, column: 4, scope: !6810)
!7062 = !DILocation(line: 968, column: 14, scope: !6810)
!7063 = !DILocation(line: 968, column: 23, scope: !6810)
!7064 = !DILocation(line: 968, column: 29, scope: !6810)
!7065 = !DILocation(line: 968, column: 4, scope: !6810)
!7066 = !DILocation(line: 969, column: 4, scope: !6810)
!7067 = !DILocation(line: 971, column: 8, scope: !6809)
!7068 = !DILocation(line: 971, column: 8, scope: !6810)
!7069 = !DILocation(line: 972, column: 29, scope: !6808)
!7070 = !DILocation(line: 972, column: 35, scope: !6808)
!7071 = !DILocation(line: 972, column: 41, scope: !6808)
!7072 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !6812)
!7073 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !6812)
!7074 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !6812)
!7075 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !6812)
!7076 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !6812)
!7077 = !DILocation(line: 973, column: 21, scope: !6808)
!7078 = !DILocation(line: 973, column: 27, scope: !6808)
!7079 = !DILocation(line: 973, column: 5, scope: !6808)
!7080 = !DILocation(line: 974, column: 5, scope: !6808)
!7081 = !DILocation(line: 974, column: 5, scope: !6807)
!7082 = !DILocalVariable(name: "__dummy", scope: !7083, file: !6489, line: 974, type: !465)
!7083 = distinct !DILexicalBlock(scope: !6806, file: !6489, line: 974, column: 5)
!7084 = !DILocation(line: 974, column: 5, scope: !7083)
!7085 = !DILocalVariable(name: "__dummy2", scope: !7083, file: !6489, line: 974, type: !465)
!7086 = !DILocation(line: 974, column: 5, scope: !6806)
!7087 = !DILocation(line: 974, column: 5, scope: !6805)
!7088 = !DILocation(line: 974, column: 5, scope: !7089)
!7089 = distinct !DILexicalBlock(scope: !6805, file: !6489, line: 974, column: 5)
!7090 = !DILocalVariable(name: "__dummy", scope: !7091, file: !6489, line: 974, type: !465)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !6489, line: 974, column: 5)
!7092 = distinct !DILexicalBlock(scope: !7089, file: !6489, line: 974, column: 5)
!7093 = !DILocation(line: 974, column: 5, scope: !7091)
!7094 = !DILocalVariable(name: "__dummy2", scope: !7091, file: !6489, line: 974, type: !465)
!7095 = !DILocation(line: 974, column: 5, scope: !7092)
!7096 = !DILocation(line: 974, column: 5, scope: !6804)
!7097 = !{i32 -2140016980}
!7098 = !DILocation(line: 974, column: 5, scope: !6803)
!7099 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !6802)
!7100 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !6802)
!7101 = !DILocation(line: 975, column: 4, scope: !6808)
!7102 = !DILocation(line: 976, column: 4, scope: !6810)
!7103 = !DILocation(line: 978, column: 16, scope: !6810)
!7104 = !DILocation(line: 978, column: 22, scope: !6810)
!7105 = !DILocation(line: 978, column: 27, scope: !6810)
!7106 = !DILocation(line: 978, column: 39, scope: !6810)
!7107 = !DILocation(line: 978, column: 4, scope: !6810)
!7108 = !DILocation(line: 979, column: 4, scope: !6810)
!7109 = !DILocation(line: 981, column: 16, scope: !6810)
!7110 = !DILocation(line: 981, column: 22, scope: !6810)
!7111 = !DILocation(line: 981, column: 27, scope: !6810)
!7112 = !DILocation(line: 981, column: 39, scope: !6810)
!7113 = !DILocation(line: 981, column: 4, scope: !6810)
!7114 = !DILocation(line: 982, column: 4, scope: !6810)
!7115 = !DILocation(line: 985, column: 4, scope: !6810)
!7116 = !DILocation(line: 987, column: 4, scope: !6810)
!7117 = !DILocation(line: 989, column: 14, scope: !6708)
!7118 = !DILocation(line: 989, column: 21, scope: !6708)
!7119 = !DILocation(line: 989, column: 27, scope: !6708)
!7120 = !DILocation(line: 989, column: 33, scope: !6708)
!7121 = !DILocation(line: 989, column: 3, scope: !6708)
!7122 = !DILocation(line: 990, column: 3, scope: !6708)
!7123 = !DILocation(line: 992, column: 24, scope: !6708)
!7124 = !DILocation(line: 993, column: 4, scope: !6708)
!7125 = !DILocation(line: 992, column: 30, scope: !6708)
!7126 = !DILocation(line: 992, column: 3, scope: !6708)
!7127 = !DILocation(line: 994, column: 3, scope: !6708)
!7128 = !DILocation(line: 997, column: 11, scope: !6708)
!7129 = !DILocation(line: 997, column: 3, scope: !6708)
!7130 = !DILocation(line: 999, column: 3, scope: !6708)
!7131 = !DILocation(line: 1001, column: 8, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1001, column: 7)
!7133 = !DILocation(line: 1001, column: 15, scope: !7132)
!7134 = !DILocation(line: 1001, column: 18, scope: !7132)
!7135 = !DILocation(line: 1001, column: 27, scope: !7132)
!7136 = !DILocation(line: 1001, column: 25, scope: !7132)
!7137 = !DILocation(line: 1001, column: 7, scope: !6708)
!7138 = !DILocation(line: 1002, column: 4, scope: !7132)
!7139 = !DILocation(line: 1003, column: 9, scope: !6708)
!7140 = !DILocation(line: 1004, column: 10, scope: !6708)
!7141 = !DILocation(line: 1005, column: 21, scope: !6708)
!7142 = !DILocation(line: 1005, column: 27, scope: !6708)
!7143 = !DILocation(line: 1005, column: 10, scope: !6708)
!7144 = !DILocation(line: 1005, column: 8, scope: !6708)
!7145 = !DILocation(line: 1008, column: 7, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1008, column: 7)
!7147 = !DILocation(line: 1008, column: 12, scope: !7146)
!7148 = !DILocation(line: 1008, column: 7, scope: !6708)
!7149 = !DILocation(line: 1009, column: 11, scope: !7146)
!7150 = !DILocation(line: 1009, column: 4, scope: !7146)
!7151 = !DILocation(line: 1010, column: 7, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1010, column: 7)
!7153 = !DILocation(line: 1010, column: 12, scope: !7152)
!7154 = !DILocation(line: 1010, column: 7, scope: !6708)
!7155 = !DILocation(line: 1011, column: 11, scope: !7152)
!7156 = !DILocation(line: 1011, column: 4, scope: !7152)
!7157 = !DILocation(line: 1013, column: 8, scope: !6797)
!7158 = !DILocation(line: 1013, column: 13, scope: !6797)
!7159 = !DILocation(line: 1013, column: 25, scope: !6797)
!7160 = !DILocation(line: 1013, column: 29, scope: !6797)
!7161 = !DILocation(line: 1013, column: 7, scope: !6708)
!7162 = !DILocation(line: 1014, column: 11, scope: !6796)
!7163 = !DILocation(line: 1023, column: 10, scope: !6795)
!7164 = !DILocation(line: 1023, column: 15, scope: !6795)
!7165 = !DILocation(line: 1023, column: 26, scope: !6795)
!7166 = !DILocation(line: 1023, column: 30, scope: !6795)
!7167 = !DILocation(line: 1023, column: 36, scope: !6795)
!7168 = !DILocation(line: 1023, column: 29, scope: !6795)
!7169 = !DILocation(line: 1024, column: 6, scope: !6795)
!7170 = !DILocation(line: 1024, column: 9, scope: !6795)
!7171 = !DILocation(line: 1023, column: 8, scope: !6796)
!7172 = !DILocation(line: 1025, column: 29, scope: !6794)
!7173 = !DILocation(line: 1025, column: 35, scope: !6794)
!7174 = !DILocation(line: 1025, column: 41, scope: !6794)
!7175 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !6799)
!7176 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !6799)
!7177 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !6799)
!7178 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !6799)
!7179 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !6799)
!7180 = !DILocation(line: 1026, column: 21, scope: !6794)
!7181 = !DILocation(line: 1026, column: 27, scope: !6794)
!7182 = !DILocation(line: 1026, column: 5, scope: !6794)
!7183 = !DILocation(line: 1027, column: 5, scope: !6794)
!7184 = !DILocation(line: 1027, column: 5, scope: !6793)
!7185 = !DILocalVariable(name: "__dummy", scope: !7186, file: !6489, line: 1027, type: !465)
!7186 = distinct !DILexicalBlock(scope: !6792, file: !6489, line: 1027, column: 5)
!7187 = !DILocation(line: 1027, column: 5, scope: !7186)
!7188 = !DILocalVariable(name: "__dummy2", scope: !7186, file: !6489, line: 1027, type: !465)
!7189 = !DILocation(line: 1027, column: 5, scope: !6792)
!7190 = !DILocation(line: 1027, column: 5, scope: !6791)
!7191 = !DILocation(line: 1027, column: 5, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !6791, file: !6489, line: 1027, column: 5)
!7193 = !DILocalVariable(name: "__dummy", scope: !7194, file: !6489, line: 1027, type: !465)
!7194 = distinct !DILexicalBlock(scope: !7195, file: !6489, line: 1027, column: 5)
!7195 = distinct !DILexicalBlock(scope: !7192, file: !6489, line: 1027, column: 5)
!7196 = !DILocation(line: 1027, column: 5, scope: !7194)
!7197 = !DILocalVariable(name: "__dummy2", scope: !7194, file: !6489, line: 1027, type: !465)
!7198 = !DILocation(line: 1027, column: 5, scope: !7195)
!7199 = !DILocation(line: 1027, column: 5, scope: !6790)
!7200 = !{i32 -2140015277}
!7201 = !DILocation(line: 1027, column: 5, scope: !6789)
!7202 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !6788)
!7203 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !6788)
!7204 = !DILocation(line: 1028, column: 23, scope: !6794)
!7205 = !DILocation(line: 1028, column: 29, scope: !6794)
!7206 = !DILocation(line: 1028, column: 12, scope: !6794)
!7207 = !DILocation(line: 1028, column: 10, scope: !6794)
!7208 = !DILocation(line: 1029, column: 4, scope: !6794)
!7209 = !DILocation(line: 1030, column: 3, scope: !6796)
!7210 = !DILocation(line: 1033, column: 8, scope: !6786)
!7211 = !DILocation(line: 1033, column: 14, scope: !6786)
!7212 = !DILocation(line: 1033, column: 25, scope: !6786)
!7213 = !DILocation(line: 1033, column: 7, scope: !6708)
!7214 = !DILocation(line: 1036, column: 8, scope: !6784)
!7215 = !DILocation(line: 1036, column: 13, scope: !6784)
!7216 = !DILocation(line: 1036, column: 8, scope: !6785)
!7217 = !DILocation(line: 1038, column: 32, scope: !6783)
!7218 = !DILocation(line: 365, column: 27, scope: !7031, inlinedAt: !6782)
!7219 = !DILocation(line: 365, column: 6, scope: !7031, inlinedAt: !6782)
!7220 = !DILocation(line: 365, column: 6, scope: !6728, inlinedAt: !6782)
!7221 = !DILocation(line: 366, column: 12, scope: !7035, inlinedAt: !6782)
!7222 = !DILocation(line: 366, column: 14, scope: !7035, inlinedAt: !6782)
!7223 = !DILocation(line: 366, column: 7, scope: !7036, inlinedAt: !6782)
!7224 = !DILocation(line: 367, column: 4, scope: !7035, inlinedAt: !6782)
!7225 = !DILocation(line: 368, column: 28, scope: !7036, inlinedAt: !6782)
!7226 = !DILocation(line: 368, column: 10, scope: !7036, inlinedAt: !6782)
!7227 = !DILocation(line: 368, column: 3, scope: !7036, inlinedAt: !6782)
!7228 = !DILocation(line: 370, column: 29, scope: !7044, inlinedAt: !6782)
!7229 = !DILocation(line: 370, column: 10, scope: !7044, inlinedAt: !6782)
!7230 = !DILocation(line: 370, column: 3, scope: !7044, inlinedAt: !6782)
!7231 = !DILocation(line: 372, column: 1, scope: !6728, inlinedAt: !6782)
!7232 = !DILocation(line: 1039, column: 7, scope: !6783)
!7233 = !DILocation(line: 1038, column: 5, scope: !6783)
!7234 = !DILocation(line: 1038, column: 11, scope: !6783)
!7235 = !DILocation(line: 1038, column: 22, scope: !6783)
!7236 = !DILocation(line: 1038, column: 30, scope: !6783)
!7237 = !DILocation(line: 1040, column: 32, scope: !6783)
!7238 = !DILocation(line: 1040, column: 37, scope: !6783)
!7239 = !DILocation(line: 1040, column: 43, scope: !6783)
!7240 = !DILocation(line: 1040, column: 5, scope: !6783)
!7241 = !DILocation(line: 1041, column: 13, scope: !6783)
!7242 = !DILocation(line: 1041, column: 22, scope: !6783)
!7243 = !DILocation(line: 1041, column: 28, scope: !6783)
!7244 = !DILocation(line: 1041, column: 5, scope: !6783)
!7245 = !DILocation(line: 1043, column: 28, scope: !6783)
!7246 = !DILocation(line: 1043, column: 16, scope: !6783)
!7247 = !DILocation(line: 1043, column: 35, scope: !6783)
!7248 = !DILocation(line: 1044, column: 7, scope: !6783)
!7249 = !DILocation(line: 1044, column: 13, scope: !6783)
!7250 = !DILocation(line: 1044, column: 24, scope: !6783)
!7251 = !DILocation(line: 1043, column: 5, scope: !6783)
!7252 = !DILocation(line: 1045, column: 4, scope: !6783)
!7253 = !DILocation(line: 1048, column: 3, scope: !6785)
!7254 = !DILocation(line: 1048, column: 15, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !6786, file: !6489, line: 1048, column: 14)
!7256 = !DILocation(line: 1048, column: 14, scope: !6786)
!7257 = !DILocation(line: 1052, column: 3, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7255, file: !6489, line: 1048, column: 65)
!7259 = !DILocation(line: 1052, column: 23, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7255, file: !6489, line: 1052, column: 14)
!7261 = !DILocation(line: 1052, column: 32, scope: !7260)
!7262 = !DILocation(line: 1052, column: 38, scope: !7260)
!7263 = !DILocation(line: 1052, column: 14, scope: !7260)
!7264 = !DILocation(line: 1052, column: 14, scope: !7255)
!7265 = !DILocation(line: 1053, column: 14, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7260, file: !6489, line: 1052, column: 55)
!7267 = !DILocation(line: 1053, column: 23, scope: !7266)
!7268 = !DILocation(line: 1053, column: 29, scope: !7266)
!7269 = !DILocation(line: 1053, column: 4, scope: !7266)
!7270 = !DILocation(line: 1054, column: 12, scope: !7266)
!7271 = !DILocation(line: 1054, column: 21, scope: !7266)
!7272 = !DILocation(line: 1054, column: 27, scope: !7266)
!7273 = !DILocation(line: 1054, column: 4, scope: !7266)
!7274 = !DILocation(line: 1055, column: 4, scope: !7266)
!7275 = !DILocation(line: 1055, column: 10, scope: !7266)
!7276 = !DILocation(line: 1055, column: 21, scope: !7266)
!7277 = !DILocation(line: 1055, column: 29, scope: !7266)
!7278 = !DILocation(line: 1056, column: 29, scope: !7266)
!7279 = !DILocation(line: 1056, column: 34, scope: !7266)
!7280 = !DILocation(line: 1056, column: 40, scope: !7266)
!7281 = !DILocation(line: 1056, column: 4, scope: !7266)
!7282 = !DILocation(line: 1059, column: 9, scope: !7266)
!7283 = !DILocation(line: 1060, column: 16, scope: !7266)
!7284 = !DILocation(line: 1060, column: 22, scope: !7266)
!7285 = !DILocation(line: 1060, column: 28, scope: !7266)
!7286 = !DILocation(line: 1060, column: 4, scope: !7266)
!7287 = !DILocation(line: 1061, column: 14, scope: !7266)
!7288 = !DILocation(line: 1061, column: 23, scope: !7266)
!7289 = !DILocation(line: 1061, column: 29, scope: !7266)
!7290 = !DILocation(line: 1061, column: 4, scope: !7266)
!7291 = !DILocation(line: 1062, column: 28, scope: !7266)
!7292 = !DILocation(line: 1062, column: 34, scope: !7266)
!7293 = !DILocation(line: 1062, column: 13, scope: !7266)
!7294 = !DILocation(line: 1062, column: 11, scope: !7266)
!7295 = !DILocation(line: 1064, column: 8, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7266, file: !6489, line: 1064, column: 8)
!7297 = !DILocation(line: 1064, column: 15, scope: !7296)
!7298 = !DILocation(line: 1064, column: 8, scope: !7266)
!7299 = !DILocation(line: 1065, column: 5, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7296, file: !6489, line: 1064, column: 21)
!7301 = !DILocation(line: 1067, column: 5, scope: !7300)
!7302 = !DILocation(line: 1069, column: 22, scope: !7266)
!7303 = !DILocation(line: 1069, column: 28, scope: !7266)
!7304 = !DILocation(line: 1069, column: 11, scope: !7266)
!7305 = !DILocation(line: 1069, column: 9, scope: !7266)
!7306 = !DILocation(line: 1072, column: 3, scope: !7266)
!7307 = !DILocation(line: 1073, column: 11, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7260, file: !6489, line: 1072, column: 10)
!7309 = !DILocation(line: 1074, column: 4, scope: !7308)
!7310 = !DILocation(line: 1074, column: 10, scope: !7308)
!7311 = !DILocation(line: 1074, column: 22, scope: !7308)
!7312 = !DILocation(line: 1074, column: 30, scope: !7308)
!7313 = !DILocation(line: 1077, column: 16, scope: !7308)
!7314 = !DILocation(line: 1077, column: 22, scope: !7308)
!7315 = !DILocation(line: 1077, column: 27, scope: !7308)
!7316 = !DILocation(line: 1078, column: 6, scope: !7308)
!7317 = !DILocation(line: 1077, column: 4, scope: !7308)
!7318 = !DILocation(line: 1082, column: 28, scope: !7308)
!7319 = !DILocation(line: 1082, column: 34, scope: !7308)
!7320 = !DILocation(line: 1082, column: 13, scope: !7308)
!7321 = !DILocation(line: 1082, column: 11, scope: !7308)
!7322 = !DILocation(line: 1084, column: 8, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7308, file: !6489, line: 1084, column: 8)
!7324 = !DILocation(line: 1084, column: 15, scope: !7323)
!7325 = !DILocation(line: 1084, column: 8, scope: !7308)
!7326 = !DILocation(line: 1085, column: 5, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7323, file: !6489, line: 1084, column: 21)
!7328 = !DILocation(line: 1087, column: 5, scope: !7327)
!7329 = !DILocation(line: 1091, column: 33, scope: !7308)
!7330 = !DILocation(line: 1091, column: 39, scope: !7308)
!7331 = !DILocation(line: 1091, column: 47, scope: !7308)
!7332 = !DILocation(line: 1092, column: 17, scope: !7308)
!7333 = !DILocation(line: 1092, column: 23, scope: !7308)
!7334 = !DILocation(line: 1092, column: 6, scope: !7308)
!7335 = !DILocation(line: 1091, column: 11, scope: !7308)
!7336 = !DILocation(line: 1091, column: 9, scope: !7308)
!7337 = !DILocation(line: 1096, column: 8, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1096, column: 7)
!7339 = !DILocation(line: 1096, column: 13, scope: !7338)
!7340 = !DILocation(line: 1096, column: 29, scope: !7338)
!7341 = !DILocation(line: 1097, column: 14, scope: !7338)
!7342 = !DILocation(line: 1097, column: 23, scope: !7338)
!7343 = !DILocation(line: 1097, column: 29, scope: !7338)
!7344 = !DILocation(line: 1097, column: 5, scope: !7338)
!7345 = !DILocation(line: 1096, column: 7, scope: !6708)
!7346 = !DILocation(line: 1098, column: 9, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7338, file: !6489, line: 1097, column: 47)
!7348 = !DILocation(line: 1099, column: 9, scope: !7347)
!7349 = !DILocation(line: 1100, column: 16, scope: !7347)
!7350 = !DILocation(line: 1100, column: 22, scope: !7347)
!7351 = !DILocation(line: 1100, column: 28, scope: !7347)
!7352 = !DILocation(line: 1100, column: 4, scope: !7347)
!7353 = !DILocation(line: 1102, column: 22, scope: !7347)
!7354 = !DILocation(line: 1102, column: 28, scope: !7347)
!7355 = !DILocation(line: 1102, column: 11, scope: !7347)
!7356 = !DILocation(line: 1102, column: 9, scope: !7347)
!7357 = !DILocation(line: 1103, column: 3, scope: !7347)
!7358 = !DILocation(line: 1111, column: 7, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1111, column: 7)
!7360 = !DILocation(line: 1111, column: 12, scope: !7359)
!7361 = !DILocation(line: 1111, column: 7, scope: !6708)
!7362 = !DILocation(line: 1112, column: 11, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7359, file: !6489, line: 1111, column: 28)
!7364 = !DILocation(line: 1114, column: 8, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7363, file: !6489, line: 1114, column: 8)
!7366 = !DILocation(line: 1114, column: 14, scope: !7365)
!7367 = !DILocation(line: 1114, column: 8, scope: !7363)
!7368 = !DILocation(line: 1115, column: 24, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7365, file: !6489, line: 1114, column: 26)
!7370 = !DILocation(line: 1115, column: 30, scope: !7369)
!7371 = !DILocation(line: 1115, column: 13, scope: !7369)
!7372 = !DILocation(line: 1115, column: 11, scope: !7369)
!7373 = !DILocation(line: 1116, column: 12, scope: !7369)
!7374 = !DILocation(line: 1117, column: 4, scope: !7369)
!7375 = !DILocation(line: 1118, column: 12, scope: !7365)
!7376 = !DILocation(line: 1119, column: 3, scope: !7363)
!7377 = !DILocation(line: 1120, column: 7, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1120, column: 7)
!7379 = !DILocation(line: 1120, column: 12, scope: !7378)
!7380 = !DILocation(line: 1120, column: 7, scope: !6708)
!7381 = !DILocation(line: 1121, column: 11, scope: !7378)
!7382 = !DILocation(line: 1121, column: 4, scope: !7378)
!7383 = !DILocation(line: 1124, column: 7, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1124, column: 7)
!7385 = !DILocation(line: 1124, column: 12, scope: !7384)
!7386 = !DILocation(line: 1124, column: 7, scope: !6708)
!7387 = !DILocation(line: 1125, column: 11, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7384, file: !6489, line: 1124, column: 42)
!7389 = !DILocation(line: 1126, column: 3, scope: !7388)
!7390 = !DILocation(line: 1126, column: 23, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7384, file: !6489, line: 1126, column: 14)
!7392 = !DILocation(line: 1126, column: 32, scope: !7391)
!7393 = !DILocation(line: 1126, column: 38, scope: !7391)
!7394 = !DILocation(line: 1126, column: 14, scope: !7391)
!7395 = !DILocation(line: 1126, column: 14, scope: !7384)
!7396 = !DILocation(line: 1127, column: 14, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7391, file: !6489, line: 1126, column: 56)
!7398 = !DILocation(line: 1127, column: 23, scope: !7397)
!7399 = !DILocation(line: 1127, column: 29, scope: !7397)
!7400 = !DILocation(line: 1127, column: 4, scope: !7397)
!7401 = !DILocation(line: 1128, column: 14, scope: !7397)
!7402 = !DILocation(line: 1128, column: 23, scope: !7397)
!7403 = !DILocation(line: 1128, column: 29, scope: !7397)
!7404 = !DILocation(line: 1128, column: 4, scope: !7397)
!7405 = !DILocation(line: 1129, column: 4, scope: !7397)
!7406 = !DILocation(line: 1129, column: 10, scope: !7397)
!7407 = !DILocation(line: 1129, column: 21, scope: !7397)
!7408 = !DILocation(line: 1129, column: 29, scope: !7397)
!7409 = !DILocation(line: 1130, column: 8, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7397, file: !6489, line: 1130, column: 8)
!7411 = !DILocation(line: 1130, column: 13, scope: !7410)
!7412 = !DILocation(line: 1130, column: 8, scope: !7397)
!7413 = !DILocation(line: 1131, column: 13, scope: !7410)
!7414 = !DILocation(line: 1131, column: 22, scope: !7410)
!7415 = !DILocation(line: 1131, column: 28, scope: !7410)
!7416 = !DILocation(line: 1131, column: 5, scope: !7410)
!7417 = !DILocation(line: 1132, column: 29, scope: !7397)
!7418 = !DILocation(line: 1132, column: 34, scope: !7397)
!7419 = !DILocation(line: 1132, column: 40, scope: !7397)
!7420 = !DILocation(line: 1132, column: 4, scope: !7397)
!7421 = !DILocation(line: 1133, column: 3, scope: !7397)
!7422 = !DILocation(line: 1135, column: 7, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1135, column: 7)
!7424 = !DILocation(line: 1135, column: 12, scope: !7423)
!7425 = !DILocation(line: 1135, column: 7, scope: !6708)
!7426 = !DILocation(line: 1136, column: 11, scope: !7423)
!7427 = !DILocation(line: 1136, column: 4, scope: !7423)
!7428 = !DILocation(line: 1137, column: 7, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1137, column: 7)
!7430 = !DILocation(line: 1137, column: 12, scope: !7429)
!7431 = !DILocation(line: 1137, column: 7, scope: !6708)
!7432 = !DILocation(line: 1138, column: 11, scope: !7429)
!7433 = !DILocation(line: 1138, column: 4, scope: !7429)
!7434 = !DILocation(line: 1139, column: 7, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1139, column: 7)
!7436 = !DILocation(line: 1139, column: 12, scope: !7435)
!7437 = !DILocation(line: 1139, column: 7, scope: !6708)
!7438 = !DILocation(line: 1140, column: 11, scope: !7435)
!7439 = !DILocation(line: 1140, column: 4, scope: !7435)
!7440 = !DILocation(line: 1141, column: 16, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1141, column: 7)
!7442 = !DILocation(line: 1141, column: 25, scope: !7441)
!7443 = !DILocation(line: 1141, column: 31, scope: !7441)
!7444 = !DILocation(line: 1141, column: 7, scope: !7441)
!7445 = !DILocation(line: 1141, column: 7, scope: !6708)
!7446 = !DILocation(line: 1142, column: 11, scope: !7441)
!7447 = !DILocation(line: 1142, column: 4, scope: !7441)
!7448 = !DILocation(line: 1144, column: 7, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1144, column: 7)
!7450 = !DILocation(line: 1144, column: 14, scope: !7449)
!7451 = !DILocation(line: 1144, column: 7, scope: !6708)
!7452 = !DILocation(line: 1145, column: 13, scope: !7449)
!7453 = !DILocation(line: 1145, column: 32, scope: !7449)
!7454 = !DILocation(line: 1145, column: 39, scope: !7449)
!7455 = !DILocation(line: 1145, column: 44, scope: !7449)
!7456 = !DILocation(line: 1145, column: 4, scope: !7449)
!7457 = !DILocation(line: 1146, column: 22, scope: !6708)
!7458 = !DILocation(line: 1146, column: 30, scope: !6708)
!7459 = !DILocation(line: 45, column: 19, scope: !6773, inlinedAt: !6778)
!7460 = !DILocation(line: 45, column: 14, scope: !6773, inlinedAt: !6778)
!7461 = !DILocation(line: 45, column: 4, scope: !6773, inlinedAt: !6778)
!7462 = !DILocation(line: 45, column: 17, scope: !6773, inlinedAt: !6778)
!7463 = !DILocation(line: 1147, column: 3, scope: !6708)
!7464 = !DILocation(line: 1149, column: 11, scope: !6708)
!7465 = !DILocation(line: 1149, column: 3, scope: !6708)
!7466 = !DILocation(line: 1153, column: 4, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1149, column: 19)
!7468 = !DILocation(line: 1155, column: 4, scope: !7467)
!7469 = !DILocation(line: 1157, column: 3, scope: !6708)
!7470 = !DILocation(line: 1159, column: 14, scope: !6708)
!7471 = !DILocation(line: 1159, column: 21, scope: !6708)
!7472 = !DILocation(line: 1159, column: 12, scope: !6708)
!7473 = !DILocation(line: 1160, column: 10, scope: !6708)
!7474 = !DILocation(line: 1161, column: 7, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1161, column: 7)
!7476 = !DILocation(line: 1161, column: 7, scope: !6708)
!7477 = !DILocation(line: 1164, column: 8, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7479, file: !6489, line: 1164, column: 8)
!7479 = distinct !DILexicalBlock(scope: !7475, file: !6489, line: 1161, column: 30)
!7480 = !DILocation(line: 1164, column: 18, scope: !7478)
!7481 = !DILocation(line: 1164, column: 15, scope: !7478)
!7482 = !DILocation(line: 1164, column: 51, scope: !7478)
!7483 = !DILocation(line: 1165, column: 16, scope: !7478)
!7484 = !DILocation(line: 1165, column: 22, scope: !7478)
!7485 = !DILocation(line: 1165, column: 29, scope: !7478)
!7486 = !DILocation(line: 1165, column: 15, scope: !7478)
!7487 = !DILocation(line: 1165, column: 9, scope: !7478)
!7488 = !DILocation(line: 1165, column: 38, scope: !7478)
!7489 = !DILocation(line: 1164, column: 8, scope: !7479)
!7490 = !DILocation(line: 1166, column: 12, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7478, file: !6489, line: 1165, column: 55)
!7492 = !DILocation(line: 1167, column: 5, scope: !7491)
!7493 = !DILocation(line: 1169, column: 3, scope: !7479)
!7494 = !DILocation(line: 1170, column: 8, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1170, column: 7)
!7496 = !DILocation(line: 1170, column: 15, scope: !7495)
!7497 = !DILocation(line: 1170, column: 18, scope: !7495)
!7498 = !DILocation(line: 1170, column: 27, scope: !7495)
!7499 = !DILocation(line: 1170, column: 25, scope: !7495)
!7500 = !DILocation(line: 1170, column: 7, scope: !6708)
!7501 = !DILocation(line: 1171, column: 4, scope: !7495)
!7502 = !DILocation(line: 1172, column: 9, scope: !6708)
!7503 = !DILocation(line: 1173, column: 21, scope: !6708)
!7504 = !DILocation(line: 1173, column: 27, scope: !6708)
!7505 = !DILocation(line: 1173, column: 10, scope: !6708)
!7506 = !DILocation(line: 1173, column: 8, scope: !6708)
!7507 = !DILocation(line: 1174, column: 7, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !6708, file: !6489, line: 1174, column: 7)
!7509 = !DILocation(line: 1174, column: 12, scope: !7508)
!7510 = !DILocation(line: 1174, column: 7, scope: !6708)
!7511 = !DILocation(line: 1175, column: 4, scope: !7508)
!7512 = !DILocation(line: 1177, column: 8, scope: !6708)
!7513 = !DILocation(line: 1178, column: 11, scope: !6708)
!7514 = !DILocation(line: 1178, column: 3, scope: !6708)
!7515 = !DILocation(line: 1180, column: 8, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !6707, file: !6489, line: 1180, column: 8)
!7517 = !DILocation(line: 1180, column: 14, scope: !7516)
!7518 = !DILocation(line: 1180, column: 8, scope: !6707)
!7519 = !DILocation(line: 1181, column: 5, scope: !7516)
!7520 = !DILocation(line: 1182, column: 9, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !6707, file: !6489, line: 1182, column: 8)
!7522 = !DILocation(line: 1182, column: 14, scope: !7521)
!7523 = !DILocation(line: 1182, column: 25, scope: !7521)
!7524 = !DILocation(line: 1183, column: 6, scope: !7521)
!7525 = !DILocation(line: 1183, column: 10, scope: !7521)
!7526 = !DILocation(line: 1183, column: 15, scope: !7521)
!7527 = !DILocation(line: 1183, column: 29, scope: !7521)
!7528 = !DILocation(line: 1182, column: 8, scope: !6707)
!7529 = !DILocation(line: 1184, column: 5, scope: !7521)
!7530 = !DILocation(line: 1190, column: 9, scope: !6707)
!7531 = !DILocation(line: 1191, column: 9, scope: !6707)
!7532 = !DILocation(line: 1192, column: 16, scope: !6707)
!7533 = !DILocation(line: 1192, column: 22, scope: !6707)
!7534 = !DILocation(line: 1192, column: 27, scope: !6707)
!7535 = !DILocation(line: 1192, column: 43, scope: !6707)
!7536 = !DILocation(line: 1192, column: 4, scope: !6707)
!7537 = !DILocation(line: 1193, column: 8, scope: !6768)
!7538 = !DILocation(line: 1193, column: 14, scope: !6768)
!7539 = !DILocation(line: 1193, column: 8, scope: !6707)
!7540 = !DILocation(line: 1194, column: 29, scope: !6767)
!7541 = !DILocation(line: 1194, column: 35, scope: !6767)
!7542 = !DILocation(line: 1194, column: 41, scope: !6767)
!7543 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !6770)
!7544 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !6770)
!7545 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !6770)
!7546 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !6770)
!7547 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !6770)
!7548 = !DILocation(line: 1195, column: 5, scope: !6767)
!7549 = !DILocation(line: 1196, column: 5, scope: !6767)
!7550 = !DILocation(line: 1196, column: 5, scope: !6766)
!7551 = !DILocalVariable(name: "__dummy", scope: !7552, file: !6489, line: 1196, type: !465)
!7552 = distinct !DILexicalBlock(scope: !6765, file: !6489, line: 1196, column: 5)
!7553 = !DILocation(line: 1196, column: 5, scope: !7552)
!7554 = !DILocalVariable(name: "__dummy2", scope: !7552, file: !6489, line: 1196, type: !465)
!7555 = !DILocation(line: 1196, column: 5, scope: !6765)
!7556 = !DILocation(line: 1196, column: 5, scope: !6764)
!7557 = !DILocation(line: 1196, column: 5, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !6764, file: !6489, line: 1196, column: 5)
!7559 = !DILocalVariable(name: "__dummy", scope: !7560, file: !6489, line: 1196, type: !465)
!7560 = distinct !DILexicalBlock(scope: !7561, file: !6489, line: 1196, column: 5)
!7561 = distinct !DILexicalBlock(scope: !7558, file: !6489, line: 1196, column: 5)
!7562 = !DILocation(line: 1196, column: 5, scope: !7560)
!7563 = !DILocalVariable(name: "__dummy2", scope: !7560, file: !6489, line: 1196, type: !465)
!7564 = !DILocation(line: 1196, column: 5, scope: !7561)
!7565 = !DILocation(line: 1196, column: 5, scope: !6763)
!7566 = !{i32 -2140012030}
!7567 = !DILocation(line: 1196, column: 5, scope: !6762)
!7568 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !6761)
!7569 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !6761)
!7570 = !DILocation(line: 1197, column: 24, scope: !6767)
!7571 = !DILocation(line: 1197, column: 30, scope: !6767)
!7572 = !DILocation(line: 1197, column: 13, scope: !6767)
!7573 = !DILocation(line: 1197, column: 11, scope: !6767)
!7574 = !DILocation(line: 1198, column: 17, scope: !6767)
!7575 = !DILocation(line: 1198, column: 23, scope: !6767)
!7576 = !DILocation(line: 1198, column: 29, scope: !6767)
!7577 = !DILocation(line: 1199, column: 6, scope: !6767)
!7578 = !DILocation(line: 1198, column: 5, scope: !6767)
!7579 = !DILocation(line: 1200, column: 24, scope: !6767)
!7580 = !DILocation(line: 1200, column: 30, scope: !6767)
!7581 = !DILocation(line: 1200, column: 13, scope: !6767)
!7582 = !DILocation(line: 1200, column: 11, scope: !6767)
!7583 = !DILocation(line: 1204, column: 4, scope: !6767)
!7584 = !DILocation(line: 1205, column: 8, scope: !6756)
!7585 = !DILocation(line: 1205, column: 8, scope: !6707)
!7586 = !DILocation(line: 1207, column: 29, scope: !6755)
!7587 = !DILocation(line: 1207, column: 35, scope: !6755)
!7588 = !DILocation(line: 1207, column: 41, scope: !6755)
!7589 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !6758)
!7590 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !6758)
!7591 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !6758)
!7592 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !6758)
!7593 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !6758)
!7594 = !DILocation(line: 1208, column: 5, scope: !6755)
!7595 = !DILocation(line: 1209, column: 5, scope: !6755)
!7596 = !DILocation(line: 1209, column: 5, scope: !6754)
!7597 = !DILocalVariable(name: "__dummy", scope: !7598, file: !6489, line: 1209, type: !465)
!7598 = distinct !DILexicalBlock(scope: !6753, file: !6489, line: 1209, column: 5)
!7599 = !DILocation(line: 1209, column: 5, scope: !7598)
!7600 = !DILocalVariable(name: "__dummy2", scope: !7598, file: !6489, line: 1209, type: !465)
!7601 = !DILocation(line: 1209, column: 5, scope: !6753)
!7602 = !DILocation(line: 1209, column: 5, scope: !6752)
!7603 = !DILocation(line: 1209, column: 5, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !6752, file: !6489, line: 1209, column: 5)
!7605 = !DILocalVariable(name: "__dummy", scope: !7606, file: !6489, line: 1209, type: !465)
!7606 = distinct !DILexicalBlock(scope: !7607, file: !6489, line: 1209, column: 5)
!7607 = distinct !DILexicalBlock(scope: !7604, file: !6489, line: 1209, column: 5)
!7608 = !DILocation(line: 1209, column: 5, scope: !7606)
!7609 = !DILocalVariable(name: "__dummy2", scope: !7606, file: !6489, line: 1209, type: !465)
!7610 = !DILocation(line: 1209, column: 5, scope: !7607)
!7611 = !DILocation(line: 1209, column: 5, scope: !6751)
!7612 = !{i32 -2140010529}
!7613 = !DILocation(line: 1209, column: 5, scope: !6750)
!7614 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !6749)
!7615 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !6749)
!7616 = !DILocation(line: 1210, column: 4, scope: !6755)
!7617 = !DILocation(line: 1211, column: 12, scope: !6707)
!7618 = !DILocation(line: 1211, column: 21, scope: !6707)
!7619 = !DILocation(line: 1211, column: 27, scope: !6707)
!7620 = !DILocation(line: 1211, column: 4, scope: !6707)
!7621 = !DILocation(line: 1212, column: 4, scope: !6707)
!7622 = !DILocation(line: 1214, column: 8, scope: !6744)
!7623 = !DILocation(line: 1214, column: 8, scope: !6707)
!7624 = !DILocation(line: 1215, column: 29, scope: !6743)
!7625 = !DILocation(line: 1215, column: 35, scope: !6743)
!7626 = !DILocation(line: 1215, column: 41, scope: !6743)
!7627 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !6746)
!7628 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !6746)
!7629 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !6746)
!7630 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !6746)
!7631 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !6746)
!7632 = !DILocation(line: 1216, column: 21, scope: !6743)
!7633 = !DILocation(line: 1216, column: 27, scope: !6743)
!7634 = !DILocation(line: 1216, column: 5, scope: !6743)
!7635 = !DILocation(line: 1217, column: 5, scope: !6743)
!7636 = !DILocation(line: 1217, column: 5, scope: !6742)
!7637 = !DILocalVariable(name: "__dummy", scope: !7638, file: !6489, line: 1217, type: !465)
!7638 = distinct !DILexicalBlock(scope: !6741, file: !6489, line: 1217, column: 5)
!7639 = !DILocation(line: 1217, column: 5, scope: !7638)
!7640 = !DILocalVariable(name: "__dummy2", scope: !7638, file: !6489, line: 1217, type: !465)
!7641 = !DILocation(line: 1217, column: 5, scope: !6741)
!7642 = !DILocation(line: 1217, column: 5, scope: !6740)
!7643 = !DILocation(line: 1217, column: 5, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !6740, file: !6489, line: 1217, column: 5)
!7645 = !DILocalVariable(name: "__dummy", scope: !7646, file: !6489, line: 1217, type: !465)
!7646 = distinct !DILexicalBlock(scope: !7647, file: !6489, line: 1217, column: 5)
!7647 = distinct !DILexicalBlock(scope: !7644, file: !6489, line: 1217, column: 5)
!7648 = !DILocation(line: 1217, column: 5, scope: !7646)
!7649 = !DILocalVariable(name: "__dummy2", scope: !7646, file: !6489, line: 1217, type: !465)
!7650 = !DILocation(line: 1217, column: 5, scope: !7647)
!7651 = !DILocation(line: 1217, column: 5, scope: !6739)
!7652 = !{i32 -2140009476}
!7653 = !DILocation(line: 1217, column: 5, scope: !6738)
!7654 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !6737)
!7655 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !6737)
!7656 = !DILocation(line: 1218, column: 4, scope: !6743)
!7657 = !DILocation(line: 1219, column: 4, scope: !6707)
!7658 = !DILocation(line: 1221, column: 8, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !6707, file: !6489, line: 1221, column: 8)
!7660 = !DILocation(line: 1221, column: 13, scope: !7659)
!7661 = !DILocation(line: 1221, column: 8, scope: !6707)
!7662 = !DILocation(line: 1222, column: 5, scope: !7659)
!7663 = !DILocation(line: 1227, column: 9, scope: !6735)
!7664 = !DILocation(line: 1227, column: 14, scope: !6735)
!7665 = !DILocation(line: 1227, column: 40, scope: !6735)
!7666 = !DILocation(line: 1229, column: 6, scope: !6735)
!7667 = !DILocation(line: 1229, column: 9, scope: !6735)
!7668 = !DILocation(line: 1227, column: 8, scope: !6707)
!7669 = !DILocation(line: 1233, column: 10, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !6735, file: !6489, line: 1229, column: 28)
!7671 = !DILocation(line: 1234, column: 4, scope: !7670)
!7672 = !DILocation(line: 1235, column: 10, scope: !6734)
!7673 = !DILocation(line: 1236, column: 10, scope: !6734)
!7674 = !DILocation(line: 1242, column: 33, scope: !6734)
!7675 = !DILocation(line: 365, column: 27, scope: !7031, inlinedAt: !6733)
!7676 = !DILocation(line: 365, column: 6, scope: !7031, inlinedAt: !6733)
!7677 = !DILocation(line: 365, column: 6, scope: !6728, inlinedAt: !6733)
!7678 = !DILocation(line: 366, column: 12, scope: !7035, inlinedAt: !6733)
!7679 = !DILocation(line: 366, column: 14, scope: !7035, inlinedAt: !6733)
!7680 = !DILocation(line: 366, column: 7, scope: !7036, inlinedAt: !6733)
!7681 = !DILocation(line: 367, column: 4, scope: !7035, inlinedAt: !6733)
!7682 = !DILocation(line: 368, column: 28, scope: !7036, inlinedAt: !6733)
!7683 = !DILocation(line: 368, column: 10, scope: !7036, inlinedAt: !6733)
!7684 = !DILocation(line: 368, column: 3, scope: !7036, inlinedAt: !6733)
!7685 = !DILocation(line: 370, column: 29, scope: !7044, inlinedAt: !6733)
!7686 = !DILocation(line: 370, column: 10, scope: !7044, inlinedAt: !6733)
!7687 = !DILocation(line: 370, column: 3, scope: !7044, inlinedAt: !6733)
!7688 = !DILocation(line: 372, column: 1, scope: !6728, inlinedAt: !6733)
!7689 = !DILocation(line: 1243, column: 7, scope: !6734)
!7690 = !DILocation(line: 1242, column: 5, scope: !6734)
!7691 = !DILocation(line: 1242, column: 11, scope: !6734)
!7692 = !DILocation(line: 1242, column: 23, scope: !6734)
!7693 = !DILocation(line: 1242, column: 31, scope: !6734)
!7694 = !DILocation(line: 1252, column: 16, scope: !6707)
!7695 = !DILocation(line: 1252, column: 22, scope: !6707)
!7696 = !DILocation(line: 1252, column: 28, scope: !6707)
!7697 = !DILocation(line: 1252, column: 4, scope: !6707)
!7698 = !DILocation(line: 1253, column: 4, scope: !6707)
!7699 = !DILocation(line: 1271, column: 9, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !6707, file: !6489, line: 1271, column: 8)
!7701 = !DILocation(line: 1271, column: 18, scope: !7700)
!7702 = !DILocation(line: 1271, column: 21, scope: !7700)
!7703 = !DILocation(line: 1271, column: 30, scope: !7700)
!7704 = !DILocation(line: 1271, column: 8, scope: !6707)
!7705 = !DILocation(line: 1272, column: 5, scope: !7700)
!7706 = !DILocation(line: 1273, column: 28, scope: !6707)
!7707 = !DILocation(line: 1273, column: 34, scope: !6707)
!7708 = !DILocation(line: 1273, column: 40, scope: !6707)
!7709 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !6725)
!7710 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !6725)
!7711 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !6725)
!7712 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !6725)
!7713 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !6725)
!7714 = !DILocation(line: 1274, column: 17, scope: !6707)
!7715 = !DILocation(line: 1274, column: 4, scope: !6707)
!7716 = !DILocation(line: 1275, column: 4, scope: !6707)
!7717 = !DILocation(line: 1275, column: 4, scope: !6723)
!7718 = !DILocalVariable(name: "__dummy", scope: !7719, file: !6489, line: 1275, type: !465)
!7719 = distinct !DILexicalBlock(scope: !6722, file: !6489, line: 1275, column: 4)
!7720 = !DILocation(line: 1275, column: 4, scope: !7719)
!7721 = !DILocalVariable(name: "__dummy2", scope: !7719, file: !6489, line: 1275, type: !465)
!7722 = !DILocation(line: 1275, column: 4, scope: !6722)
!7723 = !DILocation(line: 1275, column: 4, scope: !6721)
!7724 = !DILocation(line: 1275, column: 4, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !6721, file: !6489, line: 1275, column: 4)
!7726 = !DILocalVariable(name: "__dummy", scope: !7727, file: !6489, line: 1275, type: !465)
!7727 = distinct !DILexicalBlock(scope: !7728, file: !6489, line: 1275, column: 4)
!7728 = distinct !DILexicalBlock(scope: !7725, file: !6489, line: 1275, column: 4)
!7729 = !DILocation(line: 1275, column: 4, scope: !7727)
!7730 = !DILocalVariable(name: "__dummy2", scope: !7727, file: !6489, line: 1275, type: !465)
!7731 = !DILocation(line: 1275, column: 4, scope: !7728)
!7732 = !DILocation(line: 1275, column: 4, scope: !6720)
!7733 = !{i32 -2140008001}
!7734 = !DILocation(line: 1275, column: 4, scope: !6719)
!7735 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !6718)
!7736 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !6718)
!7737 = !DILocation(line: 1278, column: 4, scope: !6707)
!7738 = !DILocation(line: 1278, column: 16, scope: !6707)
!7739 = !DILocalVariable(name: "sreg", scope: !7740, file: !6489, line: 1279, type: !2542)
!7740 = distinct !DILexicalBlock(scope: !6707, file: !6489, line: 1278, column: 20)
!7741 = !DILocation(line: 1279, column: 18, scope: !7740)
!7742 = !DILocation(line: 1280, column: 8, scope: !7740)
!7743 = !DILocation(line: 1280, column: 14, scope: !7740)
!7744 = !DILocation(line: 1280, column: 20, scope: !7740)
!7745 = !DILocation(line: 1280, column: 32, scope: !7740)
!7746 = !DILocation(line: 1282, column: 23, scope: !7740)
!7747 = !DILocation(line: 1282, column: 29, scope: !7740)
!7748 = !DILocation(line: 1282, column: 12, scope: !7740)
!7749 = !DILocation(line: 1282, column: 35, scope: !7740)
!7750 = !DILocation(line: 1282, column: 10, scope: !7740)
!7751 = !DILocation(line: 1283, column: 9, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7740, file: !6489, line: 1283, column: 9)
!7753 = !DILocation(line: 1283, column: 14, scope: !7752)
!7754 = !DILocation(line: 1283, column: 9, scope: !7740)
!7755 = !DILocation(line: 1284, column: 18, scope: !7752)
!7756 = !DILocation(line: 1284, column: 24, scope: !7752)
!7757 = !DILocation(line: 1284, column: 29, scope: !7752)
!7758 = !DILocation(line: 1285, column: 8, scope: !7752)
!7759 = !DILocation(line: 1284, column: 6, scope: !7752)
!7760 = distinct !{!7760, !7737, !7761}
!7761 = !DILocation(line: 1286, column: 4, scope: !6707)
!7762 = !DILocation(line: 1288, column: 28, scope: !6707)
!7763 = !DILocation(line: 1288, column: 34, scope: !6707)
!7764 = !DILocation(line: 1288, column: 40, scope: !6707)
!7765 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !6714)
!7766 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !6714)
!7767 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !6714)
!7768 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !6714)
!7769 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !6714)
!7770 = !DILocation(line: 1289, column: 14, scope: !6707)
!7771 = !DILocation(line: 1289, column: 4, scope: !6707)
!7772 = !DILocation(line: 1290, column: 4, scope: !6707)
!7773 = !DILocation(line: 1290, column: 4, scope: !6706)
!7774 = !DILocalVariable(name: "__dummy", scope: !7775, file: !6489, line: 1290, type: !465)
!7775 = distinct !DILexicalBlock(scope: !6705, file: !6489, line: 1290, column: 4)
!7776 = !DILocation(line: 1290, column: 4, scope: !7775)
!7777 = !DILocalVariable(name: "__dummy2", scope: !7775, file: !6489, line: 1290, type: !465)
!7778 = !DILocation(line: 1290, column: 4, scope: !6705)
!7779 = !DILocation(line: 1290, column: 4, scope: !6704)
!7780 = !DILocation(line: 1290, column: 4, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !6704, file: !6489, line: 1290, column: 4)
!7782 = !DILocalVariable(name: "__dummy", scope: !7783, file: !6489, line: 1290, type: !465)
!7783 = distinct !DILexicalBlock(scope: !7784, file: !6489, line: 1290, column: 4)
!7784 = distinct !DILexicalBlock(scope: !7781, file: !6489, line: 1290, column: 4)
!7785 = !DILocation(line: 1290, column: 4, scope: !7783)
!7786 = !DILocalVariable(name: "__dummy2", scope: !7783, file: !6489, line: 1290, type: !465)
!7787 = !DILocation(line: 1290, column: 4, scope: !7784)
!7788 = !DILocation(line: 1290, column: 4, scope: !6703)
!7789 = !{i32 -2140006914}
!7790 = !DILocation(line: 1290, column: 4, scope: !6702)
!7791 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !6701)
!7792 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !6701)
!7793 = !DILocation(line: 1292, column: 22, scope: !6707)
!7794 = !DILocation(line: 1292, column: 28, scope: !6707)
!7795 = !DILocation(line: 1292, column: 11, scope: !6707)
!7796 = !DILocation(line: 1292, column: 9, scope: !6707)
!7797 = !DILocation(line: 1293, column: 12, scope: !6707)
!7798 = !DILocation(line: 1293, column: 21, scope: !6707)
!7799 = !DILocation(line: 1293, column: 9, scope: !6707)
!7800 = !DILocation(line: 1294, column: 16, scope: !6707)
!7801 = !DILocation(line: 1294, column: 22, scope: !6707)
!7802 = !DILocation(line: 1294, column: 28, scope: !6707)
!7803 = !DILocation(line: 1294, column: 4, scope: !6707)
!7804 = !DILocation(line: 1295, column: 4, scope: !6707)
!7805 = !DILocation(line: 1298, column: 4, scope: !6707)
!7806 = !DILocation(line: 1300, column: 14, scope: !6708)
!7807 = !DILocation(line: 1300, column: 21, scope: !6708)
!7808 = !DILocation(line: 1300, column: 27, scope: !6708)
!7809 = !DILocation(line: 1300, column: 33, scope: !6708)
!7810 = !DILocation(line: 1300, column: 3, scope: !6708)
!7811 = !DILocation(line: 1301, column: 3, scope: !6708)
!7812 = !DILabel(scope: !6708, name: "error", file: !6489, line: 1304)
!7813 = !DILocation(line: 1304, column: 1, scope: !6708)
!7814 = !DILocation(line: 1306, column: 10, scope: !6708)
!7815 = !DILocation(line: 1307, column: 2, scope: !6708)
!7816 = !DILabel(scope: !6694, name: "error_exit", file: !6489, line: 1308)
!7817 = !DILocation(line: 1308, column: 1, scope: !6694)
!7818 = !DILocation(line: 1309, column: 27, scope: !6694)
!7819 = !DILocation(line: 1309, column: 33, scope: !6694)
!7820 = !DILocation(line: 1309, column: 39, scope: !6694)
!7821 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !6829)
!7822 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !6829)
!7823 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !6829)
!7824 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !6829)
!7825 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !6829)
!7826 = !DILocation(line: 1310, column: 9, scope: !6694)
!7827 = !DILocation(line: 1310, column: 2, scope: !6694)
!7828 = distinct !DISubprogram(name: "hcd_to_ehci", scope: !6, file: !6, line: 262, type: !7829, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!7829 = !DISubroutineType(types: !7830)
!7830 = !{!5814, !342}
!7831 = !DILocalVariable(name: "hcd", arg: 1, scope: !7828, file: !6, line: 262, type: !342)
!7832 = !DILocation(line: 262, column: 60, scope: !7828)
!7833 = !DILocation(line: 264, column: 30, scope: !7828)
!7834 = !DILocation(line: 264, column: 35, scope: !7828)
!7835 = !DILocation(line: 264, column: 29, scope: !7828)
!7836 = !DILocation(line: 264, column: 9, scope: !7828)
!7837 = !DILocation(line: 264, column: 2, scope: !7828)
!7838 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !7839, file: !7839, line: 666, type: !7840, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!7839 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!7840 = !DISubroutineType(types: !7841)
!7841 = !{!465}
!7842 = !DILocalVariable(name: "f", scope: !7838, file: !7839, line: 668, type: !465)
!7843 = !DILocation(line: 668, column: 16, scope: !7838)
!7844 = !DILocation(line: 670, column: 6, scope: !7838)
!7845 = !DILocation(line: 670, column: 4, scope: !7838)
!7846 = !DILocation(line: 671, column: 2, scope: !7838)
!7847 = !DILocation(line: 672, column: 9, scope: !7838)
!7848 = !DILocation(line: 672, column: 2, scope: !7838)
!7849 = distinct !DISubprogram(name: "set_bit", scope: !7850, file: !7850, line: 26, type: !7851, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!7850 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7851 = !DISubroutineType(types: !7852)
!7852 = !{null, !340, !7853}
!7853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7854, size: 64)
!7854 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !465)
!7855 = !DILocalVariable(name: "nr", arg: 1, scope: !7856, file: !7857, line: 52, type: !340)
!7856 = distinct !DISubprogram(name: "arch_set_bit", scope: !7857, file: !7857, line: 52, type: !7851, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!7857 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7858 = !DILocation(line: 52, column: 19, scope: !7856, inlinedAt: !7859)
!7859 = distinct !DILocation(line: 29, column: 2, scope: !7849)
!7860 = !DILocalVariable(name: "addr", arg: 2, scope: !7856, file: !7857, line: 52, type: !7853)
!7861 = !DILocation(line: 52, column: 47, scope: !7856, inlinedAt: !7859)
!7862 = !DILocalVariable(name: "v", arg: 1, scope: !7863, file: !7864, line: 84, type: !7867)
!7863 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !7864, file: !7864, line: 84, type: !7865, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!7864 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!7865 = !DISubroutineType(types: !7866)
!7866 = !{null, !7867, !462}
!7867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7868, size: 64)
!7868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7869)
!7869 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!7870 = !DILocation(line: 84, column: 74, scope: !7863, inlinedAt: !7871)
!7871 = distinct !DILocation(line: 28, column: 2, scope: !7849)
!7872 = !DILocalVariable(name: "size", arg: 2, scope: !7863, file: !7864, line: 84, type: !462)
!7873 = !DILocation(line: 84, column: 84, scope: !7863, inlinedAt: !7871)
!7874 = !DILocalVariable(name: "nr", arg: 1, scope: !7849, file: !7850, line: 26, type: !340)
!7875 = !DILocation(line: 26, column: 33, scope: !7849)
!7876 = !DILocalVariable(name: "addr", arg: 2, scope: !7849, file: !7850, line: 26, type: !7853)
!7877 = !DILocation(line: 26, column: 61, scope: !7849)
!7878 = !DILocation(line: 28, column: 26, scope: !7849)
!7879 = !DILocation(line: 28, column: 33, scope: !7849)
!7880 = !DILocation(line: 28, column: 31, scope: !7849)
!7881 = !DILocation(line: 86, column: 20, scope: !7863, inlinedAt: !7871)
!7882 = !DILocation(line: 86, column: 23, scope: !7863, inlinedAt: !7871)
!7883 = !DILocation(line: 86, column: 2, scope: !7863, inlinedAt: !7871)
!7884 = !DILocation(line: 87, column: 2, scope: !7863, inlinedAt: !7871)
!7885 = !DILocation(line: 29, column: 15, scope: !7849)
!7886 = !DILocation(line: 29, column: 19, scope: !7849)
!7887 = !DILocation(line: 54, column: 27, scope: !7888, inlinedAt: !7859)
!7888 = distinct !DILexicalBlock(scope: !7856, file: !7857, line: 54, column: 6)
!7889 = !DILocation(line: 54, column: 6, scope: !7888, inlinedAt: !7859)
!7890 = !DILocation(line: 54, column: 6, scope: !7856, inlinedAt: !7859)
!7891 = !DILocation(line: 56, column: 6, scope: !7892, inlinedAt: !7859)
!7892 = distinct !DILexicalBlock(scope: !7888, file: !7857, line: 54, column: 32)
!7893 = !DILocation(line: 57, column: 12, scope: !7892, inlinedAt: !7859)
!7894 = !DILocation(line: 55, column: 3, scope: !7892, inlinedAt: !7859)
!7895 = !{i32 -2147116943}
!7896 = !DILocation(line: 59, column: 2, scope: !7892, inlinedAt: !7859)
!7897 = !DILocation(line: 61, column: 8, scope: !7898, inlinedAt: !7859)
!7898 = distinct !DILexicalBlock(scope: !7888, file: !7857, line: 59, column: 9)
!7899 = !DILocation(line: 61, column: 32, scope: !7898, inlinedAt: !7859)
!7900 = !DILocation(line: 60, column: 3, scope: !7898, inlinedAt: !7859)
!7901 = !{i32 -2147116811}
!7902 = !DILocation(line: 30, column: 1, scope: !7849)
!7903 = distinct !DISubprogram(name: "clear_bit", scope: !7850, file: !7850, line: 39, type: !7851, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!7904 = !DILocalVariable(name: "nr", arg: 1, scope: !7905, file: !7857, line: 72, type: !340)
!7905 = distinct !DISubprogram(name: "arch_clear_bit", scope: !7857, file: !7857, line: 72, type: !7851, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!7906 = !DILocation(line: 72, column: 21, scope: !7905, inlinedAt: !7907)
!7907 = distinct !DILocation(line: 42, column: 2, scope: !7903)
!7908 = !DILocalVariable(name: "addr", arg: 2, scope: !7905, file: !7857, line: 72, type: !7853)
!7909 = !DILocation(line: 72, column: 49, scope: !7905, inlinedAt: !7907)
!7910 = !DILocation(line: 84, column: 74, scope: !7863, inlinedAt: !7911)
!7911 = distinct !DILocation(line: 41, column: 2, scope: !7903)
!7912 = !DILocation(line: 84, column: 84, scope: !7863, inlinedAt: !7911)
!7913 = !DILocalVariable(name: "nr", arg: 1, scope: !7903, file: !7850, line: 39, type: !340)
!7914 = !DILocation(line: 39, column: 35, scope: !7903)
!7915 = !DILocalVariable(name: "addr", arg: 2, scope: !7903, file: !7850, line: 39, type: !7853)
!7916 = !DILocation(line: 39, column: 63, scope: !7903)
!7917 = !DILocation(line: 41, column: 26, scope: !7903)
!7918 = !DILocation(line: 41, column: 33, scope: !7903)
!7919 = !DILocation(line: 41, column: 31, scope: !7903)
!7920 = !DILocation(line: 86, column: 20, scope: !7863, inlinedAt: !7911)
!7921 = !DILocation(line: 86, column: 23, scope: !7863, inlinedAt: !7911)
!7922 = !DILocation(line: 86, column: 2, scope: !7863, inlinedAt: !7911)
!7923 = !DILocation(line: 87, column: 2, scope: !7863, inlinedAt: !7911)
!7924 = !DILocation(line: 42, column: 17, scope: !7903)
!7925 = !DILocation(line: 42, column: 21, scope: !7903)
!7926 = !DILocation(line: 74, column: 27, scope: !7927, inlinedAt: !7907)
!7927 = distinct !DILexicalBlock(scope: !7905, file: !7857, line: 74, column: 6)
!7928 = !DILocation(line: 74, column: 6, scope: !7927, inlinedAt: !7907)
!7929 = !DILocation(line: 74, column: 6, scope: !7905, inlinedAt: !7907)
!7930 = !DILocation(line: 76, column: 6, scope: !7931, inlinedAt: !7907)
!7931 = distinct !DILexicalBlock(scope: !7927, file: !7857, line: 74, column: 32)
!7932 = !DILocation(line: 77, column: 13, scope: !7931, inlinedAt: !7907)
!7933 = !DILocation(line: 77, column: 12, scope: !7931, inlinedAt: !7907)
!7934 = !DILocation(line: 75, column: 3, scope: !7931, inlinedAt: !7907)
!7935 = !{i32 -2147115989}
!7936 = !DILocation(line: 78, column: 2, scope: !7931, inlinedAt: !7907)
!7937 = !DILocation(line: 80, column: 8, scope: !7938, inlinedAt: !7907)
!7938 = distinct !DILexicalBlock(scope: !7927, file: !7857, line: 78, column: 9)
!7939 = !DILocation(line: 80, column: 32, scope: !7938, inlinedAt: !7907)
!7940 = !DILocation(line: 79, column: 3, scope: !7938, inlinedAt: !7907)
!7941 = !{i32 -2147115857}
!7942 = !DILocation(line: 43, column: 1, scope: !7903)
!7943 = distinct !DISubprogram(name: "ehci_port_power", scope: !6489, file: !6489, line: 1334, type: !7944, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!7944 = !DISubroutineType(types: !7945)
!7945 = !{!401, !5814, !401, !626}
!7946 = !DILocalVariable(name: "ehci", arg: 1, scope: !7943, file: !6489, line: 1334, type: !5814)
!7947 = !DILocation(line: 1334, column: 45, scope: !7943)
!7948 = !DILocalVariable(name: "portnum", arg: 2, scope: !7943, file: !6489, line: 1334, type: !401)
!7949 = !DILocation(line: 1334, column: 55, scope: !7943)
!7950 = !DILocalVariable(name: "enable", arg: 3, scope: !7943, file: !6489, line: 1334, type: !626)
!7951 = !DILocation(line: 1334, column: 69, scope: !7943)
!7952 = !DILocalVariable(name: "hcd", scope: !7943, file: !6489, line: 1336, type: !342)
!7953 = !DILocation(line: 1336, column: 18, scope: !7943)
!7954 = !DILocation(line: 1336, column: 36, scope: !7943)
!7955 = !DILocation(line: 1336, column: 24, scope: !7943)
!7956 = !DILocalVariable(name: "status_reg", scope: !7943, file: !6489, line: 1337, type: !2542)
!7957 = !DILocation(line: 1337, column: 15, scope: !7943)
!7958 = !DILocation(line: 1337, column: 29, scope: !7943)
!7959 = !DILocation(line: 1337, column: 35, scope: !7943)
!7960 = !DILocation(line: 1337, column: 41, scope: !7943)
!7961 = !DILocation(line: 1337, column: 53, scope: !7943)
!7962 = !DILocalVariable(name: "temp", scope: !7943, file: !6489, line: 1338, type: !303)
!7963 = !DILocation(line: 1338, column: 6, scope: !7943)
!7964 = !DILocation(line: 1338, column: 24, scope: !7943)
!7965 = !DILocation(line: 1338, column: 30, scope: !7943)
!7966 = !DILocation(line: 1338, column: 13, scope: !7943)
!7967 = !DILocation(line: 1338, column: 42, scope: !7943)
!7968 = !DILocation(line: 1340, column: 6, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7943, file: !6489, line: 1340, column: 6)
!7970 = !DILocation(line: 1340, column: 6, scope: !7943)
!7971 = !DILocation(line: 1341, column: 15, scope: !7969)
!7972 = !DILocation(line: 1341, column: 21, scope: !7969)
!7973 = !DILocation(line: 1341, column: 26, scope: !7969)
!7974 = !DILocation(line: 1341, column: 40, scope: !7969)
!7975 = !DILocation(line: 1341, column: 3, scope: !7969)
!7976 = !DILocation(line: 1343, column: 15, scope: !7969)
!7977 = !DILocation(line: 1343, column: 21, scope: !7969)
!7978 = !DILocation(line: 1343, column: 26, scope: !7969)
!7979 = !DILocation(line: 1343, column: 41, scope: !7969)
!7980 = !DILocation(line: 1343, column: 3, scope: !7969)
!7981 = !DILocation(line: 1345, column: 6, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7943, file: !6489, line: 1345, column: 6)
!7983 = !DILocation(line: 1345, column: 11, scope: !7982)
!7984 = !DILocation(line: 1345, column: 19, scope: !7982)
!7985 = !DILocation(line: 1345, column: 6, scope: !7943)
!7986 = !DILocation(line: 1346, column: 3, scope: !7982)
!7987 = !DILocation(line: 1346, column: 8, scope: !7982)
!7988 = !DILocation(line: 1346, column: 16, scope: !7982)
!7989 = !DILocation(line: 1346, column: 27, scope: !7982)
!7990 = !DILocation(line: 1346, column: 32, scope: !7982)
!7991 = !DILocation(line: 1346, column: 41, scope: !7982)
!7992 = !DILocation(line: 1348, column: 2, scope: !7943)
!7993 = distinct !DISubprogram(name: "ehci_hub_descriptor", scope: !6489, file: !6489, line: 694, type: !7994, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!7994 = !DISubroutineType(types: !7995)
!7995 = !{null, !5814, !307}
!7996 = !DILocalVariable(name: "ehci", arg: 1, scope: !7993, file: !6489, line: 695, type: !5814)
!7997 = !DILocation(line: 695, column: 21, scope: !7993)
!7998 = !DILocalVariable(name: "desc", arg: 2, scope: !7993, file: !6489, line: 696, type: !307)
!7999 = !DILocation(line: 696, column: 29, scope: !7993)
!8000 = !DILocalVariable(name: "ports", scope: !7993, file: !6489, line: 698, type: !401)
!8001 = !DILocation(line: 698, column: 7, scope: !7993)
!8002 = !DILocation(line: 698, column: 15, scope: !7993)
!8003 = !DILocalVariable(name: "temp", scope: !7993, file: !6489, line: 699, type: !1062)
!8004 = !DILocation(line: 699, column: 7, scope: !7993)
!8005 = !DILocation(line: 701, column: 2, scope: !7993)
!8006 = !DILocation(line: 701, column: 8, scope: !7993)
!8007 = !DILocation(line: 701, column: 24, scope: !7993)
!8008 = !DILocation(line: 702, column: 2, scope: !7993)
!8009 = !DILocation(line: 702, column: 8, scope: !7993)
!8010 = !DILocation(line: 702, column: 23, scope: !7993)
!8011 = !DILocation(line: 703, column: 2, scope: !7993)
!8012 = !DILocation(line: 703, column: 8, scope: !7993)
!8013 = !DILocation(line: 703, column: 25, scope: !7993)
!8014 = !DILocation(line: 705, column: 20, scope: !7993)
!8015 = !DILocation(line: 705, column: 2, scope: !7993)
!8016 = !DILocation(line: 705, column: 8, scope: !7993)
!8017 = !DILocation(line: 705, column: 18, scope: !7993)
!8018 = !DILocation(line: 706, column: 14, scope: !7993)
!8019 = !DILocation(line: 706, column: 20, scope: !7993)
!8020 = !DILocation(line: 706, column: 11, scope: !7993)
!8021 = !DILocation(line: 706, column: 9, scope: !7993)
!8022 = !DILocation(line: 706, column: 7, scope: !7993)
!8023 = !DILocation(line: 707, column: 30, scope: !7993)
!8024 = !DILocation(line: 707, column: 28, scope: !7993)
!8025 = !DILocation(line: 707, column: 24, scope: !7993)
!8026 = !DILocation(line: 707, column: 22, scope: !7993)
!8027 = !DILocation(line: 707, column: 2, scope: !7993)
!8028 = !DILocation(line: 707, column: 8, scope: !7993)
!8029 = !DILocation(line: 707, column: 20, scope: !7993)
!8030 = !DILocation(line: 710, column: 10, scope: !7993)
!8031 = !DILocation(line: 710, column: 16, scope: !7993)
!8032 = !DILocation(line: 710, column: 18, scope: !7993)
!8033 = !DILocation(line: 710, column: 21, scope: !7993)
!8034 = !DILocation(line: 710, column: 44, scope: !7993)
!8035 = !DILocation(line: 710, column: 2, scope: !7993)
!8036 = !DILocation(line: 711, column: 10, scope: !7993)
!8037 = !DILocation(line: 711, column: 16, scope: !7993)
!8038 = !DILocation(line: 711, column: 18, scope: !7993)
!8039 = !DILocation(line: 711, column: 21, scope: !7993)
!8040 = !DILocation(line: 711, column: 37, scope: !7993)
!8041 = !DILocation(line: 711, column: 50, scope: !7993)
!8042 = !DILocation(line: 711, column: 2, scope: !7993)
!8043 = !DILocation(line: 713, column: 7, scope: !7993)
!8044 = !DILocation(line: 714, column: 6, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !7993, file: !6489, line: 714, column: 6)
!8046 = !DILocation(line: 714, column: 6, scope: !7993)
!8047 = !DILocation(line: 715, column: 8, scope: !8045)
!8048 = !DILocation(line: 715, column: 3, scope: !8045)
!8049 = !DILocation(line: 717, column: 8, scope: !8045)
!8050 = !DILocation(line: 723, column: 30, scope: !7993)
!8051 = !DILocation(line: 723, column: 2, scope: !7993)
!8052 = !DILocation(line: 723, column: 8, scope: !7993)
!8053 = !DILocation(line: 723, column: 28, scope: !7993)
!8054 = !DILocation(line: 724, column: 1, scope: !7993)
!8055 = distinct !DISubprogram(name: "test_bit", scope: !8056, file: !8056, line: 132, type: !8057, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8056 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!8057 = !DISubroutineType(types: !8058)
!8058 = !{!626, !340, !8059}
!8059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8060, size: 64)
!8060 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7854)
!8061 = !DILocalVariable(name: "nr", arg: 1, scope: !8062, file: !7857, line: 210, type: !340)
!8062 = distinct !DISubprogram(name: "variable_test_bit", scope: !7857, file: !7857, line: 210, type: !8057, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8063 = !DILocation(line: 210, column: 52, scope: !8062, inlinedAt: !8064)
!8064 = distinct !DILocation(line: 135, column: 9, scope: !8055)
!8065 = !DILocalVariable(name: "addr", arg: 2, scope: !8062, file: !7857, line: 210, type: !8059)
!8066 = !DILocation(line: 210, column: 86, scope: !8062, inlinedAt: !8064)
!8067 = !DILocalVariable(name: "oldbit", scope: !8062, file: !7857, line: 212, type: !626)
!8068 = !DILocation(line: 212, column: 7, scope: !8062, inlinedAt: !8064)
!8069 = !DILocalVariable(name: "nr", arg: 1, scope: !8070, file: !7857, line: 204, type: !340)
!8070 = distinct !DISubprogram(name: "constant_test_bit", scope: !7857, file: !7857, line: 204, type: !8057, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8071 = !DILocation(line: 204, column: 52, scope: !8070, inlinedAt: !8072)
!8072 = distinct !DILocation(line: 135, column: 9, scope: !8055)
!8073 = !DILocalVariable(name: "addr", arg: 2, scope: !8070, file: !7857, line: 204, type: !8059)
!8074 = !DILocation(line: 204, column: 86, scope: !8070, inlinedAt: !8072)
!8075 = !DILocalVariable(name: "v", arg: 1, scope: !8076, file: !7864, line: 69, type: !7867)
!8076 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !7864, file: !7864, line: 69, type: !7865, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8077 = !DILocation(line: 69, column: 73, scope: !8076, inlinedAt: !8078)
!8078 = distinct !DILocation(line: 134, column: 2, scope: !8055)
!8079 = !DILocalVariable(name: "size", arg: 2, scope: !8076, file: !7864, line: 69, type: !462)
!8080 = !DILocation(line: 69, column: 83, scope: !8076, inlinedAt: !8078)
!8081 = !DILocalVariable(name: "nr", arg: 1, scope: !8055, file: !8056, line: 132, type: !340)
!8082 = !DILocation(line: 132, column: 34, scope: !8055)
!8083 = !DILocalVariable(name: "addr", arg: 2, scope: !8055, file: !8056, line: 132, type: !8059)
!8084 = !DILocation(line: 132, column: 68, scope: !8055)
!8085 = !DILocation(line: 134, column: 25, scope: !8055)
!8086 = !DILocation(line: 134, column: 32, scope: !8055)
!8087 = !DILocation(line: 134, column: 30, scope: !8055)
!8088 = !DILocation(line: 71, column: 19, scope: !8076, inlinedAt: !8078)
!8089 = !DILocation(line: 71, column: 22, scope: !8076, inlinedAt: !8078)
!8090 = !DILocation(line: 71, column: 2, scope: !8076, inlinedAt: !8078)
!8091 = !DILocation(line: 72, column: 2, scope: !8076, inlinedAt: !8078)
!8092 = !DILocation(line: 135, column: 9, scope: !8055)
!8093 = !DILocation(line: 206, column: 19, scope: !8070, inlinedAt: !8072)
!8094 = !DILocation(line: 206, column: 22, scope: !8070, inlinedAt: !8072)
!8095 = !DILocation(line: 206, column: 15, scope: !8070, inlinedAt: !8072)
!8096 = !DILocation(line: 207, column: 4, scope: !8070, inlinedAt: !8072)
!8097 = !DILocation(line: 207, column: 9, scope: !8070, inlinedAt: !8072)
!8098 = !DILocation(line: 207, column: 12, scope: !8070, inlinedAt: !8072)
!8099 = !DILocation(line: 206, column: 44, scope: !8070, inlinedAt: !8072)
!8100 = !DILocation(line: 207, column: 37, scope: !8070, inlinedAt: !8072)
!8101 = !DILocation(line: 217, column: 33, scope: !8062, inlinedAt: !8064)
!8102 = !DILocation(line: 217, column: 46, scope: !8062, inlinedAt: !8064)
!8103 = !DILocation(line: 214, column: 2, scope: !8062, inlinedAt: !8064)
!8104 = !{i32 -2147107695, i32 -2147107635}
!8105 = !DILocation(line: 219, column: 9, scope: !8062, inlinedAt: !8064)
!8106 = !DILocation(line: 135, column: 2, scope: !8055)
!8107 = distinct !DISubprogram(name: "check_reset_complete", scope: !6489, file: !6489, line: 567, type: !8108, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8108 = !DISubroutineType(types: !8109)
!8109 = !{!401, !5814, !401, !2542, !401}
!8110 = !DILocalVariable(name: "ehci", arg: 1, scope: !8107, file: !6489, line: 568, type: !5814)
!8111 = !DILocation(line: 568, column: 19, scope: !8107)
!8112 = !DILocalVariable(name: "index", arg: 2, scope: !8107, file: !6489, line: 569, type: !401)
!8113 = !DILocation(line: 569, column: 7, scope: !8107)
!8114 = !DILocalVariable(name: "status_reg", arg: 3, scope: !8107, file: !6489, line: 570, type: !2542)
!8115 = !DILocation(line: 570, column: 15, scope: !8107)
!8116 = !DILocalVariable(name: "port_status", arg: 4, scope: !8107, file: !6489, line: 571, type: !401)
!8117 = !DILocation(line: 571, column: 7, scope: !8107)
!8118 = !DILocation(line: 573, column: 8, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8107, file: !6489, line: 573, column: 6)
!8120 = !DILocation(line: 573, column: 20, scope: !8119)
!8121 = !DILocation(line: 573, column: 6, scope: !8107)
!8122 = !DILocation(line: 574, column: 10, scope: !8119)
!8123 = !DILocation(line: 574, column: 3, scope: !8119)
!8124 = !DILocation(line: 577, column: 8, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8107, file: !6489, line: 577, column: 6)
!8126 = !DILocation(line: 577, column: 20, scope: !8125)
!8127 = !DILocation(line: 577, column: 6, scope: !8107)
!8128 = !DILocation(line: 591, column: 15, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8125, file: !6489, line: 577, column: 32)
!8130 = !DILocation(line: 592, column: 15, scope: !8129)
!8131 = !DILocation(line: 593, column: 15, scope: !8129)
!8132 = !DILocation(line: 593, column: 21, scope: !8129)
!8133 = !DILocation(line: 593, column: 34, scope: !8129)
!8134 = !DILocation(line: 593, column: 3, scope: !8129)
!8135 = !DILocation(line: 596, column: 7, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8129, file: !6489, line: 596, column: 7)
!8137 = !DILocation(line: 596, column: 13, scope: !8136)
!8138 = !DILocation(line: 596, column: 7, scope: !8129)
!8139 = !DILocation(line: 597, column: 18, scope: !8136)
!8140 = !DILocation(line: 597, column: 4, scope: !8136)
!8141 = !DILocation(line: 598, column: 2, scope: !8129)
!8142 = !DILocation(line: 602, column: 7, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8144, file: !6489, line: 602, column: 7)
!8144 = distinct !DILexicalBlock(scope: !8125, file: !6489, line: 598, column: 9)
!8145 = !DILocation(line: 602, column: 13, scope: !8143)
!8146 = !DILocation(line: 602, column: 7, scope: !8144)
!8147 = !DILocation(line: 603, column: 18, scope: !8143)
!8148 = !DILocation(line: 603, column: 4, scope: !8143)
!8149 = !DILocation(line: 606, column: 9, scope: !8107)
!8150 = !DILocation(line: 606, column: 2, scope: !8107)
!8151 = !DILocation(line: 607, column: 1, scope: !8107)
!8152 = distinct !DISubprogram(name: "dbg_port", scope: !6452, file: !6452, line: 1075, type: !8153, scopeLine: 1076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8153 = !DISubroutineType(types: !8154)
!8154 = !{null, !5814, !357, !401, !303}
!8155 = !DILocalVariable(name: "ehci", arg: 1, scope: !8152, file: !6452, line: 1075, type: !5814)
!8156 = !DILocation(line: 1075, column: 46, scope: !8152)
!8157 = !DILocalVariable(name: "label", arg: 2, scope: !8152, file: !6452, line: 1075, type: !357)
!8158 = !DILocation(line: 1075, column: 64, scope: !8152)
!8159 = !DILocalVariable(name: "port", arg: 3, scope: !8152, file: !6452, line: 1076, type: !401)
!8160 = !DILocation(line: 1076, column: 7, scope: !8152)
!8161 = !DILocalVariable(name: "status", arg: 4, scope: !8152, file: !6452, line: 1076, type: !303)
!8162 = !DILocation(line: 1076, column: 17, scope: !8152)
!8163 = !DILocation(line: 1076, column: 27, scope: !8152)
!8164 = distinct !DISubprogram(name: "readl", scope: !8165, file: !8165, line: 59, type: !8166, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8165 = !DIFile(filename: "./arch/x86/include/asm/io.h", directory: "/home/lizy2001/genbc/linux")
!8166 = !DISubroutineType(types: !8167)
!8167 = !{!7, !7867}
!8168 = !DILocalVariable(name: "addr", arg: 1, scope: !8164, file: !8165, line: 59, type: !7867)
!8169 = !DILocation(line: 59, column: 1, scope: !8164)
!8170 = !DILocalVariable(name: "ret", scope: !8164, file: !8165, line: 59, type: !7)
!8171 = !{i32 -2143397931}
!8172 = distinct !DISubprogram(name: "ehci_quiesce", scope: !3, file: !3, line: 272, type: !6235, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8173 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !8174)
!8174 = distinct !DILocation(line: 288, column: 2, scope: !8172)
!8175 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !8176)
!8176 = distinct !DILocation(line: 285, column: 2, scope: !8172)
!8177 = !DILocalVariable(name: "ehci", arg: 1, scope: !8172, file: !3, line: 272, type: !5814)
!8178 = !DILocation(line: 272, column: 44, scope: !8172)
!8179 = !DILocalVariable(name: "temp", scope: !8172, file: !3, line: 274, type: !303)
!8180 = !DILocation(line: 274, column: 6, scope: !8172)
!8181 = !DILocation(line: 276, column: 6, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8172, file: !3, line: 276, column: 6)
!8183 = !DILocation(line: 276, column: 12, scope: !8182)
!8184 = !DILocation(line: 276, column: 21, scope: !8182)
!8185 = !DILocation(line: 276, column: 6, scope: !8172)
!8186 = !DILocation(line: 277, column: 3, scope: !8182)
!8187 = !DILocation(line: 280, column: 10, scope: !8172)
!8188 = !DILocation(line: 280, column: 16, scope: !8172)
!8189 = !DILocation(line: 280, column: 24, scope: !8172)
!8190 = !DILocation(line: 280, column: 31, scope: !8172)
!8191 = !DILocation(line: 280, column: 7, scope: !8172)
!8192 = !DILocation(line: 281, column: 17, scope: !8172)
!8193 = !DILocation(line: 281, column: 24, scope: !8172)
!8194 = !DILocation(line: 281, column: 30, scope: !8172)
!8195 = !DILocation(line: 281, column: 36, scope: !8172)
!8196 = !DILocation(line: 281, column: 23, scope: !8172)
!8197 = !DILocation(line: 281, column: 63, scope: !8172)
!8198 = !DILocation(line: 281, column: 2, scope: !8172)
!8199 = !DILocation(line: 285, column: 17, scope: !8172)
!8200 = !DILocation(line: 285, column: 23, scope: !8172)
!8201 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !8176)
!8202 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !8176)
!8203 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !8176)
!8204 = !DILocation(line: 286, column: 2, scope: !8172)
!8205 = !DILocation(line: 286, column: 8, scope: !8172)
!8206 = !DILocation(line: 286, column: 16, scope: !8172)
!8207 = !DILocation(line: 287, column: 14, scope: !8172)
!8208 = !DILocation(line: 287, column: 20, scope: !8172)
!8209 = !DILocation(line: 287, column: 26, scope: !8172)
!8210 = !DILocation(line: 287, column: 36, scope: !8172)
!8211 = !DILocation(line: 287, column: 42, scope: !8172)
!8212 = !DILocation(line: 287, column: 48, scope: !8172)
!8213 = !DILocation(line: 287, column: 2, scope: !8172)
!8214 = !DILocation(line: 288, column: 19, scope: !8172)
!8215 = !DILocation(line: 288, column: 25, scope: !8172)
!8216 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !8174)
!8217 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !8174)
!8218 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !8174)
!8219 = !DILocation(line: 291, column: 17, scope: !8172)
!8220 = !DILocation(line: 291, column: 24, scope: !8172)
!8221 = !DILocation(line: 291, column: 30, scope: !8172)
!8222 = !DILocation(line: 291, column: 36, scope: !8172)
!8223 = !DILocation(line: 291, column: 23, scope: !8172)
!8224 = !DILocation(line: 291, column: 2, scope: !8172)
!8225 = !DILocation(line: 293, column: 1, scope: !8172)
!8226 = distinct !DISubprogram(name: "ehci_halt", scope: !3, file: !3, line: 180, type: !6346, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8227 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !8228)
!8228 = distinct !DILocation(line: 203, column: 2, scope: !8226)
!8229 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !8230)
!8230 = distinct !DILocation(line: 184, column: 2, scope: !8226)
!8231 = !DILocalVariable(name: "ehci", arg: 1, scope: !8226, file: !3, line: 180, type: !5814)
!8232 = !DILocation(line: 180, column: 40, scope: !8226)
!8233 = !DILocalVariable(name: "temp", scope: !8226, file: !3, line: 182, type: !303)
!8234 = !DILocation(line: 182, column: 6, scope: !8226)
!8235 = !DILocation(line: 184, column: 17, scope: !8226)
!8236 = !DILocation(line: 184, column: 23, scope: !8226)
!8237 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !8230)
!8238 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !8230)
!8239 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !8230)
!8240 = !DILocation(line: 187, column: 14, scope: !8226)
!8241 = !DILocation(line: 187, column: 24, scope: !8226)
!8242 = !DILocation(line: 187, column: 30, scope: !8226)
!8243 = !DILocation(line: 187, column: 36, scope: !8226)
!8244 = !DILocation(line: 187, column: 2, scope: !8226)
!8245 = !DILocation(line: 198, column: 2, scope: !8226)
!8246 = !DILocation(line: 198, column: 8, scope: !8226)
!8247 = !DILocation(line: 198, column: 16, scope: !8226)
!8248 = !DILocation(line: 199, column: 20, scope: !8226)
!8249 = !DILocation(line: 199, column: 27, scope: !8226)
!8250 = !DILocation(line: 199, column: 33, scope: !8226)
!8251 = !DILocation(line: 199, column: 39, scope: !8226)
!8252 = !DILocation(line: 199, column: 9, scope: !8226)
!8253 = !DILocation(line: 199, column: 7, scope: !8226)
!8254 = !DILocation(line: 200, column: 7, scope: !8226)
!8255 = !DILocation(line: 201, column: 14, scope: !8226)
!8256 = !DILocation(line: 201, column: 20, scope: !8226)
!8257 = !DILocation(line: 201, column: 27, scope: !8226)
!8258 = !DILocation(line: 201, column: 33, scope: !8226)
!8259 = !DILocation(line: 201, column: 39, scope: !8226)
!8260 = !DILocation(line: 201, column: 2, scope: !8226)
!8261 = !DILocation(line: 203, column: 19, scope: !8226)
!8262 = !DILocation(line: 203, column: 25, scope: !8226)
!8263 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !8228)
!8264 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !8228)
!8265 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !8228)
!8266 = !DILocation(line: 204, column: 30, scope: !8226)
!8267 = !DILocation(line: 204, column: 18, scope: !8226)
!8268 = !DILocation(line: 204, column: 37, scope: !8226)
!8269 = !DILocation(line: 204, column: 2, scope: !8226)
!8270 = !DILocation(line: 206, column: 24, scope: !8226)
!8271 = !DILocation(line: 206, column: 31, scope: !8226)
!8272 = !DILocation(line: 206, column: 37, scope: !8226)
!8273 = !DILocation(line: 206, column: 43, scope: !8226)
!8274 = !DILocation(line: 206, column: 30, scope: !8226)
!8275 = !DILocation(line: 206, column: 9, scope: !8226)
!8276 = !DILocation(line: 206, column: 2, scope: !8226)
!8277 = distinct !DISubprogram(name: "ehci_setup", scope: !3, file: !3, line: 657, type: !5422, scopeLine: 658, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8278 = !DILocalVariable(name: "hcd", arg: 1, scope: !8277, file: !3, line: 657, type: !342)
!8279 = !DILocation(line: 657, column: 32, scope: !8277)
!8280 = !DILocalVariable(name: "ehci", scope: !8277, file: !3, line: 659, type: !5814)
!8281 = !DILocation(line: 659, column: 19, scope: !8277)
!8282 = !DILocation(line: 659, column: 38, scope: !8277)
!8283 = !DILocation(line: 659, column: 26, scope: !8277)
!8284 = !DILocalVariable(name: "retval", scope: !8277, file: !3, line: 660, type: !401)
!8285 = !DILocation(line: 660, column: 6, scope: !8277)
!8286 = !DILocation(line: 662, column: 31, scope: !8277)
!8287 = !DILocation(line: 662, column: 37, scope: !8277)
!8288 = !DILocation(line: 662, column: 15, scope: !8277)
!8289 = !DILocation(line: 663, column: 6, scope: !8277)
!8290 = !DILocation(line: 662, column: 42, scope: !8277)
!8291 = !DILocation(line: 662, column: 2, scope: !8277)
!8292 = !DILocation(line: 662, column: 8, scope: !8277)
!8293 = !DILocation(line: 662, column: 13, scope: !8277)
!8294 = !DILocation(line: 664, column: 17, scope: !8277)
!8295 = !DILocation(line: 664, column: 2, scope: !8277)
!8296 = !DILocation(line: 665, column: 17, scope: !8277)
!8297 = !DILocation(line: 665, column: 2, scope: !8277)
!8298 = !DILocation(line: 668, column: 32, scope: !8277)
!8299 = !DILocation(line: 668, column: 39, scope: !8277)
!8300 = !DILocation(line: 668, column: 45, scope: !8277)
!8301 = !DILocation(line: 668, column: 51, scope: !8277)
!8302 = !DILocation(line: 668, column: 21, scope: !8277)
!8303 = !DILocation(line: 668, column: 2, scope: !8277)
!8304 = !DILocation(line: 668, column: 8, scope: !8277)
!8305 = !DILocation(line: 668, column: 19, scope: !8277)
!8306 = !DILocation(line: 670, column: 2, scope: !8277)
!8307 = !DILocation(line: 670, column: 8, scope: !8277)
!8308 = !DILocation(line: 670, column: 13, scope: !8277)
!8309 = !DILocation(line: 673, column: 21, scope: !8277)
!8310 = !DILocation(line: 673, column: 11, scope: !8277)
!8311 = !DILocation(line: 673, column: 9, scope: !8277)
!8312 = !DILocation(line: 674, column: 6, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8277, file: !3, line: 674, column: 6)
!8314 = !DILocation(line: 674, column: 6, scope: !8277)
!8315 = !DILocation(line: 675, column: 10, scope: !8313)
!8316 = !DILocation(line: 675, column: 3, scope: !8313)
!8317 = !DILocation(line: 677, column: 21, scope: !8277)
!8318 = !DILocation(line: 677, column: 11, scope: !8277)
!8319 = !DILocation(line: 677, column: 9, scope: !8277)
!8320 = !DILocation(line: 678, column: 6, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8277, file: !3, line: 678, column: 6)
!8322 = !DILocation(line: 678, column: 6, scope: !8277)
!8323 = !DILocation(line: 679, column: 20, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 678, column: 14)
!8325 = !DILocation(line: 679, column: 3, scope: !8324)
!8326 = !DILocation(line: 680, column: 10, scope: !8324)
!8327 = !DILocation(line: 680, column: 3, scope: !8324)
!8328 = !DILocation(line: 683, column: 13, scope: !8277)
!8329 = !DILocation(line: 683, column: 2, scope: !8277)
!8330 = !DILocation(line: 685, column: 2, scope: !8277)
!8331 = !DILocation(line: 686, column: 1, scope: !8277)
!8332 = distinct !DISubprogram(name: "dbg_hcs_params", scope: !6452, file: !6452, line: 1049, type: !8333, scopeLine: 1049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8333 = !DISubroutineType(types: !8334)
!8334 = !{null, !5814, !417}
!8335 = !DILocalVariable(name: "ehci", arg: 1, scope: !8332, file: !6452, line: 1049, type: !5814)
!8336 = !DILocation(line: 1049, column: 52, scope: !8332)
!8337 = !DILocalVariable(name: "label", arg: 2, scope: !8332, file: !6452, line: 1049, type: !417)
!8338 = !DILocation(line: 1049, column: 64, scope: !8332)
!8339 = !DILocation(line: 1049, column: 73, scope: !8332)
!8340 = distinct !DISubprogram(name: "dbg_hcc_params", scope: !6452, file: !6452, line: 1050, type: !8333, scopeLine: 1050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8341 = !DILocalVariable(name: "ehci", arg: 1, scope: !8340, file: !6452, line: 1050, type: !5814)
!8342 = !DILocation(line: 1050, column: 52, scope: !8340)
!8343 = !DILocalVariable(name: "label", arg: 2, scope: !8340, file: !6452, line: 1050, type: !417)
!8344 = !DILocation(line: 1050, column: 64, scope: !8340)
!8345 = !DILocation(line: 1050, column: 73, scope: !8340)
!8346 = distinct !DISubprogram(name: "ehci_init", scope: !3, file: !3, line: 453, type: !5422, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8347 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !8348)
!8348 = distinct !DILocation(line: 461, column: 2, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 461, column: 2)
!8350 = !DILocalVariable(name: "hcd", arg: 1, scope: !8346, file: !3, line: 453, type: !342)
!8351 = !DILocation(line: 453, column: 38, scope: !8346)
!8352 = !DILocalVariable(name: "ehci", scope: !8346, file: !3, line: 455, type: !5814)
!8353 = !DILocation(line: 455, column: 20, scope: !8346)
!8354 = !DILocation(line: 455, column: 39, scope: !8346)
!8355 = !DILocation(line: 455, column: 27, scope: !8346)
!8356 = !DILocalVariable(name: "temp", scope: !8346, file: !3, line: 456, type: !303)
!8357 = !DILocation(line: 456, column: 8, scope: !8346)
!8358 = !DILocalVariable(name: "retval", scope: !8346, file: !3, line: 457, type: !401)
!8359 = !DILocation(line: 457, column: 8, scope: !8346)
!8360 = !DILocalVariable(name: "hcc_params", scope: !8346, file: !3, line: 458, type: !303)
!8361 = !DILocation(line: 458, column: 8, scope: !8346)
!8362 = !DILocalVariable(name: "hw", scope: !8346, file: !3, line: 459, type: !5888)
!8363 = !DILocation(line: 459, column: 21, scope: !8346)
!8364 = !DILocation(line: 461, column: 2, scope: !8346)
!8365 = !DILocation(line: 461, column: 2, scope: !8349)
!8366 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !8348)
!8367 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !8348)
!8368 = !DILocation(line: 466, column: 2, scope: !8346)
!8369 = !DILocation(line: 466, column: 8, scope: !8346)
!8370 = !DILocation(line: 466, column: 25, scope: !8346)
!8371 = !DILocation(line: 468, column: 16, scope: !8346)
!8372 = !DILocation(line: 468, column: 22, scope: !8346)
!8373 = !DILocation(line: 468, column: 2, scope: !8346)
!8374 = !DILocation(line: 469, column: 2, scope: !8346)
!8375 = !DILocation(line: 469, column: 8, scope: !8346)
!8376 = !DILocation(line: 469, column: 16, scope: !8346)
!8377 = !DILocation(line: 469, column: 25, scope: !8346)
!8378 = !DILocation(line: 470, column: 2, scope: !8346)
!8379 = !DILocation(line: 470, column: 8, scope: !8346)
!8380 = !DILocation(line: 470, column: 27, scope: !8346)
!8381 = !DILocation(line: 472, column: 26, scope: !8346)
!8382 = !DILocation(line: 472, column: 33, scope: !8346)
!8383 = !DILocation(line: 472, column: 39, scope: !8346)
!8384 = !DILocation(line: 472, column: 45, scope: !8346)
!8385 = !DILocation(line: 472, column: 15, scope: !8346)
!8386 = !DILocation(line: 472, column: 13, scope: !8346)
!8387 = !DILocation(line: 478, column: 2, scope: !8346)
!8388 = !DILocation(line: 478, column: 8, scope: !8346)
!8389 = !DILocation(line: 478, column: 28, scope: !8346)
!8390 = !DILocation(line: 484, column: 2, scope: !8346)
!8391 = !DILocation(line: 484, column: 8, scope: !8346)
!8392 = !DILocation(line: 484, column: 22, scope: !8346)
!8393 = !DILocation(line: 485, column: 18, scope: !8346)
!8394 = !DILocation(line: 485, column: 24, scope: !8346)
!8395 = !DILocation(line: 485, column: 2, scope: !8346)
!8396 = !DILocation(line: 486, column: 18, scope: !8346)
!8397 = !DILocation(line: 486, column: 24, scope: !8346)
!8398 = !DILocation(line: 486, column: 2, scope: !8346)
!8399 = !DILocation(line: 487, column: 18, scope: !8346)
!8400 = !DILocation(line: 487, column: 24, scope: !8346)
!8401 = !DILocation(line: 487, column: 2, scope: !8346)
!8402 = !DILocation(line: 488, column: 18, scope: !8346)
!8403 = !DILocation(line: 488, column: 24, scope: !8346)
!8404 = !DILocation(line: 488, column: 2, scope: !8346)
!8405 = !DILocation(line: 489, column: 18, scope: !8346)
!8406 = !DILocation(line: 489, column: 24, scope: !8346)
!8407 = !DILocation(line: 489, column: 2, scope: !8346)
!8408 = !DILocation(line: 490, column: 18, scope: !8346)
!8409 = !DILocation(line: 490, column: 24, scope: !8346)
!8410 = !DILocation(line: 490, column: 2, scope: !8346)
!8411 = !DILocation(line: 491, column: 18, scope: !8346)
!8412 = !DILocation(line: 491, column: 24, scope: !8346)
!8413 = !DILocation(line: 491, column: 2, scope: !8346)
!8414 = !DILocation(line: 492, column: 18, scope: !8346)
!8415 = !DILocation(line: 492, column: 24, scope: !8346)
!8416 = !DILocation(line: 492, column: 2, scope: !8346)
!8417 = !DILocation(line: 494, column: 6, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 494, column: 6)
!8419 = !DILocation(line: 494, column: 6, scope: !8346)
!8420 = !DILocation(line: 498, column: 11, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 494, column: 40)
!8422 = !DILocation(line: 498, column: 17, scope: !8421)
!8423 = !DILocation(line: 498, column: 31, scope: !8421)
!8424 = !DILocation(line: 502, column: 2, scope: !8421)
!8425 = !DILocation(line: 503, column: 30, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 503, column: 6)
!8427 = !DILocation(line: 503, column: 16, scope: !8426)
!8428 = !DILocation(line: 503, column: 14, scope: !8426)
!8429 = !DILocation(line: 503, column: 49, scope: !8426)
!8430 = !DILocation(line: 503, column: 6, scope: !8346)
!8431 = !DILocation(line: 504, column: 10, scope: !8426)
!8432 = !DILocation(line: 504, column: 3, scope: !8426)
!8433 = !DILocation(line: 507, column: 6, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 507, column: 6)
!8435 = !DILocation(line: 507, column: 6, scope: !8346)
!8436 = !DILocation(line: 508, column: 3, scope: !8434)
!8437 = !DILocation(line: 508, column: 9, scope: !8434)
!8438 = !DILocation(line: 508, column: 18, scope: !8434)
!8439 = !DILocation(line: 510, column: 24, scope: !8434)
!8440 = !DILocation(line: 510, column: 22, scope: !8434)
!8441 = !DILocation(line: 510, column: 3, scope: !8434)
!8442 = !DILocation(line: 510, column: 9, scope: !8434)
!8443 = !DILocation(line: 510, column: 18, scope: !8434)
!8444 = !DILocation(line: 519, column: 2, scope: !8346)
!8445 = !DILocation(line: 519, column: 8, scope: !8346)
!8446 = !DILocation(line: 519, column: 15, scope: !8346)
!8447 = !DILocation(line: 519, column: 23, scope: !8346)
!8448 = !DILocation(line: 519, column: 26, scope: !8346)
!8449 = !DILocation(line: 520, column: 7, scope: !8346)
!8450 = !DILocation(line: 520, column: 13, scope: !8346)
!8451 = !DILocation(line: 520, column: 20, scope: !8346)
!8452 = !DILocation(line: 520, column: 5, scope: !8346)
!8453 = !DILocation(line: 521, column: 16, scope: !8346)
!8454 = !DILocation(line: 521, column: 2, scope: !8346)
!8455 = !DILocation(line: 521, column: 6, scope: !8346)
!8456 = !DILocation(line: 521, column: 14, scope: !8346)
!8457 = !DILocation(line: 522, column: 29, scope: !8346)
!8458 = !DILocation(line: 522, column: 17, scope: !8346)
!8459 = !DILocation(line: 522, column: 2, scope: !8346)
!8460 = !DILocation(line: 522, column: 6, scope: !8346)
!8461 = !DILocation(line: 522, column: 15, scope: !8346)
!8462 = !DILocation(line: 526, column: 29, scope: !8346)
!8463 = !DILocation(line: 526, column: 17, scope: !8346)
!8464 = !DILocation(line: 526, column: 2, scope: !8346)
!8465 = !DILocation(line: 526, column: 6, scope: !8346)
!8466 = !DILocation(line: 526, column: 15, scope: !8346)
!8467 = !DILocation(line: 527, column: 20, scope: !8346)
!8468 = !DILocation(line: 527, column: 2, scope: !8346)
!8469 = !DILocation(line: 527, column: 6, scope: !8346)
!8470 = !DILocation(line: 527, column: 18, scope: !8346)
!8471 = !DILocation(line: 528, column: 2, scope: !8346)
!8472 = !DILocation(line: 528, column: 8, scope: !8346)
!8473 = !DILocation(line: 528, column: 15, scope: !8346)
!8474 = !DILocation(line: 528, column: 24, scope: !8346)
!8475 = !DILocation(line: 529, column: 20, scope: !8346)
!8476 = !DILocation(line: 529, column: 2, scope: !8346)
!8477 = !DILocation(line: 529, column: 6, scope: !8346)
!8478 = !DILocation(line: 529, column: 18, scope: !8346)
!8479 = !DILocation(line: 532, column: 6, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 532, column: 6)
!8481 = !DILocation(line: 532, column: 22, scope: !8480)
!8482 = !DILocation(line: 532, column: 26, scope: !8480)
!8483 = !DILocation(line: 532, column: 29, scope: !8480)
!8484 = !DILocation(line: 532, column: 45, scope: !8480)
!8485 = !DILocation(line: 532, column: 6, scope: !8346)
!8486 = !DILocation(line: 533, column: 19, scope: !8480)
!8487 = !DILocation(line: 533, column: 3, scope: !8480)
!8488 = !DILocation(line: 534, column: 20, scope: !8346)
!8489 = !DILocation(line: 534, column: 18, scope: !8346)
!8490 = !DILocation(line: 534, column: 11, scope: !8346)
!8491 = !DILocation(line: 534, column: 7, scope: !8346)
!8492 = !DILocation(line: 535, column: 6, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 535, column: 6)
!8494 = !DILocation(line: 535, column: 6, scope: !8346)
!8495 = !DILocation(line: 536, column: 3, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8493, file: !3, line: 535, column: 45)
!8497 = !DILocation(line: 536, column: 9, scope: !8496)
!8498 = !DILocation(line: 536, column: 18, scope: !8496)
!8499 = !DILocation(line: 538, column: 8, scope: !8496)
!8500 = !DILocation(line: 539, column: 2, scope: !8496)
!8501 = !DILocation(line: 540, column: 6, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 540, column: 6)
!8503 = !DILocation(line: 540, column: 6, scope: !8346)
!8504 = !DILocation(line: 548, column: 7, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 548, column: 7)
!8506 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 540, column: 31)
!8507 = !DILocation(line: 548, column: 7, scope: !8506)
!8508 = !DILocalVariable(name: "__UNIQUE_ID___x370", scope: !8509, file: !3, line: 549, type: !7)
!8509 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 549, column: 11)
!8510 = distinct !DILexicalBlock(scope: !8505, file: !3, line: 548, column: 13)
!8511 = !DILocation(line: 549, column: 11, scope: !8509)
!8512 = !DILocalVariable(name: "__UNIQUE_ID___y371", scope: !8509, file: !3, line: 549, type: !7)
!8513 = !DILocation(line: 549, column: 9, scope: !8510)
!8514 = !DILocation(line: 550, column: 9, scope: !8510)
!8515 = !DILocation(line: 551, column: 12, scope: !8510)
!8516 = !DILocation(line: 551, column: 17, scope: !8510)
!8517 = !DILocation(line: 551, column: 9, scope: !8510)
!8518 = !DILocation(line: 552, column: 3, scope: !8510)
!8519 = !DILocation(line: 554, column: 2, scope: !8506)
!8520 = !DILocation(line: 555, column: 6, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 555, column: 6)
!8522 = !DILocation(line: 555, column: 6, scope: !8346)
!8523 = !DILocation(line: 557, column: 8, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8521, file: !3, line: 555, column: 40)
!8525 = !DILocation(line: 558, column: 8, scope: !8524)
!8526 = !DILocation(line: 559, column: 2, scope: !8524)
!8527 = !DILocation(line: 560, column: 18, scope: !8346)
!8528 = !DILocation(line: 560, column: 2, scope: !8346)
!8529 = !DILocation(line: 560, column: 8, scope: !8346)
!8530 = !DILocation(line: 560, column: 16, scope: !8346)
!8531 = !DILocation(line: 563, column: 7, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 563, column: 6)
!8533 = !DILocation(line: 563, column: 12, scope: !8532)
!8534 = !DILocation(line: 563, column: 6, scope: !8346)
!8535 = !DILocation(line: 564, column: 3, scope: !8532)
!8536 = !DILocation(line: 564, column: 8, scope: !8532)
!8537 = !DILocation(line: 564, column: 13, scope: !8532)
!8538 = !DILocation(line: 564, column: 26, scope: !8532)
!8539 = !DILocation(line: 567, column: 2, scope: !8346)
!8540 = !DILocation(line: 567, column: 8, scope: !8346)
!8541 = !DILocation(line: 567, column: 20, scope: !8346)
!8542 = !DILocation(line: 568, column: 2, scope: !8346)
!8543 = !DILocation(line: 569, column: 1, scope: !8346)
!8544 = distinct !DISubprogram(name: "ehci_mem_cleanup", scope: !8545, file: !8545, line: 107, type: !6235, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8545 = !DIFile(filename: "drivers/usb/host/ehci-mem.c", directory: "/home/lizy2001/genbc/linux")
!8546 = !DILocalVariable(name: "ehci", arg: 1, scope: !8544, file: !8545, line: 107, type: !5814)
!8547 = !DILocation(line: 107, column: 48, scope: !8544)
!8548 = !DILocation(line: 109, column: 6, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8544, file: !8545, line: 109, column: 6)
!8550 = !DILocation(line: 109, column: 12, scope: !8549)
!8551 = !DILocation(line: 109, column: 6, scope: !8544)
!8552 = !DILocation(line: 110, column: 14, scope: !8549)
!8553 = !DILocation(line: 110, column: 20, scope: !8549)
!8554 = !DILocation(line: 110, column: 26, scope: !8549)
!8555 = !DILocation(line: 110, column: 3, scope: !8549)
!8556 = !DILocation(line: 111, column: 2, scope: !8544)
!8557 = !DILocation(line: 111, column: 8, scope: !8544)
!8558 = !DILocation(line: 111, column: 14, scope: !8544)
!8559 = !DILocation(line: 113, column: 6, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8544, file: !8545, line: 113, column: 6)
!8561 = !DILocation(line: 113, column: 12, scope: !8560)
!8562 = !DILocation(line: 113, column: 6, scope: !8544)
!8563 = !DILocation(line: 114, column: 14, scope: !8560)
!8564 = !DILocation(line: 114, column: 20, scope: !8560)
!8565 = !DILocation(line: 114, column: 26, scope: !8560)
!8566 = !DILocation(line: 114, column: 3, scope: !8560)
!8567 = !DILocation(line: 115, column: 2, scope: !8544)
!8568 = !DILocation(line: 115, column: 8, scope: !8544)
!8569 = !DILocation(line: 115, column: 14, scope: !8544)
!8570 = !DILocation(line: 118, column: 19, scope: !8544)
!8571 = !DILocation(line: 118, column: 25, scope: !8544)
!8572 = !DILocation(line: 118, column: 2, scope: !8544)
!8573 = !DILocation(line: 119, column: 2, scope: !8544)
!8574 = !DILocation(line: 119, column: 8, scope: !8544)
!8575 = !DILocation(line: 119, column: 17, scope: !8544)
!8576 = !DILocation(line: 120, column: 19, scope: !8544)
!8577 = !DILocation(line: 120, column: 25, scope: !8544)
!8578 = !DILocation(line: 120, column: 2, scope: !8544)
!8579 = !DILocation(line: 121, column: 2, scope: !8544)
!8580 = !DILocation(line: 121, column: 8, scope: !8544)
!8581 = !DILocation(line: 121, column: 16, scope: !8544)
!8582 = !DILocation(line: 122, column: 19, scope: !8544)
!8583 = !DILocation(line: 122, column: 25, scope: !8544)
!8584 = !DILocation(line: 122, column: 2, scope: !8544)
!8585 = !DILocation(line: 123, column: 2, scope: !8544)
!8586 = !DILocation(line: 123, column: 8, scope: !8544)
!8587 = !DILocation(line: 123, column: 17, scope: !8544)
!8588 = !DILocation(line: 124, column: 19, scope: !8544)
!8589 = !DILocation(line: 124, column: 25, scope: !8544)
!8590 = !DILocation(line: 124, column: 2, scope: !8544)
!8591 = !DILocation(line: 125, column: 2, scope: !8544)
!8592 = !DILocation(line: 125, column: 8, scope: !8544)
!8593 = !DILocation(line: 125, column: 18, scope: !8544)
!8594 = !DILocation(line: 127, column: 6, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8544, file: !8545, line: 127, column: 6)
!8596 = !DILocation(line: 127, column: 12, scope: !8595)
!8597 = !DILocation(line: 127, column: 6, scope: !8544)
!8598 = !DILocation(line: 128, column: 33, scope: !8595)
!8599 = !DILocation(line: 128, column: 21, scope: !8595)
!8600 = !DILocation(line: 128, column: 40, scope: !8595)
!8601 = !DILocation(line: 128, column: 45, scope: !8595)
!8602 = !DILocation(line: 129, column: 4, scope: !8595)
!8603 = !DILocation(line: 129, column: 10, scope: !8595)
!8604 = !DILocation(line: 129, column: 24, scope: !8595)
!8605 = !DILocation(line: 130, column: 4, scope: !8595)
!8606 = !DILocation(line: 130, column: 10, scope: !8595)
!8607 = !DILocation(line: 130, column: 20, scope: !8595)
!8608 = !DILocation(line: 130, column: 26, scope: !8595)
!8609 = !DILocation(line: 128, column: 3, scope: !8595)
!8610 = !DILocation(line: 131, column: 2, scope: !8544)
!8611 = !DILocation(line: 131, column: 8, scope: !8544)
!8612 = !DILocation(line: 131, column: 17, scope: !8544)
!8613 = !DILocation(line: 134, column: 8, scope: !8544)
!8614 = !DILocation(line: 134, column: 14, scope: !8544)
!8615 = !DILocation(line: 134, column: 2, scope: !8544)
!8616 = !DILocation(line: 135, column: 2, scope: !8544)
!8617 = !DILocation(line: 135, column: 8, scope: !8544)
!8618 = !DILocation(line: 135, column: 16, scope: !8544)
!8619 = !DILocation(line: 136, column: 1, scope: !8544)
!8620 = distinct !DISubprogram(name: "ehci_suspend", scope: !3, file: !3, line: 1085, type: !5427, scopeLine: 1086, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8621 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !8622)
!8622 = distinct !DILocation(line: 1104, column: 2, scope: !8620)
!8623 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !8624)
!8624 = distinct !DILocation(line: 1099, column: 2, scope: !8620)
!8625 = !DILocalVariable(name: "hcd", arg: 1, scope: !8620, file: !3, line: 1085, type: !342)
!8626 = !DILocation(line: 1085, column: 34, scope: !8620)
!8627 = !DILocalVariable(name: "do_wakeup", arg: 2, scope: !8620, file: !3, line: 1085, type: !626)
!8628 = !DILocation(line: 1085, column: 44, scope: !8620)
!8629 = !DILocalVariable(name: "ehci", scope: !8620, file: !3, line: 1087, type: !5814)
!8630 = !DILocation(line: 1087, column: 20, scope: !8620)
!8631 = !DILocation(line: 1087, column: 39, scope: !8620)
!8632 = !DILocation(line: 1087, column: 27, scope: !8620)
!8633 = !DILocation(line: 1089, column: 6, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 1089, column: 6)
!8635 = !DILocation(line: 1089, column: 6, scope: !8620)
!8636 = !DILocation(line: 1090, column: 3, scope: !8634)
!8637 = !DILocation(line: 1097, column: 2, scope: !8620)
!8638 = !DILocation(line: 1099, column: 17, scope: !8620)
!8639 = !DILocation(line: 1099, column: 23, scope: !8620)
!8640 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !8624)
!8641 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !8624)
!8642 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !8624)
!8643 = !DILocation(line: 1100, column: 14, scope: !8620)
!8644 = !DILocation(line: 1100, column: 24, scope: !8620)
!8645 = !DILocation(line: 1100, column: 30, scope: !8620)
!8646 = !DILocation(line: 1100, column: 36, scope: !8620)
!8647 = !DILocation(line: 1100, column: 2, scope: !8620)
!8648 = !DILocation(line: 1101, column: 20, scope: !8620)
!8649 = !DILocation(line: 1101, column: 27, scope: !8620)
!8650 = !DILocation(line: 1101, column: 33, scope: !8620)
!8651 = !DILocation(line: 1101, column: 39, scope: !8620)
!8652 = !DILocation(line: 1101, column: 9, scope: !8620)
!8653 = !DILocation(line: 1103, column: 37, scope: !8620)
!8654 = !DILocation(line: 1103, column: 42, scope: !8620)
!8655 = !DILocation(line: 1103, column: 2, scope: !8620)
!8656 = !DILocation(line: 1104, column: 19, scope: !8620)
!8657 = !DILocation(line: 1104, column: 25, scope: !8620)
!8658 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !8622)
!8659 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !8622)
!8660 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !8622)
!8661 = !DILocation(line: 1106, column: 18, scope: !8620)
!8662 = !DILocation(line: 1106, column: 23, scope: !8620)
!8663 = !DILocation(line: 1106, column: 2, scope: !8620)
!8664 = !DILocation(line: 1109, column: 6, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 1109, column: 6)
!8666 = !DILocation(line: 1109, column: 16, scope: !8665)
!8667 = !DILocation(line: 1109, column: 19, scope: !8665)
!8668 = !DILocation(line: 1109, column: 6, scope: !8620)
!8669 = !DILocation(line: 1110, column: 15, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8665, file: !3, line: 1109, column: 44)
!8671 = !DILocation(line: 1110, column: 3, scope: !8670)
!8672 = !DILocation(line: 1111, column: 3, scope: !8670)
!8673 = !DILocation(line: 1114, column: 2, scope: !8620)
!8674 = !DILocation(line: 1115, column: 1, scope: !8620)
!8675 = distinct !DISubprogram(name: "ehci_resume", scope: !3, file: !3, line: 1119, type: !5427, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8676 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !8677)
!8677 = distinct !DILocation(line: 1173, column: 2, scope: !8675)
!8678 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !8679)
!8679 = distinct !DILocation(line: 1164, column: 2, scope: !8675)
!8680 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !8681)
!8681 = distinct !DILocation(line: 1152, column: 3, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8683, file: !3, line: 1138, column: 18)
!8683 = distinct !DILexicalBlock(scope: !8675, file: !3, line: 1137, column: 6)
!8684 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !8685)
!8685 = distinct !DILocation(line: 1143, column: 3, scope: !8682)
!8686 = !DILocalVariable(name: "hcd", arg: 1, scope: !8675, file: !3, line: 1119, type: !342)
!8687 = !DILocation(line: 1119, column: 33, scope: !8675)
!8688 = !DILocalVariable(name: "force_reset", arg: 2, scope: !8675, file: !3, line: 1119, type: !626)
!8689 = !DILocation(line: 1119, column: 43, scope: !8675)
!8690 = !DILocalVariable(name: "ehci", scope: !8675, file: !3, line: 1121, type: !5814)
!8691 = !DILocation(line: 1121, column: 20, scope: !8675)
!8692 = !DILocation(line: 1121, column: 39, scope: !8675)
!8693 = !DILocation(line: 1121, column: 27, scope: !8675)
!8694 = !DILocation(line: 1123, column: 6, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8675, file: !3, line: 1123, column: 6)
!8696 = !DILocation(line: 1123, column: 6, scope: !8675)
!8697 = !DILocation(line: 1124, column: 3, scope: !8695)
!8698 = !DILocation(line: 1127, column: 35, scope: !8675)
!8699 = !DILocation(line: 1127, column: 40, scope: !8675)
!8700 = !DILocation(line: 1127, column: 2, scope: !8675)
!8701 = !DILocation(line: 1129, column: 6, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8675, file: !3, line: 1129, column: 6)
!8703 = !DILocation(line: 1129, column: 12, scope: !8702)
!8704 = !DILocation(line: 1129, column: 6, scope: !8675)
!8705 = !DILocation(line: 1130, column: 3, scope: !8702)
!8706 = !DILocation(line: 1137, column: 17, scope: !8683)
!8707 = !DILocation(line: 1137, column: 24, scope: !8683)
!8708 = !DILocation(line: 1137, column: 30, scope: !8683)
!8709 = !DILocation(line: 1137, column: 36, scope: !8683)
!8710 = !DILocation(line: 1137, column: 6, scope: !8683)
!8711 = !DILocation(line: 1137, column: 53, scope: !8683)
!8712 = !DILocation(line: 1137, column: 64, scope: !8683)
!8713 = !DILocation(line: 1138, column: 5, scope: !8683)
!8714 = !DILocation(line: 1137, column: 6, scope: !8675)
!8715 = !DILocalVariable(name: "mask", scope: !8682, file: !3, line: 1139, type: !401)
!8716 = !DILocation(line: 1139, column: 7, scope: !8682)
!8717 = !DILocation(line: 1141, column: 3, scope: !8682)
!8718 = !DILocation(line: 1143, column: 18, scope: !8682)
!8719 = !DILocation(line: 1143, column: 24, scope: !8682)
!8720 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !8685)
!8721 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !8685)
!8722 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !8685)
!8723 = !DILocation(line: 1144, column: 7, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 1144, column: 7)
!8725 = !DILocation(line: 1144, column: 13, scope: !8724)
!8726 = !DILocation(line: 1144, column: 7, scope: !8682)
!8727 = !DILocation(line: 1145, column: 4, scope: !8724)
!8728 = !DILocation(line: 1147, column: 8, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 1147, column: 7)
!8730 = !DILocation(line: 1147, column: 13, scope: !8729)
!8731 = !DILocation(line: 1147, column: 18, scope: !8729)
!8732 = !DILocation(line: 1147, column: 28, scope: !8729)
!8733 = !DILocation(line: 1147, column: 7, scope: !8682)
!8734 = !DILocation(line: 1148, column: 9, scope: !8729)
!8735 = !DILocation(line: 1148, column: 4, scope: !8729)
!8736 = !DILocation(line: 1149, column: 15, scope: !8682)
!8737 = !DILocation(line: 1149, column: 21, scope: !8682)
!8738 = !DILocation(line: 1149, column: 28, scope: !8682)
!8739 = !DILocation(line: 1149, column: 34, scope: !8682)
!8740 = !DILocation(line: 1149, column: 40, scope: !8682)
!8741 = !DILocation(line: 1149, column: 3, scope: !8682)
!8742 = !DILocation(line: 1150, column: 14, scope: !8682)
!8743 = !DILocation(line: 1150, column: 21, scope: !8682)
!8744 = !DILocation(line: 1150, column: 27, scope: !8682)
!8745 = !DILocation(line: 1150, column: 33, scope: !8682)
!8746 = !DILocation(line: 1150, column: 3, scope: !8682)
!8747 = !DILabel(scope: !8682, name: "skip", file: !3, line: 1151)
!8748 = !DILocation(line: 1151, column: 2, scope: !8682)
!8749 = !DILocation(line: 1152, column: 20, scope: !8682)
!8750 = !DILocation(line: 1152, column: 26, scope: !8682)
!8751 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !8681)
!8752 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !8681)
!8753 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !8681)
!8754 = !DILocation(line: 1153, column: 3, scope: !8682)
!8755 = !DILocation(line: 1160, column: 26, scope: !8675)
!8756 = !DILocation(line: 1160, column: 31, scope: !8675)
!8757 = !DILocation(line: 1160, column: 36, scope: !8675)
!8758 = !DILocation(line: 1160, column: 2, scope: !8675)
!8759 = !DILocation(line: 1161, column: 19, scope: !8675)
!8760 = !DILocation(line: 1161, column: 9, scope: !8675)
!8761 = !DILocation(line: 1162, column: 20, scope: !8675)
!8762 = !DILocation(line: 1162, column: 9, scope: !8675)
!8763 = !DILocation(line: 1164, column: 17, scope: !8675)
!8764 = !DILocation(line: 1164, column: 23, scope: !8675)
!8765 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !8679)
!8766 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !8679)
!8767 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !8679)
!8768 = !DILocation(line: 1165, column: 6, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8675, file: !3, line: 1165, column: 6)
!8770 = !DILocation(line: 1165, column: 12, scope: !8769)
!8771 = !DILocation(line: 1165, column: 6, scope: !8675)
!8772 = !DILocation(line: 1166, column: 3, scope: !8769)
!8773 = !DILocation(line: 1168, column: 14, scope: !8675)
!8774 = !DILocation(line: 1168, column: 20, scope: !8675)
!8775 = !DILocation(line: 1168, column: 26, scope: !8675)
!8776 = !DILocation(line: 1168, column: 36, scope: !8675)
!8777 = !DILocation(line: 1168, column: 42, scope: !8675)
!8778 = !DILocation(line: 1168, column: 48, scope: !8675)
!8779 = !DILocation(line: 1168, column: 2, scope: !8675)
!8780 = !DILocation(line: 1169, column: 14, scope: !8675)
!8781 = !DILocation(line: 1169, column: 30, scope: !8675)
!8782 = !DILocation(line: 1169, column: 36, scope: !8675)
!8783 = !DILocation(line: 1169, column: 42, scope: !8675)
!8784 = !DILocation(line: 1169, column: 2, scope: !8675)
!8785 = !DILocation(line: 1170, column: 13, scope: !8675)
!8786 = !DILocation(line: 1170, column: 20, scope: !8675)
!8787 = !DILocation(line: 1170, column: 26, scope: !8675)
!8788 = !DILocation(line: 1170, column: 32, scope: !8675)
!8789 = !DILocation(line: 1170, column: 2, scope: !8675)
!8790 = !DILocation(line: 1172, column: 2, scope: !8675)
!8791 = !DILocation(line: 1172, column: 8, scope: !8675)
!8792 = !DILocation(line: 1172, column: 17, scope: !8675)
!8793 = !DILocation(line: 1173, column: 19, scope: !8675)
!8794 = !DILocation(line: 1173, column: 25, scope: !8675)
!8795 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !8677)
!8796 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !8677)
!8797 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !8677)
!8798 = !DILocation(line: 1175, column: 2, scope: !8675)
!8799 = !DILocation(line: 1176, column: 1, scope: !8675)
!8800 = distinct !DISubprogram(name: "ehci_init_driver", scope: !3, file: !3, line: 1238, type: !8801, scopeLine: 1240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8801 = !DISubroutineType(types: !8802)
!8802 = !{null, !8803, !8804}
!8803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5409, size: 64)
!8804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8805, size: 64)
!8805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8806)
!8806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_driver_overrides", file: !6, line: 872, size: 192, elements: !8807)
!8807 = !{!8808, !8809, !8810}
!8808 = !DIDerivedType(tag: DW_TAG_member, name: "extra_priv_size", scope: !8806, file: !6, line: 873, baseType: !462, size: 64)
!8809 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8806, file: !6, line: 874, baseType: !5421, size: 64, offset: 64)
!8810 = !DIDerivedType(tag: DW_TAG_member, name: "port_power", scope: !8806, file: !6, line: 875, baseType: !5524, size: 64, offset: 128)
!8811 = !DILocalVariable(name: "drv", arg: 1, scope: !8800, file: !3, line: 1238, type: !8803)
!8812 = !DILocation(line: 1238, column: 41, scope: !8800)
!8813 = !DILocalVariable(name: "over", arg: 2, scope: !8800, file: !3, line: 1239, type: !8804)
!8814 = !DILocation(line: 1239, column: 39, scope: !8800)
!8815 = !DILocation(line: 1242, column: 3, scope: !8800)
!8816 = !DILocation(line: 1242, column: 9, scope: !8800)
!8817 = !DILocation(line: 1244, column: 6, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8800, file: !3, line: 1244, column: 6)
!8819 = !DILocation(line: 1244, column: 6, scope: !8800)
!8820 = !DILocation(line: 1245, column: 25, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8818, file: !3, line: 1244, column: 12)
!8822 = !DILocation(line: 1245, column: 31, scope: !8821)
!8823 = !DILocation(line: 1245, column: 3, scope: !8821)
!8824 = !DILocation(line: 1245, column: 8, scope: !8821)
!8825 = !DILocation(line: 1245, column: 22, scope: !8821)
!8826 = !DILocation(line: 1246, column: 7, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8821, file: !3, line: 1246, column: 7)
!8828 = !DILocation(line: 1246, column: 13, scope: !8827)
!8829 = !DILocation(line: 1246, column: 7, scope: !8821)
!8830 = !DILocation(line: 1247, column: 17, scope: !8827)
!8831 = !DILocation(line: 1247, column: 23, scope: !8827)
!8832 = !DILocation(line: 1247, column: 4, scope: !8827)
!8833 = !DILocation(line: 1247, column: 9, scope: !8827)
!8834 = !DILocation(line: 1247, column: 15, scope: !8827)
!8835 = !DILocation(line: 1248, column: 7, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8821, file: !3, line: 1248, column: 7)
!8837 = !DILocation(line: 1248, column: 13, scope: !8836)
!8838 = !DILocation(line: 1248, column: 7, scope: !8821)
!8839 = !DILocation(line: 1249, column: 22, scope: !8836)
!8840 = !DILocation(line: 1249, column: 28, scope: !8836)
!8841 = !DILocation(line: 1249, column: 4, scope: !8836)
!8842 = !DILocation(line: 1249, column: 9, scope: !8836)
!8843 = !DILocation(line: 1249, column: 20, scope: !8836)
!8844 = !DILocation(line: 1250, column: 2, scope: !8821)
!8845 = !DILocation(line: 1251, column: 1, scope: !8800)
!8846 = distinct !DISubprogram(name: "ehci_hcd_init", scope: !3, file: !3, line: 1290, type: !8847, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8847 = !DISubroutineType(types: !8848)
!8848 = !{!401}
!8849 = !DILocalVariable(name: "retval", scope: !8846, file: !3, line: 1292, type: !401)
!8850 = !DILocation(line: 1292, column: 6, scope: !8846)
!8851 = !DILocation(line: 1294, column: 6, scope: !8852)
!8852 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 1294, column: 6)
!8853 = !DILocation(line: 1294, column: 6, scope: !8846)
!8854 = !DILocation(line: 1295, column: 3, scope: !8852)
!8855 = !DILocation(line: 1297, column: 2, scope: !8846)
!8856 = !DILocation(line: 1298, column: 2, scope: !8846)
!8857 = !DILocation(line: 1299, column: 6, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 1299, column: 6)
!8859 = !DILocation(line: 1299, column: 50, scope: !8858)
!8860 = !DILocation(line: 1300, column: 4, scope: !8858)
!8861 = !DILocation(line: 1299, column: 6, scope: !8846)
!8862 = !DILocation(line: 1301, column: 3, scope: !8858)
!8863 = !DILocation(line: 1304, column: 2, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 1304, column: 2)
!8865 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 1304, column: 2)
!8866 = !DILocation(line: 1304, column: 2, scope: !8865)
!8867 = !DILocation(line: 1336, column: 9, scope: !8846)
!8868 = !DILocation(line: 1336, column: 2, scope: !8846)
!8869 = !DILocation(line: 1360, column: 1, scope: !8846)
!8870 = distinct !DISubprogram(name: "ehci_hcd_cleanup", scope: !3, file: !3, line: 1363, type: !3168, scopeLine: 1364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8871 = !DILocation(line: 1380, column: 2, scope: !8870)
!8872 = !DILocation(line: 1381, column: 1, scope: !8870)
!8873 = distinct !DISubprogram(name: "imx28_ehci_writel", scope: !6, file: !6, line: 757, type: !8874, scopeLine: 759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8874 = !DISubroutineType(types: !8875)
!8875 = !{null, !1711, !8876}
!8876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8877, size: 64)
!8877 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !305)
!8878 = !DILocalVariable(name: "val", arg: 1, scope: !8873, file: !6, line: 757, type: !1711)
!8879 = !DILocation(line: 757, column: 57, scope: !8873)
!8880 = !DILocalVariable(name: "addr", arg: 2, scope: !8873, file: !6, line: 758, type: !8876)
!8881 = !DILocation(line: 758, column: 27, scope: !8873)
!8882 = !DILocation(line: 760, column: 1, scope: !8873)
!8883 = distinct !DISubprogram(name: "writel", scope: !8165, file: !8165, line: 67, type: !8884, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8884 = !DISubroutineType(types: !8885)
!8885 = !{null, !7, !8886}
!8886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7869, size: 64)
!8887 = !DILocalVariable(name: "val", arg: 1, scope: !8883, file: !8165, line: 67, type: !7)
!8888 = !DILocation(line: 67, column: 1, scope: !8883)
!8889 = !DILocalVariable(name: "addr", arg: 2, scope: !8883, file: !8165, line: 67, type: !8886)
!8890 = !{i32 -2143395538}
!8891 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !7839, file: !7839, line: 656, type: !3168, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8892 = !DILocalVariable(name: "__edi", scope: !8893, file: !7839, line: 658, type: !465)
!8893 = distinct !DILexicalBlock(scope: !8891, file: !7839, line: 658, column: 2)
!8894 = !DILocation(line: 658, column: 2, scope: !8893)
!8895 = !DILocalVariable(name: "__esi", scope: !8893, file: !7839, line: 658, type: !465)
!8896 = !DILocalVariable(name: "__edx", scope: !8893, file: !7839, line: 658, type: !465)
!8897 = !DILocalVariable(name: "__ecx", scope: !8893, file: !7839, line: 658, type: !465)
!8898 = !DILocalVariable(name: "__eax", scope: !8893, file: !7839, line: 658, type: !465)
!8899 = !{i32 -2145745587, i32 -2145744855, i32 -2145744621, i32 -2145744570, i32 -2145744542, i32 -2145744517, i32 -2145744833, i32 -2145744820, i32 -2145744382, i32 -2145744263, i32 -2145744728, i32 -2145744701, i32 -2145744673, i32 -2145744643}
!8900 = !DILocation(line: 659, column: 1, scope: !8891)
!8901 = distinct !DISubprogram(name: "arch_local_irq_enable", scope: !7839, file: !7839, line: 661, type: !3168, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8902 = !DILocalVariable(name: "__edi", scope: !8903, file: !7839, line: 663, type: !465)
!8903 = distinct !DILexicalBlock(scope: !8901, file: !7839, line: 663, column: 2)
!8904 = !DILocation(line: 663, column: 2, scope: !8903)
!8905 = !DILocalVariable(name: "__esi", scope: !8903, file: !7839, line: 663, type: !465)
!8906 = !DILocalVariable(name: "__edx", scope: !8903, file: !7839, line: 663, type: !465)
!8907 = !DILocalVariable(name: "__ecx", scope: !8903, file: !7839, line: 663, type: !465)
!8908 = !DILocalVariable(name: "__eax", scope: !8903, file: !7839, line: 663, type: !465)
!8909 = !{i32 -2145743003, i32 -2145742273, i32 -2145742039, i32 -2145741988, i32 -2145741960, i32 -2145741935, i32 -2145742251, i32 -2145742238, i32 -2145741800, i32 -2145741681, i32 -2145742146, i32 -2145742119, i32 -2145742091, i32 -2145742061}
!8910 = !DILocation(line: 664, column: 1, scope: !8901)
!8911 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !7839, file: !7839, line: 646, type: !7840, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8912 = !DILocalVariable(name: "__ret", scope: !8913, file: !7839, line: 648, type: !465)
!8913 = distinct !DILexicalBlock(scope: !8911, file: !7839, line: 648, column: 9)
!8914 = !DILocation(line: 648, column: 9, scope: !8913)
!8915 = !DILocalVariable(name: "__edi", scope: !8913, file: !7839, line: 648, type: !465)
!8916 = !DILocalVariable(name: "__esi", scope: !8913, file: !7839, line: 648, type: !465)
!8917 = !DILocalVariable(name: "__edx", scope: !8913, file: !7839, line: 648, type: !465)
!8918 = !DILocalVariable(name: "__ecx", scope: !8913, file: !7839, line: 648, type: !465)
!8919 = !DILocalVariable(name: "__eax", scope: !8913, file: !7839, line: 648, type: !465)
!8920 = !DILocation(line: 648, column: 9, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !7839, line: 648, column: 9)
!8922 = distinct !DILexicalBlock(scope: !8913, file: !7839, line: 648, column: 9)
!8923 = !{i32 -2145752681, i32 -2145750366, i32 -2145750132, i32 -2145750081, i32 -2145750053, i32 -2145750028, i32 -2145750344, i32 -2145750331, i32 -2145749893, i32 -2145749774, i32 -2145750239, i32 -2145750212, i32 -2145750184, i32 -2145750154}
!8924 = !DILocalVariable(name: "__mask", scope: !8925, file: !7839, line: 648, type: !465)
!8925 = distinct !DILexicalBlock(scope: !8921, file: !7839, line: 648, column: 9)
!8926 = !DILocation(line: 648, column: 9, scope: !8925)
!8927 = !DILocation(line: 648, column: 9, scope: !8922)
!8928 = !DILocation(line: 648, column: 2, scope: !8911)
!8929 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !7839, file: !7839, line: 651, type: !5788, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8930 = !DILocalVariable(name: "f", arg: 1, scope: !8929, file: !7839, line: 651, type: !465)
!8931 = !DILocation(line: 651, column: 65, scope: !8929)
!8932 = !DILocalVariable(name: "__edi", scope: !8933, file: !7839, line: 653, type: !465)
!8933 = distinct !DILexicalBlock(scope: !8929, file: !7839, line: 653, column: 2)
!8934 = !DILocation(line: 653, column: 2, scope: !8933)
!8935 = !DILocalVariable(name: "__esi", scope: !8933, file: !7839, line: 653, type: !465)
!8936 = !DILocalVariable(name: "__edx", scope: !8933, file: !7839, line: 653, type: !465)
!8937 = !DILocalVariable(name: "__ecx", scope: !8933, file: !7839, line: 653, type: !465)
!8938 = !DILocalVariable(name: "__eax", scope: !8933, file: !7839, line: 653, type: !465)
!8939 = !{i32 -2145748214, i32 -2145747464, i32 -2145747230, i32 -2145747179, i32 -2145747151, i32 -2145747126, i32 -2145747442, i32 -2145747429, i32 -2145746991, i32 -2145746872, i32 -2145747337, i32 -2145747310, i32 -2145747282, i32 -2145747252}
!8940 = !DILocation(line: 654, column: 1, scope: !8929)
!8941 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !6729, file: !6729, line: 308, type: !6730, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8942 = !DILocalVariable(name: "m", arg: 1, scope: !8941, file: !6729, line: 308, type: !1711)
!8943 = !DILocation(line: 308, column: 66, scope: !8941)
!8944 = !DILocation(line: 310, column: 10, scope: !8941)
!8945 = !DILocation(line: 310, column: 12, scope: !8941)
!8946 = !DILocation(line: 310, column: 34, scope: !8941)
!8947 = !DILocation(line: 310, column: 39, scope: !8941)
!8948 = !DILocation(line: 310, column: 2, scope: !8941)
!8949 = distinct !DISubprogram(name: "kasan_check_write", scope: !8950, file: !8950, line: 38, type: !8951, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8950 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8951 = !DISubroutineType(types: !8952)
!8952 = !{!626, !7867, !7}
!8953 = !DILocalVariable(name: "p", arg: 1, scope: !8949, file: !8950, line: 38, type: !7867)
!8954 = !DILocation(line: 38, column: 59, scope: !8949)
!8955 = !DILocalVariable(name: "size", arg: 2, scope: !8949, file: !8950, line: 38, type: !7)
!8956 = !DILocation(line: 38, column: 75, scope: !8949)
!8957 = !DILocation(line: 40, column: 2, scope: !8949)
!8958 = distinct !DISubprogram(name: "kcsan_check_access", scope: !8959, file: !8959, line: 178, type: !8960, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8959 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!8960 = !DISubroutineType(types: !8961)
!8961 = !{null, !7867, !462, !401}
!8962 = !DILocalVariable(name: "ptr", arg: 1, scope: !8958, file: !8959, line: 178, type: !7867)
!8963 = !DILocation(line: 178, column: 60, scope: !8958)
!8964 = !DILocalVariable(name: "size", arg: 2, scope: !8958, file: !8959, line: 178, type: !462)
!8965 = !DILocation(line: 178, column: 72, scope: !8958)
!8966 = !DILocalVariable(name: "type", arg: 3, scope: !8958, file: !8959, line: 179, type: !401)
!8967 = !DILocation(line: 179, column: 15, scope: !8958)
!8968 = !DILocation(line: 179, column: 23, scope: !8958)
!8969 = distinct !DISubprogram(name: "kasan_check_read", scope: !8950, file: !8950, line: 34, type: !8951, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8970 = !DILocalVariable(name: "p", arg: 1, scope: !8969, file: !8950, line: 34, type: !7867)
!8971 = !DILocation(line: 34, column: 58, scope: !8969)
!8972 = !DILocalVariable(name: "size", arg: 2, scope: !8969, file: !8950, line: 34, type: !7)
!8973 = !DILocation(line: 34, column: 74, scope: !8969)
!8974 = !DILocation(line: 36, column: 2, scope: !8969)
!8975 = distinct !DISubprogram(name: "set_ohci_hcfs", scope: !6, file: !6, line: 797, type: !8976, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8976 = !DISubroutineType(types: !8977)
!8977 = !{null, !5814, !401}
!8978 = !DILocalVariable(name: "ehci", arg: 1, scope: !8975, file: !6, line: 797, type: !5814)
!8979 = !DILocation(line: 797, column: 51, scope: !8975)
!8980 = !DILocalVariable(name: "operational", arg: 2, scope: !8975, file: !6, line: 797, type: !401)
!8981 = !DILocation(line: 797, column: 61, scope: !8975)
!8982 = !DILocation(line: 798, column: 3, scope: !8975)
!8983 = distinct !DISubprogram(name: "ehci_hrtimer_func", scope: !6232, file: !6232, line: 398, type: !2434, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!8984 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !8985)
!8985 = distinct !DILocation(line: 424, column: 2, scope: !8983)
!8986 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !8985)
!8987 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !8988)
!8988 = distinct !DILocation(line: 406, column: 2, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8990, file: !6232, line: 406, column: 2)
!8990 = distinct !DILexicalBlock(scope: !8991, file: !6232, line: 406, column: 2)
!8991 = distinct !DILexicalBlock(scope: !8992, file: !6232, line: 406, column: 2)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !6232, line: 406, column: 2)
!8993 = distinct !DILexicalBlock(scope: !8983, file: !6232, line: 406, column: 2)
!8994 = !DILocalVariable(name: "t", arg: 1, scope: !8983, file: !6232, line: 398, type: !2436)
!8995 = !DILocation(line: 398, column: 63, scope: !8983)
!8996 = !DILocalVariable(name: "ehci", scope: !8983, file: !6232, line: 400, type: !5814)
!8997 = !DILocation(line: 400, column: 19, scope: !8983)
!8998 = !DILocalVariable(name: "__mptr", scope: !8999, file: !6232, line: 400, type: !341)
!8999 = distinct !DILexicalBlock(scope: !8983, file: !6232, line: 400, column: 26)
!9000 = !DILocation(line: 400, column: 26, scope: !8999)
!9001 = !DILocation(line: 400, column: 26, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8999, file: !6232, line: 400, column: 26)
!9003 = !DILocalVariable(name: "now", scope: !8983, file: !6232, line: 401, type: !2429)
!9004 = !DILocation(line: 401, column: 11, scope: !8983)
!9005 = !DILocalVariable(name: "events", scope: !8983, file: !6232, line: 402, type: !465)
!9006 = !DILocation(line: 402, column: 16, scope: !8983)
!9007 = !DILocalVariable(name: "flags", scope: !8983, file: !6232, line: 403, type: !465)
!9008 = !DILocation(line: 403, column: 16, scope: !8983)
!9009 = !DILocalVariable(name: "e", scope: !8983, file: !6232, line: 404, type: !7)
!9010 = !DILocation(line: 404, column: 11, scope: !8983)
!9011 = !DILocation(line: 406, column: 2, scope: !8983)
!9012 = !DILocation(line: 406, column: 2, scope: !8993)
!9013 = !DILocalVariable(name: "__dummy", scope: !9014, file: !6232, line: 406, type: !465)
!9014 = distinct !DILexicalBlock(scope: !8992, file: !6232, line: 406, column: 2)
!9015 = !DILocation(line: 406, column: 2, scope: !9014)
!9016 = !DILocalVariable(name: "__dummy2", scope: !9014, file: !6232, line: 406, type: !465)
!9017 = !DILocation(line: 406, column: 2, scope: !8992)
!9018 = !DILocation(line: 406, column: 2, scope: !8991)
!9019 = !DILocation(line: 406, column: 2, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !8991, file: !6232, line: 406, column: 2)
!9021 = !DILocalVariable(name: "__dummy", scope: !9022, file: !6232, line: 406, type: !465)
!9022 = distinct !DILexicalBlock(scope: !9023, file: !6232, line: 406, column: 2)
!9023 = distinct !DILexicalBlock(scope: !9020, file: !6232, line: 406, column: 2)
!9024 = !DILocation(line: 406, column: 2, scope: !9022)
!9025 = !DILocalVariable(name: "__dummy2", scope: !9022, file: !6232, line: 406, type: !465)
!9026 = !DILocation(line: 406, column: 2, scope: !9023)
!9027 = !DILocation(line: 406, column: 2, scope: !8990)
!9028 = !{i32 -2140066528}
!9029 = !DILocation(line: 406, column: 2, scope: !8989)
!9030 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !8988)
!9031 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !8988)
!9032 = !DILocation(line: 408, column: 11, scope: !8983)
!9033 = !DILocation(line: 408, column: 17, scope: !8983)
!9034 = !DILocation(line: 408, column: 9, scope: !8983)
!9035 = !DILocation(line: 409, column: 2, scope: !8983)
!9036 = !DILocation(line: 409, column: 8, scope: !8983)
!9037 = !DILocation(line: 409, column: 31, scope: !8983)
!9038 = !DILocation(line: 410, column: 2, scope: !8983)
!9039 = !DILocation(line: 410, column: 8, scope: !8983)
!9040 = !DILocation(line: 410, column: 27, scope: !8983)
!9041 = !DILocation(line: 416, column: 8, scope: !8983)
!9042 = !DILocation(line: 416, column: 6, scope: !8983)
!9043 = !DILocation(line: 417, column: 2, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !8983, file: !6232, line: 417, column: 2)
!9045 = !DILocation(line: 417, column: 2, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9044, file: !6232, line: 417, column: 2)
!9047 = !DILocation(line: 418, column: 21, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9049, file: !6232, line: 418, column: 7)
!9049 = distinct !DILexicalBlock(scope: !9046, file: !6232, line: 417, column: 56)
!9050 = !DILocation(line: 418, column: 26, scope: !9048)
!9051 = !DILocation(line: 418, column: 32, scope: !9048)
!9052 = !DILocation(line: 418, column: 44, scope: !9048)
!9053 = !DILocation(line: 418, column: 7, scope: !9048)
!9054 = !DILocation(line: 418, column: 48, scope: !9048)
!9055 = !DILocation(line: 418, column: 7, scope: !9049)
!9056 = !DILocation(line: 419, column: 19, scope: !9048)
!9057 = !DILocation(line: 419, column: 4, scope: !9048)
!9058 = !DILocation(line: 419, column: 22, scope: !9048)
!9059 = !DILocation(line: 421, column: 22, scope: !9048)
!9060 = !DILocation(line: 421, column: 28, scope: !9048)
!9061 = !DILocation(line: 421, column: 4, scope: !9048)
!9062 = !DILocation(line: 422, column: 2, scope: !9049)
!9063 = distinct !{!9063, !9043, !9064}
!9064 = !DILocation(line: 422, column: 2, scope: !9044)
!9065 = !DILocation(line: 424, column: 26, scope: !8983)
!9066 = !DILocation(line: 424, column: 32, scope: !8983)
!9067 = !DILocation(line: 424, column: 38, scope: !8983)
!9068 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !8985)
!9069 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !8985)
!9070 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !8985)
!9071 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !8985)
!9072 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !8985)
!9073 = !DILocation(line: 425, column: 2, scope: !8983)
!9074 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !9075, file: !9075, line: 33, type: !9076, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!9075 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!9076 = !DISubroutineType(types: !9077)
!9077 = !{null, !365}
!9078 = !DILocalVariable(name: "list", arg: 1, scope: !9074, file: !9075, line: 33, type: !365)
!9079 = !DILocation(line: 33, column: 53, scope: !9074)
!9080 = !DILocation(line: 35, column: 2, scope: !9074)
!9081 = !DILocation(line: 35, column: 2, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9074, file: !9075, line: 35, column: 2)
!9083 = !DILocation(line: 35, column: 2, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9082, file: !9075, line: 35, column: 2)
!9085 = !DILocation(line: 35, column: 2, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9082, file: !9075, line: 35, column: 2)
!9087 = !DILocation(line: 36, column: 15, scope: !9074)
!9088 = !DILocation(line: 36, column: 2, scope: !9074)
!9089 = !DILocation(line: 36, column: 8, scope: !9074)
!9090 = !DILocation(line: 36, column: 13, scope: !9074)
!9091 = !DILocation(line: 37, column: 1, scope: !9074)
!9092 = distinct !DISubprogram(name: "ehci_mem_init", scope: !8545, file: !8545, line: 139, type: !9093, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!9093 = !DISubroutineType(types: !9094)
!9094 = !{!401, !5814, !946}
!9095 = !DILocalVariable(name: "ehci", arg: 1, scope: !9092, file: !8545, line: 139, type: !5814)
!9096 = !DILocation(line: 139, column: 44, scope: !9092)
!9097 = !DILocalVariable(name: "flags", arg: 2, scope: !9092, file: !8545, line: 139, type: !946)
!9098 = !DILocation(line: 139, column: 56, scope: !9092)
!9099 = !DILocalVariable(name: "i", scope: !9092, file: !8545, line: 141, type: !401)
!9100 = !DILocation(line: 141, column: 6, scope: !9092)
!9101 = !DILocation(line: 145, column: 16, scope: !9092)
!9102 = !DILocation(line: 145, column: 4, scope: !9092)
!9103 = !DILocation(line: 145, column: 23, scope: !9092)
!9104 = !DILocation(line: 145, column: 28, scope: !9092)
!9105 = !DILocation(line: 144, column: 19, scope: !9092)
!9106 = !DILocation(line: 144, column: 2, scope: !9092)
!9107 = !DILocation(line: 144, column: 8, scope: !9092)
!9108 = !DILocation(line: 144, column: 17, scope: !9092)
!9109 = !DILocation(line: 149, column: 7, scope: !9110)
!9110 = distinct !DILexicalBlock(scope: !9092, file: !8545, line: 149, column: 6)
!9111 = !DILocation(line: 149, column: 13, scope: !9110)
!9112 = !DILocation(line: 149, column: 6, scope: !9092)
!9113 = !DILocation(line: 150, column: 3, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9110, file: !8545, line: 149, column: 23)
!9115 = !DILocation(line: 155, column: 16, scope: !9092)
!9116 = !DILocation(line: 155, column: 4, scope: !9092)
!9117 = !DILocation(line: 155, column: 23, scope: !9092)
!9118 = !DILocation(line: 155, column: 28, scope: !9092)
!9119 = !DILocation(line: 154, column: 18, scope: !9092)
!9120 = !DILocation(line: 154, column: 2, scope: !9092)
!9121 = !DILocation(line: 154, column: 8, scope: !9092)
!9122 = !DILocation(line: 154, column: 16, scope: !9092)
!9123 = !DILocation(line: 159, column: 7, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9092, file: !8545, line: 159, column: 6)
!9125 = !DILocation(line: 159, column: 13, scope: !9124)
!9126 = !DILocation(line: 159, column: 6, scope: !9092)
!9127 = !DILocation(line: 160, column: 3, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9124, file: !8545, line: 159, column: 22)
!9129 = !DILocation(line: 162, column: 31, scope: !9092)
!9130 = !DILocation(line: 162, column: 37, scope: !9092)
!9131 = !DILocation(line: 162, column: 16, scope: !9092)
!9132 = !DILocation(line: 162, column: 2, scope: !9092)
!9133 = !DILocation(line: 162, column: 8, scope: !9092)
!9134 = !DILocation(line: 162, column: 14, scope: !9092)
!9135 = !DILocation(line: 163, column: 7, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9092, file: !8545, line: 163, column: 6)
!9137 = !DILocation(line: 163, column: 13, scope: !9136)
!9138 = !DILocation(line: 163, column: 6, scope: !9092)
!9139 = !DILocation(line: 164, column: 3, scope: !9140)
!9140 = distinct !DILexicalBlock(scope: !9136, file: !8545, line: 163, column: 20)
!9141 = !DILocation(line: 169, column: 16, scope: !9092)
!9142 = !DILocation(line: 169, column: 4, scope: !9092)
!9143 = !DILocation(line: 169, column: 23, scope: !9092)
!9144 = !DILocation(line: 169, column: 28, scope: !9092)
!9145 = !DILocation(line: 168, column: 19, scope: !9092)
!9146 = !DILocation(line: 168, column: 2, scope: !9092)
!9147 = !DILocation(line: 168, column: 8, scope: !9092)
!9148 = !DILocation(line: 168, column: 17, scope: !9092)
!9149 = !DILocation(line: 173, column: 7, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9092, file: !8545, line: 173, column: 6)
!9151 = !DILocation(line: 173, column: 13, scope: !9150)
!9152 = !DILocation(line: 173, column: 6, scope: !9092)
!9153 = !DILocation(line: 174, column: 3, scope: !9154)
!9154 = distinct !DILexicalBlock(scope: !9150, file: !8545, line: 173, column: 23)
!9155 = !DILocation(line: 179, column: 16, scope: !9092)
!9156 = !DILocation(line: 179, column: 4, scope: !9092)
!9157 = !DILocation(line: 179, column: 23, scope: !9092)
!9158 = !DILocation(line: 179, column: 28, scope: !9092)
!9159 = !DILocation(line: 178, column: 20, scope: !9092)
!9160 = !DILocation(line: 178, column: 2, scope: !9092)
!9161 = !DILocation(line: 178, column: 8, scope: !9092)
!9162 = !DILocation(line: 178, column: 18, scope: !9092)
!9163 = !DILocation(line: 183, column: 7, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9092, file: !8545, line: 183, column: 6)
!9165 = !DILocation(line: 183, column: 13, scope: !9164)
!9166 = !DILocation(line: 183, column: 6, scope: !9092)
!9167 = !DILocation(line: 184, column: 3, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9164, file: !8545, line: 183, column: 24)
!9169 = !DILocation(line: 189, column: 34, scope: !9092)
!9170 = !DILocation(line: 189, column: 22, scope: !9092)
!9171 = !DILocation(line: 189, column: 41, scope: !9092)
!9172 = !DILocation(line: 189, column: 46, scope: !9092)
!9173 = !DILocation(line: 190, column: 4, scope: !9092)
!9174 = !DILocation(line: 190, column: 10, scope: !9092)
!9175 = !DILocation(line: 190, column: 24, scope: !9092)
!9176 = !DILocation(line: 191, column: 5, scope: !9092)
!9177 = !DILocation(line: 191, column: 11, scope: !9092)
!9178 = !DILocation(line: 191, column: 25, scope: !9092)
!9179 = !DILocation(line: 189, column: 3, scope: !9092)
!9180 = !DILocation(line: 188, column: 19, scope: !9092)
!9181 = !DILocation(line: 188, column: 2, scope: !9092)
!9182 = !DILocation(line: 188, column: 8, scope: !9092)
!9183 = !DILocation(line: 188, column: 17, scope: !9092)
!9184 = !DILocation(line: 192, column: 6, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9092, file: !8545, line: 192, column: 6)
!9186 = !DILocation(line: 192, column: 12, scope: !9185)
!9187 = !DILocation(line: 192, column: 21, scope: !9185)
!9188 = !DILocation(line: 192, column: 6, scope: !9092)
!9189 = !DILocation(line: 193, column: 3, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9185, file: !8545, line: 192, column: 30)
!9191 = !DILocation(line: 196, column: 6, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9092, file: !8545, line: 196, column: 6)
!9193 = !DILocation(line: 196, column: 12, scope: !9192)
!9194 = !DILocation(line: 196, column: 6, scope: !9092)
!9195 = !DILocalVariable(name: "hw", scope: !9196, file: !8545, line: 197, type: !5888)
!9196 = distinct !DILexicalBlock(scope: !9192, file: !8545, line: 196, column: 26)
!9197 = !DILocation(line: 197, column: 22, scope: !9196)
!9198 = !DILocation(line: 198, column: 31, scope: !9196)
!9199 = !DILocation(line: 198, column: 37, scope: !9196)
!9200 = !DILocation(line: 198, column: 17, scope: !9196)
!9201 = !DILocation(line: 198, column: 3, scope: !9196)
!9202 = !DILocation(line: 198, column: 9, scope: !9196)
!9203 = !DILocation(line: 198, column: 15, scope: !9196)
!9204 = !DILocation(line: 199, column: 8, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9196, file: !8545, line: 199, column: 7)
!9206 = !DILocation(line: 199, column: 14, scope: !9205)
!9207 = !DILocation(line: 199, column: 7, scope: !9196)
!9208 = !DILocation(line: 200, column: 4, scope: !9205)
!9209 = !DILocation(line: 202, column: 8, scope: !9196)
!9210 = !DILocation(line: 202, column: 14, scope: !9196)
!9211 = !DILocation(line: 202, column: 21, scope: !9196)
!9212 = !DILocation(line: 202, column: 6, scope: !9196)
!9213 = !DILocation(line: 203, column: 17, scope: !9196)
!9214 = !DILocation(line: 203, column: 3, scope: !9196)
!9215 = !DILocation(line: 203, column: 7, scope: !9196)
!9216 = !DILocation(line: 203, column: 15, scope: !9196)
!9217 = !DILocation(line: 204, column: 21, scope: !9196)
!9218 = !DILocation(line: 204, column: 3, scope: !9196)
!9219 = !DILocation(line: 204, column: 7, scope: !9196)
!9220 = !DILocation(line: 204, column: 19, scope: !9196)
!9221 = !DILocation(line: 205, column: 21, scope: !9196)
!9222 = !DILocation(line: 205, column: 3, scope: !9196)
!9223 = !DILocation(line: 205, column: 7, scope: !9196)
!9224 = !DILocation(line: 205, column: 19, scope: !9196)
!9225 = !DILocation(line: 206, column: 21, scope: !9196)
!9226 = !DILocation(line: 206, column: 3, scope: !9196)
!9227 = !DILocation(line: 206, column: 9, scope: !9196)
!9228 = !DILocation(line: 206, column: 16, scope: !9196)
!9229 = !DILocation(line: 206, column: 19, scope: !9196)
!9230 = !DILocation(line: 208, column: 10, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9196, file: !8545, line: 208, column: 3)
!9232 = !DILocation(line: 208, column: 8, scope: !9231)
!9233 = !DILocation(line: 208, column: 15, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9231, file: !8545, line: 208, column: 3)
!9235 = !DILocation(line: 208, column: 19, scope: !9234)
!9236 = !DILocation(line: 208, column: 25, scope: !9234)
!9237 = !DILocation(line: 208, column: 17, scope: !9234)
!9238 = !DILocation(line: 208, column: 3, scope: !9231)
!9239 = !DILocation(line: 209, column: 36, scope: !9234)
!9240 = !DILocation(line: 210, column: 6, scope: !9234)
!9241 = !DILocation(line: 210, column: 12, scope: !9234)
!9242 = !DILocation(line: 210, column: 19, scope: !9234)
!9243 = !DILocation(line: 209, column: 24, scope: !9234)
!9244 = !DILocation(line: 209, column: 4, scope: !9234)
!9245 = !DILocation(line: 209, column: 10, scope: !9234)
!9246 = !DILocation(line: 209, column: 19, scope: !9234)
!9247 = !DILocation(line: 209, column: 22, scope: !9234)
!9248 = !DILocation(line: 208, column: 41, scope: !9234)
!9249 = !DILocation(line: 208, column: 3, scope: !9234)
!9250 = distinct !{!9250, !9238, !9251}
!9251 = !DILocation(line: 210, column: 25, scope: !9231)
!9252 = !DILocation(line: 211, column: 2, scope: !9196)
!9253 = !DILocation(line: 212, column: 10, scope: !9254)
!9254 = distinct !DILexicalBlock(scope: !9255, file: !8545, line: 212, column: 3)
!9255 = distinct !DILexicalBlock(scope: !9192, file: !8545, line: 211, column: 9)
!9256 = !DILocation(line: 212, column: 8, scope: !9254)
!9257 = !DILocation(line: 212, column: 15, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9254, file: !8545, line: 212, column: 3)
!9259 = !DILocation(line: 212, column: 19, scope: !9258)
!9260 = !DILocation(line: 212, column: 25, scope: !9258)
!9261 = !DILocation(line: 212, column: 17, scope: !9258)
!9262 = !DILocation(line: 212, column: 3, scope: !9254)
!9263 = !DILocation(line: 213, column: 24, scope: !9258)
!9264 = !DILocation(line: 213, column: 4, scope: !9258)
!9265 = !DILocation(line: 213, column: 10, scope: !9258)
!9266 = !DILocation(line: 213, column: 19, scope: !9258)
!9267 = !DILocation(line: 213, column: 22, scope: !9258)
!9268 = !DILocation(line: 212, column: 41, scope: !9258)
!9269 = !DILocation(line: 212, column: 3, scope: !9258)
!9270 = distinct !{!9270, !9262, !9271}
!9271 = !DILocation(line: 213, column: 24, scope: !9254)
!9272 = !DILocation(line: 217, column: 26, scope: !9092)
!9273 = !DILocation(line: 217, column: 32, scope: !9092)
!9274 = !DILocation(line: 217, column: 63, scope: !9092)
!9275 = !DILocation(line: 217, column: 18, scope: !9092)
!9276 = !DILocation(line: 217, column: 2, scope: !9092)
!9277 = !DILocation(line: 217, column: 8, scope: !9092)
!9278 = !DILocation(line: 217, column: 16, scope: !9092)
!9279 = !DILocation(line: 218, column: 6, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9092, file: !8545, line: 218, column: 6)
!9281 = !DILocation(line: 218, column: 12, scope: !9280)
!9282 = !DILocation(line: 218, column: 20, scope: !9280)
!9283 = !DILocation(line: 218, column: 6, scope: !9092)
!9284 = !DILocation(line: 219, column: 3, scope: !9280)
!9285 = !DILocation(line: 218, column: 23, scope: !9280)
!9286 = !DILabel(scope: !9092, name: "fail", file: !8545, line: 221)
!9287 = !DILocation(line: 221, column: 1, scope: !9092)
!9288 = !DILocation(line: 223, column: 20, scope: !9092)
!9289 = !DILocation(line: 223, column: 2, scope: !9092)
!9290 = !DILocation(line: 224, column: 2, scope: !9092)
!9291 = !DILocation(line: 225, column: 1, scope: !9092)
!9292 = distinct !DISubprogram(name: "cpu_to_hc32", scope: !6, file: !6, line: 839, type: !9293, scopeLine: 840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!9293 = !DISubroutineType(types: !9294)
!9294 = !{!5103, !6335, !9295}
!9295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !303)
!9296 = !DILocalVariable(name: "ehci", arg: 1, scope: !9292, file: !6, line: 839, type: !6335)
!9297 = !DILocation(line: 839, column: 57, scope: !9292)
!9298 = !DILocalVariable(name: "x", arg: 2, scope: !9292, file: !6, line: 839, type: !9295)
!9299 = !DILocation(line: 839, column: 73, scope: !9292)
!9300 = !DILocation(line: 841, column: 9, scope: !9292)
!9301 = !DILocation(line: 841, column: 2, scope: !9292)
!9302 = distinct !DISubprogram(name: "ktime_compare", scope: !2430, file: !2430, line: 95, type: !9303, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!9303 = !DISubroutineType(types: !9304)
!9304 = !{!401, !9305, !9305}
!9305 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2429)
!9306 = !DILocalVariable(name: "cmp1", arg: 1, scope: !9302, file: !2430, line: 95, type: !9305)
!9307 = !DILocation(line: 95, column: 47, scope: !9302)
!9308 = !DILocalVariable(name: "cmp2", arg: 2, scope: !9302, file: !2430, line: 95, type: !9305)
!9309 = !DILocation(line: 95, column: 67, scope: !9302)
!9310 = !DILocation(line: 97, column: 6, scope: !9311)
!9311 = distinct !DILexicalBlock(scope: !9302, file: !2430, line: 97, column: 6)
!9312 = !DILocation(line: 97, column: 13, scope: !9311)
!9313 = !DILocation(line: 97, column: 11, scope: !9311)
!9314 = !DILocation(line: 97, column: 6, scope: !9302)
!9315 = !DILocation(line: 98, column: 3, scope: !9311)
!9316 = !DILocation(line: 99, column: 6, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9302, file: !2430, line: 99, column: 6)
!9318 = !DILocation(line: 99, column: 13, scope: !9317)
!9319 = !DILocation(line: 99, column: 11, scope: !9317)
!9320 = !DILocation(line: 99, column: 6, scope: !9302)
!9321 = !DILocation(line: 100, column: 3, scope: !9317)
!9322 = !DILocation(line: 101, column: 2, scope: !9302)
!9323 = !DILocation(line: 102, column: 1, scope: !9302)
!9324 = distinct !DISubprogram(name: "ehci_enable_event", scope: !6232, file: !6232, line: 76, type: !9325, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!9325 = !DISubroutineType(types: !9326)
!9326 = !{null, !5814, !7, !626}
!9327 = !DILocalVariable(name: "ehci", arg: 1, scope: !9324, file: !6232, line: 76, type: !5814)
!9328 = !DILocation(line: 76, column: 48, scope: !9324)
!9329 = !DILocalVariable(name: "event", arg: 2, scope: !9324, file: !6232, line: 76, type: !7)
!9330 = !DILocation(line: 76, column: 63, scope: !9324)
!9331 = !DILocalVariable(name: "resched", arg: 3, scope: !9324, file: !6232, line: 77, type: !626)
!9332 = !DILocation(line: 77, column: 8, scope: !9324)
!9333 = !DILocalVariable(name: "timeout", scope: !9324, file: !6232, line: 79, type: !9334)
!9334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 64)
!9335 = !DILocation(line: 79, column: 12, scope: !9324)
!9336 = !DILocation(line: 79, column: 23, scope: !9324)
!9337 = !DILocation(line: 79, column: 29, scope: !9324)
!9338 = !DILocation(line: 79, column: 41, scope: !9324)
!9339 = !DILocation(line: 81, column: 6, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9324, file: !6232, line: 81, column: 6)
!9341 = !DILocation(line: 81, column: 6, scope: !9324)
!9342 = !DILocation(line: 82, column: 14, scope: !9340)
!9343 = !DILocation(line: 82, column: 4, scope: !9340)
!9344 = !DILocation(line: 82, column: 12, scope: !9340)
!9345 = !DILocation(line: 82, column: 3, scope: !9340)
!9346 = !DILocation(line: 83, column: 40, scope: !9324)
!9347 = !DILocation(line: 83, column: 37, scope: !9324)
!9348 = !DILocation(line: 83, column: 2, scope: !9324)
!9349 = !DILocation(line: 83, column: 8, scope: !9324)
!9350 = !DILocation(line: 83, column: 31, scope: !9324)
!9351 = !DILocation(line: 86, column: 6, scope: !9352)
!9352 = distinct !DILexicalBlock(scope: !9324, file: !6232, line: 86, column: 6)
!9353 = !DILocation(line: 86, column: 14, scope: !9352)
!9354 = !DILocation(line: 86, column: 20, scope: !9352)
!9355 = !DILocation(line: 86, column: 12, scope: !9352)
!9356 = !DILocation(line: 86, column: 6, scope: !9324)
!9357 = !DILocation(line: 87, column: 30, scope: !9358)
!9358 = distinct !DILexicalBlock(scope: !9352, file: !6232, line: 86, column: 40)
!9359 = !DILocation(line: 87, column: 3, scope: !9358)
!9360 = !DILocation(line: 87, column: 9, scope: !9358)
!9361 = !DILocation(line: 87, column: 28, scope: !9358)
!9362 = !DILocation(line: 88, column: 27, scope: !9358)
!9363 = !DILocation(line: 88, column: 33, scope: !9358)
!9364 = !DILocation(line: 88, column: 43, scope: !9358)
!9365 = !DILocation(line: 88, column: 42, scope: !9358)
!9366 = !DILocation(line: 88, column: 3, scope: !9358)
!9367 = !DILocation(line: 90, column: 2, scope: !9358)
!9368 = !DILocation(line: 91, column: 1, scope: !9324)
!9369 = distinct !DISubprogram(name: "ehci_poll_ASS", scope: !6232, file: !6232, line: 95, type: !6235, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!9370 = !DILocalVariable(name: "ehci", arg: 1, scope: !9369, file: !6232, line: 95, type: !5814)
!9371 = !DILocation(line: 95, column: 44, scope: !9369)
!9372 = !DILocalVariable(name: "actual", scope: !9369, file: !6232, line: 97, type: !7)
!9373 = !DILocation(line: 97, column: 11, scope: !9369)
!9374 = !DILocalVariable(name: "want", scope: !9369, file: !6232, line: 97, type: !7)
!9375 = !DILocation(line: 97, column: 19, scope: !9369)
!9376 = !DILocation(line: 100, column: 6, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9369, file: !6232, line: 100, column: 6)
!9378 = !DILocation(line: 100, column: 12, scope: !9377)
!9379 = !DILocation(line: 100, column: 21, scope: !9377)
!9380 = !DILocation(line: 100, column: 6, scope: !9369)
!9381 = !DILocation(line: 101, column: 3, scope: !9377)
!9382 = !DILocation(line: 103, column: 10, scope: !9369)
!9383 = !DILocation(line: 103, column: 16, scope: !9369)
!9384 = !DILocation(line: 103, column: 24, scope: !9369)
!9385 = !DILocation(line: 103, column: 9, scope: !9369)
!9386 = !DILocation(line: 103, column: 7, scope: !9369)
!9387 = !DILocation(line: 104, column: 22, scope: !9369)
!9388 = !DILocation(line: 104, column: 29, scope: !9369)
!9389 = !DILocation(line: 104, column: 35, scope: !9369)
!9390 = !DILocation(line: 104, column: 41, scope: !9369)
!9391 = !DILocation(line: 104, column: 11, scope: !9369)
!9392 = !DILocation(line: 104, column: 49, scope: !9369)
!9393 = !DILocation(line: 104, column: 9, scope: !9369)
!9394 = !DILocation(line: 106, column: 6, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9369, file: !6232, line: 106, column: 6)
!9396 = !DILocation(line: 106, column: 14, scope: !9395)
!9397 = !DILocation(line: 106, column: 11, scope: !9395)
!9398 = !DILocation(line: 106, column: 6, scope: !9369)
!9399 = !DILocation(line: 109, column: 7, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9401, file: !6232, line: 109, column: 7)
!9401 = distinct !DILexicalBlock(scope: !9395, file: !6232, line: 106, column: 22)
!9402 = !DILocation(line: 109, column: 13, scope: !9400)
!9403 = !DILocation(line: 109, column: 27, scope: !9400)
!9404 = !DILocation(line: 109, column: 30, scope: !9400)
!9405 = !DILocation(line: 109, column: 7, scope: !9401)
!9406 = !DILocation(line: 110, column: 22, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9400, file: !6232, line: 109, column: 35)
!9408 = !DILocation(line: 110, column: 4, scope: !9407)
!9409 = !DILocation(line: 111, column: 4, scope: !9407)
!9410 = !DILocation(line: 115, column: 2, scope: !9401)
!9411 = !DILocation(line: 116, column: 2, scope: !9369)
!9412 = !DILocation(line: 116, column: 8, scope: !9369)
!9413 = !DILocation(line: 116, column: 23, scope: !9369)
!9414 = !DILocation(line: 119, column: 6, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9369, file: !6232, line: 119, column: 6)
!9416 = !DILocation(line: 119, column: 11, scope: !9415)
!9417 = !DILocation(line: 119, column: 6, scope: !9369)
!9418 = !DILocation(line: 120, column: 7, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9420, file: !6232, line: 120, column: 7)
!9420 = distinct !DILexicalBlock(scope: !9415, file: !6232, line: 119, column: 17)
!9421 = !DILocation(line: 120, column: 13, scope: !9419)
!9422 = !DILocation(line: 120, column: 25, scope: !9419)
!9423 = !DILocation(line: 120, column: 7, scope: !9420)
!9424 = !DILocation(line: 121, column: 25, scope: !9419)
!9425 = !DILocation(line: 121, column: 4, scope: !9419)
!9426 = !DILocation(line: 123, column: 2, scope: !9420)
!9427 = !DILocation(line: 124, column: 7, scope: !9428)
!9428 = distinct !DILexicalBlock(scope: !9429, file: !6232, line: 124, column: 7)
!9429 = distinct !DILexicalBlock(scope: !9415, file: !6232, line: 123, column: 9)
!9430 = !DILocation(line: 124, column: 13, scope: !9428)
!9431 = !DILocation(line: 124, column: 25, scope: !9428)
!9432 = !DILocation(line: 124, column: 7, scope: !9429)
!9433 = !DILocation(line: 127, column: 22, scope: !9434)
!9434 = distinct !DILexicalBlock(scope: !9428, file: !6232, line: 124, column: 31)
!9435 = !DILocation(line: 127, column: 4, scope: !9434)
!9436 = !DILocation(line: 129, column: 3, scope: !9434)
!9437 = !DILocation(line: 131, column: 1, scope: !9369)
!9438 = distinct !DISubprogram(name: "ehci_poll_PSS", scope: !6232, file: !6232, line: 141, type: !6235, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!9439 = !DILocalVariable(name: "ehci", arg: 1, scope: !9438, file: !6232, line: 141, type: !5814)
!9440 = !DILocation(line: 141, column: 44, scope: !9438)
!9441 = !DILocalVariable(name: "actual", scope: !9438, file: !6232, line: 143, type: !7)
!9442 = !DILocation(line: 143, column: 11, scope: !9438)
!9443 = !DILocalVariable(name: "want", scope: !9438, file: !6232, line: 143, type: !7)
!9444 = !DILocation(line: 143, column: 19, scope: !9438)
!9445 = !DILocation(line: 146, column: 6, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9438, file: !6232, line: 146, column: 6)
!9447 = !DILocation(line: 146, column: 12, scope: !9446)
!9448 = !DILocation(line: 146, column: 21, scope: !9446)
!9449 = !DILocation(line: 146, column: 6, scope: !9438)
!9450 = !DILocation(line: 147, column: 3, scope: !9446)
!9451 = !DILocation(line: 149, column: 10, scope: !9438)
!9452 = !DILocation(line: 149, column: 16, scope: !9438)
!9453 = !DILocation(line: 149, column: 24, scope: !9438)
!9454 = !DILocation(line: 149, column: 9, scope: !9438)
!9455 = !DILocation(line: 149, column: 7, scope: !9438)
!9456 = !DILocation(line: 150, column: 22, scope: !9438)
!9457 = !DILocation(line: 150, column: 29, scope: !9438)
!9458 = !DILocation(line: 150, column: 35, scope: !9438)
!9459 = !DILocation(line: 150, column: 41, scope: !9438)
!9460 = !DILocation(line: 150, column: 11, scope: !9438)
!9461 = !DILocation(line: 150, column: 49, scope: !9438)
!9462 = !DILocation(line: 150, column: 9, scope: !9438)
!9463 = !DILocation(line: 152, column: 6, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9438, file: !6232, line: 152, column: 6)
!9465 = !DILocation(line: 152, column: 14, scope: !9464)
!9466 = !DILocation(line: 152, column: 11, scope: !9464)
!9467 = !DILocation(line: 152, column: 6, scope: !9438)
!9468 = !DILocation(line: 155, column: 7, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9470, file: !6232, line: 155, column: 7)
!9470 = distinct !DILexicalBlock(scope: !9464, file: !6232, line: 152, column: 22)
!9471 = !DILocation(line: 155, column: 13, scope: !9469)
!9472 = !DILocation(line: 155, column: 27, scope: !9469)
!9473 = !DILocation(line: 155, column: 30, scope: !9469)
!9474 = !DILocation(line: 155, column: 7, scope: !9470)
!9475 = !DILocation(line: 156, column: 22, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9469, file: !6232, line: 155, column: 35)
!9477 = !DILocation(line: 156, column: 4, scope: !9476)
!9478 = !DILocation(line: 157, column: 4, scope: !9476)
!9479 = !DILocation(line: 161, column: 2, scope: !9470)
!9480 = !DILocation(line: 162, column: 2, scope: !9438)
!9481 = !DILocation(line: 162, column: 8, scope: !9438)
!9482 = !DILocation(line: 162, column: 23, scope: !9438)
!9483 = !DILocation(line: 165, column: 6, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9438, file: !6232, line: 165, column: 6)
!9485 = !DILocation(line: 165, column: 11, scope: !9484)
!9486 = !DILocation(line: 165, column: 6, scope: !9438)
!9487 = !DILocation(line: 166, column: 7, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !6232, line: 166, column: 7)
!9489 = distinct !DILexicalBlock(scope: !9484, file: !6232, line: 165, column: 17)
!9490 = !DILocation(line: 166, column: 13, scope: !9488)
!9491 = !DILocation(line: 166, column: 28, scope: !9488)
!9492 = !DILocation(line: 166, column: 7, scope: !9489)
!9493 = !DILocation(line: 167, column: 25, scope: !9488)
!9494 = !DILocation(line: 167, column: 4, scope: !9488)
!9495 = !DILocation(line: 169, column: 2, scope: !9489)
!9496 = !DILocation(line: 170, column: 7, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9498, file: !6232, line: 170, column: 7)
!9498 = distinct !DILexicalBlock(scope: !9484, file: !6232, line: 169, column: 9)
!9499 = !DILocation(line: 170, column: 13, scope: !9497)
!9500 = !DILocation(line: 170, column: 28, scope: !9497)
!9501 = !DILocation(line: 170, column: 7, scope: !9498)
!9502 = !DILocation(line: 173, column: 22, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9497, file: !6232, line: 170, column: 34)
!9504 = !DILocation(line: 173, column: 4, scope: !9503)
!9505 = !DILocation(line: 175, column: 3, scope: !9503)
!9506 = !DILocation(line: 177, column: 1, scope: !9438)
!9507 = distinct !DISubprogram(name: "ehci_handle_controller_death", scope: !6232, file: !6232, line: 187, type: !6235, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!9508 = !DILocalVariable(name: "ehci", arg: 1, scope: !9507, file: !6232, line: 187, type: !5814)
!9509 = !DILocation(line: 187, column: 59, scope: !9507)
!9510 = !DILocation(line: 189, column: 19, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9507, file: !6232, line: 189, column: 6)
!9512 = !DILocation(line: 189, column: 26, scope: !9511)
!9513 = !DILocation(line: 189, column: 32, scope: !9511)
!9514 = !DILocation(line: 189, column: 38, scope: !9511)
!9515 = !DILocation(line: 189, column: 8, scope: !9511)
!9516 = !DILocation(line: 189, column: 46, scope: !9511)
!9517 = !DILocation(line: 189, column: 6, scope: !9507)
!9518 = !DILocation(line: 192, column: 7, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9520, file: !6232, line: 192, column: 7)
!9520 = distinct !DILexicalBlock(scope: !9511, file: !6232, line: 189, column: 59)
!9521 = !DILocation(line: 192, column: 13, scope: !9519)
!9522 = !DILocation(line: 192, column: 28, scope: !9519)
!9523 = !DILocation(line: 192, column: 31, scope: !9519)
!9524 = !DILocation(line: 192, column: 7, scope: !9520)
!9525 = !DILocation(line: 194, column: 22, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9519, file: !6232, line: 192, column: 36)
!9527 = !DILocation(line: 194, column: 4, scope: !9526)
!9528 = !DILocation(line: 195, column: 4, scope: !9526)
!9529 = !DILocation(line: 197, column: 3, scope: !9520)
!9530 = !DILocation(line: 198, column: 2, scope: !9520)
!9531 = !DILocation(line: 201, column: 2, scope: !9507)
!9532 = !DILocation(line: 201, column: 8, scope: !9507)
!9533 = !DILocation(line: 201, column: 17, scope: !9507)
!9534 = !DILocation(line: 202, column: 14, scope: !9507)
!9535 = !DILocation(line: 202, column: 24, scope: !9507)
!9536 = !DILocation(line: 202, column: 30, scope: !9507)
!9537 = !DILocation(line: 202, column: 36, scope: !9507)
!9538 = !DILocation(line: 202, column: 2, scope: !9507)
!9539 = !DILocation(line: 203, column: 14, scope: !9507)
!9540 = !DILocation(line: 203, column: 24, scope: !9507)
!9541 = !DILocation(line: 203, column: 30, scope: !9507)
!9542 = !DILocation(line: 203, column: 36, scope: !9507)
!9543 = !DILocation(line: 203, column: 2, scope: !9507)
!9544 = !DILocation(line: 204, column: 12, scope: !9507)
!9545 = !DILocation(line: 204, column: 2, scope: !9507)
!9546 = !DILocation(line: 205, column: 19, scope: !9507)
!9547 = !DILocation(line: 205, column: 2, scope: !9507)
!9548 = !DILocation(line: 208, column: 1, scope: !9507)
!9549 = distinct !DISubprogram(name: "ehci_handle_intr_unlinks", scope: !6232, file: !6232, line: 243, type: !6235, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!9550 = !DILocalVariable(name: "ehci", arg: 1, scope: !9549, file: !6232, line: 243, type: !5814)
!9551 = !DILocation(line: 243, column: 55, scope: !9549)
!9552 = !DILocalVariable(name: "stopped", scope: !9549, file: !6232, line: 245, type: !626)
!9553 = !DILocation(line: 245, column: 8, scope: !9549)
!9554 = !DILocation(line: 245, column: 19, scope: !9549)
!9555 = !DILocation(line: 245, column: 25, scope: !9549)
!9556 = !DILocation(line: 245, column: 34, scope: !9549)
!9557 = !DILocation(line: 254, column: 2, scope: !9549)
!9558 = !DILocation(line: 254, column: 8, scope: !9549)
!9559 = !DILocation(line: 254, column: 23, scope: !9549)
!9560 = !DILocation(line: 255, column: 2, scope: !9549)
!9561 = !DILocation(line: 255, column: 22, scope: !9549)
!9562 = !DILocation(line: 255, column: 28, scope: !9549)
!9563 = !DILocation(line: 255, column: 10, scope: !9549)
!9564 = !DILocation(line: 255, column: 9, scope: !9549)
!9565 = !DILocalVariable(name: "qh", scope: !9566, file: !6232, line: 256, type: !5884)
!9566 = distinct !DILexicalBlock(scope: !9549, file: !6232, line: 255, column: 42)
!9567 = !DILocation(line: 256, column: 19, scope: !9566)
!9568 = !DILocalVariable(name: "__mptr", scope: !9569, file: !6232, line: 258, type: !341)
!9569 = distinct !DILexicalBlock(scope: !9566, file: !6232, line: 258, column: 8)
!9570 = !DILocation(line: 258, column: 8, scope: !9569)
!9571 = !DILocation(line: 258, column: 8, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9569, file: !6232, line: 258, column: 8)
!9573 = !DILocation(line: 258, column: 6, scope: !9566)
!9574 = !DILocation(line: 260, column: 8, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9566, file: !6232, line: 260, column: 7)
!9576 = !DILocation(line: 260, column: 16, scope: !9575)
!9577 = !DILocation(line: 260, column: 19, scope: !9575)
!9578 = !DILocation(line: 260, column: 23, scope: !9575)
!9579 = !DILocation(line: 260, column: 39, scope: !9575)
!9580 = !DILocation(line: 260, column: 45, scope: !9575)
!9581 = !DILocation(line: 260, column: 36, scope: !9575)
!9582 = !DILocation(line: 260, column: 7, scope: !9566)
!9583 = !DILocation(line: 261, column: 4, scope: !9575)
!9584 = !DILocation(line: 262, column: 18, scope: !9566)
!9585 = !DILocation(line: 262, column: 22, scope: !9566)
!9586 = !DILocation(line: 262, column: 3, scope: !9566)
!9587 = !DILocation(line: 263, column: 19, scope: !9566)
!9588 = !DILocation(line: 263, column: 25, scope: !9566)
!9589 = !DILocation(line: 263, column: 3, scope: !9566)
!9590 = distinct !{!9590, !9560, !9591}
!9591 = !DILocation(line: 264, column: 2, scope: !9549)
!9592 = !DILocation(line: 267, column: 19, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9549, file: !6232, line: 267, column: 6)
!9594 = !DILocation(line: 267, column: 25, scope: !9593)
!9595 = !DILocation(line: 267, column: 7, scope: !9593)
!9596 = !DILocation(line: 267, column: 6, scope: !9549)
!9597 = !DILocation(line: 268, column: 21, scope: !9598)
!9598 = distinct !DILexicalBlock(scope: !9593, file: !6232, line: 267, column: 39)
!9599 = !DILocation(line: 268, column: 3, scope: !9598)
!9600 = !DILocation(line: 269, column: 5, scope: !9598)
!9601 = !DILocation(line: 269, column: 11, scope: !9598)
!9602 = !DILocation(line: 269, column: 3, scope: !9598)
!9603 = !DILocation(line: 270, column: 2, scope: !9598)
!9604 = !DILocation(line: 271, column: 2, scope: !9549)
!9605 = !DILocation(line: 271, column: 8, scope: !9549)
!9606 = !DILocation(line: 271, column: 23, scope: !9549)
!9607 = !DILocation(line: 272, column: 1, scope: !9549)
!9608 = distinct !DISubprogram(name: "end_free_itds", scope: !6232, file: !6232, line: 290, type: !6235, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!9609 = !DILocalVariable(name: "ehci", arg: 1, scope: !9608, file: !6232, line: 290, type: !5814)
!9610 = !DILocation(line: 290, column: 44, scope: !9608)
!9611 = !DILocalVariable(name: "itd", scope: !9608, file: !6232, line: 292, type: !5907)
!9612 = !DILocation(line: 292, column: 20, scope: !9608)
!9613 = !DILocalVariable(name: "n", scope: !9608, file: !6232, line: 292, type: !5907)
!9614 = !DILocation(line: 292, column: 26, scope: !9608)
!9615 = !DILocalVariable(name: "sitd", scope: !9608, file: !6232, line: 293, type: !5961)
!9616 = !DILocation(line: 293, column: 20, scope: !9608)
!9617 = !DILocalVariable(name: "sn", scope: !9608, file: !6232, line: 293, type: !5961)
!9618 = !DILocation(line: 293, column: 27, scope: !9608)
!9619 = !DILocation(line: 295, column: 6, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9608, file: !6232, line: 295, column: 6)
!9621 = !DILocation(line: 295, column: 12, scope: !9620)
!9622 = !DILocation(line: 295, column: 21, scope: !9620)
!9623 = !DILocation(line: 295, column: 6, scope: !9608)
!9624 = !DILocation(line: 296, column: 3, scope: !9625)
!9625 = distinct !DILexicalBlock(scope: !9620, file: !6232, line: 295, column: 40)
!9626 = !DILocation(line: 296, column: 9, scope: !9625)
!9627 = !DILocation(line: 296, column: 26, scope: !9625)
!9628 = !DILocation(line: 297, column: 3, scope: !9625)
!9629 = !DILocation(line: 297, column: 9, scope: !9625)
!9630 = !DILocation(line: 297, column: 27, scope: !9625)
!9631 = !DILocation(line: 298, column: 2, scope: !9625)
!9632 = !DILocalVariable(name: "__mptr", scope: !9633, file: !6232, line: 300, type: !341)
!9633 = distinct !DILexicalBlock(scope: !9634, file: !6232, line: 300, column: 2)
!9634 = distinct !DILexicalBlock(scope: !9608, file: !6232, line: 300, column: 2)
!9635 = !DILocation(line: 300, column: 2, scope: !9633)
!9636 = !DILocation(line: 300, column: 2, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9633, file: !6232, line: 300, column: 2)
!9638 = !DILocation(line: 300, column: 2, scope: !9634)
!9639 = !DILocalVariable(name: "__mptr", scope: !9640, file: !6232, line: 300, type: !341)
!9640 = distinct !DILexicalBlock(scope: !9634, file: !6232, line: 300, column: 2)
!9641 = !DILocation(line: 300, column: 2, scope: !9640)
!9642 = !DILocation(line: 300, column: 2, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9640, file: !6232, line: 300, column: 2)
!9644 = !DILocation(line: 300, column: 2, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9634, file: !6232, line: 300, column: 2)
!9646 = !DILocation(line: 301, column: 13, scope: !9647)
!9647 = distinct !DILexicalBlock(scope: !9645, file: !6232, line: 300, column: 69)
!9648 = !DILocation(line: 301, column: 18, scope: !9647)
!9649 = !DILocation(line: 301, column: 3, scope: !9647)
!9650 = !DILocation(line: 302, column: 17, scope: !9647)
!9651 = !DILocation(line: 302, column: 23, scope: !9647)
!9652 = !DILocation(line: 302, column: 33, scope: !9647)
!9653 = !DILocation(line: 302, column: 38, scope: !9647)
!9654 = !DILocation(line: 302, column: 43, scope: !9647)
!9655 = !DILocation(line: 302, column: 3, scope: !9647)
!9656 = !DILocation(line: 303, column: 7, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9647, file: !6232, line: 303, column: 7)
!9658 = !DILocation(line: 303, column: 14, scope: !9657)
!9659 = !DILocation(line: 303, column: 20, scope: !9657)
!9660 = !DILocation(line: 303, column: 11, scope: !9657)
!9661 = !DILocation(line: 303, column: 7, scope: !9647)
!9662 = !DILocation(line: 304, column: 4, scope: !9657)
!9663 = !DILocation(line: 305, column: 2, scope: !9647)
!9664 = !DILocalVariable(name: "__mptr", scope: !9665, file: !6232, line: 300, type: !341)
!9665 = distinct !DILexicalBlock(scope: !9645, file: !6232, line: 300, column: 2)
!9666 = !DILocation(line: 300, column: 2, scope: !9665)
!9667 = !DILocation(line: 300, column: 2, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9665, file: !6232, line: 300, column: 2)
!9669 = distinct !{!9669, !9638, !9670}
!9670 = !DILocation(line: 305, column: 2, scope: !9634)
!9671 = !DILocalVariable(name: "__mptr", scope: !9672, file: !6232, line: 306, type: !341)
!9672 = distinct !DILexicalBlock(scope: !9673, file: !6232, line: 306, column: 2)
!9673 = distinct !DILexicalBlock(scope: !9608, file: !6232, line: 306, column: 2)
!9674 = !DILocation(line: 306, column: 2, scope: !9672)
!9675 = !DILocation(line: 306, column: 2, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9672, file: !6232, line: 306, column: 2)
!9677 = !DILocation(line: 306, column: 2, scope: !9673)
!9678 = !DILocalVariable(name: "__mptr", scope: !9679, file: !6232, line: 306, type: !341)
!9679 = distinct !DILexicalBlock(scope: !9673, file: !6232, line: 306, column: 2)
!9680 = !DILocation(line: 306, column: 2, scope: !9679)
!9681 = !DILocation(line: 306, column: 2, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9679, file: !6232, line: 306, column: 2)
!9683 = !DILocation(line: 306, column: 2, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9673, file: !6232, line: 306, column: 2)
!9685 = !DILocation(line: 307, column: 13, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9684, file: !6232, line: 306, column: 73)
!9687 = !DILocation(line: 307, column: 19, scope: !9686)
!9688 = !DILocation(line: 307, column: 3, scope: !9686)
!9689 = !DILocation(line: 308, column: 17, scope: !9686)
!9690 = !DILocation(line: 308, column: 23, scope: !9686)
!9691 = !DILocation(line: 308, column: 34, scope: !9686)
!9692 = !DILocation(line: 308, column: 40, scope: !9686)
!9693 = !DILocation(line: 308, column: 46, scope: !9686)
!9694 = !DILocation(line: 308, column: 3, scope: !9686)
!9695 = !DILocation(line: 309, column: 7, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9686, file: !6232, line: 309, column: 7)
!9697 = !DILocation(line: 309, column: 15, scope: !9696)
!9698 = !DILocation(line: 309, column: 21, scope: !9696)
!9699 = !DILocation(line: 309, column: 12, scope: !9696)
!9700 = !DILocation(line: 309, column: 7, scope: !9686)
!9701 = !DILocation(line: 310, column: 4, scope: !9696)
!9702 = !DILocation(line: 311, column: 2, scope: !9686)
!9703 = !DILocalVariable(name: "__mptr", scope: !9704, file: !6232, line: 306, type: !341)
!9704 = distinct !DILexicalBlock(scope: !9684, file: !6232, line: 306, column: 2)
!9705 = !DILocation(line: 306, column: 2, scope: !9704)
!9706 = !DILocation(line: 306, column: 2, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9704, file: !6232, line: 306, column: 2)
!9708 = distinct !{!9708, !9677, !9709}
!9709 = !DILocation(line: 311, column: 2, scope: !9673)
!9710 = !DILocation(line: 313, column: 19, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9608, file: !6232, line: 313, column: 6)
!9712 = !DILocation(line: 313, column: 25, scope: !9711)
!9713 = !DILocation(line: 313, column: 7, scope: !9711)
!9714 = !DILocation(line: 313, column: 42, scope: !9711)
!9715 = !DILocation(line: 314, column: 17, scope: !9711)
!9716 = !DILocation(line: 314, column: 23, scope: !9711)
!9717 = !DILocation(line: 314, column: 5, scope: !9711)
!9718 = !DILocation(line: 313, column: 6, scope: !9608)
!9719 = !DILocation(line: 315, column: 19, scope: !9711)
!9720 = !DILocation(line: 315, column: 3, scope: !9711)
!9721 = !DILocation(line: 316, column: 1, scope: !9608)
!9722 = distinct !DISubprogram(name: "end_unlink_async", scope: !9723, file: !9723, line: 1311, type: !6235, scopeLine: 1312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!9723 = !DIFile(filename: "drivers/usb/host/ehci-q.c", directory: "/home/lizy2001/genbc/linux")
!9724 = !DILocalVariable(name: "ehci", arg: 1, scope: !9722, file: !9723, line: 1311, type: !5814)
!9725 = !DILocation(line: 1311, column: 47, scope: !9722)
!9726 = !DILocalVariable(name: "qh", scope: !9722, file: !9723, line: 1313, type: !5884)
!9727 = !DILocation(line: 1313, column: 19, scope: !9722)
!9728 = !DILocalVariable(name: "early_exit", scope: !9722, file: !9723, line: 1314, type: !626)
!9729 = !DILocation(line: 1314, column: 9, scope: !9722)
!9730 = !DILocation(line: 1316, column: 18, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9722, file: !9723, line: 1316, column: 6)
!9732 = !DILocation(line: 1316, column: 24, scope: !9731)
!9733 = !DILocation(line: 1316, column: 6, scope: !9731)
!9734 = !DILocation(line: 1316, column: 6, scope: !9722)
!9735 = !DILocation(line: 1317, column: 3, scope: !9731)
!9736 = !DILocalVariable(name: "__mptr", scope: !9737, file: !9723, line: 1318, type: !341)
!9737 = distinct !DILexicalBlock(scope: !9722, file: !9723, line: 1318, column: 7)
!9738 = !DILocation(line: 1318, column: 7, scope: !9737)
!9739 = !DILocation(line: 1318, column: 7, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9737, file: !9723, line: 1318, column: 7)
!9741 = !DILocation(line: 1318, column: 5, scope: !9722)
!9742 = !DILocation(line: 1325, column: 15, scope: !9722)
!9743 = !DILocation(line: 1325, column: 21, scope: !9722)
!9744 = !DILocation(line: 1325, column: 13, scope: !9722)
!9745 = !DILocation(line: 1328, column: 6, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9722, file: !9723, line: 1328, column: 6)
!9747 = !DILocation(line: 1328, column: 12, scope: !9746)
!9748 = !DILocation(line: 1328, column: 21, scope: !9746)
!9749 = !DILocation(line: 1328, column: 6, scope: !9722)
!9750 = !DILocation(line: 1329, column: 26, scope: !9746)
!9751 = !DILocation(line: 1329, column: 32, scope: !9746)
!9752 = !DILocation(line: 1329, column: 47, scope: !9746)
!9753 = !DILocation(line: 1329, column: 53, scope: !9746)
!9754 = !DILocation(line: 1329, column: 3, scope: !9746)
!9755 = !DILocation(line: 1336, column: 11, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9746, file: !9723, line: 1336, column: 11)
!9757 = !DILocation(line: 1336, column: 15, scope: !9756)
!9758 = !DILocation(line: 1336, column: 24, scope: !9756)
!9759 = !DILocation(line: 1336, column: 11, scope: !9746)
!9760 = !DILocation(line: 1341, column: 19, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9756, file: !9723, line: 1336, column: 44)
!9762 = !DILocation(line: 1341, column: 23, scope: !9761)
!9763 = !DILocation(line: 1341, column: 37, scope: !9761)
!9764 = !DILocation(line: 1341, column: 43, scope: !9761)
!9765 = !DILocation(line: 1341, column: 3, scope: !9761)
!9766 = !DILocation(line: 1342, column: 2, scope: !9761)
!9767 = !DILocation(line: 1358, column: 11, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9756, file: !9723, line: 1358, column: 11)
!9769 = !DILocation(line: 1358, column: 15, scope: !9768)
!9770 = !DILocation(line: 1358, column: 29, scope: !9768)
!9771 = !DILocation(line: 1358, column: 11, scope: !9756)
!9772 = !DILocation(line: 1360, column: 3, scope: !9768)
!9773 = !DILocation(line: 1363, column: 12, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9768, file: !9723, line: 1363, column: 11)
!9775 = !DILocation(line: 1363, column: 16, scope: !9774)
!9776 = !DILocation(line: 1363, column: 30, scope: !9774)
!9777 = !DILocation(line: 1363, column: 55, scope: !9774)
!9778 = !DILocation(line: 1364, column: 16, scope: !9774)
!9779 = !DILocation(line: 1364, column: 20, scope: !9774)
!9780 = !DILocation(line: 1364, column: 4, scope: !9774)
!9781 = !DILocation(line: 1363, column: 11, scope: !9768)
!9782 = !DILocation(line: 1365, column: 3, scope: !9774)
!9783 = !DILocation(line: 1368, column: 11, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9774, file: !9723, line: 1368, column: 11)
!9785 = !DILocation(line: 1368, column: 15, scope: !9784)
!9786 = !DILocation(line: 1368, column: 19, scope: !9784)
!9787 = !DILocation(line: 1368, column: 42, scope: !9784)
!9788 = !DILocation(line: 1368, column: 30, scope: !9784)
!9789 = !DILocation(line: 1368, column: 28, scope: !9784)
!9790 = !DILocation(line: 1368, column: 11, scope: !9774)
!9791 = !DILocation(line: 1369, column: 3, scope: !9784)
!9792 = !DILocalVariable(name: "qh_current", scope: !9793, file: !9723, line: 1373, type: !5103)
!9793 = distinct !DILexicalBlock(scope: !9784, file: !9723, line: 1372, column: 7)
!9794 = !DILocation(line: 1373, column: 11, scope: !9793)
!9795 = !DILocalVariable(name: "qh_token", scope: !9793, file: !9723, line: 1373, type: !5103)
!9796 = !DILocation(line: 1373, column: 23, scope: !9793)
!9797 = !DILocation(line: 1375, column: 16, scope: !9793)
!9798 = !DILocation(line: 1375, column: 20, scope: !9793)
!9799 = !DILocation(line: 1375, column: 24, scope: !9793)
!9800 = !DILocation(line: 1375, column: 14, scope: !9793)
!9801 = !DILocation(line: 1376, column: 14, scope: !9793)
!9802 = !DILocation(line: 1376, column: 18, scope: !9793)
!9803 = !DILocation(line: 1376, column: 22, scope: !9793)
!9804 = !DILocation(line: 1376, column: 12, scope: !9793)
!9805 = !DILocation(line: 1377, column: 7, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9793, file: !9723, line: 1377, column: 7)
!9807 = !DILocation(line: 1377, column: 21, scope: !9806)
!9808 = !DILocation(line: 1377, column: 27, scope: !9806)
!9809 = !DILocation(line: 1377, column: 18, scope: !9806)
!9810 = !DILocation(line: 1377, column: 39, scope: !9806)
!9811 = !DILocation(line: 1378, column: 5, scope: !9806)
!9812 = !DILocation(line: 1378, column: 17, scope: !9806)
!9813 = !DILocation(line: 1378, column: 23, scope: !9806)
!9814 = !DILocation(line: 1378, column: 14, scope: !9806)
!9815 = !DILocation(line: 1377, column: 7, scope: !9793)
!9816 = !DILocation(line: 1379, column: 24, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9806, file: !9723, line: 1378, column: 34)
!9818 = !DILocation(line: 1379, column: 4, scope: !9817)
!9819 = !DILocation(line: 1379, column: 10, scope: !9817)
!9820 = !DILocation(line: 1379, column: 22, scope: !9817)
!9821 = !DILocation(line: 1380, column: 22, scope: !9817)
!9822 = !DILocation(line: 1380, column: 4, scope: !9817)
!9823 = !DILocation(line: 1380, column: 10, scope: !9817)
!9824 = !DILocation(line: 1380, column: 20, scope: !9817)
!9825 = !DILocation(line: 1381, column: 22, scope: !9817)
!9826 = !DILocation(line: 1381, column: 4, scope: !9817)
!9827 = !DILocation(line: 1383, column: 4, scope: !9817)
!9828 = !DILabel(scope: !9793, name: "DelayDone", file: !9723, line: 1385)
!9829 = !DILocation(line: 1385, column: 2, scope: !9793)
!9830 = !DILocation(line: 1386, column: 3, scope: !9793)
!9831 = !DILocation(line: 1386, column: 7, scope: !9793)
!9832 = !DILocation(line: 1386, column: 16, scope: !9793)
!9833 = !DILocation(line: 1387, column: 14, scope: !9793)
!9834 = !DILocation(line: 1389, column: 2, scope: !9722)
!9835 = !DILocation(line: 1389, column: 8, scope: !9722)
!9836 = !DILocation(line: 1389, column: 20, scope: !9722)
!9837 = !DILocation(line: 1392, column: 19, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9722, file: !9723, line: 1392, column: 6)
!9839 = !DILocation(line: 1392, column: 25, scope: !9838)
!9840 = !DILocation(line: 1392, column: 7, scope: !9838)
!9841 = !DILocation(line: 1392, column: 6, scope: !9722)
!9842 = !DILocation(line: 1393, column: 19, scope: !9838)
!9843 = !DILocation(line: 1393, column: 3, scope: !9838)
!9844 = !DILocation(line: 1399, column: 6, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9722, file: !9723, line: 1399, column: 6)
!9846 = !DILocation(line: 1399, column: 6, scope: !9722)
!9847 = !DILocation(line: 1400, column: 3, scope: !9845)
!9848 = !DILocation(line: 1403, column: 2, scope: !9722)
!9849 = !DILocation(line: 1403, column: 8, scope: !9722)
!9850 = !DILocation(line: 1403, column: 24, scope: !9722)
!9851 = !DILocation(line: 1404, column: 2, scope: !9722)
!9852 = !DILocation(line: 1404, column: 22, scope: !9722)
!9853 = !DILocation(line: 1404, column: 28, scope: !9722)
!9854 = !DILocation(line: 1404, column: 10, scope: !9722)
!9855 = !DILocation(line: 1404, column: 9, scope: !9722)
!9856 = !DILocalVariable(name: "__mptr", scope: !9857, file: !9723, line: 1405, type: !341)
!9857 = distinct !DILexicalBlock(scope: !9858, file: !9723, line: 1405, column: 8)
!9858 = distinct !DILexicalBlock(scope: !9722, file: !9723, line: 1404, column: 41)
!9859 = !DILocation(line: 1405, column: 8, scope: !9857)
!9860 = !DILocation(line: 1405, column: 8, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9857, file: !9723, line: 1405, column: 8)
!9862 = !DILocation(line: 1405, column: 6, scope: !9858)
!9863 = !DILocation(line: 1407, column: 13, scope: !9858)
!9864 = !DILocation(line: 1407, column: 17, scope: !9858)
!9865 = !DILocation(line: 1407, column: 3, scope: !9858)
!9866 = !DILocation(line: 1409, column: 3, scope: !9858)
!9867 = !DILocation(line: 1409, column: 7, scope: !9858)
!9868 = !DILocation(line: 1409, column: 16, scope: !9858)
!9869 = !DILocation(line: 1410, column: 3, scope: !9858)
!9870 = !DILocation(line: 1410, column: 7, scope: !9858)
!9871 = !DILocation(line: 1410, column: 15, scope: !9858)
!9872 = !DILocation(line: 1410, column: 18, scope: !9858)
!9873 = !DILocation(line: 1412, column: 20, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9858, file: !9723, line: 1412, column: 7)
!9875 = !DILocation(line: 1412, column: 24, scope: !9874)
!9876 = !DILocation(line: 1412, column: 8, scope: !9874)
!9877 = !DILocation(line: 1412, column: 7, scope: !9858)
!9878 = !DILocation(line: 1413, column: 19, scope: !9874)
!9879 = !DILocation(line: 1413, column: 25, scope: !9874)
!9880 = !DILocation(line: 1413, column: 4, scope: !9874)
!9881 = !DILocation(line: 1414, column: 20, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9858, file: !9723, line: 1414, column: 7)
!9883 = !DILocation(line: 1414, column: 24, scope: !9882)
!9884 = !DILocation(line: 1414, column: 8, scope: !9882)
!9885 = !DILocation(line: 1414, column: 34, scope: !9882)
!9886 = !DILocation(line: 1415, column: 5, scope: !9882)
!9887 = !DILocation(line: 1415, column: 11, scope: !9882)
!9888 = !DILocation(line: 1415, column: 20, scope: !9882)
!9889 = !DILocation(line: 1414, column: 7, scope: !9858)
!9890 = !DILocation(line: 1416, column: 18, scope: !9882)
!9891 = !DILocation(line: 1416, column: 24, scope: !9882)
!9892 = !DILocation(line: 1416, column: 4, scope: !9882)
!9893 = !DILocation(line: 1417, column: 17, scope: !9858)
!9894 = !DILocation(line: 1417, column: 3, scope: !9858)
!9895 = distinct !{!9895, !9851, !9896}
!9896 = !DILocation(line: 1418, column: 2, scope: !9722)
!9897 = !DILocation(line: 1419, column: 2, scope: !9722)
!9898 = !DILocation(line: 1419, column: 8, scope: !9722)
!9899 = !DILocation(line: 1419, column: 24, scope: !9722)
!9900 = !DILocation(line: 1420, column: 1, scope: !9722)
!9901 = distinct !DISubprogram(name: "ehci_handle_start_intr_unlinks", scope: !6232, file: !6232, line: 211, type: !6235, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!9902 = !DILocalVariable(name: "ehci", arg: 1, scope: !9901, file: !6232, line: 211, type: !5814)
!9903 = !DILocation(line: 211, column: 61, scope: !9901)
!9904 = !DILocalVariable(name: "stopped", scope: !9901, file: !6232, line: 213, type: !626)
!9905 = !DILocation(line: 213, column: 8, scope: !9901)
!9906 = !DILocation(line: 213, column: 19, scope: !9901)
!9907 = !DILocation(line: 213, column: 25, scope: !9901)
!9908 = !DILocation(line: 213, column: 34, scope: !9901)
!9909 = !DILocation(line: 222, column: 2, scope: !9901)
!9910 = !DILocation(line: 222, column: 22, scope: !9901)
!9911 = !DILocation(line: 222, column: 28, scope: !9901)
!9912 = !DILocation(line: 222, column: 10, scope: !9901)
!9913 = !DILocation(line: 222, column: 9, scope: !9901)
!9914 = !DILocalVariable(name: "qh", scope: !9915, file: !6232, line: 223, type: !5884)
!9915 = distinct !DILexicalBlock(scope: !9901, file: !6232, line: 222, column: 47)
!9916 = !DILocation(line: 223, column: 19, scope: !9915)
!9917 = !DILocalVariable(name: "__mptr", scope: !9918, file: !6232, line: 225, type: !341)
!9918 = distinct !DILexicalBlock(scope: !9915, file: !6232, line: 225, column: 8)
!9919 = !DILocation(line: 225, column: 8, scope: !9918)
!9920 = !DILocation(line: 225, column: 8, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9918, file: !6232, line: 225, column: 8)
!9922 = !DILocation(line: 225, column: 6, scope: !9915)
!9923 = !DILocation(line: 227, column: 8, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9915, file: !6232, line: 227, column: 7)
!9925 = !DILocation(line: 227, column: 16, scope: !9924)
!9926 = !DILocation(line: 227, column: 20, scope: !9924)
!9927 = !DILocation(line: 227, column: 24, scope: !9924)
!9928 = !DILocation(line: 228, column: 5, scope: !9924)
!9929 = !DILocation(line: 228, column: 11, scope: !9924)
!9930 = !DILocation(line: 227, column: 37, scope: !9924)
!9931 = !DILocation(line: 227, column: 7, scope: !9915)
!9932 = !DILocation(line: 229, column: 4, scope: !9924)
!9933 = !DILocation(line: 230, column: 18, scope: !9915)
!9934 = !DILocation(line: 230, column: 22, scope: !9915)
!9935 = !DILocation(line: 230, column: 3, scope: !9915)
!9936 = !DILocation(line: 231, column: 3, scope: !9915)
!9937 = !DILocation(line: 231, column: 7, scope: !9915)
!9938 = !DILocation(line: 231, column: 21, scope: !9915)
!9939 = !DILocation(line: 232, column: 21, scope: !9915)
!9940 = !DILocation(line: 232, column: 27, scope: !9915)
!9941 = !DILocation(line: 232, column: 3, scope: !9915)
!9942 = distinct !{!9942, !9909, !9943}
!9943 = !DILocation(line: 233, column: 2, scope: !9901)
!9944 = !DILocation(line: 236, column: 19, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9901, file: !6232, line: 236, column: 6)
!9946 = !DILocation(line: 236, column: 25, scope: !9945)
!9947 = !DILocation(line: 236, column: 7, scope: !9945)
!9948 = !DILocation(line: 236, column: 6, scope: !9901)
!9949 = !DILocation(line: 237, column: 21, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9945, file: !6232, line: 236, column: 44)
!9951 = !DILocation(line: 237, column: 3, scope: !9950)
!9952 = !DILocation(line: 238, column: 5, scope: !9950)
!9953 = !DILocation(line: 238, column: 11, scope: !9950)
!9954 = !DILocation(line: 238, column: 3, scope: !9950)
!9955 = !DILocation(line: 239, column: 2, scope: !9950)
!9956 = !DILocation(line: 240, column: 1, scope: !9901)
!9957 = distinct !DISubprogram(name: "unlink_empty_async", scope: !9723, file: !9723, line: 1424, type: !6235, scopeLine: 1425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!9958 = !DILocalVariable(name: "ehci", arg: 1, scope: !9957, file: !9723, line: 1424, type: !5814)
!9959 = !DILocation(line: 1424, column: 49, scope: !9957)
!9960 = !DILocalVariable(name: "qh", scope: !9957, file: !9723, line: 1426, type: !5884)
!9961 = !DILocation(line: 1426, column: 19, scope: !9957)
!9962 = !DILocalVariable(name: "qh_to_unlink", scope: !9957, file: !9723, line: 1427, type: !5884)
!9963 = !DILocation(line: 1427, column: 19, scope: !9957)
!9964 = !DILocalVariable(name: "count", scope: !9957, file: !9723, line: 1428, type: !401)
!9965 = !DILocation(line: 1428, column: 8, scope: !9957)
!9966 = !DILocation(line: 1431, column: 12, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9957, file: !9723, line: 1431, column: 2)
!9968 = !DILocation(line: 1431, column: 18, scope: !9967)
!9969 = !DILocation(line: 1431, column: 25, scope: !9967)
!9970 = !DILocation(line: 1431, column: 33, scope: !9967)
!9971 = !DILocation(line: 1431, column: 10, scope: !9967)
!9972 = !DILocation(line: 1431, column: 7, scope: !9967)
!9973 = !DILocation(line: 1431, column: 37, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9967, file: !9723, line: 1431, column: 2)
!9975 = !DILocation(line: 1431, column: 2, scope: !9967)
!9976 = !DILocation(line: 1432, column: 19, scope: !9977)
!9977 = distinct !DILexicalBlock(scope: !9978, file: !9723, line: 1432, column: 7)
!9978 = distinct !DILexicalBlock(scope: !9974, file: !9723, line: 1431, column: 62)
!9979 = !DILocation(line: 1432, column: 23, scope: !9977)
!9980 = !DILocation(line: 1432, column: 7, scope: !9977)
!9981 = !DILocation(line: 1432, column: 33, scope: !9977)
!9982 = !DILocation(line: 1433, column: 5, scope: !9977)
!9983 = !DILocation(line: 1433, column: 9, scope: !9977)
!9984 = !DILocation(line: 1433, column: 18, scope: !9977)
!9985 = !DILocation(line: 1432, column: 7, scope: !9978)
!9986 = !DILocation(line: 1434, column: 4, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9977, file: !9723, line: 1433, column: 38)
!9988 = !DILocation(line: 1435, column: 8, scope: !9989)
!9989 = distinct !DILexicalBlock(scope: !9987, file: !9723, line: 1435, column: 8)
!9990 = !DILocation(line: 1435, column: 12, scope: !9989)
!9991 = !DILocation(line: 1435, column: 28, scope: !9989)
!9992 = !DILocation(line: 1435, column: 34, scope: !9989)
!9993 = !DILocation(line: 1435, column: 25, scope: !9989)
!9994 = !DILocation(line: 1435, column: 8, scope: !9987)
!9995 = !DILocation(line: 1436, column: 20, scope: !9989)
!9996 = !DILocation(line: 1436, column: 18, scope: !9989)
!9997 = !DILocation(line: 1436, column: 5, scope: !9989)
!9998 = !DILocation(line: 1437, column: 3, scope: !9987)
!9999 = !DILocation(line: 1438, column: 2, scope: !9978)
!10000 = !DILocation(line: 1431, column: 46, scope: !9974)
!10001 = !DILocation(line: 1431, column: 50, scope: !9974)
!10002 = !DILocation(line: 1431, column: 58, scope: !9974)
!10003 = !DILocation(line: 1431, column: 44, scope: !9974)
!10004 = !DILocation(line: 1431, column: 2, scope: !9974)
!10005 = distinct !{!10005, !9975, !10006}
!10006 = !DILocation(line: 1438, column: 2, scope: !9967)
!10007 = !DILocation(line: 1441, column: 18, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9957, file: !9723, line: 1441, column: 6)
!10009 = !DILocation(line: 1441, column: 24, scope: !10008)
!10010 = !DILocation(line: 1441, column: 6, scope: !10008)
!10011 = !DILocation(line: 1441, column: 38, scope: !10008)
!10012 = !DILocation(line: 1441, column: 41, scope: !10008)
!10013 = !DILocation(line: 1441, column: 6, scope: !9957)
!10014 = !DILocation(line: 1442, column: 3, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10008, file: !9723, line: 1441, column: 55)
!10016 = !DILocation(line: 1442, column: 17, scope: !10015)
!10017 = !DILocation(line: 1442, column: 31, scope: !10015)
!10018 = !DILocation(line: 1443, column: 22, scope: !10015)
!10019 = !DILocation(line: 1443, column: 28, scope: !10015)
!10020 = !DILocation(line: 1443, column: 3, scope: !10015)
!10021 = !DILocation(line: 1444, column: 3, scope: !10015)
!10022 = !DILocation(line: 1445, column: 2, scope: !10015)
!10023 = !DILocation(line: 1448, column: 6, scope: !10024)
!10024 = distinct !DILexicalBlock(scope: !9957, file: !9723, line: 1448, column: 6)
!10025 = !DILocation(line: 1448, column: 12, scope: !10024)
!10026 = !DILocation(line: 1448, column: 6, scope: !9957)
!10027 = !DILocation(line: 1449, column: 21, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10024, file: !9723, line: 1448, column: 17)
!10029 = !DILocation(line: 1449, column: 3, scope: !10028)
!10030 = !DILocation(line: 1450, column: 5, scope: !10028)
!10031 = !DILocation(line: 1450, column: 11, scope: !10028)
!10032 = !DILocation(line: 1450, column: 3, scope: !10028)
!10033 = !DILocation(line: 1451, column: 2, scope: !10028)
!10034 = !DILocation(line: 1452, column: 1, scope: !9957)
!10035 = distinct !DISubprogram(name: "ehci_iaa_watchdog", scope: !6232, file: !6232, line: 320, type: !6235, scopeLine: 321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10036 = !DILocalVariable(name: "ehci", arg: 1, scope: !10035, file: !6232, line: 320, type: !5814)
!10037 = !DILocation(line: 320, column: 48, scope: !10035)
!10038 = !DILocalVariable(name: "cmd", scope: !10035, file: !6232, line: 322, type: !303)
!10039 = !DILocation(line: 322, column: 6, scope: !10035)
!10040 = !DILocalVariable(name: "status", scope: !10035, file: !6232, line: 322, type: !303)
!10041 = !DILocation(line: 322, column: 11, scope: !10035)
!10042 = !DILocation(line: 330, column: 7, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10035, file: !6232, line: 330, column: 6)
!10044 = !DILocation(line: 330, column: 13, scope: !10043)
!10045 = !DILocation(line: 330, column: 29, scope: !10043)
!10046 = !DILocation(line: 330, column: 32, scope: !10043)
!10047 = !DILocation(line: 330, column: 38, scope: !10043)
!10048 = !DILocation(line: 330, column: 47, scope: !10043)
!10049 = !DILocation(line: 330, column: 6, scope: !10035)
!10050 = !DILocation(line: 331, column: 3, scope: !10043)
!10051 = !DILocation(line: 339, column: 19, scope: !10035)
!10052 = !DILocation(line: 339, column: 26, scope: !10035)
!10053 = !DILocation(line: 339, column: 32, scope: !10035)
!10054 = !DILocation(line: 339, column: 38, scope: !10035)
!10055 = !DILocation(line: 339, column: 8, scope: !10035)
!10056 = !DILocation(line: 339, column: 6, scope: !10035)
!10057 = !DILocation(line: 348, column: 22, scope: !10035)
!10058 = !DILocation(line: 348, column: 29, scope: !10035)
!10059 = !DILocation(line: 348, column: 35, scope: !10035)
!10060 = !DILocation(line: 348, column: 41, scope: !10035)
!10061 = !DILocation(line: 348, column: 11, scope: !10035)
!10062 = !DILocation(line: 348, column: 9, scope: !10035)
!10063 = !DILocation(line: 349, column: 7, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10035, file: !6232, line: 349, column: 6)
!10065 = !DILocation(line: 349, column: 14, scope: !10064)
!10066 = !DILocation(line: 349, column: 25, scope: !10064)
!10067 = !DILocation(line: 349, column: 30, scope: !10064)
!10068 = !DILocation(line: 349, column: 34, scope: !10064)
!10069 = !DILocation(line: 349, column: 6, scope: !10035)
!10070 = !DILocation(line: 350, column: 3, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10064, file: !6232, line: 349, column: 47)
!10072 = !DILocation(line: 350, column: 3, scope: !10073)
!10073 = distinct !DILexicalBlock(scope: !10071, file: !6232, line: 350, column: 3)
!10074 = !DILocation(line: 351, column: 15, scope: !10071)
!10075 = !DILocation(line: 351, column: 31, scope: !10071)
!10076 = !DILocation(line: 351, column: 37, scope: !10071)
!10077 = !DILocation(line: 351, column: 43, scope: !10071)
!10078 = !DILocation(line: 351, column: 3, scope: !10071)
!10079 = !DILocation(line: 352, column: 2, scope: !10071)
!10080 = !DILocation(line: 355, column: 16, scope: !10035)
!10081 = !DILocation(line: 355, column: 2, scope: !10035)
!10082 = !DILocation(line: 356, column: 1, scope: !10035)
!10083 = distinct !DISubprogram(name: "ehci_disable_PSE", scope: !6232, file: !6232, line: 180, type: !6235, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10084 = !DILocalVariable(name: "ehci", arg: 1, scope: !10083, file: !6232, line: 180, type: !5814)
!10085 = !DILocation(line: 180, column: 47, scope: !10083)
!10086 = !DILocation(line: 182, column: 25, scope: !10083)
!10087 = !DILocation(line: 182, column: 2, scope: !10083)
!10088 = !DILocation(line: 183, column: 1, scope: !10083)
!10089 = distinct !DISubprogram(name: "ehci_disable_ASE", scope: !6232, file: !6232, line: 134, type: !6235, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10090 = !DILocalVariable(name: "ehci", arg: 1, scope: !10089, file: !6232, line: 134, type: !5814)
!10091 = !DILocation(line: 134, column: 47, scope: !10089)
!10092 = !DILocation(line: 136, column: 25, scope: !10089)
!10093 = !DILocation(line: 136, column: 2, scope: !10089)
!10094 = !DILocation(line: 137, column: 1, scope: !10089)
!10095 = distinct !DISubprogram(name: "ehci_work", scope: !3, file: !3, line: 385, type: !6235, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10096 = !DILocalVariable(name: "ehci", arg: 1, scope: !10095, file: !3, line: 385, type: !5814)
!10097 = !DILocation(line: 385, column: 41, scope: !10095)
!10098 = !DILocation(line: 391, column: 6, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 391, column: 6)
!10100 = !DILocation(line: 391, column: 12, scope: !10099)
!10101 = !DILocation(line: 391, column: 6, scope: !10095)
!10102 = !DILocation(line: 392, column: 3, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10099, file: !3, line: 391, column: 22)
!10104 = !DILocation(line: 392, column: 9, scope: !10103)
!10105 = !DILocation(line: 392, column: 21, scope: !10103)
!10106 = !DILocation(line: 393, column: 3, scope: !10103)
!10107 = !DILocation(line: 395, column: 2, scope: !10095)
!10108 = !DILocation(line: 395, column: 8, scope: !10095)
!10109 = !DILocation(line: 395, column: 17, scope: !10095)
!10110 = !DILabel(scope: !10095, name: "rescan", file: !3, line: 397)
!10111 = !DILocation(line: 397, column: 2, scope: !10095)
!10112 = !DILocation(line: 398, column: 2, scope: !10095)
!10113 = !DILocation(line: 398, column: 8, scope: !10095)
!10114 = !DILocation(line: 398, column: 20, scope: !10095)
!10115 = !DILocation(line: 399, column: 6, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 399, column: 6)
!10117 = !DILocation(line: 399, column: 12, scope: !10116)
!10118 = !DILocation(line: 399, column: 6, scope: !10095)
!10119 = !DILocation(line: 400, column: 14, scope: !10116)
!10120 = !DILocation(line: 400, column: 3, scope: !10116)
!10121 = !DILocation(line: 401, column: 6, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 401, column: 6)
!10123 = !DILocation(line: 401, column: 12, scope: !10122)
!10124 = !DILocation(line: 401, column: 23, scope: !10122)
!10125 = !DILocation(line: 401, column: 6, scope: !10095)
!10126 = !DILocation(line: 402, column: 13, scope: !10122)
!10127 = !DILocation(line: 402, column: 3, scope: !10122)
!10128 = !DILocation(line: 403, column: 6, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 403, column: 6)
!10130 = !DILocation(line: 403, column: 12, scope: !10129)
!10131 = !DILocation(line: 403, column: 23, scope: !10129)
!10132 = !DILocation(line: 403, column: 6, scope: !10095)
!10133 = !DILocation(line: 404, column: 13, scope: !10129)
!10134 = !DILocation(line: 404, column: 3, scope: !10129)
!10135 = !DILocation(line: 405, column: 6, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 405, column: 6)
!10137 = !DILocation(line: 405, column: 12, scope: !10136)
!10138 = !DILocation(line: 405, column: 6, scope: !10095)
!10139 = !DILocation(line: 406, column: 3, scope: !10136)
!10140 = !DILocation(line: 407, column: 2, scope: !10095)
!10141 = !DILocation(line: 407, column: 8, scope: !10095)
!10142 = !DILocation(line: 407, column: 17, scope: !10095)
!10143 = !DILocation(line: 413, column: 22, scope: !10095)
!10144 = !DILocation(line: 413, column: 2, scope: !10095)
!10145 = !DILocation(line: 414, column: 1, scope: !10095)
!10146 = distinct !DISubprogram(name: "ehci_set_command_bit", scope: !6232, file: !6232, line: 11, type: !10147, scopeLine: 12, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10147 = !DISubroutineType(types: !10148)
!10148 = !{null, !5814, !303}
!10149 = !DILocalVariable(name: "ehci", arg: 1, scope: !10146, file: !6232, line: 11, type: !5814)
!10150 = !DILocation(line: 11, column: 51, scope: !10146)
!10151 = !DILocalVariable(name: "bit", arg: 2, scope: !10146, file: !6232, line: 11, type: !303)
!10152 = !DILocation(line: 11, column: 61, scope: !10146)
!10153 = !DILocation(line: 13, column: 19, scope: !10146)
!10154 = !DILocation(line: 13, column: 2, scope: !10146)
!10155 = !DILocation(line: 13, column: 8, scope: !10146)
!10156 = !DILocation(line: 13, column: 16, scope: !10146)
!10157 = !DILocation(line: 14, column: 14, scope: !10146)
!10158 = !DILocation(line: 14, column: 20, scope: !10146)
!10159 = !DILocation(line: 14, column: 26, scope: !10146)
!10160 = !DILocation(line: 14, column: 36, scope: !10146)
!10161 = !DILocation(line: 14, column: 42, scope: !10146)
!10162 = !DILocation(line: 14, column: 48, scope: !10146)
!10163 = !DILocation(line: 14, column: 2, scope: !10146)
!10164 = !DILocation(line: 17, column: 13, scope: !10146)
!10165 = !DILocation(line: 17, column: 20, scope: !10146)
!10166 = !DILocation(line: 17, column: 26, scope: !10146)
!10167 = !DILocation(line: 17, column: 32, scope: !10146)
!10168 = !DILocation(line: 17, column: 2, scope: !10146)
!10169 = !DILocation(line: 18, column: 1, scope: !10146)
!10170 = distinct !DISubprogram(name: "list_empty", scope: !9075, file: !9075, line: 280, type: !10171, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10171 = !DISubroutineType(types: !10172)
!10172 = !{!401, !10173}
!10173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10174, size: 64)
!10174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !361)
!10175 = !DILocalVariable(name: "head", arg: 1, scope: !10170, file: !9075, line: 280, type: !10173)
!10176 = !DILocation(line: 280, column: 54, scope: !10170)
!10177 = !DILocation(line: 282, column: 9, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10170, file: !9075, line: 282, column: 9)
!10179 = !DILocation(line: 282, column: 9, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10178, file: !9075, line: 282, column: 9)
!10181 = !DILocation(line: 282, column: 34, scope: !10170)
!10182 = !DILocation(line: 282, column: 31, scope: !10170)
!10183 = !DILocation(line: 282, column: 2, scope: !10170)
!10184 = distinct !DISubprogram(name: "list_del_init", scope: !9075, file: !9075, line: 202, type: !9076, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10185 = !DILocalVariable(name: "entry", arg: 1, scope: !10184, file: !9075, line: 202, type: !365)
!10186 = !DILocation(line: 202, column: 52, scope: !10184)
!10187 = !DILocation(line: 204, column: 19, scope: !10184)
!10188 = !DILocation(line: 204, column: 2, scope: !10184)
!10189 = !DILocation(line: 205, column: 17, scope: !10184)
!10190 = !DILocation(line: 205, column: 2, scope: !10184)
!10191 = !DILocation(line: 206, column: 1, scope: !10184)
!10192 = distinct !DISubprogram(name: "end_unlink_intr", scope: !6239, file: !6239, line: 697, type: !10193, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10193 = !DISubroutineType(types: !10194)
!10194 = !{null, !5814, !5884}
!10195 = !DILocalVariable(name: "ehci", arg: 1, scope: !10192, file: !6239, line: 697, type: !5814)
!10196 = !DILocation(line: 697, column: 46, scope: !10192)
!10197 = !DILocalVariable(name: "qh", arg: 2, scope: !10192, file: !6239, line: 697, type: !5884)
!10198 = !DILocation(line: 697, column: 68, scope: !10192)
!10199 = !DILocalVariable(name: "hw", scope: !10192, file: !6239, line: 699, type: !5888)
!10200 = !DILocation(line: 699, column: 21, scope: !10192)
!10201 = !DILocation(line: 699, column: 26, scope: !10192)
!10202 = !DILocation(line: 699, column: 30, scope: !10192)
!10203 = !DILocalVariable(name: "rc", scope: !10192, file: !6239, line: 700, type: !401)
!10204 = !DILocation(line: 700, column: 8, scope: !10192)
!10205 = !DILocation(line: 702, column: 2, scope: !10192)
!10206 = !DILocation(line: 702, column: 6, scope: !10192)
!10207 = !DILocation(line: 702, column: 15, scope: !10192)
!10208 = !DILocation(line: 703, column: 16, scope: !10192)
!10209 = !DILocation(line: 703, column: 2, scope: !10192)
!10210 = !DILocation(line: 703, column: 6, scope: !10192)
!10211 = !DILocation(line: 703, column: 14, scope: !10192)
!10212 = !DILocation(line: 705, column: 19, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10192, file: !6239, line: 705, column: 6)
!10214 = !DILocation(line: 705, column: 23, scope: !10213)
!10215 = !DILocation(line: 705, column: 7, scope: !10213)
!10216 = !DILocation(line: 705, column: 6, scope: !10192)
!10217 = !DILocation(line: 706, column: 18, scope: !10213)
!10218 = !DILocation(line: 706, column: 24, scope: !10213)
!10219 = !DILocation(line: 706, column: 3, scope: !10213)
!10220 = !DILocation(line: 709, column: 19, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10192, file: !6239, line: 709, column: 6)
!10222 = !DILocation(line: 709, column: 23, scope: !10221)
!10223 = !DILocation(line: 709, column: 7, scope: !10221)
!10224 = !DILocation(line: 709, column: 33, scope: !10221)
!10225 = !DILocation(line: 709, column: 36, scope: !10221)
!10226 = !DILocation(line: 709, column: 42, scope: !10221)
!10227 = !DILocation(line: 709, column: 51, scope: !10221)
!10228 = !DILocation(line: 709, column: 6, scope: !10192)
!10229 = !DILocation(line: 710, column: 20, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10221, file: !6239, line: 709, column: 71)
!10231 = !DILocation(line: 710, column: 26, scope: !10230)
!10232 = !DILocation(line: 710, column: 8, scope: !10230)
!10233 = !DILocation(line: 710, column: 6, scope: !10230)
!10234 = !DILocation(line: 711, column: 7, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10230, file: !6239, line: 711, column: 7)
!10236 = !DILocation(line: 711, column: 10, scope: !10235)
!10237 = !DILocation(line: 711, column: 7, scope: !10230)
!10238 = !DILocation(line: 712, column: 15, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10235, file: !6239, line: 711, column: 16)
!10240 = !DILocation(line: 712, column: 21, scope: !10239)
!10241 = !DILocation(line: 712, column: 4, scope: !10239)
!10242 = !DILocation(line: 713, column: 21, scope: !10239)
!10243 = !DILocation(line: 713, column: 27, scope: !10239)
!10244 = !DILocation(line: 713, column: 4, scope: !10239)
!10245 = !DILocation(line: 714, column: 3, scope: !10239)
!10246 = !DILocation(line: 723, column: 4, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10235, file: !6239, line: 722, column: 8)
!10248 = !DILocation(line: 726, column: 2, scope: !10230)
!10249 = !DILocation(line: 729, column: 4, scope: !10192)
!10250 = !DILocation(line: 729, column: 10, scope: !10192)
!10251 = !DILocation(line: 729, column: 2, scope: !10192)
!10252 = !DILocation(line: 730, column: 19, scope: !10192)
!10253 = !DILocation(line: 730, column: 2, scope: !10192)
!10254 = !DILocation(line: 731, column: 1, scope: !10192)
!10255 = distinct !DISubprogram(name: "__list_del_entry", scope: !9075, file: !9075, line: 130, type: !9076, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10256 = !DILocalVariable(name: "entry", arg: 1, scope: !10255, file: !9075, line: 130, type: !365)
!10257 = !DILocation(line: 130, column: 55, scope: !10255)
!10258 = !DILocation(line: 132, column: 30, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10255, file: !9075, line: 132, column: 6)
!10260 = !DILocation(line: 132, column: 7, scope: !10259)
!10261 = !DILocation(line: 132, column: 6, scope: !10255)
!10262 = !DILocation(line: 133, column: 3, scope: !10259)
!10263 = !DILocation(line: 135, column: 13, scope: !10255)
!10264 = !DILocation(line: 135, column: 20, scope: !10255)
!10265 = !DILocation(line: 135, column: 26, scope: !10255)
!10266 = !DILocation(line: 135, column: 33, scope: !10255)
!10267 = !DILocation(line: 135, column: 2, scope: !10255)
!10268 = !DILocation(line: 136, column: 1, scope: !10255)
!10269 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !9075, file: !9075, line: 51, type: !10270, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10270 = !DISubroutineType(types: !10271)
!10271 = !{!626, !365}
!10272 = !DILocalVariable(name: "entry", arg: 1, scope: !10269, file: !9075, line: 51, type: !365)
!10273 = !DILocation(line: 51, column: 61, scope: !10269)
!10274 = !DILocation(line: 53, column: 2, scope: !10269)
!10275 = distinct !DISubprogram(name: "__list_del", scope: !9075, file: !9075, line: 110, type: !10276, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10276 = !DISubroutineType(types: !10277)
!10277 = !{null, !365, !365}
!10278 = !DILocalVariable(name: "prev", arg: 1, scope: !10275, file: !9075, line: 110, type: !365)
!10279 = !DILocation(line: 110, column: 50, scope: !10275)
!10280 = !DILocalVariable(name: "next", arg: 2, scope: !10275, file: !9075, line: 110, type: !365)
!10281 = !DILocation(line: 110, column: 75, scope: !10275)
!10282 = !DILocation(line: 112, column: 15, scope: !10275)
!10283 = !DILocation(line: 112, column: 2, scope: !10275)
!10284 = !DILocation(line: 112, column: 8, scope: !10275)
!10285 = !DILocation(line: 112, column: 13, scope: !10275)
!10286 = !DILocation(line: 113, column: 2, scope: !10275)
!10287 = !DILocation(line: 113, column: 2, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10275, file: !9075, line: 113, column: 2)
!10289 = !DILocation(line: 113, column: 2, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10288, file: !9075, line: 113, column: 2)
!10291 = !DILocation(line: 113, column: 2, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10288, file: !9075, line: 113, column: 2)
!10293 = !DILocation(line: 114, column: 1, scope: !10275)
!10294 = distinct !DISubprogram(name: "qh_completions", scope: !9723, file: !9723, line: 289, type: !10295, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10295 = !DISubroutineType(types: !10296)
!10296 = !{!7, !5814, !5884}
!10297 = !DILocalVariable(name: "ehci", arg: 1, scope: !10294, file: !9723, line: 289, type: !5814)
!10298 = !DILocation(line: 289, column: 34, scope: !10294)
!10299 = !DILocalVariable(name: "qh", arg: 2, scope: !10294, file: !9723, line: 289, type: !5884)
!10300 = !DILocation(line: 289, column: 56, scope: !10294)
!10301 = !DILocalVariable(name: "last", scope: !10294, file: !9723, line: 291, type: !5993)
!10302 = !DILocation(line: 291, column: 20, scope: !10294)
!10303 = !DILocalVariable(name: "end", scope: !10294, file: !9723, line: 291, type: !5993)
!10304 = !DILocation(line: 291, column: 27, scope: !10294)
!10305 = !DILocation(line: 291, column: 33, scope: !10294)
!10306 = !DILocation(line: 291, column: 37, scope: !10294)
!10307 = !DILocalVariable(name: "entry", scope: !10294, file: !9723, line: 292, type: !365)
!10308 = !DILocation(line: 292, column: 20, scope: !10294)
!10309 = !DILocalVariable(name: "tmp", scope: !10294, file: !9723, line: 292, type: !365)
!10310 = !DILocation(line: 292, column: 28, scope: !10294)
!10311 = !DILocalVariable(name: "last_status", scope: !10294, file: !9723, line: 293, type: !401)
!10312 = !DILocation(line: 293, column: 8, scope: !10294)
!10313 = !DILocalVariable(name: "stopped", scope: !10294, file: !9723, line: 294, type: !401)
!10314 = !DILocation(line: 294, column: 8, scope: !10294)
!10315 = !DILocalVariable(name: "state", scope: !10294, file: !9723, line: 295, type: !1182)
!10316 = !DILocation(line: 295, column: 7, scope: !10294)
!10317 = !DILocalVariable(name: "hw", scope: !10294, file: !9723, line: 296, type: !5888)
!10318 = !DILocation(line: 296, column: 21, scope: !10294)
!10319 = !DILocation(line: 296, column: 26, scope: !10294)
!10320 = !DILocation(line: 296, column: 30, scope: !10294)
!10321 = !DILocation(line: 308, column: 10, scope: !10294)
!10322 = !DILocation(line: 308, column: 14, scope: !10294)
!10323 = !DILocation(line: 308, column: 8, scope: !10294)
!10324 = !DILocation(line: 309, column: 2, scope: !10294)
!10325 = !DILocation(line: 309, column: 6, scope: !10294)
!10326 = !DILocation(line: 309, column: 15, scope: !10294)
!10327 = !DILocation(line: 310, column: 13, scope: !10294)
!10328 = !DILocation(line: 310, column: 19, scope: !10294)
!10329 = !DILocation(line: 310, column: 10, scope: !10294)
!10330 = !DILocation(line: 310, column: 2, scope: !10294)
!10331 = !DILabel(scope: !10294, name: "rescan", file: !9723, line: 312)
!10332 = !DILocation(line: 312, column: 2, scope: !10294)
!10333 = !DILocation(line: 313, column: 7, scope: !10294)
!10334 = !DILocation(line: 314, column: 14, scope: !10294)
!10335 = !DILocation(line: 315, column: 2, scope: !10294)
!10336 = !DILocation(line: 315, column: 6, scope: !10294)
!10337 = !DILocation(line: 315, column: 30, scope: !10294)
!10338 = !DILocation(line: 322, column: 2, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10294, file: !9723, line: 322, column: 2)
!10340 = !DILocation(line: 322, column: 2, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10339, file: !9723, line: 322, column: 2)
!10342 = !DILocalVariable(name: "qtd", scope: !10343, file: !9723, line: 323, type: !5993)
!10343 = distinct !DILexicalBlock(scope: !10341, file: !9723, line: 322, column: 49)
!10344 = !DILocation(line: 323, column: 20, scope: !10343)
!10345 = !DILocalVariable(name: "urb", scope: !10343, file: !9723, line: 324, type: !5343)
!10346 = !DILocation(line: 324, column: 15, scope: !10343)
!10347 = !DILocalVariable(name: "token", scope: !10343, file: !9723, line: 325, type: !303)
!10348 = !DILocation(line: 325, column: 8, scope: !10343)
!10349 = !DILocalVariable(name: "__mptr", scope: !10350, file: !9723, line: 327, type: !341)
!10350 = distinct !DILexicalBlock(scope: !10343, file: !9723, line: 327, column: 9)
!10351 = !DILocation(line: 327, column: 9, scope: !10350)
!10352 = !DILocation(line: 327, column: 9, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10350, file: !9723, line: 327, column: 9)
!10354 = !DILocation(line: 327, column: 7, scope: !10343)
!10355 = !DILocation(line: 328, column: 9, scope: !10343)
!10356 = !DILocation(line: 328, column: 14, scope: !10343)
!10357 = !DILocation(line: 328, column: 7, scope: !10343)
!10358 = !DILocation(line: 331, column: 7, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10343, file: !9723, line: 331, column: 7)
!10360 = !DILocation(line: 331, column: 7, scope: !10343)
!10361 = !DILocation(line: 332, column: 8, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10363, file: !9723, line: 332, column: 8)
!10363 = distinct !DILexicalBlock(scope: !10359, file: !9723, line: 331, column: 13)
!10364 = !DILocation(line: 332, column: 8, scope: !10363)
!10365 = !DILocation(line: 333, column: 19, scope: !10366)
!10366 = distinct !DILexicalBlock(scope: !10362, file: !9723, line: 332, column: 35)
!10367 = !DILocation(line: 333, column: 25, scope: !10366)
!10368 = !DILocation(line: 333, column: 31, scope: !10366)
!10369 = !DILocation(line: 333, column: 36, scope: !10366)
!10370 = !DILocation(line: 333, column: 5, scope: !10366)
!10371 = !DILocation(line: 334, column: 17, scope: !10366)
!10372 = !DILocation(line: 335, column: 4, scope: !10366)
!10373 = !DILocation(line: 336, column: 19, scope: !10363)
!10374 = !DILocation(line: 336, column: 25, scope: !10363)
!10375 = !DILocation(line: 336, column: 4, scope: !10363)
!10376 = !DILocation(line: 337, column: 9, scope: !10363)
!10377 = !DILocation(line: 338, column: 3, scope: !10363)
!10378 = !DILocation(line: 341, column: 7, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10343, file: !9723, line: 341, column: 7)
!10380 = !DILocation(line: 341, column: 14, scope: !10379)
!10381 = !DILocation(line: 341, column: 11, scope: !10379)
!10382 = !DILocation(line: 341, column: 7, scope: !10343)
!10383 = !DILocation(line: 342, column: 4, scope: !10379)
!10384 = !DILocation(line: 345, column: 3, scope: !10343)
!10385 = !{i32 -2139946343}
!10386 = !DILocation(line: 346, column: 23, scope: !10343)
!10387 = !DILocation(line: 346, column: 29, scope: !10343)
!10388 = !DILocation(line: 346, column: 34, scope: !10343)
!10389 = !DILocation(line: 346, column: 11, scope: !10343)
!10390 = !DILocation(line: 346, column: 9, scope: !10343)
!10391 = !DILocation(line: 346, column: 3, scope: !10343)
!10392 = !DILabel(scope: !10343, name: "retry_xacterr", file: !9723, line: 349)
!10393 = !DILocation(line: 349, column: 2, scope: !10343)
!10394 = !DILocation(line: 350, column: 8, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10343, file: !9723, line: 350, column: 7)
!10396 = !DILocation(line: 350, column: 14, scope: !10395)
!10397 = !DILocation(line: 350, column: 32, scope: !10395)
!10398 = !DILocation(line: 350, column: 7, scope: !10343)
!10399 = !DILocation(line: 353, column: 8, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10401, file: !9723, line: 353, column: 8)
!10401 = distinct !DILexicalBlock(scope: !10395, file: !9723, line: 350, column: 38)
!10402 = !DILocation(line: 353, column: 14, scope: !10400)
!10403 = !DILocation(line: 353, column: 8, scope: !10401)
!10404 = !DILocation(line: 354, column: 5, scope: !10400)
!10405 = !DILocation(line: 366, column: 9, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10401, file: !9723, line: 366, column: 8)
!10407 = !DILocation(line: 366, column: 15, scope: !10406)
!10408 = !DILocation(line: 366, column: 31, scope: !10406)
!10409 = !DILocation(line: 366, column: 8, scope: !10401)
!10410 = !DILocation(line: 371, column: 10, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10412, file: !9723, line: 371, column: 9)
!10412 = distinct !DILexicalBlock(scope: !10406, file: !9723, line: 366, column: 37)
!10413 = !DILocation(line: 371, column: 16, scope: !10411)
!10414 = !DILocation(line: 371, column: 32, scope: !10411)
!10415 = !DILocation(line: 372, column: 7, scope: !10411)
!10416 = !DILocation(line: 372, column: 23, scope: !10411)
!10417 = !DILocation(line: 372, column: 28, scope: !10411)
!10418 = !DILocation(line: 373, column: 9, scope: !10411)
!10419 = !DILocation(line: 373, column: 13, scope: !10411)
!10420 = !DILocation(line: 373, column: 7, scope: !10411)
!10421 = !DILocation(line: 373, column: 22, scope: !10411)
!10422 = !DILocation(line: 373, column: 39, scope: !10411)
!10423 = !DILocation(line: 374, column: 8, scope: !10411)
!10424 = !DILocation(line: 374, column: 13, scope: !10411)
!10425 = !DILocation(line: 371, column: 9, scope: !10412)
!10426 = !DILocation(line: 384, column: 12, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10411, file: !9723, line: 374, column: 23)
!10428 = !DILocation(line: 385, column: 12, scope: !10427)
!10429 = !DILocation(line: 387, column: 34, scope: !10427)
!10430 = !DILocation(line: 388, column: 8, scope: !10427)
!10431 = !DILocation(line: 387, column: 22, scope: !10427)
!10432 = !DILocation(line: 387, column: 6, scope: !10427)
!10433 = !DILocation(line: 387, column: 11, scope: !10427)
!10434 = !DILocation(line: 387, column: 20, scope: !10427)
!10435 = !DILocation(line: 389, column: 6, scope: !10427)
!10436 = !{i32 -2139944999}
!10437 = !DILocation(line: 390, column: 33, scope: !10427)
!10438 = !DILocation(line: 391, column: 8, scope: !10427)
!10439 = !DILocation(line: 390, column: 21, scope: !10427)
!10440 = !DILocation(line: 390, column: 6, scope: !10427)
!10441 = !DILocation(line: 390, column: 10, scope: !10427)
!10442 = !DILocation(line: 390, column: 19, scope: !10427)
!10443 = !DILocation(line: 392, column: 6, scope: !10427)
!10444 = !DILocation(line: 394, column: 13, scope: !10412)
!10445 = !DILocation(line: 395, column: 5, scope: !10412)
!10446 = !DILocation(line: 395, column: 9, scope: !10412)
!10447 = !DILocation(line: 395, column: 23, scope: !10412)
!10448 = !DILocation(line: 406, column: 4, scope: !10412)
!10449 = !DILocation(line: 406, column: 15, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10406, file: !9723, line: 406, column: 15)
!10451 = !DILocation(line: 407, column: 6, scope: !10450)
!10452 = !DILocation(line: 407, column: 11, scope: !10450)
!10453 = !DILocation(line: 407, column: 16, scope: !10450)
!10454 = !DILocation(line: 408, column: 9, scope: !10450)
!10455 = !DILocation(line: 408, column: 7, scope: !10450)
!10456 = !DILocation(line: 406, column: 15, scope: !10406)
!10457 = !DILocation(line: 409, column: 13, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10450, file: !9723, line: 408, column: 31)
!10459 = !DILocation(line: 410, column: 5, scope: !10458)
!10460 = !DILocation(line: 410, column: 9, scope: !10458)
!10461 = !DILocation(line: 410, column: 23, scope: !10458)
!10462 = !DILocation(line: 411, column: 4, scope: !10458)
!10463 = !DILocation(line: 414, column: 3, scope: !10401)
!10464 = !DILocation(line: 414, column: 14, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10395, file: !9723, line: 414, column: 14)
!10466 = !DILocation(line: 0, scope: !10465)
!10467 = !DILocation(line: 414, column: 14, scope: !10395)
!10468 = !DILocation(line: 416, column: 4, scope: !10469)
!10469 = distinct !DILexicalBlock(scope: !10465, file: !9723, line: 415, column: 44)
!10470 = !DILocation(line: 420, column: 12, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10465, file: !9723, line: 419, column: 10)
!10472 = !DILocation(line: 423, column: 8, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10471, file: !9723, line: 423, column: 8)
!10474 = !DILocation(line: 423, column: 14, scope: !10473)
!10475 = !DILocation(line: 423, column: 23, scope: !10473)
!10476 = !DILocation(line: 423, column: 8, scope: !10471)
!10477 = !DILocation(line: 424, column: 17, scope: !10478)
!10478 = distinct !DILexicalBlock(scope: !10473, file: !9723, line: 423, column: 42)
!10479 = !DILocation(line: 425, column: 5, scope: !10478)
!10480 = !DILocation(line: 425, column: 9, scope: !10478)
!10481 = !DILocation(line: 425, column: 23, scope: !10478)
!10482 = !DILocation(line: 426, column: 4, scope: !10478)
!10483 = !DILocation(line: 431, column: 13, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10473, file: !9723, line: 431, column: 13)
!10485 = !DILocation(line: 431, column: 25, scope: !10484)
!10486 = !DILocation(line: 431, column: 41, scope: !10484)
!10487 = !DILocation(line: 431, column: 45, scope: !10484)
!10488 = !DILocation(line: 431, column: 50, scope: !10484)
!10489 = !DILocation(line: 431, column: 13, scope: !10473)
!10490 = !DILocation(line: 432, column: 5, scope: !10484)
!10491 = !DILocation(line: 442, column: 8, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10471, file: !9723, line: 442, column: 8)
!10493 = !DILocation(line: 442, column: 14, scope: !10492)
!10494 = !DILocation(line: 442, column: 31, scope: !10492)
!10495 = !DILocation(line: 443, column: 6, scope: !10492)
!10496 = !DILocation(line: 443, column: 10, scope: !10492)
!10497 = !DILocation(line: 443, column: 19, scope: !10492)
!10498 = !DILocation(line: 443, column: 28, scope: !10492)
!10499 = !DILocation(line: 443, column: 33, scope: !10492)
!10500 = !DILocation(line: 443, column: 24, scope: !10492)
!10501 = !DILocation(line: 443, column: 42, scope: !10492)
!10502 = !DILocation(line: 444, column: 7, scope: !10492)
!10503 = !DILocation(line: 444, column: 11, scope: !10492)
!10504 = !DILocation(line: 444, column: 22, scope: !10492)
!10505 = !DILocation(line: 444, column: 20, scope: !10492)
!10506 = !DILocation(line: 442, column: 8, scope: !10471)
!10507 = !DILocation(line: 445, column: 25, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10492, file: !9723, line: 444, column: 41)
!10509 = !DILocation(line: 445, column: 31, scope: !10508)
!10510 = !DILocation(line: 445, column: 35, scope: !10508)
!10511 = !DILocation(line: 445, column: 13, scope: !10508)
!10512 = !DILocation(line: 445, column: 11, scope: !10508)
!10513 = !DILocation(line: 446, column: 22, scope: !10508)
!10514 = !DILocation(line: 446, column: 21, scope: !10508)
!10515 = !DILocation(line: 446, column: 5, scope: !10508)
!10516 = !DILocation(line: 446, column: 9, scope: !10508)
!10517 = !DILocation(line: 446, column: 18, scope: !10508)
!10518 = !DILocation(line: 447, column: 5, scope: !10508)
!10519 = !DILocation(line: 447, column: 9, scope: !10508)
!10520 = !DILocation(line: 447, column: 28, scope: !10508)
!10521 = !DILocation(line: 453, column: 26, scope: !10508)
!10522 = !DILocation(line: 453, column: 32, scope: !10508)
!10523 = !DILocation(line: 453, column: 36, scope: !10508)
!10524 = !DILocation(line: 453, column: 41, scope: !10508)
!10525 = !DILocation(line: 453, column: 5, scope: !10508)
!10526 = !DILocation(line: 454, column: 4, scope: !10508)
!10527 = !DILocation(line: 464, column: 7, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10343, file: !9723, line: 464, column: 7)
!10529 = !DILocation(line: 464, column: 19, scope: !10528)
!10530 = !DILocation(line: 464, column: 7, scope: !10343)
!10531 = !DILocation(line: 465, column: 34, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10528, file: !9723, line: 464, column: 36)
!10533 = !DILocation(line: 465, column: 40, scope: !10532)
!10534 = !DILocation(line: 466, column: 6, scope: !10532)
!10535 = !DILocation(line: 466, column: 11, scope: !10532)
!10536 = !DILocation(line: 466, column: 19, scope: !10532)
!10537 = !DILocation(line: 465, column: 18, scope: !10532)
!10538 = !DILocation(line: 465, column: 16, scope: !10532)
!10539 = !DILocation(line: 467, column: 8, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10532, file: !9723, line: 467, column: 8)
!10541 = !DILocation(line: 467, column: 20, scope: !10540)
!10542 = !DILocation(line: 468, column: 6, scope: !10540)
!10543 = !DILocation(line: 468, column: 10, scope: !10540)
!10544 = !DILocation(line: 468, column: 15, scope: !10540)
!10545 = !DILocation(line: 469, column: 9, scope: !10540)
!10546 = !DILocation(line: 469, column: 7, scope: !10540)
!10547 = !DILocation(line: 467, column: 8, scope: !10532)
!10548 = !DILocation(line: 470, column: 17, scope: !10540)
!10549 = !DILocation(line: 470, column: 5, scope: !10540)
!10550 = !DILocation(line: 475, column: 8, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10532, file: !9723, line: 475, column: 8)
!10552 = !DILocation(line: 0, scope: !10551)
!10553 = !DILocation(line: 475, column: 8, scope: !10532)
!10554 = !DILocation(line: 486, column: 9, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10556, file: !9723, line: 486, column: 9)
!10556 = distinct !DILexicalBlock(scope: !10551, file: !9723, line: 476, column: 34)
!10557 = !DILocation(line: 486, column: 21, scope: !10555)
!10558 = !DILocation(line: 486, column: 9, scope: !10556)
!10559 = !DILocation(line: 487, column: 27, scope: !10555)
!10560 = !DILocation(line: 487, column: 33, scope: !10555)
!10561 = !DILocation(line: 487, column: 37, scope: !10555)
!10562 = !DILocation(line: 488, column: 8, scope: !10555)
!10563 = !DILocation(line: 487, column: 6, scope: !10555)
!10564 = !DILocation(line: 489, column: 4, scope: !10556)
!10565 = !DILocation(line: 490, column: 3, scope: !10532)
!10566 = !DILocation(line: 495, column: 7, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10343, file: !9723, line: 495, column: 7)
!10568 = !DILocation(line: 495, column: 15, scope: !10567)
!10569 = !DILocation(line: 495, column: 18, scope: !10567)
!10570 = !DILocation(line: 495, column: 23, scope: !10567)
!10571 = !DILocation(line: 495, column: 32, scope: !10567)
!10572 = !DILocation(line: 495, column: 41, scope: !10567)
!10573 = !DILocation(line: 495, column: 45, scope: !10567)
!10574 = !DILocation(line: 495, column: 37, scope: !10567)
!10575 = !DILocation(line: 495, column: 7, scope: !10343)
!10576 = !DILocalVariable(name: "__mptr", scope: !10577, file: !9723, line: 496, type: !341)
!10577 = distinct !DILexicalBlock(scope: !10578, file: !9723, line: 496, column: 11)
!10578 = distinct !DILexicalBlock(scope: !10567, file: !9723, line: 495, column: 55)
!10579 = !DILocation(line: 496, column: 11, scope: !10577)
!10580 = !DILocation(line: 496, column: 11, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10577, file: !9723, line: 496, column: 11)
!10582 = !DILocation(line: 496, column: 9, scope: !10578)
!10583 = !DILocation(line: 498, column: 20, scope: !10578)
!10584 = !DILocation(line: 498, column: 25, scope: !10578)
!10585 = !DILocation(line: 498, column: 4, scope: !10578)
!10586 = !DILocation(line: 498, column: 10, scope: !10578)
!10587 = !DILocation(line: 498, column: 18, scope: !10578)
!10588 = !DILocation(line: 499, column: 3, scope: !10578)
!10589 = !DILocation(line: 502, column: 14, scope: !10343)
!10590 = !DILocation(line: 502, column: 19, scope: !10343)
!10591 = !DILocation(line: 502, column: 3, scope: !10343)
!10592 = !DILocation(line: 503, column: 10, scope: !10343)
!10593 = !DILocation(line: 503, column: 8, scope: !10343)
!10594 = !DILocation(line: 506, column: 3, scope: !10343)
!10595 = !DILocation(line: 506, column: 7, scope: !10343)
!10596 = !DILocation(line: 506, column: 16, scope: !10343)
!10597 = !DILocation(line: 507, column: 2, scope: !10343)
!10598 = distinct !{!10598, !10338, !10599}
!10599 = !DILocation(line: 507, column: 2, scope: !10339)
!10600 = !DILocation(line: 510, column: 6, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10294, file: !9723, line: 510, column: 6)
!10602 = !DILocation(line: 510, column: 6, scope: !10294)
!10603 = !DILocation(line: 511, column: 17, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10601, file: !9723, line: 510, column: 29)
!10605 = !DILocation(line: 511, column: 23, scope: !10604)
!10606 = !DILocation(line: 511, column: 29, scope: !10604)
!10607 = !DILocation(line: 511, column: 34, scope: !10604)
!10608 = !DILocation(line: 511, column: 3, scope: !10604)
!10609 = !DILocation(line: 512, column: 18, scope: !10604)
!10610 = !DILocation(line: 512, column: 24, scope: !10604)
!10611 = !DILocation(line: 512, column: 3, scope: !10604)
!10612 = !DILocation(line: 513, column: 2, scope: !10604)
!10613 = !DILocation(line: 516, column: 6, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10294, file: !9723, line: 516, column: 6)
!10615 = !DILocation(line: 516, column: 6, scope: !10294)
!10616 = !DILocation(line: 518, column: 7, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10618, file: !9723, line: 518, column: 7)
!10618 = distinct !DILexicalBlock(scope: !10614, file: !9723, line: 516, column: 45)
!10619 = !DILocation(line: 518, column: 13, scope: !10617)
!10620 = !DILocation(line: 518, column: 7, scope: !10618)
!10621 = !DILocation(line: 519, column: 4, scope: !10617)
!10622 = !DILocation(line: 522, column: 2, scope: !10618)
!10623 = !DILocation(line: 525, column: 17, scope: !10294)
!10624 = !DILocation(line: 525, column: 2, scope: !10294)
!10625 = !DILocation(line: 525, column: 6, scope: !10294)
!10626 = !DILocation(line: 525, column: 15, scope: !10294)
!10627 = !DILocation(line: 542, column: 6, scope: !10628)
!10628 = distinct !DILexicalBlock(scope: !10294, file: !9723, line: 542, column: 6)
!10629 = !DILocation(line: 542, column: 14, scope: !10628)
!10630 = !DILocation(line: 542, column: 19, scope: !10628)
!10631 = !DILocation(line: 542, column: 22, scope: !10628)
!10632 = !DILocation(line: 542, column: 26, scope: !10628)
!10633 = !DILocation(line: 542, column: 41, scope: !10628)
!10634 = !DILocation(line: 542, column: 38, scope: !10628)
!10635 = !DILocation(line: 542, column: 6, scope: !10294)
!10636 = !DILocation(line: 543, column: 3, scope: !10628)
!10637 = !DILocation(line: 543, column: 7, scope: !10628)
!10638 = !DILocation(line: 543, column: 21, scope: !10628)
!10639 = !DILocation(line: 546, column: 9, scope: !10294)
!10640 = !DILocation(line: 546, column: 13, scope: !10294)
!10641 = !DILocation(line: 546, column: 2, scope: !10294)
!10642 = distinct !DISubprogram(name: "qh_schedule", scope: !6239, file: !6239, line: 829, type: !10643, scopeLine: 830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10643 = !DISubroutineType(types: !10644)
!10644 = !{!401, !5814, !5884}
!10645 = !DILocalVariable(name: "ehci", arg: 1, scope: !10642, file: !6239, line: 829, type: !5814)
!10646 = !DILocation(line: 829, column: 41, scope: !10642)
!10647 = !DILocalVariable(name: "qh", arg: 2, scope: !10642, file: !6239, line: 829, type: !5884)
!10648 = !DILocation(line: 829, column: 63, scope: !10642)
!10649 = !DILocalVariable(name: "status", scope: !10642, file: !6239, line: 831, type: !401)
!10650 = !DILocation(line: 831, column: 7, scope: !10642)
!10651 = !DILocalVariable(name: "uframe", scope: !10642, file: !6239, line: 832, type: !7)
!10652 = !DILocation(line: 832, column: 11, scope: !10642)
!10653 = !DILocalVariable(name: "c_mask", scope: !10642, file: !6239, line: 833, type: !7)
!10654 = !DILocation(line: 833, column: 11, scope: !10642)
!10655 = !DILocalVariable(name: "hw", scope: !10642, file: !6239, line: 834, type: !5888)
!10656 = !DILocation(line: 834, column: 21, scope: !10642)
!10657 = !DILocation(line: 834, column: 26, scope: !10642)
!10658 = !DILocation(line: 834, column: 30, scope: !10642)
!10659 = !DILocalVariable(name: "tt", scope: !10642, file: !6239, line: 835, type: !6096)
!10660 = !DILocation(line: 835, column: 19, scope: !10642)
!10661 = !DILocation(line: 837, column: 16, scope: !10642)
!10662 = !DILocation(line: 837, column: 2, scope: !10642)
!10663 = !DILocation(line: 837, column: 6, scope: !10642)
!10664 = !DILocation(line: 837, column: 14, scope: !10642)
!10665 = !DILocation(line: 840, column: 6, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10642, file: !6239, line: 840, column: 6)
!10667 = !DILocation(line: 840, column: 10, scope: !10666)
!10668 = !DILocation(line: 840, column: 13, scope: !10666)
!10669 = !DILocation(line: 840, column: 19, scope: !10666)
!10670 = !DILocation(line: 840, column: 6, scope: !10642)
!10671 = !DILocation(line: 842, column: 3, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10666, file: !6239, line: 840, column: 32)
!10673 = !DILocation(line: 845, column: 9, scope: !10642)
!10674 = !DILocation(line: 846, column: 9, scope: !10642)
!10675 = !DILocation(line: 847, column: 15, scope: !10642)
!10676 = !DILocation(line: 847, column: 19, scope: !10642)
!10677 = !DILocation(line: 847, column: 22, scope: !10642)
!10678 = !DILocation(line: 847, column: 7, scope: !10642)
!10679 = !DILocation(line: 847, column: 5, scope: !10642)
!10680 = !DILocation(line: 848, column: 13, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10642, file: !6239, line: 848, column: 6)
!10682 = !DILocation(line: 848, column: 6, scope: !10681)
!10683 = !DILocation(line: 848, column: 6, scope: !10642)
!10684 = !DILocation(line: 849, column: 20, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10681, file: !6239, line: 848, column: 18)
!10686 = !DILocation(line: 849, column: 12, scope: !10685)
!10687 = !DILocation(line: 849, column: 10, scope: !10685)
!10688 = !DILocation(line: 850, column: 3, scope: !10685)
!10689 = !DILocation(line: 852, column: 20, scope: !10642)
!10690 = !DILocation(line: 852, column: 26, scope: !10642)
!10691 = !DILocation(line: 852, column: 37, scope: !10642)
!10692 = !DILocation(line: 852, column: 2, scope: !10642)
!10693 = !DILocation(line: 858, column: 6, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10642, file: !6239, line: 858, column: 6)
!10695 = !DILocation(line: 858, column: 10, scope: !10694)
!10696 = !DILocation(line: 858, column: 13, scope: !10694)
!10697 = !DILocation(line: 858, column: 6, scope: !10642)
!10698 = !DILocalVariable(name: "i", scope: !10699, file: !6239, line: 859, type: !401)
!10699 = distinct !DILexicalBlock(scope: !10694, file: !6239, line: 858, column: 24)
!10700 = !DILocation(line: 859, column: 8, scope: !10699)
!10701 = !DILocalVariable(name: "frame", scope: !10699, file: !6239, line: 860, type: !7)
!10702 = !DILocation(line: 860, column: 12, scope: !10699)
!10703 = !DILocation(line: 862, column: 12, scope: !10704)
!10704 = distinct !DILexicalBlock(scope: !10699, file: !6239, line: 862, column: 3)
!10705 = !DILocation(line: 862, column: 16, scope: !10704)
!10706 = !DILocation(line: 862, column: 19, scope: !10704)
!10707 = !DILocation(line: 862, column: 10, scope: !10704)
!10708 = !DILocation(line: 862, column: 8, scope: !10704)
!10709 = !DILocation(line: 862, column: 30, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10704, file: !6239, line: 862, column: 3)
!10711 = !DILocation(line: 862, column: 32, scope: !10710)
!10712 = !DILocation(line: 862, column: 3, scope: !10704)
!10713 = !DILocation(line: 863, column: 14, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10710, file: !6239, line: 862, column: 42)
!10715 = !DILocation(line: 863, column: 20, scope: !10714)
!10716 = !DILocation(line: 863, column: 12, scope: !10714)
!10717 = !DILocation(line: 863, column: 36, scope: !10714)
!10718 = !DILocation(line: 863, column: 40, scope: !10714)
!10719 = !DILocation(line: 863, column: 43, scope: !10714)
!10720 = !DILocation(line: 863, column: 53, scope: !10714)
!10721 = !DILocation(line: 863, column: 33, scope: !10714)
!10722 = !DILocation(line: 863, column: 10, scope: !10714)
!10723 = !DILocation(line: 864, column: 16, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10714, file: !6239, line: 864, column: 4)
!10725 = !DILocation(line: 864, column: 9, scope: !10724)
!10726 = !DILocation(line: 864, column: 21, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10724, file: !6239, line: 864, column: 4)
!10728 = !DILocation(line: 864, column: 28, scope: !10727)
!10729 = !DILocation(line: 864, column: 4, scope: !10724)
!10730 = !DILocation(line: 865, column: 34, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10727, file: !6239, line: 864, column: 43)
!10732 = !DILocation(line: 866, column: 7, scope: !10731)
!10733 = !DILocation(line: 866, column: 14, scope: !10731)
!10734 = !DILocation(line: 866, column: 22, scope: !10731)
!10735 = !DILocation(line: 866, column: 35, scope: !10731)
!10736 = !DILocation(line: 865, column: 14, scope: !10731)
!10737 = !DILocation(line: 865, column: 12, scope: !10731)
!10738 = !DILocation(line: 867, column: 9, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10731, file: !6239, line: 867, column: 9)
!10740 = !DILocation(line: 867, column: 16, scope: !10739)
!10741 = !DILocation(line: 867, column: 9, scope: !10731)
!10742 = !DILocation(line: 868, column: 6, scope: !10739)
!10743 = !DILocation(line: 869, column: 4, scope: !10731)
!10744 = !DILocation(line: 864, column: 39, scope: !10727)
!10745 = !DILocation(line: 864, column: 4, scope: !10727)
!10746 = distinct !{!10746, !10729, !10747}
!10747 = !DILocation(line: 869, column: 4, scope: !10724)
!10748 = !DILocation(line: 870, column: 3, scope: !10714)
!10749 = !DILocation(line: 862, column: 37, scope: !10710)
!10750 = !DILocation(line: 862, column: 3, scope: !10710)
!10751 = distinct !{!10751, !10712, !10752}
!10752 = !DILocation(line: 870, column: 3, scope: !10704)
!10753 = !DILocation(line: 873, column: 2, scope: !10699)
!10754 = !DILocation(line: 874, column: 32, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10694, file: !6239, line: 873, column: 9)
!10756 = !DILocation(line: 874, column: 44, scope: !10755)
!10757 = !DILocation(line: 874, column: 57, scope: !10755)
!10758 = !DILocation(line: 874, column: 12, scope: !10755)
!10759 = !DILocation(line: 874, column: 10, scope: !10755)
!10760 = !DILocation(line: 876, column: 6, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10642, file: !6239, line: 876, column: 6)
!10762 = !DILocation(line: 876, column: 6, scope: !10642)
!10763 = !DILocation(line: 877, column: 3, scope: !10761)
!10764 = !DILabel(scope: !10642, name: "got_it", file: !6239, line: 879)
!10765 = !DILocation(line: 879, column: 2, scope: !10642)
!10766 = !DILocation(line: 880, column: 18, scope: !10642)
!10767 = !DILocation(line: 880, column: 22, scope: !10642)
!10768 = !DILocation(line: 880, column: 25, scope: !10642)
!10769 = !DILocation(line: 880, column: 34, scope: !10642)
!10770 = !DILocation(line: 880, column: 40, scope: !10642)
!10771 = !DILocation(line: 881, column: 5, scope: !10642)
!10772 = !DILocation(line: 881, column: 9, scope: !10642)
!10773 = !DILocation(line: 881, column: 12, scope: !10642)
!10774 = !DILocation(line: 881, column: 19, scope: !10642)
!10775 = !DILocation(line: 880, column: 53, scope: !10642)
!10776 = !DILocation(line: 880, column: 17, scope: !10642)
!10777 = !DILocation(line: 880, column: 2, scope: !10642)
!10778 = !DILocation(line: 880, column: 6, scope: !10642)
!10779 = !DILocation(line: 880, column: 9, scope: !10642)
!10780 = !DILocation(line: 880, column: 15, scope: !10642)
!10781 = !DILocation(line: 882, column: 20, scope: !10642)
!10782 = !DILocation(line: 882, column: 24, scope: !10642)
!10783 = !DILocation(line: 882, column: 27, scope: !10642)
!10784 = !DILocation(line: 882, column: 36, scope: !10642)
!10785 = !DILocation(line: 882, column: 40, scope: !10642)
!10786 = !DILocation(line: 882, column: 43, scope: !10642)
!10787 = !DILocation(line: 882, column: 53, scope: !10642)
!10788 = !DILocation(line: 882, column: 33, scope: !10642)
!10789 = !DILocation(line: 882, column: 2, scope: !10642)
!10790 = !DILocation(line: 882, column: 6, scope: !10642)
!10791 = !DILocation(line: 882, column: 9, scope: !10642)
!10792 = !DILocation(line: 882, column: 18, scope: !10642)
!10793 = !DILocation(line: 883, column: 20, scope: !10642)
!10794 = !DILocation(line: 883, column: 2, scope: !10642)
!10795 = !DILocation(line: 883, column: 6, scope: !10642)
!10796 = !DILocation(line: 883, column: 9, scope: !10642)
!10797 = !DILocation(line: 883, column: 18, scope: !10642)
!10798 = !DILocation(line: 884, column: 19, scope: !10642)
!10799 = !DILocation(line: 884, column: 23, scope: !10642)
!10800 = !DILocation(line: 884, column: 26, scope: !10642)
!10801 = !DILocation(line: 885, column: 5, scope: !10642)
!10802 = !DILocation(line: 885, column: 12, scope: !10642)
!10803 = !DILocation(line: 885, column: 26, scope: !10642)
!10804 = !DILocation(line: 885, column: 23, scope: !10642)
!10805 = !DILocation(line: 885, column: 18, scope: !10642)
!10806 = !DILocation(line: 884, column: 2, scope: !10642)
!10807 = !DILocation(line: 884, column: 6, scope: !10642)
!10808 = !DILocation(line: 884, column: 9, scope: !10642)
!10809 = !DILocation(line: 884, column: 17, scope: !10642)
!10810 = !DILocation(line: 889, column: 30, scope: !10642)
!10811 = !DILocation(line: 889, column: 18, scope: !10642)
!10812 = !DILocation(line: 889, column: 2, scope: !10642)
!10813 = !DILocation(line: 889, column: 6, scope: !10642)
!10814 = !DILocation(line: 889, column: 15, scope: !10642)
!10815 = !DILocation(line: 890, column: 30, scope: !10642)
!10816 = !DILocation(line: 890, column: 36, scope: !10642)
!10817 = !DILocation(line: 890, column: 40, scope: !10642)
!10818 = !DILocation(line: 890, column: 43, scope: !10642)
!10819 = !DILocation(line: 890, column: 18, scope: !10642)
!10820 = !DILocation(line: 890, column: 2, scope: !10642)
!10821 = !DILocation(line: 890, column: 6, scope: !10642)
!10822 = !DILocation(line: 890, column: 15, scope: !10642)
!10823 = !DILocation(line: 891, column: 33, scope: !10642)
!10824 = !DILocation(line: 891, column: 39, scope: !10642)
!10825 = !DILocation(line: 891, column: 2, scope: !10642)
!10826 = !DILabel(scope: !10642, name: "done", file: !6239, line: 893)
!10827 = !DILocation(line: 893, column: 1, scope: !10642)
!10828 = !DILocation(line: 894, column: 9, scope: !10642)
!10829 = !DILocation(line: 894, column: 2, scope: !10642)
!10830 = !DILocation(line: 895, column: 1, scope: !10642)
!10831 = distinct !DISubprogram(name: "qh_refresh", scope: !9723, file: !9723, line: 113, type: !10193, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10832 = !DILocalVariable(name: "ehci", arg: 1, scope: !10831, file: !9723, line: 113, type: !5814)
!10833 = !DILocation(line: 113, column: 30, scope: !10831)
!10834 = !DILocalVariable(name: "qh", arg: 2, scope: !10831, file: !9723, line: 113, type: !5884)
!10835 = !DILocation(line: 113, column: 52, scope: !10831)
!10836 = !DILocalVariable(name: "qtd", scope: !10831, file: !9723, line: 115, type: !5993)
!10837 = !DILocation(line: 115, column: 19, scope: !10831)
!10838 = !DILocalVariable(name: "__mptr", scope: !10839, file: !9723, line: 117, type: !341)
!10839 = distinct !DILexicalBlock(scope: !10831, file: !9723, line: 117, column: 8)
!10840 = !DILocation(line: 117, column: 8, scope: !10839)
!10841 = !DILocation(line: 117, column: 8, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10839, file: !9723, line: 117, column: 8)
!10843 = !DILocation(line: 117, column: 6, scope: !10831)
!10844 = !DILocation(line: 126, column: 6, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10831, file: !9723, line: 126, column: 6)
!10846 = !DILocation(line: 126, column: 10, scope: !10845)
!10847 = !DILocation(line: 126, column: 14, scope: !10845)
!10848 = !DILocation(line: 126, column: 25, scope: !10845)
!10849 = !DILocation(line: 126, column: 23, scope: !10845)
!10850 = !DILocation(line: 126, column: 6, scope: !10831)
!10851 = !DILocation(line: 127, column: 25, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10845, file: !9723, line: 126, column: 43)
!10853 = !DILocation(line: 127, column: 30, scope: !10852)
!10854 = !DILocation(line: 127, column: 3, scope: !10852)
!10855 = !DILocation(line: 127, column: 7, scope: !10852)
!10856 = !DILocation(line: 127, column: 11, scope: !10852)
!10857 = !DILocation(line: 127, column: 23, scope: !10852)
!10858 = !DILocation(line: 128, column: 7, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10852, file: !9723, line: 128, column: 7)
!10860 = !DILocation(line: 128, column: 11, scope: !10859)
!10861 = !DILocation(line: 128, column: 7, scope: !10852)
!10862 = !DILocation(line: 129, column: 4, scope: !10859)
!10863 = !DILocation(line: 130, column: 2, scope: !10852)
!10864 = !DILocation(line: 131, column: 13, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10845, file: !9723, line: 130, column: 9)
!10866 = !DILocation(line: 131, column: 19, scope: !10865)
!10867 = !DILocation(line: 131, column: 23, scope: !10865)
!10868 = !DILocation(line: 131, column: 3, scope: !10865)
!10869 = !DILocation(line: 133, column: 2, scope: !10831)
!10870 = !DILocation(line: 133, column: 6, scope: !10831)
!10871 = !DILocation(line: 133, column: 25, scope: !10831)
!10872 = !DILocation(line: 134, column: 1, scope: !10831)
!10873 = distinct !DISubprogram(name: "qh_link_periodic", scope: !6239, file: !6239, line: 514, type: !10193, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!10874 = !DILocalVariable(name: "ehci", arg: 1, scope: !10873, file: !6239, line: 514, type: !5814)
!10875 = !DILocation(line: 514, column: 47, scope: !10873)
!10876 = !DILocalVariable(name: "qh", arg: 2, scope: !10873, file: !6239, line: 514, type: !5884)
!10877 = !DILocation(line: 514, column: 69, scope: !10873)
!10878 = !DILocalVariable(name: "i", scope: !10873, file: !6239, line: 516, type: !7)
!10879 = !DILocation(line: 516, column: 11, scope: !10873)
!10880 = !DILocalVariable(name: "period", scope: !10873, file: !6239, line: 517, type: !7)
!10881 = !DILocation(line: 517, column: 11, scope: !10873)
!10882 = !DILocation(line: 517, column: 20, scope: !10873)
!10883 = !DILocation(line: 517, column: 24, scope: !10873)
!10884 = !DILocation(line: 517, column: 27, scope: !10873)
!10885 = !DILocation(line: 526, column: 6, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10873, file: !6239, line: 526, column: 6)
!10887 = !DILocation(line: 526, column: 13, scope: !10886)
!10888 = !DILocation(line: 526, column: 6, scope: !10873)
!10889 = !DILocation(line: 527, column: 10, scope: !10886)
!10890 = !DILocation(line: 527, column: 3, scope: !10886)
!10891 = !DILocation(line: 529, column: 11, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10873, file: !6239, line: 529, column: 2)
!10893 = !DILocation(line: 529, column: 15, scope: !10892)
!10894 = !DILocation(line: 529, column: 18, scope: !10892)
!10895 = !DILocation(line: 529, column: 9, scope: !10892)
!10896 = !DILocation(line: 529, column: 7, scope: !10892)
!10897 = !DILocation(line: 529, column: 25, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10892, file: !6239, line: 529, column: 2)
!10899 = !DILocation(line: 529, column: 29, scope: !10898)
!10900 = !DILocation(line: 529, column: 35, scope: !10898)
!10901 = !DILocation(line: 529, column: 27, scope: !10898)
!10902 = !DILocation(line: 529, column: 2, scope: !10892)
!10903 = !DILocalVariable(name: "prev", scope: !10904, file: !6239, line: 530, type: !6030)
!10904 = distinct !DILexicalBlock(scope: !10898, file: !6239, line: 529, column: 63)
!10905 = !DILocation(line: 530, column: 22, scope: !10904)
!10906 = !DILocation(line: 530, column: 30, scope: !10904)
!10907 = !DILocation(line: 530, column: 36, scope: !10904)
!10908 = !DILocation(line: 530, column: 44, scope: !10904)
!10909 = !DILocalVariable(name: "hw_p", scope: !10904, file: !6239, line: 531, type: !5988)
!10910 = !DILocation(line: 531, column: 13, scope: !10904)
!10911 = !DILocation(line: 531, column: 21, scope: !10904)
!10912 = !DILocation(line: 531, column: 27, scope: !10904)
!10913 = !DILocation(line: 531, column: 36, scope: !10904)
!10914 = !DILocalVariable(name: "here", scope: !10904, file: !6239, line: 532, type: !5903)
!10915 = !DILocation(line: 532, column: 21, scope: !10904)
!10916 = !DILocation(line: 532, column: 29, scope: !10904)
!10917 = !DILocation(line: 532, column: 28, scope: !10904)
!10918 = !DILocalVariable(name: "type", scope: !10904, file: !6239, line: 533, type: !5103)
!10919 = !DILocation(line: 533, column: 12, scope: !10904)
!10920 = !DILocation(line: 536, column: 3, scope: !10904)
!10921 = !DILocation(line: 536, column: 15, scope: !10904)
!10922 = !DILocation(line: 537, column: 11, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10904, file: !6239, line: 536, column: 20)
!10924 = !DILocation(line: 537, column: 9, scope: !10923)
!10925 = !DILocation(line: 538, column: 8, scope: !10926)
!10926 = distinct !DILexicalBlock(scope: !10923, file: !6239, line: 538, column: 8)
!10927 = !DILocation(line: 538, column: 28, scope: !10926)
!10928 = !DILocation(line: 538, column: 16, scope: !10926)
!10929 = !DILocation(line: 538, column: 13, scope: !10926)
!10930 = !DILocation(line: 538, column: 8, scope: !10923)
!10931 = !DILocation(line: 539, column: 5, scope: !10926)
!10932 = !DILocation(line: 540, column: 32, scope: !10923)
!10933 = !DILocation(line: 540, column: 38, scope: !10923)
!10934 = !DILocation(line: 540, column: 44, scope: !10923)
!10935 = !DILocation(line: 540, column: 11, scope: !10923)
!10936 = !DILocation(line: 540, column: 9, scope: !10923)
!10937 = !DILocation(line: 541, column: 32, scope: !10923)
!10938 = !DILocation(line: 541, column: 45, scope: !10923)
!10939 = !DILocation(line: 541, column: 11, scope: !10923)
!10940 = !DILocation(line: 541, column: 9, scope: !10923)
!10941 = !DILocation(line: 542, column: 12, scope: !10923)
!10942 = !DILocation(line: 542, column: 11, scope: !10923)
!10943 = distinct !{!10943, !10920, !10944}
!10944 = !DILocation(line: 543, column: 3, scope: !10904)
!10945 = !DILocation(line: 548, column: 3, scope: !10904)
!10946 = !DILocation(line: 548, column: 15, scope: !10904)
!10947 = !DILocation(line: 548, column: 10, scope: !10904)
!10948 = !DILocation(line: 548, column: 19, scope: !10904)
!10949 = !DILocation(line: 548, column: 22, scope: !10904)
!10950 = !DILocation(line: 548, column: 33, scope: !10904)
!10951 = !DILocation(line: 548, column: 25, scope: !10904)
!10952 = !DILocation(line: 0, scope: !10904)
!10953 = !DILocation(line: 549, column: 8, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10955, file: !6239, line: 549, column: 8)
!10955 = distinct !DILexicalBlock(scope: !10904, file: !6239, line: 548, column: 37)
!10956 = !DILocation(line: 549, column: 12, scope: !10954)
!10957 = !DILocation(line: 549, column: 15, scope: !10954)
!10958 = !DILocation(line: 549, column: 29, scope: !10954)
!10959 = !DILocation(line: 549, column: 33, scope: !10954)
!10960 = !DILocation(line: 549, column: 36, scope: !10954)
!10961 = !DILocation(line: 549, column: 24, scope: !10954)
!10962 = !DILocation(line: 549, column: 22, scope: !10954)
!10963 = !DILocation(line: 549, column: 8, scope: !10955)
!10964 = !DILocation(line: 550, column: 5, scope: !10954)
!10965 = !DILocation(line: 551, column: 17, scope: !10955)
!10966 = !DILocation(line: 551, column: 21, scope: !10955)
!10967 = !DILocation(line: 551, column: 9, scope: !10955)
!10968 = !DILocation(line: 552, column: 17, scope: !10955)
!10969 = !DILocation(line: 552, column: 21, scope: !10955)
!10970 = !DILocation(line: 552, column: 25, scope: !10955)
!10971 = !DILocation(line: 552, column: 9, scope: !10955)
!10972 = !DILocation(line: 553, column: 12, scope: !10955)
!10973 = !DILocation(line: 553, column: 11, scope: !10955)
!10974 = distinct !{!10974, !10945, !10975}
!10975 = !DILocation(line: 554, column: 3, scope: !10904)
!10976 = !DILocation(line: 556, column: 7, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10904, file: !6239, line: 556, column: 7)
!10978 = !DILocation(line: 556, column: 18, scope: !10977)
!10979 = !DILocation(line: 556, column: 10, scope: !10977)
!10980 = !DILocation(line: 556, column: 7, scope: !10904)
!10981 = !DILocation(line: 557, column: 4, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10977, file: !6239, line: 556, column: 22)
!10983 = !DILocation(line: 557, column: 8, scope: !10982)
!10984 = !DILocation(line: 557, column: 18, scope: !10982)
!10985 = !DILocation(line: 558, column: 13, scope: !10986)
!10986 = distinct !DILexicalBlock(scope: !10982, file: !6239, line: 558, column: 8)
!10987 = !DILocation(line: 558, column: 8, scope: !10986)
!10988 = !DILocation(line: 558, column: 8, scope: !10982)
!10989 = !DILocation(line: 559, column: 24, scope: !10986)
!10990 = !DILocation(line: 559, column: 23, scope: !10986)
!10991 = !DILocation(line: 559, column: 5, scope: !10986)
!10992 = !DILocation(line: 559, column: 9, scope: !10986)
!10993 = !DILocation(line: 559, column: 13, scope: !10986)
!10994 = !DILocation(line: 559, column: 21, scope: !10986)
!10995 = !DILocation(line: 560, column: 4, scope: !10982)
!10996 = !{i32 -2139838233}
!10997 = !DILocation(line: 561, column: 15, scope: !10982)
!10998 = !DILocation(line: 561, column: 4, scope: !10982)
!10999 = !DILocation(line: 561, column: 10, scope: !10982)
!11000 = !DILocation(line: 561, column: 13, scope: !10982)
!11001 = !DILocation(line: 562, column: 12, scope: !10982)
!11002 = !DILocation(line: 562, column: 5, scope: !10982)
!11003 = !DILocation(line: 562, column: 10, scope: !10982)
!11004 = !DILocation(line: 563, column: 3, scope: !10982)
!11005 = !DILocation(line: 564, column: 2, scope: !10904)
!11006 = !DILocation(line: 529, column: 55, scope: !10898)
!11007 = !DILocation(line: 529, column: 52, scope: !10898)
!11008 = !DILocation(line: 529, column: 2, scope: !10898)
!11009 = distinct !{!11009, !10902, !11010}
!11010 = !DILocation(line: 564, column: 2, scope: !10892)
!11011 = !DILocation(line: 565, column: 2, scope: !10873)
!11012 = !DILocation(line: 565, column: 6, scope: !10873)
!11013 = !DILocation(line: 565, column: 15, scope: !10873)
!11014 = !DILocation(line: 566, column: 2, scope: !10873)
!11015 = !DILocation(line: 566, column: 6, scope: !10873)
!11016 = !DILocation(line: 566, column: 15, scope: !10873)
!11017 = !DILocation(line: 567, column: 2, scope: !10873)
!11018 = !DILocation(line: 567, column: 6, scope: !10873)
!11019 = !DILocation(line: 567, column: 20, scope: !10873)
!11020 = !DILocation(line: 570, column: 49, scope: !10873)
!11021 = !DILocation(line: 570, column: 53, scope: !10873)
!11022 = !DILocation(line: 570, column: 56, scope: !10873)
!11023 = !DILocation(line: 571, column: 7, scope: !10873)
!11024 = !DILocation(line: 571, column: 11, scope: !10873)
!11025 = !DILocation(line: 571, column: 14, scope: !10873)
!11026 = !DILocation(line: 571, column: 22, scope: !10873)
!11027 = !DILocation(line: 571, column: 26, scope: !10873)
!11028 = !DILocation(line: 571, column: 29, scope: !10873)
!11029 = !DILocation(line: 571, column: 20, scope: !10873)
!11030 = !DILocation(line: 571, column: 40, scope: !10873)
!11031 = !DILocation(line: 571, column: 44, scope: !10873)
!11032 = !DILocation(line: 571, column: 47, scope: !10873)
!11033 = !DILocation(line: 571, column: 38, scope: !10873)
!11034 = !DILocation(line: 572, column: 6, scope: !10873)
!11035 = !DILocation(line: 572, column: 10, scope: !10873)
!11036 = !DILocation(line: 572, column: 13, scope: !10873)
!11037 = !DILocation(line: 572, column: 19, scope: !10873)
!11038 = !DILocation(line: 570, column: 14, scope: !10873)
!11039 = !DILocation(line: 570, column: 2, scope: !10873)
!11040 = !DILocation(line: 570, column: 21, scope: !10873)
!11041 = !DILocation(line: 570, column: 26, scope: !10873)
!11042 = !DILocation(line: 570, column: 46, scope: !10873)
!11043 = !DILocation(line: 574, column: 12, scope: !10873)
!11044 = !DILocation(line: 574, column: 16, scope: !10873)
!11045 = !DILocation(line: 574, column: 28, scope: !10873)
!11046 = !DILocation(line: 574, column: 34, scope: !10873)
!11047 = !DILocation(line: 574, column: 2, scope: !10873)
!11048 = !DILocation(line: 577, column: 4, scope: !10873)
!11049 = !DILocation(line: 577, column: 10, scope: !10873)
!11050 = !DILocation(line: 577, column: 2, scope: !10873)
!11051 = !DILocation(line: 578, column: 18, scope: !10873)
!11052 = !DILocation(line: 578, column: 2, scope: !10873)
!11053 = !DILocation(line: 579, column: 1, scope: !10873)
!11054 = distinct !DISubprogram(name: "disable_periodic", scope: !6239, file: !6239, line: 497, type: !6235, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11055 = !DILocalVariable(name: "ehci", arg: 1, scope: !11054, file: !6239, line: 497, type: !5814)
!11056 = !DILocation(line: 497, column: 47, scope: !11054)
!11057 = !DILocation(line: 499, column: 8, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11054, file: !6239, line: 499, column: 6)
!11059 = !DILocation(line: 499, column: 14, scope: !11058)
!11060 = !DILocation(line: 499, column: 6, scope: !11058)
!11061 = !DILocation(line: 499, column: 6, scope: !11054)
!11062 = !DILocation(line: 500, column: 3, scope: !11058)
!11063 = !DILocation(line: 503, column: 16, scope: !11054)
!11064 = !DILocation(line: 503, column: 2, scope: !11054)
!11065 = !DILocation(line: 504, column: 1, scope: !11054)
!11066 = distinct !DISubprogram(name: "ehci_urb_done", scope: !9723, file: !9723, line: 251, type: !11067, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11067 = !DISubroutineType(types: !11068)
!11068 = !{null, !5814, !5343, !401}
!11069 = !DILocalVariable(name: "ehci", arg: 1, scope: !11066, file: !9723, line: 251, type: !5814)
!11070 = !DILocation(line: 251, column: 32, scope: !11066)
!11071 = !DILocalVariable(name: "urb", arg: 2, scope: !11066, file: !9723, line: 251, type: !5343)
!11072 = !DILocation(line: 251, column: 50, scope: !11066)
!11073 = !DILocalVariable(name: "status", arg: 3, scope: !11066, file: !9723, line: 251, type: !401)
!11074 = !DILocation(line: 251, column: 59, scope: !11066)
!11075 = !DILocation(line: 253, column: 6, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11066, file: !9723, line: 253, column: 6)
!11077 = !DILocation(line: 253, column: 30, scope: !11076)
!11078 = !DILocation(line: 253, column: 6, scope: !11066)
!11079 = !DILocation(line: 255, column: 15, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11076, file: !9723, line: 253, column: 49)
!11081 = !DILocation(line: 255, column: 3, scope: !11080)
!11082 = !DILocation(line: 255, column: 22, scope: !11080)
!11083 = !DILocation(line: 255, column: 27, scope: !11080)
!11084 = !DILocation(line: 255, column: 45, scope: !11080)
!11085 = !DILocation(line: 256, column: 2, scope: !11080)
!11086 = !DILocation(line: 258, column: 6, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11066, file: !9723, line: 258, column: 6)
!11088 = !DILocation(line: 258, column: 6, scope: !11066)
!11089 = !DILocation(line: 259, column: 3, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11087, file: !9723, line: 258, column: 31)
!11091 = !DILocation(line: 259, column: 3, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11090, file: !9723, line: 259, column: 3)
!11093 = !DILocation(line: 260, column: 2, scope: !11090)
!11094 = !DILocation(line: 262, column: 7, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11096, file: !9723, line: 262, column: 7)
!11096 = distinct !DILexicalBlock(scope: !11087, file: !9723, line: 260, column: 9)
!11097 = !DILocation(line: 262, column: 14, scope: !11095)
!11098 = !DILocation(line: 262, column: 30, scope: !11095)
!11099 = !DILocation(line: 262, column: 33, scope: !11095)
!11100 = !DILocation(line: 262, column: 40, scope: !11095)
!11101 = !DILocation(line: 262, column: 7, scope: !11096)
!11102 = !DILocation(line: 263, column: 11, scope: !11095)
!11103 = !DILocation(line: 263, column: 4, scope: !11095)
!11104 = !DILocation(line: 264, column: 3, scope: !11096)
!11105 = !DILocation(line: 264, column: 3, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11096, file: !9723, line: 264, column: 3)
!11107 = !DILocation(line: 277, column: 41, scope: !11066)
!11108 = !DILocation(line: 277, column: 29, scope: !11066)
!11109 = !DILocation(line: 277, column: 48, scope: !11066)
!11110 = !DILocation(line: 277, column: 2, scope: !11066)
!11111 = !DILocation(line: 278, column: 35, scope: !11066)
!11112 = !DILocation(line: 278, column: 23, scope: !11066)
!11113 = !DILocation(line: 278, column: 42, scope: !11066)
!11114 = !DILocation(line: 278, column: 47, scope: !11066)
!11115 = !DILocation(line: 278, column: 2, scope: !11066)
!11116 = !DILocation(line: 279, column: 1, scope: !11066)
!11117 = distinct !DISubprogram(name: "ehci_qtd_free", scope: !8545, file: !8545, line: 48, type: !11118, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11118 = !DISubroutineType(types: !11119)
!11119 = !{null, !5814, !5993}
!11120 = !DILocalVariable(name: "ehci", arg: 1, scope: !11117, file: !8545, line: 48, type: !5814)
!11121 = !DILocation(line: 48, column: 52, scope: !11117)
!11122 = !DILocalVariable(name: "qtd", arg: 2, scope: !11117, file: !8545, line: 48, type: !5993)
!11123 = !DILocation(line: 48, column: 75, scope: !11117)
!11124 = !DILocation(line: 50, column: 17, scope: !11117)
!11125 = !DILocation(line: 50, column: 23, scope: !11117)
!11126 = !DILocation(line: 50, column: 33, scope: !11117)
!11127 = !DILocation(line: 50, column: 38, scope: !11117)
!11128 = !DILocation(line: 50, column: 43, scope: !11117)
!11129 = !DILocation(line: 50, column: 2, scope: !11117)
!11130 = !DILocation(line: 51, column: 1, scope: !11117)
!11131 = distinct !DISubprogram(name: "hc32_to_cpu", scope: !6, file: !6, line: 845, type: !11132, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11132 = !DISubroutineType(types: !11133)
!11133 = !{!303, !6335, !11134}
!11134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5103)
!11135 = !DILocalVariable(name: "ehci", arg: 1, scope: !11131, file: !6, line: 845, type: !6335)
!11136 = !DILocation(line: 845, column: 54, scope: !11131)
!11137 = !DILocalVariable(name: "x", arg: 2, scope: !11131, file: !6, line: 845, type: !11134)
!11138 = !DILocation(line: 845, column: 73, scope: !11131)
!11139 = !DILocation(line: 847, column: 9, scope: !11131)
!11140 = !DILocation(line: 847, column: 2, scope: !11131)
!11141 = distinct !DISubprogram(name: "ehci_clear_tt_buffer", scope: !9723, file: !9723, line: 155, type: !11142, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11142 = !DISubroutineType(types: !11143)
!11143 = !{null, !5814, !5884, !5343, !303}
!11144 = !DILocalVariable(name: "ehci", arg: 1, scope: !11141, file: !9723, line: 155, type: !5814)
!11145 = !DILocation(line: 155, column: 51, scope: !11141)
!11146 = !DILocalVariable(name: "qh", arg: 2, scope: !11141, file: !9723, line: 155, type: !5884)
!11147 = !DILocation(line: 155, column: 73, scope: !11141)
!11148 = !DILocalVariable(name: "urb", arg: 3, scope: !11141, file: !9723, line: 156, type: !5343)
!11149 = !DILocation(line: 156, column: 15, scope: !11141)
!11150 = !DILocalVariable(name: "token", arg: 4, scope: !11141, file: !9723, line: 156, type: !303)
!11151 = !DILocation(line: 156, column: 24, scope: !11141)
!11152 = !DILocation(line: 165, column: 6, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11141, file: !9723, line: 165, column: 6)
!11154 = !DILocation(line: 165, column: 11, scope: !11153)
!11155 = !DILocation(line: 165, column: 16, scope: !11153)
!11156 = !DILocation(line: 165, column: 19, scope: !11153)
!11157 = !DILocation(line: 165, column: 23, scope: !11153)
!11158 = !DILocation(line: 165, column: 46, scope: !11153)
!11159 = !DILocation(line: 165, column: 50, scope: !11153)
!11160 = !DILocation(line: 165, column: 54, scope: !11153)
!11161 = !DILocation(line: 165, column: 6, scope: !11141)
!11162 = !DILocation(line: 176, column: 32, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11164, file: !9723, line: 176, column: 8)
!11164 = distinct !DILexicalBlock(scope: !11165, file: !9723, line: 175, column: 42)
!11165 = distinct !DILexicalBlock(scope: !11166, file: !9723, line: 173, column: 7)
!11166 = distinct !DILexicalBlock(scope: !11153, file: !9723, line: 165, column: 67)
!11167 = !DILocation(line: 176, column: 8, scope: !11163)
!11168 = !DILocation(line: 176, column: 37, scope: !11163)
!11169 = !DILocation(line: 176, column: 8, scope: !11164)
!11170 = !DILocation(line: 177, column: 5, scope: !11163)
!11171 = !DILocation(line: 177, column: 9, scope: !11163)
!11172 = !DILocation(line: 177, column: 21, scope: !11163)
!11173 = !DILocation(line: 184, column: 2, scope: !11166)
!11174 = !DILocation(line: 185, column: 1, scope: !11141)
!11175 = distinct !DISubprogram(name: "qtd_copy_status", scope: !9723, file: !9723, line: 187, type: !11176, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11176 = !DISubroutineType(types: !11177)
!11177 = !{!401, !5814, !5343, !462, !303}
!11178 = !DILocalVariable(name: "ehci", arg: 1, scope: !11175, file: !9723, line: 188, type: !5814)
!11179 = !DILocation(line: 188, column: 19, scope: !11175)
!11180 = !DILocalVariable(name: "urb", arg: 2, scope: !11175, file: !9723, line: 189, type: !5343)
!11181 = !DILocation(line: 189, column: 14, scope: !11175)
!11182 = !DILocalVariable(name: "length", arg: 3, scope: !11175, file: !9723, line: 190, type: !462)
!11183 = !DILocation(line: 190, column: 9, scope: !11175)
!11184 = !DILocalVariable(name: "token", arg: 4, scope: !11175, file: !9723, line: 191, type: !303)
!11185 = !DILocation(line: 191, column: 6, scope: !11175)
!11186 = !DILocalVariable(name: "status", scope: !11175, file: !9723, line: 194, type: !401)
!11187 = !DILocation(line: 194, column: 6, scope: !11175)
!11188 = !DILocation(line: 197, column: 6, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11175, file: !9723, line: 197, column: 6)
!11190 = !DILocation(line: 197, column: 6, scope: !11175)
!11191 = !DILocation(line: 198, column: 25, scope: !11189)
!11192 = !DILocation(line: 198, column: 34, scope: !11189)
!11193 = !DILocation(line: 198, column: 32, scope: !11189)
!11194 = !DILocation(line: 198, column: 3, scope: !11189)
!11195 = !DILocation(line: 198, column: 8, scope: !11189)
!11196 = !DILocation(line: 198, column: 22, scope: !11189)
!11197 = !DILocation(line: 201, column: 6, scope: !11198)
!11198 = distinct !DILexicalBlock(scope: !11175, file: !9723, line: 201, column: 6)
!11199 = !DILocation(line: 201, column: 6, scope: !11175)
!11200 = !DILocation(line: 202, column: 10, scope: !11198)
!11201 = !DILocation(line: 202, column: 3, scope: !11198)
!11202 = !DILocation(line: 205, column: 6, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11175, file: !9723, line: 205, column: 6)
!11204 = !DILocation(line: 0, scope: !11203)
!11205 = !DILocation(line: 205, column: 6, scope: !11175)
!11206 = !DILocation(line: 206, column: 10, scope: !11203)
!11207 = !DILocation(line: 206, column: 3, scope: !11203)
!11208 = !DILocation(line: 209, column: 6, scope: !11209)
!11209 = distinct !DILexicalBlock(scope: !11175, file: !9723, line: 209, column: 6)
!11210 = !DILocation(line: 209, column: 12, scope: !11209)
!11211 = !DILocation(line: 209, column: 6, scope: !11175)
!11212 = !DILocation(line: 210, column: 7, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11214, file: !9723, line: 210, column: 7)
!11214 = distinct !DILexicalBlock(scope: !11209, file: !9723, line: 209, column: 28)
!11215 = !DILocation(line: 210, column: 13, scope: !11213)
!11216 = !DILocation(line: 210, column: 7, scope: !11214)
!11217 = !DILocation(line: 212, column: 11, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11213, file: !9723, line: 210, column: 31)
!11219 = !DILocation(line: 217, column: 3, scope: !11218)
!11220 = !DILocation(line: 217, column: 15, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11213, file: !9723, line: 217, column: 14)
!11222 = !DILocation(line: 217, column: 21, scope: !11221)
!11223 = !DILocation(line: 217, column: 36, scope: !11221)
!11224 = !DILocation(line: 218, column: 7, scope: !11221)
!11225 = !DILocation(line: 218, column: 22, scope: !11221)
!11226 = !DILocation(line: 217, column: 14, scope: !11213)
!11227 = !DILocation(line: 219, column: 11, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11221, file: !9723, line: 218, column: 39)
!11229 = !DILocation(line: 221, column: 3, scope: !11228)
!11230 = !DILocation(line: 221, column: 14, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11221, file: !9723, line: 221, column: 14)
!11232 = !DILocation(line: 221, column: 14, scope: !11221)
!11233 = !DILocation(line: 222, column: 11, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11231, file: !9723, line: 221, column: 31)
!11235 = !DILocation(line: 228, column: 3, scope: !11234)
!11236 = !DILocation(line: 228, column: 14, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11231, file: !9723, line: 228, column: 14)
!11238 = !DILocation(line: 228, column: 20, scope: !11237)
!11239 = !DILocation(line: 228, column: 14, scope: !11231)
!11240 = !DILocation(line: 230, column: 11, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11237, file: !9723, line: 228, column: 35)
!11242 = !DILocation(line: 231, column: 3, scope: !11241)
!11243 = !DILocation(line: 231, column: 14, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11237, file: !9723, line: 231, column: 14)
!11245 = !DILocation(line: 231, column: 20, scope: !11244)
!11246 = !DILocation(line: 231, column: 14, scope: !11237)
!11247 = !DILocation(line: 232, column: 14, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11244, file: !9723, line: 231, column: 35)
!11249 = !DILocation(line: 232, column: 30, scope: !11248)
!11250 = !DILocation(line: 232, column: 13, scope: !11248)
!11251 = !DILocation(line: 232, column: 11, scope: !11248)
!11252 = !DILocation(line: 235, column: 3, scope: !11248)
!11253 = !DILocation(line: 235, column: 14, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11244, file: !9723, line: 235, column: 14)
!11255 = !DILocation(line: 235, column: 20, scope: !11254)
!11256 = !DILocation(line: 235, column: 14, scope: !11244)
!11257 = !DILocation(line: 241, column: 11, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11254, file: !9723, line: 235, column: 36)
!11259 = !DILocation(line: 242, column: 3, scope: !11258)
!11260 = !DILocation(line: 243, column: 11, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11254, file: !9723, line: 242, column: 10)
!11262 = !DILocation(line: 245, column: 2, scope: !11214)
!11263 = !DILocation(line: 247, column: 9, scope: !11175)
!11264 = !DILocation(line: 247, column: 2, scope: !11175)
!11265 = !DILocation(line: 248, column: 1, scope: !11175)
!11266 = distinct !DISubprogram(name: "list_del", scope: !9075, file: !9075, line: 144, type: !9076, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11267 = !DILocalVariable(name: "entry", arg: 1, scope: !11266, file: !9075, line: 144, type: !365)
!11268 = !DILocation(line: 144, column: 47, scope: !11266)
!11269 = !DILocation(line: 146, column: 19, scope: !11266)
!11270 = !DILocation(line: 146, column: 2, scope: !11266)
!11271 = !DILocation(line: 147, column: 2, scope: !11266)
!11272 = !DILocation(line: 147, column: 9, scope: !11266)
!11273 = !DILocation(line: 147, column: 14, scope: !11266)
!11274 = !DILocation(line: 148, column: 2, scope: !11266)
!11275 = !DILocation(line: 148, column: 9, scope: !11266)
!11276 = !DILocation(line: 148, column: 14, scope: !11266)
!11277 = !DILocation(line: 149, column: 1, scope: !11266)
!11278 = distinct !DISubprogram(name: "find_tt", scope: !6239, file: !6239, line: 101, type: !11279, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11279 = !DISubroutineType(types: !11280)
!11280 = !{!6096, !5047}
!11281 = !DILocalVariable(name: "udev", arg: 1, scope: !11278, file: !6239, line: 101, type: !5047)
!11282 = !DILocation(line: 101, column: 51, scope: !11278)
!11283 = !DILocalVariable(name: "utt", scope: !11278, file: !6239, line: 103, type: !5058)
!11284 = !DILocation(line: 103, column: 18, scope: !11278)
!11285 = !DILocation(line: 103, column: 24, scope: !11278)
!11286 = !DILocation(line: 103, column: 30, scope: !11278)
!11287 = !DILocalVariable(name: "tt", scope: !11278, file: !6239, line: 104, type: !6096)
!11288 = !DILocation(line: 104, column: 19, scope: !11278)
!11289 = !DILocalVariable(name: "tt_index", scope: !11278, file: !6239, line: 104, type: !6095)
!11290 = !DILocation(line: 104, column: 25, scope: !11278)
!11291 = !DILocalVariable(name: "ptt", scope: !11278, file: !6239, line: 104, type: !6095)
!11292 = !DILocation(line: 104, column: 37, scope: !11278)
!11293 = !DILocalVariable(name: "port", scope: !11278, file: !6239, line: 105, type: !7)
!11294 = !DILocation(line: 105, column: 12, scope: !11278)
!11295 = !DILocalVariable(name: "allocated_index", scope: !11278, file: !6239, line: 106, type: !626)
!11296 = !DILocation(line: 106, column: 9, scope: !11278)
!11297 = !DILocation(line: 108, column: 7, scope: !11298)
!11298 = distinct !DILexicalBlock(scope: !11278, file: !6239, line: 108, column: 6)
!11299 = !DILocation(line: 108, column: 6, scope: !11278)
!11300 = !DILocation(line: 109, column: 3, scope: !11298)
!11301 = !DILocation(line: 116, column: 11, scope: !11278)
!11302 = !DILocation(line: 117, column: 6, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11278, file: !6239, line: 117, column: 6)
!11304 = !DILocation(line: 117, column: 11, scope: !11303)
!11305 = !DILocation(line: 117, column: 6, scope: !11278)
!11306 = !DILocation(line: 118, column: 14, scope: !11307)
!11307 = distinct !DILexicalBlock(scope: !11303, file: !6239, line: 117, column: 18)
!11308 = !DILocation(line: 118, column: 19, scope: !11307)
!11309 = !DILocation(line: 118, column: 12, scope: !11307)
!11310 = !DILocation(line: 119, column: 8, scope: !11311)
!11311 = distinct !DILexicalBlock(scope: !11307, file: !6239, line: 119, column: 7)
!11312 = !DILocation(line: 119, column: 7, scope: !11307)
!11313 = !DILocation(line: 120, column: 23, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11311, file: !6239, line: 119, column: 18)
!11315 = !DILocation(line: 120, column: 28, scope: !11314)
!11316 = !DILocation(line: 120, column: 33, scope: !11314)
!11317 = !DILocation(line: 120, column: 15, scope: !11314)
!11318 = !DILocation(line: 120, column: 13, scope: !11314)
!11319 = !DILocation(line: 123, column: 9, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11314, file: !6239, line: 123, column: 8)
!11321 = !DILocation(line: 123, column: 8, scope: !11314)
!11322 = !DILocation(line: 124, column: 12, scope: !11320)
!11323 = !DILocation(line: 124, column: 5, scope: !11320)
!11324 = !DILocation(line: 125, column: 18, scope: !11314)
!11325 = !DILocation(line: 125, column: 4, scope: !11314)
!11326 = !DILocation(line: 125, column: 9, scope: !11314)
!11327 = !DILocation(line: 125, column: 16, scope: !11314)
!11328 = !DILocation(line: 126, column: 20, scope: !11314)
!11329 = !DILocation(line: 127, column: 3, scope: !11314)
!11330 = !DILocation(line: 128, column: 10, scope: !11307)
!11331 = !DILocation(line: 128, column: 16, scope: !11307)
!11332 = !DILocation(line: 128, column: 23, scope: !11307)
!11333 = !DILocation(line: 128, column: 8, scope: !11307)
!11334 = !DILocation(line: 129, column: 10, scope: !11307)
!11335 = !DILocation(line: 129, column: 19, scope: !11307)
!11336 = !DILocation(line: 129, column: 7, scope: !11307)
!11337 = !DILocation(line: 130, column: 2, scope: !11307)
!11338 = !DILocation(line: 131, column: 8, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11303, file: !6239, line: 130, column: 9)
!11340 = !DILocation(line: 132, column: 30, scope: !11339)
!11341 = !DILocation(line: 132, column: 35, scope: !11339)
!11342 = !DILocation(line: 132, column: 9, scope: !11339)
!11343 = !DILocation(line: 132, column: 7, scope: !11339)
!11344 = !DILocation(line: 135, column: 8, scope: !11278)
!11345 = !DILocation(line: 135, column: 7, scope: !11278)
!11346 = !DILocation(line: 135, column: 5, scope: !11278)
!11347 = !DILocation(line: 136, column: 7, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11278, file: !6239, line: 136, column: 6)
!11349 = !DILocation(line: 136, column: 6, scope: !11278)
!11350 = !DILocalVariable(name: "ehci", scope: !11351, file: !6239, line: 137, type: !5814)
!11351 = distinct !DILexicalBlock(scope: !11348, file: !6239, line: 136, column: 11)
!11352 = !DILocation(line: 137, column: 21, scope: !11351)
!11353 = !DILocation(line: 138, column: 28, scope: !11351)
!11354 = !DILocation(line: 138, column: 34, scope: !11351)
!11355 = !DILocation(line: 138, column: 17, scope: !11351)
!11356 = !DILocation(line: 138, column: 5, scope: !11351)
!11357 = !DILocation(line: 140, column: 8, scope: !11351)
!11358 = !DILocation(line: 140, column: 6, scope: !11351)
!11359 = !DILocation(line: 141, column: 8, scope: !11360)
!11360 = distinct !DILexicalBlock(scope: !11351, file: !6239, line: 141, column: 7)
!11361 = !DILocation(line: 141, column: 7, scope: !11351)
!11362 = !DILocation(line: 142, column: 8, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11364, file: !6239, line: 142, column: 8)
!11364 = distinct !DILexicalBlock(scope: !11360, file: !6239, line: 141, column: 12)
!11365 = !DILocation(line: 142, column: 8, scope: !11364)
!11366 = !DILocation(line: 143, column: 5, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11363, file: !6239, line: 142, column: 25)
!11368 = !DILocation(line: 143, column: 10, scope: !11367)
!11369 = !DILocation(line: 143, column: 17, scope: !11367)
!11370 = !DILocation(line: 144, column: 11, scope: !11367)
!11371 = !DILocation(line: 144, column: 5, scope: !11367)
!11372 = !DILocation(line: 145, column: 4, scope: !11367)
!11373 = !DILocation(line: 146, column: 11, scope: !11364)
!11374 = !DILocation(line: 146, column: 4, scope: !11364)
!11375 = !DILocation(line: 148, column: 18, scope: !11351)
!11376 = !DILocation(line: 148, column: 22, scope: !11351)
!11377 = !DILocation(line: 148, column: 32, scope: !11351)
!11378 = !DILocation(line: 148, column: 38, scope: !11351)
!11379 = !DILocation(line: 148, column: 3, scope: !11351)
!11380 = !DILocation(line: 149, column: 19, scope: !11351)
!11381 = !DILocation(line: 149, column: 23, scope: !11351)
!11382 = !DILocation(line: 149, column: 3, scope: !11351)
!11383 = !DILocation(line: 150, column: 16, scope: !11351)
!11384 = !DILocation(line: 150, column: 3, scope: !11351)
!11385 = !DILocation(line: 150, column: 7, scope: !11351)
!11386 = !DILocation(line: 150, column: 14, scope: !11351)
!11387 = !DILocation(line: 151, column: 17, scope: !11351)
!11388 = !DILocation(line: 151, column: 3, scope: !11351)
!11389 = !DILocation(line: 151, column: 7, scope: !11351)
!11390 = !DILocation(line: 151, column: 15, scope: !11351)
!11391 = !DILocation(line: 152, column: 10, scope: !11351)
!11392 = !DILocation(line: 152, column: 4, scope: !11351)
!11393 = !DILocation(line: 152, column: 8, scope: !11351)
!11394 = !DILocation(line: 153, column: 2, scope: !11351)
!11395 = !DILocation(line: 155, column: 9, scope: !11278)
!11396 = !DILocation(line: 155, column: 2, scope: !11278)
!11397 = !DILocation(line: 156, column: 1, scope: !11278)
!11398 = distinct !DISubprogram(name: "IS_ERR", scope: !11399, file: !11399, line: 34, type: !11400, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11399 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!11400 = !DISubroutineType(types: !11401)
!11401 = !{!626, !3380}
!11402 = !DILocalVariable(name: "ptr", arg: 1, scope: !11398, file: !11399, line: 34, type: !3380)
!11403 = !DILocation(line: 34, column: 60, scope: !11398)
!11404 = !DILocation(line: 36, column: 9, scope: !11398)
!11405 = !DILocation(line: 36, column: 2, scope: !11398)
!11406 = distinct !DISubprogram(name: "PTR_ERR", scope: !11399, file: !11399, line: 29, type: !11407, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11407 = !DISubroutineType(types: !11408)
!11408 = !{!340, !3380}
!11409 = !DILocalVariable(name: "ptr", arg: 1, scope: !11406, file: !11399, line: 29, type: !3380)
!11410 = !DILocation(line: 29, column: 61, scope: !11406)
!11411 = !DILocation(line: 31, column: 16, scope: !11406)
!11412 = !DILocation(line: 31, column: 9, scope: !11406)
!11413 = !DILocation(line: 31, column: 2, scope: !11406)
!11414 = distinct !DISubprogram(name: "compute_tt_budget", scope: !6239, file: !6239, line: 261, type: !11415, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11415 = !DISubroutineType(types: !11416)
!11416 = !{null, !11417, !6096}
!11417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!11418 = !DILocalVariable(name: "budget_table", arg: 1, scope: !11414, file: !6239, line: 261, type: !11417)
!11419 = !DILocation(line: 261, column: 34, scope: !11414)
!11420 = !DILocalVariable(name: "tt", arg: 2, scope: !11414, file: !6239, line: 262, type: !6096)
!11421 = !DILocation(line: 262, column: 19, scope: !11414)
!11422 = !DILocalVariable(name: "ps", scope: !11414, file: !6239, line: 264, type: !6105)
!11423 = !DILocation(line: 264, column: 25, scope: !11414)
!11424 = !DILocalVariable(name: "uframe", scope: !11414, file: !6239, line: 265, type: !7)
!11425 = !DILocation(line: 265, column: 12, scope: !11414)
!11426 = !DILocalVariable(name: "uf", scope: !11414, file: !6239, line: 265, type: !7)
!11427 = !DILocation(line: 265, column: 20, scope: !11414)
!11428 = !DILocalVariable(name: "x", scope: !11414, file: !6239, line: 265, type: !7)
!11429 = !DILocation(line: 265, column: 24, scope: !11414)
!11430 = !DILocalVariable(name: "budget_line", scope: !11414, file: !6239, line: 266, type: !11417)
!11431 = !DILocation(line: 266, column: 8, scope: !11414)
!11432 = !DILocation(line: 268, column: 7, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11414, file: !6239, line: 268, column: 6)
!11434 = !DILocation(line: 268, column: 6, scope: !11414)
!11435 = !DILocation(line: 269, column: 3, scope: !11433)
!11436 = !DILocation(line: 270, column: 9, scope: !11414)
!11437 = !DILocation(line: 270, column: 2, scope: !11414)
!11438 = !DILocalVariable(name: "__mptr", scope: !11439, file: !6239, line: 273, type: !341)
!11439 = distinct !DILexicalBlock(scope: !11440, file: !6239, line: 273, column: 2)
!11440 = distinct !DILexicalBlock(scope: !11414, file: !6239, line: 273, column: 2)
!11441 = !DILocation(line: 273, column: 2, scope: !11439)
!11442 = !DILocation(line: 273, column: 2, scope: !11443)
!11443 = distinct !DILexicalBlock(scope: !11439, file: !6239, line: 273, column: 2)
!11444 = !DILocation(line: 273, column: 2, scope: !11440)
!11445 = !DILocation(line: 273, column: 2, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11440, file: !6239, line: 273, column: 2)
!11447 = !DILocation(line: 274, column: 17, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11449, file: !6239, line: 274, column: 3)
!11449 = distinct !DILexicalBlock(scope: !11446, file: !6239, line: 273, column: 49)
!11450 = !DILocation(line: 274, column: 21, scope: !11448)
!11451 = !DILocation(line: 274, column: 30, scope: !11448)
!11452 = !DILocation(line: 274, column: 15, scope: !11448)
!11453 = !DILocation(line: 274, column: 8, scope: !11448)
!11454 = !DILocation(line: 274, column: 36, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11448, file: !6239, line: 274, column: 3)
!11456 = !DILocation(line: 274, column: 43, scope: !11455)
!11457 = !DILocation(line: 274, column: 3, scope: !11448)
!11458 = !DILocation(line: 276, column: 19, scope: !11459)
!11459 = distinct !DILexicalBlock(scope: !11455, file: !6239, line: 275, column: 31)
!11460 = !DILocation(line: 276, column: 32, scope: !11459)
!11461 = !DILocation(line: 276, column: 16, scope: !11459)
!11462 = !DILocation(line: 277, column: 8, scope: !11459)
!11463 = !DILocation(line: 277, column: 12, scope: !11459)
!11464 = !DILocation(line: 277, column: 6, scope: !11459)
!11465 = !DILocation(line: 280, column: 14, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11459, file: !6239, line: 280, column: 4)
!11467 = !DILocation(line: 280, column: 18, scope: !11466)
!11468 = !DILocation(line: 280, column: 12, scope: !11466)
!11469 = !DILocation(line: 280, column: 9, scope: !11466)
!11470 = !DILocation(line: 280, column: 28, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11466, file: !6239, line: 280, column: 4)
!11472 = !DILocation(line: 280, column: 31, scope: !11471)
!11473 = !DILocation(line: 280, column: 4, scope: !11466)
!11474 = !DILocation(line: 281, column: 10, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11471, file: !6239, line: 280, column: 42)
!11476 = !DILocation(line: 281, column: 22, scope: !11475)
!11477 = !DILocation(line: 281, column: 7, scope: !11475)
!11478 = !DILocation(line: 284, column: 9, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11475, file: !6239, line: 284, column: 9)
!11480 = !DILocation(line: 284, column: 11, scope: !11479)
!11481 = !DILocation(line: 284, column: 9, scope: !11475)
!11482 = !DILocation(line: 285, column: 24, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11479, file: !6239, line: 284, column: 19)
!11484 = !DILocation(line: 285, column: 6, scope: !11483)
!11485 = !DILocation(line: 285, column: 18, scope: !11483)
!11486 = !DILocation(line: 285, column: 22, scope: !11483)
!11487 = !DILocation(line: 286, column: 6, scope: !11483)
!11488 = !DILocation(line: 288, column: 5, scope: !11475)
!11489 = !DILocation(line: 288, column: 17, scope: !11475)
!11490 = !DILocation(line: 288, column: 21, scope: !11475)
!11491 = !DILocation(line: 289, column: 7, scope: !11475)
!11492 = !DILocation(line: 290, column: 4, scope: !11475)
!11493 = !DILocation(line: 280, column: 36, scope: !11471)
!11494 = !DILocation(line: 280, column: 4, scope: !11471)
!11495 = distinct !{!11495, !11473, !11496}
!11496 = !DILocation(line: 290, column: 4, scope: !11466)
!11497 = !DILocation(line: 291, column: 3, scope: !11459)
!11498 = !DILocation(line: 275, column: 15, scope: !11455)
!11499 = !DILocation(line: 275, column: 19, scope: !11455)
!11500 = !DILocation(line: 275, column: 12, scope: !11455)
!11501 = !DILocation(line: 274, column: 3, scope: !11455)
!11502 = distinct !{!11502, !11457, !11503}
!11503 = !DILocation(line: 291, column: 3, scope: !11448)
!11504 = !DILocation(line: 292, column: 2, scope: !11449)
!11505 = !DILocalVariable(name: "__mptr", scope: !11506, file: !6239, line: 273, type: !341)
!11506 = distinct !DILexicalBlock(scope: !11446, file: !6239, line: 273, column: 2)
!11507 = !DILocation(line: 273, column: 2, scope: !11506)
!11508 = !DILocation(line: 273, column: 2, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11506, file: !6239, line: 273, column: 2)
!11510 = distinct !{!11510, !11444, !11511}
!11511 = !DILocation(line: 292, column: 2, scope: !11440)
!11512 = !DILocation(line: 293, column: 1, scope: !11414)
!11513 = distinct !DISubprogram(name: "check_intr_schedule", scope: !6239, file: !6239, line: 761, type: !11514, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11514 = !DISubroutineType(types: !11515)
!11515 = !{!401, !5814, !7, !7, !5884, !1157, !6096}
!11516 = !DILocalVariable(name: "ehci", arg: 1, scope: !11513, file: !6239, line: 762, type: !5814)
!11517 = !DILocation(line: 762, column: 20, scope: !11513)
!11518 = !DILocalVariable(name: "frame", arg: 2, scope: !11513, file: !6239, line: 763, type: !7)
!11519 = !DILocation(line: 763, column: 12, scope: !11513)
!11520 = !DILocalVariable(name: "uframe", arg: 3, scope: !11513, file: !6239, line: 764, type: !7)
!11521 = !DILocation(line: 764, column: 12, scope: !11513)
!11522 = !DILocalVariable(name: "qh", arg: 4, scope: !11513, file: !6239, line: 765, type: !5884)
!11523 = !DILocation(line: 765, column: 19, scope: !11513)
!11524 = !DILocalVariable(name: "c_maskp", arg: 5, scope: !11513, file: !6239, line: 766, type: !1157)
!11525 = !DILocation(line: 766, column: 13, scope: !11513)
!11526 = !DILocalVariable(name: "tt", arg: 6, scope: !11513, file: !6239, line: 767, type: !6096)
!11527 = !DILocation(line: 767, column: 19, scope: !11513)
!11528 = !DILocalVariable(name: "retval", scope: !11513, file: !6239, line: 770, type: !401)
!11529 = !DILocation(line: 770, column: 7, scope: !11513)
!11530 = !DILocalVariable(name: "mask", scope: !11513, file: !6239, line: 771, type: !1182)
!11531 = !DILocation(line: 771, column: 6, scope: !11513)
!11532 = !DILocation(line: 773, column: 6, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11513, file: !6239, line: 773, column: 6)
!11534 = !DILocation(line: 773, column: 10, scope: !11533)
!11535 = !DILocation(line: 773, column: 13, scope: !11533)
!11536 = !DILocation(line: 773, column: 21, scope: !11533)
!11537 = !DILocation(line: 773, column: 24, scope: !11533)
!11538 = !DILocation(line: 773, column: 31, scope: !11533)
!11539 = !DILocation(line: 773, column: 6, scope: !11513)
!11540 = !DILocation(line: 774, column: 3, scope: !11533)
!11541 = !DILocation(line: 776, column: 20, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11513, file: !6239, line: 776, column: 6)
!11543 = !DILocation(line: 776, column: 26, scope: !11542)
!11544 = !DILocation(line: 776, column: 33, scope: !11542)
!11545 = !DILocation(line: 776, column: 41, scope: !11542)
!11546 = !DILocation(line: 776, column: 45, scope: !11542)
!11547 = !DILocation(line: 776, column: 48, scope: !11542)
!11548 = !DILocation(line: 776, column: 60, scope: !11542)
!11549 = !DILocation(line: 776, column: 64, scope: !11542)
!11550 = !DILocation(line: 776, column: 67, scope: !11542)
!11551 = !DILocation(line: 776, column: 7, scope: !11542)
!11552 = !DILocation(line: 776, column: 6, scope: !11513)
!11553 = !DILocation(line: 777, column: 3, scope: !11542)
!11554 = !DILocation(line: 778, column: 7, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11513, file: !6239, line: 778, column: 6)
!11556 = !DILocation(line: 778, column: 11, scope: !11555)
!11557 = !DILocation(line: 778, column: 14, scope: !11555)
!11558 = !DILocation(line: 778, column: 6, scope: !11513)
!11559 = !DILocation(line: 779, column: 10, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11555, file: !6239, line: 778, column: 23)
!11561 = !DILocation(line: 780, column: 4, scope: !11560)
!11562 = !DILocation(line: 780, column: 12, scope: !11560)
!11563 = !DILocation(line: 781, column: 3, scope: !11560)
!11564 = !DILocation(line: 785, column: 19, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11513, file: !6239, line: 785, column: 6)
!11566 = !DILocation(line: 785, column: 26, scope: !11565)
!11567 = !DILocation(line: 785, column: 30, scope: !11565)
!11568 = !DILocation(line: 785, column: 34, scope: !11565)
!11569 = !DILocation(line: 785, column: 38, scope: !11565)
!11570 = !DILocation(line: 785, column: 45, scope: !11565)
!11571 = !DILocation(line: 785, column: 6, scope: !11565)
!11572 = !DILocation(line: 785, column: 6, scope: !11513)
!11573 = !DILocalVariable(name: "i", scope: !11574, file: !6239, line: 786, type: !7)
!11574 = distinct !DILexicalBlock(scope: !11565, file: !6239, line: 785, column: 54)
!11575 = !DILocation(line: 786, column: 12, scope: !11574)
!11576 = !DILocation(line: 789, column: 12, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11574, file: !6239, line: 789, column: 3)
!11578 = !DILocation(line: 789, column: 18, scope: !11577)
!11579 = !DILocation(line: 789, column: 10, scope: !11577)
!11580 = !DILocation(line: 789, column: 8, scope: !11577)
!11581 = !DILocation(line: 789, column: 22, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11577, file: !6239, line: 789, column: 3)
!11583 = !DILocation(line: 789, column: 24, scope: !11582)
!11584 = !DILocation(line: 789, column: 28, scope: !11582)
!11585 = !DILocation(line: 789, column: 31, scope: !11582)
!11586 = !DILocation(line: 789, column: 36, scope: !11582)
!11587 = !DILocation(line: 789, column: 42, scope: !11582)
!11588 = !DILocation(line: 789, column: 33, scope: !11582)
!11589 = !DILocation(line: 0, scope: !11582)
!11590 = !DILocation(line: 789, column: 3, scope: !11577)
!11591 = !DILocation(line: 790, column: 22, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11582, file: !6239, line: 790, column: 8)
!11593 = !DILocation(line: 790, column: 28, scope: !11592)
!11594 = !DILocation(line: 790, column: 35, scope: !11592)
!11595 = !DILocation(line: 791, column: 6, scope: !11592)
!11596 = !DILocation(line: 791, column: 10, scope: !11592)
!11597 = !DILocation(line: 791, column: 13, scope: !11592)
!11598 = !DILocation(line: 791, column: 25, scope: !11592)
!11599 = !DILocation(line: 791, column: 29, scope: !11592)
!11600 = !DILocation(line: 791, column: 32, scope: !11592)
!11601 = !DILocation(line: 790, column: 9, scope: !11592)
!11602 = !DILocation(line: 790, column: 8, scope: !11582)
!11603 = !DILocation(line: 792, column: 5, scope: !11592)
!11604 = !DILocation(line: 794, column: 18, scope: !11592)
!11605 = !DILocation(line: 794, column: 15, scope: !11592)
!11606 = !DILocation(line: 794, column: 10, scope: !11592)
!11607 = !DILocation(line: 791, column: 39, scope: !11592)
!11608 = !DILocation(line: 789, column: 47, scope: !11582)
!11609 = !DILocation(line: 789, column: 3, scope: !11582)
!11610 = distinct !{!11610, !11590, !11611}
!11611 = !DILocation(line: 794, column: 18, scope: !11577)
!11612 = !DILocation(line: 796, column: 10, scope: !11574)
!11613 = !DILocation(line: 798, column: 14, scope: !11574)
!11614 = !DILocation(line: 798, column: 4, scope: !11574)
!11615 = !DILocation(line: 798, column: 12, scope: !11574)
!11616 = !DILocation(line: 799, column: 2, scope: !11574)
!11617 = !DILocation(line: 785, column: 51, scope: !11565)
!11618 = !DILabel(scope: !11513, name: "done", file: !6239, line: 822)
!11619 = !DILocation(line: 822, column: 1, scope: !11513)
!11620 = !DILocation(line: 823, column: 9, scope: !11513)
!11621 = !DILocation(line: 823, column: 2, scope: !11513)
!11622 = distinct !DISubprogram(name: "reserve_release_intr_bandwidth", scope: !6239, file: !6239, line: 206, type: !11623, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11623 = !DISubroutineType(types: !11624)
!11624 = !{null, !5814, !5884, !401}
!11625 = !DILocalVariable(name: "ehci", arg: 1, scope: !11622, file: !6239, line: 206, type: !5814)
!11626 = !DILocation(line: 206, column: 61, scope: !11622)
!11627 = !DILocalVariable(name: "qh", arg: 2, scope: !11622, file: !6239, line: 207, type: !5884)
!11628 = !DILocation(line: 207, column: 19, scope: !11622)
!11629 = !DILocalVariable(name: "sign", arg: 3, scope: !11622, file: !6239, line: 207, type: !401)
!11630 = !DILocation(line: 207, column: 27, scope: !11622)
!11631 = !DILocalVariable(name: "start_uf", scope: !11622, file: !6239, line: 209, type: !7)
!11632 = !DILocation(line: 209, column: 12, scope: !11622)
!11633 = !DILocalVariable(name: "i", scope: !11622, file: !6239, line: 210, type: !7)
!11634 = !DILocation(line: 210, column: 12, scope: !11622)
!11635 = !DILocalVariable(name: "j", scope: !11622, file: !6239, line: 210, type: !7)
!11636 = !DILocation(line: 210, column: 15, scope: !11622)
!11637 = !DILocalVariable(name: "m", scope: !11622, file: !6239, line: 210, type: !7)
!11638 = !DILocation(line: 210, column: 18, scope: !11622)
!11639 = !DILocalVariable(name: "usecs", scope: !11622, file: !6239, line: 211, type: !401)
!11640 = !DILocation(line: 211, column: 8, scope: !11622)
!11641 = !DILocation(line: 211, column: 16, scope: !11622)
!11642 = !DILocation(line: 211, column: 20, scope: !11622)
!11643 = !DILocation(line: 211, column: 23, scope: !11622)
!11644 = !DILocalVariable(name: "c_usecs", scope: !11622, file: !6239, line: 212, type: !401)
!11645 = !DILocation(line: 212, column: 8, scope: !11622)
!11646 = !DILocation(line: 212, column: 18, scope: !11622)
!11647 = !DILocation(line: 212, column: 22, scope: !11622)
!11648 = !DILocation(line: 212, column: 25, scope: !11622)
!11649 = !DILocalVariable(name: "tt_usecs", scope: !11622, file: !6239, line: 213, type: !401)
!11650 = !DILocation(line: 213, column: 8, scope: !11622)
!11651 = !DILocation(line: 213, column: 19, scope: !11622)
!11652 = !DILocation(line: 213, column: 23, scope: !11622)
!11653 = !DILocation(line: 213, column: 26, scope: !11622)
!11654 = !DILocalVariable(name: "tt", scope: !11622, file: !6239, line: 214, type: !6096)
!11655 = !DILocation(line: 214, column: 19, scope: !11622)
!11656 = !DILocation(line: 216, column: 6, scope: !11657)
!11657 = distinct !DILexicalBlock(scope: !11622, file: !6239, line: 216, column: 6)
!11658 = !DILocation(line: 216, column: 10, scope: !11657)
!11659 = !DILocation(line: 216, column: 13, scope: !11657)
!11660 = !DILocation(line: 216, column: 19, scope: !11657)
!11661 = !DILocation(line: 216, column: 6, scope: !11622)
!11662 = !DILocation(line: 217, column: 3, scope: !11657)
!11663 = !DILocation(line: 218, column: 13, scope: !11622)
!11664 = !DILocation(line: 218, column: 17, scope: !11622)
!11665 = !DILocation(line: 218, column: 20, scope: !11622)
!11666 = !DILocation(line: 218, column: 29, scope: !11622)
!11667 = !DILocation(line: 218, column: 11, scope: !11622)
!11668 = !DILocation(line: 220, column: 16, scope: !11622)
!11669 = !DILocation(line: 220, column: 22, scope: !11622)
!11670 = !DILocation(line: 220, column: 37, scope: !11622)
!11671 = !DILocation(line: 220, column: 41, scope: !11622)
!11672 = !DILocation(line: 220, column: 2, scope: !11622)
!11673 = !DILocation(line: 222, column: 6, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11622, file: !6239, line: 222, column: 6)
!11675 = !DILocation(line: 222, column: 11, scope: !11674)
!11676 = !DILocation(line: 222, column: 6, scope: !11622)
!11677 = !DILocation(line: 223, column: 12, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11674, file: !6239, line: 222, column: 16)
!11679 = !DILocation(line: 223, column: 11, scope: !11678)
!11680 = !DILocation(line: 223, column: 9, scope: !11678)
!11681 = !DILocation(line: 224, column: 14, scope: !11678)
!11682 = !DILocation(line: 224, column: 13, scope: !11678)
!11683 = !DILocation(line: 224, column: 11, scope: !11678)
!11684 = !DILocation(line: 225, column: 15, scope: !11678)
!11685 = !DILocation(line: 225, column: 14, scope: !11678)
!11686 = !DILocation(line: 225, column: 12, scope: !11678)
!11687 = !DILocation(line: 226, column: 2, scope: !11678)
!11688 = !DILocation(line: 229, column: 11, scope: !11689)
!11689 = distinct !DILexicalBlock(scope: !11622, file: !6239, line: 229, column: 2)
!11690 = !DILocation(line: 229, column: 22, scope: !11689)
!11691 = !DILocation(line: 229, column: 26, scope: !11689)
!11692 = !DILocation(line: 229, column: 29, scope: !11689)
!11693 = !DILocation(line: 229, column: 20, scope: !11689)
!11694 = !DILocation(line: 229, column: 9, scope: !11689)
!11695 = !DILocation(line: 229, column: 7, scope: !11689)
!11696 = !DILocation(line: 229, column: 39, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11689, file: !6239, line: 229, column: 2)
!11698 = !DILocation(line: 229, column: 41, scope: !11697)
!11699 = !DILocation(line: 229, column: 2, scope: !11689)
!11700 = !DILocation(line: 231, column: 25, scope: !11697)
!11701 = !DILocation(line: 231, column: 3, scope: !11697)
!11702 = !DILocation(line: 231, column: 9, scope: !11697)
!11703 = !DILocation(line: 231, column: 19, scope: !11697)
!11704 = !DILocation(line: 231, column: 22, scope: !11697)
!11705 = !DILocation(line: 230, column: 9, scope: !11697)
!11706 = !DILocation(line: 230, column: 13, scope: !11697)
!11707 = !DILocation(line: 230, column: 16, scope: !11697)
!11708 = !DILocation(line: 230, column: 6, scope: !11697)
!11709 = !DILocation(line: 229, column: 2, scope: !11697)
!11710 = distinct !{!11710, !11699, !11711}
!11711 = !DILocation(line: 231, column: 25, scope: !11689)
!11712 = !DILocation(line: 234, column: 6, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11622, file: !6239, line: 234, column: 6)
!11714 = !DILocation(line: 234, column: 10, scope: !11713)
!11715 = !DILocation(line: 234, column: 13, scope: !11713)
!11716 = !DILocation(line: 234, column: 6, scope: !11622)
!11717 = !DILocation(line: 236, column: 12, scope: !11718)
!11718 = distinct !DILexicalBlock(scope: !11719, file: !6239, line: 236, column: 3)
!11719 = distinct !DILexicalBlock(scope: !11713, file: !6239, line: 234, column: 22)
!11720 = !DILocation(line: 236, column: 10, scope: !11718)
!11721 = !DILocation(line: 236, column: 8, scope: !11718)
!11722 = !DILocation(line: 236, column: 22, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11718, file: !6239, line: 236, column: 3)
!11724 = !DILocation(line: 236, column: 24, scope: !11723)
!11725 = !DILocation(line: 236, column: 3, scope: !11718)
!11726 = !DILocation(line: 238, column: 12, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11728, file: !6239, line: 238, column: 4)
!11728 = distinct !DILexicalBlock(scope: !11723, file: !6239, line: 237, column: 29)
!11729 = !DILocation(line: 238, column: 27, scope: !11727)
!11730 = !DILocation(line: 238, column: 28, scope: !11727)
!11731 = !DILocation(line: 238, column: 23, scope: !11727)
!11732 = !DILocation(line: 238, column: 19, scope: !11727)
!11733 = !DILocation(line: 238, column: 9, scope: !11727)
!11734 = !DILocation(line: 238, column: 34, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11727, file: !6239, line: 238, column: 4)
!11736 = !DILocation(line: 238, column: 36, scope: !11735)
!11737 = !DILocation(line: 238, column: 4, scope: !11727)
!11738 = !DILocation(line: 239, column: 9, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11740, file: !6239, line: 239, column: 9)
!11740 = distinct !DILexicalBlock(scope: !11735, file: !6239, line: 238, column: 57)
!11741 = !DILocation(line: 239, column: 13, scope: !11739)
!11742 = !DILocation(line: 239, column: 16, scope: !11739)
!11743 = !DILocation(line: 239, column: 26, scope: !11739)
!11744 = !DILocation(line: 239, column: 24, scope: !11739)
!11745 = !DILocation(line: 239, column: 9, scope: !11740)
!11746 = !DILocation(line: 240, column: 30, scope: !11739)
!11747 = !DILocation(line: 240, column: 6, scope: !11739)
!11748 = !DILocation(line: 240, column: 12, scope: !11739)
!11749 = !DILocation(line: 240, column: 22, scope: !11739)
!11750 = !DILocation(line: 240, column: 24, scope: !11739)
!11751 = !DILocation(line: 240, column: 23, scope: !11739)
!11752 = !DILocation(line: 240, column: 27, scope: !11739)
!11753 = !DILocation(line: 241, column: 4, scope: !11740)
!11754 = !DILocation(line: 238, column: 42, scope: !11735)
!11755 = !DILocation(line: 238, column: 49, scope: !11735)
!11756 = !DILocation(line: 238, column: 4, scope: !11735)
!11757 = distinct !{!11757, !11737, !11758}
!11758 = !DILocation(line: 241, column: 4, scope: !11727)
!11759 = !DILocation(line: 242, column: 3, scope: !11728)
!11760 = !DILocation(line: 237, column: 10, scope: !11723)
!11761 = !DILocation(line: 237, column: 14, scope: !11723)
!11762 = !DILocation(line: 237, column: 17, scope: !11723)
!11763 = !DILocation(line: 237, column: 7, scope: !11723)
!11764 = !DILocation(line: 236, column: 3, scope: !11723)
!11765 = distinct !{!11765, !11725, !11766}
!11766 = !DILocation(line: 242, column: 3, scope: !11718)
!11767 = !DILocation(line: 243, column: 2, scope: !11719)
!11768 = !DILocation(line: 246, column: 6, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11622, file: !6239, line: 246, column: 6)
!11770 = !DILocation(line: 246, column: 6, scope: !11622)
!11771 = !DILocation(line: 247, column: 16, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11769, file: !6239, line: 246, column: 16)
!11773 = !DILocation(line: 247, column: 20, scope: !11772)
!11774 = !DILocation(line: 247, column: 23, scope: !11772)
!11775 = !DILocation(line: 247, column: 8, scope: !11772)
!11776 = !DILocation(line: 247, column: 6, scope: !11772)
!11777 = !DILocation(line: 248, column: 7, scope: !11778)
!11778 = distinct !DILexicalBlock(scope: !11772, file: !6239, line: 248, column: 7)
!11779 = !DILocation(line: 248, column: 12, scope: !11778)
!11780 = !DILocation(line: 248, column: 7, scope: !11772)
!11781 = !DILocation(line: 249, column: 19, scope: !11778)
!11782 = !DILocation(line: 249, column: 23, scope: !11778)
!11783 = !DILocation(line: 249, column: 26, scope: !11778)
!11784 = !DILocation(line: 249, column: 36, scope: !11778)
!11785 = !DILocation(line: 249, column: 40, scope: !11778)
!11786 = !DILocation(line: 249, column: 4, scope: !11778)
!11787 = !DILocation(line: 251, column: 14, scope: !11778)
!11788 = !DILocation(line: 251, column: 18, scope: !11778)
!11789 = !DILocation(line: 251, column: 21, scope: !11778)
!11790 = !DILocation(line: 251, column: 4, scope: !11778)
!11791 = !DILocation(line: 253, column: 12, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11772, file: !6239, line: 253, column: 3)
!11793 = !DILocation(line: 253, column: 21, scope: !11792)
!11794 = !DILocation(line: 253, column: 10, scope: !11792)
!11795 = !DILocation(line: 253, column: 8, scope: !11792)
!11796 = !DILocation(line: 253, column: 27, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11792, file: !6239, line: 253, column: 3)
!11798 = !DILocation(line: 253, column: 29, scope: !11797)
!11799 = !DILocation(line: 253, column: 3, scope: !11792)
!11800 = !DILocation(line: 255, column: 24, scope: !11797)
!11801 = !DILocation(line: 255, column: 4, scope: !11797)
!11802 = !DILocation(line: 255, column: 8, scope: !11797)
!11803 = !DILocation(line: 255, column: 18, scope: !11797)
!11804 = !DILocation(line: 255, column: 21, scope: !11797)
!11805 = !DILocation(line: 254, column: 10, scope: !11797)
!11806 = !DILocation(line: 254, column: 14, scope: !11797)
!11807 = !DILocation(line: 254, column: 17, scope: !11797)
!11808 = !DILocation(line: 254, column: 7, scope: !11797)
!11809 = !DILocation(line: 253, column: 3, scope: !11797)
!11810 = distinct !{!11810, !11799, !11811}
!11811 = !DILocation(line: 255, column: 24, scope: !11792)
!11812 = !DILocation(line: 256, column: 2, scope: !11772)
!11813 = !DILocation(line: 257, column: 1, scope: !11622)
!11814 = distinct !DISubprogram(name: "kcalloc", scope: !289, file: !289, line: 601, type: !11815, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11815 = !DISubroutineType(types: !11816)
!11816 = !{!341, !462, !462, !946}
!11817 = !DILocalVariable(name: "n", arg: 1, scope: !11814, file: !289, line: 601, type: !462)
!11818 = !DILocation(line: 601, column: 36, scope: !11814)
!11819 = !DILocalVariable(name: "size", arg: 2, scope: !11814, file: !289, line: 601, type: !462)
!11820 = !DILocation(line: 601, column: 46, scope: !11814)
!11821 = !DILocalVariable(name: "flags", arg: 3, scope: !11814, file: !289, line: 601, type: !946)
!11822 = !DILocation(line: 601, column: 58, scope: !11814)
!11823 = !DILocation(line: 603, column: 23, scope: !11814)
!11824 = !DILocation(line: 603, column: 26, scope: !11814)
!11825 = !DILocation(line: 603, column: 32, scope: !11814)
!11826 = !DILocation(line: 603, column: 38, scope: !11814)
!11827 = !DILocation(line: 603, column: 9, scope: !11814)
!11828 = !DILocation(line: 603, column: 2, scope: !11814)
!11829 = distinct !DISubprogram(name: "ERR_PTR", scope: !11399, file: !11399, line: 24, type: !11830, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11830 = !DISubroutineType(types: !11831)
!11831 = !{!341, !340}
!11832 = !DILocalVariable(name: "error", arg: 1, scope: !11829, file: !11399, line: 24, type: !340)
!11833 = !DILocation(line: 24, column: 48, scope: !11829)
!11834 = !DILocation(line: 26, column: 18, scope: !11829)
!11835 = !DILocation(line: 26, column: 9, scope: !11829)
!11836 = !DILocation(line: 26, column: 2, scope: !11829)
!11837 = distinct !DISubprogram(name: "bus_to_hcd", scope: !261, file: !261, line: 241, type: !11838, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11838 = !DISubroutineType(types: !11839)
!11839 = !{!342, !5073}
!11840 = !DILocalVariable(name: "bus", arg: 1, scope: !11837, file: !261, line: 241, type: !5073)
!11841 = !DILocation(line: 241, column: 58, scope: !11837)
!11842 = !DILocalVariable(name: "__mptr", scope: !11843, file: !261, line: 243, type: !341)
!11843 = distinct !DILexicalBlock(scope: !11837, file: !261, line: 243, column: 9)
!11844 = !DILocation(line: 243, column: 9, scope: !11843)
!11845 = !DILocation(line: 243, column: 9, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11843, file: !261, line: 243, column: 9)
!11847 = !DILocation(line: 243, column: 2, scope: !11837)
!11848 = distinct !DISubprogram(name: "kzalloc", scope: !289, file: !289, line: 662, type: !11849, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11849 = !DISubroutineType(types: !11850)
!11850 = !{!341, !462, !946}
!11851 = !DILocalVariable(name: "s", arg: 1, scope: !11852, file: !289, line: 445, type: !1346)
!11852 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !289, file: !289, line: 445, type: !11853, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11853 = !DISubroutineType(types: !11854)
!11854 = !{!341, !1346, !946, !462}
!11855 = !DILocation(line: 445, column: 72, scope: !11852, inlinedAt: !11856)
!11856 = distinct !DILocation(line: 552, column: 10, scope: !11857, inlinedAt: !11860)
!11857 = distinct !DILexicalBlock(scope: !11858, file: !289, line: 540, column: 34)
!11858 = distinct !DILexicalBlock(scope: !11859, file: !289, line: 540, column: 6)
!11859 = distinct !DISubprogram(name: "kmalloc", scope: !289, file: !289, line: 538, type: !11849, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11860 = distinct !DILocation(line: 664, column: 9, scope: !11848)
!11861 = !DILocalVariable(name: "flags", arg: 2, scope: !11852, file: !289, line: 446, type: !946)
!11862 = !DILocation(line: 446, column: 9, scope: !11852, inlinedAt: !11856)
!11863 = !DILocalVariable(name: "size", arg: 3, scope: !11852, file: !289, line: 446, type: !462)
!11864 = !DILocation(line: 446, column: 23, scope: !11852, inlinedAt: !11856)
!11865 = !DILocalVariable(name: "ret", scope: !11852, file: !289, line: 448, type: !341)
!11866 = !DILocation(line: 448, column: 8, scope: !11852, inlinedAt: !11856)
!11867 = !DILocalVariable(name: "flags", arg: 1, scope: !11868, file: !289, line: 318, type: !946)
!11868 = distinct !DISubprogram(name: "kmalloc_type", scope: !289, file: !289, line: 318, type: !11869, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11869 = !DISubroutineType(types: !11870)
!11870 = !{!288, !946}
!11871 = !DILocation(line: 318, column: 67, scope: !11868, inlinedAt: !11872)
!11872 = distinct !DILocation(line: 553, column: 20, scope: !11857, inlinedAt: !11860)
!11873 = !DILocalVariable(name: "size", arg: 1, scope: !11874, file: !289, line: 346, type: !462)
!11874 = distinct !DISubprogram(name: "kmalloc_index", scope: !289, file: !289, line: 346, type: !11875, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11875 = !DISubroutineType(types: !11876)
!11876 = !{!7, !462}
!11877 = !DILocation(line: 346, column: 58, scope: !11874, inlinedAt: !11878)
!11878 = distinct !DILocation(line: 547, column: 11, scope: !11857, inlinedAt: !11860)
!11879 = !DILocalVariable(name: "size", arg: 1, scope: !11880, file: !289, line: 472, type: !462)
!11880 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !289, file: !289, line: 472, type: !11881, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11881 = !DISubroutineType(types: !11882)
!11882 = !{!341, !462, !946, !7}
!11883 = !DILocation(line: 472, column: 28, scope: !11880, inlinedAt: !11884)
!11884 = distinct !DILocation(line: 481, column: 9, scope: !11885, inlinedAt: !11886)
!11885 = distinct !DISubprogram(name: "kmalloc_large", scope: !289, file: !289, line: 478, type: !11849, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!11886 = distinct !DILocation(line: 545, column: 11, scope: !11887, inlinedAt: !11860)
!11887 = distinct !DILexicalBlock(scope: !11857, file: !289, line: 544, column: 7)
!11888 = !DILocalVariable(name: "flags", arg: 2, scope: !11880, file: !289, line: 472, type: !946)
!11889 = !DILocation(line: 472, column: 40, scope: !11880, inlinedAt: !11884)
!11890 = !DILocalVariable(name: "order", arg: 3, scope: !11880, file: !289, line: 472, type: !7)
!11891 = !DILocation(line: 472, column: 60, scope: !11880, inlinedAt: !11884)
!11892 = !DILocalVariable(name: "size", arg: 1, scope: !11885, file: !289, line: 478, type: !462)
!11893 = !DILocation(line: 478, column: 51, scope: !11885, inlinedAt: !11886)
!11894 = !DILocalVariable(name: "flags", arg: 2, scope: !11885, file: !289, line: 478, type: !946)
!11895 = !DILocation(line: 478, column: 63, scope: !11885, inlinedAt: !11886)
!11896 = !DILocalVariable(name: "order", scope: !11885, file: !289, line: 480, type: !7)
!11897 = !DILocation(line: 480, column: 15, scope: !11885, inlinedAt: !11886)
!11898 = !DILocalVariable(name: "size", arg: 1, scope: !11859, file: !289, line: 538, type: !462)
!11899 = !DILocation(line: 538, column: 45, scope: !11859, inlinedAt: !11860)
!11900 = !DILocalVariable(name: "flags", arg: 2, scope: !11859, file: !289, line: 538, type: !946)
!11901 = !DILocation(line: 538, column: 57, scope: !11859, inlinedAt: !11860)
!11902 = !DILocalVariable(name: "index", scope: !11857, file: !289, line: 542, type: !7)
!11903 = !DILocation(line: 542, column: 16, scope: !11857, inlinedAt: !11860)
!11904 = !DILocalVariable(name: "size", arg: 1, scope: !11848, file: !289, line: 662, type: !462)
!11905 = !DILocation(line: 662, column: 36, scope: !11848)
!11906 = !DILocalVariable(name: "flags", arg: 2, scope: !11848, file: !289, line: 662, type: !946)
!11907 = !DILocation(line: 662, column: 48, scope: !11848)
!11908 = !DILocation(line: 664, column: 17, scope: !11848)
!11909 = !DILocation(line: 664, column: 23, scope: !11848)
!11910 = !DILocation(line: 664, column: 29, scope: !11848)
!11911 = !DILocation(line: 540, column: 27, scope: !11858, inlinedAt: !11860)
!11912 = !DILocation(line: 540, column: 6, scope: !11858, inlinedAt: !11860)
!11913 = !DILocation(line: 540, column: 6, scope: !11859, inlinedAt: !11860)
!11914 = !DILocation(line: 544, column: 7, scope: !11887, inlinedAt: !11860)
!11915 = !DILocation(line: 544, column: 12, scope: !11887, inlinedAt: !11860)
!11916 = !DILocation(line: 544, column: 7, scope: !11857, inlinedAt: !11860)
!11917 = !DILocation(line: 545, column: 25, scope: !11887, inlinedAt: !11860)
!11918 = !DILocation(line: 545, column: 31, scope: !11887, inlinedAt: !11860)
!11919 = !DILocation(line: 480, column: 33, scope: !11885, inlinedAt: !11886)
!11920 = !DILocation(line: 480, column: 23, scope: !11885, inlinedAt: !11886)
!11921 = !DILocation(line: 481, column: 29, scope: !11885, inlinedAt: !11886)
!11922 = !DILocation(line: 481, column: 35, scope: !11885, inlinedAt: !11886)
!11923 = !DILocation(line: 481, column: 42, scope: !11885, inlinedAt: !11886)
!11924 = !DILocation(line: 474, column: 23, scope: !11880, inlinedAt: !11884)
!11925 = !DILocation(line: 474, column: 29, scope: !11880, inlinedAt: !11884)
!11926 = !DILocation(line: 474, column: 36, scope: !11880, inlinedAt: !11884)
!11927 = !DILocation(line: 474, column: 9, scope: !11880, inlinedAt: !11884)
!11928 = !DILocation(line: 545, column: 4, scope: !11887, inlinedAt: !11860)
!11929 = !DILocation(line: 547, column: 25, scope: !11857, inlinedAt: !11860)
!11930 = !DILocation(line: 348, column: 7, scope: !11931, inlinedAt: !11878)
!11931 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 348, column: 6)
!11932 = !DILocation(line: 348, column: 6, scope: !11874, inlinedAt: !11878)
!11933 = !DILocation(line: 349, column: 3, scope: !11931, inlinedAt: !11878)
!11934 = !DILocation(line: 351, column: 6, scope: !11935, inlinedAt: !11878)
!11935 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 351, column: 6)
!11936 = !DILocation(line: 351, column: 11, scope: !11935, inlinedAt: !11878)
!11937 = !DILocation(line: 351, column: 6, scope: !11874, inlinedAt: !11878)
!11938 = !DILocation(line: 352, column: 3, scope: !11935, inlinedAt: !11878)
!11939 = !DILocation(line: 354, column: 32, scope: !11940, inlinedAt: !11878)
!11940 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 354, column: 6)
!11941 = !DILocation(line: 354, column: 37, scope: !11940, inlinedAt: !11878)
!11942 = !DILocation(line: 354, column: 42, scope: !11940, inlinedAt: !11878)
!11943 = !DILocation(line: 354, column: 45, scope: !11940, inlinedAt: !11878)
!11944 = !DILocation(line: 354, column: 50, scope: !11940, inlinedAt: !11878)
!11945 = !DILocation(line: 354, column: 6, scope: !11874, inlinedAt: !11878)
!11946 = !DILocation(line: 355, column: 3, scope: !11940, inlinedAt: !11878)
!11947 = !DILocation(line: 356, column: 32, scope: !11948, inlinedAt: !11878)
!11948 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 356, column: 6)
!11949 = !DILocation(line: 356, column: 37, scope: !11948, inlinedAt: !11878)
!11950 = !DILocation(line: 356, column: 43, scope: !11948, inlinedAt: !11878)
!11951 = !DILocation(line: 356, column: 46, scope: !11948, inlinedAt: !11878)
!11952 = !DILocation(line: 356, column: 51, scope: !11948, inlinedAt: !11878)
!11953 = !DILocation(line: 356, column: 6, scope: !11874, inlinedAt: !11878)
!11954 = !DILocation(line: 357, column: 3, scope: !11948, inlinedAt: !11878)
!11955 = !DILocation(line: 358, column: 6, scope: !11956, inlinedAt: !11878)
!11956 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 358, column: 6)
!11957 = !DILocation(line: 358, column: 11, scope: !11956, inlinedAt: !11878)
!11958 = !DILocation(line: 358, column: 6, scope: !11874, inlinedAt: !11878)
!11959 = !DILocation(line: 358, column: 26, scope: !11956, inlinedAt: !11878)
!11960 = !DILocation(line: 359, column: 6, scope: !11961, inlinedAt: !11878)
!11961 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 359, column: 6)
!11962 = !DILocation(line: 359, column: 11, scope: !11961, inlinedAt: !11878)
!11963 = !DILocation(line: 359, column: 6, scope: !11874, inlinedAt: !11878)
!11964 = !DILocation(line: 359, column: 26, scope: !11961, inlinedAt: !11878)
!11965 = !DILocation(line: 360, column: 6, scope: !11966, inlinedAt: !11878)
!11966 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 360, column: 6)
!11967 = !DILocation(line: 360, column: 11, scope: !11966, inlinedAt: !11878)
!11968 = !DILocation(line: 360, column: 6, scope: !11874, inlinedAt: !11878)
!11969 = !DILocation(line: 360, column: 26, scope: !11966, inlinedAt: !11878)
!11970 = !DILocation(line: 361, column: 6, scope: !11971, inlinedAt: !11878)
!11971 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 361, column: 6)
!11972 = !DILocation(line: 361, column: 11, scope: !11971, inlinedAt: !11878)
!11973 = !DILocation(line: 361, column: 6, scope: !11874, inlinedAt: !11878)
!11974 = !DILocation(line: 361, column: 26, scope: !11971, inlinedAt: !11878)
!11975 = !DILocation(line: 362, column: 6, scope: !11976, inlinedAt: !11878)
!11976 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 362, column: 6)
!11977 = !DILocation(line: 362, column: 11, scope: !11976, inlinedAt: !11878)
!11978 = !DILocation(line: 362, column: 6, scope: !11874, inlinedAt: !11878)
!11979 = !DILocation(line: 362, column: 26, scope: !11976, inlinedAt: !11878)
!11980 = !DILocation(line: 363, column: 6, scope: !11981, inlinedAt: !11878)
!11981 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 363, column: 6)
!11982 = !DILocation(line: 363, column: 11, scope: !11981, inlinedAt: !11878)
!11983 = !DILocation(line: 363, column: 6, scope: !11874, inlinedAt: !11878)
!11984 = !DILocation(line: 363, column: 26, scope: !11981, inlinedAt: !11878)
!11985 = !DILocation(line: 364, column: 6, scope: !11986, inlinedAt: !11878)
!11986 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 364, column: 6)
!11987 = !DILocation(line: 364, column: 11, scope: !11986, inlinedAt: !11878)
!11988 = !DILocation(line: 364, column: 6, scope: !11874, inlinedAt: !11878)
!11989 = !DILocation(line: 364, column: 26, scope: !11986, inlinedAt: !11878)
!11990 = !DILocation(line: 365, column: 6, scope: !11991, inlinedAt: !11878)
!11991 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 365, column: 6)
!11992 = !DILocation(line: 365, column: 11, scope: !11991, inlinedAt: !11878)
!11993 = !DILocation(line: 365, column: 6, scope: !11874, inlinedAt: !11878)
!11994 = !DILocation(line: 365, column: 26, scope: !11991, inlinedAt: !11878)
!11995 = !DILocation(line: 366, column: 6, scope: !11996, inlinedAt: !11878)
!11996 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 366, column: 6)
!11997 = !DILocation(line: 366, column: 11, scope: !11996, inlinedAt: !11878)
!11998 = !DILocation(line: 366, column: 6, scope: !11874, inlinedAt: !11878)
!11999 = !DILocation(line: 366, column: 26, scope: !11996, inlinedAt: !11878)
!12000 = !DILocation(line: 367, column: 6, scope: !12001, inlinedAt: !11878)
!12001 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 367, column: 6)
!12002 = !DILocation(line: 367, column: 11, scope: !12001, inlinedAt: !11878)
!12003 = !DILocation(line: 367, column: 6, scope: !11874, inlinedAt: !11878)
!12004 = !DILocation(line: 367, column: 26, scope: !12001, inlinedAt: !11878)
!12005 = !DILocation(line: 368, column: 6, scope: !12006, inlinedAt: !11878)
!12006 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 368, column: 6)
!12007 = !DILocation(line: 368, column: 11, scope: !12006, inlinedAt: !11878)
!12008 = !DILocation(line: 368, column: 6, scope: !11874, inlinedAt: !11878)
!12009 = !DILocation(line: 368, column: 26, scope: !12006, inlinedAt: !11878)
!12010 = !DILocation(line: 369, column: 6, scope: !12011, inlinedAt: !11878)
!12011 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 369, column: 6)
!12012 = !DILocation(line: 369, column: 11, scope: !12011, inlinedAt: !11878)
!12013 = !DILocation(line: 369, column: 6, scope: !11874, inlinedAt: !11878)
!12014 = !DILocation(line: 369, column: 26, scope: !12011, inlinedAt: !11878)
!12015 = !DILocation(line: 370, column: 6, scope: !12016, inlinedAt: !11878)
!12016 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 370, column: 6)
!12017 = !DILocation(line: 370, column: 11, scope: !12016, inlinedAt: !11878)
!12018 = !DILocation(line: 370, column: 6, scope: !11874, inlinedAt: !11878)
!12019 = !DILocation(line: 370, column: 26, scope: !12016, inlinedAt: !11878)
!12020 = !DILocation(line: 371, column: 6, scope: !12021, inlinedAt: !11878)
!12021 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 371, column: 6)
!12022 = !DILocation(line: 371, column: 11, scope: !12021, inlinedAt: !11878)
!12023 = !DILocation(line: 371, column: 6, scope: !11874, inlinedAt: !11878)
!12024 = !DILocation(line: 371, column: 26, scope: !12021, inlinedAt: !11878)
!12025 = !DILocation(line: 372, column: 6, scope: !12026, inlinedAt: !11878)
!12026 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 372, column: 6)
!12027 = !DILocation(line: 372, column: 11, scope: !12026, inlinedAt: !11878)
!12028 = !DILocation(line: 372, column: 6, scope: !11874, inlinedAt: !11878)
!12029 = !DILocation(line: 372, column: 26, scope: !12026, inlinedAt: !11878)
!12030 = !DILocation(line: 373, column: 6, scope: !12031, inlinedAt: !11878)
!12031 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 373, column: 6)
!12032 = !DILocation(line: 373, column: 11, scope: !12031, inlinedAt: !11878)
!12033 = !DILocation(line: 373, column: 6, scope: !11874, inlinedAt: !11878)
!12034 = !DILocation(line: 373, column: 26, scope: !12031, inlinedAt: !11878)
!12035 = !DILocation(line: 374, column: 6, scope: !12036, inlinedAt: !11878)
!12036 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 374, column: 6)
!12037 = !DILocation(line: 374, column: 11, scope: !12036, inlinedAt: !11878)
!12038 = !DILocation(line: 374, column: 6, scope: !11874, inlinedAt: !11878)
!12039 = !DILocation(line: 374, column: 26, scope: !12036, inlinedAt: !11878)
!12040 = !DILocation(line: 375, column: 6, scope: !12041, inlinedAt: !11878)
!12041 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 375, column: 6)
!12042 = !DILocation(line: 375, column: 11, scope: !12041, inlinedAt: !11878)
!12043 = !DILocation(line: 375, column: 6, scope: !11874, inlinedAt: !11878)
!12044 = !DILocation(line: 375, column: 27, scope: !12041, inlinedAt: !11878)
!12045 = !DILocation(line: 376, column: 6, scope: !12046, inlinedAt: !11878)
!12046 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 376, column: 6)
!12047 = !DILocation(line: 376, column: 11, scope: !12046, inlinedAt: !11878)
!12048 = !DILocation(line: 376, column: 6, scope: !11874, inlinedAt: !11878)
!12049 = !DILocation(line: 376, column: 32, scope: !12046, inlinedAt: !11878)
!12050 = !DILocation(line: 377, column: 6, scope: !12051, inlinedAt: !11878)
!12051 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 377, column: 6)
!12052 = !DILocation(line: 377, column: 11, scope: !12051, inlinedAt: !11878)
!12053 = !DILocation(line: 377, column: 6, scope: !11874, inlinedAt: !11878)
!12054 = !DILocation(line: 377, column: 32, scope: !12051, inlinedAt: !11878)
!12055 = !DILocation(line: 378, column: 6, scope: !12056, inlinedAt: !11878)
!12056 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 378, column: 6)
!12057 = !DILocation(line: 378, column: 11, scope: !12056, inlinedAt: !11878)
!12058 = !DILocation(line: 378, column: 6, scope: !11874, inlinedAt: !11878)
!12059 = !DILocation(line: 378, column: 32, scope: !12056, inlinedAt: !11878)
!12060 = !DILocation(line: 379, column: 6, scope: !12061, inlinedAt: !11878)
!12061 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 379, column: 6)
!12062 = !DILocation(line: 379, column: 11, scope: !12061, inlinedAt: !11878)
!12063 = !DILocation(line: 379, column: 6, scope: !11874, inlinedAt: !11878)
!12064 = !DILocation(line: 379, column: 33, scope: !12061, inlinedAt: !11878)
!12065 = !DILocation(line: 380, column: 6, scope: !12066, inlinedAt: !11878)
!12066 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 380, column: 6)
!12067 = !DILocation(line: 380, column: 11, scope: !12066, inlinedAt: !11878)
!12068 = !DILocation(line: 380, column: 6, scope: !11874, inlinedAt: !11878)
!12069 = !DILocation(line: 380, column: 33, scope: !12066, inlinedAt: !11878)
!12070 = !DILocation(line: 381, column: 6, scope: !12071, inlinedAt: !11878)
!12071 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 381, column: 6)
!12072 = !DILocation(line: 381, column: 11, scope: !12071, inlinedAt: !11878)
!12073 = !DILocation(line: 381, column: 6, scope: !11874, inlinedAt: !11878)
!12074 = !DILocation(line: 381, column: 33, scope: !12071, inlinedAt: !11878)
!12075 = !DILocation(line: 382, column: 2, scope: !12076, inlinedAt: !11878)
!12076 = distinct !DILexicalBlock(scope: !12077, file: !289, line: 382, column: 2)
!12077 = distinct !DILexicalBlock(scope: !11874, file: !289, line: 382, column: 2)
!12078 = !{i32 -2143241948, i32 -2143241919, i32 -2143241873, i32 -2143241815, i32 -2143241761, i32 -2143241707, i32 -2143241652, i32 -2143241621}
!12079 = !DILocation(line: 382, column: 2, scope: !12080, inlinedAt: !11878)
!12080 = distinct !DILexicalBlock(scope: !12081, file: !289, line: 382, column: 2)
!12081 = distinct !DILexicalBlock(scope: !12077, file: !289, line: 382, column: 2)
!12082 = !{i32 -2143241178, i32 -2143241171, i32 -2143241117, i32 -2143241086, i32 -2143241056}
!12083 = !DILocation(line: 382, column: 2, scope: !12081, inlinedAt: !11878)
!12084 = !DILocation(line: 386, column: 1, scope: !11874, inlinedAt: !11878)
!12085 = !DILocation(line: 547, column: 9, scope: !11857, inlinedAt: !11860)
!12086 = !DILocation(line: 549, column: 8, scope: !12087, inlinedAt: !11860)
!12087 = distinct !DILexicalBlock(scope: !11857, file: !289, line: 549, column: 7)
!12088 = !DILocation(line: 549, column: 7, scope: !11857, inlinedAt: !11860)
!12089 = !DILocation(line: 550, column: 4, scope: !12087, inlinedAt: !11860)
!12090 = !DILocation(line: 553, column: 33, scope: !11857, inlinedAt: !11860)
!12091 = !DILocation(line: 325, column: 6, scope: !12092, inlinedAt: !11872)
!12092 = distinct !DILexicalBlock(scope: !11868, file: !289, line: 325, column: 6)
!12093 = !DILocation(line: 325, column: 6, scope: !11868, inlinedAt: !11872)
!12094 = !DILocation(line: 326, column: 3, scope: !12092, inlinedAt: !11872)
!12095 = !DILocation(line: 332, column: 9, scope: !11868, inlinedAt: !11872)
!12096 = !DILocation(line: 332, column: 15, scope: !11868, inlinedAt: !11872)
!12097 = !DILocation(line: 332, column: 2, scope: !11868, inlinedAt: !11872)
!12098 = !DILocation(line: 336, column: 1, scope: !11868, inlinedAt: !11872)
!12099 = !DILocation(line: 553, column: 5, scope: !11857, inlinedAt: !11860)
!12100 = !DILocation(line: 553, column: 41, scope: !11857, inlinedAt: !11860)
!12101 = !DILocation(line: 554, column: 5, scope: !11857, inlinedAt: !11860)
!12102 = !DILocation(line: 554, column: 12, scope: !11857, inlinedAt: !11860)
!12103 = !DILocation(line: 448, column: 31, scope: !11852, inlinedAt: !11856)
!12104 = !DILocation(line: 448, column: 34, scope: !11852, inlinedAt: !11856)
!12105 = !DILocation(line: 448, column: 14, scope: !11852, inlinedAt: !11856)
!12106 = !DILocation(line: 450, column: 22, scope: !11852, inlinedAt: !11856)
!12107 = !DILocation(line: 450, column: 25, scope: !11852, inlinedAt: !11856)
!12108 = !DILocation(line: 450, column: 30, scope: !11852, inlinedAt: !11856)
!12109 = !DILocation(line: 450, column: 36, scope: !11852, inlinedAt: !11856)
!12110 = !DILocation(line: 450, column: 8, scope: !11852, inlinedAt: !11856)
!12111 = !DILocation(line: 450, column: 6, scope: !11852, inlinedAt: !11856)
!12112 = !DILocation(line: 451, column: 9, scope: !11852, inlinedAt: !11856)
!12113 = !DILocation(line: 552, column: 3, scope: !11857, inlinedAt: !11860)
!12114 = !DILocation(line: 557, column: 19, scope: !11859, inlinedAt: !11860)
!12115 = !DILocation(line: 557, column: 25, scope: !11859, inlinedAt: !11860)
!12116 = !DILocation(line: 557, column: 9, scope: !11859, inlinedAt: !11860)
!12117 = !DILocation(line: 557, column: 2, scope: !11859, inlinedAt: !11860)
!12118 = !DILocation(line: 558, column: 1, scope: !11859, inlinedAt: !11860)
!12119 = !DILocation(line: 664, column: 2, scope: !11848)
!12120 = distinct !DISubprogram(name: "list_add_tail", scope: !9075, file: !9075, line: 98, type: !10276, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12121 = !DILocalVariable(name: "new", arg: 1, scope: !12120, file: !9075, line: 98, type: !365)
!12122 = !DILocation(line: 98, column: 52, scope: !12120)
!12123 = !DILocalVariable(name: "head", arg: 2, scope: !12120, file: !9075, line: 98, type: !365)
!12124 = !DILocation(line: 98, column: 75, scope: !12120)
!12125 = !DILocation(line: 100, column: 13, scope: !12120)
!12126 = !DILocation(line: 100, column: 18, scope: !12120)
!12127 = !DILocation(line: 100, column: 24, scope: !12120)
!12128 = !DILocation(line: 100, column: 30, scope: !12120)
!12129 = !DILocation(line: 100, column: 2, scope: !12120)
!12130 = !DILocation(line: 101, column: 1, scope: !12120)
!12131 = distinct !DISubprogram(name: "kmalloc_array", scope: !289, file: !289, line: 584, type: !11815, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12132 = !DILocation(line: 445, column: 72, scope: !11852, inlinedAt: !12133)
!12133 = distinct !DILocation(line: 552, column: 10, scope: !11857, inlinedAt: !12134)
!12134 = distinct !DILocation(line: 591, column: 10, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !12131, file: !289, line: 590, column: 6)
!12136 = !DILocation(line: 446, column: 9, scope: !11852, inlinedAt: !12133)
!12137 = !DILocation(line: 446, column: 23, scope: !11852, inlinedAt: !12133)
!12138 = !DILocation(line: 448, column: 8, scope: !11852, inlinedAt: !12133)
!12139 = !DILocation(line: 318, column: 67, scope: !11868, inlinedAt: !12140)
!12140 = distinct !DILocation(line: 553, column: 20, scope: !11857, inlinedAt: !12134)
!12141 = !DILocation(line: 346, column: 58, scope: !11874, inlinedAt: !12142)
!12142 = distinct !DILocation(line: 547, column: 11, scope: !11857, inlinedAt: !12134)
!12143 = !DILocation(line: 472, column: 28, scope: !11880, inlinedAt: !12144)
!12144 = distinct !DILocation(line: 481, column: 9, scope: !11885, inlinedAt: !12145)
!12145 = distinct !DILocation(line: 545, column: 11, scope: !11887, inlinedAt: !12134)
!12146 = !DILocation(line: 472, column: 40, scope: !11880, inlinedAt: !12144)
!12147 = !DILocation(line: 472, column: 60, scope: !11880, inlinedAt: !12144)
!12148 = !DILocation(line: 478, column: 51, scope: !11885, inlinedAt: !12145)
!12149 = !DILocation(line: 478, column: 63, scope: !11885, inlinedAt: !12145)
!12150 = !DILocation(line: 480, column: 15, scope: !11885, inlinedAt: !12145)
!12151 = !DILocation(line: 538, column: 45, scope: !11859, inlinedAt: !12134)
!12152 = !DILocation(line: 538, column: 57, scope: !11859, inlinedAt: !12134)
!12153 = !DILocation(line: 542, column: 16, scope: !11857, inlinedAt: !12134)
!12154 = !DILocalVariable(name: "n", arg: 1, scope: !12131, file: !289, line: 584, type: !462)
!12155 = !DILocation(line: 584, column: 42, scope: !12131)
!12156 = !DILocalVariable(name: "size", arg: 2, scope: !12131, file: !289, line: 584, type: !462)
!12157 = !DILocation(line: 584, column: 52, scope: !12131)
!12158 = !DILocalVariable(name: "flags", arg: 3, scope: !12131, file: !289, line: 584, type: !946)
!12159 = !DILocation(line: 584, column: 64, scope: !12131)
!12160 = !DILocalVariable(name: "bytes", scope: !12131, file: !289, line: 586, type: !462)
!12161 = !DILocation(line: 586, column: 9, scope: !12131)
!12162 = !DILocalVariable(name: "__a", scope: !12163, file: !289, line: 588, type: !462)
!12163 = distinct !DILexicalBlock(scope: !12164, file: !289, line: 588, column: 6)
!12164 = distinct !DILexicalBlock(scope: !12131, file: !289, line: 588, column: 6)
!12165 = !DILocation(line: 588, column: 6, scope: !12163)
!12166 = !DILocalVariable(name: "__b", scope: !12163, file: !289, line: 588, type: !462)
!12167 = !DILocalVariable(name: "__d", scope: !12163, file: !289, line: 588, type: !2912)
!12168 = !DILocation(line: 588, column: 6, scope: !12164)
!12169 = !DILocation(line: 588, column: 6, scope: !12131)
!12170 = !DILocation(line: 589, column: 3, scope: !12164)
!12171 = !DILocation(line: 590, column: 27, scope: !12135)
!12172 = !DILocation(line: 590, column: 6, scope: !12135)
!12173 = !DILocation(line: 590, column: 30, scope: !12135)
!12174 = !DILocation(line: 590, column: 54, scope: !12135)
!12175 = !DILocation(line: 590, column: 33, scope: !12135)
!12176 = !DILocation(line: 590, column: 6, scope: !12131)
!12177 = !DILocation(line: 591, column: 18, scope: !12135)
!12178 = !DILocation(line: 591, column: 25, scope: !12135)
!12179 = !DILocation(line: 540, column: 27, scope: !11858, inlinedAt: !12134)
!12180 = !DILocation(line: 540, column: 6, scope: !11858, inlinedAt: !12134)
!12181 = !DILocation(line: 540, column: 6, scope: !11859, inlinedAt: !12134)
!12182 = !DILocation(line: 544, column: 7, scope: !11887, inlinedAt: !12134)
!12183 = !DILocation(line: 544, column: 12, scope: !11887, inlinedAt: !12134)
!12184 = !DILocation(line: 544, column: 7, scope: !11857, inlinedAt: !12134)
!12185 = !DILocation(line: 545, column: 25, scope: !11887, inlinedAt: !12134)
!12186 = !DILocation(line: 545, column: 31, scope: !11887, inlinedAt: !12134)
!12187 = !DILocation(line: 480, column: 33, scope: !11885, inlinedAt: !12145)
!12188 = !DILocation(line: 480, column: 23, scope: !11885, inlinedAt: !12145)
!12189 = !DILocation(line: 481, column: 29, scope: !11885, inlinedAt: !12145)
!12190 = !DILocation(line: 481, column: 35, scope: !11885, inlinedAt: !12145)
!12191 = !DILocation(line: 481, column: 42, scope: !11885, inlinedAt: !12145)
!12192 = !DILocation(line: 474, column: 23, scope: !11880, inlinedAt: !12144)
!12193 = !DILocation(line: 474, column: 29, scope: !11880, inlinedAt: !12144)
!12194 = !DILocation(line: 474, column: 36, scope: !11880, inlinedAt: !12144)
!12195 = !DILocation(line: 474, column: 9, scope: !11880, inlinedAt: !12144)
!12196 = !DILocation(line: 545, column: 4, scope: !11887, inlinedAt: !12134)
!12197 = !DILocation(line: 547, column: 25, scope: !11857, inlinedAt: !12134)
!12198 = !DILocation(line: 348, column: 7, scope: !11931, inlinedAt: !12142)
!12199 = !DILocation(line: 348, column: 6, scope: !11874, inlinedAt: !12142)
!12200 = !DILocation(line: 349, column: 3, scope: !11931, inlinedAt: !12142)
!12201 = !DILocation(line: 351, column: 6, scope: !11935, inlinedAt: !12142)
!12202 = !DILocation(line: 351, column: 11, scope: !11935, inlinedAt: !12142)
!12203 = !DILocation(line: 351, column: 6, scope: !11874, inlinedAt: !12142)
!12204 = !DILocation(line: 352, column: 3, scope: !11935, inlinedAt: !12142)
!12205 = !DILocation(line: 354, column: 32, scope: !11940, inlinedAt: !12142)
!12206 = !DILocation(line: 354, column: 37, scope: !11940, inlinedAt: !12142)
!12207 = !DILocation(line: 354, column: 42, scope: !11940, inlinedAt: !12142)
!12208 = !DILocation(line: 354, column: 45, scope: !11940, inlinedAt: !12142)
!12209 = !DILocation(line: 354, column: 50, scope: !11940, inlinedAt: !12142)
!12210 = !DILocation(line: 354, column: 6, scope: !11874, inlinedAt: !12142)
!12211 = !DILocation(line: 355, column: 3, scope: !11940, inlinedAt: !12142)
!12212 = !DILocation(line: 356, column: 32, scope: !11948, inlinedAt: !12142)
!12213 = !DILocation(line: 356, column: 37, scope: !11948, inlinedAt: !12142)
!12214 = !DILocation(line: 356, column: 43, scope: !11948, inlinedAt: !12142)
!12215 = !DILocation(line: 356, column: 46, scope: !11948, inlinedAt: !12142)
!12216 = !DILocation(line: 356, column: 51, scope: !11948, inlinedAt: !12142)
!12217 = !DILocation(line: 356, column: 6, scope: !11874, inlinedAt: !12142)
!12218 = !DILocation(line: 357, column: 3, scope: !11948, inlinedAt: !12142)
!12219 = !DILocation(line: 358, column: 6, scope: !11956, inlinedAt: !12142)
!12220 = !DILocation(line: 358, column: 11, scope: !11956, inlinedAt: !12142)
!12221 = !DILocation(line: 358, column: 6, scope: !11874, inlinedAt: !12142)
!12222 = !DILocation(line: 358, column: 26, scope: !11956, inlinedAt: !12142)
!12223 = !DILocation(line: 359, column: 6, scope: !11961, inlinedAt: !12142)
!12224 = !DILocation(line: 359, column: 11, scope: !11961, inlinedAt: !12142)
!12225 = !DILocation(line: 359, column: 6, scope: !11874, inlinedAt: !12142)
!12226 = !DILocation(line: 359, column: 26, scope: !11961, inlinedAt: !12142)
!12227 = !DILocation(line: 360, column: 6, scope: !11966, inlinedAt: !12142)
!12228 = !DILocation(line: 360, column: 11, scope: !11966, inlinedAt: !12142)
!12229 = !DILocation(line: 360, column: 6, scope: !11874, inlinedAt: !12142)
!12230 = !DILocation(line: 360, column: 26, scope: !11966, inlinedAt: !12142)
!12231 = !DILocation(line: 361, column: 6, scope: !11971, inlinedAt: !12142)
!12232 = !DILocation(line: 361, column: 11, scope: !11971, inlinedAt: !12142)
!12233 = !DILocation(line: 361, column: 6, scope: !11874, inlinedAt: !12142)
!12234 = !DILocation(line: 361, column: 26, scope: !11971, inlinedAt: !12142)
!12235 = !DILocation(line: 362, column: 6, scope: !11976, inlinedAt: !12142)
!12236 = !DILocation(line: 362, column: 11, scope: !11976, inlinedAt: !12142)
!12237 = !DILocation(line: 362, column: 6, scope: !11874, inlinedAt: !12142)
!12238 = !DILocation(line: 362, column: 26, scope: !11976, inlinedAt: !12142)
!12239 = !DILocation(line: 363, column: 6, scope: !11981, inlinedAt: !12142)
!12240 = !DILocation(line: 363, column: 11, scope: !11981, inlinedAt: !12142)
!12241 = !DILocation(line: 363, column: 6, scope: !11874, inlinedAt: !12142)
!12242 = !DILocation(line: 363, column: 26, scope: !11981, inlinedAt: !12142)
!12243 = !DILocation(line: 364, column: 6, scope: !11986, inlinedAt: !12142)
!12244 = !DILocation(line: 364, column: 11, scope: !11986, inlinedAt: !12142)
!12245 = !DILocation(line: 364, column: 6, scope: !11874, inlinedAt: !12142)
!12246 = !DILocation(line: 364, column: 26, scope: !11986, inlinedAt: !12142)
!12247 = !DILocation(line: 365, column: 6, scope: !11991, inlinedAt: !12142)
!12248 = !DILocation(line: 365, column: 11, scope: !11991, inlinedAt: !12142)
!12249 = !DILocation(line: 365, column: 6, scope: !11874, inlinedAt: !12142)
!12250 = !DILocation(line: 365, column: 26, scope: !11991, inlinedAt: !12142)
!12251 = !DILocation(line: 366, column: 6, scope: !11996, inlinedAt: !12142)
!12252 = !DILocation(line: 366, column: 11, scope: !11996, inlinedAt: !12142)
!12253 = !DILocation(line: 366, column: 6, scope: !11874, inlinedAt: !12142)
!12254 = !DILocation(line: 366, column: 26, scope: !11996, inlinedAt: !12142)
!12255 = !DILocation(line: 367, column: 6, scope: !12001, inlinedAt: !12142)
!12256 = !DILocation(line: 367, column: 11, scope: !12001, inlinedAt: !12142)
!12257 = !DILocation(line: 367, column: 6, scope: !11874, inlinedAt: !12142)
!12258 = !DILocation(line: 367, column: 26, scope: !12001, inlinedAt: !12142)
!12259 = !DILocation(line: 368, column: 6, scope: !12006, inlinedAt: !12142)
!12260 = !DILocation(line: 368, column: 11, scope: !12006, inlinedAt: !12142)
!12261 = !DILocation(line: 368, column: 6, scope: !11874, inlinedAt: !12142)
!12262 = !DILocation(line: 368, column: 26, scope: !12006, inlinedAt: !12142)
!12263 = !DILocation(line: 369, column: 6, scope: !12011, inlinedAt: !12142)
!12264 = !DILocation(line: 369, column: 11, scope: !12011, inlinedAt: !12142)
!12265 = !DILocation(line: 369, column: 6, scope: !11874, inlinedAt: !12142)
!12266 = !DILocation(line: 369, column: 26, scope: !12011, inlinedAt: !12142)
!12267 = !DILocation(line: 370, column: 6, scope: !12016, inlinedAt: !12142)
!12268 = !DILocation(line: 370, column: 11, scope: !12016, inlinedAt: !12142)
!12269 = !DILocation(line: 370, column: 6, scope: !11874, inlinedAt: !12142)
!12270 = !DILocation(line: 370, column: 26, scope: !12016, inlinedAt: !12142)
!12271 = !DILocation(line: 371, column: 6, scope: !12021, inlinedAt: !12142)
!12272 = !DILocation(line: 371, column: 11, scope: !12021, inlinedAt: !12142)
!12273 = !DILocation(line: 371, column: 6, scope: !11874, inlinedAt: !12142)
!12274 = !DILocation(line: 371, column: 26, scope: !12021, inlinedAt: !12142)
!12275 = !DILocation(line: 372, column: 6, scope: !12026, inlinedAt: !12142)
!12276 = !DILocation(line: 372, column: 11, scope: !12026, inlinedAt: !12142)
!12277 = !DILocation(line: 372, column: 6, scope: !11874, inlinedAt: !12142)
!12278 = !DILocation(line: 372, column: 26, scope: !12026, inlinedAt: !12142)
!12279 = !DILocation(line: 373, column: 6, scope: !12031, inlinedAt: !12142)
!12280 = !DILocation(line: 373, column: 11, scope: !12031, inlinedAt: !12142)
!12281 = !DILocation(line: 373, column: 6, scope: !11874, inlinedAt: !12142)
!12282 = !DILocation(line: 373, column: 26, scope: !12031, inlinedAt: !12142)
!12283 = !DILocation(line: 374, column: 6, scope: !12036, inlinedAt: !12142)
!12284 = !DILocation(line: 374, column: 11, scope: !12036, inlinedAt: !12142)
!12285 = !DILocation(line: 374, column: 6, scope: !11874, inlinedAt: !12142)
!12286 = !DILocation(line: 374, column: 26, scope: !12036, inlinedAt: !12142)
!12287 = !DILocation(line: 375, column: 6, scope: !12041, inlinedAt: !12142)
!12288 = !DILocation(line: 375, column: 11, scope: !12041, inlinedAt: !12142)
!12289 = !DILocation(line: 375, column: 6, scope: !11874, inlinedAt: !12142)
!12290 = !DILocation(line: 375, column: 27, scope: !12041, inlinedAt: !12142)
!12291 = !DILocation(line: 376, column: 6, scope: !12046, inlinedAt: !12142)
!12292 = !DILocation(line: 376, column: 11, scope: !12046, inlinedAt: !12142)
!12293 = !DILocation(line: 376, column: 6, scope: !11874, inlinedAt: !12142)
!12294 = !DILocation(line: 376, column: 32, scope: !12046, inlinedAt: !12142)
!12295 = !DILocation(line: 377, column: 6, scope: !12051, inlinedAt: !12142)
!12296 = !DILocation(line: 377, column: 11, scope: !12051, inlinedAt: !12142)
!12297 = !DILocation(line: 377, column: 6, scope: !11874, inlinedAt: !12142)
!12298 = !DILocation(line: 377, column: 32, scope: !12051, inlinedAt: !12142)
!12299 = !DILocation(line: 378, column: 6, scope: !12056, inlinedAt: !12142)
!12300 = !DILocation(line: 378, column: 11, scope: !12056, inlinedAt: !12142)
!12301 = !DILocation(line: 378, column: 6, scope: !11874, inlinedAt: !12142)
!12302 = !DILocation(line: 378, column: 32, scope: !12056, inlinedAt: !12142)
!12303 = !DILocation(line: 379, column: 6, scope: !12061, inlinedAt: !12142)
!12304 = !DILocation(line: 379, column: 11, scope: !12061, inlinedAt: !12142)
!12305 = !DILocation(line: 379, column: 6, scope: !11874, inlinedAt: !12142)
!12306 = !DILocation(line: 379, column: 33, scope: !12061, inlinedAt: !12142)
!12307 = !DILocation(line: 380, column: 6, scope: !12066, inlinedAt: !12142)
!12308 = !DILocation(line: 380, column: 11, scope: !12066, inlinedAt: !12142)
!12309 = !DILocation(line: 380, column: 6, scope: !11874, inlinedAt: !12142)
!12310 = !DILocation(line: 380, column: 33, scope: !12066, inlinedAt: !12142)
!12311 = !DILocation(line: 381, column: 6, scope: !12071, inlinedAt: !12142)
!12312 = !DILocation(line: 381, column: 11, scope: !12071, inlinedAt: !12142)
!12313 = !DILocation(line: 381, column: 6, scope: !11874, inlinedAt: !12142)
!12314 = !DILocation(line: 381, column: 33, scope: !12071, inlinedAt: !12142)
!12315 = !DILocation(line: 382, column: 2, scope: !12076, inlinedAt: !12142)
!12316 = !DILocation(line: 382, column: 2, scope: !12080, inlinedAt: !12142)
!12317 = !DILocation(line: 382, column: 2, scope: !12081, inlinedAt: !12142)
!12318 = !DILocation(line: 386, column: 1, scope: !11874, inlinedAt: !12142)
!12319 = !DILocation(line: 547, column: 9, scope: !11857, inlinedAt: !12134)
!12320 = !DILocation(line: 549, column: 8, scope: !12087, inlinedAt: !12134)
!12321 = !DILocation(line: 549, column: 7, scope: !11857, inlinedAt: !12134)
!12322 = !DILocation(line: 550, column: 4, scope: !12087, inlinedAt: !12134)
!12323 = !DILocation(line: 553, column: 33, scope: !11857, inlinedAt: !12134)
!12324 = !DILocation(line: 325, column: 6, scope: !12092, inlinedAt: !12140)
!12325 = !DILocation(line: 325, column: 6, scope: !11868, inlinedAt: !12140)
!12326 = !DILocation(line: 326, column: 3, scope: !12092, inlinedAt: !12140)
!12327 = !DILocation(line: 332, column: 9, scope: !11868, inlinedAt: !12140)
!12328 = !DILocation(line: 332, column: 15, scope: !11868, inlinedAt: !12140)
!12329 = !DILocation(line: 332, column: 2, scope: !11868, inlinedAt: !12140)
!12330 = !DILocation(line: 336, column: 1, scope: !11868, inlinedAt: !12140)
!12331 = !DILocation(line: 553, column: 5, scope: !11857, inlinedAt: !12134)
!12332 = !DILocation(line: 553, column: 41, scope: !11857, inlinedAt: !12134)
!12333 = !DILocation(line: 554, column: 5, scope: !11857, inlinedAt: !12134)
!12334 = !DILocation(line: 554, column: 12, scope: !11857, inlinedAt: !12134)
!12335 = !DILocation(line: 448, column: 31, scope: !11852, inlinedAt: !12133)
!12336 = !DILocation(line: 448, column: 34, scope: !11852, inlinedAt: !12133)
!12337 = !DILocation(line: 448, column: 14, scope: !11852, inlinedAt: !12133)
!12338 = !DILocation(line: 450, column: 22, scope: !11852, inlinedAt: !12133)
!12339 = !DILocation(line: 450, column: 25, scope: !11852, inlinedAt: !12133)
!12340 = !DILocation(line: 450, column: 30, scope: !11852, inlinedAt: !12133)
!12341 = !DILocation(line: 450, column: 36, scope: !11852, inlinedAt: !12133)
!12342 = !DILocation(line: 450, column: 8, scope: !11852, inlinedAt: !12133)
!12343 = !DILocation(line: 450, column: 6, scope: !11852, inlinedAt: !12133)
!12344 = !DILocation(line: 451, column: 9, scope: !11852, inlinedAt: !12133)
!12345 = !DILocation(line: 552, column: 3, scope: !11857, inlinedAt: !12134)
!12346 = !DILocation(line: 557, column: 19, scope: !11859, inlinedAt: !12134)
!12347 = !DILocation(line: 557, column: 25, scope: !11859, inlinedAt: !12134)
!12348 = !DILocation(line: 557, column: 9, scope: !11859, inlinedAt: !12134)
!12349 = !DILocation(line: 557, column: 2, scope: !11859, inlinedAt: !12134)
!12350 = !DILocation(line: 558, column: 1, scope: !11859, inlinedAt: !12134)
!12351 = !DILocation(line: 591, column: 3, scope: !12135)
!12352 = !DILocation(line: 592, column: 19, scope: !12131)
!12353 = !DILocation(line: 592, column: 26, scope: !12131)
!12354 = !DILocation(line: 592, column: 9, scope: !12131)
!12355 = !DILocation(line: 592, column: 2, scope: !12131)
!12356 = !DILocation(line: 593, column: 1, scope: !12131)
!12357 = distinct !DISubprogram(name: "__must_check_overflow", scope: !12358, file: !12358, line: 52, type: !12359, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12358 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!12359 = !DISubroutineType(types: !12360)
!12360 = !{!626, !626}
!12361 = !DILocalVariable(name: "overflow", arg: 1, scope: !12357, file: !12358, line: 52, type: !626)
!12362 = !DILocation(line: 52, column: 60, scope: !12357)
!12363 = !DILocation(line: 54, column: 9, scope: !12357)
!12364 = !DILocation(line: 54, column: 2, scope: !12357)
!12365 = distinct !DISubprogram(name: "get_order", scope: !12366, file: !12366, line: 29, type: !12367, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12366 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!12367 = !DISubroutineType(types: !12368)
!12368 = !{!401, !465}
!12369 = !DILocalVariable(name: "x", arg: 1, scope: !12370, file: !7857, line: 366, type: !559)
!12370 = distinct !DISubprogram(name: "fls64", scope: !7857, file: !7857, line: 366, type: !12371, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12371 = !DISubroutineType(types: !12372)
!12372 = !{!401, !559}
!12373 = !DILocation(line: 366, column: 40, scope: !12370, inlinedAt: !12374)
!12374 = distinct !DILocation(line: 46, column: 9, scope: !12365)
!12375 = !DILocalVariable(name: "bitpos", scope: !12370, file: !7857, line: 368, type: !401)
!12376 = !DILocation(line: 368, column: 6, scope: !12370, inlinedAt: !12374)
!12377 = !DILocalVariable(name: "size", arg: 1, scope: !12365, file: !12366, line: 29, type: !465)
!12378 = !DILocation(line: 29, column: 63, scope: !12365)
!12379 = !DILocation(line: 31, column: 27, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12365, file: !12366, line: 31, column: 6)
!12381 = !DILocation(line: 31, column: 6, scope: !12380)
!12382 = !DILocation(line: 31, column: 6, scope: !12365)
!12383 = !DILocation(line: 32, column: 8, scope: !12384)
!12384 = distinct !DILexicalBlock(scope: !12385, file: !12366, line: 32, column: 7)
!12385 = distinct !DILexicalBlock(scope: !12380, file: !12366, line: 31, column: 34)
!12386 = !DILocation(line: 32, column: 7, scope: !12385)
!12387 = !DILocation(line: 33, column: 4, scope: !12384)
!12388 = !DILocation(line: 35, column: 7, scope: !12389)
!12389 = distinct !DILexicalBlock(scope: !12385, file: !12366, line: 35, column: 7)
!12390 = !DILocation(line: 35, column: 12, scope: !12389)
!12391 = !DILocation(line: 35, column: 7, scope: !12385)
!12392 = !DILocation(line: 36, column: 4, scope: !12389)
!12393 = !DILocation(line: 38, column: 10, scope: !12385)
!12394 = !DILocation(line: 38, column: 28, scope: !12385)
!12395 = !DILocation(line: 38, column: 41, scope: !12385)
!12396 = !DILocation(line: 38, column: 3, scope: !12385)
!12397 = !DILocation(line: 41, column: 6, scope: !12365)
!12398 = !DILocation(line: 42, column: 7, scope: !12365)
!12399 = !DILocation(line: 46, column: 15, scope: !12365)
!12400 = !DILocation(line: 374, column: 2, scope: !12370, inlinedAt: !12374)
!12401 = !DILocation(line: 376, column: 14, scope: !12370, inlinedAt: !12374)
!12402 = !{i32 335278}
!12403 = !DILocation(line: 377, column: 9, scope: !12370, inlinedAt: !12374)
!12404 = !DILocation(line: 377, column: 16, scope: !12370, inlinedAt: !12374)
!12405 = !DILocation(line: 46, column: 2, scope: !12365)
!12406 = !DILocation(line: 48, column: 1, scope: !12365)
!12407 = distinct !DISubprogram(name: "__ilog2_u64", scope: !12408, file: !12408, line: 30, type: !12409, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12408 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!12409 = !DISubroutineType(types: !12410)
!12410 = !{!401, !558}
!12411 = !DILocation(line: 366, column: 40, scope: !12370, inlinedAt: !12412)
!12412 = distinct !DILocation(line: 32, column: 9, scope: !12407)
!12413 = !DILocation(line: 368, column: 6, scope: !12370, inlinedAt: !12412)
!12414 = !DILocalVariable(name: "n", arg: 1, scope: !12407, file: !12408, line: 30, type: !558)
!12415 = !DILocation(line: 30, column: 21, scope: !12407)
!12416 = !DILocation(line: 32, column: 15, scope: !12407)
!12417 = !DILocation(line: 374, column: 2, scope: !12370, inlinedAt: !12412)
!12418 = !DILocation(line: 376, column: 14, scope: !12370, inlinedAt: !12412)
!12419 = !DILocation(line: 377, column: 9, scope: !12370, inlinedAt: !12412)
!12420 = !DILocation(line: 377, column: 16, scope: !12370, inlinedAt: !12412)
!12421 = !DILocation(line: 32, column: 18, scope: !12407)
!12422 = !DILocation(line: 32, column: 2, scope: !12407)
!12423 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !12424, file: !12424, line: 137, type: !12425, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12424 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!12425 = !DISubroutineType(types: !12426)
!12426 = !{!341, !1346, !3380, !462, !946}
!12427 = !DILocalVariable(name: "s", arg: 1, scope: !12423, file: !12424, line: 137, type: !1346)
!12428 = !DILocation(line: 137, column: 54, scope: !12423)
!12429 = !DILocalVariable(name: "object", arg: 2, scope: !12423, file: !12424, line: 137, type: !3380)
!12430 = !DILocation(line: 137, column: 69, scope: !12423)
!12431 = !DILocalVariable(name: "size", arg: 3, scope: !12423, file: !12424, line: 138, type: !462)
!12432 = !DILocation(line: 138, column: 12, scope: !12423)
!12433 = !DILocalVariable(name: "flags", arg: 4, scope: !12423, file: !12424, line: 138, type: !946)
!12434 = !DILocation(line: 138, column: 24, scope: !12423)
!12435 = !DILocation(line: 140, column: 17, scope: !12423)
!12436 = !DILocation(line: 140, column: 2, scope: !12423)
!12437 = distinct !DISubprogram(name: "__list_add", scope: !9075, file: !9075, line: 63, type: !12438, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12438 = !DISubroutineType(types: !12439)
!12439 = !{null, !365, !365, !365}
!12440 = !DILocalVariable(name: "new", arg: 1, scope: !12437, file: !9075, line: 63, type: !365)
!12441 = !DILocation(line: 63, column: 49, scope: !12437)
!12442 = !DILocalVariable(name: "prev", arg: 2, scope: !12437, file: !9075, line: 64, type: !365)
!12443 = !DILocation(line: 64, column: 28, scope: !12437)
!12444 = !DILocalVariable(name: "next", arg: 3, scope: !12437, file: !9075, line: 65, type: !365)
!12445 = !DILocation(line: 65, column: 28, scope: !12437)
!12446 = !DILocation(line: 67, column: 24, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12437, file: !9075, line: 67, column: 6)
!12448 = !DILocation(line: 67, column: 29, scope: !12447)
!12449 = !DILocation(line: 67, column: 35, scope: !12447)
!12450 = !DILocation(line: 67, column: 7, scope: !12447)
!12451 = !DILocation(line: 67, column: 6, scope: !12437)
!12452 = !DILocation(line: 68, column: 3, scope: !12447)
!12453 = !DILocation(line: 70, column: 15, scope: !12437)
!12454 = !DILocation(line: 70, column: 2, scope: !12437)
!12455 = !DILocation(line: 70, column: 8, scope: !12437)
!12456 = !DILocation(line: 70, column: 13, scope: !12437)
!12457 = !DILocation(line: 71, column: 14, scope: !12437)
!12458 = !DILocation(line: 71, column: 2, scope: !12437)
!12459 = !DILocation(line: 71, column: 7, scope: !12437)
!12460 = !DILocation(line: 71, column: 12, scope: !12437)
!12461 = !DILocation(line: 72, column: 14, scope: !12437)
!12462 = !DILocation(line: 72, column: 2, scope: !12437)
!12463 = !DILocation(line: 72, column: 7, scope: !12437)
!12464 = !DILocation(line: 72, column: 12, scope: !12437)
!12465 = !DILocation(line: 73, column: 2, scope: !12437)
!12466 = !DILocation(line: 73, column: 2, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12437, file: !9075, line: 73, column: 2)
!12468 = !DILocation(line: 73, column: 2, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12467, file: !9075, line: 73, column: 2)
!12470 = !DILocation(line: 73, column: 2, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12467, file: !9075, line: 73, column: 2)
!12472 = !DILocation(line: 74, column: 1, scope: !12437)
!12473 = distinct !DISubprogram(name: "__list_add_valid", scope: !9075, file: !9075, line: 45, type: !12474, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12474 = !DISubroutineType(types: !12475)
!12475 = !{!626, !365, !365, !365}
!12476 = !DILocalVariable(name: "new", arg: 1, scope: !12473, file: !9075, line: 45, type: !365)
!12477 = !DILocation(line: 45, column: 55, scope: !12473)
!12478 = !DILocalVariable(name: "prev", arg: 2, scope: !12473, file: !9075, line: 46, type: !365)
!12479 = !DILocation(line: 46, column: 23, scope: !12473)
!12480 = !DILocalVariable(name: "next", arg: 3, scope: !12473, file: !9075, line: 47, type: !365)
!12481 = !DILocation(line: 47, column: 23, scope: !12473)
!12482 = !DILocation(line: 49, column: 2, scope: !12473)
!12483 = distinct !DISubprogram(name: "check_period", scope: !6239, file: !6239, line: 735, type: !12484, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12484 = !DISubroutineType(types: !12485)
!12485 = !{!401, !5814, !7, !7, !7, !7}
!12486 = !DILocalVariable(name: "ehci", arg: 1, scope: !12483, file: !6239, line: 736, type: !5814)
!12487 = !DILocation(line: 736, column: 19, scope: !12483)
!12488 = !DILocalVariable(name: "frame", arg: 2, scope: !12483, file: !6239, line: 737, type: !7)
!12489 = !DILocation(line: 737, column: 11, scope: !12483)
!12490 = !DILocalVariable(name: "uframe", arg: 3, scope: !12483, file: !6239, line: 738, type: !7)
!12491 = !DILocation(line: 738, column: 11, scope: !12483)
!12492 = !DILocalVariable(name: "uperiod", arg: 4, scope: !12483, file: !6239, line: 739, type: !7)
!12493 = !DILocation(line: 739, column: 11, scope: !12483)
!12494 = !DILocalVariable(name: "usecs", arg: 5, scope: !12483, file: !6239, line: 740, type: !7)
!12495 = !DILocation(line: 740, column: 11, scope: !12483)
!12496 = !DILocation(line: 745, column: 6, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12483, file: !6239, line: 745, column: 6)
!12498 = !DILocation(line: 745, column: 13, scope: !12497)
!12499 = !DILocation(line: 745, column: 6, scope: !12483)
!12500 = !DILocation(line: 746, column: 3, scope: !12497)
!12501 = !DILocation(line: 749, column: 10, scope: !12483)
!12502 = !DILocation(line: 749, column: 16, scope: !12483)
!12503 = !DILocation(line: 749, column: 38, scope: !12483)
!12504 = !DILocation(line: 749, column: 36, scope: !12483)
!12505 = !DILocation(line: 749, column: 8, scope: !12483)
!12506 = !DILocation(line: 751, column: 17, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12483, file: !6239, line: 751, column: 2)
!12508 = !DILocation(line: 751, column: 23, scope: !12507)
!12509 = !DILocation(line: 751, column: 14, scope: !12507)
!12510 = !DILocation(line: 751, column: 7, scope: !12507)
!12511 = !DILocation(line: 751, column: 29, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12507, file: !6239, line: 751, column: 2)
!12513 = !DILocation(line: 751, column: 36, scope: !12512)
!12514 = !DILocation(line: 751, column: 2, scope: !12507)
!12515 = !DILocation(line: 753, column: 7, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12517, file: !6239, line: 753, column: 7)
!12517 = distinct !DILexicalBlock(scope: !12512, file: !6239, line: 752, column: 23)
!12518 = !DILocation(line: 753, column: 13, scope: !12516)
!12519 = !DILocation(line: 753, column: 23, scope: !12516)
!12520 = !DILocation(line: 753, column: 33, scope: !12516)
!12521 = !DILocation(line: 753, column: 31, scope: !12516)
!12522 = !DILocation(line: 753, column: 7, scope: !12517)
!12523 = !DILocation(line: 754, column: 4, scope: !12516)
!12524 = !DILocation(line: 755, column: 2, scope: !12517)
!12525 = !DILocation(line: 752, column: 14, scope: !12512)
!12526 = !DILocation(line: 752, column: 11, scope: !12512)
!12527 = !DILocation(line: 751, column: 2, scope: !12512)
!12528 = distinct !{!12528, !12514, !12529}
!12529 = !DILocation(line: 755, column: 2, scope: !12507)
!12530 = !DILocation(line: 758, column: 2, scope: !12483)
!12531 = !DILocation(line: 759, column: 1, scope: !12483)
!12532 = distinct !DISubprogram(name: "tt_available", scope: !6239, file: !6239, line: 347, type: !12533, scopeLine: 354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12533 = !DISubroutineType(types: !12534)
!12534 = !{!401, !5814, !6105, !6096, !7, !7}
!12535 = !DILocalVariable(name: "ehci", arg: 1, scope: !12532, file: !6239, line: 348, type: !5814)
!12536 = !DILocation(line: 348, column: 20, scope: !12532)
!12537 = !DILocalVariable(name: "ps", arg: 2, scope: !12532, file: !6239, line: 349, type: !6105)
!12538 = !DILocation(line: 349, column: 25, scope: !12532)
!12539 = !DILocalVariable(name: "tt", arg: 3, scope: !12532, file: !6239, line: 350, type: !6096)
!12540 = !DILocation(line: 350, column: 19, scope: !12532)
!12541 = !DILocalVariable(name: "frame", arg: 4, scope: !12532, file: !6239, line: 351, type: !7)
!12542 = !DILocation(line: 351, column: 12, scope: !12532)
!12543 = !DILocalVariable(name: "uframe", arg: 5, scope: !12532, file: !6239, line: 352, type: !7)
!12544 = !DILocation(line: 352, column: 12, scope: !12532)
!12545 = !DILocalVariable(name: "period", scope: !12532, file: !6239, line: 355, type: !7)
!12546 = !DILocation(line: 355, column: 12, scope: !12532)
!12547 = !DILocation(line: 355, column: 21, scope: !12532)
!12548 = !DILocation(line: 355, column: 25, scope: !12532)
!12549 = !DILocalVariable(name: "usecs", scope: !12532, file: !6239, line: 356, type: !7)
!12550 = !DILocation(line: 356, column: 12, scope: !12532)
!12551 = !DILocation(line: 356, column: 20, scope: !12532)
!12552 = !DILocation(line: 356, column: 24, scope: !12532)
!12553 = !DILocation(line: 358, column: 7, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12532, file: !6239, line: 358, column: 6)
!12555 = !DILocation(line: 358, column: 14, scope: !12554)
!12556 = !DILocation(line: 358, column: 20, scope: !12554)
!12557 = !DILocation(line: 358, column: 24, scope: !12554)
!12558 = !DILocation(line: 358, column: 31, scope: !12554)
!12559 = !DILocation(line: 358, column: 6, scope: !12532)
!12560 = !DILocation(line: 359, column: 3, scope: !12554)
!12561 = !DILocation(line: 361, column: 16, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12532, file: !6239, line: 361, column: 2)
!12563 = !DILocation(line: 361, column: 23, scope: !12562)
!12564 = !DILocation(line: 361, column: 13, scope: !12562)
!12565 = !DILocation(line: 361, column: 7, scope: !12562)
!12566 = !DILocation(line: 361, column: 28, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12562, file: !6239, line: 361, column: 2)
!12568 = !DILocation(line: 361, column: 34, scope: !12567)
!12569 = !DILocation(line: 361, column: 2, scope: !12562)
!12570 = !DILocalVariable(name: "i", scope: !12571, file: !6239, line: 363, type: !7)
!12571 = distinct !DILexicalBlock(scope: !12567, file: !6239, line: 362, column: 21)
!12572 = !DILocation(line: 363, column: 12, scope: !12571)
!12573 = !DILocalVariable(name: "uf", scope: !12571, file: !6239, line: 363, type: !7)
!12574 = !DILocation(line: 363, column: 15, scope: !12571)
!12575 = !DILocalVariable(name: "tt_usecs", scope: !12571, file: !6239, line: 364, type: !12576)
!12576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 128, elements: !2459)
!12577 = !DILocation(line: 364, column: 18, scope: !12571)
!12578 = !DILocation(line: 366, column: 7, scope: !12579)
!12579 = distinct !DILexicalBlock(scope: !12571, file: !6239, line: 366, column: 7)
!12580 = !DILocation(line: 366, column: 11, scope: !12579)
!12581 = !DILocation(line: 366, column: 21, scope: !12579)
!12582 = !DILocation(line: 366, column: 30, scope: !12579)
!12583 = !DILocation(line: 366, column: 28, scope: !12579)
!12584 = !DILocation(line: 366, column: 36, scope: !12579)
!12585 = !DILocation(line: 366, column: 7, scope: !12571)
!12586 = !DILocation(line: 367, column: 4, scope: !12579)
!12587 = !DILocation(line: 369, column: 8, scope: !12571)
!12588 = !DILocation(line: 369, column: 14, scope: !12571)
!12589 = !DILocation(line: 369, column: 6, scope: !12571)
!12590 = !DILocation(line: 370, column: 10, scope: !12591)
!12591 = distinct !DILexicalBlock(scope: !12571, file: !6239, line: 370, column: 3)
!12592 = !DILocation(line: 370, column: 8, scope: !12591)
!12593 = !DILocation(line: 370, column: 15, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12591, file: !6239, line: 370, column: 3)
!12595 = !DILocation(line: 370, column: 17, scope: !12594)
!12596 = !DILocation(line: 370, column: 3, scope: !12591)
!12597 = !DILocation(line: 371, column: 18, scope: !12594)
!12598 = !DILocation(line: 371, column: 24, scope: !12594)
!12599 = !DILocation(line: 371, column: 34, scope: !12594)
!12600 = !DILocation(line: 371, column: 13, scope: !12594)
!12601 = !DILocation(line: 371, column: 4, scope: !12594)
!12602 = !DILocation(line: 371, column: 16, scope: !12594)
!12603 = !DILocation(line: 370, column: 23, scope: !12594)
!12604 = !DILocation(line: 370, column: 28, scope: !12594)
!12605 = !DILocation(line: 370, column: 3, scope: !12594)
!12606 = distinct !{!12606, !12596, !12607}
!12607 = !DILocation(line: 371, column: 36, scope: !12591)
!12608 = !DILocation(line: 373, column: 20, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12571, file: !6239, line: 373, column: 7)
!12610 = !DILocation(line: 373, column: 7, scope: !12609)
!12611 = !DILocation(line: 373, column: 40, scope: !12609)
!12612 = !DILocation(line: 373, column: 31, scope: !12609)
!12613 = !DILocation(line: 373, column: 28, scope: !12609)
!12614 = !DILocation(line: 373, column: 7, scope: !12571)
!12615 = !DILocation(line: 374, column: 4, scope: !12609)
!12616 = !DILocation(line: 381, column: 7, scope: !12617)
!12617 = distinct !DILexicalBlock(scope: !12571, file: !6239, line: 381, column: 7)
!12618 = !DILocation(line: 381, column: 13, scope: !12617)
!12619 = !DILocation(line: 381, column: 7, scope: !12571)
!12620 = !DILocalVariable(name: "ufs", scope: !12621, file: !6239, line: 382, type: !401)
!12621 = distinct !DILexicalBlock(scope: !12617, file: !6239, line: 381, column: 20)
!12622 = !DILocation(line: 382, column: 8, scope: !12621)
!12623 = !DILocation(line: 382, column: 15, scope: !12621)
!12624 = !DILocation(line: 382, column: 21, scope: !12621)
!12625 = !DILocation(line: 384, column: 13, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12621, file: !6239, line: 384, column: 4)
!12627 = !DILocation(line: 384, column: 11, scope: !12626)
!12628 = !DILocation(line: 384, column: 9, scope: !12626)
!12629 = !DILocation(line: 384, column: 21, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12626, file: !6239, line: 384, column: 4)
!12631 = !DILocation(line: 384, column: 26, scope: !12630)
!12632 = !DILocation(line: 384, column: 35, scope: !12630)
!12633 = !DILocation(line: 384, column: 33, scope: !12630)
!12634 = !DILocation(line: 384, column: 23, scope: !12630)
!12635 = !DILocation(line: 384, column: 40, scope: !12630)
!12636 = !DILocation(line: 384, column: 43, scope: !12630)
!12637 = !DILocation(line: 384, column: 45, scope: !12630)
!12638 = !DILocation(line: 0, scope: !12630)
!12639 = !DILocation(line: 384, column: 4, scope: !12626)
!12640 = !DILocation(line: 385, column: 18, scope: !12641)
!12641 = distinct !DILexicalBlock(scope: !12630, file: !6239, line: 385, column: 9)
!12642 = !DILocation(line: 385, column: 9, scope: !12641)
!12643 = !DILocation(line: 385, column: 21, scope: !12641)
!12644 = !DILocation(line: 385, column: 9, scope: !12630)
!12645 = !DILocation(line: 386, column: 6, scope: !12641)
!12646 = !DILocation(line: 385, column: 23, scope: !12641)
!12647 = !DILocation(line: 384, column: 51, scope: !12630)
!12648 = !DILocation(line: 384, column: 4, scope: !12630)
!12649 = distinct !{!12649, !12639, !12650}
!12650 = !DILocation(line: 386, column: 13, scope: !12626)
!12651 = !DILocation(line: 387, column: 3, scope: !12621)
!12652 = !DILocation(line: 389, column: 23, scope: !12571)
!12653 = !DILocation(line: 389, column: 12, scope: !12571)
!12654 = !DILocation(line: 389, column: 3, scope: !12571)
!12655 = !DILocation(line: 389, column: 20, scope: !12571)
!12656 = !DILocation(line: 391, column: 26, scope: !12571)
!12657 = !DILocation(line: 391, column: 3, scope: !12571)
!12658 = !DILocation(line: 394, column: 7, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12571, file: !6239, line: 394, column: 7)
!12660 = !DILocation(line: 394, column: 25, scope: !12659)
!12661 = !DILocation(line: 394, column: 23, scope: !12659)
!12662 = !DILocation(line: 394, column: 7, scope: !12571)
!12663 = !DILocation(line: 395, column: 4, scope: !12659)
!12664 = !DILocation(line: 396, column: 2, scope: !12571)
!12665 = !DILocation(line: 362, column: 13, scope: !12567)
!12666 = !DILocation(line: 362, column: 10, scope: !12567)
!12667 = !DILocation(line: 361, column: 2, scope: !12567)
!12668 = distinct !{!12668, !12569, !12669}
!12669 = !DILocation(line: 396, column: 2, scope: !12562)
!12670 = !DILocation(line: 398, column: 2, scope: !12532)
!12671 = !DILocation(line: 399, column: 1, scope: !12532)
!12672 = distinct !DISubprogram(name: "carryover_tt_bandwidth", scope: !6239, file: !6239, line: 314, type: !12673, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12673 = !DISubroutineType(types: !12674)
!12674 = !{null, !12675}
!12675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!12676 = !DILocalVariable(name: "tt_usecs", arg: 1, scope: !12672, file: !6239, line: 314, type: !12675)
!12677 = !DILocation(line: 314, column: 58, scope: !12672)
!12678 = !DILocalVariable(name: "i", scope: !12672, file: !6239, line: 316, type: !401)
!12679 = !DILocation(line: 316, column: 6, scope: !12672)
!12680 = !DILocation(line: 318, column: 9, scope: !12681)
!12681 = distinct !DILexicalBlock(scope: !12672, file: !6239, line: 318, column: 2)
!12682 = !DILocation(line: 318, column: 7, scope: !12681)
!12683 = !DILocation(line: 318, column: 14, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12681, file: !6239, line: 318, column: 2)
!12685 = !DILocation(line: 318, column: 16, scope: !12684)
!12686 = !DILocation(line: 318, column: 2, scope: !12681)
!12687 = !DILocation(line: 319, column: 20, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12689, file: !6239, line: 319, column: 7)
!12689 = distinct !DILexicalBlock(scope: !12684, file: !6239, line: 318, column: 26)
!12690 = !DILocation(line: 319, column: 7, scope: !12688)
!12691 = !DILocation(line: 319, column: 25, scope: !12688)
!12692 = !DILocation(line: 319, column: 34, scope: !12688)
!12693 = !DILocation(line: 319, column: 23, scope: !12688)
!12694 = !DILocation(line: 319, column: 7, scope: !12689)
!12695 = !DILocation(line: 320, column: 21, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12688, file: !6239, line: 319, column: 38)
!12697 = !DILocation(line: 320, column: 30, scope: !12696)
!12698 = !DILocation(line: 320, column: 48, scope: !12696)
!12699 = !DILocation(line: 320, column: 35, scope: !12696)
!12700 = !DILocation(line: 320, column: 33, scope: !12696)
!12701 = !DILocation(line: 320, column: 4, scope: !12696)
!12702 = !DILocation(line: 320, column: 13, scope: !12696)
!12703 = !DILocation(line: 320, column: 14, scope: !12696)
!12704 = !DILocation(line: 320, column: 18, scope: !12696)
!12705 = !DILocation(line: 321, column: 31, scope: !12696)
!12706 = !DILocation(line: 321, column: 18, scope: !12696)
!12707 = !DILocation(line: 321, column: 4, scope: !12696)
!12708 = !DILocation(line: 321, column: 13, scope: !12696)
!12709 = !DILocation(line: 321, column: 16, scope: !12696)
!12710 = !DILocation(line: 322, column: 3, scope: !12696)
!12711 = !DILocation(line: 323, column: 2, scope: !12689)
!12712 = !DILocation(line: 318, column: 22, scope: !12684)
!12713 = !DILocation(line: 318, column: 2, scope: !12684)
!12714 = distinct !{!12714, !12686, !12715}
!12715 = !DILocation(line: 323, column: 2, scope: !12681)
!12716 = !DILocation(line: 324, column: 1, scope: !12672)
!12717 = distinct !DISubprogram(name: "bandwidth_dbg", scope: !6239, file: !6239, line: 194, type: !12718, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12718 = !DISubroutineType(types: !12719)
!12719 = !{null, !5814, !401, !417, !6105}
!12720 = !DILocalVariable(name: "ehci", arg: 1, scope: !12717, file: !6239, line: 194, type: !5814)
!12721 = !DILocation(line: 194, column: 44, scope: !12717)
!12722 = !DILocalVariable(name: "sign", arg: 2, scope: !12717, file: !6239, line: 194, type: !401)
!12723 = !DILocation(line: 194, column: 54, scope: !12717)
!12724 = !DILocalVariable(name: "type", arg: 3, scope: !12717, file: !6239, line: 194, type: !417)
!12725 = !DILocation(line: 194, column: 66, scope: !12717)
!12726 = !DILocalVariable(name: "ps", arg: 4, scope: !12717, file: !6239, line: 195, type: !6105)
!12727 = !DILocation(line: 195, column: 26, scope: !12717)
!12728 = !DILocation(line: 204, column: 1, scope: !12717)
!12729 = distinct !DISubprogram(name: "qh_update", scope: !9723, file: !9723, line: 79, type: !12730, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12730 = !DISubroutineType(types: !12731)
!12731 = !{null, !5814, !5884, !5993}
!12732 = !DILocalVariable(name: "ehci", arg: 1, scope: !12729, file: !9723, line: 79, type: !5814)
!12733 = !DILocation(line: 79, column: 29, scope: !12729)
!12734 = !DILocalVariable(name: "qh", arg: 2, scope: !12729, file: !9723, line: 79, type: !5884)
!12735 = !DILocation(line: 79, column: 51, scope: !12729)
!12736 = !DILocalVariable(name: "qtd", arg: 3, scope: !12729, file: !9723, line: 79, type: !5993)
!12737 = !DILocation(line: 79, column: 72, scope: !12729)
!12738 = !DILocalVariable(name: "hw", scope: !12729, file: !9723, line: 81, type: !5888)
!12739 = !DILocation(line: 81, column: 21, scope: !12729)
!12740 = !DILocation(line: 81, column: 26, scope: !12729)
!12741 = !DILocation(line: 81, column: 30, scope: !12729)
!12742 = !DILocalVariable(name: "__ret_warn_on", scope: !12743, file: !9723, line: 84, type: !401)
!12743 = distinct !DILexicalBlock(scope: !12729, file: !9723, line: 84, column: 2)
!12744 = !DILocation(line: 84, column: 2, scope: !12743)
!12745 = !DILocation(line: 84, column: 2, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12743, file: !9723, line: 84, column: 2)
!12747 = !DILocation(line: 84, column: 2, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12746, file: !9723, line: 84, column: 2)
!12749 = !DILocation(line: 84, column: 2, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12748, file: !9723, line: 84, column: 2)
!12751 = !DILocation(line: 84, column: 2, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12748, file: !9723, line: 84, column: 2)
!12753 = !{i32 -2139953757, i32 -2139953728, i32 -2139953682, i32 -2139953624, i32 -2139953570, i32 -2139953516, i32 -2139953461, i32 -2139953430}
!12754 = !DILocation(line: 84, column: 2, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12748, file: !9723, line: 84, column: 2)
!12756 = !{i32 -2139953024, i32 -2139953017, i32 -2139952965, i32 -2139952934, i32 -2139952904}
!12757 = !DILocation(line: 84, column: 2, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12748, file: !9723, line: 84, column: 2)
!12759 = !DILocation(line: 86, column: 20, scope: !12729)
!12760 = !DILocation(line: 86, column: 2, scope: !12729)
!12761 = !DILocation(line: 86, column: 6, scope: !12729)
!12762 = !DILocation(line: 86, column: 18, scope: !12729)
!12763 = !DILocation(line: 87, column: 20, scope: !12729)
!12764 = !DILocation(line: 87, column: 2, scope: !12729)
!12765 = !DILocation(line: 87, column: 6, scope: !12729)
!12766 = !DILocation(line: 87, column: 18, scope: !12729)
!12767 = !DILocation(line: 94, column: 8, scope: !12768)
!12768 = distinct !DILexicalBlock(scope: !12729, file: !9723, line: 94, column: 6)
!12769 = !DILocation(line: 94, column: 12, scope: !12768)
!12770 = !DILocation(line: 94, column: 35, scope: !12768)
!12771 = !DILocation(line: 94, column: 23, scope: !12768)
!12772 = !DILocation(line: 94, column: 21, scope: !12768)
!12773 = !DILocation(line: 94, column: 6, scope: !12729)
!12774 = !DILocalVariable(name: "is_out", scope: !12775, file: !9723, line: 95, type: !7)
!12775 = distinct !DILexicalBlock(scope: !12768, file: !9723, line: 94, column: 58)
!12776 = !DILocation(line: 95, column: 12, scope: !12775)
!12777 = !DILocalVariable(name: "epnum", scope: !12775, file: !9723, line: 95, type: !7)
!12778 = !DILocation(line: 95, column: 20, scope: !12775)
!12779 = !DILocation(line: 97, column: 12, scope: !12775)
!12780 = !DILocation(line: 97, column: 16, scope: !12775)
!12781 = !DILocation(line: 97, column: 10, scope: !12775)
!12782 = !DILocation(line: 98, column: 25, scope: !12775)
!12783 = !DILocation(line: 98, column: 32, scope: !12775)
!12784 = !DILocation(line: 98, column: 36, scope: !12775)
!12785 = !DILocation(line: 98, column: 12, scope: !12775)
!12786 = !DILocation(line: 98, column: 46, scope: !12775)
!12787 = !DILocation(line: 98, column: 52, scope: !12775)
!12788 = !DILocation(line: 98, column: 9, scope: !12775)
!12789 = !DILocation(line: 99, column: 7, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12775, file: !9723, line: 99, column: 7)
!12791 = !DILocation(line: 99, column: 7, scope: !12775)
!12792 = !DILocation(line: 100, column: 33, scope: !12793)
!12793 = distinct !DILexicalBlock(scope: !12790, file: !9723, line: 99, column: 61)
!12794 = !DILocation(line: 100, column: 21, scope: !12793)
!12795 = !DILocation(line: 100, column: 20, scope: !12793)
!12796 = !DILocation(line: 100, column: 4, scope: !12793)
!12797 = !DILocation(line: 100, column: 8, scope: !12793)
!12798 = !DILocation(line: 100, column: 17, scope: !12793)
!12799 = !DILocation(line: 101, column: 4, scope: !12793)
!12800 = !DILocation(line: 102, column: 3, scope: !12793)
!12801 = !DILocation(line: 103, column: 2, scope: !12775)
!12802 = !DILocation(line: 105, column: 30, scope: !12729)
!12803 = !DILocation(line: 105, column: 18, scope: !12729)
!12804 = !DILocation(line: 105, column: 2, scope: !12729)
!12805 = !DILocation(line: 105, column: 6, scope: !12729)
!12806 = !DILocation(line: 105, column: 15, scope: !12729)
!12807 = !DILocation(line: 106, column: 1, scope: !12729)
!12808 = distinct !DISubprogram(name: "hc32_to_cpup", scope: !6, file: !6, line: 850, type: !12809, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12809 = !DISubroutineType(types: !12810)
!12810 = !{!303, !6335, !12811}
!12811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11134, size: 64)
!12812 = !DILocalVariable(name: "p", arg: 1, scope: !12813, file: !12814, line: 56, type: !12811)
!12813 = distinct !DISubprogram(name: "__le32_to_cpup", scope: !12814, file: !12814, line: 56, type: !12815, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12814 = !DIFile(filename: "./include/uapi/linux/byteorder/little_endian.h", directory: "/home/lizy2001/genbc/linux")
!12815 = !DISubroutineType(types: !12816)
!12816 = !{!305, !12811}
!12817 = !DILocation(line: 56, column: 59, scope: !12813, inlinedAt: !12818)
!12818 = distinct !DILocation(line: 852, column: 9, scope: !12808)
!12819 = !DILocalVariable(name: "ehci", arg: 1, scope: !12808, file: !6, line: 850, type: !6335)
!12820 = !DILocation(line: 850, column: 55, scope: !12808)
!12821 = !DILocalVariable(name: "x", arg: 2, scope: !12808, file: !6, line: 850, type: !12811)
!12822 = !DILocation(line: 850, column: 75, scope: !12808)
!12823 = !DILocation(line: 852, column: 22, scope: !12808)
!12824 = !DILocation(line: 58, column: 25, scope: !12813, inlinedAt: !12818)
!12825 = !DILocation(line: 58, column: 24, scope: !12813, inlinedAt: !12818)
!12826 = !DILocation(line: 852, column: 2, scope: !12808)
!12827 = distinct !DISubprogram(name: "periodic_next_shadow", scope: !6239, file: !6239, line: 32, type: !12828, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12828 = !DISubroutineType(types: !12829)
!12829 = !{!6030, !5814, !6030, !5103}
!12830 = !DILocalVariable(name: "ehci", arg: 1, scope: !12827, file: !6239, line: 32, type: !5814)
!12831 = !DILocation(line: 32, column: 39, scope: !12827)
!12832 = !DILocalVariable(name: "periodic", arg: 2, scope: !12827, file: !6239, line: 32, type: !6030)
!12833 = !DILocation(line: 32, column: 64, scope: !12827)
!12834 = !DILocalVariable(name: "tag", arg: 3, scope: !12827, file: !6239, line: 33, type: !5103)
!12835 = !DILocation(line: 33, column: 10, scope: !12827)
!12836 = !DILocation(line: 35, column: 22, scope: !12827)
!12837 = !DILocation(line: 35, column: 28, scope: !12827)
!12838 = !DILocation(line: 35, column: 10, scope: !12827)
!12839 = !DILocation(line: 35, column: 2, scope: !12827)
!12840 = !DILocation(line: 37, column: 11, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12827, file: !6239, line: 35, column: 34)
!12842 = !DILocation(line: 37, column: 21, scope: !12841)
!12843 = !DILocation(line: 37, column: 25, scope: !12841)
!12844 = !DILocation(line: 37, column: 3, scope: !12841)
!12845 = !DILocation(line: 39, column: 11, scope: !12841)
!12846 = !DILocation(line: 39, column: 21, scope: !12841)
!12847 = !DILocation(line: 39, column: 27, scope: !12841)
!12848 = !DILocation(line: 39, column: 3, scope: !12841)
!12849 = !DILocation(line: 41, column: 11, scope: !12841)
!12850 = !DILocation(line: 41, column: 21, scope: !12841)
!12851 = !DILocation(line: 41, column: 26, scope: !12841)
!12852 = !DILocation(line: 41, column: 3, scope: !12841)
!12853 = !DILocation(line: 44, column: 11, scope: !12841)
!12854 = !DILocation(line: 44, column: 21, scope: !12841)
!12855 = !DILocation(line: 44, column: 27, scope: !12841)
!12856 = !DILocation(line: 44, column: 3, scope: !12841)
!12857 = !DILocation(line: 46, column: 1, scope: !12827)
!12858 = distinct !DISubprogram(name: "shadow_next_periodic", scope: !6239, file: !6239, line: 49, type: !12859, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12859 = !DISubroutineType(types: !12860)
!12860 = !{!5988, !5814, !6030, !5103}
!12861 = !DILocalVariable(name: "ehci", arg: 1, scope: !12858, file: !6239, line: 49, type: !5814)
!12862 = !DILocation(line: 49, column: 39, scope: !12858)
!12863 = !DILocalVariable(name: "periodic", arg: 2, scope: !12858, file: !6239, line: 49, type: !6030)
!12864 = !DILocation(line: 49, column: 64, scope: !12858)
!12865 = !DILocalVariable(name: "tag", arg: 3, scope: !12858, file: !6239, line: 50, type: !5103)
!12866 = !DILocation(line: 50, column: 10, scope: !12858)
!12867 = !DILocation(line: 52, column: 22, scope: !12858)
!12868 = !DILocation(line: 52, column: 28, scope: !12858)
!12869 = !DILocation(line: 52, column: 10, scope: !12858)
!12870 = !DILocation(line: 52, column: 2, scope: !12858)
!12871 = !DILocation(line: 55, column: 11, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12858, file: !6239, line: 52, column: 34)
!12873 = !DILocation(line: 55, column: 21, scope: !12872)
!12874 = !DILocation(line: 55, column: 25, scope: !12872)
!12875 = !DILocation(line: 55, column: 29, scope: !12872)
!12876 = !DILocation(line: 55, column: 3, scope: !12872)
!12877 = !DILocation(line: 58, column: 10, scope: !12872)
!12878 = !DILocation(line: 58, column: 20, scope: !12872)
!12879 = !DILocation(line: 58, column: 3, scope: !12872)
!12880 = !DILocation(line: 60, column: 1, scope: !12858)
!12881 = distinct !DISubprogram(name: "list_add", scope: !9075, file: !9075, line: 84, type: !10276, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12882 = !DILocalVariable(name: "new", arg: 1, scope: !12881, file: !9075, line: 84, type: !365)
!12883 = !DILocation(line: 84, column: 47, scope: !12881)
!12884 = !DILocalVariable(name: "head", arg: 2, scope: !12881, file: !9075, line: 84, type: !365)
!12885 = !DILocation(line: 84, column: 70, scope: !12881)
!12886 = !DILocation(line: 86, column: 13, scope: !12881)
!12887 = !DILocation(line: 86, column: 18, scope: !12881)
!12888 = !DILocation(line: 86, column: 24, scope: !12881)
!12889 = !DILocation(line: 86, column: 30, scope: !12881)
!12890 = !DILocation(line: 86, column: 2, scope: !12881)
!12891 = !DILocation(line: 87, column: 1, scope: !12881)
!12892 = distinct !DISubprogram(name: "enable_periodic", scope: !6239, file: !6239, line: 484, type: !6235, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12893 = !DILocalVariable(name: "ehci", arg: 1, scope: !12892, file: !6239, line: 484, type: !5814)
!12894 = !DILocation(line: 484, column: 46, scope: !12892)
!12895 = !DILocation(line: 486, column: 6, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12892, file: !6239, line: 486, column: 6)
!12897 = !DILocation(line: 486, column: 12, scope: !12896)
!12898 = !DILocation(line: 486, column: 26, scope: !12896)
!12899 = !DILocation(line: 486, column: 6, scope: !12892)
!12900 = !DILocation(line: 487, column: 3, scope: !12896)
!12901 = !DILocation(line: 490, column: 2, scope: !12892)
!12902 = !DILocation(line: 490, column: 8, scope: !12892)
!12903 = !DILocation(line: 490, column: 31, scope: !12892)
!12904 = !DILocation(line: 493, column: 16, scope: !12892)
!12905 = !DILocation(line: 493, column: 2, scope: !12892)
!12906 = !DILocation(line: 494, column: 22, scope: !12892)
!12907 = !DILocation(line: 494, column: 2, scope: !12892)
!12908 = !DILocation(line: 495, column: 1, scope: !12892)
!12909 = distinct !DISubprogram(name: "turn_on_io_watchdog", scope: !6232, file: !6232, line: 360, type: !6235, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12910 = !DILocalVariable(name: "ehci", arg: 1, scope: !12909, file: !6232, line: 360, type: !5814)
!12911 = !DILocation(line: 360, column: 50, scope: !12909)
!12912 = !DILocation(line: 363, column: 6, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12909, file: !6232, line: 363, column: 6)
!12914 = !DILocation(line: 363, column: 12, scope: !12913)
!12915 = !DILocation(line: 363, column: 21, scope: !12913)
!12916 = !DILocation(line: 363, column: 40, scope: !12913)
!12917 = !DILocation(line: 364, column: 5, scope: !12913)
!12918 = !DILocation(line: 364, column: 11, scope: !12913)
!12919 = !DILocation(line: 364, column: 34, scope: !12913)
!12920 = !DILocation(line: 363, column: 6, scope: !12909)
!12921 = !DILocation(line: 366, column: 3, scope: !12913)
!12922 = !DILocation(line: 372, column: 6, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12909, file: !6232, line: 372, column: 6)
!12924 = !DILocation(line: 372, column: 12, scope: !12923)
!12925 = !DILocation(line: 372, column: 23, scope: !12923)
!12926 = !DILocation(line: 372, column: 27, scope: !12923)
!12927 = !DILocation(line: 372, column: 31, scope: !12923)
!12928 = !DILocation(line: 372, column: 37, scope: !12923)
!12929 = !DILocation(line: 372, column: 54, scope: !12923)
!12930 = !DILocation(line: 373, column: 4, scope: !12923)
!12931 = !DILocation(line: 373, column: 10, scope: !12923)
!12932 = !DILocation(line: 373, column: 24, scope: !12923)
!12933 = !DILocation(line: 373, column: 30, scope: !12923)
!12934 = !DILocation(line: 373, column: 22, scope: !12923)
!12935 = !DILocation(line: 373, column: 41, scope: !12923)
!12936 = !DILocation(line: 372, column: 6, scope: !12909)
!12937 = !DILocation(line: 374, column: 21, scope: !12923)
!12938 = !DILocation(line: 374, column: 3, scope: !12923)
!12939 = !DILocation(line: 375, column: 1, scope: !12909)
!12940 = distinct !DISubprogram(name: "start_free_itds", scope: !6232, file: !6232, line: 276, type: !6235, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12941 = !DILocalVariable(name: "ehci", arg: 1, scope: !12940, file: !6232, line: 276, type: !5814)
!12942 = !DILocation(line: 276, column: 46, scope: !12940)
!12943 = !DILocation(line: 278, column: 8, scope: !12944)
!12944 = distinct !DILexicalBlock(scope: !12940, file: !6232, line: 278, column: 6)
!12945 = !DILocation(line: 278, column: 14, scope: !12944)
!12946 = !DILocation(line: 278, column: 37, scope: !12944)
!12947 = !DILocation(line: 278, column: 6, scope: !12940)
!12948 = !DILocalVariable(name: "__mptr", scope: !12949, file: !6232, line: 279, type: !341)
!12949 = distinct !DILexicalBlock(scope: !12950, file: !6232, line: 279, column: 28)
!12950 = distinct !DILexicalBlock(scope: !12944, file: !6232, line: 278, column: 69)
!12951 = !DILocation(line: 279, column: 28, scope: !12949)
!12952 = !DILocation(line: 279, column: 28, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12949, file: !6232, line: 279, column: 28)
!12954 = !DILocation(line: 279, column: 3, scope: !12950)
!12955 = !DILocation(line: 279, column: 9, scope: !12950)
!12956 = !DILocation(line: 279, column: 26, scope: !12950)
!12957 = !DILocalVariable(name: "__mptr", scope: !12958, file: !6232, line: 282, type: !341)
!12958 = distinct !DILexicalBlock(scope: !12950, file: !6232, line: 282, column: 29)
!12959 = !DILocation(line: 282, column: 29, scope: !12958)
!12960 = !DILocation(line: 282, column: 29, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12958, file: !6232, line: 282, column: 29)
!12962 = !DILocation(line: 282, column: 3, scope: !12950)
!12963 = !DILocation(line: 282, column: 9, scope: !12950)
!12964 = !DILocation(line: 282, column: 27, scope: !12950)
!12965 = !DILocation(line: 285, column: 21, scope: !12950)
!12966 = !DILocation(line: 285, column: 3, scope: !12950)
!12967 = !DILocation(line: 286, column: 2, scope: !12950)
!12968 = !DILocation(line: 287, column: 1, scope: !12940)
!12969 = distinct !DISubprogram(name: "list_splice_tail_init", scope: !9075, file: !9075, line: 495, type: !10276, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12970 = !DILocalVariable(name: "list", arg: 1, scope: !12969, file: !9075, line: 495, type: !365)
!12971 = !DILocation(line: 495, column: 60, scope: !12969)
!12972 = !DILocalVariable(name: "head", arg: 2, scope: !12969, file: !9075, line: 496, type: !365)
!12973 = !DILocation(line: 496, column: 25, scope: !12969)
!12974 = !DILocation(line: 498, column: 18, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12969, file: !9075, line: 498, column: 6)
!12976 = !DILocation(line: 498, column: 7, scope: !12975)
!12977 = !DILocation(line: 498, column: 6, scope: !12969)
!12978 = !DILocation(line: 499, column: 17, scope: !12979)
!12979 = distinct !DILexicalBlock(scope: !12975, file: !9075, line: 498, column: 25)
!12980 = !DILocation(line: 499, column: 23, scope: !12979)
!12981 = !DILocation(line: 499, column: 29, scope: !12979)
!12982 = !DILocation(line: 499, column: 35, scope: !12979)
!12983 = !DILocation(line: 499, column: 3, scope: !12979)
!12984 = !DILocation(line: 500, column: 18, scope: !12979)
!12985 = !DILocation(line: 500, column: 3, scope: !12979)
!12986 = !DILocation(line: 501, column: 2, scope: !12979)
!12987 = !DILocation(line: 502, column: 1, scope: !12969)
!12988 = distinct !DISubprogram(name: "list_move_tail", scope: !9075, file: !9075, line: 224, type: !10276, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!12989 = !DILocalVariable(name: "list", arg: 1, scope: !12988, file: !9075, line: 224, type: !365)
!12990 = !DILocation(line: 224, column: 53, scope: !12988)
!12991 = !DILocalVariable(name: "head", arg: 2, scope: !12988, file: !9075, line: 225, type: !365)
!12992 = !DILocation(line: 225, column: 25, scope: !12988)
!12993 = !DILocation(line: 227, column: 19, scope: !12988)
!12994 = !DILocation(line: 227, column: 2, scope: !12988)
!12995 = !DILocation(line: 228, column: 16, scope: !12988)
!12996 = !DILocation(line: 228, column: 22, scope: !12988)
!12997 = !DILocation(line: 228, column: 2, scope: !12988)
!12998 = !DILocation(line: 229, column: 1, scope: !12988)
!12999 = distinct !DISubprogram(name: "start_iaa_cycle", scope: !9723, file: !9723, line: 1276, type: !6235, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13000 = !DILocalVariable(name: "ehci", arg: 1, scope: !12999, file: !9723, line: 1276, type: !5814)
!13001 = !DILocation(line: 1276, column: 46, scope: !12999)
!13002 = !DILocation(line: 1279, column: 6, scope: !13003)
!13003 = distinct !DILexicalBlock(scope: !12999, file: !9723, line: 1279, column: 6)
!13004 = !DILocation(line: 1279, column: 6, scope: !12999)
!13005 = !DILocation(line: 1280, column: 20, scope: !13006)
!13006 = distinct !DILexicalBlock(scope: !13003, file: !9723, line: 1279, column: 50)
!13007 = !DILocation(line: 1280, column: 3, scope: !13006)
!13008 = !DILocation(line: 1283, column: 2, scope: !13006)
!13009 = !DILocation(line: 1283, column: 13, scope: !13010)
!13010 = distinct !DILexicalBlock(scope: !13003, file: !9723, line: 1283, column: 13)
!13011 = !DILocation(line: 1283, column: 19, scope: !13010)
!13012 = !DILocation(line: 1283, column: 28, scope: !13010)
!13013 = !DILocation(line: 1283, column: 47, scope: !13010)
!13014 = !DILocation(line: 1284, column: 5, scope: !13010)
!13015 = !DILocation(line: 1284, column: 11, scope: !13010)
!13016 = !DILocation(line: 1283, column: 13, scope: !13003)
!13017 = !DILocation(line: 1287, column: 3, scope: !13018)
!13018 = distinct !DILexicalBlock(scope: !13010, file: !9723, line: 1284, column: 28)
!13019 = !{i32 -2139914478}
!13020 = !DILocation(line: 1289, column: 15, scope: !13018)
!13021 = !DILocation(line: 1289, column: 21, scope: !13018)
!13022 = !DILocation(line: 1289, column: 27, scope: !13018)
!13023 = !DILocation(line: 1289, column: 35, scope: !13018)
!13024 = !DILocation(line: 1290, column: 6, scope: !13018)
!13025 = !DILocation(line: 1290, column: 12, scope: !13018)
!13026 = !DILocation(line: 1290, column: 18, scope: !13018)
!13027 = !DILocation(line: 1289, column: 3, scope: !13018)
!13028 = !DILocation(line: 1291, column: 14, scope: !13018)
!13029 = !DILocation(line: 1291, column: 21, scope: !13018)
!13030 = !DILocation(line: 1291, column: 27, scope: !13018)
!13031 = !DILocation(line: 1291, column: 33, scope: !13018)
!13032 = !DILocation(line: 1291, column: 3, scope: !13018)
!13033 = !DILocation(line: 1292, column: 3, scope: !13018)
!13034 = !DILocation(line: 1292, column: 9, scope: !13018)
!13035 = !DILocation(line: 1292, column: 25, scope: !13018)
!13036 = !DILocation(line: 1293, column: 21, scope: !13018)
!13037 = !DILocation(line: 1293, column: 3, scope: !13018)
!13038 = !DILocation(line: 1294, column: 2, scope: !13018)
!13039 = !DILocation(line: 1295, column: 1, scope: !12999)
!13040 = distinct !DISubprogram(name: "qh_link_async", scope: !9723, file: !9723, line: 981, type: !10193, scopeLine: 982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13041 = !DILocalVariable(name: "ehci", arg: 1, scope: !13040, file: !9723, line: 981, type: !5814)
!13042 = !DILocation(line: 981, column: 45, scope: !13040)
!13043 = !DILocalVariable(name: "qh", arg: 2, scope: !13040, file: !9723, line: 981, type: !5884)
!13044 = !DILocation(line: 981, column: 67, scope: !13040)
!13045 = !DILocalVariable(name: "dma", scope: !13040, file: !9723, line: 983, type: !5103)
!13046 = !DILocation(line: 983, column: 10, scope: !13040)
!13047 = !DILocation(line: 983, column: 16, scope: !13040)
!13048 = !DILocalVariable(name: "head", scope: !13040, file: !9723, line: 984, type: !5884)
!13049 = !DILocation(line: 984, column: 18, scope: !13040)
!13050 = !DILocation(line: 987, column: 6, scope: !13051)
!13051 = distinct !DILexicalBlock(scope: !13040, file: !9723, line: 987, column: 6)
!13052 = !DILocation(line: 987, column: 6, scope: !13040)
!13053 = !DILocation(line: 988, column: 3, scope: !13051)
!13054 = !DILocalVariable(name: "__ret_warn_on", scope: !13055, file: !9723, line: 990, type: !401)
!13055 = distinct !DILexicalBlock(scope: !13040, file: !9723, line: 990, column: 2)
!13056 = !DILocation(line: 990, column: 2, scope: !13055)
!13057 = !DILocation(line: 990, column: 2, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13055, file: !9723, line: 990, column: 2)
!13059 = !DILocation(line: 990, column: 2, scope: !13060)
!13060 = distinct !DILexicalBlock(scope: !13058, file: !9723, line: 990, column: 2)
!13061 = !DILocation(line: 990, column: 2, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13060, file: !9723, line: 990, column: 2)
!13063 = !DILocation(line: 990, column: 2, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !13060, file: !9723, line: 990, column: 2)
!13065 = !{i32 -2139920851, i32 -2139920822, i32 -2139920776, i32 -2139920718, i32 -2139920664, i32 -2139920610, i32 -2139920555, i32 -2139920524}
!13066 = !DILocation(line: 990, column: 2, scope: !13067)
!13067 = distinct !DILexicalBlock(scope: !13060, file: !9723, line: 990, column: 2)
!13068 = !{i32 -2139920117, i32 -2139920110, i32 -2139920058, i32 -2139920027, i32 -2139919997}
!13069 = !DILocation(line: 990, column: 2, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13060, file: !9723, line: 990, column: 2)
!13071 = !DILocation(line: 993, column: 13, scope: !13040)
!13072 = !DILocation(line: 993, column: 19, scope: !13040)
!13073 = !DILocation(line: 993, column: 2, scope: !13040)
!13074 = !DILocation(line: 996, column: 9, scope: !13040)
!13075 = !DILocation(line: 996, column: 15, scope: !13040)
!13076 = !DILocation(line: 996, column: 7, scope: !13040)
!13077 = !DILocation(line: 997, column: 2, scope: !13040)
!13078 = !DILocation(line: 997, column: 6, scope: !13040)
!13079 = !DILocation(line: 997, column: 16, scope: !13040)
!13080 = !DILocation(line: 997, column: 22, scope: !13040)
!13081 = !DILocation(line: 998, column: 20, scope: !13040)
!13082 = !DILocation(line: 998, column: 26, scope: !13040)
!13083 = !DILocation(line: 998, column: 30, scope: !13040)
!13084 = !DILocation(line: 998, column: 2, scope: !13040)
!13085 = !DILocation(line: 998, column: 6, scope: !13040)
!13086 = !DILocation(line: 998, column: 10, scope: !13040)
!13087 = !DILocation(line: 998, column: 18, scope: !13040)
!13088 = !DILocation(line: 999, column: 2, scope: !13040)
!13089 = !{i32 -2139919889}
!13090 = !DILocation(line: 1001, column: 21, scope: !13040)
!13091 = !DILocation(line: 1001, column: 2, scope: !13040)
!13092 = !DILocation(line: 1001, column: 8, scope: !13040)
!13093 = !DILocation(line: 1001, column: 16, scope: !13040)
!13094 = !DILocation(line: 1001, column: 19, scope: !13040)
!13095 = !DILocation(line: 1002, column: 22, scope: !13040)
!13096 = !DILocation(line: 1002, column: 2, scope: !13040)
!13097 = !DILocation(line: 1002, column: 8, scope: !13040)
!13098 = !DILocation(line: 1002, column: 12, scope: !13040)
!13099 = !DILocation(line: 1002, column: 20, scope: !13040)
!13100 = !DILocation(line: 1004, column: 2, scope: !13040)
!13101 = !DILocation(line: 1004, column: 6, scope: !13040)
!13102 = !DILocation(line: 1004, column: 15, scope: !13040)
!13103 = !DILocation(line: 1005, column: 2, scope: !13040)
!13104 = !DILocation(line: 1005, column: 6, scope: !13040)
!13105 = !DILocation(line: 1005, column: 15, scope: !13040)
!13106 = !DILocation(line: 1006, column: 2, scope: !13040)
!13107 = !DILocation(line: 1006, column: 6, scope: !13040)
!13108 = !DILocation(line: 1006, column: 20, scope: !13040)
!13109 = !DILocation(line: 1009, column: 15, scope: !13040)
!13110 = !DILocation(line: 1009, column: 2, scope: !13040)
!13111 = !DILocation(line: 1010, column: 1, scope: !13040)
!13112 = distinct !DISubprogram(name: "disable_async", scope: !9723, file: !9723, line: 966, type: !6235, scopeLine: 967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13113 = !DILocalVariable(name: "ehci", arg: 1, scope: !13112, file: !9723, line: 966, type: !5814)
!13114 = !DILocation(line: 966, column: 44, scope: !13112)
!13115 = !DILocation(line: 968, column: 8, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13112, file: !9723, line: 968, column: 6)
!13117 = !DILocation(line: 968, column: 14, scope: !13116)
!13118 = !DILocation(line: 968, column: 6, scope: !13116)
!13119 = !DILocation(line: 968, column: 6, scope: !13112)
!13120 = !DILocation(line: 969, column: 3, scope: !13116)
!13121 = !DILocalVariable(name: "__ret_warn_on", scope: !13122, file: !9723, line: 972, type: !401)
!13122 = distinct !DILexicalBlock(scope: !13112, file: !9723, line: 972, column: 2)
!13123 = !DILocation(line: 972, column: 2, scope: !13122)
!13124 = !DILocation(line: 972, column: 2, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !13122, file: !9723, line: 972, column: 2)
!13126 = !DILocation(line: 972, column: 2, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13125, file: !9723, line: 972, column: 2)
!13128 = !DILocation(line: 972, column: 2, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13127, file: !9723, line: 972, column: 2)
!13130 = !DILocation(line: 972, column: 2, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13127, file: !9723, line: 972, column: 2)
!13132 = !{i32 -2139922427, i32 -2139922398, i32 -2139922352, i32 -2139922294, i32 -2139922240, i32 -2139922186, i32 -2139922131, i32 -2139922100}
!13133 = !DILocation(line: 972, column: 2, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13127, file: !9723, line: 972, column: 2)
!13135 = !{i32 -2139921693, i32 -2139921686, i32 -2139921634, i32 -2139921603, i32 -2139921573}
!13136 = !DILocation(line: 972, column: 2, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13127, file: !9723, line: 972, column: 2)
!13138 = !DILocation(line: 976, column: 16, scope: !13112)
!13139 = !DILocation(line: 976, column: 2, scope: !13112)
!13140 = !DILocation(line: 977, column: 1, scope: !13112)
!13141 = distinct !DISubprogram(name: "__list_splice", scope: !9075, file: !9075, line: 433, type: !13142, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13142 = !DISubroutineType(types: !13143)
!13143 = !{null, !10173, !365, !365}
!13144 = !DILocalVariable(name: "list", arg: 1, scope: !13141, file: !9075, line: 433, type: !10173)
!13145 = !DILocation(line: 433, column: 58, scope: !13141)
!13146 = !DILocalVariable(name: "prev", arg: 2, scope: !13141, file: !9075, line: 434, type: !365)
!13147 = !DILocation(line: 434, column: 24, scope: !13141)
!13148 = !DILocalVariable(name: "next", arg: 3, scope: !13141, file: !9075, line: 435, type: !365)
!13149 = !DILocation(line: 435, column: 24, scope: !13141)
!13150 = !DILocalVariable(name: "first", scope: !13141, file: !9075, line: 437, type: !365)
!13151 = !DILocation(line: 437, column: 20, scope: !13141)
!13152 = !DILocation(line: 437, column: 28, scope: !13141)
!13153 = !DILocation(line: 437, column: 34, scope: !13141)
!13154 = !DILocalVariable(name: "last", scope: !13141, file: !9075, line: 438, type: !365)
!13155 = !DILocation(line: 438, column: 20, scope: !13141)
!13156 = !DILocation(line: 438, column: 27, scope: !13141)
!13157 = !DILocation(line: 438, column: 33, scope: !13141)
!13158 = !DILocation(line: 440, column: 16, scope: !13141)
!13159 = !DILocation(line: 440, column: 2, scope: !13141)
!13160 = !DILocation(line: 440, column: 9, scope: !13141)
!13161 = !DILocation(line: 440, column: 14, scope: !13141)
!13162 = !DILocation(line: 441, column: 15, scope: !13141)
!13163 = !DILocation(line: 441, column: 2, scope: !13141)
!13164 = !DILocation(line: 441, column: 8, scope: !13141)
!13165 = !DILocation(line: 441, column: 13, scope: !13141)
!13166 = !DILocation(line: 443, column: 15, scope: !13141)
!13167 = !DILocation(line: 443, column: 2, scope: !13141)
!13168 = !DILocation(line: 443, column: 8, scope: !13141)
!13169 = !DILocation(line: 443, column: 13, scope: !13141)
!13170 = !DILocation(line: 444, column: 15, scope: !13141)
!13171 = !DILocation(line: 444, column: 2, scope: !13141)
!13172 = !DILocation(line: 444, column: 8, scope: !13141)
!13173 = !DILocation(line: 444, column: 13, scope: !13141)
!13174 = !DILocation(line: 445, column: 1, scope: !13141)
!13175 = distinct !DISubprogram(name: "enable_async", scope: !9723, file: !9723, line: 953, type: !6235, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13176 = !DILocalVariable(name: "ehci", arg: 1, scope: !13175, file: !9723, line: 953, type: !5814)
!13177 = !DILocation(line: 953, column: 43, scope: !13175)
!13178 = !DILocation(line: 955, column: 6, scope: !13179)
!13179 = distinct !DILexicalBlock(scope: !13175, file: !9723, line: 955, column: 6)
!13180 = !DILocation(line: 955, column: 12, scope: !13179)
!13181 = !DILocation(line: 955, column: 23, scope: !13179)
!13182 = !DILocation(line: 955, column: 6, scope: !13175)
!13183 = !DILocation(line: 956, column: 3, scope: !13179)
!13184 = !DILocation(line: 959, column: 2, scope: !13175)
!13185 = !DILocation(line: 959, column: 8, scope: !13175)
!13186 = !DILocation(line: 959, column: 31, scope: !13175)
!13187 = !DILocation(line: 962, column: 16, scope: !13175)
!13188 = !DILocation(line: 962, column: 2, scope: !13175)
!13189 = !DILocation(line: 963, column: 22, scope: !13175)
!13190 = !DILocation(line: 963, column: 2, scope: !13175)
!13191 = !DILocation(line: 964, column: 1, scope: !13175)
!13192 = distinct !DISubprogram(name: "start_unlink_intr", scope: !6239, file: !6239, line: 642, type: !10193, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13193 = !DILocalVariable(name: "ehci", arg: 1, scope: !13192, file: !6239, line: 642, type: !5814)
!13194 = !DILocation(line: 642, column: 48, scope: !13192)
!13195 = !DILocalVariable(name: "qh", arg: 2, scope: !13192, file: !6239, line: 642, type: !5884)
!13196 = !DILocation(line: 642, column: 70, scope: !13192)
!13197 = !DILocation(line: 645, column: 6, scope: !13198)
!13198 = distinct !DILexicalBlock(scope: !13192, file: !6239, line: 645, column: 6)
!13199 = !DILocation(line: 645, column: 10, scope: !13198)
!13200 = !DILocation(line: 645, column: 19, scope: !13198)
!13201 = !DILocation(line: 645, column: 6, scope: !13192)
!13202 = !DILocation(line: 646, column: 3, scope: !13198)
!13203 = !DILocation(line: 649, column: 26, scope: !13192)
!13204 = !DILocation(line: 649, column: 32, scope: !13192)
!13205 = !DILocation(line: 649, column: 2, scope: !13192)
!13206 = !DILocation(line: 651, column: 21, scope: !13192)
!13207 = !DILocation(line: 651, column: 27, scope: !13192)
!13208 = !DILocation(line: 651, column: 2, scope: !13192)
!13209 = !DILocation(line: 654, column: 2, scope: !13192)
!13210 = !{i32 -2139836026}
!13211 = !DILocation(line: 661, column: 21, scope: !13192)
!13212 = !DILocation(line: 661, column: 27, scope: !13192)
!13213 = !DILocation(line: 661, column: 2, scope: !13192)
!13214 = !DILocation(line: 661, column: 6, scope: !13192)
!13215 = !DILocation(line: 661, column: 19, scope: !13192)
!13216 = !DILocation(line: 664, column: 17, scope: !13192)
!13217 = !DILocation(line: 664, column: 21, scope: !13192)
!13218 = !DILocation(line: 664, column: 35, scope: !13192)
!13219 = !DILocation(line: 664, column: 41, scope: !13192)
!13220 = !DILocation(line: 664, column: 2, scope: !13192)
!13221 = !DILocation(line: 666, column: 6, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13192, file: !6239, line: 666, column: 6)
!13223 = !DILocation(line: 666, column: 12, scope: !13222)
!13224 = !DILocation(line: 666, column: 6, scope: !13192)
!13225 = !DILocation(line: 668, column: 11, scope: !13226)
!13226 = distinct !DILexicalBlock(scope: !13222, file: !6239, line: 668, column: 11)
!13227 = !DILocation(line: 668, column: 17, scope: !13226)
!13228 = !DILocation(line: 668, column: 26, scope: !13226)
!13229 = !DILocation(line: 668, column: 11, scope: !13222)
!13230 = !DILocation(line: 669, column: 28, scope: !13226)
!13231 = !DILocation(line: 669, column: 3, scope: !13226)
!13232 = !DILocation(line: 670, column: 11, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13226, file: !6239, line: 670, column: 11)
!13234 = !DILocation(line: 670, column: 17, scope: !13233)
!13235 = !DILocation(line: 670, column: 29, scope: !13233)
!13236 = !DILocation(line: 670, column: 38, scope: !13233)
!13237 = !DILocation(line: 670, column: 42, scope: !13233)
!13238 = !DILocation(line: 670, column: 34, scope: !13233)
!13239 = !DILocation(line: 670, column: 11, scope: !13226)
!13240 = !DILocation(line: 671, column: 21, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13233, file: !6239, line: 670, column: 55)
!13242 = !DILocation(line: 671, column: 3, scope: !13241)
!13243 = !DILocation(line: 672, column: 5, scope: !13241)
!13244 = !DILocation(line: 672, column: 11, scope: !13241)
!13245 = !DILocation(line: 672, column: 3, scope: !13241)
!13246 = !DILocation(line: 673, column: 2, scope: !13241)
!13247 = !DILocation(line: 674, column: 1, scope: !13192)
!13248 = distinct !DISubprogram(name: "cancel_unlink_wait_intr", scope: !6239, file: !6239, line: 628, type: !10193, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13249 = !DILocalVariable(name: "ehci", arg: 1, scope: !13248, file: !6239, line: 628, type: !5814)
!13250 = !DILocation(line: 628, column: 54, scope: !13248)
!13251 = !DILocalVariable(name: "qh", arg: 2, scope: !13248, file: !6239, line: 628, type: !5884)
!13252 = !DILocation(line: 628, column: 76, scope: !13248)
!13253 = !DILocation(line: 630, column: 6, scope: !13254)
!13254 = distinct !DILexicalBlock(scope: !13248, file: !6239, line: 630, column: 6)
!13255 = !DILocation(line: 630, column: 10, scope: !13254)
!13256 = !DILocation(line: 630, column: 19, scope: !13254)
!13257 = !DILocation(line: 630, column: 38, scope: !13254)
!13258 = !DILocation(line: 631, column: 16, scope: !13254)
!13259 = !DILocation(line: 631, column: 20, scope: !13254)
!13260 = !DILocation(line: 631, column: 4, scope: !13254)
!13261 = !DILocation(line: 630, column: 6, scope: !13248)
!13262 = !DILocation(line: 632, column: 3, scope: !13254)
!13263 = !DILocation(line: 634, column: 17, scope: !13248)
!13264 = !DILocation(line: 634, column: 21, scope: !13248)
!13265 = !DILocation(line: 634, column: 2, scope: !13248)
!13266 = !DILocation(line: 640, column: 1, scope: !13248)
!13267 = distinct !DISubprogram(name: "qh_unlink_periodic", scope: !6239, file: !6239, line: 581, type: !10193, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13268 = !DILocalVariable(name: "ehci", arg: 1, scope: !13267, file: !6239, line: 581, type: !5814)
!13269 = !DILocation(line: 581, column: 49, scope: !13267)
!13270 = !DILocalVariable(name: "qh", arg: 2, scope: !13267, file: !6239, line: 581, type: !5884)
!13271 = !DILocation(line: 581, column: 71, scope: !13267)
!13272 = !DILocalVariable(name: "i", scope: !13267, file: !6239, line: 583, type: !7)
!13273 = !DILocation(line: 583, column: 11, scope: !13267)
!13274 = !DILocalVariable(name: "period", scope: !13267, file: !6239, line: 584, type: !7)
!13275 = !DILocation(line: 584, column: 11, scope: !13267)
!13276 = !DILocation(line: 602, column: 11, scope: !13267)
!13277 = !DILocation(line: 602, column: 15, scope: !13267)
!13278 = !DILocation(line: 602, column: 18, scope: !13267)
!13279 = !DILocation(line: 602, column: 9, scope: !13267)
!13280 = !DILocation(line: 604, column: 11, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13267, file: !6239, line: 604, column: 2)
!13282 = !DILocation(line: 604, column: 15, scope: !13281)
!13283 = !DILocation(line: 604, column: 18, scope: !13281)
!13284 = !DILocation(line: 604, column: 9, scope: !13281)
!13285 = !DILocation(line: 604, column: 7, scope: !13281)
!13286 = !DILocation(line: 604, column: 25, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !13281, file: !6239, line: 604, column: 2)
!13288 = !DILocation(line: 604, column: 29, scope: !13287)
!13289 = !DILocation(line: 604, column: 35, scope: !13287)
!13290 = !DILocation(line: 604, column: 27, scope: !13287)
!13291 = !DILocation(line: 604, column: 2, scope: !13281)
!13292 = !DILocation(line: 605, column: 19, scope: !13287)
!13293 = !DILocation(line: 605, column: 25, scope: !13287)
!13294 = !DILocation(line: 605, column: 28, scope: !13287)
!13295 = !DILocation(line: 605, column: 3, scope: !13287)
!13296 = !DILocation(line: 604, column: 55, scope: !13287)
!13297 = !DILocation(line: 604, column: 52, scope: !13287)
!13298 = !DILocation(line: 604, column: 2, scope: !13287)
!13299 = distinct !{!13299, !13291, !13300}
!13300 = !DILocation(line: 605, column: 30, scope: !13281)
!13301 = !DILocation(line: 608, column: 49, scope: !13267)
!13302 = !DILocation(line: 608, column: 53, scope: !13267)
!13303 = !DILocation(line: 608, column: 56, scope: !13267)
!13304 = !DILocation(line: 609, column: 7, scope: !13267)
!13305 = !DILocation(line: 609, column: 11, scope: !13267)
!13306 = !DILocation(line: 609, column: 14, scope: !13267)
!13307 = !DILocation(line: 609, column: 22, scope: !13267)
!13308 = !DILocation(line: 609, column: 26, scope: !13267)
!13309 = !DILocation(line: 609, column: 29, scope: !13267)
!13310 = !DILocation(line: 609, column: 20, scope: !13267)
!13311 = !DILocation(line: 609, column: 40, scope: !13267)
!13312 = !DILocation(line: 609, column: 44, scope: !13267)
!13313 = !DILocation(line: 609, column: 47, scope: !13267)
!13314 = !DILocation(line: 609, column: 38, scope: !13267)
!13315 = !DILocation(line: 610, column: 6, scope: !13267)
!13316 = !DILocation(line: 610, column: 10, scope: !13267)
!13317 = !DILocation(line: 610, column: 13, scope: !13267)
!13318 = !DILocation(line: 610, column: 19, scope: !13267)
!13319 = !DILocation(line: 608, column: 14, scope: !13267)
!13320 = !DILocation(line: 608, column: 2, scope: !13267)
!13321 = !DILocation(line: 608, column: 21, scope: !13267)
!13322 = !DILocation(line: 608, column: 26, scope: !13267)
!13323 = !DILocation(line: 608, column: 46, scope: !13267)
!13324 = !DILocation(line: 619, column: 2, scope: !13267)
!13325 = !DILocation(line: 619, column: 6, scope: !13267)
!13326 = !DILocation(line: 619, column: 15, scope: !13267)
!13327 = !DILocation(line: 620, column: 2, scope: !13267)
!13328 = !DILocation(line: 620, column: 6, scope: !13267)
!13329 = !DILocation(line: 620, column: 14, scope: !13267)
!13330 = !DILocation(line: 620, column: 18, scope: !13267)
!13331 = !DILocation(line: 622, column: 6, scope: !13332)
!13332 = distinct !DILexicalBlock(scope: !13267, file: !6239, line: 622, column: 6)
!13333 = !DILocation(line: 622, column: 12, scope: !13332)
!13334 = !DILocation(line: 622, column: 28, scope: !13332)
!13335 = !DILocation(line: 622, column: 25, scope: !13332)
!13336 = !DILocation(line: 622, column: 6, scope: !13267)
!13337 = !DILocalVariable(name: "__mptr", scope: !13338, file: !6239, line: 623, type: !341)
!13338 = distinct !DILexicalBlock(scope: !13332, file: !6239, line: 623, column: 24)
!13339 = !DILocation(line: 623, column: 24, scope: !13338)
!13340 = !DILocation(line: 623, column: 24, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13338, file: !6239, line: 623, column: 24)
!13342 = !DILocation(line: 623, column: 3, scope: !13332)
!13343 = !DILocation(line: 623, column: 9, scope: !13332)
!13344 = !DILocation(line: 623, column: 22, scope: !13332)
!13345 = !DILocation(line: 625, column: 12, scope: !13267)
!13346 = !DILocation(line: 625, column: 16, scope: !13267)
!13347 = !DILocation(line: 625, column: 2, scope: !13267)
!13348 = !DILocation(line: 626, column: 1, scope: !13267)
!13349 = distinct !DISubprogram(name: "periodic_unlink", scope: !6239, file: !6239, line: 63, type: !13350, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13350 = !DISubroutineType(types: !13351)
!13351 = !{null, !5814, !7, !341}
!13352 = !DILocalVariable(name: "ehci", arg: 1, scope: !13349, file: !6239, line: 63, type: !5814)
!13353 = !DILocation(line: 63, column: 46, scope: !13349)
!13354 = !DILocalVariable(name: "frame", arg: 2, scope: !13349, file: !6239, line: 63, type: !7)
!13355 = !DILocation(line: 63, column: 61, scope: !13349)
!13356 = !DILocalVariable(name: "ptr", arg: 3, scope: !13349, file: !6239, line: 63, type: !341)
!13357 = !DILocation(line: 63, column: 74, scope: !13349)
!13358 = !DILocalVariable(name: "prev_p", scope: !13349, file: !6239, line: 65, type: !6030)
!13359 = !DILocation(line: 65, column: 21, scope: !13349)
!13360 = !DILocation(line: 65, column: 31, scope: !13349)
!13361 = !DILocation(line: 65, column: 37, scope: !13349)
!13362 = !DILocation(line: 65, column: 45, scope: !13349)
!13363 = !DILocalVariable(name: "hw_p", scope: !13349, file: !6239, line: 66, type: !5988)
!13364 = !DILocation(line: 66, column: 12, scope: !13349)
!13365 = !DILocation(line: 66, column: 20, scope: !13349)
!13366 = !DILocation(line: 66, column: 26, scope: !13349)
!13367 = !DILocation(line: 66, column: 35, scope: !13349)
!13368 = !DILocalVariable(name: "here", scope: !13349, file: !6239, line: 67, type: !5903)
!13369 = !DILocation(line: 67, column: 20, scope: !13349)
!13370 = !DILocation(line: 67, column: 28, scope: !13349)
!13371 = !DILocation(line: 67, column: 27, scope: !13349)
!13372 = !DILocation(line: 70, column: 2, scope: !13349)
!13373 = !DILocation(line: 70, column: 14, scope: !13349)
!13374 = !DILocation(line: 70, column: 9, scope: !13349)
!13375 = !DILocation(line: 70, column: 18, scope: !13349)
!13376 = !DILocation(line: 70, column: 26, scope: !13349)
!13377 = !DILocation(line: 70, column: 33, scope: !13349)
!13378 = !DILocation(line: 70, column: 30, scope: !13349)
!13379 = !DILocation(line: 0, scope: !13349)
!13380 = !DILocation(line: 71, column: 33, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13349, file: !6239, line: 70, column: 38)
!13382 = !DILocation(line: 71, column: 39, scope: !13381)
!13383 = !DILocation(line: 72, column: 5, scope: !13381)
!13384 = !DILocation(line: 71, column: 12, scope: !13381)
!13385 = !DILocation(line: 71, column: 10, scope: !13381)
!13386 = !DILocation(line: 73, column: 31, scope: !13381)
!13387 = !DILocation(line: 74, column: 5, scope: !13381)
!13388 = !DILocation(line: 73, column: 10, scope: !13381)
!13389 = !DILocation(line: 73, column: 8, scope: !13381)
!13390 = !DILocation(line: 75, column: 11, scope: !13381)
!13391 = !DILocation(line: 75, column: 10, scope: !13381)
!13392 = distinct !{!13392, !13372, !13393}
!13393 = !DILocation(line: 76, column: 2, scope: !13349)
!13394 = !DILocation(line: 78, column: 12, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13349, file: !6239, line: 78, column: 6)
!13396 = !DILocation(line: 78, column: 7, scope: !13395)
!13397 = !DILocation(line: 78, column: 6, scope: !13349)
!13398 = !DILocation(line: 79, column: 3, scope: !13395)
!13399 = !DILocation(line: 84, column: 3, scope: !13349)
!13400 = !DILocation(line: 84, column: 34, scope: !13349)
!13401 = !DILocation(line: 85, column: 4, scope: !13349)
!13402 = !DILocation(line: 84, column: 13, scope: !13349)
!13403 = !DILocation(line: 84, column: 12, scope: !13349)
!13404 = !DILocation(line: 87, column: 7, scope: !13405)
!13405 = distinct !DILexicalBlock(scope: !13349, file: !6239, line: 87, column: 6)
!13406 = !DILocation(line: 87, column: 13, scope: !13405)
!13407 = !DILocation(line: 87, column: 26, scope: !13405)
!13408 = !DILocation(line: 88, column: 28, scope: !13405)
!13409 = !DILocation(line: 88, column: 41, scope: !13405)
!13410 = !DILocation(line: 88, column: 7, scope: !13405)
!13411 = !DILocation(line: 88, column: 6, scope: !13405)
!13412 = !DILocation(line: 89, column: 7, scope: !13405)
!13413 = !DILocation(line: 89, column: 4, scope: !13405)
!13414 = !DILocation(line: 87, column: 6, scope: !13349)
!13415 = !DILocation(line: 90, column: 33, scope: !13405)
!13416 = !DILocation(line: 91, column: 5, scope: !13405)
!13417 = !DILocation(line: 90, column: 12, scope: !13405)
!13418 = !DILocation(line: 90, column: 11, scope: !13405)
!13419 = !DILocation(line: 90, column: 4, scope: !13405)
!13420 = !DILocation(line: 90, column: 9, scope: !13405)
!13421 = !DILocation(line: 90, column: 3, scope: !13405)
!13422 = !DILocation(line: 93, column: 23, scope: !13405)
!13423 = !DILocation(line: 93, column: 29, scope: !13405)
!13424 = !DILocation(line: 93, column: 35, scope: !13405)
!13425 = !DILocation(line: 93, column: 42, scope: !13405)
!13426 = !DILocation(line: 93, column: 11, scope: !13405)
!13427 = !DILocation(line: 93, column: 4, scope: !13405)
!13428 = !DILocation(line: 93, column: 9, scope: !13405)
!13429 = !DILocation(line: 94, column: 1, scope: !13349)
!13430 = distinct !DISubprogram(name: "start_unlink_async", scope: !9723, file: !9723, line: 1473, type: !10193, scopeLine: 1474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13431 = !DILocalVariable(name: "ehci", arg: 1, scope: !13430, file: !9723, line: 1473, type: !5814)
!13432 = !DILocation(line: 1473, column: 49, scope: !13430)
!13433 = !DILocalVariable(name: "qh", arg: 2, scope: !13430, file: !9723, line: 1473, type: !5884)
!13434 = !DILocation(line: 1473, column: 71, scope: !13430)
!13435 = !DILocation(line: 1476, column: 6, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13430, file: !9723, line: 1476, column: 6)
!13437 = !DILocation(line: 1476, column: 10, scope: !13436)
!13438 = !DILocation(line: 1476, column: 19, scope: !13436)
!13439 = !DILocation(line: 1476, column: 6, scope: !13430)
!13440 = !DILocation(line: 1477, column: 3, scope: !13436)
!13441 = !DILocation(line: 1479, column: 22, scope: !13430)
!13442 = !DILocation(line: 1479, column: 28, scope: !13430)
!13443 = !DILocation(line: 1479, column: 2, scope: !13430)
!13444 = !DILocation(line: 1480, column: 18, scope: !13430)
!13445 = !DILocation(line: 1480, column: 2, scope: !13430)
!13446 = !DILocation(line: 1481, column: 1, scope: !13430)
!13447 = distinct !DISubprogram(name: "single_unlink_async", scope: !9723, file: !9723, line: 1257, type: !10193, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13448 = !DILocalVariable(name: "ehci", arg: 1, scope: !13447, file: !9723, line: 1257, type: !5814)
!13449 = !DILocation(line: 1257, column: 50, scope: !13447)
!13450 = !DILocalVariable(name: "qh", arg: 2, scope: !13447, file: !9723, line: 1257, type: !5884)
!13451 = !DILocation(line: 1257, column: 72, scope: !13447)
!13452 = !DILocalVariable(name: "prev", scope: !13447, file: !9723, line: 1259, type: !5884)
!13453 = !DILocation(line: 1259, column: 19, scope: !13447)
!13454 = !DILocation(line: 1262, column: 2, scope: !13447)
!13455 = !DILocation(line: 1262, column: 6, scope: !13447)
!13456 = !DILocation(line: 1262, column: 15, scope: !13447)
!13457 = !DILocation(line: 1263, column: 17, scope: !13447)
!13458 = !DILocation(line: 1263, column: 21, scope: !13447)
!13459 = !DILocation(line: 1263, column: 35, scope: !13447)
!13460 = !DILocation(line: 1263, column: 41, scope: !13447)
!13461 = !DILocation(line: 1263, column: 2, scope: !13447)
!13462 = !DILocation(line: 1266, column: 9, scope: !13447)
!13463 = !DILocation(line: 1266, column: 15, scope: !13447)
!13464 = !DILocation(line: 1266, column: 7, scope: !13447)
!13465 = !DILocation(line: 1267, column: 2, scope: !13447)
!13466 = !DILocation(line: 1267, column: 9, scope: !13447)
!13467 = !DILocation(line: 1267, column: 15, scope: !13447)
!13468 = !DILocation(line: 1267, column: 23, scope: !13447)
!13469 = !DILocation(line: 1267, column: 29, scope: !13447)
!13470 = !DILocation(line: 1267, column: 26, scope: !13447)
!13471 = !DILocation(line: 1268, column: 10, scope: !13447)
!13472 = !DILocation(line: 1268, column: 16, scope: !13447)
!13473 = !DILocation(line: 1268, column: 24, scope: !13447)
!13474 = !DILocation(line: 1268, column: 8, scope: !13447)
!13475 = distinct !{!13475, !13465, !13473}
!13476 = !DILocation(line: 1270, column: 22, scope: !13447)
!13477 = !DILocation(line: 1270, column: 26, scope: !13447)
!13478 = !DILocation(line: 1270, column: 30, scope: !13447)
!13479 = !DILocation(line: 1270, column: 2, scope: !13447)
!13480 = !DILocation(line: 1270, column: 8, scope: !13447)
!13481 = !DILocation(line: 1270, column: 12, scope: !13447)
!13482 = !DILocation(line: 1270, column: 20, scope: !13447)
!13483 = !DILocation(line: 1271, column: 2, scope: !13447)
!13484 = !DILocation(line: 1271, column: 8, scope: !13447)
!13485 = !DILocation(line: 1271, column: 18, scope: !13447)
!13486 = !DILocation(line: 1271, column: 22, scope: !13447)
!13487 = !DILocation(line: 1272, column: 6, scope: !13488)
!13488 = distinct !DILexicalBlock(scope: !13447, file: !9723, line: 1272, column: 6)
!13489 = !DILocation(line: 1272, column: 12, scope: !13488)
!13490 = !DILocation(line: 1272, column: 28, scope: !13488)
!13491 = !DILocation(line: 1272, column: 25, scope: !13488)
!13492 = !DILocation(line: 1272, column: 6, scope: !13447)
!13493 = !DILocation(line: 1273, column: 24, scope: !13488)
!13494 = !DILocation(line: 1273, column: 28, scope: !13488)
!13495 = !DILocation(line: 1273, column: 36, scope: !13488)
!13496 = !DILocation(line: 1273, column: 3, scope: !13488)
!13497 = !DILocation(line: 1273, column: 9, scope: !13488)
!13498 = !DILocation(line: 1273, column: 22, scope: !13488)
!13499 = !DILocation(line: 1274, column: 1, scope: !13447)
!13500 = distinct !DISubprogram(name: "end_iaa_cycle", scope: !9723, file: !9723, line: 1297, type: !6235, scopeLine: 1298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13501 = !DILocalVariable(name: "ehci", arg: 1, scope: !13500, file: !9723, line: 1297, type: !5814)
!13502 = !DILocation(line: 1297, column: 44, scope: !13500)
!13503 = !DILocation(line: 1299, column: 6, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13500, file: !9723, line: 1299, column: 6)
!13505 = !DILocation(line: 1299, column: 12, scope: !13504)
!13506 = !DILocation(line: 1299, column: 6, scope: !13500)
!13507 = !DILocation(line: 1300, column: 15, scope: !13504)
!13508 = !DILocation(line: 1300, column: 27, scope: !13504)
!13509 = !DILocation(line: 1300, column: 33, scope: !13504)
!13510 = !DILocation(line: 1300, column: 40, scope: !13504)
!13511 = !DILocation(line: 1300, column: 21, scope: !13504)
!13512 = !DILocation(line: 1301, column: 9, scope: !13504)
!13513 = !DILocation(line: 1301, column: 15, scope: !13504)
!13514 = !DILocation(line: 1301, column: 21, scope: !13504)
!13515 = !DILocation(line: 1300, column: 3, scope: !13504)
!13516 = !DILocation(line: 1304, column: 2, scope: !13500)
!13517 = !DILocation(line: 1304, column: 8, scope: !13500)
!13518 = !DILocation(line: 1304, column: 24, scope: !13500)
!13519 = !DILocation(line: 1306, column: 19, scope: !13500)
!13520 = !DILocation(line: 1306, column: 2, scope: !13500)
!13521 = !DILocation(line: 1307, column: 1, scope: !13500)
!13522 = distinct !DISubprogram(name: "ehci_clear_command_bit", scope: !6232, file: !6232, line: 21, type: !10147, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13523 = !DILocalVariable(name: "ehci", arg: 1, scope: !13522, file: !6232, line: 21, type: !5814)
!13524 = !DILocation(line: 21, column: 53, scope: !13522)
!13525 = !DILocalVariable(name: "bit", arg: 2, scope: !13522, file: !6232, line: 21, type: !303)
!13526 = !DILocation(line: 21, column: 63, scope: !13522)
!13527 = !DILocation(line: 23, column: 20, scope: !13522)
!13528 = !DILocation(line: 23, column: 19, scope: !13522)
!13529 = !DILocation(line: 23, column: 2, scope: !13522)
!13530 = !DILocation(line: 23, column: 8, scope: !13522)
!13531 = !DILocation(line: 23, column: 16, scope: !13522)
!13532 = !DILocation(line: 24, column: 14, scope: !13522)
!13533 = !DILocation(line: 24, column: 20, scope: !13522)
!13534 = !DILocation(line: 24, column: 26, scope: !13522)
!13535 = !DILocation(line: 24, column: 36, scope: !13522)
!13536 = !DILocation(line: 24, column: 42, scope: !13522)
!13537 = !DILocation(line: 24, column: 48, scope: !13522)
!13538 = !DILocation(line: 24, column: 2, scope: !13522)
!13539 = !DILocation(line: 27, column: 13, scope: !13522)
!13540 = !DILocation(line: 27, column: 20, scope: !13522)
!13541 = !DILocation(line: 27, column: 26, scope: !13522)
!13542 = !DILocation(line: 27, column: 32, scope: !13522)
!13543 = !DILocation(line: 27, column: 2, scope: !13522)
!13544 = !DILocation(line: 28, column: 1, scope: !13522)
!13545 = distinct !DISubprogram(name: "scan_async", scope: !9723, file: !9723, line: 1485, type: !6235, scopeLine: 1486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13546 = !DILocalVariable(name: "ehci", arg: 1, scope: !13545, file: !9723, line: 1485, type: !5814)
!13547 = !DILocation(line: 1485, column: 42, scope: !13545)
!13548 = !DILocalVariable(name: "qh", scope: !13545, file: !9723, line: 1487, type: !5884)
!13549 = !DILocation(line: 1487, column: 19, scope: !13545)
!13550 = !DILocalVariable(name: "check_unlinks_later", scope: !13545, file: !9723, line: 1488, type: !626)
!13551 = !DILocation(line: 1488, column: 9, scope: !13545)
!13552 = !DILocation(line: 1490, column: 23, scope: !13545)
!13553 = !DILocation(line: 1490, column: 29, scope: !13545)
!13554 = !DILocation(line: 1490, column: 36, scope: !13545)
!13555 = !DILocation(line: 1490, column: 44, scope: !13545)
!13556 = !DILocation(line: 1490, column: 2, scope: !13545)
!13557 = !DILocation(line: 1490, column: 8, scope: !13545)
!13558 = !DILocation(line: 1490, column: 21, scope: !13545)
!13559 = !DILocation(line: 1491, column: 2, scope: !13545)
!13560 = !DILocation(line: 1491, column: 9, scope: !13545)
!13561 = !DILocation(line: 1491, column: 15, scope: !13545)
!13562 = !DILocation(line: 1492, column: 8, scope: !13563)
!13563 = distinct !DILexicalBlock(scope: !13545, file: !9723, line: 1491, column: 29)
!13564 = !DILocation(line: 1492, column: 14, scope: !13563)
!13565 = !DILocation(line: 1492, column: 6, scope: !13563)
!13566 = !DILocation(line: 1493, column: 24, scope: !13563)
!13567 = !DILocation(line: 1493, column: 28, scope: !13563)
!13568 = !DILocation(line: 1493, column: 36, scope: !13563)
!13569 = !DILocation(line: 1493, column: 3, scope: !13563)
!13570 = !DILocation(line: 1493, column: 9, scope: !13563)
!13571 = !DILocation(line: 1493, column: 22, scope: !13563)
!13572 = !DILocation(line: 1496, column: 20, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13563, file: !9723, line: 1496, column: 7)
!13574 = !DILocation(line: 1496, column: 24, scope: !13573)
!13575 = !DILocation(line: 1496, column: 8, scope: !13573)
!13576 = !DILocation(line: 1496, column: 7, scope: !13563)
!13577 = !DILocalVariable(name: "temp", scope: !13578, file: !9723, line: 1497, type: !401)
!13578 = distinct !DILexicalBlock(scope: !13573, file: !9723, line: 1496, column: 35)
!13579 = !DILocation(line: 1497, column: 8, scope: !13578)
!13580 = !DILocation(line: 1506, column: 26, scope: !13578)
!13581 = !DILocation(line: 1506, column: 32, scope: !13578)
!13582 = !DILocation(line: 1506, column: 11, scope: !13578)
!13583 = !DILocation(line: 1506, column: 9, scope: !13578)
!13584 = !DILocation(line: 1507, column: 8, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13578, file: !9723, line: 1507, column: 8)
!13586 = !DILocation(line: 1507, column: 8, scope: !13578)
!13587 = !DILocation(line: 1508, column: 24, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13585, file: !9723, line: 1507, column: 24)
!13589 = !DILocation(line: 1508, column: 30, scope: !13588)
!13590 = !DILocation(line: 1508, column: 5, scope: !13588)
!13591 = !DILocation(line: 1509, column: 4, scope: !13588)
!13592 = !DILocation(line: 1509, column: 27, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13585, file: !9723, line: 1509, column: 15)
!13594 = !DILocation(line: 1509, column: 31, scope: !13593)
!13595 = !DILocation(line: 1509, column: 15, scope: !13593)
!13596 = !DILocation(line: 1510, column: 6, scope: !13593)
!13597 = !DILocation(line: 1510, column: 9, scope: !13593)
!13598 = !DILocation(line: 1510, column: 13, scope: !13593)
!13599 = !DILocation(line: 1510, column: 22, scope: !13593)
!13600 = !DILocation(line: 1509, column: 15, scope: !13585)
!13601 = !DILocation(line: 1511, column: 24, scope: !13602)
!13602 = distinct !DILexicalBlock(scope: !13593, file: !9723, line: 1510, column: 42)
!13603 = !DILocation(line: 1511, column: 30, scope: !13602)
!13604 = !DILocation(line: 1511, column: 5, scope: !13602)
!13605 = !DILocation(line: 1511, column: 9, scope: !13602)
!13606 = !DILocation(line: 1511, column: 22, scope: !13602)
!13607 = !DILocation(line: 1512, column: 25, scope: !13602)
!13608 = !DILocation(line: 1513, column: 4, scope: !13602)
!13609 = !DILocation(line: 1514, column: 3, scope: !13578)
!13610 = distinct !{!13610, !13559, !13611}
!13611 = !DILocation(line: 1515, column: 2, scope: !13545)
!13612 = !DILocation(line: 1523, column: 6, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13545, file: !9723, line: 1523, column: 6)
!13614 = !DILocation(line: 1523, column: 26, scope: !13613)
!13615 = !DILocation(line: 1523, column: 29, scope: !13613)
!13616 = !DILocation(line: 1523, column: 35, scope: !13613)
!13617 = !DILocation(line: 1523, column: 44, scope: !13613)
!13618 = !DILocation(line: 1523, column: 63, scope: !13613)
!13619 = !DILocation(line: 1524, column: 6, scope: !13613)
!13620 = !DILocation(line: 1524, column: 12, scope: !13613)
!13621 = !DILocation(line: 1524, column: 35, scope: !13613)
!13622 = !DILocation(line: 1523, column: 6, scope: !13545)
!13623 = !DILocation(line: 1526, column: 21, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13613, file: !9723, line: 1525, column: 39)
!13625 = !DILocation(line: 1526, column: 3, scope: !13624)
!13626 = !DILocation(line: 1527, column: 5, scope: !13624)
!13627 = !DILocation(line: 1527, column: 11, scope: !13624)
!13628 = !DILocation(line: 1527, column: 3, scope: !13624)
!13629 = !DILocation(line: 1528, column: 2, scope: !13624)
!13630 = !DILocation(line: 1529, column: 1, scope: !13545)
!13631 = distinct !DISubprogram(name: "scan_intr", scope: !6239, file: !6239, line: 962, type: !6235, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13632 = !DILocalVariable(name: "ehci", arg: 1, scope: !13631, file: !6239, line: 962, type: !5814)
!13633 = !DILocation(line: 962, column: 40, scope: !13631)
!13634 = !DILocalVariable(name: "qh", scope: !13631, file: !6239, line: 964, type: !5884)
!13635 = !DILocation(line: 964, column: 19, scope: !13631)
!13636 = !DILocalVariable(name: "__mptr", scope: !13637, file: !6239, line: 966, type: !341)
!13637 = distinct !DILexicalBlock(scope: !13638, file: !6239, line: 966, column: 2)
!13638 = distinct !DILexicalBlock(scope: !13631, file: !6239, line: 966, column: 2)
!13639 = !DILocation(line: 966, column: 2, scope: !13637)
!13640 = !DILocation(line: 966, column: 2, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13637, file: !6239, line: 966, column: 2)
!13642 = !DILocation(line: 966, column: 2, scope: !13638)
!13643 = !DILocalVariable(name: "__mptr", scope: !13644, file: !6239, line: 966, type: !341)
!13644 = distinct !DILexicalBlock(scope: !13638, file: !6239, line: 966, column: 2)
!13645 = !DILocation(line: 966, column: 2, scope: !13644)
!13646 = !DILocation(line: 966, column: 2, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13644, file: !6239, line: 966, column: 2)
!13648 = !DILocation(line: 966, column: 2, scope: !13649)
!13649 = distinct !DILexicalBlock(scope: !13638, file: !6239, line: 966, column: 2)
!13650 = !DILocation(line: 970, column: 20, scope: !13651)
!13651 = distinct !DILexicalBlock(scope: !13652, file: !6239, line: 970, column: 7)
!13652 = distinct !DILexicalBlock(scope: !13649, file: !6239, line: 967, column: 15)
!13653 = !DILocation(line: 970, column: 24, scope: !13651)
!13654 = !DILocation(line: 970, column: 8, scope: !13651)
!13655 = !DILocation(line: 970, column: 7, scope: !13652)
!13656 = !DILocalVariable(name: "temp", scope: !13657, file: !6239, line: 971, type: !401)
!13657 = distinct !DILexicalBlock(scope: !13651, file: !6239, line: 970, column: 35)
!13658 = !DILocation(line: 971, column: 8, scope: !13657)
!13659 = !DILocation(line: 980, column: 26, scope: !13657)
!13660 = !DILocation(line: 980, column: 32, scope: !13657)
!13661 = !DILocation(line: 980, column: 11, scope: !13657)
!13662 = !DILocation(line: 980, column: 9, scope: !13657)
!13663 = !DILocation(line: 981, column: 8, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13657, file: !6239, line: 981, column: 8)
!13665 = !DILocation(line: 981, column: 8, scope: !13657)
!13666 = !DILocation(line: 982, column: 23, scope: !13664)
!13667 = !DILocation(line: 982, column: 29, scope: !13664)
!13668 = !DILocation(line: 982, column: 5, scope: !13664)
!13669 = !DILocation(line: 983, column: 13, scope: !13670)
!13670 = distinct !DILexicalBlock(scope: !13664, file: !6239, line: 983, column: 13)
!13671 = !DILocation(line: 0, scope: !13670)
!13672 = !DILocation(line: 983, column: 13, scope: !13664)
!13673 = !DILocation(line: 985, column: 28, scope: !13670)
!13674 = !DILocation(line: 985, column: 34, scope: !13670)
!13675 = !DILocation(line: 985, column: 5, scope: !13670)
!13676 = !DILocation(line: 986, column: 3, scope: !13657)
!13677 = !DILocation(line: 987, column: 2, scope: !13652)
!13678 = !DILocalVariable(name: "__mptr", scope: !13679, file: !6239, line: 966, type: !341)
!13679 = distinct !DILexicalBlock(scope: !13649, file: !6239, line: 966, column: 2)
!13680 = !DILocation(line: 966, column: 2, scope: !13679)
!13681 = !DILocation(line: 966, column: 2, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13679, file: !6239, line: 966, column: 2)
!13683 = distinct !{!13683, !13642, !13684}
!13684 = !DILocation(line: 987, column: 2, scope: !13638)
!13685 = !DILocation(line: 988, column: 1, scope: !13631)
!13686 = distinct !DISubprogram(name: "scan_isoc", scope: !6239, file: !6239, line: 2343, type: !6235, scopeLine: 2344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13687 = !DILocalVariable(name: "ehci", arg: 1, scope: !13686, file: !6239, line: 2343, type: !5814)
!13688 = !DILocation(line: 2343, column: 40, scope: !13686)
!13689 = !DILocalVariable(name: "uf", scope: !13686, file: !6239, line: 2345, type: !7)
!13690 = !DILocation(line: 2345, column: 12, scope: !13686)
!13691 = !DILocalVariable(name: "now_frame", scope: !13686, file: !6239, line: 2345, type: !7)
!13692 = !DILocation(line: 2345, column: 16, scope: !13686)
!13693 = !DILocalVariable(name: "frame", scope: !13686, file: !6239, line: 2345, type: !7)
!13694 = !DILocation(line: 2345, column: 27, scope: !13686)
!13695 = !DILocalVariable(name: "fmask", scope: !13686, file: !6239, line: 2346, type: !7)
!13696 = !DILocation(line: 2346, column: 12, scope: !13686)
!13697 = !DILocation(line: 2346, column: 20, scope: !13686)
!13698 = !DILocation(line: 2346, column: 26, scope: !13686)
!13699 = !DILocation(line: 2346, column: 40, scope: !13686)
!13700 = !DILocalVariable(name: "modified", scope: !13686, file: !6239, line: 2347, type: !626)
!13701 = !DILocation(line: 2347, column: 9, scope: !13686)
!13702 = !DILocalVariable(name: "live", scope: !13686, file: !6239, line: 2347, type: !626)
!13703 = !DILocation(line: 2347, column: 19, scope: !13686)
!13704 = !DILocalVariable(name: "q", scope: !13686, file: !6239, line: 2348, type: !5903)
!13705 = !DILocation(line: 2348, column: 20, scope: !13686)
!13706 = !DILocalVariable(name: "q_p", scope: !13686, file: !6239, line: 2348, type: !6030)
!13707 = !DILocation(line: 2348, column: 24, scope: !13686)
!13708 = !DILocalVariable(name: "type", scope: !13686, file: !6239, line: 2349, type: !5103)
!13709 = !DILocation(line: 2349, column: 11, scope: !13686)
!13710 = !DILocalVariable(name: "hw_p", scope: !13686, file: !6239, line: 2349, type: !5988)
!13711 = !DILocation(line: 2349, column: 18, scope: !13686)
!13712 = !DILocation(line: 2356, column: 6, scope: !13713)
!13713 = distinct !DILexicalBlock(scope: !13686, file: !6239, line: 2356, column: 6)
!13714 = !DILocation(line: 2356, column: 12, scope: !13713)
!13715 = !DILocation(line: 2356, column: 21, scope: !13713)
!13716 = !DILocation(line: 2356, column: 6, scope: !13686)
!13717 = !DILocation(line: 2357, column: 30, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !13713, file: !6239, line: 2356, column: 41)
!13719 = !DILocation(line: 2357, column: 8, scope: !13718)
!13720 = !DILocation(line: 2357, column: 6, scope: !13718)
!13721 = !DILocation(line: 2358, column: 16, scope: !13718)
!13722 = !DILocation(line: 2358, column: 19, scope: !13718)
!13723 = !DILocation(line: 2358, column: 27, scope: !13718)
!13724 = !DILocation(line: 2358, column: 25, scope: !13718)
!13725 = !DILocation(line: 2358, column: 13, scope: !13718)
!13726 = !DILocation(line: 2359, column: 8, scope: !13718)
!13727 = !DILocation(line: 2360, column: 2, scope: !13718)
!13728 = !DILocation(line: 2361, column: 16, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13713, file: !6239, line: 2360, column: 10)
!13730 = !DILocation(line: 2361, column: 22, scope: !13729)
!13731 = !DILocation(line: 2361, column: 37, scope: !13729)
!13732 = !DILocation(line: 2361, column: 44, scope: !13729)
!13733 = !DILocation(line: 2361, column: 42, scope: !13729)
!13734 = !DILocation(line: 2361, column: 13, scope: !13729)
!13735 = !DILocation(line: 2362, column: 8, scope: !13729)
!13736 = !DILocation(line: 2364, column: 20, scope: !13686)
!13737 = !DILocation(line: 2364, column: 2, scope: !13686)
!13738 = !DILocation(line: 2364, column: 8, scope: !13686)
!13739 = !DILocation(line: 2364, column: 18, scope: !13686)
!13740 = !DILocation(line: 2366, column: 10, scope: !13686)
!13741 = !DILocation(line: 2366, column: 16, scope: !13686)
!13742 = !DILocation(line: 2366, column: 8, scope: !13686)
!13743 = !DILocation(line: 2366, column: 2, scope: !13686)
!13744 = !DILabel(scope: !13686, name: "restart", file: !6239, line: 2368)
!13745 = !DILocation(line: 2368, column: 1, scope: !13686)
!13746 = !DILocation(line: 2370, column: 9, scope: !13686)
!13747 = !DILocation(line: 2370, column: 15, scope: !13686)
!13748 = !DILocation(line: 2370, column: 23, scope: !13686)
!13749 = !DILocation(line: 2370, column: 6, scope: !13686)
!13750 = !DILocation(line: 2371, column: 10, scope: !13686)
!13751 = !DILocation(line: 2371, column: 16, scope: !13686)
!13752 = !DILocation(line: 2371, column: 25, scope: !13686)
!13753 = !DILocation(line: 2371, column: 7, scope: !13686)
!13754 = !DILocation(line: 2372, column: 10, scope: !13686)
!13755 = !DILocation(line: 2372, column: 15, scope: !13686)
!13756 = !DILocation(line: 2372, column: 4, scope: !13686)
!13757 = !DILocation(line: 2372, column: 8, scope: !13686)
!13758 = !DILocation(line: 2373, column: 9, scope: !13686)
!13759 = !DILocation(line: 2373, column: 7, scope: !13686)
!13760 = !DILocation(line: 2374, column: 11, scope: !13686)
!13761 = !DILocation(line: 2376, column: 2, scope: !13686)
!13762 = !DILocation(line: 2376, column: 11, scope: !13686)
!13763 = !DILocation(line: 2376, column: 15, scope: !13686)
!13764 = !DILocation(line: 2377, column: 23, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13686, file: !6239, line: 2376, column: 24)
!13766 = !DILocation(line: 2377, column: 29, scope: !13765)
!13767 = !DILocation(line: 2377, column: 11, scope: !13765)
!13768 = !DILocation(line: 2377, column: 3, scope: !13765)
!13769 = !DILocation(line: 2385, column: 8, scope: !13770)
!13770 = distinct !DILexicalBlock(scope: !13771, file: !6239, line: 2385, column: 8)
!13771 = distinct !DILexicalBlock(scope: !13765, file: !6239, line: 2377, column: 36)
!13772 = !DILocation(line: 2385, column: 17, scope: !13770)
!13773 = !DILocation(line: 2385, column: 14, scope: !13770)
!13774 = !DILocation(line: 2385, column: 27, scope: !13770)
!13775 = !DILocation(line: 2385, column: 30, scope: !13770)
!13776 = !DILocation(line: 2385, column: 8, scope: !13771)
!13777 = !DILocation(line: 2386, column: 5, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13770, file: !6239, line: 2385, column: 36)
!13779 = !{i32 -2139790862}
!13780 = !DILocation(line: 2387, column: 13, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13778, file: !6239, line: 2387, column: 5)
!13782 = !DILocation(line: 2387, column: 10, scope: !13781)
!13783 = !DILocation(line: 2387, column: 18, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13781, file: !6239, line: 2387, column: 5)
!13785 = !DILocation(line: 2387, column: 21, scope: !13784)
!13786 = !DILocation(line: 2387, column: 5, scope: !13781)
!13787 = !DILocation(line: 2388, column: 12, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13789, file: !6239, line: 2388, column: 10)
!13789 = distinct !DILexicalBlock(scope: !13784, file: !6239, line: 2387, column: 32)
!13790 = !DILocation(line: 2388, column: 17, scope: !13788)
!13791 = !DILocation(line: 2388, column: 32, scope: !13788)
!13792 = !DILocation(line: 2388, column: 10, scope: !13788)
!13793 = !DILocation(line: 2389, column: 8, scope: !13788)
!13794 = !DILocation(line: 2388, column: 36, scope: !13788)
!13795 = !DILocation(line: 2388, column: 10, scope: !13789)
!13796 = !DILocation(line: 2390, column: 7, scope: !13788)
!13797 = !DILocation(line: 2391, column: 5, scope: !13789)
!13798 = !DILocation(line: 2387, column: 28, scope: !13784)
!13799 = !DILocation(line: 2387, column: 5, scope: !13784)
!13800 = distinct !{!13800, !13786, !13801}
!13801 = !DILocation(line: 2391, column: 5, scope: !13781)
!13802 = !DILocation(line: 2392, column: 9, scope: !13803)
!13803 = distinct !DILexicalBlock(scope: !13778, file: !6239, line: 2392, column: 9)
!13804 = !DILocation(line: 2392, column: 12, scope: !13803)
!13805 = !DILocation(line: 2392, column: 9, scope: !13778)
!13806 = !DILocation(line: 2393, column: 15, scope: !13807)
!13807 = distinct !DILexicalBlock(scope: !13803, file: !6239, line: 2392, column: 17)
!13808 = !DILocation(line: 2393, column: 20, scope: !13807)
!13809 = !DILocation(line: 2393, column: 10, scope: !13807)
!13810 = !DILocation(line: 2394, column: 16, scope: !13807)
!13811 = !DILocation(line: 2394, column: 21, scope: !13807)
!13812 = !DILocation(line: 2394, column: 11, scope: !13807)
!13813 = !DILocation(line: 2395, column: 13, scope: !13807)
!13814 = !DILocation(line: 2395, column: 11, scope: !13807)
!13815 = !DILocation(line: 2397, column: 11, scope: !13807)
!13816 = !DILocation(line: 2397, column: 10, scope: !13807)
!13817 = !DILocation(line: 2398, column: 6, scope: !13807)
!13818 = !DILocation(line: 2400, column: 4, scope: !13778)
!13819 = !DILocation(line: 2408, column: 5, scope: !13771)
!13820 = !DILocation(line: 2408, column: 13, scope: !13771)
!13821 = !DILocation(line: 2408, column: 18, scope: !13771)
!13822 = !DILocation(line: 2409, column: 9, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13771, file: !6239, line: 2409, column: 8)
!13824 = !DILocation(line: 2409, column: 15, scope: !13823)
!13825 = !DILocation(line: 2409, column: 28, scope: !13823)
!13826 = !DILocation(line: 2410, column: 8, scope: !13823)
!13827 = !DILocation(line: 2410, column: 13, scope: !13823)
!13828 = !DILocation(line: 2410, column: 24, scope: !13823)
!13829 = !DILocation(line: 2410, column: 21, scope: !13823)
!13830 = !DILocation(line: 2409, column: 8, scope: !13771)
!13831 = !DILocation(line: 2411, column: 15, scope: !13823)
!13832 = !DILocation(line: 2411, column: 20, scope: !13823)
!13833 = !DILocation(line: 2411, column: 6, scope: !13823)
!13834 = !DILocation(line: 2411, column: 11, scope: !13823)
!13835 = !DILocation(line: 2411, column: 5, scope: !13823)
!13836 = !DILocation(line: 2413, column: 25, scope: !13823)
!13837 = !DILocation(line: 2413, column: 31, scope: !13823)
!13838 = !DILocation(line: 2413, column: 37, scope: !13823)
!13839 = !DILocation(line: 2413, column: 44, scope: !13823)
!13840 = !DILocation(line: 2413, column: 13, scope: !13823)
!13841 = !DILocation(line: 2413, column: 6, scope: !13823)
!13842 = !DILocation(line: 2413, column: 11, scope: !13823)
!13843 = !DILocation(line: 2414, column: 11, scope: !13771)
!13844 = !DILocation(line: 2414, column: 9, scope: !13771)
!13845 = !DILocation(line: 2415, column: 4, scope: !13771)
!13846 = !{i32 -2139790641}
!13847 = !DILocation(line: 2416, column: 28, scope: !13771)
!13848 = !DILocation(line: 2416, column: 36, scope: !13771)
!13849 = !DILocation(line: 2416, column: 15, scope: !13771)
!13850 = !DILocation(line: 2416, column: 13, scope: !13771)
!13851 = !DILocation(line: 2417, column: 9, scope: !13771)
!13852 = !DILocation(line: 2417, column: 8, scope: !13771)
!13853 = !DILocation(line: 2418, column: 4, scope: !13771)
!13854 = !DILocation(line: 2426, column: 10, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13771, file: !6239, line: 2426, column: 8)
!13856 = !DILocation(line: 2426, column: 19, scope: !13855)
!13857 = !DILocation(line: 2426, column: 16, scope: !13855)
!13858 = !DILocation(line: 2426, column: 30, scope: !13855)
!13859 = !DILocation(line: 2427, column: 9, scope: !13855)
!13860 = !DILocation(line: 2427, column: 15, scope: !13855)
!13861 = !DILocation(line: 2427, column: 22, scope: !13855)
!13862 = !DILocation(line: 2427, column: 20, scope: !13855)
!13863 = !DILocation(line: 2427, column: 32, scope: !13855)
!13864 = !DILocation(line: 2427, column: 29, scope: !13855)
!13865 = !DILocation(line: 2428, column: 5, scope: !13855)
!13866 = !DILocation(line: 2428, column: 8, scope: !13855)
!13867 = !DILocation(line: 2429, column: 5, scope: !13855)
!13868 = !DILocation(line: 2429, column: 11, scope: !13855)
!13869 = !DILocation(line: 2429, column: 17, scope: !13855)
!13870 = !DILocation(line: 2429, column: 30, scope: !13855)
!13871 = !DILocation(line: 2429, column: 28, scope: !13855)
!13872 = !DILocation(line: 2426, column: 8, scope: !13771)
!13873 = !DILocation(line: 2431, column: 14, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13855, file: !6239, line: 2429, column: 50)
!13875 = !DILocation(line: 2431, column: 20, scope: !13874)
!13876 = !DILocation(line: 2431, column: 9, scope: !13874)
!13877 = !DILocation(line: 2432, column: 15, scope: !13874)
!13878 = !DILocation(line: 2432, column: 21, scope: !13874)
!13879 = !DILocation(line: 2432, column: 10, scope: !13874)
!13880 = !DILocation(line: 2433, column: 12, scope: !13874)
!13881 = !DILocation(line: 2433, column: 10, scope: !13874)
!13882 = !DILocation(line: 2434, column: 10, scope: !13874)
!13883 = !DILocation(line: 2434, column: 9, scope: !13874)
!13884 = !DILocation(line: 2435, column: 5, scope: !13874)
!13885 = !DILocation(line: 2443, column: 5, scope: !13771)
!13886 = !DILocation(line: 2443, column: 13, scope: !13771)
!13887 = !DILocation(line: 2443, column: 19, scope: !13771)
!13888 = !DILocation(line: 2444, column: 9, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !13771, file: !6239, line: 2444, column: 8)
!13890 = !DILocation(line: 2444, column: 15, scope: !13889)
!13891 = !DILocation(line: 2444, column: 28, scope: !13889)
!13892 = !DILocation(line: 2445, column: 8, scope: !13889)
!13893 = !DILocation(line: 2445, column: 14, scope: !13889)
!13894 = !DILocation(line: 2445, column: 25, scope: !13889)
!13895 = !DILocation(line: 2445, column: 22, scope: !13889)
!13896 = !DILocation(line: 2444, column: 8, scope: !13771)
!13897 = !DILocation(line: 2446, column: 15, scope: !13889)
!13898 = !DILocation(line: 2446, column: 21, scope: !13889)
!13899 = !DILocation(line: 2446, column: 6, scope: !13889)
!13900 = !DILocation(line: 2446, column: 11, scope: !13889)
!13901 = !DILocation(line: 2446, column: 5, scope: !13889)
!13902 = !DILocation(line: 2448, column: 25, scope: !13889)
!13903 = !DILocation(line: 2448, column: 31, scope: !13889)
!13904 = !DILocation(line: 2448, column: 37, scope: !13889)
!13905 = !DILocation(line: 2448, column: 44, scope: !13889)
!13906 = !DILocation(line: 2448, column: 13, scope: !13889)
!13907 = !DILocation(line: 2448, column: 6, scope: !13889)
!13908 = !DILocation(line: 2448, column: 11, scope: !13889)
!13909 = !DILocation(line: 2449, column: 11, scope: !13771)
!13910 = !DILocation(line: 2449, column: 9, scope: !13771)
!13911 = !DILocation(line: 2450, column: 4, scope: !13771)
!13912 = !{i32 -2139790407}
!13913 = !DILocation(line: 2451, column: 29, scope: !13771)
!13914 = !DILocation(line: 2451, column: 37, scope: !13771)
!13915 = !DILocation(line: 2451, column: 15, scope: !13771)
!13916 = !DILocation(line: 2451, column: 13, scope: !13771)
!13917 = !DILocation(line: 2452, column: 9, scope: !13771)
!13918 = !DILocation(line: 2452, column: 8, scope: !13771)
!13919 = !DILocation(line: 2453, column: 4, scope: !13771)
!13920 = !DILocation(line: 2455, column: 4, scope: !13771)
!13921 = !DILocation(line: 2462, column: 6, scope: !13771)
!13922 = !DILocation(line: 2462, column: 10, scope: !13771)
!13923 = !DILocation(line: 2463, column: 4, scope: !13771)
!13924 = !DILocation(line: 2467, column: 7, scope: !13925)
!13925 = distinct !DILexicalBlock(scope: !13765, file: !6239, line: 2467, column: 7)
!13926 = !DILocation(line: 0, scope: !13925)
!13927 = !DILocation(line: 2467, column: 7, scope: !13765)
!13928 = !DILocation(line: 2468, column: 4, scope: !13925)
!13929 = distinct !{!13929, !13761, !13930}
!13930 = !DILocation(line: 2469, column: 2, scope: !13686)
!13931 = !DILocation(line: 2472, column: 6, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13686, file: !6239, line: 2472, column: 6)
!13933 = !DILocation(line: 2472, column: 15, scope: !13932)
!13934 = !DILocation(line: 2472, column: 12, scope: !13932)
!13935 = !DILocation(line: 2472, column: 6, scope: !13686)
!13936 = !DILocation(line: 2473, column: 3, scope: !13932)
!13937 = !DILocation(line: 2476, column: 25, scope: !13686)
!13938 = !DILocation(line: 2476, column: 2, scope: !13686)
!13939 = !DILocation(line: 2476, column: 8, scope: !13686)
!13940 = !DILocation(line: 2476, column: 23, scope: !13686)
!13941 = !DILocation(line: 2477, column: 11, scope: !13686)
!13942 = !DILocation(line: 2477, column: 17, scope: !13686)
!13943 = !DILocation(line: 2477, column: 24, scope: !13686)
!13944 = !DILocation(line: 2477, column: 22, scope: !13686)
!13945 = !DILocation(line: 2477, column: 8, scope: !13686)
!13946 = !DILocation(line: 2479, column: 2, scope: !13686)
!13947 = distinct !DISubprogram(name: "start_unlink_intr_wait", scope: !6239, file: !6239, line: 681, type: !10193, scopeLine: 683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13948 = !DILocalVariable(name: "ehci", arg: 1, scope: !13947, file: !6239, line: 681, type: !5814)
!13949 = !DILocation(line: 681, column: 53, scope: !13947)
!13950 = !DILocalVariable(name: "qh", arg: 2, scope: !13947, file: !6239, line: 682, type: !5884)
!13951 = !DILocation(line: 682, column: 24, scope: !13947)
!13952 = !DILocation(line: 684, column: 21, scope: !13947)
!13953 = !DILocation(line: 684, column: 27, scope: !13947)
!13954 = !DILocation(line: 684, column: 2, scope: !13947)
!13955 = !DILocation(line: 684, column: 6, scope: !13947)
!13956 = !DILocation(line: 684, column: 19, scope: !13947)
!13957 = !DILocation(line: 687, column: 17, scope: !13947)
!13958 = !DILocation(line: 687, column: 21, scope: !13947)
!13959 = !DILocation(line: 687, column: 35, scope: !13947)
!13960 = !DILocation(line: 687, column: 41, scope: !13947)
!13961 = !DILocation(line: 687, column: 2, scope: !13947)
!13962 = !DILocation(line: 689, column: 6, scope: !13963)
!13963 = distinct !DILexicalBlock(scope: !13947, file: !6239, line: 689, column: 6)
!13964 = !DILocation(line: 689, column: 12, scope: !13963)
!13965 = !DILocation(line: 689, column: 21, scope: !13963)
!13966 = !DILocation(line: 689, column: 6, scope: !13947)
!13967 = !DILocation(line: 690, column: 34, scope: !13963)
!13968 = !DILocation(line: 690, column: 3, scope: !13963)
!13969 = !DILocation(line: 691, column: 11, scope: !13970)
!13970 = distinct !DILexicalBlock(scope: !13963, file: !6239, line: 691, column: 11)
!13971 = !DILocation(line: 691, column: 17, scope: !13970)
!13972 = !DILocation(line: 691, column: 34, scope: !13970)
!13973 = !DILocation(line: 691, column: 43, scope: !13970)
!13974 = !DILocation(line: 691, column: 47, scope: !13970)
!13975 = !DILocation(line: 691, column: 39, scope: !13970)
!13976 = !DILocation(line: 691, column: 11, scope: !13963)
!13977 = !DILocation(line: 692, column: 21, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13970, file: !6239, line: 691, column: 60)
!13979 = !DILocation(line: 692, column: 3, scope: !13978)
!13980 = !DILocation(line: 693, column: 5, scope: !13978)
!13981 = !DILocation(line: 693, column: 11, scope: !13978)
!13982 = !DILocation(line: 693, column: 3, scope: !13978)
!13983 = !DILocation(line: 694, column: 2, scope: !13978)
!13984 = !DILocation(line: 695, column: 1, scope: !13947)
!13985 = distinct !DISubprogram(name: "ehci_read_frame_index", scope: !3, file: !3, line: 120, type: !13986, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!13986 = !DISubroutineType(types: !13987)
!13987 = !{!7, !5814}
!13988 = !DILocalVariable(name: "ehci", arg: 1, scope: !13985, file: !3, line: 120, type: !5814)
!13989 = !DILocation(line: 120, column: 63, scope: !13985)
!13990 = !DILocation(line: 122, column: 6, scope: !13991)
!13991 = distinct !DILexicalBlock(scope: !13985, file: !3, line: 122, column: 6)
!13992 = !DILocation(line: 122, column: 12, scope: !13991)
!13993 = !DILocation(line: 122, column: 6, scope: !13985)
!13994 = !DILocation(line: 123, column: 40, scope: !13991)
!13995 = !DILocation(line: 123, column: 10, scope: !13991)
!13996 = !DILocation(line: 123, column: 3, scope: !13991)
!13997 = !DILocation(line: 124, column: 20, scope: !13985)
!13998 = !DILocation(line: 124, column: 27, scope: !13985)
!13999 = !DILocation(line: 124, column: 33, scope: !13985)
!14000 = !DILocation(line: 124, column: 39, scope: !13985)
!14001 = !DILocation(line: 124, column: 9, scope: !13985)
!14002 = !DILocation(line: 124, column: 2, scope: !13985)
!14003 = !DILocation(line: 125, column: 1, scope: !13985)
!14004 = distinct !DISubprogram(name: "itd_complete", scope: !6239, file: !6239, line: 1810, type: !14005, scopeLine: 1811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!14005 = !DISubroutineType(types: !14006)
!14006 = !{!626, !5814, !5907}
!14007 = !DILocalVariable(name: "ehci", arg: 1, scope: !14004, file: !6239, line: 1810, type: !5814)
!14008 = !DILocation(line: 1810, column: 43, scope: !14004)
!14009 = !DILocalVariable(name: "itd", arg: 2, scope: !14004, file: !6239, line: 1810, type: !5907)
!14010 = !DILocation(line: 1810, column: 66, scope: !14004)
!14011 = !DILocalVariable(name: "urb", scope: !14004, file: !6239, line: 1812, type: !5343)
!14012 = !DILocation(line: 1812, column: 17, scope: !14004)
!14013 = !DILocation(line: 1812, column: 23, scope: !14004)
!14014 = !DILocation(line: 1812, column: 28, scope: !14004)
!14015 = !DILocalVariable(name: "desc", scope: !14004, file: !6239, line: 1813, type: !14016)
!14016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5398, size: 64)
!14017 = !DILocation(line: 1813, column: 36, scope: !14004)
!14018 = !DILocalVariable(name: "t", scope: !14004, file: !6239, line: 1814, type: !303)
!14019 = !DILocation(line: 1814, column: 10, scope: !14004)
!14020 = !DILocalVariable(name: "uframe", scope: !14004, file: !6239, line: 1815, type: !7)
!14021 = !DILocation(line: 1815, column: 14, scope: !14004)
!14022 = !DILocalVariable(name: "urb_index", scope: !14004, file: !6239, line: 1816, type: !401)
!14023 = !DILocation(line: 1816, column: 10, scope: !14004)
!14024 = !DILocalVariable(name: "stream", scope: !14004, file: !6239, line: 1817, type: !5922)
!14025 = !DILocation(line: 1817, column: 28, scope: !14004)
!14026 = !DILocation(line: 1817, column: 37, scope: !14004)
!14027 = !DILocation(line: 1817, column: 42, scope: !14004)
!14028 = !DILocalVariable(name: "retval", scope: !14004, file: !6239, line: 1818, type: !626)
!14029 = !DILocation(line: 1818, column: 11, scope: !14004)
!14030 = !DILocation(line: 1821, column: 14, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !14004, file: !6239, line: 1821, column: 2)
!14032 = !DILocation(line: 1821, column: 7, scope: !14031)
!14033 = !DILocation(line: 1821, column: 19, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14031, file: !6239, line: 1821, column: 2)
!14035 = !DILocation(line: 1821, column: 26, scope: !14034)
!14036 = !DILocation(line: 1821, column: 2, scope: !14031)
!14037 = !DILocation(line: 1822, column: 7, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14039, file: !6239, line: 1822, column: 7)
!14039 = distinct !DILexicalBlock(scope: !14034, file: !6239, line: 1821, column: 41)
!14040 = !DILocation(line: 1822, column: 7, scope: !14039)
!14041 = !DILocation(line: 1823, column: 4, scope: !14038)
!14042 = !DILocation(line: 1824, column: 15, scope: !14039)
!14043 = !DILocation(line: 1824, column: 20, scope: !14039)
!14044 = !DILocation(line: 1824, column: 26, scope: !14039)
!14045 = !DILocation(line: 1824, column: 13, scope: !14039)
!14046 = !DILocation(line: 1825, column: 11, scope: !14039)
!14047 = !DILocation(line: 1825, column: 16, scope: !14039)
!14048 = !DILocation(line: 1825, column: 31, scope: !14039)
!14049 = !DILocation(line: 1825, column: 8, scope: !14039)
!14050 = !DILocation(line: 1827, column: 20, scope: !14039)
!14051 = !DILocation(line: 1827, column: 27, scope: !14039)
!14052 = !DILocation(line: 1827, column: 32, scope: !14039)
!14053 = !DILocation(line: 1827, column: 47, scope: !14039)
!14054 = !DILocation(line: 1827, column: 7, scope: !14039)
!14055 = !DILocation(line: 1827, column: 5, scope: !14039)
!14056 = !DILocation(line: 1828, column: 3, scope: !14039)
!14057 = !DILocation(line: 1828, column: 8, scope: !14039)
!14058 = !DILocation(line: 1828, column: 23, scope: !14039)
!14059 = !DILocation(line: 1828, column: 31, scope: !14039)
!14060 = !DILocation(line: 1831, column: 7, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14039, file: !6239, line: 1831, column: 7)
!14062 = !DILocation(line: 1831, column: 7, scope: !14039)
!14063 = !DILocation(line: 1832, column: 4, scope: !14064)
!14064 = distinct !DILexicalBlock(scope: !14061, file: !6239, line: 1831, column: 31)
!14065 = !DILocation(line: 1832, column: 9, scope: !14064)
!14066 = !DILocation(line: 1832, column: 20, scope: !14064)
!14067 = !DILocation(line: 1833, column: 8, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !14064, file: !6239, line: 1833, column: 8)
!14069 = !DILocation(line: 1833, column: 10, scope: !14068)
!14070 = !DILocation(line: 1833, column: 8, scope: !14064)
!14071 = !DILocation(line: 1834, column: 20, scope: !14068)
!14072 = !DILocation(line: 1834, column: 5, scope: !14068)
!14073 = !DILocation(line: 1834, column: 11, scope: !14068)
!14074 = !DILocation(line: 1834, column: 18, scope: !14068)
!14075 = !DILocation(line: 1837, column: 13, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !14068, file: !6239, line: 1837, column: 13)
!14077 = !DILocation(line: 1837, column: 15, scope: !14076)
!14078 = !DILocation(line: 1837, column: 13, scope: !14068)
!14079 = !DILocation(line: 1838, column: 5, scope: !14076)
!14080 = !DILocation(line: 1838, column: 11, scope: !14076)
!14081 = !DILocation(line: 1838, column: 18, scope: !14076)
!14082 = !DILocation(line: 1840, column: 5, scope: !14076)
!14083 = !DILocation(line: 1840, column: 11, scope: !14076)
!14084 = !DILocation(line: 1840, column: 18, scope: !14076)
!14085 = !DILocation(line: 1843, column: 10, scope: !14086)
!14086 = distinct !DILexicalBlock(scope: !14064, file: !6239, line: 1843, column: 8)
!14087 = !DILocation(line: 1843, column: 12, scope: !14086)
!14088 = !DILocation(line: 1843, column: 8, scope: !14064)
!14089 = !DILocation(line: 1844, column: 27, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14086, file: !6239, line: 1843, column: 33)
!14091 = !DILocation(line: 1844, column: 5, scope: !14090)
!14092 = !DILocation(line: 1844, column: 11, scope: !14090)
!14093 = !DILocation(line: 1844, column: 25, scope: !14090)
!14094 = !DILocation(line: 1845, column: 27, scope: !14090)
!14095 = !DILocation(line: 1845, column: 33, scope: !14090)
!14096 = !DILocation(line: 1845, column: 5, scope: !14090)
!14097 = !DILocation(line: 1845, column: 10, scope: !14090)
!14098 = !DILocation(line: 1845, column: 24, scope: !14090)
!14099 = !DILocation(line: 1846, column: 4, scope: !14090)
!14100 = !DILocation(line: 1847, column: 3, scope: !14064)
!14101 = !DILocation(line: 1847, column: 14, scope: !14102)
!14102 = distinct !DILexicalBlock(scope: !14061, file: !6239, line: 1847, column: 14)
!14103 = !DILocation(line: 1847, column: 14, scope: !14061)
!14104 = !DILocation(line: 1848, column: 4, scope: !14105)
!14105 = distinct !DILexicalBlock(scope: !14102, file: !6239, line: 1847, column: 51)
!14106 = !DILocation(line: 1848, column: 10, scope: !14105)
!14107 = !DILocation(line: 1848, column: 17, scope: !14105)
!14108 = !DILocation(line: 1849, column: 26, scope: !14105)
!14109 = !DILocation(line: 1849, column: 4, scope: !14105)
!14110 = !DILocation(line: 1849, column: 10, scope: !14105)
!14111 = !DILocation(line: 1849, column: 24, scope: !14105)
!14112 = !DILocation(line: 1850, column: 26, scope: !14105)
!14113 = !DILocation(line: 1850, column: 32, scope: !14105)
!14114 = !DILocation(line: 1850, column: 4, scope: !14105)
!14115 = !DILocation(line: 1850, column: 9, scope: !14105)
!14116 = !DILocation(line: 1850, column: 23, scope: !14105)
!14117 = !DILocation(line: 1851, column: 3, scope: !14105)
!14118 = !DILocation(line: 1853, column: 4, scope: !14119)
!14119 = distinct !DILexicalBlock(scope: !14102, file: !6239, line: 1851, column: 10)
!14120 = !DILocation(line: 1853, column: 9, scope: !14119)
!14121 = !DILocation(line: 1853, column: 20, scope: !14119)
!14122 = !DILocation(line: 1855, column: 2, scope: !14039)
!14123 = !DILocation(line: 1821, column: 37, scope: !14034)
!14124 = !DILocation(line: 1821, column: 2, scope: !14034)
!14125 = distinct !{!14125, !14036, !14126}
!14126 = !DILocation(line: 1855, column: 2, scope: !14031)
!14127 = !DILocation(line: 1858, column: 6, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14004, file: !6239, line: 1858, column: 6)
!14129 = !DILocation(line: 1858, column: 6, scope: !14004)
!14130 = !DILocation(line: 1859, column: 3, scope: !14128)
!14131 = !DILocation(line: 1868, column: 16, scope: !14004)
!14132 = !DILocation(line: 1868, column: 22, scope: !14004)
!14133 = !DILocation(line: 1868, column: 2, scope: !14004)
!14134 = !DILocation(line: 1869, column: 9, scope: !14004)
!14135 = !DILocation(line: 1870, column: 6, scope: !14004)
!14136 = !DILocation(line: 1872, column: 4, scope: !14004)
!14137 = !DILocation(line: 1872, column: 10, scope: !14004)
!14138 = !DILocation(line: 1872, column: 2, scope: !14004)
!14139 = !DILocation(line: 1873, column: 19, scope: !14004)
!14140 = !DILocation(line: 1873, column: 2, scope: !14004)
!14141 = !DILocation(line: 1875, column: 14, scope: !14004)
!14142 = !DILocation(line: 1875, column: 2, scope: !14004)
!14143 = !DILocation(line: 1875, column: 21, scope: !14004)
!14144 = !DILocation(line: 1875, column: 26, scope: !14004)
!14145 = !DILocation(line: 1875, column: 45, scope: !14004)
!14146 = !DILocation(line: 1876, column: 18, scope: !14147)
!14147 = distinct !DILexicalBlock(scope: !14004, file: !6239, line: 1876, column: 6)
!14148 = !DILocation(line: 1876, column: 6, scope: !14147)
!14149 = !DILocation(line: 1876, column: 25, scope: !14147)
!14150 = !DILocation(line: 1876, column: 30, scope: !14147)
!14151 = !DILocation(line: 1876, column: 50, scope: !14147)
!14152 = !DILocation(line: 1876, column: 6, scope: !14004)
!14153 = !DILocation(line: 1877, column: 7, scope: !14154)
!14154 = distinct !DILexicalBlock(scope: !14155, file: !6239, line: 1877, column: 7)
!14155 = distinct !DILexicalBlock(scope: !14147, file: !6239, line: 1876, column: 56)
!14156 = !DILocation(line: 1877, column: 13, scope: !14154)
!14157 = !DILocation(line: 1877, column: 25, scope: !14154)
!14158 = !DILocation(line: 1877, column: 7, scope: !14155)
!14159 = !DILocation(line: 1878, column: 4, scope: !14154)
!14160 = !DILocation(line: 1879, column: 2, scope: !14155)
!14161 = !DILocation(line: 1881, column: 6, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14004, file: !6239, line: 1881, column: 6)
!14163 = !DILocation(line: 1881, column: 6, scope: !14004)
!14164 = !DILocation(line: 1883, column: 8, scope: !14162)
!14165 = !DILocation(line: 1883, column: 16, scope: !14162)
!14166 = !DILocation(line: 1882, column: 15, scope: !14162)
!14167 = !DILocation(line: 1882, column: 3, scope: !14162)
!14168 = !DILocation(line: 1882, column: 22, scope: !14162)
!14169 = !DILocation(line: 1882, column: 27, scope: !14162)
!14170 = !DILocation(line: 1883, column: 5, scope: !14162)
!14171 = !DILabel(scope: !14004, name: "done", file: !6239, line: 1885)
!14172 = !DILocation(line: 1885, column: 1, scope: !14004)
!14173 = !DILocation(line: 1886, column: 2, scope: !14004)
!14174 = !DILocation(line: 1886, column: 7, scope: !14004)
!14175 = !DILocation(line: 1886, column: 11, scope: !14004)
!14176 = !DILocation(line: 1889, column: 18, scope: !14004)
!14177 = !DILocation(line: 1889, column: 23, scope: !14004)
!14178 = !DILocation(line: 1889, column: 34, scope: !14004)
!14179 = !DILocation(line: 1889, column: 42, scope: !14004)
!14180 = !DILocation(line: 1889, column: 2, scope: !14004)
!14181 = !DILocation(line: 1892, column: 18, scope: !14182)
!14182 = distinct !DILexicalBlock(scope: !14004, file: !6239, line: 1892, column: 6)
!14183 = !DILocation(line: 1892, column: 26, scope: !14182)
!14184 = !DILocation(line: 1892, column: 6, scope: !14182)
!14185 = !DILocation(line: 1892, column: 6, scope: !14004)
!14186 = !DILocation(line: 1893, column: 26, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14182, file: !6239, line: 1892, column: 36)
!14188 = !DILocation(line: 1893, column: 34, scope: !14187)
!14189 = !DILocation(line: 1894, column: 6, scope: !14187)
!14190 = !DILocation(line: 1894, column: 12, scope: !14187)
!14191 = !DILocation(line: 1893, column: 3, scope: !14187)
!14192 = !DILocation(line: 1895, column: 19, scope: !14187)
!14193 = !DILocation(line: 1895, column: 3, scope: !14187)
!14194 = !DILocation(line: 1896, column: 2, scope: !14187)
!14195 = !DILocation(line: 1898, column: 9, scope: !14004)
!14196 = !DILocation(line: 1898, column: 2, scope: !14004)
!14197 = distinct !DISubprogram(name: "sitd_complete", scope: !6239, file: !6239, line: 2204, type: !14198, scopeLine: 2205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!14198 = !DISubroutineType(types: !14199)
!14199 = !{!626, !5814, !5961}
!14200 = !DILocalVariable(name: "ehci", arg: 1, scope: !14197, file: !6239, line: 2204, type: !5814)
!14201 = !DILocation(line: 2204, column: 44, scope: !14197)
!14202 = !DILocalVariable(name: "sitd", arg: 2, scope: !14197, file: !6239, line: 2204, type: !5961)
!14203 = !DILocation(line: 2204, column: 68, scope: !14197)
!14204 = !DILocalVariable(name: "urb", scope: !14197, file: !6239, line: 2206, type: !5343)
!14205 = !DILocation(line: 2206, column: 17, scope: !14197)
!14206 = !DILocation(line: 2206, column: 23, scope: !14197)
!14207 = !DILocation(line: 2206, column: 29, scope: !14197)
!14208 = !DILocalVariable(name: "desc", scope: !14197, file: !6239, line: 2207, type: !14016)
!14209 = !DILocation(line: 2207, column: 36, scope: !14197)
!14210 = !DILocalVariable(name: "t", scope: !14197, file: !6239, line: 2208, type: !303)
!14211 = !DILocation(line: 2208, column: 10, scope: !14197)
!14212 = !DILocalVariable(name: "urb_index", scope: !14197, file: !6239, line: 2209, type: !401)
!14213 = !DILocation(line: 2209, column: 10, scope: !14197)
!14214 = !DILocalVariable(name: "stream", scope: !14197, file: !6239, line: 2210, type: !5922)
!14215 = !DILocation(line: 2210, column: 28, scope: !14197)
!14216 = !DILocation(line: 2210, column: 37, scope: !14197)
!14217 = !DILocation(line: 2210, column: 43, scope: !14197)
!14218 = !DILocalVariable(name: "retval", scope: !14197, file: !6239, line: 2211, type: !626)
!14219 = !DILocation(line: 2211, column: 11, scope: !14197)
!14220 = !DILocation(line: 2213, column: 14, scope: !14197)
!14221 = !DILocation(line: 2213, column: 20, scope: !14197)
!14222 = !DILocation(line: 2213, column: 12, scope: !14197)
!14223 = !DILocation(line: 2214, column: 10, scope: !14197)
!14224 = !DILocation(line: 2214, column: 15, scope: !14197)
!14225 = !DILocation(line: 2214, column: 30, scope: !14197)
!14226 = !DILocation(line: 2214, column: 7, scope: !14197)
!14227 = !DILocation(line: 2215, column: 19, scope: !14197)
!14228 = !DILocation(line: 2215, column: 26, scope: !14197)
!14229 = !DILocation(line: 2215, column: 32, scope: !14197)
!14230 = !DILocation(line: 2215, column: 6, scope: !14197)
!14231 = !DILocation(line: 2215, column: 4, scope: !14197)
!14232 = !DILocation(line: 2218, column: 6, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14197, file: !6239, line: 2218, column: 6)
!14234 = !DILocation(line: 2218, column: 6, scope: !14197)
!14235 = !DILocation(line: 2219, column: 3, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14233, file: !6239, line: 2218, column: 31)
!14237 = !DILocation(line: 2219, column: 8, scope: !14236)
!14238 = !DILocation(line: 2219, column: 19, scope: !14236)
!14239 = !DILocation(line: 2220, column: 7, scope: !14240)
!14240 = distinct !DILexicalBlock(scope: !14236, file: !6239, line: 2220, column: 7)
!14241 = !DILocation(line: 2220, column: 9, scope: !14240)
!14242 = !DILocation(line: 2220, column: 7, scope: !14236)
!14243 = !DILocation(line: 2221, column: 19, scope: !14240)
!14244 = !DILocation(line: 2221, column: 4, scope: !14240)
!14245 = !DILocation(line: 2221, column: 10, scope: !14240)
!14246 = !DILocation(line: 2221, column: 17, scope: !14240)
!14247 = !DILocation(line: 2224, column: 12, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14240, file: !6239, line: 2224, column: 12)
!14249 = !DILocation(line: 2224, column: 14, scope: !14248)
!14250 = !DILocation(line: 2224, column: 12, scope: !14240)
!14251 = !DILocation(line: 2225, column: 4, scope: !14248)
!14252 = !DILocation(line: 2225, column: 10, scope: !14248)
!14253 = !DILocation(line: 2225, column: 17, scope: !14248)
!14254 = !DILocation(line: 2227, column: 4, scope: !14248)
!14255 = !DILocation(line: 2227, column: 10, scope: !14248)
!14256 = !DILocation(line: 2227, column: 17, scope: !14248)
!14257 = !DILocation(line: 2228, column: 2, scope: !14236)
!14258 = !DILocation(line: 2228, column: 13, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !14233, file: !6239, line: 2228, column: 13)
!14260 = !DILocation(line: 2228, column: 13, scope: !14233)
!14261 = !DILocation(line: 2230, column: 3, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14259, file: !6239, line: 2228, column: 44)
!14263 = !DILocation(line: 2230, column: 8, scope: !14262)
!14264 = !DILocation(line: 2230, column: 19, scope: !14262)
!14265 = !DILocation(line: 2231, column: 2, scope: !14262)
!14266 = !DILocation(line: 2232, column: 3, scope: !14267)
!14267 = distinct !DILexicalBlock(scope: !14259, file: !6239, line: 2231, column: 9)
!14268 = !DILocation(line: 2232, column: 9, scope: !14267)
!14269 = !DILocation(line: 2232, column: 16, scope: !14267)
!14270 = !DILocation(line: 2233, column: 25, scope: !14267)
!14271 = !DILocation(line: 2233, column: 31, scope: !14267)
!14272 = !DILocation(line: 2233, column: 40, scope: !14267)
!14273 = !DILocation(line: 2233, column: 38, scope: !14267)
!14274 = !DILocation(line: 2233, column: 3, scope: !14267)
!14275 = !DILocation(line: 2233, column: 9, scope: !14267)
!14276 = !DILocation(line: 2233, column: 23, scope: !14267)
!14277 = !DILocation(line: 2234, column: 25, scope: !14267)
!14278 = !DILocation(line: 2234, column: 31, scope: !14267)
!14279 = !DILocation(line: 2234, column: 3, scope: !14267)
!14280 = !DILocation(line: 2234, column: 8, scope: !14267)
!14281 = !DILocation(line: 2234, column: 22, scope: !14267)
!14282 = !DILocation(line: 2238, column: 7, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14197, file: !6239, line: 2238, column: 6)
!14284 = !DILocation(line: 2238, column: 17, scope: !14283)
!14285 = !DILocation(line: 2238, column: 25, scope: !14283)
!14286 = !DILocation(line: 2238, column: 30, scope: !14283)
!14287 = !DILocation(line: 2238, column: 22, scope: !14283)
!14288 = !DILocation(line: 2238, column: 6, scope: !14197)
!14289 = !DILocation(line: 2239, column: 3, scope: !14283)
!14290 = !DILocation(line: 2248, column: 16, scope: !14197)
!14291 = !DILocation(line: 2248, column: 22, scope: !14197)
!14292 = !DILocation(line: 2248, column: 2, scope: !14197)
!14293 = !DILocation(line: 2249, column: 9, scope: !14197)
!14294 = !DILocation(line: 2250, column: 6, scope: !14197)
!14295 = !DILocation(line: 2252, column: 4, scope: !14197)
!14296 = !DILocation(line: 2252, column: 10, scope: !14197)
!14297 = !DILocation(line: 2252, column: 2, scope: !14197)
!14298 = !DILocation(line: 2253, column: 19, scope: !14197)
!14299 = !DILocation(line: 2253, column: 2, scope: !14197)
!14300 = !DILocation(line: 2255, column: 14, scope: !14197)
!14301 = !DILocation(line: 2255, column: 2, scope: !14197)
!14302 = !DILocation(line: 2255, column: 21, scope: !14197)
!14303 = !DILocation(line: 2255, column: 26, scope: !14197)
!14304 = !DILocation(line: 2255, column: 45, scope: !14197)
!14305 = !DILocation(line: 2256, column: 18, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14197, file: !6239, line: 2256, column: 6)
!14307 = !DILocation(line: 2256, column: 6, scope: !14306)
!14308 = !DILocation(line: 2256, column: 25, scope: !14306)
!14309 = !DILocation(line: 2256, column: 30, scope: !14306)
!14310 = !DILocation(line: 2256, column: 50, scope: !14306)
!14311 = !DILocation(line: 2256, column: 6, scope: !14197)
!14312 = !DILocation(line: 2257, column: 7, scope: !14313)
!14313 = distinct !DILexicalBlock(scope: !14314, file: !6239, line: 2257, column: 7)
!14314 = distinct !DILexicalBlock(scope: !14306, file: !6239, line: 2256, column: 56)
!14315 = !DILocation(line: 2257, column: 13, scope: !14313)
!14316 = !DILocation(line: 2257, column: 25, scope: !14313)
!14317 = !DILocation(line: 2257, column: 7, scope: !14314)
!14318 = !DILocation(line: 2258, column: 4, scope: !14313)
!14319 = !DILocation(line: 2259, column: 2, scope: !14314)
!14320 = !DILocation(line: 2261, column: 24, scope: !14321)
!14321 = distinct !DILexicalBlock(scope: !14197, file: !6239, line: 2261, column: 6)
!14322 = !DILocation(line: 2261, column: 32, scope: !14321)
!14323 = !DILocation(line: 2261, column: 6, scope: !14321)
!14324 = !DILocation(line: 2261, column: 6, scope: !14197)
!14325 = !DILocation(line: 2263, column: 8, scope: !14321)
!14326 = !DILocation(line: 2263, column: 16, scope: !14321)
!14327 = !DILocation(line: 2262, column: 15, scope: !14321)
!14328 = !DILocation(line: 2262, column: 3, scope: !14321)
!14329 = !DILocation(line: 2262, column: 22, scope: !14321)
!14330 = !DILocation(line: 2262, column: 27, scope: !14321)
!14331 = !DILocation(line: 2263, column: 5, scope: !14321)
!14332 = !DILocation(line: 2261, column: 39, scope: !14321)
!14333 = !DILabel(scope: !14197, name: "done", file: !6239, line: 2265)
!14334 = !DILocation(line: 2265, column: 1, scope: !14197)
!14335 = !DILocation(line: 2266, column: 2, scope: !14197)
!14336 = !DILocation(line: 2266, column: 8, scope: !14197)
!14337 = !DILocation(line: 2266, column: 12, scope: !14197)
!14338 = !DILocation(line: 2269, column: 18, scope: !14197)
!14339 = !DILocation(line: 2269, column: 24, scope: !14197)
!14340 = !DILocation(line: 2269, column: 36, scope: !14197)
!14341 = !DILocation(line: 2269, column: 44, scope: !14197)
!14342 = !DILocation(line: 2269, column: 2, scope: !14197)
!14343 = !DILocation(line: 2272, column: 18, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !14197, file: !6239, line: 2272, column: 6)
!14345 = !DILocation(line: 2272, column: 26, scope: !14344)
!14346 = !DILocation(line: 2272, column: 6, scope: !14344)
!14347 = !DILocation(line: 2272, column: 6, scope: !14197)
!14348 = !DILocation(line: 2273, column: 26, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14344, file: !6239, line: 2272, column: 36)
!14350 = !DILocation(line: 2273, column: 34, scope: !14349)
!14351 = !DILocation(line: 2274, column: 6, scope: !14349)
!14352 = !DILocation(line: 2274, column: 12, scope: !14349)
!14353 = !DILocation(line: 2273, column: 3, scope: !14349)
!14354 = !DILocation(line: 2275, column: 19, scope: !14349)
!14355 = !DILocation(line: 2275, column: 3, scope: !14349)
!14356 = !DILocation(line: 2276, column: 2, scope: !14349)
!14357 = !DILocation(line: 2278, column: 9, scope: !14197)
!14358 = !DILocation(line: 2278, column: 2, scope: !14197)
!14359 = distinct !DISubprogram(name: "ehci_moschip_read_frame_index", scope: !3, file: !3, line: 110, type: !13986, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!14360 = !DILocalVariable(name: "ehci", arg: 1, scope: !14359, file: !3, line: 110, type: !5814)
!14361 = !DILocation(line: 110, column: 64, scope: !14359)
!14362 = !DILocalVariable(name: "uf", scope: !14359, file: !3, line: 112, type: !7)
!14363 = !DILocation(line: 112, column: 11, scope: !14359)
!14364 = !DILocation(line: 114, column: 18, scope: !14359)
!14365 = !DILocation(line: 114, column: 25, scope: !14359)
!14366 = !DILocation(line: 114, column: 31, scope: !14359)
!14367 = !DILocation(line: 114, column: 37, scope: !14359)
!14368 = !DILocation(line: 114, column: 7, scope: !14359)
!14369 = !DILocation(line: 114, column: 5, scope: !14359)
!14370 = !DILocation(line: 115, column: 6, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14359, file: !3, line: 115, column: 6)
!14372 = !DILocation(line: 115, column: 6, scope: !14359)
!14373 = !DILocation(line: 116, column: 19, scope: !14371)
!14374 = !DILocation(line: 116, column: 26, scope: !14371)
!14375 = !DILocation(line: 116, column: 32, scope: !14371)
!14376 = !DILocation(line: 116, column: 38, scope: !14371)
!14377 = !DILocation(line: 116, column: 8, scope: !14371)
!14378 = !DILocation(line: 116, column: 6, scope: !14371)
!14379 = !DILocation(line: 116, column: 3, scope: !14371)
!14380 = !DILocation(line: 117, column: 9, scope: !14359)
!14381 = !DILocation(line: 117, column: 2, scope: !14359)
!14382 = distinct !DISubprogram(name: "list_is_singular", scope: !9075, file: !9075, line: 358, type: !10171, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!14383 = !DILocalVariable(name: "head", arg: 1, scope: !14382, file: !9075, line: 358, type: !10173)
!14384 = !DILocation(line: 358, column: 60, scope: !14382)
!14385 = !DILocation(line: 360, column: 21, scope: !14382)
!14386 = !DILocation(line: 360, column: 10, scope: !14382)
!14387 = !DILocation(line: 360, column: 27, scope: !14382)
!14388 = !DILocation(line: 360, column: 31, scope: !14382)
!14389 = !DILocation(line: 360, column: 37, scope: !14382)
!14390 = !DILocation(line: 360, column: 45, scope: !14382)
!14391 = !DILocation(line: 360, column: 51, scope: !14382)
!14392 = !DILocation(line: 360, column: 42, scope: !14382)
!14393 = !DILocation(line: 0, scope: !14382)
!14394 = !DILocation(line: 360, column: 2, scope: !14382)
!14395 = distinct !DISubprogram(name: "ehci_qh_alloc", scope: !8545, file: !8545, line: 67, type: !14396, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!14396 = !DISubroutineType(types: !14397)
!14397 = !{!5884, !5814, !946}
!14398 = !DILocalVariable(name: "ehci", arg: 1, scope: !14395, file: !8545, line: 67, type: !5814)
!14399 = !DILocation(line: 67, column: 56, scope: !14395)
!14400 = !DILocalVariable(name: "flags", arg: 2, scope: !14395, file: !8545, line: 67, type: !946)
!14401 = !DILocation(line: 67, column: 68, scope: !14395)
!14402 = !DILocalVariable(name: "qh", scope: !14395, file: !8545, line: 69, type: !5884)
!14403 = !DILocation(line: 69, column: 19, scope: !14395)
!14404 = !DILocalVariable(name: "dma", scope: !14395, file: !8545, line: 70, type: !2064)
!14405 = !DILocation(line: 70, column: 14, scope: !14395)
!14406 = !DILocation(line: 72, column: 7, scope: !14395)
!14407 = !DILocation(line: 72, column: 5, scope: !14395)
!14408 = !DILocation(line: 73, column: 7, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14395, file: !8545, line: 73, column: 6)
!14410 = !DILocation(line: 73, column: 6, scope: !14395)
!14411 = !DILocation(line: 74, column: 3, scope: !14409)
!14412 = !DILocation(line: 76, column: 18, scope: !14395)
!14413 = !DILocation(line: 76, column: 24, scope: !14395)
!14414 = !DILocation(line: 76, column: 33, scope: !14395)
!14415 = !DILocation(line: 76, column: 3, scope: !14395)
!14416 = !DILocation(line: 75, column: 11, scope: !14395)
!14417 = !DILocation(line: 75, column: 2, scope: !14395)
!14418 = !DILocation(line: 75, column: 6, scope: !14395)
!14419 = !DILocation(line: 75, column: 9, scope: !14395)
!14420 = !DILocation(line: 77, column: 7, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14395, file: !8545, line: 77, column: 6)
!14422 = !DILocation(line: 77, column: 11, scope: !14421)
!14423 = !DILocation(line: 77, column: 6, scope: !14395)
!14424 = !DILocation(line: 78, column: 3, scope: !14421)
!14425 = !DILocation(line: 79, column: 9, scope: !14395)
!14426 = !DILocation(line: 79, column: 13, scope: !14395)
!14427 = !DILocation(line: 79, column: 2, scope: !14395)
!14428 = !DILocation(line: 80, column: 15, scope: !14395)
!14429 = !DILocation(line: 80, column: 2, scope: !14395)
!14430 = !DILocation(line: 80, column: 6, scope: !14395)
!14431 = !DILocation(line: 80, column: 13, scope: !14395)
!14432 = !DILocation(line: 82, column: 19, scope: !14395)
!14433 = !DILocation(line: 82, column: 23, scope: !14395)
!14434 = !DILocation(line: 82, column: 2, scope: !14395)
!14435 = !DILocation(line: 83, column: 18, scope: !14395)
!14436 = !DILocation(line: 83, column: 22, scope: !14395)
!14437 = !DILocation(line: 83, column: 2, scope: !14395)
!14438 = !DILocation(line: 86, column: 30, scope: !14395)
!14439 = !DILocation(line: 86, column: 36, scope: !14395)
!14440 = !DILocation(line: 86, column: 14, scope: !14395)
!14441 = !DILocation(line: 86, column: 2, scope: !14395)
!14442 = !DILocation(line: 86, column: 6, scope: !14395)
!14443 = !DILocation(line: 86, column: 12, scope: !14395)
!14444 = !DILocation(line: 87, column: 6, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14395, file: !8545, line: 87, column: 6)
!14446 = !DILocation(line: 87, column: 10, scope: !14445)
!14447 = !DILocation(line: 87, column: 16, scope: !14445)
!14448 = !DILocation(line: 87, column: 6, scope: !14395)
!14449 = !DILocation(line: 89, column: 3, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14445, file: !8545, line: 87, column: 25)
!14451 = !DILocation(line: 87, column: 19, scope: !14445)
!14452 = !DILabel(scope: !14395, name: "done", file: !8545, line: 91)
!14453 = !DILocation(line: 91, column: 1, scope: !14395)
!14454 = !DILocation(line: 92, column: 9, scope: !14395)
!14455 = !DILocation(line: 92, column: 2, scope: !14395)
!14456 = !DILabel(scope: !14395, name: "fail1", file: !8545, line: 93)
!14457 = !DILocation(line: 93, column: 1, scope: !14395)
!14458 = !DILocation(line: 94, column: 16, scope: !14395)
!14459 = !DILocation(line: 94, column: 22, scope: !14395)
!14460 = !DILocation(line: 94, column: 31, scope: !14395)
!14461 = !DILocation(line: 94, column: 35, scope: !14395)
!14462 = !DILocation(line: 94, column: 39, scope: !14395)
!14463 = !DILocation(line: 94, column: 43, scope: !14395)
!14464 = !DILocation(line: 94, column: 2, scope: !14395)
!14465 = !DILabel(scope: !14395, name: "fail", file: !8545, line: 95)
!14466 = !DILocation(line: 95, column: 1, scope: !14395)
!14467 = !DILocation(line: 96, column: 8, scope: !14395)
!14468 = !DILocation(line: 96, column: 2, scope: !14395)
!14469 = !DILocation(line: 97, column: 2, scope: !14395)
!14470 = !DILocation(line: 98, column: 1, scope: !14395)
!14471 = distinct !DISubprogram(name: "dma_alloc_coherent", scope: !14472, file: !14472, line: 392, type: !14473, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!14472 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!14473 = !DISubroutineType(types: !14474)
!14474 = !{!341, !349, !462, !14475, !946}
!14475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!14476 = !DILocalVariable(name: "dev", arg: 1, scope: !14471, file: !14472, line: 392, type: !349)
!14477 = !DILocation(line: 392, column: 55, scope: !14471)
!14478 = !DILocalVariable(name: "size", arg: 2, scope: !14471, file: !14472, line: 392, type: !462)
!14479 = !DILocation(line: 392, column: 67, scope: !14471)
!14480 = !DILocalVariable(name: "dma_handle", arg: 3, scope: !14471, file: !14472, line: 393, type: !14475)
!14481 = !DILocation(line: 393, column: 15, scope: !14471)
!14482 = !DILocalVariable(name: "gfp", arg: 4, scope: !14471, file: !14472, line: 393, type: !946)
!14483 = !DILocation(line: 393, column: 33, scope: !14471)
!14484 = !DILocation(line: 396, column: 25, scope: !14471)
!14485 = !DILocation(line: 396, column: 30, scope: !14471)
!14486 = !DILocation(line: 396, column: 36, scope: !14471)
!14487 = !DILocation(line: 396, column: 48, scope: !14471)
!14488 = !DILocation(line: 397, column: 5, scope: !14471)
!14489 = !DILocation(line: 397, column: 9, scope: !14471)
!14490 = !DILocation(line: 397, column: 4, scope: !14471)
!14491 = !DILocation(line: 396, column: 9, scope: !14471)
!14492 = !DILocation(line: 396, column: 2, scope: !14471)
!14493 = distinct !DISubprogram(name: "ehci_qtd_alloc", scope: !8545, file: !8545, line: 36, type: !14494, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!14494 = !DISubroutineType(types: !14495)
!14495 = !{!5993, !5814, !946}
!14496 = !DILocalVariable(name: "ehci", arg: 1, scope: !14493, file: !8545, line: 36, type: !5814)
!14497 = !DILocation(line: 36, column: 58, scope: !14493)
!14498 = !DILocalVariable(name: "flags", arg: 2, scope: !14493, file: !8545, line: 36, type: !946)
!14499 = !DILocation(line: 36, column: 70, scope: !14493)
!14500 = !DILocalVariable(name: "qtd", scope: !14493, file: !8545, line: 38, type: !5993)
!14501 = !DILocation(line: 38, column: 20, scope: !14493)
!14502 = !DILocalVariable(name: "dma", scope: !14493, file: !8545, line: 39, type: !2064)
!14503 = !DILocation(line: 39, column: 14, scope: !14493)
!14504 = !DILocation(line: 41, column: 24, scope: !14493)
!14505 = !DILocation(line: 41, column: 30, scope: !14493)
!14506 = !DILocation(line: 41, column: 40, scope: !14493)
!14507 = !DILocation(line: 41, column: 8, scope: !14493)
!14508 = !DILocation(line: 41, column: 6, scope: !14493)
!14509 = !DILocation(line: 42, column: 6, scope: !14510)
!14510 = distinct !DILexicalBlock(scope: !14493, file: !8545, line: 42, column: 6)
!14511 = !DILocation(line: 42, column: 10, scope: !14510)
!14512 = !DILocation(line: 42, column: 6, scope: !14493)
!14513 = !DILocation(line: 43, column: 17, scope: !14514)
!14514 = distinct !DILexicalBlock(scope: !14510, file: !8545, line: 42, column: 19)
!14515 = !DILocation(line: 43, column: 23, scope: !14514)
!14516 = !DILocation(line: 43, column: 28, scope: !14514)
!14517 = !DILocation(line: 43, column: 3, scope: !14514)
!14518 = !DILocation(line: 44, column: 2, scope: !14514)
!14519 = !DILocation(line: 45, column: 9, scope: !14493)
!14520 = !DILocation(line: 45, column: 2, scope: !14493)
!14521 = distinct !DISubprogram(name: "ehci_qtd_init", scope: !8545, file: !8545, line: 25, type: !14522, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!14522 = !DISubroutineType(types: !14523)
!14523 = !{null, !5814, !5993, !2064}
!14524 = !DILocalVariable(name: "ehci", arg: 1, scope: !14521, file: !8545, line: 25, type: !5814)
!14525 = !DILocation(line: 25, column: 51, scope: !14521)
!14526 = !DILocalVariable(name: "qtd", arg: 2, scope: !14521, file: !8545, line: 25, type: !5993)
!14527 = !DILocation(line: 25, column: 74, scope: !14521)
!14528 = !DILocalVariable(name: "dma", arg: 3, scope: !14521, file: !8545, line: 26, type: !2064)
!14529 = !DILocation(line: 26, column: 18, scope: !14521)
!14530 = !DILocation(line: 28, column: 10, scope: !14521)
!14531 = !DILocation(line: 28, column: 2, scope: !14521)
!14532 = !DILocation(line: 29, column: 17, scope: !14521)
!14533 = !DILocation(line: 29, column: 2, scope: !14521)
!14534 = !DILocation(line: 29, column: 7, scope: !14521)
!14535 = !DILocation(line: 29, column: 15, scope: !14521)
!14536 = !DILocation(line: 30, column: 30, scope: !14521)
!14537 = !DILocation(line: 30, column: 18, scope: !14521)
!14538 = !DILocation(line: 30, column: 2, scope: !14521)
!14539 = !DILocation(line: 30, column: 7, scope: !14521)
!14540 = !DILocation(line: 30, column: 16, scope: !14521)
!14541 = !DILocation(line: 31, column: 17, scope: !14521)
!14542 = !DILocation(line: 31, column: 2, scope: !14521)
!14543 = !DILocation(line: 31, column: 7, scope: !14521)
!14544 = !DILocation(line: 31, column: 15, scope: !14521)
!14545 = !DILocation(line: 32, column: 21, scope: !14521)
!14546 = !DILocation(line: 32, column: 2, scope: !14521)
!14547 = !DILocation(line: 32, column: 7, scope: !14521)
!14548 = !DILocation(line: 32, column: 19, scope: !14521)
!14549 = !DILocation(line: 33, column: 19, scope: !14521)
!14550 = !DILocation(line: 33, column: 24, scope: !14521)
!14551 = !DILocation(line: 33, column: 2, scope: !14521)
!14552 = !DILocation(line: 34, column: 1, scope: !14521)
!14553 = distinct !DISubprogram(name: "qh_destroy", scope: !8545, file: !8545, line: 54, type: !10193, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!14554 = !DILocalVariable(name: "ehci", arg: 1, scope: !14553, file: !8545, line: 54, type: !5814)
!14555 = !DILocation(line: 54, column: 41, scope: !14553)
!14556 = !DILocalVariable(name: "qh", arg: 2, scope: !14553, file: !8545, line: 54, type: !5884)
!14557 = !DILocation(line: 54, column: 63, scope: !14553)
!14558 = !DILocation(line: 57, column: 20, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14553, file: !8545, line: 57, column: 6)
!14560 = !DILocation(line: 57, column: 24, scope: !14559)
!14561 = !DILocation(line: 57, column: 7, scope: !14559)
!14562 = !DILocation(line: 57, column: 34, scope: !14559)
!14563 = !DILocation(line: 57, column: 37, scope: !14559)
!14564 = !DILocation(line: 57, column: 41, scope: !14559)
!14565 = !DILocation(line: 57, column: 49, scope: !14559)
!14566 = !DILocation(line: 57, column: 6, scope: !14553)
!14567 = !DILocation(line: 59, column: 3, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14559, file: !8545, line: 57, column: 54)
!14569 = !DILocation(line: 59, column: 3, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14568, file: !8545, line: 59, column: 3)
!14571 = !DILocation(line: 59, column: 3, scope: !14572)
!14572 = distinct !DILexicalBlock(scope: !14570, file: !8545, line: 59, column: 3)
!14573 = !DILocation(line: 59, column: 3, scope: !14574)
!14574 = distinct !DILexicalBlock(scope: !14570, file: !8545, line: 59, column: 3)
!14575 = !{i32 -2139999900, i32 -2139999871, i32 -2139999825, i32 -2139999767, i32 -2139999713, i32 -2139999659, i32 -2139999604, i32 -2139999573}
!14576 = !DILocation(line: 59, column: 3, scope: !14577)
!14577 = distinct !DILexicalBlock(scope: !14578, file: !8545, line: 59, column: 3)
!14578 = distinct !DILexicalBlock(scope: !14570, file: !8545, line: 59, column: 3)
!14579 = !{i32 -2139999124, i32 -2139999117, i32 -2139999063, i32 -2139999032, i32 -2139999002}
!14580 = !DILocation(line: 59, column: 3, scope: !14578)
!14581 = !DILocation(line: 60, column: 2, scope: !14568)
!14582 = !DILocation(line: 61, column: 6, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14553, file: !8545, line: 61, column: 6)
!14584 = !DILocation(line: 61, column: 10, scope: !14583)
!14585 = !DILocation(line: 61, column: 6, scope: !14553)
!14586 = !DILocation(line: 62, column: 18, scope: !14583)
!14587 = !DILocation(line: 62, column: 24, scope: !14583)
!14588 = !DILocation(line: 62, column: 28, scope: !14583)
!14589 = !DILocation(line: 62, column: 3, scope: !14583)
!14590 = !DILocation(line: 63, column: 16, scope: !14553)
!14591 = !DILocation(line: 63, column: 22, scope: !14553)
!14592 = !DILocation(line: 63, column: 31, scope: !14553)
!14593 = !DILocation(line: 63, column: 35, scope: !14553)
!14594 = !DILocation(line: 63, column: 39, scope: !14553)
!14595 = !DILocation(line: 63, column: 43, scope: !14553)
!14596 = !DILocation(line: 63, column: 2, scope: !14553)
!14597 = !DILocation(line: 64, column: 8, scope: !14553)
!14598 = !DILocation(line: 64, column: 2, scope: !14553)
!14599 = !DILocation(line: 65, column: 1, scope: !14553)
!14600 = distinct !DISubprogram(name: "dma_free_coherent", scope: !14472, file: !14472, line: 400, type: !14601, scopeLine: 402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!14601 = !DISubroutineType(types: !14602)
!14602 = !{null, !349, !462, !341, !2064}
!14603 = !DILocalVariable(name: "dev", arg: 1, scope: !14600, file: !14472, line: 400, type: !349)
!14604 = !DILocation(line: 400, column: 53, scope: !14600)
!14605 = !DILocalVariable(name: "size", arg: 2, scope: !14600, file: !14472, line: 400, type: !462)
!14606 = !DILocation(line: 400, column: 65, scope: !14600)
!14607 = !DILocalVariable(name: "cpu_addr", arg: 3, scope: !14600, file: !14472, line: 401, type: !341)
!14608 = !DILocation(line: 401, column: 9, scope: !14600)
!14609 = !DILocalVariable(name: "dma_handle", arg: 4, scope: !14600, file: !14472, line: 401, type: !2064)
!14610 = !DILocation(line: 401, column: 30, scope: !14600)
!14611 = !DILocation(line: 403, column: 24, scope: !14600)
!14612 = !DILocation(line: 403, column: 29, scope: !14600)
!14613 = !DILocation(line: 403, column: 35, scope: !14600)
!14614 = !DILocation(line: 403, column: 45, scope: !14600)
!14615 = !DILocation(line: 403, column: 9, scope: !14600)
!14616 = !DILocation(line: 403, column: 2, scope: !14600)
!14617 = distinct !DISubprogram(name: "ehci_irq", scope: !3, file: !3, line: 691, type: !5416, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!14618 = !DILocation(line: 363, column: 74, scope: !6728, inlinedAt: !14619)
!14619 = distinct !DILocation(line: 803, column: 5, scope: !14620)
!14620 = distinct !DILexicalBlock(scope: !14621, file: !3, line: 780, column: 15)
!14621 = distinct !DILexicalBlock(scope: !14622, file: !3, line: 765, column: 24)
!14622 = distinct !DILexicalBlock(scope: !14617, file: !3, line: 765, column: 6)
!14623 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !14624)
!14624 = distinct !DILocation(line: 722, column: 3, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14626, file: !3, line: 721, column: 68)
!14626 = distinct !DILexicalBlock(scope: !14617, file: !3, line: 721, column: 6)
!14627 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !14624)
!14628 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !14629)
!14629 = distinct !DILocation(line: 833, column: 2, scope: !14617)
!14630 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !14629)
!14631 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !14632)
!14632 = distinct !DILocation(line: 704, column: 2, scope: !14633)
!14633 = distinct !DILexicalBlock(scope: !14634, file: !3, line: 704, column: 2)
!14634 = distinct !DILexicalBlock(scope: !14635, file: !3, line: 704, column: 2)
!14635 = distinct !DILexicalBlock(scope: !14636, file: !3, line: 704, column: 2)
!14636 = distinct !DILexicalBlock(scope: !14637, file: !3, line: 704, column: 2)
!14637 = distinct !DILexicalBlock(scope: !14617, file: !3, line: 704, column: 2)
!14638 = !DILocalVariable(name: "hcd", arg: 1, scope: !14617, file: !3, line: 691, type: !342)
!14639 = !DILocation(line: 691, column: 46, scope: !14617)
!14640 = !DILocalVariable(name: "ehci", scope: !14617, file: !3, line: 693, type: !5814)
!14641 = !DILocation(line: 693, column: 20, scope: !14617)
!14642 = !DILocation(line: 693, column: 40, scope: !14617)
!14643 = !DILocation(line: 693, column: 27, scope: !14617)
!14644 = !DILocalVariable(name: "status", scope: !14617, file: !3, line: 694, type: !303)
!14645 = !DILocation(line: 694, column: 8, scope: !14617)
!14646 = !DILocalVariable(name: "masked_status", scope: !14617, file: !3, line: 694, type: !303)
!14647 = !DILocation(line: 694, column: 16, scope: !14617)
!14648 = !DILocalVariable(name: "pcd_status", scope: !14617, file: !3, line: 694, type: !303)
!14649 = !DILocation(line: 694, column: 31, scope: !14617)
!14650 = !DILocalVariable(name: "cmd", scope: !14617, file: !3, line: 694, type: !303)
!14651 = !DILocation(line: 694, column: 47, scope: !14617)
!14652 = !DILocalVariable(name: "bh", scope: !14617, file: !3, line: 695, type: !401)
!14653 = !DILocation(line: 695, column: 8, scope: !14617)
!14654 = !DILocalVariable(name: "flags", scope: !14617, file: !3, line: 696, type: !465)
!14655 = !DILocation(line: 696, column: 17, scope: !14617)
!14656 = !DILocation(line: 704, column: 2, scope: !14617)
!14657 = !DILocation(line: 704, column: 2, scope: !14637)
!14658 = !DILocalVariable(name: "__dummy", scope: !14659, file: !3, line: 704, type: !465)
!14659 = distinct !DILexicalBlock(scope: !14636, file: !3, line: 704, column: 2)
!14660 = !DILocation(line: 704, column: 2, scope: !14659)
!14661 = !DILocalVariable(name: "__dummy2", scope: !14659, file: !3, line: 704, type: !465)
!14662 = !DILocation(line: 704, column: 2, scope: !14636)
!14663 = !DILocation(line: 704, column: 2, scope: !14635)
!14664 = !DILocation(line: 704, column: 2, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14635, file: !3, line: 704, column: 2)
!14666 = !DILocalVariable(name: "__dummy", scope: !14667, file: !3, line: 704, type: !465)
!14667 = distinct !DILexicalBlock(scope: !14668, file: !3, line: 704, column: 2)
!14668 = distinct !DILexicalBlock(scope: !14665, file: !3, line: 704, column: 2)
!14669 = !DILocation(line: 704, column: 2, scope: !14667)
!14670 = !DILocalVariable(name: "__dummy2", scope: !14667, file: !3, line: 704, type: !465)
!14671 = !DILocation(line: 704, column: 2, scope: !14668)
!14672 = !DILocation(line: 704, column: 2, scope: !14634)
!14673 = !{i32 -2139771336}
!14674 = !DILocation(line: 704, column: 2, scope: !14633)
!14675 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !14632)
!14676 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !14632)
!14677 = !DILocation(line: 706, column: 22, scope: !14617)
!14678 = !DILocation(line: 706, column: 29, scope: !14617)
!14679 = !DILocation(line: 706, column: 35, scope: !14617)
!14680 = !DILocation(line: 706, column: 41, scope: !14617)
!14681 = !DILocation(line: 706, column: 11, scope: !14617)
!14682 = !DILocation(line: 706, column: 9, scope: !14617)
!14683 = !DILocation(line: 709, column: 6, scope: !14684)
!14684 = distinct !DILexicalBlock(scope: !14617, file: !3, line: 709, column: 6)
!14685 = !DILocation(line: 709, column: 13, scope: !14684)
!14686 = !DILocation(line: 709, column: 6, scope: !14617)
!14687 = !DILocation(line: 711, column: 3, scope: !14688)
!14688 = distinct !DILexicalBlock(scope: !14684, file: !3, line: 709, column: 26)
!14689 = !DILocation(line: 718, column: 18, scope: !14617)
!14690 = !DILocation(line: 718, column: 25, scope: !14617)
!14691 = !DILocation(line: 718, column: 16, scope: !14617)
!14692 = !DILocation(line: 721, column: 7, scope: !14626)
!14693 = !DILocation(line: 721, column: 21, scope: !14626)
!14694 = !DILocation(line: 721, column: 24, scope: !14626)
!14695 = !DILocation(line: 721, column: 6, scope: !14617)
!14696 = !DILocation(line: 722, column: 27, scope: !14625)
!14697 = !DILocation(line: 722, column: 33, scope: !14625)
!14698 = !DILocation(line: 722, column: 39, scope: !14625)
!14699 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !14624)
!14700 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !14624)
!14701 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !14624)
!14702 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !14624)
!14703 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !14624)
!14704 = !DILocation(line: 723, column: 3, scope: !14625)
!14705 = !DILocation(line: 727, column: 14, scope: !14617)
!14706 = !DILocation(line: 727, column: 20, scope: !14617)
!14707 = !DILocation(line: 727, column: 36, scope: !14617)
!14708 = !DILocation(line: 727, column: 42, scope: !14617)
!14709 = !DILocation(line: 727, column: 48, scope: !14617)
!14710 = !DILocation(line: 727, column: 2, scope: !14617)
!14711 = !DILocation(line: 728, column: 19, scope: !14617)
!14712 = !DILocation(line: 728, column: 26, scope: !14617)
!14713 = !DILocation(line: 728, column: 32, scope: !14617)
!14714 = !DILocation(line: 728, column: 38, scope: !14617)
!14715 = !DILocation(line: 728, column: 8, scope: !14617)
!14716 = !DILocation(line: 728, column: 6, scope: !14617)
!14717 = !DILocation(line: 729, column: 5, scope: !14617)
!14718 = !DILocation(line: 732, column: 6, scope: !14719)
!14719 = distinct !DILexicalBlock(scope: !14617, file: !3, line: 732, column: 6)
!14720 = !DILocation(line: 732, column: 6, scope: !14617)
!14721 = !DILocation(line: 733, column: 7, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !14723, file: !3, line: 733, column: 7)
!14723 = distinct !DILexicalBlock(scope: !14719, file: !3, line: 732, column: 50)
!14724 = !DILocation(line: 733, column: 7, scope: !14723)
!14725 = !DILocation(line: 734, column: 4, scope: !14722)
!14726 = !DILocation(line: 734, column: 4, scope: !14727)
!14727 = distinct !DILexicalBlock(scope: !14722, file: !3, line: 734, column: 4)
!14728 = !DILocation(line: 736, column: 4, scope: !14722)
!14729 = !DILocation(line: 736, column: 4, scope: !14730)
!14730 = distinct !DILexicalBlock(scope: !14722, file: !3, line: 736, column: 4)
!14731 = !DILocation(line: 737, column: 6, scope: !14723)
!14732 = !DILocation(line: 738, column: 2, scope: !14723)
!14733 = !DILocation(line: 741, column: 6, scope: !14734)
!14734 = distinct !DILexicalBlock(scope: !14617, file: !3, line: 741, column: 6)
!14735 = !DILocation(line: 741, column: 13, scope: !14734)
!14736 = !DILocation(line: 741, column: 6, scope: !14617)
!14737 = !DILocation(line: 744, column: 3, scope: !14738)
!14738 = distinct !DILexicalBlock(scope: !14734, file: !3, line: 741, column: 24)
!14739 = !DILocation(line: 744, column: 9, scope: !14738)
!14740 = !DILocation(line: 744, column: 32, scope: !14738)
!14741 = !DILocation(line: 753, column: 7, scope: !14742)
!14742 = distinct !DILexicalBlock(scope: !14738, file: !3, line: 753, column: 7)
!14743 = !DILocation(line: 753, column: 13, scope: !14742)
!14744 = !DILocation(line: 753, column: 32, scope: !14742)
!14745 = !DILocation(line: 753, column: 7, scope: !14738)
!14746 = !DILocation(line: 754, column: 6, scope: !14742)
!14747 = !DILocation(line: 754, column: 12, scope: !14742)
!14748 = !DILocation(line: 754, column: 4, scope: !14742)
!14749 = !DILocation(line: 757, column: 7, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14738, file: !3, line: 757, column: 7)
!14751 = !DILocation(line: 757, column: 11, scope: !14750)
!14752 = !DILocation(line: 757, column: 7, scope: !14738)
!14753 = !DILocation(line: 758, column: 4, scope: !14750)
!14754 = !DILocation(line: 759, column: 7, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14738, file: !3, line: 759, column: 7)
!14756 = !DILocation(line: 759, column: 13, scope: !14755)
!14757 = !DILocation(line: 759, column: 7, scope: !14738)
!14758 = !DILocation(line: 760, column: 4, scope: !14755)
!14759 = !DILocation(line: 760, column: 4, scope: !14760)
!14760 = distinct !DILexicalBlock(scope: !14755, file: !3, line: 760, column: 4)
!14761 = !DILocation(line: 761, column: 17, scope: !14738)
!14762 = !DILocation(line: 761, column: 3, scope: !14738)
!14763 = !DILocation(line: 762, column: 2, scope: !14738)
!14764 = !DILocation(line: 765, column: 6, scope: !14622)
!14765 = !DILocation(line: 765, column: 13, scope: !14622)
!14766 = !DILocation(line: 765, column: 6, scope: !14617)
!14767 = !DILocalVariable(name: "i", scope: !14621, file: !3, line: 766, type: !7)
!14768 = !DILocation(line: 766, column: 12, scope: !14621)
!14769 = !DILocation(line: 766, column: 16, scope: !14621)
!14770 = !DILocalVariable(name: "ppcd", scope: !14621, file: !3, line: 767, type: !303)
!14771 = !DILocation(line: 767, column: 8, scope: !14621)
!14772 = !DILocation(line: 770, column: 16, scope: !14621)
!14773 = !DILocation(line: 770, column: 14, scope: !14621)
!14774 = !DILocation(line: 773, column: 7, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14621, file: !3, line: 773, column: 7)
!14776 = !DILocation(line: 773, column: 13, scope: !14775)
!14777 = !DILocation(line: 773, column: 22, scope: !14775)
!14778 = !DILocation(line: 773, column: 7, scope: !14621)
!14779 = !DILocation(line: 774, column: 28, scope: !14775)
!14780 = !DILocation(line: 774, column: 4, scope: !14775)
!14781 = !DILocation(line: 777, column: 7, scope: !14782)
!14782 = distinct !DILexicalBlock(scope: !14621, file: !3, line: 777, column: 7)
!14783 = !DILocation(line: 777, column: 13, scope: !14782)
!14784 = !DILocation(line: 777, column: 7, scope: !14621)
!14785 = !DILocation(line: 778, column: 11, scope: !14782)
!14786 = !DILocation(line: 778, column: 18, scope: !14782)
!14787 = !DILocation(line: 778, column: 9, scope: !14782)
!14788 = !DILocation(line: 778, column: 4, scope: !14782)
!14789 = !DILocation(line: 780, column: 3, scope: !14621)
!14790 = !DILocation(line: 780, column: 11, scope: !14621)
!14791 = !DILocalVariable(name: "pstatus", scope: !14620, file: !3, line: 781, type: !401)
!14792 = !DILocation(line: 781, column: 8, scope: !14620)
!14793 = !DILocation(line: 784, column: 10, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14620, file: !3, line: 784, column: 8)
!14795 = !DILocation(line: 784, column: 23, scope: !14794)
!14796 = !DILocation(line: 784, column: 20, scope: !14794)
!14797 = !DILocation(line: 784, column: 15, scope: !14794)
!14798 = !DILocation(line: 784, column: 8, scope: !14620)
!14799 = !DILocation(line: 785, column: 5, scope: !14794)
!14800 = distinct !{!14800, !14789, !14801}
!14801 = !DILocation(line: 808, column: 3, scope: !14621)
!14802 = !DILocation(line: 786, column: 25, scope: !14620)
!14803 = !DILocation(line: 787, column: 8, scope: !14620)
!14804 = !DILocation(line: 787, column: 14, scope: !14620)
!14805 = !DILocation(line: 787, column: 20, scope: !14620)
!14806 = !DILocation(line: 787, column: 32, scope: !14620)
!14807 = !DILocation(line: 786, column: 14, scope: !14620)
!14808 = !DILocation(line: 786, column: 12, scope: !14620)
!14809 = !DILocation(line: 789, column: 8, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14620, file: !3, line: 789, column: 8)
!14811 = !DILocation(line: 789, column: 16, scope: !14810)
!14812 = !DILocation(line: 789, column: 8, scope: !14620)
!14813 = !DILocation(line: 790, column: 5, scope: !14810)
!14814 = !DILocation(line: 791, column: 19, scope: !14815)
!14815 = distinct !DILexicalBlock(scope: !14620, file: !3, line: 791, column: 8)
!14816 = !DILocation(line: 791, column: 23, scope: !14815)
!14817 = !DILocation(line: 791, column: 29, scope: !14815)
!14818 = !DILocation(line: 791, column: 10, scope: !14815)
!14819 = !DILocation(line: 791, column: 46, scope: !14815)
!14820 = !DILocation(line: 792, column: 8, scope: !14815)
!14821 = !DILocation(line: 792, column: 16, scope: !14815)
!14822 = !DILocation(line: 792, column: 31, scope: !14815)
!14823 = !DILocation(line: 793, column: 9, scope: !14815)
!14824 = !DILocation(line: 793, column: 17, scope: !14815)
!14825 = !DILocation(line: 793, column: 34, scope: !14815)
!14826 = !DILocation(line: 794, column: 7, scope: !14815)
!14827 = !DILocation(line: 794, column: 15, scope: !14815)
!14828 = !DILocation(line: 794, column: 26, scope: !14815)
!14829 = !DILocation(line: 795, column: 6, scope: !14815)
!14830 = !DILocation(line: 795, column: 12, scope: !14815)
!14831 = !DILocation(line: 795, column: 23, scope: !14815)
!14832 = !DILocation(line: 795, column: 26, scope: !14815)
!14833 = !DILocation(line: 791, column: 8, scope: !14620)
!14834 = !DILocation(line: 796, column: 5, scope: !14815)
!14835 = !DILocation(line: 802, column: 26, scope: !14620)
!14836 = !DILocation(line: 365, column: 27, scope: !7031, inlinedAt: !14619)
!14837 = !DILocation(line: 365, column: 6, scope: !7031, inlinedAt: !14619)
!14838 = !DILocation(line: 365, column: 6, scope: !6728, inlinedAt: !14619)
!14839 = !DILocation(line: 366, column: 12, scope: !7035, inlinedAt: !14619)
!14840 = !DILocation(line: 366, column: 14, scope: !7035, inlinedAt: !14619)
!14841 = !DILocation(line: 366, column: 7, scope: !7036, inlinedAt: !14619)
!14842 = !DILocation(line: 367, column: 4, scope: !7035, inlinedAt: !14619)
!14843 = !DILocation(line: 368, column: 28, scope: !7036, inlinedAt: !14619)
!14844 = !DILocation(line: 368, column: 10, scope: !7036, inlinedAt: !14619)
!14845 = !DILocation(line: 368, column: 3, scope: !7036, inlinedAt: !14619)
!14846 = !DILocation(line: 370, column: 29, scope: !7044, inlinedAt: !14619)
!14847 = !DILocation(line: 370, column: 10, scope: !7044, inlinedAt: !14619)
!14848 = !DILocation(line: 370, column: 3, scope: !7044, inlinedAt: !14619)
!14849 = !DILocation(line: 372, column: 1, scope: !6728, inlinedAt: !14619)
!14850 = !DILocation(line: 802, column: 34, scope: !14620)
!14851 = !DILocation(line: 802, column: 4, scope: !14620)
!14852 = !DILocation(line: 802, column: 10, scope: !14620)
!14853 = !DILocation(line: 802, column: 21, scope: !14620)
!14854 = !DILocation(line: 802, column: 24, scope: !14620)
!14855 = !DILocation(line: 804, column: 12, scope: !14620)
!14856 = !DILocation(line: 804, column: 16, scope: !14620)
!14857 = !DILocation(line: 804, column: 22, scope: !14620)
!14858 = !DILocation(line: 804, column: 4, scope: !14620)
!14859 = !DILocation(line: 806, column: 31, scope: !14620)
!14860 = !DILocation(line: 806, column: 36, scope: !14620)
!14861 = !DILocation(line: 806, column: 42, scope: !14620)
!14862 = !DILocation(line: 806, column: 4, scope: !14620)
!14863 = !DILocation(line: 807, column: 15, scope: !14620)
!14864 = !DILocation(line: 807, column: 20, scope: !14620)
!14865 = !DILocation(line: 807, column: 30, scope: !14620)
!14866 = !DILocation(line: 807, column: 36, scope: !14620)
!14867 = !DILocation(line: 807, column: 47, scope: !14620)
!14868 = !DILocation(line: 807, column: 4, scope: !14620)
!14869 = !DILocation(line: 809, column: 2, scope: !14621)
!14870 = !DILocation(line: 812, column: 6, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14617, file: !3, line: 812, column: 6)
!14872 = !DILocation(line: 812, column: 6, scope: !14617)
!14873 = !DILocation(line: 813, column: 3, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14871, file: !3, line: 812, column: 44)
!14875 = !DILocation(line: 814, column: 11, scope: !14874)
!14876 = !DILocation(line: 814, column: 26, scope: !14874)
!14877 = !DILocation(line: 814, column: 3, scope: !14874)
!14878 = !DILocation(line: 815, column: 14, scope: !14874)
!14879 = !DILocation(line: 815, column: 29, scope: !14874)
!14880 = !DILocation(line: 815, column: 3, scope: !14874)
!14881 = !DILabel(scope: !14874, name: "dead", file: !3, line: 816)
!14882 = !DILocation(line: 816, column: 1, scope: !14874)
!14883 = !DILocation(line: 817, column: 15, scope: !14874)
!14884 = !DILocation(line: 817, column: 3, scope: !14874)
!14885 = !DILocation(line: 820, column: 3, scope: !14874)
!14886 = !DILocation(line: 820, column: 9, scope: !14874)
!14887 = !DILocation(line: 820, column: 18, scope: !14874)
!14888 = !DILocation(line: 821, column: 3, scope: !14874)
!14889 = !DILocation(line: 821, column: 9, scope: !14874)
!14890 = !DILocation(line: 821, column: 18, scope: !14874)
!14891 = !DILocation(line: 822, column: 3, scope: !14874)
!14892 = !DILocation(line: 822, column: 9, scope: !14874)
!14893 = !DILocation(line: 822, column: 17, scope: !14874)
!14894 = !DILocation(line: 823, column: 15, scope: !14874)
!14895 = !DILocation(line: 823, column: 21, scope: !14874)
!14896 = !DILocation(line: 823, column: 27, scope: !14874)
!14897 = !DILocation(line: 823, column: 37, scope: !14874)
!14898 = !DILocation(line: 823, column: 43, scope: !14874)
!14899 = !DILocation(line: 823, column: 49, scope: !14874)
!14900 = !DILocation(line: 823, column: 3, scope: !14874)
!14901 = !DILocation(line: 824, column: 15, scope: !14874)
!14902 = !DILocation(line: 824, column: 25, scope: !14874)
!14903 = !DILocation(line: 824, column: 31, scope: !14874)
!14904 = !DILocation(line: 824, column: 37, scope: !14874)
!14905 = !DILocation(line: 824, column: 3, scope: !14874)
!14906 = !DILocation(line: 825, column: 32, scope: !14874)
!14907 = !DILocation(line: 825, column: 3, scope: !14874)
!14908 = !DILocation(line: 828, column: 6, scope: !14874)
!14909 = !DILocation(line: 829, column: 2, scope: !14874)
!14910 = !DILocation(line: 831, column: 6, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14617, file: !3, line: 831, column: 6)
!14912 = !DILocation(line: 831, column: 6, scope: !14617)
!14913 = !DILocation(line: 832, column: 14, scope: !14911)
!14914 = !DILocation(line: 832, column: 3, scope: !14911)
!14915 = !DILocation(line: 833, column: 26, scope: !14617)
!14916 = !DILocation(line: 833, column: 32, scope: !14617)
!14917 = !DILocation(line: 833, column: 38, scope: !14617)
!14918 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !14629)
!14919 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !14629)
!14920 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !14629)
!14921 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !14629)
!14922 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !14629)
!14923 = !DILocation(line: 834, column: 6, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14617, file: !3, line: 834, column: 6)
!14925 = !DILocation(line: 834, column: 6, scope: !14617)
!14926 = !DILocation(line: 835, column: 26, scope: !14924)
!14927 = !DILocation(line: 835, column: 3, scope: !14924)
!14928 = !DILocation(line: 836, column: 2, scope: !14617)
!14929 = !DILocation(line: 837, column: 1, scope: !14617)
!14930 = distinct !DISubprogram(name: "ehci_run", scope: !3, file: !3, line: 572, type: !5422, scopeLine: 573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!14931 = !DILocalVariable(name: "hcd", arg: 1, scope: !14930, file: !3, line: 572, type: !342)
!14932 = !DILocation(line: 572, column: 38, scope: !14930)
!14933 = !DILocalVariable(name: "ehci", scope: !14930, file: !3, line: 574, type: !5814)
!14934 = !DILocation(line: 574, column: 20, scope: !14930)
!14935 = !DILocation(line: 574, column: 40, scope: !14930)
!14936 = !DILocation(line: 574, column: 27, scope: !14930)
!14937 = !DILocalVariable(name: "temp", scope: !14930, file: !3, line: 575, type: !303)
!14938 = !DILocation(line: 575, column: 8, scope: !14930)
!14939 = !DILocalVariable(name: "hcc_params", scope: !14930, file: !3, line: 576, type: !303)
!14940 = !DILocation(line: 576, column: 8, scope: !14930)
!14941 = !DILocation(line: 578, column: 2, scope: !14930)
!14942 = !DILocation(line: 578, column: 7, scope: !14930)
!14943 = !DILocation(line: 578, column: 24, scope: !14930)
!14944 = !DILocation(line: 582, column: 14, scope: !14930)
!14945 = !DILocation(line: 582, column: 20, scope: !14930)
!14946 = !DILocation(line: 582, column: 26, scope: !14930)
!14947 = !DILocation(line: 582, column: 41, scope: !14930)
!14948 = !DILocation(line: 582, column: 47, scope: !14930)
!14949 = !DILocation(line: 582, column: 53, scope: !14930)
!14950 = !DILocation(line: 582, column: 2, scope: !14930)
!14951 = !DILocation(line: 583, column: 14, scope: !14930)
!14952 = !DILocation(line: 583, column: 25, scope: !14930)
!14953 = !DILocation(line: 583, column: 31, scope: !14930)
!14954 = !DILocation(line: 583, column: 38, scope: !14930)
!14955 = !DILocation(line: 583, column: 20, scope: !14930)
!14956 = !DILocation(line: 583, column: 47, scope: !14930)
!14957 = !DILocation(line: 583, column: 53, scope: !14930)
!14958 = !DILocation(line: 583, column: 59, scope: !14930)
!14959 = !DILocation(line: 583, column: 2, scope: !14930)
!14960 = !DILocation(line: 597, column: 26, scope: !14930)
!14961 = !DILocation(line: 597, column: 33, scope: !14930)
!14962 = !DILocation(line: 597, column: 39, scope: !14930)
!14963 = !DILocation(line: 597, column: 45, scope: !14930)
!14964 = !DILocation(line: 597, column: 15, scope: !14930)
!14965 = !DILocation(line: 597, column: 13, scope: !14930)
!14966 = !DILocation(line: 598, column: 6, scope: !14967)
!14967 = distinct !DILexicalBlock(scope: !14930, file: !3, line: 598, column: 6)
!14968 = !DILocation(line: 598, column: 6, scope: !14930)
!14969 = !DILocation(line: 599, column: 15, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14967, file: !3, line: 598, column: 34)
!14971 = !DILocation(line: 599, column: 25, scope: !14970)
!14972 = !DILocation(line: 599, column: 31, scope: !14970)
!14973 = !DILocation(line: 599, column: 37, scope: !14970)
!14974 = !DILocation(line: 599, column: 3, scope: !14970)
!14975 = !DILocation(line: 605, column: 2, scope: !14970)
!14976 = !DILocation(line: 610, column: 2, scope: !14930)
!14977 = !DILocation(line: 610, column: 8, scope: !14930)
!14978 = !DILocation(line: 610, column: 16, scope: !14930)
!14979 = !DILocation(line: 611, column: 2, scope: !14930)
!14980 = !DILocation(line: 611, column: 8, scope: !14930)
!14981 = !DILocation(line: 611, column: 16, scope: !14930)
!14982 = !DILocation(line: 612, column: 14, scope: !14930)
!14983 = !DILocation(line: 612, column: 20, scope: !14930)
!14984 = !DILocation(line: 612, column: 26, scope: !14930)
!14985 = !DILocation(line: 612, column: 36, scope: !14930)
!14986 = !DILocation(line: 612, column: 42, scope: !14930)
!14987 = !DILocation(line: 612, column: 48, scope: !14930)
!14988 = !DILocation(line: 612, column: 2, scope: !14930)
!14989 = !DILocation(line: 613, column: 11, scope: !14930)
!14990 = !DILocation(line: 613, column: 25, scope: !14930)
!14991 = !DILocation(line: 613, column: 31, scope: !14930)
!14992 = !DILocation(line: 613, column: 2, scope: !14930)
!14993 = !DILocation(line: 629, column: 2, scope: !14930)
!14994 = !DILocation(line: 630, column: 2, scope: !14930)
!14995 = !DILocation(line: 630, column: 8, scope: !14930)
!14996 = !DILocation(line: 630, column: 17, scope: !14930)
!14997 = !DILocation(line: 631, column: 14, scope: !14930)
!14998 = !DILocation(line: 631, column: 30, scope: !14930)
!14999 = !DILocation(line: 631, column: 36, scope: !14930)
!15000 = !DILocation(line: 631, column: 42, scope: !14930)
!15001 = !DILocation(line: 631, column: 2, scope: !14930)
!15002 = !DILocation(line: 632, column: 13, scope: !14930)
!15003 = !DILocation(line: 632, column: 20, scope: !14930)
!15004 = !DILocation(line: 632, column: 26, scope: !14930)
!15005 = !DILocation(line: 632, column: 32, scope: !14930)
!15006 = !DILocation(line: 632, column: 2, scope: !14930)
!15007 = !DILocation(line: 633, column: 2, scope: !14930)
!15008 = !DILocation(line: 634, column: 2, scope: !14930)
!15009 = !DILocation(line: 635, column: 31, scope: !14930)
!15010 = !DILocation(line: 635, column: 2, scope: !14930)
!15011 = !DILocation(line: 635, column: 8, scope: !14930)
!15012 = !DILocation(line: 635, column: 29, scope: !14930)
!15013 = !DILocation(line: 637, column: 9, scope: !14930)
!15014 = !DILocation(line: 637, column: 7, scope: !14930)
!15015 = !DILocation(line: 638, column: 2, scope: !14930)
!15016 = !DILocation(line: 644, column: 14, scope: !14930)
!15017 = !DILocation(line: 645, column: 8, scope: !14930)
!15018 = !DILocation(line: 645, column: 14, scope: !14930)
!15019 = !DILocation(line: 645, column: 20, scope: !14930)
!15020 = !DILocation(line: 644, column: 2, scope: !14930)
!15021 = !DILocation(line: 651, column: 21, scope: !14930)
!15022 = !DILocation(line: 651, column: 2, scope: !14930)
!15023 = !DILocation(line: 652, column: 21, scope: !14930)
!15024 = !DILocation(line: 652, column: 2, scope: !14930)
!15025 = !DILocation(line: 654, column: 2, scope: !14930)
!15026 = distinct !DISubprogram(name: "ehci_stop", scope: !3, file: !3, line: 419, type: !5432, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!15027 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !15028)
!15028 = distinct !DILocation(line: 442, column: 2, scope: !15026)
!15029 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !15030)
!15030 = distinct !DILocation(line: 440, column: 2, scope: !15026)
!15031 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !15032)
!15032 = distinct !DILocation(line: 429, column: 2, scope: !15026)
!15033 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !15034)
!15034 = distinct !DILocation(line: 427, column: 2, scope: !15026)
!15035 = !DILocalVariable(name: "hcd", arg: 1, scope: !15026, file: !3, line: 419, type: !342)
!15036 = !DILocation(line: 419, column: 40, scope: !15026)
!15037 = !DILocalVariable(name: "ehci", scope: !15026, file: !3, line: 421, type: !5814)
!15038 = !DILocation(line: 421, column: 20, scope: !15026)
!15039 = !DILocation(line: 421, column: 40, scope: !15026)
!15040 = !DILocation(line: 421, column: 27, scope: !15026)
!15041 = !DILocation(line: 427, column: 17, scope: !15026)
!15042 = !DILocation(line: 427, column: 23, scope: !15026)
!15043 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !15034)
!15044 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !15034)
!15045 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !15034)
!15046 = !DILocation(line: 428, column: 2, scope: !15026)
!15047 = !DILocation(line: 428, column: 8, scope: !15026)
!15048 = !DILocation(line: 428, column: 31, scope: !15026)
!15049 = !DILocation(line: 429, column: 19, scope: !15026)
!15050 = !DILocation(line: 429, column: 25, scope: !15026)
!15051 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !15032)
!15052 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !15032)
!15053 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !15032)
!15054 = !DILocation(line: 431, column: 15, scope: !15026)
!15055 = !DILocation(line: 431, column: 2, scope: !15026)
!15056 = !DILocation(line: 432, column: 26, scope: !15026)
!15057 = !DILocation(line: 432, column: 2, scope: !15026)
!15058 = !DILocation(line: 433, column: 14, scope: !15026)
!15059 = !DILocation(line: 433, column: 2, scope: !15026)
!15060 = !DILocation(line: 435, column: 18, scope: !15026)
!15061 = !DILocation(line: 435, column: 24, scope: !15026)
!15062 = !DILocation(line: 435, column: 2, scope: !15026)
!15063 = !DILocation(line: 436, column: 21, scope: !15026)
!15064 = !DILocation(line: 436, column: 2, scope: !15026)
!15065 = !DILocation(line: 437, column: 22, scope: !15026)
!15066 = !DILocation(line: 437, column: 2, scope: !15026)
!15067 = !DILocation(line: 440, column: 18, scope: !15026)
!15068 = !DILocation(line: 440, column: 24, scope: !15026)
!15069 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !15030)
!15070 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !15030)
!15071 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !15030)
!15072 = !DILocation(line: 441, column: 16, scope: !15026)
!15073 = !DILocation(line: 441, column: 2, scope: !15026)
!15074 = !DILocation(line: 442, column: 20, scope: !15026)
!15075 = !DILocation(line: 442, column: 26, scope: !15026)
!15076 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !15028)
!15077 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !15028)
!15078 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !15028)
!15079 = !DILocation(line: 443, column: 20, scope: !15026)
!15080 = !DILocation(line: 443, column: 2, scope: !15026)
!15081 = !DILocation(line: 445, column: 6, scope: !15082)
!15082 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 445, column: 6)
!15083 = !DILocation(line: 445, column: 12, scope: !15082)
!15084 = !DILocation(line: 445, column: 24, scope: !15082)
!15085 = !DILocation(line: 445, column: 6, scope: !15026)
!15086 = !DILocation(line: 446, column: 3, scope: !15082)
!15087 = !DILocation(line: 448, column: 14, scope: !15026)
!15088 = !DILocation(line: 449, column: 18, scope: !15026)
!15089 = !DILocation(line: 449, column: 25, scope: !15026)
!15090 = !DILocation(line: 449, column: 31, scope: !15026)
!15091 = !DILocation(line: 449, column: 37, scope: !15026)
!15092 = !DILocation(line: 449, column: 7, scope: !15026)
!15093 = !DILocation(line: 448, column: 2, scope: !15026)
!15094 = !DILocation(line: 450, column: 1, scope: !15026)
!15095 = distinct !DISubprogram(name: "ehci_shutdown", scope: !3, file: !3, line: 355, type: !5432, scopeLine: 356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!15096 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !15097)
!15097 = distinct !DILocation(line: 372, column: 2, scope: !15095)
!15098 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !15099)
!15099 = distinct !DILocation(line: 368, column: 2, scope: !15095)
!15100 = !DILocalVariable(name: "hcd", arg: 1, scope: !15095, file: !3, line: 355, type: !342)
!15101 = !DILocation(line: 355, column: 43, scope: !15095)
!15102 = !DILocalVariable(name: "ehci", scope: !15095, file: !3, line: 357, type: !5814)
!15103 = !DILocation(line: 357, column: 19, scope: !15095)
!15104 = !DILocation(line: 357, column: 38, scope: !15095)
!15105 = !DILocation(line: 357, column: 26, scope: !15095)
!15106 = !DILocation(line: 365, column: 7, scope: !15107)
!15107 = distinct !DILexicalBlock(scope: !15095, file: !3, line: 365, column: 6)
!15108 = !DILocation(line: 365, column: 13, scope: !15107)
!15109 = !DILocation(line: 365, column: 6, scope: !15095)
!15110 = !DILocation(line: 366, column: 3, scope: !15107)
!15111 = !DILocation(line: 368, column: 17, scope: !15095)
!15112 = !DILocation(line: 368, column: 23, scope: !15095)
!15113 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !15099)
!15114 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !15099)
!15115 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !15099)
!15116 = !DILocation(line: 369, column: 2, scope: !15095)
!15117 = !DILocation(line: 369, column: 8, scope: !15095)
!15118 = !DILocation(line: 369, column: 17, scope: !15095)
!15119 = !DILocation(line: 370, column: 2, scope: !15095)
!15120 = !DILocation(line: 370, column: 8, scope: !15095)
!15121 = !DILocation(line: 370, column: 17, scope: !15095)
!15122 = !DILocation(line: 371, column: 2, scope: !15095)
!15123 = !DILocation(line: 371, column: 8, scope: !15095)
!15124 = !DILocation(line: 371, column: 31, scope: !15095)
!15125 = !DILocation(line: 372, column: 19, scope: !15095)
!15126 = !DILocation(line: 372, column: 25, scope: !15095)
!15127 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !15097)
!15128 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !15097)
!15129 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !15097)
!15130 = !DILocation(line: 374, column: 26, scope: !15095)
!15131 = !DILocation(line: 374, column: 2, scope: !15095)
!15132 = !DILocation(line: 376, column: 18, scope: !15095)
!15133 = !DILocation(line: 376, column: 24, scope: !15095)
!15134 = !DILocation(line: 376, column: 2, scope: !15095)
!15135 = !DILocation(line: 377, column: 1, scope: !15095)
!15136 = distinct !DISubprogram(name: "ehci_get_frame", scope: !3, file: !3, line: 1058, type: !5422, scopeLine: 1059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!15137 = !DILocalVariable(name: "hcd", arg: 1, scope: !15136, file: !3, line: 1058, type: !342)
!15138 = !DILocation(line: 1058, column: 44, scope: !15136)
!15139 = !DILocalVariable(name: "ehci", scope: !15136, file: !3, line: 1060, type: !5814)
!15140 = !DILocation(line: 1060, column: 20, scope: !15136)
!15141 = !DILocation(line: 1060, column: 40, scope: !15136)
!15142 = !DILocation(line: 1060, column: 27, scope: !15136)
!15143 = !DILocation(line: 1061, column: 32, scope: !15136)
!15144 = !DILocation(line: 1061, column: 10, scope: !15136)
!15145 = !DILocation(line: 1061, column: 38, scope: !15136)
!15146 = !DILocation(line: 1061, column: 46, scope: !15136)
!15147 = !DILocation(line: 1061, column: 52, scope: !15136)
!15148 = !DILocation(line: 1061, column: 44, scope: !15136)
!15149 = !DILocation(line: 1061, column: 2, scope: !15136)
!15150 = distinct !DISubprogram(name: "ehci_urb_enqueue", scope: !3, file: !3, line: 853, type: !5438, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!15151 = !DILocalVariable(name: "hcd", arg: 1, scope: !15150, file: !3, line: 854, type: !342)
!15152 = !DILocation(line: 854, column: 18, scope: !15150)
!15153 = !DILocalVariable(name: "urb", arg: 2, scope: !15150, file: !3, line: 855, type: !5343)
!15154 = !DILocation(line: 855, column: 14, scope: !15150)
!15155 = !DILocalVariable(name: "mem_flags", arg: 3, scope: !15150, file: !3, line: 856, type: !946)
!15156 = !DILocation(line: 856, column: 9, scope: !15150)
!15157 = !DILocalVariable(name: "ehci", scope: !15150, file: !3, line: 858, type: !5814)
!15158 = !DILocation(line: 858, column: 20, scope: !15150)
!15159 = !DILocation(line: 858, column: 40, scope: !15150)
!15160 = !DILocation(line: 858, column: 27, scope: !15150)
!15161 = !DILocalVariable(name: "qtd_list", scope: !15150, file: !3, line: 859, type: !361)
!15162 = !DILocation(line: 859, column: 19, scope: !15150)
!15163 = !DILocation(line: 861, column: 2, scope: !15150)
!15164 = !DILocation(line: 863, column: 10, scope: !15150)
!15165 = !DILocation(line: 863, column: 2, scope: !15150)
!15166 = !DILocation(line: 868, column: 7, scope: !15167)
!15167 = distinct !DILexicalBlock(scope: !15168, file: !3, line: 868, column: 7)
!15168 = distinct !DILexicalBlock(scope: !15150, file: !3, line: 863, column: 36)
!15169 = !DILocation(line: 868, column: 12, scope: !15167)
!15170 = !DILocation(line: 868, column: 35, scope: !15167)
!15171 = !DILocation(line: 868, column: 7, scope: !15168)
!15172 = !DILocation(line: 869, column: 4, scope: !15167)
!15173 = !DILocation(line: 868, column: 47, scope: !15167)
!15174 = !DILocation(line: 873, column: 28, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !15168, file: !3, line: 873, column: 7)
!15176 = !DILocation(line: 873, column: 34, scope: !15175)
!15177 = !DILocation(line: 873, column: 50, scope: !15175)
!15178 = !DILocation(line: 873, column: 8, scope: !15175)
!15179 = !DILocation(line: 873, column: 7, scope: !15168)
!15180 = !DILocation(line: 874, column: 4, scope: !15175)
!15181 = !DILocation(line: 875, column: 23, scope: !15168)
!15182 = !DILocation(line: 875, column: 29, scope: !15168)
!15183 = !DILocation(line: 875, column: 45, scope: !15168)
!15184 = !DILocation(line: 875, column: 10, scope: !15168)
!15185 = !DILocation(line: 875, column: 3, scope: !15168)
!15186 = !DILocation(line: 878, column: 28, scope: !15187)
!15187 = distinct !DILexicalBlock(scope: !15168, file: !3, line: 878, column: 7)
!15188 = !DILocation(line: 878, column: 34, scope: !15187)
!15189 = !DILocation(line: 878, column: 50, scope: !15187)
!15190 = !DILocation(line: 878, column: 8, scope: !15187)
!15191 = !DILocation(line: 878, column: 7, scope: !15168)
!15192 = !DILocation(line: 879, column: 4, scope: !15187)
!15193 = !DILocation(line: 880, column: 22, scope: !15168)
!15194 = !DILocation(line: 880, column: 28, scope: !15168)
!15195 = !DILocation(line: 880, column: 44, scope: !15168)
!15196 = !DILocation(line: 880, column: 10, scope: !15168)
!15197 = !DILocation(line: 880, column: 3, scope: !15168)
!15198 = !DILocation(line: 883, column: 7, scope: !15199)
!15199 = distinct !DILexicalBlock(scope: !15168, file: !3, line: 883, column: 7)
!15200 = !DILocation(line: 883, column: 12, scope: !15199)
!15201 = !DILocation(line: 883, column: 17, scope: !15199)
!15202 = !DILocation(line: 883, column: 23, scope: !15199)
!15203 = !DILocation(line: 883, column: 7, scope: !15168)
!15204 = !DILocation(line: 884, column: 23, scope: !15199)
!15205 = !DILocation(line: 884, column: 29, scope: !15199)
!15206 = !DILocation(line: 884, column: 34, scope: !15199)
!15207 = !DILocation(line: 884, column: 11, scope: !15199)
!15208 = !DILocation(line: 884, column: 4, scope: !15199)
!15209 = !DILocation(line: 886, column: 24, scope: !15199)
!15210 = !DILocation(line: 886, column: 30, scope: !15199)
!15211 = !DILocation(line: 886, column: 35, scope: !15199)
!15212 = !DILocation(line: 886, column: 11, scope: !15199)
!15213 = !DILocation(line: 886, column: 4, scope: !15199)
!15214 = !DILocation(line: 888, column: 1, scope: !15150)
!15215 = distinct !DISubprogram(name: "ehci_urb_dequeue", scope: !3, file: !3, line: 894, type: !5442, scopeLine: 895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!15216 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !15217)
!15217 = distinct !DILocation(line: 936, column: 2, scope: !15215)
!15218 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !15217)
!15219 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !15220)
!15220 = distinct !DILocation(line: 901, column: 2, scope: !15221)
!15221 = distinct !DILexicalBlock(scope: !15222, file: !3, line: 901, column: 2)
!15222 = distinct !DILexicalBlock(scope: !15223, file: !3, line: 901, column: 2)
!15223 = distinct !DILexicalBlock(scope: !15224, file: !3, line: 901, column: 2)
!15224 = distinct !DILexicalBlock(scope: !15225, file: !3, line: 901, column: 2)
!15225 = distinct !DILexicalBlock(scope: !15215, file: !3, line: 901, column: 2)
!15226 = !DILocalVariable(name: "hcd", arg: 1, scope: !15215, file: !3, line: 894, type: !342)
!15227 = !DILocation(line: 894, column: 45, scope: !15215)
!15228 = !DILocalVariable(name: "urb", arg: 2, scope: !15215, file: !3, line: 894, type: !5343)
!15229 = !DILocation(line: 894, column: 62, scope: !15215)
!15230 = !DILocalVariable(name: "status", arg: 3, scope: !15215, file: !3, line: 894, type: !401)
!15231 = !DILocation(line: 894, column: 71, scope: !15215)
!15232 = !DILocalVariable(name: "ehci", scope: !15215, file: !3, line: 896, type: !5814)
!15233 = !DILocation(line: 896, column: 20, scope: !15215)
!15234 = !DILocation(line: 896, column: 40, scope: !15215)
!15235 = !DILocation(line: 896, column: 27, scope: !15215)
!15236 = !DILocalVariable(name: "qh", scope: !15215, file: !3, line: 897, type: !5884)
!15237 = !DILocation(line: 897, column: 19, scope: !15215)
!15238 = !DILocalVariable(name: "flags", scope: !15215, file: !3, line: 898, type: !465)
!15239 = !DILocation(line: 898, column: 17, scope: !15215)
!15240 = !DILocalVariable(name: "rc", scope: !15215, file: !3, line: 899, type: !401)
!15241 = !DILocation(line: 899, column: 8, scope: !15215)
!15242 = !DILocation(line: 901, column: 2, scope: !15215)
!15243 = !DILocation(line: 901, column: 2, scope: !15225)
!15244 = !DILocalVariable(name: "__dummy", scope: !15245, file: !3, line: 901, type: !465)
!15245 = distinct !DILexicalBlock(scope: !15224, file: !3, line: 901, column: 2)
!15246 = !DILocation(line: 901, column: 2, scope: !15245)
!15247 = !DILocalVariable(name: "__dummy2", scope: !15245, file: !3, line: 901, type: !465)
!15248 = !DILocation(line: 901, column: 2, scope: !15224)
!15249 = !DILocation(line: 901, column: 2, scope: !15223)
!15250 = !DILocation(line: 901, column: 2, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15223, file: !3, line: 901, column: 2)
!15252 = !DILocalVariable(name: "__dummy", scope: !15253, file: !3, line: 901, type: !465)
!15253 = distinct !DILexicalBlock(scope: !15254, file: !3, line: 901, column: 2)
!15254 = distinct !DILexicalBlock(scope: !15251, file: !3, line: 901, column: 2)
!15255 = !DILocation(line: 901, column: 2, scope: !15253)
!15256 = !DILocalVariable(name: "__dummy2", scope: !15253, file: !3, line: 901, type: !465)
!15257 = !DILocation(line: 901, column: 2, scope: !15254)
!15258 = !DILocation(line: 901, column: 2, scope: !15222)
!15259 = !{i32 -2139768579}
!15260 = !DILocation(line: 901, column: 2, scope: !15221)
!15261 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !15220)
!15262 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !15220)
!15263 = !DILocation(line: 902, column: 32, scope: !15215)
!15264 = !DILocation(line: 902, column: 37, scope: !15215)
!15265 = !DILocation(line: 902, column: 42, scope: !15215)
!15266 = !DILocation(line: 902, column: 7, scope: !15215)
!15267 = !DILocation(line: 902, column: 5, scope: !15215)
!15268 = !DILocation(line: 903, column: 6, scope: !15269)
!15269 = distinct !DILexicalBlock(scope: !15215, file: !3, line: 903, column: 6)
!15270 = !DILocation(line: 903, column: 6, scope: !15215)
!15271 = !DILocation(line: 904, column: 3, scope: !15269)
!15272 = !DILocation(line: 906, column: 6, scope: !15273)
!15273 = distinct !DILexicalBlock(scope: !15215, file: !3, line: 906, column: 6)
!15274 = !DILocation(line: 906, column: 30, scope: !15273)
!15275 = !DILocation(line: 906, column: 6, scope: !15215)
!15276 = !DILocation(line: 912, column: 2, scope: !15277)
!15277 = distinct !DILexicalBlock(scope: !15273, file: !3, line: 906, column: 51)
!15278 = !DILocation(line: 913, column: 27, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15273, file: !3, line: 912, column: 9)
!15280 = !DILocation(line: 913, column: 32, scope: !15279)
!15281 = !DILocation(line: 913, column: 8, scope: !15279)
!15282 = !DILocation(line: 913, column: 6, scope: !15279)
!15283 = !DILocation(line: 914, column: 3, scope: !15279)
!15284 = !DILocation(line: 914, column: 7, scope: !15279)
!15285 = !DILocation(line: 914, column: 21, scope: !15279)
!15286 = !DILocation(line: 915, column: 11, scope: !15279)
!15287 = !DILocation(line: 915, column: 15, scope: !15279)
!15288 = !DILocation(line: 915, column: 3, scope: !15279)
!15289 = !DILocation(line: 917, column: 8, scope: !15290)
!15290 = distinct !DILexicalBlock(scope: !15291, file: !3, line: 917, column: 8)
!15291 = distinct !DILexicalBlock(scope: !15279, file: !3, line: 915, column: 25)
!15292 = !DILocation(line: 917, column: 32, scope: !15290)
!15293 = !DILocation(line: 917, column: 8, scope: !15291)
!15294 = !DILocation(line: 918, column: 23, scope: !15290)
!15295 = !DILocation(line: 918, column: 29, scope: !15290)
!15296 = !DILocation(line: 918, column: 5, scope: !15290)
!15297 = !DILocation(line: 920, column: 24, scope: !15290)
!15298 = !DILocation(line: 920, column: 30, scope: !15290)
!15299 = !DILocation(line: 920, column: 5, scope: !15290)
!15300 = !DILocation(line: 921, column: 4, scope: !15291)
!15301 = !DILocation(line: 923, column: 4, scope: !15291)
!15302 = !DILocation(line: 923, column: 8, scope: !15291)
!15303 = !DILocation(line: 923, column: 32, scope: !15291)
!15304 = !DILocation(line: 924, column: 4, scope: !15291)
!15305 = !DILocation(line: 928, column: 4, scope: !15291)
!15306 = !DILocation(line: 931, column: 19, scope: !15291)
!15307 = !DILocation(line: 931, column: 25, scope: !15291)
!15308 = !DILocation(line: 931, column: 4, scope: !15291)
!15309 = !DILocation(line: 932, column: 4, scope: !15291)
!15310 = !DILocation(line: 906, column: 33, scope: !15273)
!15311 = !DILabel(scope: !15215, name: "done", file: !3, line: 935)
!15312 = !DILocation(line: 935, column: 1, scope: !15215)
!15313 = !DILocation(line: 936, column: 27, scope: !15215)
!15314 = !DILocation(line: 936, column: 33, scope: !15215)
!15315 = !DILocation(line: 936, column: 39, scope: !15215)
!15316 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !15217)
!15317 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !15217)
!15318 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !15217)
!15319 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !15217)
!15320 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !15217)
!15321 = !DILocation(line: 937, column: 9, scope: !15215)
!15322 = !DILocation(line: 937, column: 2, scope: !15215)
!15323 = distinct !DISubprogram(name: "ehci_endpoint_disable", scope: !3, file: !3, line: 945, type: !5451, scopeLine: 946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!15324 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !15325)
!15325 = distinct !DILocation(line: 991, column: 3, scope: !15326)
!15326 = distinct !DILexicalBlock(scope: !15323, file: !3, line: 976, column: 24)
!15327 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !15325)
!15328 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !15329)
!15329 = distinct !DILocation(line: 1015, column: 2, scope: !15323)
!15330 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !15329)
!15331 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !15332)
!15332 = distinct !DILocation(line: 955, column: 2, scope: !15333)
!15333 = distinct !DILexicalBlock(scope: !15334, file: !3, line: 955, column: 2)
!15334 = distinct !DILexicalBlock(scope: !15335, file: !3, line: 955, column: 2)
!15335 = distinct !DILexicalBlock(scope: !15336, file: !3, line: 955, column: 2)
!15336 = distinct !DILexicalBlock(scope: !15337, file: !3, line: 955, column: 2)
!15337 = distinct !DILexicalBlock(scope: !15323, file: !3, line: 955, column: 2)
!15338 = !DILocalVariable(name: "hcd", arg: 1, scope: !15323, file: !3, line: 945, type: !342)
!15339 = !DILocation(line: 945, column: 40, scope: !15323)
!15340 = !DILocalVariable(name: "ep", arg: 2, scope: !15323, file: !3, line: 945, type: !5245)
!15341 = !DILocation(line: 945, column: 71, scope: !15323)
!15342 = !DILocalVariable(name: "ehci", scope: !15323, file: !3, line: 947, type: !5814)
!15343 = !DILocation(line: 947, column: 20, scope: !15323)
!15344 = !DILocation(line: 947, column: 40, scope: !15323)
!15345 = !DILocation(line: 947, column: 27, scope: !15323)
!15346 = !DILocalVariable(name: "flags", scope: !15323, file: !3, line: 948, type: !465)
!15347 = !DILocation(line: 948, column: 17, scope: !15323)
!15348 = !DILocalVariable(name: "qh", scope: !15323, file: !3, line: 949, type: !5884)
!15349 = !DILocation(line: 949, column: 19, scope: !15323)
!15350 = !DILocation(line: 949, column: 2, scope: !15323)
!15351 = !DILabel(scope: !15323, name: "rescan", file: !3, line: 954)
!15352 = !DILocation(line: 954, column: 1, scope: !15323)
!15353 = !DILocation(line: 955, column: 2, scope: !15323)
!15354 = !DILocation(line: 955, column: 2, scope: !15337)
!15355 = !DILocalVariable(name: "__dummy", scope: !15356, file: !3, line: 955, type: !465)
!15356 = distinct !DILexicalBlock(scope: !15336, file: !3, line: 955, column: 2)
!15357 = !DILocation(line: 955, column: 2, scope: !15356)
!15358 = !DILocalVariable(name: "__dummy2", scope: !15356, file: !3, line: 955, type: !465)
!15359 = !DILocation(line: 955, column: 2, scope: !15336)
!15360 = !DILocation(line: 955, column: 2, scope: !15335)
!15361 = !DILocation(line: 955, column: 2, scope: !15362)
!15362 = distinct !DILexicalBlock(scope: !15335, file: !3, line: 955, column: 2)
!15363 = !DILocalVariable(name: "__dummy", scope: !15364, file: !3, line: 955, type: !465)
!15364 = distinct !DILexicalBlock(scope: !15365, file: !3, line: 955, column: 2)
!15365 = distinct !DILexicalBlock(scope: !15362, file: !3, line: 955, column: 2)
!15366 = !DILocation(line: 955, column: 2, scope: !15364)
!15367 = !DILocalVariable(name: "__dummy2", scope: !15364, file: !3, line: 955, type: !465)
!15368 = !DILocation(line: 955, column: 2, scope: !15365)
!15369 = !DILocation(line: 955, column: 2, scope: !15334)
!15370 = !{i32 -2139767479}
!15371 = !DILocation(line: 955, column: 2, scope: !15333)
!15372 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !15332)
!15373 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !15332)
!15374 = !DILocation(line: 956, column: 7, scope: !15323)
!15375 = !DILocation(line: 956, column: 11, scope: !15323)
!15376 = !DILocation(line: 956, column: 5, scope: !15323)
!15377 = !DILocation(line: 957, column: 7, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15323, file: !3, line: 957, column: 6)
!15379 = !DILocation(line: 957, column: 6, scope: !15323)
!15380 = !DILocation(line: 958, column: 3, scope: !15378)
!15381 = !DILocation(line: 963, column: 6, scope: !15382)
!15382 = distinct !DILexicalBlock(scope: !15323, file: !3, line: 963, column: 6)
!15383 = !DILocation(line: 963, column: 10, scope: !15382)
!15384 = !DILocation(line: 963, column: 13, scope: !15382)
!15385 = !DILocation(line: 963, column: 6, scope: !15323)
!15386 = !DILocalVariable(name: "stream", scope: !15387, file: !3, line: 964, type: !5922)
!15387 = distinct !DILexicalBlock(scope: !15382, file: !3, line: 963, column: 22)
!15388 = !DILocation(line: 964, column: 27, scope: !15387)
!15389 = !DILocation(line: 964, column: 36, scope: !15387)
!15390 = !DILocation(line: 964, column: 40, scope: !15387)
!15391 = !DILocation(line: 966, column: 20, scope: !15392)
!15392 = distinct !DILexicalBlock(scope: !15387, file: !3, line: 966, column: 7)
!15393 = !DILocation(line: 966, column: 28, scope: !15392)
!15394 = !DILocation(line: 966, column: 8, scope: !15392)
!15395 = !DILocation(line: 966, column: 7, scope: !15387)
!15396 = !DILocation(line: 967, column: 4, scope: !15392)
!15397 = !DILocation(line: 970, column: 33, scope: !15387)
!15398 = !DILocation(line: 970, column: 39, scope: !15387)
!15399 = !DILocation(line: 970, column: 3, scope: !15387)
!15400 = !DILocation(line: 971, column: 9, scope: !15387)
!15401 = !DILocation(line: 971, column: 3, scope: !15387)
!15402 = !DILocation(line: 972, column: 3, scope: !15387)
!15403 = !DILocation(line: 975, column: 2, scope: !15323)
!15404 = !DILocation(line: 975, column: 6, scope: !15323)
!15405 = !DILocation(line: 975, column: 20, scope: !15323)
!15406 = !DILocation(line: 976, column: 10, scope: !15323)
!15407 = !DILocation(line: 976, column: 14, scope: !15323)
!15408 = !DILocation(line: 976, column: 2, scope: !15323)
!15409 = !DILocation(line: 978, column: 19, scope: !15410)
!15410 = distinct !DILexicalBlock(scope: !15326, file: !3, line: 978, column: 7)
!15411 = !DILocation(line: 978, column: 23, scope: !15410)
!15412 = !DILocation(line: 978, column: 7, scope: !15410)
!15413 = !DILocation(line: 978, column: 7, scope: !15326)
!15414 = !DILocation(line: 979, column: 4, scope: !15410)
!15415 = !DILocation(line: 979, column: 8, scope: !15410)
!15416 = !DILocation(line: 979, column: 22, scope: !15410)
!15417 = !DILocalVariable(name: "__ret_warn_on", scope: !15418, file: !3, line: 981, type: !401)
!15418 = distinct !DILexicalBlock(scope: !15410, file: !3, line: 981, column: 4)
!15419 = !DILocation(line: 981, column: 4, scope: !15418)
!15420 = !DILocation(line: 981, column: 4, scope: !15421)
!15421 = distinct !DILexicalBlock(scope: !15418, file: !3, line: 981, column: 4)
!15422 = !DILocation(line: 981, column: 4, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15421, file: !3, line: 981, column: 4)
!15424 = !DILocation(line: 981, column: 4, scope: !15425)
!15425 = distinct !DILexicalBlock(scope: !15423, file: !3, line: 981, column: 4)
!15426 = !DILocation(line: 981, column: 4, scope: !15427)
!15427 = distinct !DILexicalBlock(scope: !15423, file: !3, line: 981, column: 4)
!15428 = !{i32 -2139766844, i32 -2139766815, i32 -2139766769, i32 -2139766711, i32 -2139766657, i32 -2139766603, i32 -2139766548, i32 -2139766517}
!15429 = !DILocation(line: 981, column: 4, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15423, file: !3, line: 981, column: 4)
!15431 = !{i32 -2139766108, i32 -2139766101, i32 -2139766049, i32 -2139766018, i32 -2139765988}
!15432 = !DILocation(line: 981, column: 4, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15423, file: !3, line: 981, column: 4)
!15434 = !DILocation(line: 982, column: 26, scope: !15435)
!15435 = distinct !DILexicalBlock(scope: !15326, file: !3, line: 982, column: 7)
!15436 = !DILocation(line: 982, column: 30, scope: !15435)
!15437 = !DILocation(line: 982, column: 7, scope: !15435)
!15438 = !DILocation(line: 982, column: 36, scope: !15435)
!15439 = !DILocation(line: 982, column: 7, scope: !15326)
!15440 = !DILocation(line: 983, column: 23, scope: !15435)
!15441 = !DILocation(line: 983, column: 29, scope: !15435)
!15442 = !DILocation(line: 983, column: 4, scope: !15435)
!15443 = !DILocation(line: 985, column: 22, scope: !15435)
!15444 = !DILocation(line: 985, column: 28, scope: !15435)
!15445 = !DILocation(line: 985, column: 4, scope: !15435)
!15446 = !DILocation(line: 982, column: 39, scope: !15435)
!15447 = !DILabel(scope: !15326, name: "idle_timeout", file: !3, line: 990)
!15448 = !DILocation(line: 990, column: 1, scope: !15326)
!15449 = !DILocation(line: 991, column: 28, scope: !15326)
!15450 = !DILocation(line: 991, column: 34, scope: !15326)
!15451 = !DILocation(line: 991, column: 40, scope: !15326)
!15452 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !15325)
!15453 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !15325)
!15454 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !15325)
!15455 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !15325)
!15456 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !15325)
!15457 = !DILocation(line: 992, column: 3, scope: !15326)
!15458 = !DILocation(line: 993, column: 3, scope: !15326)
!15459 = !DILocation(line: 995, column: 7, scope: !15460)
!15460 = distinct !DILexicalBlock(scope: !15326, file: !3, line: 995, column: 7)
!15461 = !DILocation(line: 995, column: 11, scope: !15460)
!15462 = !DILocation(line: 995, column: 7, scope: !15326)
!15463 = !DILocation(line: 996, column: 4, scope: !15460)
!15464 = !DILocation(line: 997, column: 20, scope: !15465)
!15465 = distinct !DILexicalBlock(scope: !15326, file: !3, line: 997, column: 7)
!15466 = !DILocation(line: 997, column: 24, scope: !15465)
!15467 = !DILocation(line: 997, column: 7, scope: !15465)
!15468 = !DILocation(line: 997, column: 7, scope: !15326)
!15469 = !DILocation(line: 998, column: 8, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15471, file: !3, line: 998, column: 8)
!15471 = distinct !DILexicalBlock(scope: !15465, file: !3, line: 997, column: 35)
!15472 = !DILocation(line: 998, column: 12, scope: !15470)
!15473 = !DILocation(line: 998, column: 15, scope: !15470)
!15474 = !DILocation(line: 998, column: 8, scope: !15471)
!15475 = !DILocation(line: 999, column: 36, scope: !15470)
!15476 = !DILocation(line: 999, column: 42, scope: !15470)
!15477 = !DILocation(line: 999, column: 5, scope: !15470)
!15478 = !DILocation(line: 1000, column: 15, scope: !15471)
!15479 = !DILocation(line: 1000, column: 21, scope: !15471)
!15480 = !DILocation(line: 1000, column: 4, scope: !15471)
!15481 = !DILocation(line: 1001, column: 4, scope: !15471)
!15482 = !DILocation(line: 997, column: 32, scope: !15465)
!15483 = !DILocation(line: 1008, column: 3, scope: !15326)
!15484 = !DILocation(line: 1011, column: 3, scope: !15326)
!15485 = !DILocation(line: 1012, column: 2, scope: !15326)
!15486 = !DILabel(scope: !15323, name: "done", file: !3, line: 1013)
!15487 = !DILocation(line: 1013, column: 2, scope: !15323)
!15488 = !DILocation(line: 1014, column: 2, scope: !15323)
!15489 = !DILocation(line: 1014, column: 6, scope: !15323)
!15490 = !DILocation(line: 1014, column: 13, scope: !15323)
!15491 = !DILocation(line: 1015, column: 27, scope: !15323)
!15492 = !DILocation(line: 1015, column: 33, scope: !15323)
!15493 = !DILocation(line: 1015, column: 39, scope: !15323)
!15494 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !15329)
!15495 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !15329)
!15496 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !15329)
!15497 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !15329)
!15498 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !15329)
!15499 = !DILocation(line: 1016, column: 1, scope: !15323)
!15500 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !15501)
!15501 = distinct !DILocation(line: 1055, column: 2, scope: !6275)
!15502 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !15501)
!15503 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !15504)
!15504 = distinct !DILocation(line: 1031, column: 2, scope: !15505)
!15505 = distinct !DILexicalBlock(scope: !15506, file: !3, line: 1031, column: 2)
!15506 = distinct !DILexicalBlock(scope: !15507, file: !3, line: 1031, column: 2)
!15507 = distinct !DILexicalBlock(scope: !15508, file: !3, line: 1031, column: 2)
!15508 = distinct !DILexicalBlock(scope: !15509, file: !3, line: 1031, column: 2)
!15509 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 1031, column: 2)
!15510 = !DILocalVariable(name: "hcd", arg: 1, scope: !6275, file: !3, line: 1019, type: !342)
!15511 = !DILocation(line: 1019, column: 37, scope: !6275)
!15512 = !DILocalVariable(name: "ep", arg: 2, scope: !6275, file: !3, line: 1019, type: !5245)
!15513 = !DILocation(line: 1019, column: 68, scope: !6275)
!15514 = !DILocalVariable(name: "ehci", scope: !6275, file: !3, line: 1021, type: !5814)
!15515 = !DILocation(line: 1021, column: 20, scope: !6275)
!15516 = !DILocation(line: 1021, column: 39, scope: !6275)
!15517 = !DILocation(line: 1021, column: 27, scope: !6275)
!15518 = !DILocalVariable(name: "qh", scope: !6275, file: !3, line: 1022, type: !5884)
!15519 = !DILocation(line: 1022, column: 19, scope: !6275)
!15520 = !DILocalVariable(name: "eptype", scope: !6275, file: !3, line: 1023, type: !401)
!15521 = !DILocation(line: 1023, column: 8, scope: !6275)
!15522 = !DILocation(line: 1023, column: 36, scope: !6275)
!15523 = !DILocation(line: 1023, column: 40, scope: !6275)
!15524 = !DILocation(line: 1023, column: 17, scope: !6275)
!15525 = !DILocalVariable(name: "epnum", scope: !6275, file: !3, line: 1024, type: !401)
!15526 = !DILocation(line: 1024, column: 8, scope: !6275)
!15527 = !DILocation(line: 1024, column: 34, scope: !6275)
!15528 = !DILocation(line: 1024, column: 38, scope: !6275)
!15529 = !DILocation(line: 1024, column: 16, scope: !6275)
!15530 = !DILocalVariable(name: "is_out", scope: !6275, file: !3, line: 1025, type: !401)
!15531 = !DILocation(line: 1025, column: 8, scope: !6275)
!15532 = !DILocation(line: 1025, column: 39, scope: !6275)
!15533 = !DILocation(line: 1025, column: 43, scope: !6275)
!15534 = !DILocation(line: 1025, column: 17, scope: !6275)
!15535 = !DILocalVariable(name: "flags", scope: !6275, file: !3, line: 1026, type: !465)
!15536 = !DILocation(line: 1026, column: 17, scope: !6275)
!15537 = !DILocation(line: 1028, column: 6, scope: !15538)
!15538 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 1028, column: 6)
!15539 = !DILocation(line: 1028, column: 13, scope: !15538)
!15540 = !DILocation(line: 1028, column: 39, scope: !15538)
!15541 = !DILocation(line: 1028, column: 42, scope: !15538)
!15542 = !DILocation(line: 1028, column: 49, scope: !15538)
!15543 = !DILocation(line: 1028, column: 6, scope: !6275)
!15544 = !DILocation(line: 1029, column: 3, scope: !15538)
!15545 = !DILocation(line: 1031, column: 2, scope: !6275)
!15546 = !DILocation(line: 1031, column: 2, scope: !15509)
!15547 = !DILocalVariable(name: "__dummy", scope: !15548, file: !3, line: 1031, type: !465)
!15548 = distinct !DILexicalBlock(scope: !15508, file: !3, line: 1031, column: 2)
!15549 = !DILocation(line: 1031, column: 2, scope: !15548)
!15550 = !DILocalVariable(name: "__dummy2", scope: !15548, file: !3, line: 1031, type: !465)
!15551 = !DILocation(line: 1031, column: 2, scope: !15508)
!15552 = !DILocation(line: 1031, column: 2, scope: !15507)
!15553 = !DILocation(line: 1031, column: 2, scope: !15554)
!15554 = distinct !DILexicalBlock(scope: !15507, file: !3, line: 1031, column: 2)
!15555 = !DILocalVariable(name: "__dummy", scope: !15556, file: !3, line: 1031, type: !465)
!15556 = distinct !DILexicalBlock(scope: !15557, file: !3, line: 1031, column: 2)
!15557 = distinct !DILexicalBlock(scope: !15554, file: !3, line: 1031, column: 2)
!15558 = !DILocation(line: 1031, column: 2, scope: !15556)
!15559 = !DILocalVariable(name: "__dummy2", scope: !15556, file: !3, line: 1031, type: !465)
!15560 = !DILocation(line: 1031, column: 2, scope: !15557)
!15561 = !DILocation(line: 1031, column: 2, scope: !15506)
!15562 = !{i32 -2139764493}
!15563 = !DILocation(line: 1031, column: 2, scope: !15505)
!15564 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !15504)
!15565 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !15504)
!15566 = !DILocation(line: 1032, column: 7, scope: !6275)
!15567 = !DILocation(line: 1032, column: 11, scope: !6275)
!15568 = !DILocation(line: 1032, column: 5, scope: !6275)
!15569 = !DILocation(line: 1039, column: 6, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 1039, column: 6)
!15571 = !DILocation(line: 1039, column: 6, scope: !6275)
!15572 = !DILocation(line: 1040, column: 20, scope: !15573)
!15573 = distinct !DILexicalBlock(scope: !15574, file: !3, line: 1040, column: 7)
!15574 = distinct !DILexicalBlock(scope: !15570, file: !3, line: 1039, column: 10)
!15575 = !DILocation(line: 1040, column: 24, scope: !15573)
!15576 = !DILocation(line: 1040, column: 8, scope: !15573)
!15577 = !DILocation(line: 1040, column: 7, scope: !15574)
!15578 = !DILocalVariable(name: "__ret_warn_once", scope: !15579, file: !3, line: 1041, type: !401)
!15579 = distinct !DILexicalBlock(scope: !15580, file: !3, line: 1041, column: 4)
!15580 = distinct !DILexicalBlock(scope: !15573, file: !3, line: 1040, column: 35)
!15581 = !DILocation(line: 1041, column: 4, scope: !15579)
!15582 = !DILocation(line: 1041, column: 4, scope: !15583)
!15583 = distinct !DILexicalBlock(scope: !15579, file: !3, line: 1041, column: 4)
!15584 = !DILocation(line: 0, scope: !15583)
!15585 = !DILocation(line: 1041, column: 4, scope: !15586)
!15586 = distinct !DILexicalBlock(scope: !15583, file: !3, line: 1041, column: 4)
!15587 = !DILocalVariable(name: "__ret_warn_on", scope: !15588, file: !3, line: 1041, type: !401)
!15588 = distinct !DILexicalBlock(scope: !15586, file: !3, line: 1041, column: 4)
!15589 = !DILocation(line: 1041, column: 4, scope: !15588)
!15590 = !DILocation(line: 1041, column: 4, scope: !15591)
!15591 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 1041, column: 4)
!15592 = !DILocation(line: 1041, column: 4, scope: !15593)
!15593 = distinct !DILexicalBlock(scope: !15591, file: !3, line: 1041, column: 4)
!15594 = !DILocation(line: 1041, column: 4, scope: !15595)
!15595 = distinct !DILexicalBlock(scope: !15593, file: !3, line: 1041, column: 4)
!15596 = !DILocation(line: 1041, column: 4, scope: !15597)
!15597 = distinct !DILexicalBlock(scope: !15593, file: !3, line: 1041, column: 4)
!15598 = !DILocation(line: 1041, column: 4, scope: !15599)
!15599 = distinct !DILexicalBlock(scope: !15597, file: !3, line: 1041, column: 4)
!15600 = !DILocation(line: 1041, column: 4, scope: !15601)
!15601 = distinct !DILexicalBlock(scope: !15597, file: !3, line: 1041, column: 4)
!15602 = !{i32 -2139763220, i32 -2139763191, i32 -2139763145, i32 -2139763087, i32 -2139763033, i32 -2139762979, i32 -2139762924, i32 -2139762893}
!15603 = !DILocation(line: 1041, column: 4, scope: !15604)
!15604 = distinct !DILexicalBlock(scope: !15597, file: !3, line: 1041, column: 4)
!15605 = !{i32 -2139762472, i32 -2139762465, i32 -2139762413, i32 -2139762382, i32 -2139762352}
!15606 = !DILocation(line: 1041, column: 4, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15597, file: !3, line: 1041, column: 4)
!15608 = !DILocation(line: 1041, column: 4, scope: !15609)
!15609 = distinct !DILexicalBlock(scope: !15593, file: !3, line: 1041, column: 4)
!15610 = !DILocation(line: 1042, column: 3, scope: !15580)
!15611 = !DILocation(line: 1047, column: 4, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !15573, file: !3, line: 1042, column: 10)
!15613 = !DILocation(line: 1048, column: 4, scope: !15612)
!15614 = !DILocation(line: 1048, column: 8, scope: !15612)
!15615 = !DILocation(line: 1048, column: 22, scope: !15612)
!15616 = !DILocation(line: 1049, column: 8, scope: !15617)
!15617 = distinct !DILexicalBlock(scope: !15612, file: !3, line: 1049, column: 8)
!15618 = !DILocation(line: 1049, column: 15, scope: !15617)
!15619 = !DILocation(line: 1049, column: 8, scope: !15612)
!15620 = !DILocation(line: 1050, column: 24, scope: !15617)
!15621 = !DILocation(line: 1050, column: 30, scope: !15617)
!15622 = !DILocation(line: 1050, column: 5, scope: !15617)
!15623 = !DILocation(line: 1052, column: 23, scope: !15617)
!15624 = !DILocation(line: 1052, column: 29, scope: !15617)
!15625 = !DILocation(line: 1052, column: 5, scope: !15617)
!15626 = !DILocation(line: 1054, column: 2, scope: !15574)
!15627 = !DILocation(line: 1055, column: 26, scope: !6275)
!15628 = !DILocation(line: 1055, column: 32, scope: !6275)
!15629 = !DILocation(line: 1055, column: 38, scope: !6275)
!15630 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !15501)
!15631 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !15501)
!15632 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !15501)
!15633 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !15501)
!15634 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !15501)
!15635 = !DILocation(line: 1056, column: 1, scope: !6275)
!15636 = distinct !DISubprogram(name: "ehci_hub_status_data", scope: !6489, file: !6489, line: 615, type: !5456, scopeLine: 616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!15637 = !DILocation(line: 363, column: 74, scope: !6728, inlinedAt: !15638)
!15638 = distinct !DILocation(line: 685, column: 39, scope: !15639)
!15639 = distinct !DILexicalBlock(scope: !15636, file: !6489, line: 684, column: 6)
!15640 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !15641)
!15641 = distinct !DILocation(line: 687, column: 2, scope: !15636)
!15642 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !15641)
!15643 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !15644)
!15644 = distinct !DILocation(line: 652, column: 2, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15646, file: !6489, line: 652, column: 2)
!15646 = distinct !DILexicalBlock(scope: !15647, file: !6489, line: 652, column: 2)
!15647 = distinct !DILexicalBlock(scope: !15648, file: !6489, line: 652, column: 2)
!15648 = distinct !DILexicalBlock(scope: !15649, file: !6489, line: 652, column: 2)
!15649 = distinct !DILexicalBlock(scope: !15636, file: !6489, line: 652, column: 2)
!15650 = !DILocalVariable(name: "hcd", arg: 1, scope: !15636, file: !6489, line: 615, type: !342)
!15651 = !DILocation(line: 615, column: 39, scope: !15636)
!15652 = !DILocalVariable(name: "buf", arg: 2, scope: !15636, file: !6489, line: 615, type: !417)
!15653 = !DILocation(line: 615, column: 50, scope: !15636)
!15654 = !DILocalVariable(name: "ehci", scope: !15636, file: !6489, line: 617, type: !5814)
!15655 = !DILocation(line: 617, column: 19, scope: !15636)
!15656 = !DILocation(line: 617, column: 39, scope: !15636)
!15657 = !DILocation(line: 617, column: 26, scope: !15636)
!15658 = !DILocalVariable(name: "temp", scope: !15636, file: !6489, line: 618, type: !303)
!15659 = !DILocation(line: 618, column: 7, scope: !15636)
!15660 = !DILocalVariable(name: "status", scope: !15636, file: !6489, line: 618, type: !303)
!15661 = !DILocation(line: 618, column: 13, scope: !15636)
!15662 = !DILocalVariable(name: "mask", scope: !15636, file: !6489, line: 619, type: !303)
!15663 = !DILocation(line: 619, column: 7, scope: !15636)
!15664 = !DILocalVariable(name: "ports", scope: !15636, file: !6489, line: 620, type: !401)
!15665 = !DILocation(line: 620, column: 7, scope: !15636)
!15666 = !DILocalVariable(name: "i", scope: !15636, file: !6489, line: 620, type: !401)
!15667 = !DILocation(line: 620, column: 14, scope: !15636)
!15668 = !DILocalVariable(name: "retval", scope: !15636, file: !6489, line: 620, type: !401)
!15669 = !DILocation(line: 620, column: 17, scope: !15636)
!15670 = !DILocalVariable(name: "flags", scope: !15636, file: !6489, line: 621, type: !465)
!15671 = !DILocation(line: 621, column: 16, scope: !15636)
!15672 = !DILocalVariable(name: "ppcd", scope: !15636, file: !6489, line: 622, type: !303)
!15673 = !DILocation(line: 622, column: 7, scope: !15636)
!15674 = !DILocation(line: 625, column: 2, scope: !15636)
!15675 = !DILocation(line: 625, column: 10, scope: !15636)
!15676 = !DILocation(line: 626, column: 10, scope: !15636)
!15677 = !DILocation(line: 626, column: 8, scope: !15636)
!15678 = !DILocation(line: 627, column: 6, scope: !15679)
!15679 = distinct !DILexicalBlock(scope: !15636, file: !6489, line: 627, column: 6)
!15680 = !DILocation(line: 627, column: 12, scope: !15679)
!15681 = !DILocation(line: 627, column: 6, scope: !15636)
!15682 = !DILocation(line: 628, column: 3, scope: !15683)
!15683 = distinct !DILexicalBlock(scope: !15679, file: !6489, line: 627, column: 17)
!15684 = !DILocation(line: 628, column: 11, scope: !15683)
!15685 = !DILocation(line: 629, column: 9, scope: !15683)
!15686 = !DILocation(line: 630, column: 2, scope: !15683)
!15687 = !DILocation(line: 635, column: 11, scope: !15636)
!15688 = !DILocation(line: 635, column: 17, scope: !15636)
!15689 = !DILocation(line: 635, column: 9, scope: !15636)
!15690 = !DILocation(line: 643, column: 7, scope: !15691)
!15691 = distinct !DILexicalBlock(scope: !15636, file: !6489, line: 643, column: 6)
!15692 = !DILocation(line: 643, column: 6, scope: !15636)
!15693 = !DILocation(line: 644, column: 8, scope: !15691)
!15694 = !DILocation(line: 644, column: 3, scope: !15691)
!15695 = !DILocation(line: 646, column: 8, scope: !15691)
!15696 = !DILocation(line: 652, column: 2, scope: !15636)
!15697 = !DILocation(line: 652, column: 2, scope: !15649)
!15698 = !DILocalVariable(name: "__dummy", scope: !15699, file: !6489, line: 652, type: !465)
!15699 = distinct !DILexicalBlock(scope: !15648, file: !6489, line: 652, column: 2)
!15700 = !DILocation(line: 652, column: 2, scope: !15699)
!15701 = !DILocalVariable(name: "__dummy2", scope: !15699, file: !6489, line: 652, type: !465)
!15702 = !DILocation(line: 652, column: 2, scope: !15648)
!15703 = !DILocation(line: 652, column: 2, scope: !15647)
!15704 = !DILocation(line: 652, column: 2, scope: !15705)
!15705 = distinct !DILexicalBlock(scope: !15647, file: !6489, line: 652, column: 2)
!15706 = !DILocalVariable(name: "__dummy", scope: !15707, file: !6489, line: 652, type: !465)
!15707 = distinct !DILexicalBlock(scope: !15708, file: !6489, line: 652, column: 2)
!15708 = distinct !DILexicalBlock(scope: !15705, file: !6489, line: 652, column: 2)
!15709 = !DILocation(line: 652, column: 2, scope: !15707)
!15710 = !DILocalVariable(name: "__dummy2", scope: !15707, file: !6489, line: 652, type: !465)
!15711 = !DILocation(line: 652, column: 2, scope: !15708)
!15712 = !DILocation(line: 652, column: 2, scope: !15646)
!15713 = !{i32 -2140021229}
!15714 = !DILocation(line: 652, column: 2, scope: !15645)
!15715 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !15644)
!15716 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !15644)
!15717 = !DILocation(line: 655, column: 6, scope: !15718)
!15718 = distinct !DILexicalBlock(scope: !15636, file: !6489, line: 655, column: 6)
!15719 = !DILocation(line: 655, column: 12, scope: !15718)
!15720 = !DILocation(line: 655, column: 6, scope: !15636)
!15721 = !DILocation(line: 656, column: 21, scope: !15718)
!15722 = !DILocation(line: 656, column: 28, scope: !15718)
!15723 = !DILocation(line: 656, column: 34, scope: !15718)
!15724 = !DILocation(line: 656, column: 40, scope: !15718)
!15725 = !DILocation(line: 656, column: 10, scope: !15718)
!15726 = !DILocation(line: 656, column: 48, scope: !15718)
!15727 = !DILocation(line: 656, column: 8, scope: !15718)
!15728 = !DILocation(line: 656, column: 3, scope: !15718)
!15729 = !DILocation(line: 658, column: 9, scope: !15730)
!15730 = distinct !DILexicalBlock(scope: !15636, file: !6489, line: 658, column: 2)
!15731 = !DILocation(line: 658, column: 7, scope: !15730)
!15732 = !DILocation(line: 658, column: 14, scope: !15733)
!15733 = distinct !DILexicalBlock(scope: !15730, file: !6489, line: 658, column: 2)
!15734 = !DILocation(line: 658, column: 18, scope: !15733)
!15735 = !DILocation(line: 658, column: 16, scope: !15733)
!15736 = !DILocation(line: 658, column: 2, scope: !15730)
!15737 = !DILocation(line: 660, column: 7, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15739, file: !6489, line: 660, column: 7)
!15739 = distinct !DILexicalBlock(scope: !15733, file: !6489, line: 658, column: 30)
!15740 = !DILocation(line: 660, column: 20, scope: !15738)
!15741 = !DILocation(line: 660, column: 17, scope: !15738)
!15742 = !DILocation(line: 660, column: 12, scope: !15738)
!15743 = !DILocation(line: 660, column: 7, scope: !15739)
!15744 = !DILocation(line: 661, column: 22, scope: !15738)
!15745 = !DILocation(line: 661, column: 29, scope: !15738)
!15746 = !DILocation(line: 661, column: 35, scope: !15738)
!15747 = !DILocation(line: 661, column: 41, scope: !15738)
!15748 = !DILocation(line: 661, column: 53, scope: !15738)
!15749 = !DILocation(line: 661, column: 11, scope: !15738)
!15750 = !DILocation(line: 661, column: 9, scope: !15738)
!15751 = !DILocation(line: 661, column: 4, scope: !15738)
!15752 = !DILocation(line: 663, column: 9, scope: !15738)
!15753 = !DILocation(line: 672, column: 8, scope: !15754)
!15754 = distinct !DILexicalBlock(scope: !15739, file: !6489, line: 672, column: 7)
!15755 = !DILocation(line: 672, column: 15, scope: !15754)
!15756 = !DILocation(line: 672, column: 13, scope: !15754)
!15757 = !DILocation(line: 672, column: 21, scope: !15754)
!15758 = !DILocation(line: 672, column: 26, scope: !15754)
!15759 = !DILocation(line: 672, column: 38, scope: !15754)
!15760 = !DILocation(line: 672, column: 42, scope: !15754)
!15761 = !DILocation(line: 672, column: 48, scope: !15754)
!15762 = !DILocation(line: 672, column: 29, scope: !15754)
!15763 = !DILocation(line: 673, column: 5, scope: !15754)
!15764 = !DILocation(line: 673, column: 9, scope: !15754)
!15765 = !DILocation(line: 673, column: 15, scope: !15754)
!15766 = !DILocation(line: 673, column: 26, scope: !15754)
!15767 = !DILocation(line: 673, column: 29, scope: !15754)
!15768 = !DILocation(line: 673, column: 32, scope: !15754)
!15769 = !DILocation(line: 672, column: 7, scope: !15739)
!15770 = !DILocation(line: 675, column: 8, scope: !15771)
!15771 = distinct !DILexicalBlock(scope: !15772, file: !6489, line: 675, column: 8)
!15772 = distinct !DILexicalBlock(scope: !15754, file: !6489, line: 674, column: 38)
!15773 = !DILocation(line: 675, column: 10, scope: !15771)
!15774 = !DILocation(line: 675, column: 8, scope: !15772)
!15775 = !DILocation(line: 676, column: 25, scope: !15771)
!15776 = !DILocation(line: 676, column: 27, scope: !15771)
!15777 = !DILocation(line: 676, column: 21, scope: !15771)
!15778 = !DILocation(line: 676, column: 8, scope: !15771)
!15779 = !DILocation(line: 676, column: 16, scope: !15771)
!15780 = !DILocation(line: 678, column: 25, scope: !15771)
!15781 = !DILocation(line: 678, column: 27, scope: !15771)
!15782 = !DILocation(line: 678, column: 21, scope: !15771)
!15783 = !DILocation(line: 678, column: 8, scope: !15771)
!15784 = !DILocation(line: 678, column: 16, scope: !15771)
!15785 = !DILocation(line: 679, column: 11, scope: !15772)
!15786 = !DILocation(line: 680, column: 3, scope: !15772)
!15787 = !DILocation(line: 681, column: 2, scope: !15739)
!15788 = !DILocation(line: 658, column: 26, scope: !15733)
!15789 = !DILocation(line: 658, column: 2, scope: !15733)
!15790 = distinct !{!15790, !15736, !15791}
!15791 = !DILocation(line: 681, column: 2, scope: !15730)
!15792 = !DILocation(line: 684, column: 6, scope: !15639)
!15793 = !DILocation(line: 684, column: 12, scope: !15639)
!15794 = !DILocation(line: 684, column: 6, scope: !15636)
!15795 = !DILocation(line: 685, column: 14, scope: !15639)
!15796 = !DILocation(line: 685, column: 19, scope: !15639)
!15797 = !DILocation(line: 685, column: 29, scope: !15639)
!15798 = !DILocation(line: 365, column: 27, scope: !7031, inlinedAt: !15638)
!15799 = !DILocation(line: 365, column: 6, scope: !7031, inlinedAt: !15638)
!15800 = !DILocation(line: 365, column: 6, scope: !6728, inlinedAt: !15638)
!15801 = !DILocation(line: 366, column: 12, scope: !7035, inlinedAt: !15638)
!15802 = !DILocation(line: 366, column: 14, scope: !7035, inlinedAt: !15638)
!15803 = !DILocation(line: 366, column: 7, scope: !7036, inlinedAt: !15638)
!15804 = !DILocation(line: 367, column: 4, scope: !7035, inlinedAt: !15638)
!15805 = !DILocation(line: 368, column: 28, scope: !7036, inlinedAt: !15638)
!15806 = !DILocation(line: 368, column: 10, scope: !7036, inlinedAt: !15638)
!15807 = !DILocation(line: 368, column: 3, scope: !7036, inlinedAt: !15638)
!15808 = !DILocation(line: 370, column: 29, scope: !7044, inlinedAt: !15638)
!15809 = !DILocation(line: 370, column: 10, scope: !7044, inlinedAt: !15638)
!15810 = !DILocation(line: 370, column: 3, scope: !7044, inlinedAt: !15638)
!15811 = !DILocation(line: 372, column: 1, scope: !6728, inlinedAt: !15638)
!15812 = !DILocation(line: 685, column: 37, scope: !15639)
!15813 = !DILocation(line: 685, column: 3, scope: !15639)
!15814 = !DILocation(line: 687, column: 27, scope: !15636)
!15815 = !DILocation(line: 687, column: 33, scope: !15636)
!15816 = !DILocation(line: 687, column: 39, scope: !15636)
!15817 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !15641)
!15818 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !15641)
!15819 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !15641)
!15820 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !15641)
!15821 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !15641)
!15822 = !DILocation(line: 688, column: 9, scope: !15636)
!15823 = !DILocation(line: 688, column: 18, scope: !15636)
!15824 = !DILocation(line: 688, column: 2, scope: !15636)
!15825 = distinct !DISubprogram(name: "ehci_bus_suspend", scope: !6489, file: !6489, line: 213, type: !5422, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!15826 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !15827)
!15827 = distinct !DILocation(line: 365, column: 2, scope: !15825)
!15828 = !DILocation(line: 363, column: 74, scope: !6728, inlinedAt: !15829)
!15829 = distinct !DILocation(line: 362, column: 37, scope: !15825)
!15830 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !15831)
!15831 = distinct !DILocation(line: 339, column: 2, scope: !15825)
!15832 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !15833)
!15833 = distinct !DILocation(line: 329, column: 3, scope: !15834)
!15834 = distinct !DILexicalBlock(scope: !15835, file: !6489, line: 315, column: 40)
!15835 = distinct !DILexicalBlock(scope: !15825, file: !6489, line: 315, column: 6)
!15836 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !15837)
!15837 = distinct !DILocation(line: 316, column: 3, scope: !15834)
!15838 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !15839)
!15839 = distinct !DILocation(line: 297, column: 2, scope: !15825)
!15840 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !15841)
!15841 = distinct !DILocation(line: 240, column: 4, scope: !15842)
!15842 = distinct !DILexicalBlock(scope: !15843, file: !6489, line: 239, column: 29)
!15843 = distinct !DILexicalBlock(scope: !15844, file: !6489, line: 239, column: 7)
!15844 = distinct !DILexicalBlock(scope: !15845, file: !6489, line: 238, column: 44)
!15845 = distinct !DILexicalBlock(scope: !15825, file: !6489, line: 238, column: 6)
!15846 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !15847)
!15847 = distinct !DILocation(line: 229, column: 2, scope: !15825)
!15848 = !DILocalVariable(name: "hcd", arg: 1, scope: !15825, file: !6489, line: 213, type: !342)
!15849 = !DILocation(line: 213, column: 46, scope: !15825)
!15850 = !DILocalVariable(name: "ehci", scope: !15825, file: !6489, line: 215, type: !5814)
!15851 = !DILocation(line: 215, column: 20, scope: !15825)
!15852 = !DILocation(line: 215, column: 40, scope: !15825)
!15853 = !DILocation(line: 215, column: 27, scope: !15825)
!15854 = !DILocalVariable(name: "port", scope: !15825, file: !6489, line: 216, type: !401)
!15855 = !DILocation(line: 216, column: 8, scope: !15825)
!15856 = !DILocalVariable(name: "mask", scope: !15825, file: !6489, line: 217, type: !401)
!15857 = !DILocation(line: 217, column: 8, scope: !15825)
!15858 = !DILocalVariable(name: "changed", scope: !15825, file: !6489, line: 218, type: !401)
!15859 = !DILocation(line: 218, column: 8, scope: !15825)
!15860 = !DILocalVariable(name: "fs_idle_delay", scope: !15825, file: !6489, line: 219, type: !626)
!15861 = !DILocation(line: 219, column: 9, scope: !15825)
!15862 = !DILocation(line: 223, column: 6, scope: !15863)
!15863 = distinct !DILexicalBlock(scope: !15825, file: !6489, line: 223, column: 6)
!15864 = !DILocation(line: 223, column: 6, scope: !15825)
!15865 = !DILocation(line: 224, column: 3, scope: !15863)
!15866 = !DILocation(line: 227, column: 15, scope: !15825)
!15867 = !DILocation(line: 227, column: 2, scope: !15825)
!15868 = !DILocation(line: 229, column: 18, scope: !15825)
!15869 = !DILocation(line: 229, column: 24, scope: !15825)
!15870 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !15847)
!15871 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !15847)
!15872 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !15847)
!15873 = !DILocation(line: 230, column: 6, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15825, file: !6489, line: 230, column: 6)
!15875 = !DILocation(line: 230, column: 12, scope: !15874)
!15876 = !DILocation(line: 230, column: 21, scope: !15874)
!15877 = !DILocation(line: 230, column: 6, scope: !15825)
!15878 = !DILocation(line: 231, column: 3, scope: !15874)
!15879 = !DILocation(line: 238, column: 6, scope: !15845)
!15880 = !DILocation(line: 238, column: 11, scope: !15845)
!15881 = !DILocation(line: 238, column: 16, scope: !15845)
!15882 = !DILocation(line: 238, column: 26, scope: !15845)
!15883 = !DILocation(line: 238, column: 6, scope: !15825)
!15884 = !DILocation(line: 239, column: 7, scope: !15843)
!15885 = !DILocation(line: 239, column: 13, scope: !15843)
!15886 = !DILocation(line: 239, column: 7, scope: !15844)
!15887 = !DILocation(line: 240, column: 21, scope: !15842)
!15888 = !DILocation(line: 240, column: 27, scope: !15842)
!15889 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !15841)
!15890 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !15841)
!15891 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !15841)
!15892 = !DILocation(line: 242, column: 4, scope: !15842)
!15893 = !DILocation(line: 244, column: 2, scope: !15844)
!15894 = !DILocation(line: 251, column: 2, scope: !15825)
!15895 = !DILocation(line: 251, column: 8, scope: !15825)
!15896 = !DILocation(line: 251, column: 22, scope: !15825)
!15897 = !DILocation(line: 252, column: 2, scope: !15825)
!15898 = !DILocation(line: 252, column: 8, scope: !15825)
!15899 = !DILocation(line: 252, column: 20, scope: !15825)
!15900 = !DILocation(line: 253, column: 10, scope: !15825)
!15901 = !DILocation(line: 254, column: 16, scope: !15825)
!15902 = !DILocation(line: 255, column: 9, scope: !15825)
!15903 = !DILocation(line: 255, column: 7, scope: !15825)
!15904 = !DILocation(line: 256, column: 2, scope: !15825)
!15905 = !DILocation(line: 256, column: 13, scope: !15825)
!15906 = !DILocalVariable(name: "reg", scope: !15907, file: !6489, line: 257, type: !2542)
!15907 = distinct !DILexicalBlock(scope: !15825, file: !6489, line: 256, column: 17)
!15908 = !DILocation(line: 257, column: 16, scope: !15907)
!15909 = !DILocation(line: 257, column: 23, scope: !15907)
!15910 = !DILocation(line: 257, column: 29, scope: !15907)
!15911 = !DILocation(line: 257, column: 35, scope: !15907)
!15912 = !DILocation(line: 257, column: 48, scope: !15907)
!15913 = !DILocalVariable(name: "t1", scope: !15907, file: !6489, line: 258, type: !303)
!15914 = !DILocation(line: 258, column: 8, scope: !15907)
!15915 = !DILocation(line: 258, column: 24, scope: !15907)
!15916 = !DILocation(line: 258, column: 30, scope: !15907)
!15917 = !DILocation(line: 258, column: 13, scope: !15907)
!15918 = !DILocation(line: 258, column: 35, scope: !15907)
!15919 = !DILocalVariable(name: "t2", scope: !15907, file: !6489, line: 259, type: !303)
!15920 = !DILocation(line: 259, column: 8, scope: !15907)
!15921 = !DILocation(line: 259, column: 13, scope: !15907)
!15922 = !DILocation(line: 259, column: 16, scope: !15907)
!15923 = !DILocation(line: 262, column: 7, scope: !15924)
!15924 = distinct !DILexicalBlock(scope: !15907, file: !6489, line: 262, column: 7)
!15925 = !DILocation(line: 262, column: 10, scope: !15924)
!15926 = !DILocation(line: 262, column: 7, scope: !15907)
!15927 = !DILocation(line: 263, column: 12, scope: !15924)
!15928 = !DILocation(line: 263, column: 19, scope: !15924)
!15929 = !DILocation(line: 263, column: 25, scope: !15924)
!15930 = !DILocation(line: 263, column: 4, scope: !15924)
!15931 = !DILocation(line: 264, column: 13, scope: !15932)
!15932 = distinct !DILexicalBlock(scope: !15924, file: !6489, line: 264, column: 12)
!15933 = !DILocation(line: 264, column: 16, scope: !15932)
!15934 = !DILocation(line: 264, column: 27, scope: !15932)
!15935 = !DILocation(line: 264, column: 32, scope: !15932)
!15936 = !DILocation(line: 264, column: 35, scope: !15932)
!15937 = !DILocation(line: 264, column: 12, scope: !15924)
!15938 = !DILocation(line: 265, column: 7, scope: !15939)
!15939 = distinct !DILexicalBlock(scope: !15932, file: !6489, line: 264, column: 52)
!15940 = !DILocation(line: 266, column: 12, scope: !15939)
!15941 = !DILocation(line: 266, column: 19, scope: !15939)
!15942 = !DILocation(line: 266, column: 25, scope: !15939)
!15943 = !DILocation(line: 266, column: 4, scope: !15939)
!15944 = !DILocation(line: 267, column: 3, scope: !15939)
!15945 = !DILocation(line: 270, column: 7, scope: !15946)
!15946 = distinct !DILexicalBlock(scope: !15907, file: !6489, line: 270, column: 7)
!15947 = !DILocation(line: 270, column: 12, scope: !15946)
!15948 = !DILocation(line: 270, column: 17, scope: !15946)
!15949 = !DILocation(line: 270, column: 27, scope: !15946)
!15950 = !DILocation(line: 270, column: 7, scope: !15907)
!15951 = !DILocation(line: 276, column: 8, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15953, file: !6489, line: 276, column: 8)
!15953 = distinct !DILexicalBlock(scope: !15946, file: !6489, line: 270, column: 45)
!15954 = !DILocation(line: 276, column: 11, scope: !15952)
!15955 = !DILocation(line: 276, column: 8, scope: !15953)
!15956 = !DILocation(line: 277, column: 8, scope: !15952)
!15957 = !DILocation(line: 277, column: 5, scope: !15952)
!15958 = !DILocation(line: 279, column: 8, scope: !15952)
!15959 = !DILocation(line: 280, column: 3, scope: !15953)
!15960 = !DILocation(line: 282, column: 7, scope: !15961)
!15961 = distinct !DILexicalBlock(scope: !15907, file: !6489, line: 282, column: 7)
!15962 = !DILocation(line: 282, column: 13, scope: !15961)
!15963 = !DILocation(line: 282, column: 10, scope: !15961)
!15964 = !DILocation(line: 282, column: 7, scope: !15907)
!15965 = !DILocation(line: 289, column: 9, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15967, file: !6489, line: 289, column: 8)
!15967 = distinct !DILexicalBlock(scope: !15961, file: !6489, line: 282, column: 17)
!15968 = !DILocation(line: 289, column: 12, scope: !15966)
!15969 = !DILocation(line: 289, column: 8, scope: !15967)
!15970 = !DILocation(line: 292, column: 19, scope: !15966)
!15971 = !DILocation(line: 292, column: 5, scope: !15966)
!15972 = !DILocation(line: 293, column: 16, scope: !15967)
!15973 = !DILocation(line: 293, column: 22, scope: !15967)
!15974 = !DILocation(line: 293, column: 26, scope: !15967)
!15975 = !DILocation(line: 293, column: 4, scope: !15967)
!15976 = !DILocation(line: 294, column: 12, scope: !15967)
!15977 = !DILocation(line: 295, column: 3, scope: !15967)
!15978 = distinct !{!15978, !15904, !15979}
!15979 = !DILocation(line: 296, column: 2, scope: !15825)
!15980 = !DILocation(line: 297, column: 19, scope: !15825)
!15981 = !DILocation(line: 297, column: 25, scope: !15825)
!15982 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !15839)
!15983 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !15839)
!15984 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !15839)
!15985 = !DILocation(line: 299, column: 6, scope: !15986)
!15986 = distinct !DILexicalBlock(scope: !15825, file: !6489, line: 299, column: 6)
!15987 = !DILocation(line: 299, column: 14, scope: !15986)
!15988 = !DILocation(line: 299, column: 17, scope: !15986)
!15989 = !DILocation(line: 299, column: 6, scope: !15825)
!15990 = !DILocation(line: 305, column: 3, scope: !15986)
!15991 = !DILocation(line: 307, column: 7, scope: !15992)
!15992 = distinct !DILexicalBlock(scope: !15825, file: !6489, line: 307, column: 6)
!15993 = !DILocation(line: 307, column: 15, scope: !15992)
!15994 = !DILocation(line: 307, column: 18, scope: !15992)
!15995 = !DILocation(line: 307, column: 24, scope: !15992)
!15996 = !DILocation(line: 307, column: 41, scope: !15992)
!15997 = !DILocation(line: 307, column: 44, scope: !15992)
!15998 = !DILocation(line: 307, column: 6, scope: !15825)
!15999 = !DILocation(line: 312, column: 3, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15992, file: !6489, line: 307, column: 59)
!16001 = !DILocation(line: 313, column: 2, scope: !16000)
!16002 = !DILocation(line: 315, column: 6, scope: !15835)
!16003 = !DILocation(line: 315, column: 14, scope: !15835)
!16004 = !DILocation(line: 315, column: 17, scope: !15835)
!16005 = !DILocation(line: 315, column: 23, scope: !15835)
!16006 = !DILocation(line: 315, column: 6, scope: !15825)
!16007 = !DILocation(line: 316, column: 18, scope: !15834)
!16008 = !DILocation(line: 316, column: 24, scope: !15834)
!16009 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !15837)
!16010 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !15837)
!16011 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !15837)
!16012 = !DILocation(line: 317, column: 10, scope: !15834)
!16013 = !DILocation(line: 317, column: 8, scope: !15834)
!16014 = !DILocation(line: 318, column: 3, scope: !15834)
!16015 = !DILocation(line: 318, column: 14, scope: !15834)
!16016 = !DILocalVariable(name: "hostpc_reg", scope: !16017, file: !6489, line: 319, type: !2542)
!16017 = distinct !DILexicalBlock(scope: !15834, file: !6489, line: 318, column: 18)
!16018 = !DILocation(line: 319, column: 17, scope: !16017)
!16019 = !DILocation(line: 319, column: 31, scope: !16017)
!16020 = !DILocation(line: 319, column: 37, scope: !16017)
!16021 = !DILocation(line: 319, column: 43, scope: !16017)
!16022 = !DILocation(line: 319, column: 50, scope: !16017)
!16023 = !DILocalVariable(name: "t3", scope: !16017, file: !6489, line: 320, type: !303)
!16024 = !DILocation(line: 320, column: 9, scope: !16017)
!16025 = !DILocation(line: 322, column: 20, scope: !16017)
!16026 = !DILocation(line: 322, column: 26, scope: !16017)
!16027 = !DILocation(line: 322, column: 9, scope: !16017)
!16028 = !DILocation(line: 322, column: 7, scope: !16017)
!16029 = !DILocation(line: 323, column: 16, scope: !16017)
!16030 = !DILocation(line: 323, column: 22, scope: !16017)
!16031 = !DILocation(line: 323, column: 25, scope: !16017)
!16032 = !DILocation(line: 323, column: 40, scope: !16017)
!16033 = !DILocation(line: 323, column: 4, scope: !16017)
!16034 = !DILocation(line: 324, column: 20, scope: !16017)
!16035 = !DILocation(line: 324, column: 26, scope: !16017)
!16036 = !DILocation(line: 324, column: 9, scope: !16017)
!16037 = !DILocation(line: 324, column: 7, scope: !16017)
!16038 = distinct !{!16038, !16014, !16039}
!16039 = !DILocation(line: 328, column: 3, scope: !15834)
!16040 = !DILocation(line: 329, column: 20, scope: !15834)
!16041 = !DILocation(line: 329, column: 26, scope: !15834)
!16042 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !15833)
!16043 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !15833)
!16044 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !15833)
!16045 = !DILocation(line: 330, column: 2, scope: !15834)
!16046 = !DILocation(line: 333, column: 6, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !15825, file: !6489, line: 333, column: 6)
!16048 = !DILocation(line: 333, column: 12, scope: !16047)
!16049 = !DILocation(line: 333, column: 6, scope: !15825)
!16050 = !DILocation(line: 334, column: 3, scope: !16051)
!16051 = distinct !DILexicalBlock(scope: !16052, file: !6489, line: 334, column: 3)
!16052 = distinct !DILexicalBlock(scope: !16053, file: !6489, line: 334, column: 3)
!16053 = distinct !DILexicalBlock(scope: !16054, file: !6489, line: 334, column: 3)
!16054 = distinct !DILexicalBlock(scope: !16047, file: !6489, line: 334, column: 3)
!16055 = !DILocation(line: 334, column: 3, scope: !16047)
!16056 = !DILocation(line: 337, column: 13, scope: !15825)
!16057 = !DILocation(line: 337, column: 2, scope: !15825)
!16058 = !DILocation(line: 339, column: 17, scope: !15825)
!16059 = !DILocation(line: 339, column: 23, scope: !15825)
!16060 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !15831)
!16061 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !15831)
!16062 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !15831)
!16063 = !DILocation(line: 340, column: 6, scope: !16064)
!16064 = distinct !DILexicalBlock(scope: !15825, file: !6489, line: 340, column: 6)
!16065 = !DILocation(line: 340, column: 12, scope: !16064)
!16066 = !DILocation(line: 340, column: 35, scope: !16064)
!16067 = !DILocation(line: 340, column: 6, scope: !15825)
!16068 = !DILocation(line: 341, column: 32, scope: !16064)
!16069 = !DILocation(line: 341, column: 3, scope: !16064)
!16070 = !DILocation(line: 342, column: 6, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !15825, file: !6489, line: 342, column: 6)
!16072 = !DILocation(line: 342, column: 12, scope: !16071)
!16073 = !DILocation(line: 342, column: 21, scope: !16071)
!16074 = !DILocation(line: 342, column: 6, scope: !15825)
!16075 = !DILocation(line: 343, column: 3, scope: !16071)
!16076 = !DILocation(line: 344, column: 2, scope: !15825)
!16077 = !DILocation(line: 344, column: 8, scope: !15825)
!16078 = !DILocation(line: 344, column: 17, scope: !15825)
!16079 = !DILocation(line: 346, column: 31, scope: !15825)
!16080 = !DILocation(line: 346, column: 2, scope: !15825)
!16081 = !DILocation(line: 349, column: 16, scope: !15825)
!16082 = !DILocation(line: 349, column: 2, scope: !15825)
!16083 = !DILocation(line: 350, column: 33, scope: !15825)
!16084 = !DILocation(line: 350, column: 2, scope: !15825)
!16085 = !DILocation(line: 351, column: 27, scope: !15825)
!16086 = !DILocation(line: 351, column: 2, scope: !15825)
!16087 = !DILocation(line: 352, column: 16, scope: !15825)
!16088 = !DILocation(line: 352, column: 2, scope: !15825)
!16089 = !DILocation(line: 355, column: 7, scope: !15825)
!16090 = !DILocation(line: 356, column: 7, scope: !16091)
!16091 = distinct !DILexicalBlock(scope: !15825, file: !6489, line: 356, column: 6)
!16092 = !DILocation(line: 356, column: 12, scope: !16091)
!16093 = !DILocation(line: 356, column: 17, scope: !16091)
!16094 = !DILocation(line: 356, column: 27, scope: !16091)
!16095 = !DILocation(line: 356, column: 6, scope: !15825)
!16096 = !DILocation(line: 357, column: 8, scope: !16091)
!16097 = !DILocation(line: 357, column: 3, scope: !16091)
!16098 = !DILocation(line: 358, column: 14, scope: !15825)
!16099 = !DILocation(line: 358, column: 20, scope: !15825)
!16100 = !DILocation(line: 358, column: 27, scope: !15825)
!16101 = !DILocation(line: 358, column: 33, scope: !15825)
!16102 = !DILocation(line: 358, column: 39, scope: !15825)
!16103 = !DILocation(line: 358, column: 2, scope: !15825)
!16104 = !DILocation(line: 359, column: 13, scope: !15825)
!16105 = !DILocation(line: 359, column: 20, scope: !15825)
!16106 = !DILocation(line: 359, column: 26, scope: !15825)
!16107 = !DILocation(line: 359, column: 32, scope: !15825)
!16108 = !DILocation(line: 359, column: 2, scope: !15825)
!16109 = !DILabel(scope: !15825, name: "done", file: !6489, line: 361)
!16110 = !DILocation(line: 361, column: 2, scope: !15825)
!16111 = !DILocation(line: 362, column: 27, scope: !15825)
!16112 = !DILocation(line: 365, column: 27, scope: !7031, inlinedAt: !15829)
!16113 = !DILocation(line: 365, column: 6, scope: !7031, inlinedAt: !15829)
!16114 = !DILocation(line: 365, column: 6, scope: !6728, inlinedAt: !15829)
!16115 = !DILocation(line: 366, column: 12, scope: !7035, inlinedAt: !15829)
!16116 = !DILocation(line: 366, column: 14, scope: !7035, inlinedAt: !15829)
!16117 = !DILocation(line: 366, column: 7, scope: !7036, inlinedAt: !15829)
!16118 = !DILocation(line: 367, column: 4, scope: !7035, inlinedAt: !15829)
!16119 = !DILocation(line: 368, column: 28, scope: !7036, inlinedAt: !15829)
!16120 = !DILocation(line: 368, column: 10, scope: !7036, inlinedAt: !15829)
!16121 = !DILocation(line: 368, column: 3, scope: !7036, inlinedAt: !15829)
!16122 = !DILocation(line: 370, column: 29, scope: !7044, inlinedAt: !15829)
!16123 = !DILocation(line: 370, column: 10, scope: !7044, inlinedAt: !15829)
!16124 = !DILocation(line: 370, column: 3, scope: !7044, inlinedAt: !15829)
!16125 = !DILocation(line: 372, column: 1, scope: !6728, inlinedAt: !15829)
!16126 = !DILocation(line: 362, column: 35, scope: !15825)
!16127 = !DILocation(line: 362, column: 2, scope: !15825)
!16128 = !DILocation(line: 362, column: 8, scope: !15825)
!16129 = !DILocation(line: 362, column: 25, scope: !15825)
!16130 = !DILocation(line: 363, column: 2, scope: !15825)
!16131 = !DILocation(line: 363, column: 8, scope: !15825)
!16132 = !DILocation(line: 363, column: 31, scope: !15825)
!16133 = !DILocation(line: 364, column: 2, scope: !15825)
!16134 = !DILocation(line: 364, column: 8, scope: !15825)
!16135 = !DILocation(line: 364, column: 27, scope: !15825)
!16136 = !DILocation(line: 365, column: 20, scope: !15825)
!16137 = !DILocation(line: 365, column: 26, scope: !15825)
!16138 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !15827)
!16139 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !15827)
!16140 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !15827)
!16141 = !DILocation(line: 367, column: 18, scope: !15825)
!16142 = !DILocation(line: 367, column: 24, scope: !15825)
!16143 = !DILocation(line: 367, column: 2, scope: !15825)
!16144 = !DILocation(line: 368, column: 2, scope: !15825)
!16145 = !DILocation(line: 369, column: 1, scope: !15825)
!16146 = distinct !DISubprogram(name: "ehci_bus_resume", scope: !6489, file: !6489, line: 373, type: !5422, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16147 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !16148)
!16148 = distinct !DILocation(line: 510, column: 2, scope: !16146)
!16149 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !16150)
!16150 = distinct !DILocation(line: 505, column: 2, scope: !16146)
!16151 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !16152)
!16152 = distinct !DILocation(line: 500, column: 2, scope: !16146)
!16153 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !16154)
!16154 = distinct !DILocation(line: 495, column: 2, scope: !16146)
!16155 = !DILocation(line: 363, column: 74, scope: !6728, inlinedAt: !16156)
!16156 = distinct !DILocation(line: 494, column: 37, scope: !16146)
!16157 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !16158)
!16158 = distinct !DILocation(line: 480, column: 3, scope: !16159)
!16159 = distinct !DILexicalBlock(scope: !16160, file: !6489, line: 477, column: 21)
!16160 = distinct !DILexicalBlock(scope: !16146, file: !6489, line: 477, column: 6)
!16161 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !16162)
!16162 = distinct !DILocation(line: 478, column: 3, scope: !16159)
!16163 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !16164)
!16164 = distinct !DILocation(line: 455, column: 3, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16166, file: !6489, line: 441, column: 52)
!16166 = distinct !DILexicalBlock(scope: !16146, file: !6489, line: 441, column: 6)
!16167 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !16168)
!16168 = distinct !DILocation(line: 453, column: 3, scope: !16165)
!16169 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !16170)
!16170 = distinct !DILocation(line: 432, column: 4, scope: !16171)
!16171 = distinct !DILexicalBlock(scope: !16172, file: !6489, line: 428, column: 45)
!16172 = distinct !DILexicalBlock(scope: !16173, file: !6489, line: 427, column: 7)
!16173 = distinct !DILexicalBlock(scope: !16146, file: !6489, line: 425, column: 14)
!16174 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !16175)
!16175 = distinct !DILocation(line: 430, column: 4, scope: !16171)
!16176 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !16177)
!16177 = distinct !DILocation(line: 383, column: 2, scope: !16146)
!16178 = !DILocalVariable(name: "hcd", arg: 1, scope: !16146, file: !6489, line: 373, type: !342)
!16179 = !DILocation(line: 373, column: 45, scope: !16146)
!16180 = !DILocalVariable(name: "ehci", scope: !16146, file: !6489, line: 375, type: !5814)
!16181 = !DILocation(line: 375, column: 20, scope: !16146)
!16182 = !DILocation(line: 375, column: 40, scope: !16146)
!16183 = !DILocation(line: 375, column: 27, scope: !16146)
!16184 = !DILocalVariable(name: "temp", scope: !16146, file: !6489, line: 376, type: !303)
!16185 = !DILocation(line: 376, column: 8, scope: !16146)
!16186 = !DILocalVariable(name: "power_okay", scope: !16146, file: !6489, line: 377, type: !303)
!16187 = !DILocation(line: 377, column: 8, scope: !16146)
!16188 = !DILocalVariable(name: "i", scope: !16146, file: !6489, line: 378, type: !401)
!16189 = !DILocation(line: 378, column: 8, scope: !16146)
!16190 = !DILocalVariable(name: "resume_needed", scope: !16146, file: !6489, line: 379, type: !465)
!16191 = !DILocation(line: 379, column: 17, scope: !16146)
!16192 = !DILocation(line: 381, column: 6, scope: !16193)
!16193 = distinct !DILexicalBlock(scope: !16146, file: !6489, line: 381, column: 6)
!16194 = !DILocation(line: 381, column: 6, scope: !16146)
!16195 = !DILocation(line: 382, column: 3, scope: !16193)
!16196 = !DILocation(line: 383, column: 18, scope: !16146)
!16197 = !DILocation(line: 383, column: 24, scope: !16146)
!16198 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !16177)
!16199 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !16177)
!16200 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !16177)
!16201 = !DILocation(line: 384, column: 7, scope: !16202)
!16202 = distinct !DILexicalBlock(scope: !16146, file: !6489, line: 384, column: 6)
!16203 = !DILocation(line: 384, column: 30, scope: !16202)
!16204 = !DILocation(line: 384, column: 33, scope: !16202)
!16205 = !DILocation(line: 384, column: 39, scope: !16202)
!16206 = !DILocation(line: 384, column: 6, scope: !16146)
!16207 = !DILocation(line: 385, column: 3, scope: !16202)
!16208 = !DILocation(line: 387, column: 6, scope: !16209)
!16209 = distinct !DILexicalBlock(scope: !16146, file: !6489, line: 387, column: 6)
!16210 = !DILocation(line: 387, column: 6, scope: !16146)
!16211 = !DILocation(line: 388, column: 24, scope: !16212)
!16212 = distinct !DILexicalBlock(scope: !16213, file: !6489, line: 388, column: 7)
!16213 = distinct !DILexicalBlock(scope: !16209, file: !6489, line: 387, column: 29)
!16214 = !DILocation(line: 388, column: 8, scope: !16212)
!16215 = !DILocation(line: 388, column: 7, scope: !16213)
!16216 = !DILocation(line: 389, column: 4, scope: !16212)
!16217 = !DILocation(line: 389, column: 10, scope: !16212)
!16218 = !DILocation(line: 389, column: 16, scope: !16212)
!16219 = !DILocation(line: 391, column: 26, scope: !16212)
!16220 = !DILocation(line: 391, column: 4, scope: !16212)
!16221 = !DILocation(line: 392, column: 2, scope: !16213)
!16222 = !DILocation(line: 400, column: 26, scope: !16146)
!16223 = !DILocation(line: 400, column: 33, scope: !16146)
!16224 = !DILocation(line: 400, column: 39, scope: !16146)
!16225 = !DILocation(line: 400, column: 45, scope: !16146)
!16226 = !DILocation(line: 400, column: 15, scope: !16146)
!16227 = !DILocation(line: 400, column: 13, scope: !16146)
!16228 = !DILocation(line: 407, column: 14, scope: !16146)
!16229 = !DILocation(line: 407, column: 24, scope: !16146)
!16230 = !DILocation(line: 407, column: 30, scope: !16146)
!16231 = !DILocation(line: 407, column: 36, scope: !16146)
!16232 = !DILocation(line: 407, column: 2, scope: !16146)
!16233 = !DILocation(line: 410, column: 14, scope: !16146)
!16234 = !DILocation(line: 410, column: 24, scope: !16146)
!16235 = !DILocation(line: 410, column: 30, scope: !16146)
!16236 = !DILocation(line: 410, column: 36, scope: !16146)
!16237 = !DILocation(line: 410, column: 2, scope: !16146)
!16238 = !DILocation(line: 411, column: 14, scope: !16146)
!16239 = !DILocation(line: 411, column: 20, scope: !16146)
!16240 = !DILocation(line: 411, column: 26, scope: !16146)
!16241 = !DILocation(line: 411, column: 41, scope: !16146)
!16242 = !DILocation(line: 411, column: 47, scope: !16146)
!16243 = !DILocation(line: 411, column: 53, scope: !16146)
!16244 = !DILocation(line: 411, column: 2, scope: !16146)
!16245 = !DILocation(line: 412, column: 14, scope: !16146)
!16246 = !DILocation(line: 412, column: 26, scope: !16146)
!16247 = !DILocation(line: 412, column: 32, scope: !16146)
!16248 = !DILocation(line: 412, column: 39, scope: !16146)
!16249 = !DILocation(line: 412, column: 20, scope: !16146)
!16250 = !DILocation(line: 412, column: 48, scope: !16146)
!16251 = !DILocation(line: 412, column: 54, scope: !16146)
!16252 = !DILocation(line: 412, column: 60, scope: !16146)
!16253 = !DILocation(line: 412, column: 2, scope: !16146)
!16254 = !DILocation(line: 415, column: 2, scope: !16146)
!16255 = !DILocation(line: 415, column: 8, scope: !16146)
!16256 = !DILocation(line: 415, column: 16, scope: !16146)
!16257 = !DILocation(line: 416, column: 14, scope: !16146)
!16258 = !DILocation(line: 416, column: 20, scope: !16146)
!16259 = !DILocation(line: 416, column: 26, scope: !16146)
!16260 = !DILocation(line: 416, column: 36, scope: !16146)
!16261 = !DILocation(line: 416, column: 42, scope: !16146)
!16262 = !DILocation(line: 416, column: 48, scope: !16146)
!16263 = !DILocation(line: 416, column: 2, scope: !16146)
!16264 = !DILocation(line: 417, column: 2, scope: !16146)
!16265 = !DILocation(line: 417, column: 8, scope: !16146)
!16266 = !DILocation(line: 417, column: 17, scope: !16146)
!16267 = !DILocation(line: 424, column: 6, scope: !16146)
!16268 = !DILocation(line: 424, column: 4, scope: !16146)
!16269 = !DILocation(line: 425, column: 2, scope: !16146)
!16270 = !DILocation(line: 425, column: 10, scope: !16146)
!16271 = !DILocation(line: 426, column: 21, scope: !16173)
!16272 = !DILocation(line: 426, column: 28, scope: !16173)
!16273 = !DILocation(line: 426, column: 34, scope: !16173)
!16274 = !DILocation(line: 426, column: 40, scope: !16173)
!16275 = !DILocation(line: 426, column: 52, scope: !16173)
!16276 = !DILocation(line: 426, column: 10, scope: !16173)
!16277 = !DILocation(line: 426, column: 8, scope: !16173)
!16278 = !DILocation(line: 427, column: 8, scope: !16172)
!16279 = !DILocation(line: 427, column: 13, scope: !16172)
!16280 = !DILocation(line: 427, column: 24, scope: !16172)
!16281 = !DILocation(line: 428, column: 7, scope: !16172)
!16282 = !DILocation(line: 428, column: 12, scope: !16172)
!16283 = !DILocation(line: 427, column: 7, scope: !16173)
!16284 = !DILocation(line: 430, column: 21, scope: !16171)
!16285 = !DILocation(line: 430, column: 27, scope: !16171)
!16286 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !16175)
!16287 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !16175)
!16288 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !16175)
!16289 = !DILocation(line: 431, column: 4, scope: !16171)
!16290 = !DILocation(line: 432, column: 19, scope: !16171)
!16291 = !DILocation(line: 432, column: 25, scope: !16171)
!16292 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !16170)
!16293 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !16170)
!16294 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !16170)
!16295 = !DILocation(line: 433, column: 4, scope: !16171)
!16296 = distinct !{!16296, !16269, !16297}
!16297 = !DILocation(line: 435, column: 2, scope: !16146)
!16298 = !DILocation(line: 437, column: 6, scope: !16299)
!16299 = distinct !DILexicalBlock(scope: !16146, file: !6489, line: 437, column: 6)
!16300 = !DILocation(line: 437, column: 12, scope: !16299)
!16301 = !DILocation(line: 437, column: 6, scope: !16146)
!16302 = !DILocation(line: 438, column: 3, scope: !16299)
!16303 = !DILocation(line: 441, column: 6, scope: !16166)
!16304 = !DILocation(line: 441, column: 12, scope: !16166)
!16305 = !DILocation(line: 441, column: 26, scope: !16166)
!16306 = !DILocation(line: 441, column: 29, scope: !16166)
!16307 = !DILocation(line: 441, column: 35, scope: !16166)
!16308 = !DILocation(line: 441, column: 6, scope: !16146)
!16309 = !DILocation(line: 442, column: 7, scope: !16165)
!16310 = !DILocation(line: 442, column: 5, scope: !16165)
!16311 = !DILocation(line: 443, column: 3, scope: !16165)
!16312 = !DILocation(line: 443, column: 11, scope: !16165)
!16313 = !DILocation(line: 444, column: 17, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16315, file: !6489, line: 444, column: 8)
!16315 = distinct !DILexicalBlock(scope: !16165, file: !6489, line: 443, column: 15)
!16316 = !DILocation(line: 444, column: 21, scope: !16314)
!16317 = !DILocation(line: 444, column: 27, scope: !16314)
!16318 = !DILocation(line: 444, column: 8, scope: !16314)
!16319 = !DILocation(line: 444, column: 8, scope: !16315)
!16320 = !DILocalVariable(name: "hostpc_reg", scope: !16321, file: !6489, line: 445, type: !2542)
!16321 = distinct !DILexicalBlock(scope: !16314, file: !6489, line: 444, column: 43)
!16322 = !DILocation(line: 445, column: 18, scope: !16321)
!16323 = !DILocation(line: 446, column: 9, scope: !16321)
!16324 = !DILocation(line: 446, column: 15, scope: !16321)
!16325 = !DILocation(line: 446, column: 21, scope: !16321)
!16326 = !DILocation(line: 446, column: 28, scope: !16321)
!16327 = !DILocation(line: 448, column: 23, scope: !16321)
!16328 = !DILocation(line: 448, column: 29, scope: !16321)
!16329 = !DILocation(line: 448, column: 12, scope: !16321)
!16330 = !DILocation(line: 448, column: 10, scope: !16321)
!16331 = !DILocation(line: 449, column: 17, scope: !16321)
!16332 = !DILocation(line: 449, column: 23, scope: !16321)
!16333 = !DILocation(line: 449, column: 28, scope: !16321)
!16334 = !DILocation(line: 450, column: 7, scope: !16321)
!16335 = !DILocation(line: 449, column: 5, scope: !16321)
!16336 = !DILocation(line: 451, column: 4, scope: !16321)
!16337 = distinct !{!16337, !16311, !16338}
!16338 = !DILocation(line: 452, column: 3, scope: !16165)
!16339 = !DILocation(line: 453, column: 20, scope: !16165)
!16340 = !DILocation(line: 453, column: 26, scope: !16165)
!16341 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !16168)
!16342 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !16168)
!16343 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !16168)
!16344 = !DILocation(line: 454, column: 3, scope: !16165)
!16345 = !DILocation(line: 455, column: 18, scope: !16165)
!16346 = !DILocation(line: 455, column: 24, scope: !16165)
!16347 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !16164)
!16348 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !16164)
!16349 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !16164)
!16350 = !DILocation(line: 456, column: 7, scope: !16351)
!16351 = distinct !DILexicalBlock(scope: !16165, file: !6489, line: 456, column: 7)
!16352 = !DILocation(line: 456, column: 13, scope: !16351)
!16353 = !DILocation(line: 456, column: 7, scope: !16165)
!16354 = !DILocation(line: 457, column: 4, scope: !16351)
!16355 = !DILocation(line: 458, column: 2, scope: !16165)
!16356 = !DILocation(line: 461, column: 6, scope: !16146)
!16357 = !DILocation(line: 461, column: 4, scope: !16146)
!16358 = !DILocation(line: 462, column: 2, scope: !16146)
!16359 = !DILocation(line: 462, column: 10, scope: !16146)
!16360 = !DILocation(line: 463, column: 21, scope: !16361)
!16361 = distinct !DILexicalBlock(scope: !16146, file: !6489, line: 462, column: 14)
!16362 = !DILocation(line: 463, column: 28, scope: !16361)
!16363 = !DILocation(line: 463, column: 34, scope: !16361)
!16364 = !DILocation(line: 463, column: 40, scope: !16361)
!16365 = !DILocation(line: 463, column: 53, scope: !16361)
!16366 = !DILocation(line: 463, column: 10, scope: !16361)
!16367 = !DILocation(line: 463, column: 8, scope: !16361)
!16368 = !DILocation(line: 464, column: 8, scope: !16361)
!16369 = !DILocation(line: 465, column: 16, scope: !16370)
!16370 = distinct !DILexicalBlock(scope: !16361, file: !6489, line: 465, column: 7)
!16371 = !DILocation(line: 465, column: 20, scope: !16370)
!16372 = !DILocation(line: 465, column: 26, scope: !16370)
!16373 = !DILocation(line: 465, column: 7, scope: !16370)
!16374 = !DILocation(line: 465, column: 41, scope: !16370)
!16375 = !DILocation(line: 466, column: 6, scope: !16370)
!16376 = !DILocation(line: 466, column: 11, scope: !16370)
!16377 = !DILocation(line: 465, column: 7, scope: !16361)
!16378 = !DILocation(line: 467, column: 9, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16370, file: !6489, line: 466, column: 28)
!16380 = !DILocation(line: 468, column: 12, scope: !16379)
!16381 = !DILocation(line: 468, column: 4, scope: !16379)
!16382 = !DILocation(line: 469, column: 3, scope: !16379)
!16383 = !DILocation(line: 470, column: 15, scope: !16361)
!16384 = !DILocation(line: 470, column: 21, scope: !16361)
!16385 = !DILocation(line: 470, column: 28, scope: !16361)
!16386 = !DILocation(line: 470, column: 34, scope: !16361)
!16387 = !DILocation(line: 470, column: 40, scope: !16361)
!16388 = !DILocation(line: 470, column: 53, scope: !16361)
!16389 = !DILocation(line: 470, column: 3, scope: !16361)
!16390 = distinct !{!16390, !16358, !16391}
!16391 = !DILocation(line: 471, column: 2, scope: !16146)
!16392 = !DILocation(line: 477, column: 6, scope: !16160)
!16393 = !DILocation(line: 477, column: 6, scope: !16146)
!16394 = !DILocation(line: 478, column: 20, scope: !16159)
!16395 = !DILocation(line: 478, column: 26, scope: !16159)
!16396 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !16162)
!16397 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !16162)
!16398 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !16162)
!16399 = !DILocation(line: 479, column: 3, scope: !16159)
!16400 = !DILocation(line: 480, column: 18, scope: !16159)
!16401 = !DILocation(line: 480, column: 24, scope: !16159)
!16402 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !16158)
!16403 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !16158)
!16404 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !16158)
!16405 = !DILocation(line: 481, column: 7, scope: !16406)
!16406 = distinct !DILexicalBlock(scope: !16159, file: !6489, line: 481, column: 7)
!16407 = !DILocation(line: 481, column: 13, scope: !16406)
!16408 = !DILocation(line: 481, column: 7, scope: !16159)
!16409 = !DILocation(line: 482, column: 4, scope: !16406)
!16410 = !DILocation(line: 483, column: 2, scope: !16159)
!16411 = !DILocation(line: 485, column: 6, scope: !16146)
!16412 = !DILocation(line: 485, column: 4, scope: !16146)
!16413 = !DILocation(line: 486, column: 2, scope: !16146)
!16414 = !DILocation(line: 486, column: 10, scope: !16146)
!16415 = !DILocation(line: 487, column: 21, scope: !16416)
!16416 = distinct !DILexicalBlock(scope: !16146, file: !6489, line: 486, column: 14)
!16417 = !DILocation(line: 487, column: 28, scope: !16416)
!16418 = !DILocation(line: 487, column: 34, scope: !16416)
!16419 = !DILocation(line: 487, column: 40, scope: !16416)
!16420 = !DILocation(line: 487, column: 53, scope: !16416)
!16421 = !DILocation(line: 487, column: 10, scope: !16416)
!16422 = !DILocation(line: 487, column: 8, scope: !16416)
!16423 = !DILocation(line: 488, column: 16, scope: !16424)
!16424 = distinct !DILexicalBlock(scope: !16416, file: !6489, line: 488, column: 7)
!16425 = !DILocation(line: 488, column: 7, scope: !16424)
!16426 = !DILocation(line: 488, column: 7, scope: !16416)
!16427 = !DILocation(line: 489, column: 9, scope: !16428)
!16428 = distinct !DILexicalBlock(scope: !16424, file: !6489, line: 488, column: 36)
!16429 = !DILocation(line: 490, column: 16, scope: !16428)
!16430 = !DILocation(line: 490, column: 22, scope: !16428)
!16431 = !DILocation(line: 490, column: 29, scope: !16428)
!16432 = !DILocation(line: 490, column: 35, scope: !16428)
!16433 = !DILocation(line: 490, column: 41, scope: !16428)
!16434 = !DILocation(line: 490, column: 54, scope: !16428)
!16435 = !DILocation(line: 490, column: 4, scope: !16428)
!16436 = !DILocation(line: 491, column: 3, scope: !16428)
!16437 = distinct !{!16437, !16413, !16438}
!16438 = !DILocation(line: 492, column: 2, scope: !16146)
!16439 = !DILocation(line: 494, column: 27, scope: !16146)
!16440 = !DILocation(line: 365, column: 27, scope: !7031, inlinedAt: !16156)
!16441 = !DILocation(line: 365, column: 6, scope: !7031, inlinedAt: !16156)
!16442 = !DILocation(line: 365, column: 6, scope: !6728, inlinedAt: !16156)
!16443 = !DILocation(line: 366, column: 12, scope: !7035, inlinedAt: !16156)
!16444 = !DILocation(line: 366, column: 14, scope: !7035, inlinedAt: !16156)
!16445 = !DILocation(line: 366, column: 7, scope: !7036, inlinedAt: !16156)
!16446 = !DILocation(line: 367, column: 4, scope: !7035, inlinedAt: !16156)
!16447 = !DILocation(line: 368, column: 28, scope: !7036, inlinedAt: !16156)
!16448 = !DILocation(line: 368, column: 10, scope: !7036, inlinedAt: !16156)
!16449 = !DILocation(line: 368, column: 3, scope: !7036, inlinedAt: !16156)
!16450 = !DILocation(line: 370, column: 29, scope: !7044, inlinedAt: !16156)
!16451 = !DILocation(line: 370, column: 10, scope: !7044, inlinedAt: !16156)
!16452 = !DILocation(line: 370, column: 3, scope: !7044, inlinedAt: !16156)
!16453 = !DILocation(line: 372, column: 1, scope: !6728, inlinedAt: !16156)
!16454 = !DILocation(line: 494, column: 35, scope: !16146)
!16455 = !DILocation(line: 494, column: 2, scope: !16146)
!16456 = !DILocation(line: 494, column: 8, scope: !16146)
!16457 = !DILocation(line: 494, column: 25, scope: !16146)
!16458 = !DILocation(line: 495, column: 19, scope: !16146)
!16459 = !DILocation(line: 495, column: 25, scope: !16146)
!16460 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !16154)
!16461 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !16154)
!16462 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !16154)
!16463 = !DILocation(line: 497, column: 32, scope: !16146)
!16464 = !DILocation(line: 497, column: 2, scope: !16146)
!16465 = !DILocation(line: 500, column: 17, scope: !16146)
!16466 = !DILocation(line: 500, column: 23, scope: !16146)
!16467 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !16152)
!16468 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !16152)
!16469 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !16152)
!16470 = !DILocation(line: 501, column: 6, scope: !16471)
!16471 = distinct !DILexicalBlock(scope: !16146, file: !6489, line: 501, column: 6)
!16472 = !DILocation(line: 501, column: 12, scope: !16471)
!16473 = !DILocation(line: 501, column: 6, scope: !16146)
!16474 = !DILocation(line: 502, column: 3, scope: !16471)
!16475 = !DILocation(line: 503, column: 14, scope: !16146)
!16476 = !DILocation(line: 503, column: 32, scope: !16146)
!16477 = !DILocation(line: 503, column: 38, scope: !16146)
!16478 = !DILocation(line: 503, column: 44, scope: !16146)
!16479 = !DILocation(line: 503, column: 2, scope: !16146)
!16480 = !DILocation(line: 504, column: 20, scope: !16146)
!16481 = !DILocation(line: 504, column: 27, scope: !16146)
!16482 = !DILocation(line: 504, column: 33, scope: !16146)
!16483 = !DILocation(line: 504, column: 39, scope: !16146)
!16484 = !DILocation(line: 504, column: 9, scope: !16146)
!16485 = !DILocation(line: 505, column: 19, scope: !16146)
!16486 = !DILocation(line: 505, column: 25, scope: !16146)
!16487 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !16150)
!16488 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !16150)
!16489 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !16150)
!16490 = !DILocation(line: 507, column: 2, scope: !16146)
!16491 = !DILabel(scope: !16146, name: "shutdown", file: !6489, line: 509)
!16492 = !DILocation(line: 509, column: 2, scope: !16146)
!16493 = !DILocation(line: 510, column: 19, scope: !16146)
!16494 = !DILocation(line: 510, column: 25, scope: !16146)
!16495 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !16148)
!16496 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !16148)
!16497 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !16148)
!16498 = !DILocation(line: 511, column: 2, scope: !16146)
!16499 = !DILocation(line: 512, column: 1, scope: !16146)
!16500 = distinct !DISubprogram(name: "ehci_get_resuming_ports", scope: !6489, file: !6489, line: 514, type: !5470, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16501 = !DILocalVariable(name: "hcd", arg: 1, scope: !16500, file: !6489, line: 514, type: !342)
!16502 = !DILocation(line: 514, column: 62, scope: !16500)
!16503 = !DILocalVariable(name: "ehci", scope: !16500, file: !6489, line: 516, type: !5814)
!16504 = !DILocation(line: 516, column: 20, scope: !16500)
!16505 = !DILocation(line: 516, column: 39, scope: !16500)
!16506 = !DILocation(line: 516, column: 27, scope: !16500)
!16507 = !DILocation(line: 518, column: 9, scope: !16500)
!16508 = !DILocation(line: 518, column: 15, scope: !16500)
!16509 = !DILocation(line: 518, column: 2, scope: !16500)
!16510 = distinct !DISubprogram(name: "ehci_relinquish_port", scope: !6489, file: !6489, line: 1314, type: !5474, scopeLine: 1315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16511 = !DILocalVariable(name: "hcd", arg: 1, scope: !16510, file: !6489, line: 1314, type: !342)
!16512 = !DILocation(line: 1314, column: 50, scope: !16510)
!16513 = !DILocalVariable(name: "portnum", arg: 2, scope: !16510, file: !6489, line: 1314, type: !401)
!16514 = !DILocation(line: 1314, column: 59, scope: !16510)
!16515 = !DILocalVariable(name: "ehci", scope: !16510, file: !6489, line: 1316, type: !5814)
!16516 = !DILocation(line: 1316, column: 20, scope: !16510)
!16517 = !DILocation(line: 1316, column: 39, scope: !16510)
!16518 = !DILocation(line: 1316, column: 27, scope: !16510)
!16519 = !DILocation(line: 1320, column: 12, scope: !16510)
!16520 = !DILocation(line: 1320, column: 18, scope: !16510)
!16521 = !DILocation(line: 1320, column: 2, scope: !16510)
!16522 = !DILocation(line: 1321, column: 1, scope: !16510)
!16523 = distinct !DISubprogram(name: "ehci_port_handed_over", scope: !6489, file: !6489, line: 1323, type: !5478, scopeLine: 1324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16524 = !DILocalVariable(name: "hcd", arg: 1, scope: !16523, file: !6489, line: 1323, type: !342)
!16525 = !DILocation(line: 1323, column: 50, scope: !16523)
!16526 = !DILocalVariable(name: "portnum", arg: 2, scope: !16523, file: !6489, line: 1323, type: !401)
!16527 = !DILocation(line: 1323, column: 59, scope: !16523)
!16528 = !DILocalVariable(name: "ehci", scope: !16523, file: !6489, line: 1325, type: !5814)
!16529 = !DILocation(line: 1325, column: 20, scope: !16523)
!16530 = !DILocation(line: 1325, column: 39, scope: !16523)
!16531 = !DILocation(line: 1325, column: 27, scope: !16523)
!16532 = !DILocalVariable(name: "reg", scope: !16523, file: !6489, line: 1326, type: !2542)
!16533 = !DILocation(line: 1326, column: 16, scope: !16523)
!16534 = !DILocation(line: 1330, column: 9, scope: !16523)
!16535 = !DILocation(line: 1330, column: 15, scope: !16523)
!16536 = !DILocation(line: 1330, column: 21, scope: !16523)
!16537 = !DILocation(line: 1330, column: 33, scope: !16523)
!16538 = !DILocation(line: 1330, column: 41, scope: !16523)
!16539 = !DILocation(line: 1330, column: 6, scope: !16523)
!16540 = !DILocation(line: 1331, column: 20, scope: !16523)
!16541 = !DILocation(line: 1331, column: 26, scope: !16523)
!16542 = !DILocation(line: 1331, column: 9, scope: !16523)
!16543 = !DILocation(line: 1331, column: 31, scope: !16523)
!16544 = !DILocation(line: 1331, column: 2, scope: !16523)
!16545 = distinct !DISubprogram(name: "ehci_clear_tt_buffer_complete", scope: !9723, file: !9723, line: 140, type: !5451, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16546 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !16547)
!16547 = distinct !DILocation(line: 152, column: 2, scope: !16545)
!16548 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !16547)
!16549 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !16550)
!16550 = distinct !DILocation(line: 147, column: 2, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16552, file: !9723, line: 147, column: 2)
!16552 = distinct !DILexicalBlock(scope: !16553, file: !9723, line: 147, column: 2)
!16553 = distinct !DILexicalBlock(scope: !16554, file: !9723, line: 147, column: 2)
!16554 = distinct !DILexicalBlock(scope: !16555, file: !9723, line: 147, column: 2)
!16555 = distinct !DILexicalBlock(scope: !16545, file: !9723, line: 147, column: 2)
!16556 = !DILocalVariable(name: "hcd", arg: 1, scope: !16545, file: !9723, line: 140, type: !342)
!16557 = !DILocation(line: 140, column: 59, scope: !16545)
!16558 = !DILocalVariable(name: "ep", arg: 2, scope: !16545, file: !9723, line: 141, type: !5245)
!16559 = !DILocation(line: 141, column: 29, scope: !16545)
!16560 = !DILocalVariable(name: "ehci", scope: !16545, file: !9723, line: 143, type: !5814)
!16561 = !DILocation(line: 143, column: 20, scope: !16545)
!16562 = !DILocation(line: 143, column: 39, scope: !16545)
!16563 = !DILocation(line: 143, column: 27, scope: !16545)
!16564 = !DILocalVariable(name: "qh", scope: !16545, file: !9723, line: 144, type: !5884)
!16565 = !DILocation(line: 144, column: 19, scope: !16545)
!16566 = !DILocation(line: 144, column: 24, scope: !16545)
!16567 = !DILocation(line: 144, column: 28, scope: !16545)
!16568 = !DILocalVariable(name: "flags", scope: !16545, file: !9723, line: 145, type: !465)
!16569 = !DILocation(line: 145, column: 17, scope: !16545)
!16570 = !DILocation(line: 147, column: 2, scope: !16545)
!16571 = !DILocation(line: 147, column: 2, scope: !16555)
!16572 = !DILocalVariable(name: "__dummy", scope: !16573, file: !9723, line: 147, type: !465)
!16573 = distinct !DILexicalBlock(scope: !16554, file: !9723, line: 147, column: 2)
!16574 = !DILocation(line: 147, column: 2, scope: !16573)
!16575 = !DILocalVariable(name: "__dummy2", scope: !16573, file: !9723, line: 147, type: !465)
!16576 = !DILocation(line: 147, column: 2, scope: !16554)
!16577 = !DILocation(line: 147, column: 2, scope: !16553)
!16578 = !DILocation(line: 147, column: 2, scope: !16579)
!16579 = distinct !DILexicalBlock(scope: !16553, file: !9723, line: 147, column: 2)
!16580 = !DILocalVariable(name: "__dummy", scope: !16581, file: !9723, line: 147, type: !465)
!16581 = distinct !DILexicalBlock(scope: !16582, file: !9723, line: 147, column: 2)
!16582 = distinct !DILexicalBlock(scope: !16579, file: !9723, line: 147, column: 2)
!16583 = !DILocation(line: 147, column: 2, scope: !16581)
!16584 = !DILocalVariable(name: "__dummy2", scope: !16581, file: !9723, line: 147, type: !465)
!16585 = !DILocation(line: 147, column: 2, scope: !16582)
!16586 = !DILocation(line: 147, column: 2, scope: !16552)
!16587 = !{i32 -2139949560}
!16588 = !DILocation(line: 147, column: 2, scope: !16551)
!16589 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !16550)
!16590 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !16550)
!16591 = !DILocation(line: 148, column: 2, scope: !16545)
!16592 = !DILocation(line: 148, column: 6, scope: !16545)
!16593 = !DILocation(line: 148, column: 18, scope: !16545)
!16594 = !DILocation(line: 149, column: 6, scope: !16595)
!16595 = distinct !DILexicalBlock(scope: !16545, file: !9723, line: 149, column: 6)
!16596 = !DILocation(line: 149, column: 10, scope: !16595)
!16597 = !DILocation(line: 149, column: 19, scope: !16595)
!16598 = !DILocation(line: 149, column: 36, scope: !16595)
!16599 = !DILocation(line: 149, column: 52, scope: !16595)
!16600 = !DILocation(line: 149, column: 56, scope: !16595)
!16601 = !DILocation(line: 149, column: 40, scope: !16595)
!16602 = !DILocation(line: 150, column: 4, scope: !16595)
!16603 = !DILocation(line: 150, column: 7, scope: !16595)
!16604 = !DILocation(line: 150, column: 13, scope: !16595)
!16605 = !DILocation(line: 150, column: 22, scope: !16595)
!16606 = !DILocation(line: 149, column: 6, scope: !16545)
!16607 = !DILocation(line: 151, column: 17, scope: !16595)
!16608 = !DILocation(line: 151, column: 23, scope: !16595)
!16609 = !DILocation(line: 151, column: 3, scope: !16595)
!16610 = !DILocation(line: 152, column: 26, scope: !16545)
!16611 = !DILocation(line: 152, column: 32, scope: !16545)
!16612 = !DILocation(line: 152, column: 38, scope: !16545)
!16613 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !16547)
!16614 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !16547)
!16615 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !16547)
!16616 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !16547)
!16617 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !16547)
!16618 = !DILocation(line: 153, column: 1, scope: !16545)
!16619 = distinct !DISubprogram(name: "ehci_remove_device", scope: !3, file: !3, line: 1068, type: !5487, scopeLine: 1069, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16620 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !16621)
!16621 = distinct !DILocation(line: 1074, column: 2, scope: !16619)
!16622 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !16623)
!16623 = distinct !DILocation(line: 1072, column: 2, scope: !16619)
!16624 = !DILocalVariable(name: "hcd", arg: 1, scope: !16619, file: !3, line: 1068, type: !342)
!16625 = !DILocation(line: 1068, column: 48, scope: !16619)
!16626 = !DILocalVariable(name: "udev", arg: 2, scope: !16619, file: !3, line: 1068, type: !5047)
!16627 = !DILocation(line: 1068, column: 72, scope: !16619)
!16628 = !DILocalVariable(name: "ehci", scope: !16619, file: !3, line: 1070, type: !5814)
!16629 = !DILocation(line: 1070, column: 20, scope: !16619)
!16630 = !DILocation(line: 1070, column: 39, scope: !16619)
!16631 = !DILocation(line: 1070, column: 27, scope: !16619)
!16632 = !DILocation(line: 1072, column: 17, scope: !16619)
!16633 = !DILocation(line: 1072, column: 23, scope: !16619)
!16634 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !16623)
!16635 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !16623)
!16636 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !16623)
!16637 = !DILocation(line: 1073, column: 10, scope: !16619)
!16638 = !DILocation(line: 1073, column: 2, scope: !16619)
!16639 = !DILocation(line: 1074, column: 19, scope: !16619)
!16640 = !DILocation(line: 1074, column: 25, scope: !16619)
!16641 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !16621)
!16642 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !16621)
!16643 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !16621)
!16644 = !DILocation(line: 1075, column: 1, scope: !16619)
!16645 = distinct !DISubprogram(name: "dbg_status", scope: !6452, file: !6452, line: 1071, type: !6453, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16646 = !DILocalVariable(name: "ehci", arg: 1, scope: !16645, file: !6452, line: 1071, type: !5814)
!16647 = !DILocation(line: 1071, column: 48, scope: !16645)
!16648 = !DILocalVariable(name: "label", arg: 2, scope: !16645, file: !6452, line: 1071, type: !357)
!16649 = !DILocation(line: 1071, column: 66, scope: !16645)
!16650 = !DILocalVariable(name: "status", arg: 3, scope: !16645, file: !6452, line: 1072, type: !303)
!16651 = !DILocation(line: 1072, column: 7, scope: !16645)
!16652 = !DILocation(line: 1072, column: 17, scope: !16645)
!16653 = distinct !DISubprogram(name: "ktime_get_real", scope: !296, file: !296, line: 77, type: !2477, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16654 = !DILocation(line: 79, column: 9, scope: !16653)
!16655 = !DILocation(line: 79, column: 2, scope: !16653)
!16656 = distinct !DISubprogram(name: "create_debug_files", scope: !6452, file: !6452, line: 1078, type: !6235, scopeLine: 1078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16657 = !DILocalVariable(name: "bus", arg: 1, scope: !16656, file: !6452, line: 1078, type: !5814)
!16658 = !DILocation(line: 1078, column: 56, scope: !16656)
!16659 = !DILocation(line: 1078, column: 63, scope: !16656)
!16660 = distinct !DISubprogram(name: "create_sysfs_files", scope: !6251, file: !6251, line: 149, type: !6346, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16661 = !DILocalVariable(name: "ehci", arg: 1, scope: !16660, file: !6251, line: 149, type: !5814)
!16662 = !DILocation(line: 149, column: 55, scope: !16660)
!16663 = !DILocalVariable(name: "controller", scope: !16660, file: !6251, line: 151, type: !349)
!16664 = !DILocation(line: 151, column: 17, scope: !16660)
!16665 = !DILocation(line: 151, column: 42, scope: !16660)
!16666 = !DILocation(line: 151, column: 30, scope: !16660)
!16667 = !DILocation(line: 151, column: 49, scope: !16660)
!16668 = !DILocation(line: 151, column: 54, scope: !16660)
!16669 = !DILocalVariable(name: "i", scope: !16660, file: !6251, line: 152, type: !401)
!16670 = !DILocation(line: 152, column: 6, scope: !16660)
!16671 = !DILocation(line: 156, column: 26, scope: !16672)
!16672 = distinct !DILexicalBlock(scope: !16660, file: !6251, line: 155, column: 6)
!16673 = !DILocation(line: 156, column: 7, scope: !16672)
!16674 = !DILocation(line: 156, column: 5, scope: !16672)
!16675 = !DILocation(line: 157, column: 6, scope: !16676)
!16676 = distinct !DILexicalBlock(scope: !16660, file: !6251, line: 157, column: 6)
!16677 = !DILocation(line: 157, column: 6, scope: !16660)
!16678 = !DILocation(line: 158, column: 3, scope: !16676)
!16679 = !DILocation(line: 160, column: 25, scope: !16660)
!16680 = !DILocation(line: 160, column: 6, scope: !16660)
!16681 = !DILocation(line: 160, column: 4, scope: !16660)
!16682 = !DILocation(line: 160, column: 2, scope: !16660)
!16683 = !DILabel(scope: !16660, name: "out", file: !6251, line: 161)
!16684 = !DILocation(line: 161, column: 1, scope: !16660)
!16685 = !DILocation(line: 162, column: 9, scope: !16660)
!16686 = !DILocation(line: 162, column: 2, scope: !16660)
!16687 = distinct !DISubprogram(name: "companion_show", scope: !6251, file: !6251, line: 10, type: !6257, scopeLine: 13, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16688 = !DILocalVariable(name: "dev", arg: 1, scope: !16687, file: !6251, line: 10, type: !349)
!16689 = !DILocation(line: 10, column: 46, scope: !16687)
!16690 = !DILocalVariable(name: "attr", arg: 2, scope: !16687, file: !6251, line: 11, type: !6259)
!16691 = !DILocation(line: 11, column: 35, scope: !16687)
!16692 = !DILocalVariable(name: "buf", arg: 3, scope: !16687, file: !6251, line: 12, type: !417)
!16693 = !DILocation(line: 12, column: 16, scope: !16687)
!16694 = !DILocalVariable(name: "ehci", scope: !16687, file: !6251, line: 14, type: !5814)
!16695 = !DILocation(line: 14, column: 20, scope: !16687)
!16696 = !DILocalVariable(name: "nports", scope: !16687, file: !6251, line: 15, type: !401)
!16697 = !DILocation(line: 15, column: 8, scope: !16687)
!16698 = !DILocalVariable(name: "index", scope: !16687, file: !6251, line: 15, type: !401)
!16699 = !DILocation(line: 15, column: 16, scope: !16687)
!16700 = !DILocalVariable(name: "n", scope: !16687, file: !6251, line: 15, type: !401)
!16701 = !DILocation(line: 15, column: 23, scope: !16687)
!16702 = !DILocalVariable(name: "count", scope: !16687, file: !6251, line: 16, type: !401)
!16703 = !DILocation(line: 16, column: 8, scope: !16687)
!16704 = !DILocalVariable(name: "ptr", scope: !16687, file: !6251, line: 17, type: !417)
!16705 = !DILocation(line: 17, column: 10, scope: !16687)
!16706 = !DILocation(line: 17, column: 16, scope: !16687)
!16707 = !DILocation(line: 19, column: 37, scope: !16687)
!16708 = !DILocation(line: 19, column: 21, scope: !16687)
!16709 = !DILocation(line: 19, column: 9, scope: !16687)
!16710 = !DILocation(line: 19, column: 7, scope: !16687)
!16711 = !DILocation(line: 20, column: 11, scope: !16687)
!16712 = !DILocation(line: 20, column: 9, scope: !16687)
!16713 = !DILocation(line: 22, column: 13, scope: !16714)
!16714 = distinct !DILexicalBlock(scope: !16687, file: !6251, line: 22, column: 2)
!16715 = !DILocation(line: 22, column: 7, scope: !16714)
!16716 = !DILocation(line: 22, column: 18, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16714, file: !6251, line: 22, column: 2)
!16718 = !DILocation(line: 22, column: 26, scope: !16717)
!16719 = !DILocation(line: 22, column: 24, scope: !16717)
!16720 = !DILocation(line: 22, column: 2, scope: !16714)
!16721 = !DILocation(line: 23, column: 16, scope: !16722)
!16722 = distinct !DILexicalBlock(scope: !16723, file: !6251, line: 23, column: 7)
!16723 = distinct !DILexicalBlock(scope: !16717, file: !6251, line: 22, column: 43)
!16724 = !DILocation(line: 23, column: 24, scope: !16722)
!16725 = !DILocation(line: 23, column: 30, scope: !16722)
!16726 = !DILocation(line: 23, column: 7, scope: !16722)
!16727 = !DILocation(line: 23, column: 7, scope: !16723)
!16728 = !DILocation(line: 24, column: 18, scope: !16729)
!16729 = distinct !DILexicalBlock(scope: !16722, file: !6251, line: 23, column: 48)
!16730 = !DILocation(line: 24, column: 23, scope: !16729)
!16731 = !DILocation(line: 24, column: 38, scope: !16729)
!16732 = !DILocation(line: 24, column: 44, scope: !16729)
!16733 = !DILocation(line: 24, column: 8, scope: !16729)
!16734 = !DILocation(line: 24, column: 6, scope: !16729)
!16735 = !DILocation(line: 25, column: 11, scope: !16729)
!16736 = !DILocation(line: 25, column: 8, scope: !16729)
!16737 = !DILocation(line: 26, column: 13, scope: !16729)
!16738 = !DILocation(line: 26, column: 10, scope: !16729)
!16739 = !DILocation(line: 27, column: 3, scope: !16729)
!16740 = !DILocation(line: 28, column: 2, scope: !16723)
!16741 = !DILocation(line: 22, column: 34, scope: !16717)
!16742 = !DILocation(line: 22, column: 2, scope: !16717)
!16743 = distinct !{!16743, !16720, !16744}
!16744 = !DILocation(line: 28, column: 2, scope: !16714)
!16745 = !DILocation(line: 29, column: 9, scope: !16687)
!16746 = !DILocation(line: 29, column: 15, scope: !16687)
!16747 = !DILocation(line: 29, column: 13, scope: !16687)
!16748 = !DILocation(line: 29, column: 2, scope: !16687)
!16749 = distinct !DISubprogram(name: "companion_store", scope: !6251, file: !6251, line: 37, type: !6262, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16750 = !DILocalVariable(name: "dev", arg: 1, scope: !16749, file: !6251, line: 37, type: !349)
!16751 = !DILocation(line: 37, column: 47, scope: !16749)
!16752 = !DILocalVariable(name: "attr", arg: 2, scope: !16749, file: !6251, line: 38, type: !6259)
!16753 = !DILocation(line: 38, column: 36, scope: !16749)
!16754 = !DILocalVariable(name: "buf", arg: 3, scope: !16749, file: !6251, line: 39, type: !357)
!16755 = !DILocation(line: 39, column: 23, scope: !16749)
!16756 = !DILocalVariable(name: "count", arg: 4, scope: !16749, file: !6251, line: 39, type: !462)
!16757 = !DILocation(line: 39, column: 35, scope: !16749)
!16758 = !DILocalVariable(name: "ehci", scope: !16749, file: !6251, line: 41, type: !5814)
!16759 = !DILocation(line: 41, column: 20, scope: !16749)
!16760 = !DILocalVariable(name: "portnum", scope: !16749, file: !6251, line: 42, type: !401)
!16761 = !DILocation(line: 42, column: 8, scope: !16749)
!16762 = !DILocalVariable(name: "new_owner", scope: !16749, file: !6251, line: 42, type: !401)
!16763 = !DILocation(line: 42, column: 17, scope: !16749)
!16764 = !DILocation(line: 44, column: 37, scope: !16749)
!16765 = !DILocation(line: 44, column: 21, scope: !16749)
!16766 = !DILocation(line: 44, column: 9, scope: !16749)
!16767 = !DILocation(line: 44, column: 7, scope: !16749)
!16768 = !DILocation(line: 45, column: 12, scope: !16749)
!16769 = !DILocation(line: 46, column: 13, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16749, file: !6251, line: 46, column: 6)
!16771 = !DILocation(line: 46, column: 6, scope: !16770)
!16772 = !DILocation(line: 46, column: 34, scope: !16770)
!16773 = !DILocation(line: 46, column: 6, scope: !16749)
!16774 = !DILocation(line: 47, column: 3, scope: !16770)
!16775 = !DILocation(line: 48, column: 6, scope: !16776)
!16776 = distinct !DILexicalBlock(scope: !16749, file: !6251, line: 48, column: 6)
!16777 = !DILocation(line: 48, column: 14, scope: !16776)
!16778 = !DILocation(line: 48, column: 6, scope: !16749)
!16779 = !DILocation(line: 49, column: 15, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16776, file: !6251, line: 48, column: 19)
!16781 = !DILocation(line: 49, column: 13, scope: !16780)
!16782 = !DILocation(line: 49, column: 11, scope: !16780)
!16783 = !DILocation(line: 50, column: 13, scope: !16780)
!16784 = !DILocation(line: 51, column: 2, scope: !16780)
!16785 = !DILocation(line: 52, column: 6, scope: !16786)
!16786 = distinct !DILexicalBlock(scope: !16749, file: !6251, line: 52, column: 6)
!16787 = !DILocation(line: 52, column: 14, scope: !16786)
!16788 = !DILocation(line: 52, column: 19, scope: !16786)
!16789 = !DILocation(line: 52, column: 22, scope: !16786)
!16790 = !DILocation(line: 52, column: 32, scope: !16786)
!16791 = !DILocation(line: 52, column: 30, scope: !16786)
!16792 = !DILocation(line: 52, column: 6, scope: !16749)
!16793 = !DILocation(line: 53, column: 3, scope: !16786)
!16794 = !DILocation(line: 54, column: 9, scope: !16749)
!16795 = !DILocation(line: 55, column: 6, scope: !16796)
!16796 = distinct !DILexicalBlock(scope: !16749, file: !6251, line: 55, column: 6)
!16797 = !DILocation(line: 55, column: 6, scope: !16749)
!16798 = !DILocation(line: 56, column: 11, scope: !16796)
!16799 = !DILocation(line: 56, column: 21, scope: !16796)
!16800 = !DILocation(line: 56, column: 27, scope: !16796)
!16801 = !DILocation(line: 56, column: 3, scope: !16796)
!16802 = !DILocation(line: 58, column: 13, scope: !16796)
!16803 = !DILocation(line: 58, column: 23, scope: !16796)
!16804 = !DILocation(line: 58, column: 29, scope: !16796)
!16805 = !DILocation(line: 58, column: 3, scope: !16796)
!16806 = !DILocation(line: 59, column: 12, scope: !16749)
!16807 = !DILocation(line: 59, column: 18, scope: !16749)
!16808 = !DILocation(line: 59, column: 27, scope: !16749)
!16809 = !DILocation(line: 59, column: 2, scope: !16749)
!16810 = !DILocation(line: 60, column: 9, scope: !16749)
!16811 = !DILocation(line: 60, column: 2, scope: !16749)
!16812 = !DILocation(line: 61, column: 1, scope: !16749)
!16813 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !158, file: !158, line: 655, type: !16814, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16814 = !DISubroutineType(types: !16815)
!16815 = !{!341, !4903}
!16816 = !DILocalVariable(name: "dev", arg: 1, scope: !16813, file: !158, line: 655, type: !4903)
!16817 = !DILocation(line: 655, column: 58, scope: !16813)
!16818 = !DILocation(line: 657, column: 9, scope: !16813)
!16819 = !DILocation(line: 657, column: 14, scope: !16813)
!16820 = !DILocation(line: 657, column: 2, scope: !16813)
!16821 = distinct !DISubprogram(name: "set_owner", scope: !6489, file: !6489, line: 534, type: !16822, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16822 = !DISubroutineType(types: !16823)
!16823 = !{null, !5814, !401, !401}
!16824 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !16825)
!16825 = distinct !DILocation(line: 559, column: 3, scope: !16826)
!16826 = distinct !DILexicalBlock(scope: !16827, file: !6489, line: 547, column: 32)
!16827 = distinct !DILexicalBlock(scope: !16828, file: !6489, line: 547, column: 2)
!16828 = distinct !DILexicalBlock(scope: !16821, file: !6489, line: 547, column: 2)
!16829 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !16830)
!16830 = distinct !DILocation(line: 548, column: 3, scope: !16826)
!16831 = !DILocalVariable(name: "ehci", arg: 1, scope: !16821, file: !6489, line: 534, type: !5814)
!16832 = !DILocation(line: 534, column: 40, scope: !16821)
!16833 = !DILocalVariable(name: "portnum", arg: 2, scope: !16821, file: !6489, line: 534, type: !401)
!16834 = !DILocation(line: 534, column: 50, scope: !16821)
!16835 = !DILocalVariable(name: "new_owner", arg: 3, scope: !16821, file: !6489, line: 534, type: !401)
!16836 = !DILocation(line: 534, column: 63, scope: !16821)
!16837 = !DILocalVariable(name: "status_reg", scope: !16821, file: !6489, line: 536, type: !2542)
!16838 = !DILocation(line: 536, column: 16, scope: !16821)
!16839 = !DILocalVariable(name: "port_status", scope: !16821, file: !6489, line: 537, type: !303)
!16840 = !DILocation(line: 537, column: 8, scope: !16821)
!16841 = !DILocalVariable(name: "try", scope: !16821, file: !6489, line: 538, type: !401)
!16842 = !DILocation(line: 538, column: 9, scope: !16821)
!16843 = !DILocation(line: 540, column: 16, scope: !16821)
!16844 = !DILocation(line: 540, column: 22, scope: !16821)
!16845 = !DILocation(line: 540, column: 28, scope: !16821)
!16846 = !DILocation(line: 540, column: 40, scope: !16821)
!16847 = !DILocation(line: 540, column: 13, scope: !16821)
!16848 = !DILocation(line: 547, column: 11, scope: !16828)
!16849 = !DILocation(line: 547, column: 7, scope: !16828)
!16850 = !DILocation(line: 547, column: 16, scope: !16827)
!16851 = !DILocation(line: 547, column: 20, scope: !16827)
!16852 = !DILocation(line: 547, column: 2, scope: !16828)
!16853 = !DILocation(line: 548, column: 18, scope: !16826)
!16854 = !DILocation(line: 548, column: 24, scope: !16826)
!16855 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !16830)
!16856 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !16830)
!16857 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !16830)
!16858 = !DILocation(line: 549, column: 28, scope: !16826)
!16859 = !DILocation(line: 549, column: 34, scope: !16826)
!16860 = !DILocation(line: 549, column: 17, scope: !16826)
!16861 = !DILocation(line: 549, column: 15, scope: !16826)
!16862 = !DILocation(line: 550, column: 8, scope: !16863)
!16863 = distinct !DILexicalBlock(scope: !16826, file: !6489, line: 550, column: 7)
!16864 = !DILocation(line: 550, column: 20, scope: !16863)
!16865 = !DILocation(line: 550, column: 37, scope: !16863)
!16866 = !DILocation(line: 550, column: 34, scope: !16863)
!16867 = !DILocation(line: 551, column: 5, scope: !16863)
!16868 = !DILocation(line: 551, column: 9, scope: !16863)
!16869 = !DILocation(line: 551, column: 21, scope: !16863)
!16870 = !DILocation(line: 552, column: 6, scope: !16863)
!16871 = !DILocation(line: 550, column: 7, scope: !16826)
!16872 = !DILocation(line: 553, column: 8, scope: !16863)
!16873 = !DILocation(line: 553, column: 4, scope: !16863)
!16874 = !DILocation(line: 555, column: 16, scope: !16875)
!16875 = distinct !DILexicalBlock(scope: !16863, file: !6489, line: 554, column: 8)
!16876 = !DILocation(line: 556, column: 16, scope: !16875)
!16877 = !DILocation(line: 557, column: 16, scope: !16875)
!16878 = !DILocation(line: 557, column: 22, scope: !16875)
!16879 = !DILocation(line: 557, column: 35, scope: !16875)
!16880 = !DILocation(line: 557, column: 4, scope: !16875)
!16881 = !DILocation(line: 559, column: 20, scope: !16826)
!16882 = !DILocation(line: 559, column: 26, scope: !16826)
!16883 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !16825)
!16884 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !16825)
!16885 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !16825)
!16886 = !DILocation(line: 560, column: 7, scope: !16887)
!16887 = distinct !DILexicalBlock(scope: !16826, file: !6489, line: 560, column: 7)
!16888 = !DILocation(line: 560, column: 11, scope: !16887)
!16889 = !DILocation(line: 560, column: 7, scope: !16826)
!16890 = !DILocation(line: 561, column: 4, scope: !16887)
!16891 = !DILocation(line: 562, column: 2, scope: !16826)
!16892 = !DILocation(line: 547, column: 25, scope: !16827)
!16893 = !DILocation(line: 547, column: 2, scope: !16827)
!16894 = distinct !{!16894, !16852, !16895}
!16895 = !DILocation(line: 562, column: 2, scope: !16828)
!16896 = !DILocation(line: 563, column: 1, scope: !16821)
!16897 = distinct !DISubprogram(name: "uframe_periodic_max_show", scope: !6251, file: !6251, line: 68, type: !6257, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16898 = !DILocalVariable(name: "dev", arg: 1, scope: !16897, file: !6251, line: 68, type: !349)
!16899 = !DILocation(line: 68, column: 56, scope: !16897)
!16900 = !DILocalVariable(name: "attr", arg: 2, scope: !16897, file: !6251, line: 69, type: !6259)
!16901 = !DILocation(line: 69, column: 31, scope: !16897)
!16902 = !DILocalVariable(name: "buf", arg: 3, scope: !16897, file: !6251, line: 70, type: !417)
!16903 = !DILocation(line: 70, column: 12, scope: !16897)
!16904 = !DILocalVariable(name: "ehci", scope: !16897, file: !6251, line: 72, type: !5814)
!16905 = !DILocation(line: 72, column: 20, scope: !16897)
!16906 = !DILocalVariable(name: "n", scope: !16897, file: !6251, line: 73, type: !401)
!16907 = !DILocation(line: 73, column: 8, scope: !16897)
!16908 = !DILocation(line: 75, column: 37, scope: !16897)
!16909 = !DILocation(line: 75, column: 21, scope: !16897)
!16910 = !DILocation(line: 75, column: 9, scope: !16897)
!16911 = !DILocation(line: 75, column: 7, scope: !16897)
!16912 = !DILocation(line: 76, column: 16, scope: !16897)
!16913 = !DILocation(line: 76, column: 40, scope: !16897)
!16914 = !DILocation(line: 76, column: 46, scope: !16897)
!16915 = !DILocation(line: 76, column: 6, scope: !16897)
!16916 = !DILocation(line: 76, column: 4, scope: !16897)
!16917 = !DILocation(line: 77, column: 9, scope: !16897)
!16918 = !DILocation(line: 77, column: 2, scope: !16897)
!16919 = distinct !DISubprogram(name: "uframe_periodic_max_store", scope: !6251, file: !6251, line: 81, type: !6262, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!16920 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !16921)
!16921 = distinct !DILocation(line: 143, column: 2, scope: !16919)
!16922 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !16921)
!16923 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !16924)
!16924 = distinct !DILocation(line: 107, column: 2, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16926, file: !6251, line: 107, column: 2)
!16926 = distinct !DILexicalBlock(scope: !16927, file: !6251, line: 107, column: 2)
!16927 = distinct !DILexicalBlock(scope: !16928, file: !6251, line: 107, column: 2)
!16928 = distinct !DILexicalBlock(scope: !16929, file: !6251, line: 107, column: 2)
!16929 = distinct !DILexicalBlock(scope: !16919, file: !6251, line: 107, column: 2)
!16930 = !DILocalVariable(name: "dev", arg: 1, scope: !16919, file: !6251, line: 81, type: !349)
!16931 = !DILocation(line: 81, column: 57, scope: !16919)
!16932 = !DILocalVariable(name: "attr", arg: 2, scope: !16919, file: !6251, line: 82, type: !6259)
!16933 = !DILocation(line: 82, column: 31, scope: !16919)
!16934 = !DILocalVariable(name: "buf", arg: 3, scope: !16919, file: !6251, line: 83, type: !357)
!16935 = !DILocation(line: 83, column: 18, scope: !16919)
!16936 = !DILocalVariable(name: "count", arg: 4, scope: !16919, file: !6251, line: 83, type: !462)
!16937 = !DILocation(line: 83, column: 30, scope: !16919)
!16938 = !DILocalVariable(name: "ehci", scope: !16919, file: !6251, line: 85, type: !5814)
!16939 = !DILocation(line: 85, column: 20, scope: !16919)
!16940 = !DILocalVariable(name: "uframe_periodic_max", scope: !16919, file: !6251, line: 86, type: !7)
!16941 = !DILocation(line: 86, column: 12, scope: !16919)
!16942 = !DILocalVariable(name: "uframe", scope: !16919, file: !6251, line: 87, type: !7)
!16943 = !DILocation(line: 87, column: 12, scope: !16919)
!16944 = !DILocalVariable(name: "flags", scope: !16919, file: !6251, line: 88, type: !465)
!16945 = !DILocation(line: 88, column: 17, scope: !16919)
!16946 = !DILocalVariable(name: "ret", scope: !16919, file: !6251, line: 89, type: !448)
!16947 = !DILocation(line: 89, column: 12, scope: !16919)
!16948 = !DILocation(line: 91, column: 37, scope: !16919)
!16949 = !DILocation(line: 91, column: 21, scope: !16919)
!16950 = !DILocation(line: 91, column: 9, scope: !16919)
!16951 = !DILocation(line: 91, column: 7, scope: !16919)
!16952 = !DILocation(line: 92, column: 17, scope: !16953)
!16953 = distinct !DILexicalBlock(scope: !16919, file: !6251, line: 92, column: 6)
!16954 = !DILocation(line: 92, column: 6, scope: !16953)
!16955 = !DILocation(line: 92, column: 47, scope: !16953)
!16956 = !DILocation(line: 92, column: 6, scope: !16919)
!16957 = !DILocation(line: 93, column: 3, scope: !16953)
!16958 = !DILocation(line: 95, column: 6, scope: !16959)
!16959 = distinct !DILexicalBlock(scope: !16919, file: !6251, line: 95, column: 6)
!16960 = !DILocation(line: 95, column: 26, scope: !16959)
!16961 = !DILocation(line: 95, column: 32, scope: !16959)
!16962 = !DILocation(line: 95, column: 35, scope: !16959)
!16963 = !DILocation(line: 95, column: 55, scope: !16959)
!16964 = !DILocation(line: 95, column: 6, scope: !16919)
!16965 = !DILocation(line: 96, column: 3, scope: !16966)
!16966 = distinct !DILexicalBlock(scope: !16959, file: !6251, line: 95, column: 63)
!16967 = !DILocation(line: 98, column: 3, scope: !16966)
!16968 = !DILocation(line: 101, column: 6, scope: !16919)
!16969 = !DILocation(line: 107, column: 2, scope: !16919)
!16970 = !DILocation(line: 107, column: 2, scope: !16929)
!16971 = !DILocalVariable(name: "__dummy", scope: !16972, file: !6251, line: 107, type: !465)
!16972 = distinct !DILexicalBlock(scope: !16928, file: !6251, line: 107, column: 2)
!16973 = !DILocation(line: 107, column: 2, scope: !16972)
!16974 = !DILocalVariable(name: "__dummy2", scope: !16972, file: !6251, line: 107, type: !465)
!16975 = !DILocation(line: 107, column: 2, scope: !16928)
!16976 = !DILocation(line: 107, column: 2, scope: !16927)
!16977 = !DILocation(line: 107, column: 2, scope: !16978)
!16978 = distinct !DILexicalBlock(scope: !16927, file: !6251, line: 107, column: 2)
!16979 = !DILocalVariable(name: "__dummy", scope: !16980, file: !6251, line: 107, type: !465)
!16980 = distinct !DILexicalBlock(scope: !16981, file: !6251, line: 107, column: 2)
!16981 = distinct !DILexicalBlock(scope: !16978, file: !6251, line: 107, column: 2)
!16982 = !DILocation(line: 107, column: 2, scope: !16980)
!16983 = !DILocalVariable(name: "__dummy2", scope: !16980, file: !6251, line: 107, type: !465)
!16984 = !DILocation(line: 107, column: 2, scope: !16981)
!16985 = !DILocation(line: 107, column: 2, scope: !16926)
!16986 = !{i32 -2139782597}
!16987 = !DILocation(line: 107, column: 2, scope: !16925)
!16988 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !16924)
!16989 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !16924)
!16990 = !DILocation(line: 113, column: 6, scope: !16991)
!16991 = distinct !DILexicalBlock(scope: !16919, file: !6251, line: 113, column: 6)
!16992 = !DILocation(line: 113, column: 28, scope: !16991)
!16993 = !DILocation(line: 113, column: 34, scope: !16991)
!16994 = !DILocation(line: 113, column: 26, scope: !16991)
!16995 = !DILocation(line: 113, column: 6, scope: !16919)
!16996 = !DILocalVariable(name: "allocated_max", scope: !16997, file: !6251, line: 114, type: !1182)
!16997 = distinct !DILexicalBlock(scope: !16991, file: !6251, line: 113, column: 55)
!16998 = !DILocation(line: 114, column: 7, scope: !16997)
!16999 = !DILocation(line: 116, column: 15, scope: !17000)
!17000 = distinct !DILexicalBlock(scope: !16997, file: !6251, line: 116, column: 3)
!17001 = !DILocation(line: 116, column: 8, scope: !17000)
!17002 = !DILocation(line: 116, column: 20, scope: !17003)
!17003 = distinct !DILexicalBlock(scope: !17000, file: !6251, line: 116, column: 3)
!17004 = !DILocation(line: 116, column: 27, scope: !17003)
!17005 = !DILocation(line: 116, column: 3, scope: !17000)
!17006 = !DILocalVariable(name: "__UNIQUE_ID___x367", scope: !17007, file: !6251, line: 117, type: !1182)
!17007 = distinct !DILexicalBlock(scope: !17003, file: !6251, line: 117, column: 20)
!17008 = !DILocation(line: 117, column: 20, scope: !17007)
!17009 = !DILocalVariable(name: "__UNIQUE_ID___y368", scope: !17007, file: !6251, line: 117, type: !1182)
!17010 = !DILocation(line: 117, column: 20, scope: !17003)
!17011 = !DILocation(line: 117, column: 18, scope: !17003)
!17012 = !DILocation(line: 117, column: 4, scope: !17003)
!17013 = !DILocation(line: 116, column: 50, scope: !17003)
!17014 = !DILocation(line: 116, column: 3, scope: !17003)
!17015 = distinct !{!17015, !17005, !17016}
!17016 = !DILocation(line: 117, column: 20, scope: !17000)
!17017 = !DILocation(line: 120, column: 7, scope: !17018)
!17018 = distinct !DILexicalBlock(scope: !16997, file: !6251, line: 120, column: 7)
!17019 = !DILocation(line: 120, column: 23, scope: !17018)
!17020 = !DILocation(line: 120, column: 21, scope: !17018)
!17021 = !DILocation(line: 120, column: 7, scope: !16997)
!17022 = !DILocation(line: 121, column: 4, scope: !17023)
!17023 = distinct !DILexicalBlock(scope: !17018, file: !6251, line: 120, column: 44)
!17024 = !DILocation(line: 126, column: 4, scope: !17023)
!17025 = !DILocation(line: 128, column: 2, scope: !16997)
!17026 = !DILocation(line: 132, column: 2, scope: !16919)
!17027 = !DILocation(line: 136, column: 6, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !16919, file: !6251, line: 136, column: 6)
!17029 = !DILocation(line: 136, column: 26, scope: !17028)
!17030 = !DILocation(line: 136, column: 6, scope: !16919)
!17031 = !DILocation(line: 137, column: 3, scope: !17028)
!17032 = !DILocation(line: 139, column: 30, scope: !16919)
!17033 = !DILocation(line: 139, column: 2, scope: !16919)
!17034 = !DILocation(line: 139, column: 8, scope: !16919)
!17035 = !DILocation(line: 139, column: 28, scope: !16919)
!17036 = !DILocation(line: 140, column: 8, scope: !16919)
!17037 = !DILocation(line: 140, column: 6, scope: !16919)
!17038 = !DILocation(line: 140, column: 2, scope: !16919)
!17039 = !DILabel(scope: !16919, name: "out_unlock", file: !6251, line: 142)
!17040 = !DILocation(line: 142, column: 1, scope: !16919)
!17041 = !DILocation(line: 143, column: 27, scope: !16919)
!17042 = !DILocation(line: 143, column: 33, scope: !16919)
!17043 = !DILocation(line: 143, column: 39, scope: !16919)
!17044 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !16921)
!17045 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !16921)
!17046 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !16921)
!17047 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !16921)
!17048 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !16921)
!17049 = !DILocation(line: 144, column: 9, scope: !16919)
!17050 = !DILocation(line: 144, column: 2, scope: !16919)
!17051 = !DILocation(line: 145, column: 1, scope: !16919)
!17052 = distinct !DISubprogram(name: "ehci_silence_controller", scope: !3, file: !3, line: 335, type: !6235, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!17053 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !17054)
!17054 = distinct !DILocation(line: 348, column: 2, scope: !17052)
!17055 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !17056)
!17056 = distinct !DILocation(line: 339, column: 2, scope: !17052)
!17057 = !DILocalVariable(name: "ehci", arg: 1, scope: !17052, file: !3, line: 335, type: !5814)
!17058 = !DILocation(line: 335, column: 54, scope: !17052)
!17059 = !DILocation(line: 337, column: 12, scope: !17052)
!17060 = !DILocation(line: 337, column: 2, scope: !17052)
!17061 = !DILocation(line: 339, column: 17, scope: !17052)
!17062 = !DILocation(line: 339, column: 23, scope: !17052)
!17063 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !17056)
!17064 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !17056)
!17065 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !17056)
!17066 = !DILocation(line: 340, column: 2, scope: !17052)
!17067 = !DILocation(line: 340, column: 8, scope: !17052)
!17068 = !DILocation(line: 340, column: 17, scope: !17052)
!17069 = !DILocation(line: 341, column: 26, scope: !17052)
!17070 = !DILocation(line: 341, column: 2, scope: !17052)
!17071 = !DILocation(line: 344, column: 14, scope: !17052)
!17072 = !DILocation(line: 344, column: 24, scope: !17052)
!17073 = !DILocation(line: 344, column: 30, scope: !17052)
!17074 = !DILocation(line: 344, column: 36, scope: !17052)
!17075 = !DILocation(line: 344, column: 2, scope: !17052)
!17076 = !DILocation(line: 347, column: 13, scope: !17052)
!17077 = !DILocation(line: 347, column: 20, scope: !17052)
!17078 = !DILocation(line: 347, column: 26, scope: !17052)
!17079 = !DILocation(line: 347, column: 32, scope: !17052)
!17080 = !DILocation(line: 347, column: 2, scope: !17052)
!17081 = !DILocation(line: 348, column: 19, scope: !17052)
!17082 = !DILocation(line: 348, column: 25, scope: !17052)
!17083 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !17054)
!17084 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !17054)
!17085 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !17054)
!17086 = !DILocation(line: 349, column: 1, scope: !17052)
!17087 = distinct !DISubprogram(name: "remove_sysfs_files", scope: !6251, file: !6251, line: 165, type: !6235, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!17088 = !DILocalVariable(name: "ehci", arg: 1, scope: !17087, file: !6251, line: 165, type: !5814)
!17089 = !DILocation(line: 165, column: 56, scope: !17087)
!17090 = !DILocalVariable(name: "controller", scope: !17087, file: !6251, line: 167, type: !349)
!17091 = !DILocation(line: 167, column: 17, scope: !17087)
!17092 = !DILocation(line: 167, column: 42, scope: !17087)
!17093 = !DILocation(line: 167, column: 30, scope: !17087)
!17094 = !DILocation(line: 167, column: 49, scope: !17087)
!17095 = !DILocation(line: 167, column: 54, scope: !17087)
!17096 = !DILocation(line: 171, column: 22, scope: !17097)
!17097 = distinct !DILexicalBlock(scope: !17087, file: !6251, line: 170, column: 6)
!17098 = !DILocation(line: 171, column: 3, scope: !17097)
!17099 = !DILocation(line: 173, column: 21, scope: !17087)
!17100 = !DILocation(line: 173, column: 2, scope: !17087)
!17101 = !DILocation(line: 174, column: 1, scope: !17087)
!17102 = distinct !DISubprogram(name: "remove_debug_files", scope: !6452, file: !6452, line: 1079, type: !6235, scopeLine: 1079, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!17103 = !DILocalVariable(name: "bus", arg: 1, scope: !17102, file: !6452, line: 1079, type: !5814)
!17104 = !DILocation(line: 1079, column: 56, scope: !17102)
!17105 = !DILocation(line: 1079, column: 63, scope: !17102)
!17106 = distinct !DISubprogram(name: "ehci_turn_off_all_ports", scope: !3, file: !3, line: 318, type: !6235, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!17107 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !17108)
!17108 = distinct !DILocation(line: 325, column: 3, scope: !17109)
!17109 = distinct !DILexicalBlock(scope: !17106, file: !3, line: 322, column: 17)
!17110 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !17111)
!17111 = distinct !DILocation(line: 323, column: 3, scope: !17109)
!17112 = !DILocalVariable(name: "ehci", arg: 1, scope: !17106, file: !3, line: 318, type: !5814)
!17113 = !DILocation(line: 318, column: 54, scope: !17106)
!17114 = !DILocalVariable(name: "port", scope: !17106, file: !3, line: 320, type: !401)
!17115 = !DILocation(line: 320, column: 6, scope: !17106)
!17116 = !DILocation(line: 320, column: 13, scope: !17106)
!17117 = !DILocation(line: 322, column: 2, scope: !17106)
!17118 = !DILocation(line: 322, column: 13, scope: !17106)
!17119 = !DILocation(line: 323, column: 20, scope: !17109)
!17120 = !DILocation(line: 323, column: 26, scope: !17109)
!17121 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !17111)
!17122 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !17111)
!17123 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !17111)
!17124 = !DILocation(line: 324, column: 19, scope: !17109)
!17125 = !DILocation(line: 324, column: 25, scope: !17109)
!17126 = !DILocation(line: 324, column: 3, scope: !17109)
!17127 = !DILocation(line: 325, column: 18, scope: !17109)
!17128 = !DILocation(line: 325, column: 24, scope: !17109)
!17129 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !17108)
!17130 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !17108)
!17131 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !17108)
!17132 = !DILocation(line: 326, column: 15, scope: !17109)
!17133 = !DILocation(line: 327, column: 6, scope: !17109)
!17134 = !DILocation(line: 327, column: 12, scope: !17109)
!17135 = !DILocation(line: 327, column: 18, scope: !17109)
!17136 = !DILocation(line: 327, column: 30, scope: !17109)
!17137 = !DILocation(line: 326, column: 3, scope: !17109)
!17138 = distinct !{!17138, !17117, !17139}
!17139 = !DILocation(line: 328, column: 2, scope: !17106)
!17140 = !DILocation(line: 329, column: 1, scope: !17106)
!17141 = distinct !DISubprogram(name: "qh_urb_transaction", scope: !9723, file: !9723, line: 575, type: !17142, scopeLine: 580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!17142 = !DISubroutineType(types: !17143)
!17143 = !{!365, !5814, !5343, !365, !946}
!17144 = !DILocalVariable(name: "ehci", arg: 1, scope: !17141, file: !9723, line: 576, type: !5814)
!17145 = !DILocation(line: 576, column: 20, scope: !17141)
!17146 = !DILocalVariable(name: "urb", arg: 2, scope: !17141, file: !9723, line: 577, type: !5343)
!17147 = !DILocation(line: 577, column: 15, scope: !17141)
!17148 = !DILocalVariable(name: "head", arg: 3, scope: !17141, file: !9723, line: 578, type: !365)
!17149 = !DILocation(line: 578, column: 20, scope: !17141)
!17150 = !DILocalVariable(name: "flags", arg: 4, scope: !17141, file: !9723, line: 579, type: !946)
!17151 = !DILocation(line: 579, column: 10, scope: !17141)
!17152 = !DILocalVariable(name: "qtd", scope: !17141, file: !9723, line: 581, type: !5993)
!17153 = !DILocation(line: 581, column: 20, scope: !17141)
!17154 = !DILocalVariable(name: "qtd_prev", scope: !17141, file: !9723, line: 581, type: !5993)
!17155 = !DILocation(line: 581, column: 26, scope: !17141)
!17156 = !DILocalVariable(name: "buf", scope: !17141, file: !9723, line: 582, type: !2064)
!17157 = !DILocation(line: 582, column: 14, scope: !17141)
!17158 = !DILocalVariable(name: "len", scope: !17141, file: !9723, line: 583, type: !401)
!17159 = !DILocation(line: 583, column: 8, scope: !17141)
!17160 = !DILocalVariable(name: "this_sg_len", scope: !17141, file: !9723, line: 583, type: !401)
!17161 = !DILocation(line: 583, column: 13, scope: !17141)
!17162 = !DILocalVariable(name: "maxpacket", scope: !17141, file: !9723, line: 583, type: !401)
!17163 = !DILocation(line: 583, column: 26, scope: !17141)
!17164 = !DILocalVariable(name: "is_input", scope: !17141, file: !9723, line: 584, type: !401)
!17165 = !DILocation(line: 584, column: 8, scope: !17141)
!17166 = !DILocalVariable(name: "token", scope: !17141, file: !9723, line: 585, type: !303)
!17167 = !DILocation(line: 585, column: 8, scope: !17141)
!17168 = !DILocalVariable(name: "i", scope: !17141, file: !9723, line: 586, type: !401)
!17169 = !DILocation(line: 586, column: 8, scope: !17141)
!17170 = !DILocalVariable(name: "sg", scope: !17141, file: !9723, line: 587, type: !5371)
!17171 = !DILocation(line: 587, column: 22, scope: !17141)
!17172 = !DILocation(line: 592, column: 24, scope: !17141)
!17173 = !DILocation(line: 592, column: 30, scope: !17141)
!17174 = !DILocation(line: 592, column: 8, scope: !17141)
!17175 = !DILocation(line: 592, column: 6, scope: !17141)
!17176 = !DILocation(line: 593, column: 6, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17141, file: !9723, line: 593, column: 6)
!17178 = !DILocation(line: 593, column: 6, scope: !17141)
!17179 = !DILocation(line: 594, column: 3, scope: !17177)
!17180 = !DILocation(line: 595, column: 18, scope: !17141)
!17181 = !DILocation(line: 595, column: 23, scope: !17141)
!17182 = !DILocation(line: 595, column: 33, scope: !17141)
!17183 = !DILocation(line: 595, column: 2, scope: !17141)
!17184 = !DILocation(line: 596, column: 13, scope: !17141)
!17185 = !DILocation(line: 596, column: 2, scope: !17141)
!17186 = !DILocation(line: 596, column: 7, scope: !17141)
!17187 = !DILocation(line: 596, column: 11, scope: !17141)
!17188 = !DILocation(line: 598, column: 8, scope: !17141)
!17189 = !DILocation(line: 599, column: 8, scope: !17141)
!17190 = !DILocation(line: 602, column: 8, scope: !17141)
!17191 = !DILocation(line: 602, column: 13, scope: !17141)
!17192 = !DILocation(line: 602, column: 6, scope: !17141)
!17193 = !DILocation(line: 603, column: 13, scope: !17141)
!17194 = !DILocation(line: 603, column: 11, scope: !17141)
!17195 = !DILocation(line: 604, column: 6, scope: !17196)
!17196 = distinct !DILexicalBlock(scope: !17141, file: !9723, line: 604, column: 6)
!17197 = !DILocation(line: 604, column: 6, scope: !17141)
!17198 = !DILocation(line: 606, column: 12, scope: !17199)
!17199 = distinct !DILexicalBlock(scope: !17196, file: !9723, line: 604, column: 35)
!17200 = !DILocation(line: 606, column: 18, scope: !17199)
!17201 = !DILocation(line: 606, column: 23, scope: !17199)
!17202 = !DILocation(line: 606, column: 28, scope: !17199)
!17203 = !DILocation(line: 608, column: 5, scope: !17199)
!17204 = !DILocation(line: 608, column: 11, scope: !17199)
!17205 = !DILocation(line: 606, column: 3, scope: !17199)
!17206 = !DILocation(line: 611, column: 9, scope: !17199)
!17207 = !DILocation(line: 612, column: 14, scope: !17199)
!17208 = !DILocation(line: 612, column: 12, scope: !17199)
!17209 = !DILocation(line: 613, column: 25, scope: !17199)
!17210 = !DILocation(line: 613, column: 31, scope: !17199)
!17211 = !DILocation(line: 613, column: 9, scope: !17199)
!17212 = !DILocation(line: 613, column: 7, scope: !17199)
!17213 = !DILocation(line: 614, column: 7, scope: !17214)
!17214 = distinct !DILexicalBlock(scope: !17199, file: !9723, line: 614, column: 7)
!17215 = !DILocation(line: 614, column: 7, scope: !17199)
!17216 = !DILocation(line: 615, column: 4, scope: !17214)
!17217 = !DILocation(line: 616, column: 14, scope: !17199)
!17218 = !DILocation(line: 616, column: 3, scope: !17199)
!17219 = !DILocation(line: 616, column: 8, scope: !17199)
!17220 = !DILocation(line: 616, column: 12, scope: !17199)
!17221 = !DILocation(line: 617, column: 23, scope: !17199)
!17222 = !DILocation(line: 617, column: 3, scope: !17199)
!17223 = !DILocation(line: 617, column: 13, scope: !17199)
!17224 = !DILocation(line: 617, column: 21, scope: !17199)
!17225 = !DILocation(line: 618, column: 19, scope: !17199)
!17226 = !DILocation(line: 618, column: 24, scope: !17199)
!17227 = !DILocation(line: 618, column: 34, scope: !17199)
!17228 = !DILocation(line: 618, column: 3, scope: !17199)
!17229 = !DILocation(line: 621, column: 7, scope: !17230)
!17230 = distinct !DILexicalBlock(scope: !17199, file: !9723, line: 621, column: 7)
!17231 = !DILocation(line: 621, column: 11, scope: !17230)
!17232 = !DILocation(line: 621, column: 7, scope: !17199)
!17233 = !DILocation(line: 622, column: 10, scope: !17230)
!17234 = !DILocation(line: 622, column: 4, scope: !17230)
!17235 = !DILocation(line: 623, column: 2, scope: !17199)
!17236 = !DILocation(line: 628, column: 6, scope: !17141)
!17237 = !DILocation(line: 628, column: 11, scope: !17141)
!17238 = !DILocation(line: 628, column: 4, scope: !17141)
!17239 = !DILocation(line: 629, column: 6, scope: !17240)
!17240 = distinct !DILexicalBlock(scope: !17141, file: !9723, line: 629, column: 6)
!17241 = !DILocation(line: 629, column: 10, scope: !17240)
!17242 = !DILocation(line: 629, column: 14, scope: !17240)
!17243 = !DILocation(line: 629, column: 17, scope: !17240)
!17244 = !DILocation(line: 629, column: 19, scope: !17240)
!17245 = !DILocation(line: 629, column: 6, scope: !17141)
!17246 = !DILocation(line: 630, column: 8, scope: !17247)
!17247 = distinct !DILexicalBlock(scope: !17240, file: !9723, line: 629, column: 24)
!17248 = !DILocation(line: 630, column: 13, scope: !17247)
!17249 = !DILocation(line: 630, column: 6, scope: !17247)
!17250 = !DILocation(line: 631, column: 9, scope: !17247)
!17251 = !DILocation(line: 631, column: 7, scope: !17247)
!17252 = !DILocalVariable(name: "__UNIQUE_ID___x326", scope: !17253, file: !9723, line: 636, type: !401)
!17253 = distinct !DILexicalBlock(scope: !17247, file: !9723, line: 636, column: 17)
!17254 = !DILocation(line: 636, column: 17, scope: !17253)
!17255 = !DILocalVariable(name: "__UNIQUE_ID___y327", scope: !17253, file: !9723, line: 636, type: !401)
!17256 = !DILocation(line: 636, column: 15, scope: !17247)
!17257 = !DILocation(line: 637, column: 2, scope: !17247)
!17258 = !DILocation(line: 638, column: 6, scope: !17259)
!17259 = distinct !DILexicalBlock(scope: !17240, file: !9723, line: 637, column: 9)
!17260 = !DILocation(line: 639, column: 9, scope: !17259)
!17261 = !DILocation(line: 639, column: 14, scope: !17259)
!17262 = !DILocation(line: 639, column: 7, scope: !17259)
!17263 = !DILocation(line: 640, column: 17, scope: !17259)
!17264 = !DILocation(line: 640, column: 15, scope: !17259)
!17265 = !DILocation(line: 643, column: 6, scope: !17266)
!17266 = distinct !DILexicalBlock(scope: !17141, file: !9723, line: 643, column: 6)
!17267 = !DILocation(line: 643, column: 6, scope: !17141)
!17268 = !DILocation(line: 644, column: 9, scope: !17266)
!17269 = !DILocation(line: 644, column: 3, scope: !17266)
!17270 = !DILocation(line: 647, column: 28, scope: !17141)
!17271 = !DILocation(line: 647, column: 33, scope: !17141)
!17272 = !DILocation(line: 647, column: 38, scope: !17141)
!17273 = !DILocation(line: 647, column: 43, scope: !17141)
!17274 = !DILocation(line: 647, column: 50, scope: !17141)
!17275 = !DILocation(line: 647, column: 49, scope: !17141)
!17276 = !DILocation(line: 647, column: 14, scope: !17141)
!17277 = !DILocation(line: 647, column: 12, scope: !17141)
!17278 = !DILocation(line: 654, column: 2, scope: !17141)
!17279 = !DILocalVariable(name: "this_qtd_len", scope: !17280, file: !9723, line: 655, type: !401)
!17280 = distinct !DILexicalBlock(scope: !17281, file: !9723, line: 654, column: 11)
!17281 = distinct !DILexicalBlock(scope: !17282, file: !9723, line: 654, column: 2)
!17282 = distinct !DILexicalBlock(scope: !17141, file: !9723, line: 654, column: 2)
!17283 = !DILocation(line: 655, column: 7, scope: !17280)
!17284 = !DILocation(line: 657, column: 27, scope: !17280)
!17285 = !DILocation(line: 657, column: 33, scope: !17280)
!17286 = !DILocation(line: 657, column: 38, scope: !17280)
!17287 = !DILocation(line: 657, column: 43, scope: !17280)
!17288 = !DILocation(line: 657, column: 56, scope: !17280)
!17289 = !DILocation(line: 658, column: 5, scope: !17280)
!17290 = !DILocation(line: 657, column: 18, scope: !17280)
!17291 = !DILocation(line: 657, column: 16, scope: !17280)
!17292 = !DILocation(line: 659, column: 18, scope: !17280)
!17293 = !DILocation(line: 659, column: 15, scope: !17280)
!17294 = !DILocation(line: 660, column: 10, scope: !17280)
!17295 = !DILocation(line: 660, column: 7, scope: !17280)
!17296 = !DILocation(line: 661, column: 10, scope: !17280)
!17297 = !DILocation(line: 661, column: 7, scope: !17280)
!17298 = !DILocation(line: 668, column: 7, scope: !17299)
!17299 = distinct !DILexicalBlock(scope: !17280, file: !9723, line: 668, column: 7)
!17300 = !DILocation(line: 668, column: 7, scope: !17280)
!17301 = !DILocation(line: 669, column: 23, scope: !17299)
!17302 = !DILocation(line: 669, column: 29, scope: !17299)
!17303 = !DILocation(line: 669, column: 36, scope: !17299)
!17304 = !DILocation(line: 669, column: 40, scope: !17299)
!17305 = !DILocation(line: 669, column: 4, scope: !17299)
!17306 = !DILocation(line: 669, column: 9, scope: !17299)
!17307 = !DILocation(line: 669, column: 21, scope: !17299)
!17308 = !DILocation(line: 672, column: 8, scope: !17309)
!17309 = distinct !DILexicalBlock(scope: !17280, file: !9723, line: 672, column: 7)
!17310 = !DILocation(line: 672, column: 21, scope: !17309)
!17311 = !DILocation(line: 672, column: 37, scope: !17309)
!17312 = !DILocation(line: 672, column: 47, scope: !17309)
!17313 = !DILocation(line: 672, column: 34, scope: !17309)
!17314 = !DILocation(line: 672, column: 18, scope: !17309)
!17315 = !DILocation(line: 672, column: 54, scope: !17309)
!17316 = !DILocation(line: 672, column: 7, scope: !17280)
!17317 = !DILocation(line: 673, column: 10, scope: !17309)
!17318 = !DILocation(line: 673, column: 4, scope: !17309)
!17319 = !DILocation(line: 675, column: 7, scope: !17320)
!17320 = distinct !DILexicalBlock(scope: !17280, file: !9723, line: 675, column: 7)
!17321 = !DILocation(line: 675, column: 7, scope: !17280)
!17322 = !DILocation(line: 676, column: 8, scope: !17323)
!17323 = distinct !DILexicalBlock(scope: !17324, file: !9723, line: 676, column: 8)
!17324 = distinct !DILexicalBlock(scope: !17320, file: !9723, line: 675, column: 33)
!17325 = !DILocation(line: 676, column: 12, scope: !17323)
!17326 = !DILocation(line: 676, column: 17, scope: !17323)
!17327 = !DILocation(line: 676, column: 20, scope: !17323)
!17328 = !DILocation(line: 676, column: 24, scope: !17323)
!17329 = !DILocation(line: 676, column: 8, scope: !17324)
!17330 = !DILocation(line: 677, column: 5, scope: !17323)
!17331 = !DILocation(line: 678, column: 17, scope: !17324)
!17332 = !DILocation(line: 678, column: 9, scope: !17324)
!17333 = !DILocation(line: 678, column: 7, scope: !17324)
!17334 = !DILocation(line: 679, column: 10, scope: !17324)
!17335 = !DILocation(line: 679, column: 8, scope: !17324)
!17336 = !DILocalVariable(name: "__UNIQUE_ID___x328", scope: !17337, file: !9723, line: 680, type: !401)
!17337 = distinct !DILexicalBlock(scope: !17324, file: !9723, line: 680, column: 18)
!17338 = !DILocation(line: 680, column: 18, scope: !17337)
!17339 = !DILocalVariable(name: "__UNIQUE_ID___y329", scope: !17337, file: !9723, line: 680, type: !401)
!17340 = !DILocation(line: 680, column: 16, scope: !17324)
!17341 = !DILocation(line: 681, column: 3, scope: !17324)
!17342 = !DILocation(line: 683, column: 14, scope: !17280)
!17343 = !DILocation(line: 683, column: 12, scope: !17280)
!17344 = !DILocation(line: 684, column: 25, scope: !17280)
!17345 = !DILocation(line: 684, column: 31, scope: !17280)
!17346 = !DILocation(line: 684, column: 9, scope: !17280)
!17347 = !DILocation(line: 684, column: 7, scope: !17280)
!17348 = !DILocation(line: 685, column: 7, scope: !17349)
!17349 = distinct !DILexicalBlock(scope: !17280, file: !9723, line: 685, column: 7)
!17350 = !DILocation(line: 685, column: 7, scope: !17280)
!17351 = !DILocation(line: 686, column: 4, scope: !17349)
!17352 = !DILocation(line: 687, column: 14, scope: !17280)
!17353 = !DILocation(line: 687, column: 3, scope: !17280)
!17354 = !DILocation(line: 687, column: 8, scope: !17280)
!17355 = !DILocation(line: 687, column: 12, scope: !17280)
!17356 = !DILocation(line: 688, column: 23, scope: !17280)
!17357 = !DILocation(line: 688, column: 3, scope: !17280)
!17358 = !DILocation(line: 688, column: 13, scope: !17280)
!17359 = !DILocation(line: 688, column: 21, scope: !17280)
!17360 = !DILocation(line: 689, column: 19, scope: !17280)
!17361 = !DILocation(line: 689, column: 24, scope: !17280)
!17362 = !DILocation(line: 689, column: 34, scope: !17280)
!17363 = !DILocation(line: 689, column: 3, scope: !17280)
!17364 = !DILocation(line: 654, column: 2, scope: !17281)
!17365 = distinct !{!17365, !17366, !17367}
!17366 = !DILocation(line: 654, column: 2, scope: !17282)
!17367 = !DILocation(line: 690, column: 2, scope: !17282)
!17368 = !DILocation(line: 697, column: 6, scope: !17369)
!17369 = distinct !DILexicalBlock(scope: !17141, file: !9723, line: 697, column: 6)
!17370 = !DILocation(line: 697, column: 6, scope: !17141)
!17371 = !DILocation(line: 699, column: 22, scope: !17369)
!17372 = !DILocation(line: 699, column: 3, scope: !17369)
!17373 = !DILocation(line: 699, column: 8, scope: !17369)
!17374 = !DILocation(line: 699, column: 20, scope: !17369)
!17375 = !DILocation(line: 706, column: 6, scope: !17376)
!17376 = distinct !DILexicalBlock(scope: !17141, file: !9723, line: 706, column: 6)
!17377 = !DILocation(line: 706, column: 6, scope: !17141)
!17378 = !DILocalVariable(name: "one_more", scope: !17379, file: !9723, line: 707, type: !401)
!17379 = distinct !DILexicalBlock(scope: !17376, file: !9723, line: 706, column: 49)
!17380 = !DILocation(line: 707, column: 7, scope: !17379)
!17381 = !DILocation(line: 709, column: 7, scope: !17382)
!17382 = distinct !DILexicalBlock(scope: !17379, file: !9723, line: 709, column: 7)
!17383 = !DILocation(line: 709, column: 7, scope: !17379)
!17384 = !DILocation(line: 710, column: 13, scope: !17385)
!17385 = distinct !DILexicalBlock(scope: !17382, file: !9723, line: 709, column: 36)
!17386 = !DILocation(line: 711, column: 10, scope: !17385)
!17387 = !DILocation(line: 712, column: 10, scope: !17385)
!17388 = !DILocation(line: 713, column: 3, scope: !17385)
!17389 = !DILocation(line: 713, column: 14, scope: !17390)
!17390 = distinct !DILexicalBlock(scope: !17382, file: !9723, line: 713, column: 14)
!17391 = !DILocation(line: 714, column: 5, scope: !17390)
!17392 = !DILocation(line: 714, column: 9, scope: !17390)
!17393 = !DILocation(line: 714, column: 14, scope: !17390)
!17394 = !DILocation(line: 714, column: 29, scope: !17390)
!17395 = !DILocation(line: 715, column: 5, scope: !17390)
!17396 = !DILocation(line: 715, column: 10, scope: !17390)
!17397 = !DILocation(line: 715, column: 15, scope: !17390)
!17398 = !DILocation(line: 715, column: 40, scope: !17390)
!17399 = !DILocation(line: 715, column: 38, scope: !17390)
!17400 = !DILocation(line: 713, column: 14, scope: !17382)
!17401 = !DILocation(line: 716, column: 13, scope: !17402)
!17402 = distinct !DILexicalBlock(scope: !17390, file: !9723, line: 715, column: 52)
!17403 = !DILocation(line: 717, column: 3, scope: !17402)
!17404 = !DILocation(line: 718, column: 7, scope: !17405)
!17405 = distinct !DILexicalBlock(scope: !17379, file: !9723, line: 718, column: 7)
!17406 = !DILocation(line: 718, column: 7, scope: !17379)
!17407 = !DILocation(line: 719, column: 15, scope: !17408)
!17408 = distinct !DILexicalBlock(scope: !17405, file: !9723, line: 718, column: 17)
!17409 = !DILocation(line: 719, column: 13, scope: !17408)
!17410 = !DILocation(line: 720, column: 26, scope: !17408)
!17411 = !DILocation(line: 720, column: 32, scope: !17408)
!17412 = !DILocation(line: 720, column: 10, scope: !17408)
!17413 = !DILocation(line: 720, column: 8, scope: !17408)
!17414 = !DILocation(line: 721, column: 8, scope: !17415)
!17415 = distinct !DILexicalBlock(scope: !17408, file: !9723, line: 721, column: 8)
!17416 = !DILocation(line: 721, column: 8, scope: !17408)
!17417 = !DILocation(line: 722, column: 5, scope: !17415)
!17418 = !DILocation(line: 723, column: 15, scope: !17408)
!17419 = !DILocation(line: 723, column: 4, scope: !17408)
!17420 = !DILocation(line: 723, column: 9, scope: !17408)
!17421 = !DILocation(line: 723, column: 13, scope: !17408)
!17422 = !DILocation(line: 724, column: 24, scope: !17408)
!17423 = !DILocation(line: 724, column: 4, scope: !17408)
!17424 = !DILocation(line: 724, column: 14, scope: !17408)
!17425 = !DILocation(line: 724, column: 22, scope: !17408)
!17426 = !DILocation(line: 725, column: 20, scope: !17408)
!17427 = !DILocation(line: 725, column: 25, scope: !17408)
!17428 = !DILocation(line: 725, column: 35, scope: !17408)
!17429 = !DILocation(line: 725, column: 4, scope: !17408)
!17430 = !DILocation(line: 728, column: 13, scope: !17408)
!17431 = !DILocation(line: 728, column: 19, scope: !17408)
!17432 = !DILocation(line: 728, column: 30, scope: !17408)
!17433 = !DILocation(line: 728, column: 4, scope: !17408)
!17434 = !DILocation(line: 729, column: 3, scope: !17408)
!17435 = !DILocation(line: 730, column: 2, scope: !17379)
!17436 = !DILocation(line: 733, column: 6, scope: !17437)
!17437 = distinct !DILexicalBlock(scope: !17141, file: !9723, line: 733, column: 6)
!17438 = !DILocation(line: 733, column: 6, scope: !17141)
!17439 = !DILocation(line: 734, column: 32, scope: !17437)
!17440 = !DILocation(line: 734, column: 20, scope: !17437)
!17441 = !DILocation(line: 734, column: 3, scope: !17437)
!17442 = !DILocation(line: 734, column: 8, scope: !17437)
!17443 = !DILocation(line: 734, column: 17, scope: !17437)
!17444 = !DILocation(line: 735, column: 9, scope: !17141)
!17445 = !DILocation(line: 735, column: 2, scope: !17141)
!17446 = !DILabel(scope: !17141, name: "cleanup", file: !9723, line: 737)
!17447 = !DILocation(line: 737, column: 1, scope: !17141)
!17448 = !DILocation(line: 738, column: 17, scope: !17141)
!17449 = !DILocation(line: 738, column: 23, scope: !17141)
!17450 = !DILocation(line: 738, column: 28, scope: !17141)
!17451 = !DILocation(line: 738, column: 2, scope: !17141)
!17452 = !DILocation(line: 739, column: 2, scope: !17141)
!17453 = !DILocation(line: 740, column: 1, scope: !17141)
!17454 = distinct !DISubprogram(name: "submit_async", scope: !9723, file: !9723, line: 1102, type: !17455, scopeLine: 1107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!17455 = !DISubroutineType(types: !17456)
!17456 = !{!401, !5814, !5343, !365, !946}
!17457 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !17458)
!17458 = distinct !DILocation(line: 1150, column: 2, scope: !17454)
!17459 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !17458)
!17460 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !17461)
!17461 = distinct !DILocation(line: 1128, column: 2, scope: !17462)
!17462 = distinct !DILexicalBlock(scope: !17463, file: !9723, line: 1128, column: 2)
!17463 = distinct !DILexicalBlock(scope: !17464, file: !9723, line: 1128, column: 2)
!17464 = distinct !DILexicalBlock(scope: !17465, file: !9723, line: 1128, column: 2)
!17465 = distinct !DILexicalBlock(scope: !17466, file: !9723, line: 1128, column: 2)
!17466 = distinct !DILexicalBlock(scope: !17454, file: !9723, line: 1128, column: 2)
!17467 = !DILocalVariable(name: "ehci", arg: 1, scope: !17454, file: !9723, line: 1103, type: !5814)
!17468 = !DILocation(line: 1103, column: 20, scope: !17454)
!17469 = !DILocalVariable(name: "urb", arg: 2, scope: !17454, file: !9723, line: 1104, type: !5343)
!17470 = !DILocation(line: 1104, column: 15, scope: !17454)
!17471 = !DILocalVariable(name: "qtd_list", arg: 3, scope: !17454, file: !9723, line: 1105, type: !365)
!17472 = !DILocation(line: 1105, column: 20, scope: !17454)
!17473 = !DILocalVariable(name: "mem_flags", arg: 4, scope: !17454, file: !9723, line: 1106, type: !946)
!17474 = !DILocation(line: 1106, column: 10, scope: !17454)
!17475 = !DILocalVariable(name: "epnum", scope: !17454, file: !9723, line: 1108, type: !401)
!17476 = !DILocation(line: 1108, column: 8, scope: !17454)
!17477 = !DILocalVariable(name: "flags", scope: !17454, file: !9723, line: 1109, type: !465)
!17478 = !DILocation(line: 1109, column: 17, scope: !17454)
!17479 = !DILocalVariable(name: "qh", scope: !17454, file: !9723, line: 1110, type: !5884)
!17480 = !DILocation(line: 1110, column: 19, scope: !17454)
!17481 = !DILocalVariable(name: "rc", scope: !17454, file: !9723, line: 1111, type: !401)
!17482 = !DILocation(line: 1111, column: 8, scope: !17454)
!17483 = !DILocation(line: 1113, column: 10, scope: !17454)
!17484 = !DILocation(line: 1113, column: 15, scope: !17454)
!17485 = !DILocation(line: 1113, column: 19, scope: !17454)
!17486 = !DILocation(line: 1113, column: 24, scope: !17454)
!17487 = !DILocation(line: 1113, column: 8, scope: !17454)
!17488 = !DILocation(line: 1128, column: 2, scope: !17454)
!17489 = !DILocation(line: 1128, column: 2, scope: !17466)
!17490 = !DILocalVariable(name: "__dummy", scope: !17491, file: !9723, line: 1128, type: !465)
!17491 = distinct !DILexicalBlock(scope: !17465, file: !9723, line: 1128, column: 2)
!17492 = !DILocation(line: 1128, column: 2, scope: !17491)
!17493 = !DILocalVariable(name: "__dummy2", scope: !17491, file: !9723, line: 1128, type: !465)
!17494 = !DILocation(line: 1128, column: 2, scope: !17465)
!17495 = !DILocation(line: 1128, column: 2, scope: !17464)
!17496 = !DILocation(line: 1128, column: 2, scope: !17497)
!17497 = distinct !DILexicalBlock(scope: !17464, file: !9723, line: 1128, column: 2)
!17498 = !DILocalVariable(name: "__dummy", scope: !17499, file: !9723, line: 1128, type: !465)
!17499 = distinct !DILexicalBlock(scope: !17500, file: !9723, line: 1128, column: 2)
!17500 = distinct !DILexicalBlock(scope: !17497, file: !9723, line: 1128, column: 2)
!17501 = !DILocation(line: 1128, column: 2, scope: !17499)
!17502 = !DILocalVariable(name: "__dummy2", scope: !17499, file: !9723, line: 1128, type: !465)
!17503 = !DILocation(line: 1128, column: 2, scope: !17500)
!17504 = !DILocation(line: 1128, column: 2, scope: !17463)
!17505 = !{i32 -2139915025}
!17506 = !DILocation(line: 1128, column: 2, scope: !17462)
!17507 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !17461)
!17508 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !17461)
!17509 = !DILocation(line: 1129, column: 6, scope: !17510)
!17510 = distinct !DILexicalBlock(scope: !17454, file: !9723, line: 1129, column: 6)
!17511 = !DILocation(line: 1129, column: 6, scope: !17454)
!17512 = !DILocation(line: 1130, column: 6, scope: !17513)
!17513 = distinct !DILexicalBlock(scope: !17510, file: !9723, line: 1129, column: 55)
!17514 = !DILocation(line: 1131, column: 3, scope: !17513)
!17515 = !DILocation(line: 1133, column: 42, scope: !17454)
!17516 = !DILocation(line: 1133, column: 30, scope: !17454)
!17517 = !DILocation(line: 1133, column: 49, scope: !17454)
!17518 = !DILocation(line: 1133, column: 7, scope: !17454)
!17519 = !DILocation(line: 1133, column: 5, scope: !17454)
!17520 = !DILocation(line: 1134, column: 6, scope: !17521)
!17521 = distinct !DILexicalBlock(scope: !17454, file: !9723, line: 1134, column: 6)
!17522 = !DILocation(line: 1134, column: 6, scope: !17454)
!17523 = !DILocation(line: 1135, column: 3, scope: !17521)
!17524 = !DILocation(line: 1137, column: 21, scope: !17454)
!17525 = !DILocation(line: 1137, column: 27, scope: !17454)
!17526 = !DILocation(line: 1137, column: 32, scope: !17454)
!17527 = !DILocation(line: 1137, column: 42, scope: !17454)
!17528 = !DILocation(line: 1137, column: 50, scope: !17454)
!17529 = !DILocation(line: 1137, column: 55, scope: !17454)
!17530 = !DILocation(line: 1137, column: 59, scope: !17454)
!17531 = !DILocation(line: 1137, column: 7, scope: !17454)
!17532 = !DILocation(line: 1137, column: 5, scope: !17454)
!17533 = !DILocation(line: 1138, column: 6, scope: !17534)
!17534 = distinct !DILexicalBlock(scope: !17454, file: !9723, line: 1138, column: 6)
!17535 = !DILocation(line: 1138, column: 6, scope: !17454)
!17536 = !DILocation(line: 1139, column: 42, scope: !17537)
!17537 = distinct !DILexicalBlock(scope: !17534, file: !9723, line: 1138, column: 28)
!17538 = !DILocation(line: 1139, column: 30, scope: !17537)
!17539 = !DILocation(line: 1139, column: 49, scope: !17537)
!17540 = !DILocation(line: 1139, column: 3, scope: !17537)
!17541 = !DILocation(line: 1140, column: 6, scope: !17537)
!17542 = !DILocation(line: 1141, column: 3, scope: !17537)
!17543 = !DILocation(line: 1147, column: 6, scope: !17544)
!17544 = distinct !DILexicalBlock(scope: !17454, file: !9723, line: 1147, column: 6)
!17545 = !DILocation(line: 1147, column: 6, scope: !17454)
!17546 = !DILocation(line: 1148, column: 17, scope: !17544)
!17547 = !DILocation(line: 1148, column: 23, scope: !17544)
!17548 = !DILocation(line: 1148, column: 3, scope: !17544)
!17549 = !DILabel(scope: !17454, name: "done", file: !9723, line: 1149)
!17550 = !DILocation(line: 1149, column: 2, scope: !17454)
!17551 = !DILocation(line: 1150, column: 27, scope: !17454)
!17552 = !DILocation(line: 1150, column: 33, scope: !17454)
!17553 = !DILocation(line: 1150, column: 39, scope: !17454)
!17554 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !17458)
!17555 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !17458)
!17556 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !17458)
!17557 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !17458)
!17558 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !17458)
!17559 = !DILocation(line: 1151, column: 6, scope: !17560)
!17560 = distinct !DILexicalBlock(scope: !17454, file: !9723, line: 1151, column: 6)
!17561 = !DILocation(line: 1151, column: 6, scope: !17454)
!17562 = !DILocation(line: 1152, column: 18, scope: !17560)
!17563 = !DILocation(line: 1152, column: 24, scope: !17560)
!17564 = !DILocation(line: 1152, column: 29, scope: !17560)
!17565 = !DILocation(line: 1152, column: 3, scope: !17560)
!17566 = !DILocation(line: 1153, column: 9, scope: !17454)
!17567 = !DILocation(line: 1153, column: 2, scope: !17454)
!17568 = distinct !DISubprogram(name: "intr_submit", scope: !6239, file: !6239, line: 897, type: !17455, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!17569 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !17570)
!17570 = distinct !DILocation(line: 955, column: 2, scope: !17568)
!17571 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !17570)
!17572 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !17573)
!17573 = distinct !DILocation(line: 912, column: 2, scope: !17574)
!17574 = distinct !DILexicalBlock(scope: !17575, file: !6239, line: 912, column: 2)
!17575 = distinct !DILexicalBlock(scope: !17576, file: !6239, line: 912, column: 2)
!17576 = distinct !DILexicalBlock(scope: !17577, file: !6239, line: 912, column: 2)
!17577 = distinct !DILexicalBlock(scope: !17578, file: !6239, line: 912, column: 2)
!17578 = distinct !DILexicalBlock(scope: !17568, file: !6239, line: 912, column: 2)
!17579 = !DILocalVariable(name: "ehci", arg: 1, scope: !17568, file: !6239, line: 898, type: !5814)
!17580 = !DILocation(line: 898, column: 20, scope: !17568)
!17581 = !DILocalVariable(name: "urb", arg: 2, scope: !17568, file: !6239, line: 899, type: !5343)
!17582 = !DILocation(line: 899, column: 15, scope: !17568)
!17583 = !DILocalVariable(name: "qtd_list", arg: 3, scope: !17568, file: !6239, line: 900, type: !365)
!17584 = !DILocation(line: 900, column: 20, scope: !17568)
!17585 = !DILocalVariable(name: "mem_flags", arg: 4, scope: !17568, file: !6239, line: 901, type: !946)
!17586 = !DILocation(line: 901, column: 10, scope: !17568)
!17587 = !DILocalVariable(name: "epnum", scope: !17568, file: !6239, line: 903, type: !7)
!17588 = !DILocation(line: 903, column: 12, scope: !17568)
!17589 = !DILocalVariable(name: "flags", scope: !17568, file: !6239, line: 904, type: !465)
!17590 = !DILocation(line: 904, column: 17, scope: !17568)
!17591 = !DILocalVariable(name: "qh", scope: !17568, file: !6239, line: 905, type: !5884)
!17592 = !DILocation(line: 905, column: 19, scope: !17568)
!17593 = !DILocalVariable(name: "status", scope: !17568, file: !6239, line: 906, type: !401)
!17594 = !DILocation(line: 906, column: 8, scope: !17568)
!17595 = !DILocalVariable(name: "empty", scope: !17568, file: !6239, line: 907, type: !361)
!17596 = !DILocation(line: 907, column: 19, scope: !17568)
!17597 = !DILocation(line: 910, column: 10, scope: !17568)
!17598 = !DILocation(line: 910, column: 15, scope: !17568)
!17599 = !DILocation(line: 910, column: 19, scope: !17568)
!17600 = !DILocation(line: 910, column: 24, scope: !17568)
!17601 = !DILocation(line: 910, column: 8, scope: !17568)
!17602 = !DILocation(line: 912, column: 2, scope: !17568)
!17603 = !DILocation(line: 912, column: 2, scope: !17578)
!17604 = !DILocalVariable(name: "__dummy", scope: !17605, file: !6239, line: 912, type: !465)
!17605 = distinct !DILexicalBlock(scope: !17577, file: !6239, line: 912, column: 2)
!17606 = !DILocation(line: 912, column: 2, scope: !17605)
!17607 = !DILocalVariable(name: "__dummy2", scope: !17605, file: !6239, line: 912, type: !465)
!17608 = !DILocation(line: 912, column: 2, scope: !17577)
!17609 = !DILocation(line: 912, column: 2, scope: !17576)
!17610 = !DILocation(line: 912, column: 2, scope: !17611)
!17611 = distinct !DILexicalBlock(scope: !17576, file: !6239, line: 912, column: 2)
!17612 = !DILocalVariable(name: "__dummy", scope: !17613, file: !6239, line: 912, type: !465)
!17613 = distinct !DILexicalBlock(scope: !17614, file: !6239, line: 912, column: 2)
!17614 = distinct !DILexicalBlock(scope: !17611, file: !6239, line: 912, column: 2)
!17615 = !DILocation(line: 912, column: 2, scope: !17613)
!17616 = !DILocalVariable(name: "__dummy2", scope: !17613, file: !6239, line: 912, type: !465)
!17617 = !DILocation(line: 912, column: 2, scope: !17614)
!17618 = !DILocation(line: 912, column: 2, scope: !17575)
!17619 = !{i32 -2139834447}
!17620 = !DILocation(line: 912, column: 2, scope: !17574)
!17621 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !17573)
!17622 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !17573)
!17623 = !DILocation(line: 914, column: 6, scope: !17624)
!17624 = distinct !DILexicalBlock(scope: !17568, file: !6239, line: 914, column: 6)
!17625 = !DILocation(line: 914, column: 6, scope: !17568)
!17626 = !DILocation(line: 915, column: 10, scope: !17627)
!17627 = distinct !DILexicalBlock(scope: !17624, file: !6239, line: 914, column: 55)
!17628 = !DILocation(line: 916, column: 3, scope: !17627)
!17629 = !DILocation(line: 918, column: 46, scope: !17568)
!17630 = !DILocation(line: 918, column: 34, scope: !17568)
!17631 = !DILocation(line: 918, column: 53, scope: !17568)
!17632 = !DILocation(line: 918, column: 11, scope: !17568)
!17633 = !DILocation(line: 918, column: 9, scope: !17568)
!17634 = !DILocation(line: 919, column: 6, scope: !17635)
!17635 = distinct !DILexicalBlock(scope: !17568, file: !6239, line: 919, column: 6)
!17636 = !DILocation(line: 919, column: 6, scope: !17568)
!17637 = !DILocation(line: 920, column: 3, scope: !17635)
!17638 = !DILocation(line: 923, column: 2, scope: !17568)
!17639 = !DILocation(line: 924, column: 21, scope: !17568)
!17640 = !DILocation(line: 924, column: 27, scope: !17568)
!17641 = !DILocation(line: 924, column: 40, scope: !17568)
!17642 = !DILocation(line: 924, column: 48, scope: !17568)
!17643 = !DILocation(line: 924, column: 53, scope: !17568)
!17644 = !DILocation(line: 924, column: 57, scope: !17568)
!17645 = !DILocation(line: 924, column: 7, scope: !17568)
!17646 = !DILocation(line: 924, column: 5, scope: !17568)
!17647 = !DILocation(line: 925, column: 6, scope: !17648)
!17648 = distinct !DILexicalBlock(scope: !17568, file: !6239, line: 925, column: 6)
!17649 = !DILocation(line: 925, column: 9, scope: !17648)
!17650 = !DILocation(line: 925, column: 6, scope: !17568)
!17651 = !DILocation(line: 926, column: 10, scope: !17652)
!17652 = distinct !DILexicalBlock(scope: !17648, file: !6239, line: 925, column: 18)
!17653 = !DILocation(line: 927, column: 3, scope: !17652)
!17654 = !DILocation(line: 929, column: 6, scope: !17655)
!17655 = distinct !DILexicalBlock(scope: !17568, file: !6239, line: 929, column: 6)
!17656 = !DILocation(line: 929, column: 10, scope: !17655)
!17657 = !DILocation(line: 929, column: 19, scope: !17655)
!17658 = !DILocation(line: 929, column: 6, scope: !17568)
!17659 = !DILocation(line: 930, column: 24, scope: !17660)
!17660 = distinct !DILexicalBlock(scope: !17655, file: !6239, line: 929, column: 37)
!17661 = !DILocation(line: 930, column: 30, scope: !17660)
!17662 = !DILocation(line: 930, column: 12, scope: !17660)
!17663 = !DILocation(line: 930, column: 10, scope: !17660)
!17664 = !DILocation(line: 931, column: 7, scope: !17665)
!17665 = distinct !DILexicalBlock(scope: !17660, file: !6239, line: 931, column: 7)
!17666 = !DILocation(line: 931, column: 7, scope: !17660)
!17667 = !DILocation(line: 932, column: 4, scope: !17665)
!17668 = !DILocation(line: 933, column: 2, scope: !17660)
!17669 = !DILocation(line: 936, column: 21, scope: !17568)
!17670 = !DILocation(line: 936, column: 27, scope: !17568)
!17671 = !DILocation(line: 936, column: 32, scope: !17568)
!17672 = !DILocation(line: 936, column: 42, scope: !17568)
!17673 = !DILocation(line: 936, column: 50, scope: !17568)
!17674 = !DILocation(line: 936, column: 55, scope: !17568)
!17675 = !DILocation(line: 936, column: 59, scope: !17568)
!17676 = !DILocation(line: 936, column: 7, scope: !17568)
!17677 = !DILocation(line: 936, column: 5, scope: !17568)
!17678 = !DILocation(line: 937, column: 2, scope: !17568)
!17679 = !DILocation(line: 937, column: 2, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17681, file: !6239, line: 937, column: 2)
!17681 = distinct !DILexicalBlock(scope: !17568, file: !6239, line: 937, column: 2)
!17682 = !DILocation(line: 937, column: 2, scope: !17681)
!17683 = !DILocation(line: 937, column: 2, scope: !17684)
!17684 = distinct !DILexicalBlock(scope: !17680, file: !6239, line: 937, column: 2)
!17685 = !DILocation(line: 937, column: 2, scope: !17686)
!17686 = distinct !DILexicalBlock(scope: !17684, file: !6239, line: 937, column: 2)
!17687 = !DILocation(line: 937, column: 2, scope: !17688)
!17688 = distinct !DILexicalBlock(scope: !17684, file: !6239, line: 937, column: 2)
!17689 = !{i32 -2139833827, i32 -2139833798, i32 -2139833752, i32 -2139833694, i32 -2139833640, i32 -2139833586, i32 -2139833531, i32 -2139833500}
!17690 = !DILocation(line: 937, column: 2, scope: !17691)
!17691 = distinct !DILexicalBlock(scope: !17692, file: !6239, line: 937, column: 2)
!17692 = distinct !DILexicalBlock(scope: !17684, file: !6239, line: 937, column: 2)
!17693 = !{i32 -2139833048, i32 -2139833041, i32 -2139832987, i32 -2139832956, i32 -2139832926}
!17694 = !DILocation(line: 937, column: 2, scope: !17692)
!17695 = !DILocation(line: 940, column: 6, scope: !17696)
!17696 = distinct !DILexicalBlock(scope: !17568, file: !6239, line: 940, column: 6)
!17697 = !DILocation(line: 940, column: 10, scope: !17696)
!17698 = !DILocation(line: 940, column: 19, scope: !17696)
!17699 = !DILocation(line: 940, column: 6, scope: !17568)
!17700 = !DILocation(line: 941, column: 14, scope: !17701)
!17701 = distinct !DILexicalBlock(scope: !17696, file: !6239, line: 940, column: 37)
!17702 = !DILocation(line: 941, column: 20, scope: !17701)
!17703 = !DILocation(line: 941, column: 3, scope: !17701)
!17704 = !DILocation(line: 942, column: 20, scope: !17701)
!17705 = !DILocation(line: 942, column: 26, scope: !17701)
!17706 = !DILocation(line: 942, column: 3, scope: !17701)
!17707 = !DILocation(line: 943, column: 2, scope: !17701)
!17708 = !DILocation(line: 945, column: 27, scope: !17709)
!17709 = distinct !DILexicalBlock(scope: !17696, file: !6239, line: 943, column: 9)
!17710 = !DILocation(line: 945, column: 33, scope: !17709)
!17711 = !DILocation(line: 945, column: 3, scope: !17709)
!17712 = !DILocation(line: 949, column: 14, scope: !17568)
!17713 = !DILocation(line: 949, column: 2, scope: !17568)
!17714 = !DILocation(line: 949, column: 21, scope: !17568)
!17715 = !DILocation(line: 949, column: 26, scope: !17568)
!17716 = !DILocation(line: 949, column: 44, scope: !17568)
!17717 = !DILabel(scope: !17568, name: "done", file: !6239, line: 951)
!17718 = !DILocation(line: 951, column: 1, scope: !17568)
!17719 = !DILocation(line: 952, column: 6, scope: !17720)
!17720 = distinct !DILexicalBlock(scope: !17568, file: !6239, line: 952, column: 6)
!17721 = !DILocation(line: 952, column: 6, scope: !17568)
!17722 = !DILocation(line: 953, column: 42, scope: !17720)
!17723 = !DILocation(line: 953, column: 30, scope: !17720)
!17724 = !DILocation(line: 953, column: 49, scope: !17720)
!17725 = !DILocation(line: 953, column: 3, scope: !17720)
!17726 = !DILabel(scope: !17568, name: "done_not_linked", file: !6239, line: 954)
!17727 = !DILocation(line: 954, column: 1, scope: !17568)
!17728 = !DILocation(line: 955, column: 26, scope: !17568)
!17729 = !DILocation(line: 955, column: 32, scope: !17568)
!17730 = !DILocation(line: 955, column: 38, scope: !17568)
!17731 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !17570)
!17732 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !17570)
!17733 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !17570)
!17734 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !17570)
!17735 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !17570)
!17736 = !DILocation(line: 956, column: 6, scope: !17737)
!17737 = distinct !DILexicalBlock(scope: !17568, file: !6239, line: 956, column: 6)
!17738 = !DILocation(line: 956, column: 6, scope: !17568)
!17739 = !DILocation(line: 957, column: 17, scope: !17737)
!17740 = !DILocation(line: 957, column: 23, scope: !17737)
!17741 = !DILocation(line: 957, column: 28, scope: !17737)
!17742 = !DILocation(line: 957, column: 3, scope: !17737)
!17743 = !DILocation(line: 959, column: 9, scope: !17568)
!17744 = !DILocation(line: 959, column: 2, scope: !17568)
!17745 = distinct !DISubprogram(name: "itd_submit", scope: !6239, file: !6239, line: 1903, type: !17746, scopeLine: 1905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!17746 = !DISubroutineType(types: !17747)
!17747 = !{!401, !5814, !5343, !946}
!17748 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !17749)
!17749 = distinct !DILocation(line: 1959, column: 2, scope: !17745)
!17750 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !17749)
!17751 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !17752)
!17752 = distinct !DILocation(line: 1941, column: 2, scope: !17753)
!17753 = distinct !DILexicalBlock(scope: !17754, file: !6239, line: 1941, column: 2)
!17754 = distinct !DILexicalBlock(scope: !17755, file: !6239, line: 1941, column: 2)
!17755 = distinct !DILexicalBlock(scope: !17756, file: !6239, line: 1941, column: 2)
!17756 = distinct !DILexicalBlock(scope: !17757, file: !6239, line: 1941, column: 2)
!17757 = distinct !DILexicalBlock(scope: !17745, file: !6239, line: 1941, column: 2)
!17758 = !DILocalVariable(name: "ehci", arg: 1, scope: !17745, file: !6239, line: 1903, type: !5814)
!17759 = !DILocation(line: 1903, column: 40, scope: !17745)
!17760 = !DILocalVariable(name: "urb", arg: 2, scope: !17745, file: !6239, line: 1903, type: !5343)
!17761 = !DILocation(line: 1903, column: 58, scope: !17745)
!17762 = !DILocalVariable(name: "mem_flags", arg: 3, scope: !17745, file: !6239, line: 1904, type: !946)
!17763 = !DILocation(line: 1904, column: 8, scope: !17745)
!17764 = !DILocalVariable(name: "status", scope: !17745, file: !6239, line: 1906, type: !401)
!17765 = !DILocation(line: 1906, column: 8, scope: !17745)
!17766 = !DILocalVariable(name: "flags", scope: !17745, file: !6239, line: 1907, type: !465)
!17767 = !DILocation(line: 1907, column: 17, scope: !17745)
!17768 = !DILocalVariable(name: "stream", scope: !17745, file: !6239, line: 1908, type: !5922)
!17769 = !DILocation(line: 1908, column: 26, scope: !17745)
!17770 = !DILocation(line: 1911, column: 27, scope: !17745)
!17771 = !DILocation(line: 1911, column: 33, scope: !17745)
!17772 = !DILocation(line: 1911, column: 11, scope: !17745)
!17773 = !DILocation(line: 1911, column: 9, scope: !17745)
!17774 = !DILocation(line: 1912, column: 6, scope: !17775)
!17775 = distinct !DILexicalBlock(scope: !17745, file: !6239, line: 1912, column: 6)
!17776 = !DILocation(line: 1912, column: 6, scope: !17745)
!17777 = !DILocation(line: 1914, column: 3, scope: !17778)
!17778 = distinct !DILexicalBlock(scope: !17775, file: !6239, line: 1912, column: 32)
!17779 = !DILocation(line: 1916, column: 6, scope: !17780)
!17780 = distinct !DILexicalBlock(scope: !17745, file: !6239, line: 1916, column: 6)
!17781 = !DILocation(line: 1916, column: 6, scope: !17745)
!17782 = !DILocation(line: 1919, column: 3, scope: !17783)
!17783 = distinct !DILexicalBlock(scope: !17780, file: !6239, line: 1916, column: 50)
!17784 = !DILocation(line: 1934, column: 31, scope: !17745)
!17785 = !DILocation(line: 1934, column: 39, scope: !17745)
!17786 = !DILocation(line: 1934, column: 45, scope: !17745)
!17787 = !DILocation(line: 1934, column: 50, scope: !17745)
!17788 = !DILocation(line: 1934, column: 11, scope: !17745)
!17789 = !DILocation(line: 1934, column: 9, scope: !17745)
!17790 = !DILocation(line: 1935, column: 6, scope: !17791)
!17791 = distinct !DILexicalBlock(scope: !17745, file: !6239, line: 1935, column: 6)
!17792 = !DILocation(line: 1935, column: 6, scope: !17745)
!17793 = !DILocation(line: 1937, column: 3, scope: !17794)
!17794 = distinct !DILexicalBlock(scope: !17791, file: !6239, line: 1935, column: 28)
!17795 = !DILocation(line: 1941, column: 2, scope: !17745)
!17796 = !DILocation(line: 1941, column: 2, scope: !17757)
!17797 = !DILocalVariable(name: "__dummy", scope: !17798, file: !6239, line: 1941, type: !465)
!17798 = distinct !DILexicalBlock(scope: !17756, file: !6239, line: 1941, column: 2)
!17799 = !DILocation(line: 1941, column: 2, scope: !17798)
!17800 = !DILocalVariable(name: "__dummy2", scope: !17798, file: !6239, line: 1941, type: !465)
!17801 = !DILocation(line: 1941, column: 2, scope: !17756)
!17802 = !DILocation(line: 1941, column: 2, scope: !17755)
!17803 = !DILocation(line: 1941, column: 2, scope: !17804)
!17804 = distinct !DILexicalBlock(scope: !17755, file: !6239, line: 1941, column: 2)
!17805 = !DILocalVariable(name: "__dummy", scope: !17806, file: !6239, line: 1941, type: !465)
!17806 = distinct !DILexicalBlock(scope: !17807, file: !6239, line: 1941, column: 2)
!17807 = distinct !DILexicalBlock(scope: !17804, file: !6239, line: 1941, column: 2)
!17808 = !DILocation(line: 1941, column: 2, scope: !17806)
!17809 = !DILocalVariable(name: "__dummy2", scope: !17806, file: !6239, line: 1941, type: !465)
!17810 = !DILocation(line: 1941, column: 2, scope: !17807)
!17811 = !DILocation(line: 1941, column: 2, scope: !17754)
!17812 = !{i32 -2139801560}
!17813 = !DILocation(line: 1941, column: 2, scope: !17753)
!17814 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !17752)
!17815 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !17752)
!17816 = !DILocation(line: 1942, column: 6, scope: !17817)
!17817 = distinct !DILexicalBlock(scope: !17745, file: !6239, line: 1942, column: 6)
!17818 = !DILocation(line: 1942, column: 6, scope: !17745)
!17819 = !DILocation(line: 1943, column: 10, scope: !17820)
!17820 = distinct !DILexicalBlock(scope: !17817, file: !6239, line: 1942, column: 55)
!17821 = !DILocation(line: 1944, column: 3, scope: !17820)
!17822 = !DILocation(line: 1946, column: 46, scope: !17745)
!17823 = !DILocation(line: 1946, column: 34, scope: !17745)
!17824 = !DILocation(line: 1946, column: 53, scope: !17745)
!17825 = !DILocation(line: 1946, column: 11, scope: !17745)
!17826 = !DILocation(line: 1946, column: 9, scope: !17745)
!17827 = !DILocation(line: 1947, column: 6, scope: !17828)
!17828 = distinct !DILexicalBlock(scope: !17745, file: !6239, line: 1947, column: 6)
!17829 = !DILocation(line: 1947, column: 6, scope: !17745)
!17830 = !DILocation(line: 1948, column: 3, scope: !17828)
!17831 = !DILocation(line: 1949, column: 31, scope: !17745)
!17832 = !DILocation(line: 1949, column: 37, scope: !17745)
!17833 = !DILocation(line: 1949, column: 42, scope: !17745)
!17834 = !DILocation(line: 1949, column: 11, scope: !17745)
!17835 = !DILocation(line: 1949, column: 9, scope: !17745)
!17836 = !DILocation(line: 1950, column: 6, scope: !17837)
!17837 = distinct !DILexicalBlock(scope: !17745, file: !6239, line: 1950, column: 6)
!17838 = !DILocation(line: 1950, column: 6, scope: !17745)
!17839 = !DILocation(line: 1951, column: 16, scope: !17840)
!17840 = distinct !DILexicalBlock(scope: !17837, file: !6239, line: 1950, column: 27)
!17841 = !DILocation(line: 1951, column: 22, scope: !17840)
!17842 = !DILocation(line: 1951, column: 27, scope: !17840)
!17843 = !DILocation(line: 1951, column: 33, scope: !17840)
!17844 = !DILocation(line: 1951, column: 47, scope: !17840)
!17845 = !DILocation(line: 1951, column: 53, scope: !17840)
!17846 = !DILocation(line: 1951, column: 3, scope: !17840)
!17847 = !DILocation(line: 1952, column: 2, scope: !17840)
!17848 = !DILocation(line: 1952, column: 13, scope: !17849)
!17849 = distinct !DILexicalBlock(scope: !17837, file: !6239, line: 1952, column: 13)
!17850 = !DILocation(line: 1952, column: 20, scope: !17849)
!17851 = !DILocation(line: 1952, column: 13, scope: !17837)
!17852 = !DILocation(line: 1953, column: 10, scope: !17853)
!17853 = distinct !DILexicalBlock(scope: !17849, file: !6239, line: 1952, column: 25)
!17854 = !DILocation(line: 1954, column: 17, scope: !17853)
!17855 = !DILocation(line: 1954, column: 23, scope: !17853)
!17856 = !DILocation(line: 1954, column: 3, scope: !17853)
!17857 = !DILocation(line: 1955, column: 2, scope: !17853)
!17858 = !DILocation(line: 1956, column: 42, scope: !17859)
!17859 = distinct !DILexicalBlock(scope: !17849, file: !6239, line: 1955, column: 9)
!17860 = !DILocation(line: 1956, column: 30, scope: !17859)
!17861 = !DILocation(line: 1956, column: 49, scope: !17859)
!17862 = !DILocation(line: 1956, column: 3, scope: !17859)
!17863 = !DILabel(scope: !17745, name: "done_not_linked", file: !6239, line: 1958)
!17864 = !DILocation(line: 1958, column: 2, scope: !17745)
!17865 = !DILocation(line: 1959, column: 26, scope: !17745)
!17866 = !DILocation(line: 1959, column: 32, scope: !17745)
!17867 = !DILocation(line: 1959, column: 38, scope: !17745)
!17868 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !17749)
!17869 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !17749)
!17870 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !17749)
!17871 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !17749)
!17872 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !17749)
!17873 = !DILocation(line: 1959, column: 2, scope: !17745)
!17874 = !DILabel(scope: !17745, name: "done", file: !6239, line: 1960)
!17875 = !DILocation(line: 1960, column: 2, scope: !17745)
!17876 = !DILocation(line: 1961, column: 9, scope: !17745)
!17877 = !DILocation(line: 1961, column: 2, scope: !17745)
!17878 = !DILocation(line: 1962, column: 1, scope: !17745)
!17879 = distinct !DISubprogram(name: "sitd_submit", scope: !6239, file: !6239, line: 2282, type: !17746, scopeLine: 2284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!17880 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !17881)
!17881 = distinct !DILocation(line: 2336, column: 2, scope: !17879)
!17882 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !17881)
!17883 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !17884)
!17884 = distinct !DILocation(line: 2318, column: 2, scope: !17885)
!17885 = distinct !DILexicalBlock(scope: !17886, file: !6239, line: 2318, column: 2)
!17886 = distinct !DILexicalBlock(scope: !17887, file: !6239, line: 2318, column: 2)
!17887 = distinct !DILexicalBlock(scope: !17888, file: !6239, line: 2318, column: 2)
!17888 = distinct !DILexicalBlock(scope: !17889, file: !6239, line: 2318, column: 2)
!17889 = distinct !DILexicalBlock(scope: !17879, file: !6239, line: 2318, column: 2)
!17890 = !DILocalVariable(name: "ehci", arg: 1, scope: !17879, file: !6239, line: 2282, type: !5814)
!17891 = !DILocation(line: 2282, column: 41, scope: !17879)
!17892 = !DILocalVariable(name: "urb", arg: 2, scope: !17879, file: !6239, line: 2282, type: !5343)
!17893 = !DILocation(line: 2282, column: 59, scope: !17879)
!17894 = !DILocalVariable(name: "mem_flags", arg: 3, scope: !17879, file: !6239, line: 2283, type: !946)
!17895 = !DILocation(line: 2283, column: 8, scope: !17879)
!17896 = !DILocalVariable(name: "status", scope: !17879, file: !6239, line: 2285, type: !401)
!17897 = !DILocation(line: 2285, column: 8, scope: !17879)
!17898 = !DILocalVariable(name: "flags", scope: !17879, file: !6239, line: 2286, type: !465)
!17899 = !DILocation(line: 2286, column: 17, scope: !17879)
!17900 = !DILocalVariable(name: "stream", scope: !17879, file: !6239, line: 2287, type: !5922)
!17901 = !DILocation(line: 2287, column: 26, scope: !17879)
!17902 = !DILocation(line: 2290, column: 27, scope: !17879)
!17903 = !DILocation(line: 2290, column: 33, scope: !17879)
!17904 = !DILocation(line: 2290, column: 11, scope: !17879)
!17905 = !DILocation(line: 2290, column: 9, scope: !17879)
!17906 = !DILocation(line: 2291, column: 6, scope: !17907)
!17907 = distinct !DILexicalBlock(scope: !17879, file: !6239, line: 2291, column: 6)
!17908 = !DILocation(line: 2291, column: 13, scope: !17907)
!17909 = !DILocation(line: 2291, column: 6, scope: !17879)
!17910 = !DILocation(line: 2293, column: 3, scope: !17911)
!17911 = distinct !DILexicalBlock(scope: !17907, file: !6239, line: 2291, column: 22)
!17912 = !DILocation(line: 2295, column: 6, scope: !17913)
!17913 = distinct !DILexicalBlock(scope: !17879, file: !6239, line: 2295, column: 6)
!17914 = !DILocation(line: 2295, column: 11, scope: !17913)
!17915 = !DILocation(line: 2295, column: 23, scope: !17913)
!17916 = !DILocation(line: 2295, column: 31, scope: !17913)
!17917 = !DILocation(line: 2295, column: 34, scope: !17913)
!17918 = !DILocation(line: 2295, column: 20, scope: !17913)
!17919 = !DILocation(line: 2295, column: 6, scope: !17879)
!17920 = !DILocation(line: 2298, column: 3, scope: !17921)
!17921 = distinct !DILexicalBlock(scope: !17913, file: !6239, line: 2295, column: 42)
!17922 = !DILocation(line: 2311, column: 32, scope: !17879)
!17923 = !DILocation(line: 2311, column: 40, scope: !17879)
!17924 = !DILocation(line: 2311, column: 46, scope: !17879)
!17925 = !DILocation(line: 2311, column: 51, scope: !17879)
!17926 = !DILocation(line: 2311, column: 11, scope: !17879)
!17927 = !DILocation(line: 2311, column: 9, scope: !17879)
!17928 = !DILocation(line: 2312, column: 6, scope: !17929)
!17929 = distinct !DILexicalBlock(scope: !17879, file: !6239, line: 2312, column: 6)
!17930 = !DILocation(line: 2312, column: 13, scope: !17929)
!17931 = !DILocation(line: 2312, column: 6, scope: !17879)
!17932 = !DILocation(line: 2314, column: 3, scope: !17933)
!17933 = distinct !DILexicalBlock(scope: !17929, file: !6239, line: 2312, column: 18)
!17934 = !DILocation(line: 2318, column: 2, scope: !17879)
!17935 = !DILocation(line: 2318, column: 2, scope: !17889)
!17936 = !DILocalVariable(name: "__dummy", scope: !17937, file: !6239, line: 2318, type: !465)
!17937 = distinct !DILexicalBlock(scope: !17888, file: !6239, line: 2318, column: 2)
!17938 = !DILocation(line: 2318, column: 2, scope: !17937)
!17939 = !DILocalVariable(name: "__dummy2", scope: !17937, file: !6239, line: 2318, type: !465)
!17940 = !DILocation(line: 2318, column: 2, scope: !17888)
!17941 = !DILocation(line: 2318, column: 2, scope: !17887)
!17942 = !DILocation(line: 2318, column: 2, scope: !17943)
!17943 = distinct !DILexicalBlock(scope: !17887, file: !6239, line: 2318, column: 2)
!17944 = !DILocalVariable(name: "__dummy", scope: !17945, file: !6239, line: 2318, type: !465)
!17945 = distinct !DILexicalBlock(scope: !17946, file: !6239, line: 2318, column: 2)
!17946 = distinct !DILexicalBlock(scope: !17943, file: !6239, line: 2318, column: 2)
!17947 = !DILocation(line: 2318, column: 2, scope: !17945)
!17948 = !DILocalVariable(name: "__dummy2", scope: !17945, file: !6239, line: 2318, type: !465)
!17949 = !DILocation(line: 2318, column: 2, scope: !17946)
!17950 = !DILocation(line: 2318, column: 2, scope: !17886)
!17951 = !{i32 -2139791301}
!17952 = !DILocation(line: 2318, column: 2, scope: !17885)
!17953 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !17884)
!17954 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !17884)
!17955 = !DILocation(line: 2319, column: 6, scope: !17956)
!17956 = distinct !DILexicalBlock(scope: !17879, file: !6239, line: 2319, column: 6)
!17957 = !DILocation(line: 2319, column: 6, scope: !17879)
!17958 = !DILocation(line: 2320, column: 10, scope: !17959)
!17959 = distinct !DILexicalBlock(scope: !17956, file: !6239, line: 2319, column: 55)
!17960 = !DILocation(line: 2321, column: 3, scope: !17959)
!17961 = !DILocation(line: 2323, column: 46, scope: !17879)
!17962 = !DILocation(line: 2323, column: 34, scope: !17879)
!17963 = !DILocation(line: 2323, column: 53, scope: !17879)
!17964 = !DILocation(line: 2323, column: 11, scope: !17879)
!17965 = !DILocation(line: 2323, column: 9, scope: !17879)
!17966 = !DILocation(line: 2324, column: 6, scope: !17967)
!17967 = distinct !DILexicalBlock(scope: !17879, file: !6239, line: 2324, column: 6)
!17968 = !DILocation(line: 2324, column: 6, scope: !17879)
!17969 = !DILocation(line: 2325, column: 3, scope: !17967)
!17970 = !DILocation(line: 2326, column: 31, scope: !17879)
!17971 = !DILocation(line: 2326, column: 37, scope: !17879)
!17972 = !DILocation(line: 2326, column: 42, scope: !17879)
!17973 = !DILocation(line: 2326, column: 11, scope: !17879)
!17974 = !DILocation(line: 2326, column: 9, scope: !17879)
!17975 = !DILocation(line: 2327, column: 6, scope: !17976)
!17976 = distinct !DILexicalBlock(scope: !17879, file: !6239, line: 2327, column: 6)
!17977 = !DILocation(line: 2327, column: 6, scope: !17879)
!17978 = !DILocation(line: 2328, column: 17, scope: !17979)
!17979 = distinct !DILexicalBlock(scope: !17976, file: !6239, line: 2327, column: 27)
!17980 = !DILocation(line: 2328, column: 23, scope: !17979)
!17981 = !DILocation(line: 2328, column: 28, scope: !17979)
!17982 = !DILocation(line: 2328, column: 34, scope: !17979)
!17983 = !DILocation(line: 2328, column: 48, scope: !17979)
!17984 = !DILocation(line: 2328, column: 54, scope: !17979)
!17985 = !DILocation(line: 2328, column: 3, scope: !17979)
!17986 = !DILocation(line: 2329, column: 2, scope: !17979)
!17987 = !DILocation(line: 2329, column: 13, scope: !17988)
!17988 = distinct !DILexicalBlock(scope: !17976, file: !6239, line: 2329, column: 13)
!17989 = !DILocation(line: 2329, column: 20, scope: !17988)
!17990 = !DILocation(line: 2329, column: 13, scope: !17976)
!17991 = !DILocation(line: 2330, column: 10, scope: !17992)
!17992 = distinct !DILexicalBlock(scope: !17988, file: !6239, line: 2329, column: 25)
!17993 = !DILocation(line: 2331, column: 17, scope: !17992)
!17994 = !DILocation(line: 2331, column: 23, scope: !17992)
!17995 = !DILocation(line: 2331, column: 3, scope: !17992)
!17996 = !DILocation(line: 2332, column: 2, scope: !17992)
!17997 = !DILocation(line: 2333, column: 42, scope: !17998)
!17998 = distinct !DILexicalBlock(scope: !17988, file: !6239, line: 2332, column: 9)
!17999 = !DILocation(line: 2333, column: 30, scope: !17998)
!18000 = !DILocation(line: 2333, column: 49, scope: !17998)
!18001 = !DILocation(line: 2333, column: 3, scope: !17998)
!18002 = !DILabel(scope: !17879, name: "done_not_linked", file: !6239, line: 2335)
!18003 = !DILocation(line: 2335, column: 2, scope: !17879)
!18004 = !DILocation(line: 2336, column: 26, scope: !17879)
!18005 = !DILocation(line: 2336, column: 32, scope: !17879)
!18006 = !DILocation(line: 2336, column: 38, scope: !17879)
!18007 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !17881)
!18008 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !17881)
!18009 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !17881)
!18010 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !17881)
!18011 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !17881)
!18012 = !DILocation(line: 2336, column: 2, scope: !17879)
!18013 = !DILabel(scope: !17879, name: "done", file: !6239, line: 2337)
!18014 = !DILocation(line: 2337, column: 2, scope: !17879)
!18015 = !DILocation(line: 2338, column: 9, scope: !17879)
!18016 = !DILocation(line: 2338, column: 2, scope: !17879)
!18017 = !DILocation(line: 2339, column: 1, scope: !17879)
!18018 = distinct !DISubprogram(name: "qtd_fill", scope: !9723, file: !9723, line: 37, type: !18019, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18019 = !DISubroutineType(types: !18020)
!18020 = !{!401, !5814, !5993, !2064, !462, !401, !401}
!18021 = !DILocalVariable(name: "ehci", arg: 1, scope: !18018, file: !9723, line: 37, type: !5814)
!18022 = !DILocation(line: 37, column: 27, scope: !18018)
!18023 = !DILocalVariable(name: "qtd", arg: 2, scope: !18018, file: !9723, line: 37, type: !5993)
!18024 = !DILocation(line: 37, column: 50, scope: !18018)
!18025 = !DILocalVariable(name: "buf", arg: 3, scope: !18018, file: !9723, line: 37, type: !2064)
!18026 = !DILocation(line: 37, column: 66, scope: !18018)
!18027 = !DILocalVariable(name: "len", arg: 4, scope: !18018, file: !9723, line: 38, type: !462)
!18028 = !DILocation(line: 38, column: 12, scope: !18018)
!18029 = !DILocalVariable(name: "token", arg: 5, scope: !18018, file: !9723, line: 38, type: !401)
!18030 = !DILocation(line: 38, column: 21, scope: !18018)
!18031 = !DILocalVariable(name: "maxpacket", arg: 6, scope: !18018, file: !9723, line: 38, type: !401)
!18032 = !DILocation(line: 38, column: 32, scope: !18018)
!18033 = !DILocalVariable(name: "i", scope: !18018, file: !9723, line: 40, type: !401)
!18034 = !DILocation(line: 40, column: 6, scope: !18018)
!18035 = !DILocalVariable(name: "count", scope: !18018, file: !9723, line: 40, type: !401)
!18036 = !DILocation(line: 40, column: 9, scope: !18018)
!18037 = !DILocalVariable(name: "addr", scope: !18018, file: !9723, line: 41, type: !558)
!18038 = !DILocation(line: 41, column: 6, scope: !18018)
!18039 = !DILocation(line: 41, column: 13, scope: !18018)
!18040 = !DILocation(line: 44, column: 31, scope: !18018)
!18041 = !DILocation(line: 44, column: 42, scope: !18018)
!18042 = !DILocation(line: 44, column: 37, scope: !18018)
!18043 = !DILocation(line: 44, column: 19, scope: !18018)
!18044 = !DILocation(line: 44, column: 2, scope: !18018)
!18045 = !DILocation(line: 44, column: 7, scope: !18018)
!18046 = !DILocation(line: 44, column: 17, scope: !18018)
!18047 = !DILocation(line: 45, column: 34, scope: !18018)
!18048 = !DILocation(line: 45, column: 46, scope: !18018)
!18049 = !DILocation(line: 45, column: 51, scope: !18018)
!18050 = !DILocation(line: 45, column: 40, scope: !18018)
!18051 = !DILocation(line: 45, column: 22, scope: !18018)
!18052 = !DILocation(line: 45, column: 2, scope: !18018)
!18053 = !DILocation(line: 45, column: 7, scope: !18018)
!18054 = !DILocation(line: 45, column: 20, scope: !18018)
!18055 = !DILocation(line: 46, column: 20, scope: !18018)
!18056 = !DILocation(line: 46, column: 24, scope: !18018)
!18057 = !DILocation(line: 46, column: 17, scope: !18018)
!18058 = !DILocation(line: 46, column: 10, scope: !18018)
!18059 = !DILocation(line: 46, column: 8, scope: !18018)
!18060 = !DILocation(line: 47, column: 6, scope: !18061)
!18061 = distinct !DILexicalBlock(scope: !18018, file: !9723, line: 47, column: 6)
!18062 = !DILocation(line: 47, column: 6, scope: !18018)
!18063 = !DILocation(line: 48, column: 11, scope: !18061)
!18064 = !DILocation(line: 48, column: 9, scope: !18061)
!18065 = !DILocation(line: 48, column: 3, scope: !18061)
!18066 = !DILocation(line: 50, column: 7, scope: !18067)
!18067 = distinct !DILexicalBlock(scope: !18061, file: !9723, line: 49, column: 7)
!18068 = !DILocation(line: 51, column: 7, scope: !18067)
!18069 = !DILocation(line: 54, column: 10, scope: !18070)
!18070 = distinct !DILexicalBlock(scope: !18067, file: !9723, line: 54, column: 3)
!18071 = !DILocation(line: 54, column: 8, scope: !18070)
!18072 = !DILocation(line: 54, column: 15, scope: !18073)
!18073 = distinct !DILexicalBlock(scope: !18070, file: !9723, line: 54, column: 3)
!18074 = !DILocation(line: 54, column: 23, scope: !18073)
!18075 = !DILocation(line: 54, column: 21, scope: !18073)
!18076 = !DILocation(line: 54, column: 27, scope: !18073)
!18077 = !DILocation(line: 54, column: 30, scope: !18073)
!18078 = !DILocation(line: 54, column: 32, scope: !18073)
!18079 = !DILocation(line: 0, scope: !18073)
!18080 = !DILocation(line: 54, column: 3, scope: !18070)
!18081 = !DILocation(line: 55, column: 11, scope: !18082)
!18082 = distinct !DILexicalBlock(scope: !18073, file: !9723, line: 54, column: 42)
!18083 = !DILocation(line: 55, column: 9, scope: !18082)
!18084 = !DILocation(line: 56, column: 33, scope: !18082)
!18085 = !DILocation(line: 56, column: 44, scope: !18082)
!18086 = !DILocation(line: 56, column: 39, scope: !18082)
!18087 = !DILocation(line: 56, column: 21, scope: !18082)
!18088 = !DILocation(line: 56, column: 4, scope: !18082)
!18089 = !DILocation(line: 56, column: 9, scope: !18082)
!18090 = !DILocation(line: 56, column: 16, scope: !18082)
!18091 = !DILocation(line: 56, column: 19, scope: !18082)
!18092 = !DILocation(line: 57, column: 36, scope: !18082)
!18093 = !DILocation(line: 58, column: 12, scope: !18082)
!18094 = !DILocation(line: 58, column: 17, scope: !18082)
!18095 = !DILocation(line: 58, column: 6, scope: !18082)
!18096 = !DILocation(line: 57, column: 24, scope: !18082)
!18097 = !DILocation(line: 57, column: 4, scope: !18082)
!18098 = !DILocation(line: 57, column: 9, scope: !18082)
!18099 = !DILocation(line: 57, column: 19, scope: !18082)
!18100 = !DILocation(line: 57, column: 22, scope: !18082)
!18101 = !DILocation(line: 59, column: 8, scope: !18082)
!18102 = !DILocation(line: 60, column: 9, scope: !18103)
!18103 = distinct !DILexicalBlock(scope: !18082, file: !9723, line: 60, column: 8)
!18104 = !DILocation(line: 60, column: 15, scope: !18103)
!18105 = !DILocation(line: 60, column: 8, scope: !18103)
!18106 = !DILocation(line: 60, column: 27, scope: !18103)
!18107 = !DILocation(line: 60, column: 25, scope: !18103)
!18108 = !DILocation(line: 60, column: 8, scope: !18082)
!18109 = !DILocation(line: 61, column: 11, scope: !18103)
!18110 = !DILocation(line: 61, column: 5, scope: !18103)
!18111 = !DILocation(line: 63, column: 13, scope: !18103)
!18112 = !DILocation(line: 63, column: 11, scope: !18103)
!18113 = !DILocation(line: 64, column: 3, scope: !18082)
!18114 = !DILocation(line: 54, column: 38, scope: !18073)
!18115 = !DILocation(line: 54, column: 3, scope: !18073)
!18116 = distinct !{!18116, !18080, !18117}
!18117 = !DILocation(line: 64, column: 3, scope: !18070)
!18118 = !DILocation(line: 67, column: 7, scope: !18119)
!18119 = distinct !DILexicalBlock(scope: !18067, file: !9723, line: 67, column: 7)
!18120 = !DILocation(line: 67, column: 16, scope: !18119)
!18121 = !DILocation(line: 67, column: 13, scope: !18119)
!18122 = !DILocation(line: 67, column: 7, scope: !18067)
!18123 = !DILocation(line: 68, column: 14, scope: !18119)
!18124 = !DILocation(line: 68, column: 22, scope: !18119)
!18125 = !DILocation(line: 68, column: 20, scope: !18119)
!18126 = !DILocation(line: 68, column: 10, scope: !18119)
!18127 = !DILocation(line: 68, column: 4, scope: !18119)
!18128 = !DILocation(line: 70, column: 30, scope: !18018)
!18129 = !DILocation(line: 70, column: 37, scope: !18018)
!18130 = !DILocation(line: 70, column: 43, scope: !18018)
!18131 = !DILocation(line: 70, column: 52, scope: !18018)
!18132 = !DILocation(line: 70, column: 50, scope: !18018)
!18133 = !DILocation(line: 70, column: 18, scope: !18018)
!18134 = !DILocation(line: 70, column: 2, scope: !18018)
!18135 = !DILocation(line: 70, column: 7, scope: !18018)
!18136 = !DILocation(line: 70, column: 16, scope: !18018)
!18137 = !DILocation(line: 71, column: 16, scope: !18018)
!18138 = !DILocation(line: 71, column: 2, scope: !18018)
!18139 = !DILocation(line: 71, column: 7, scope: !18018)
!18140 = !DILocation(line: 71, column: 14, scope: !18018)
!18141 = !DILocation(line: 73, column: 9, scope: !18018)
!18142 = !DILocation(line: 73, column: 2, scope: !18018)
!18143 = distinct !DISubprogram(name: "usb_maxpacket", scope: !172, file: !172, line: 1980, type: !18144, scopeLine: 1981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18144 = !DISubroutineType(types: !18145)
!18145 = !{!319, !5047, !401, !401}
!18146 = !DILocalVariable(name: "udev", arg: 1, scope: !18143, file: !172, line: 1980, type: !5047)
!18147 = !DILocation(line: 1980, column: 34, scope: !18143)
!18148 = !DILocalVariable(name: "pipe", arg: 2, scope: !18143, file: !172, line: 1980, type: !401)
!18149 = !DILocation(line: 1980, column: 44, scope: !18143)
!18150 = !DILocalVariable(name: "is_out", arg: 3, scope: !18143, file: !172, line: 1980, type: !401)
!18151 = !DILocation(line: 1980, column: 54, scope: !18143)
!18152 = !DILocalVariable(name: "ep", scope: !18143, file: !172, line: 1982, type: !5245)
!18153 = !DILocation(line: 1982, column: 28, scope: !18143)
!18154 = !DILocalVariable(name: "epnum", scope: !18143, file: !172, line: 1983, type: !7)
!18155 = !DILocation(line: 1983, column: 13, scope: !18143)
!18156 = !DILocation(line: 1983, column: 21, scope: !18143)
!18157 = !DILocation(line: 1985, column: 6, scope: !18158)
!18158 = distinct !DILexicalBlock(scope: !18143, file: !172, line: 1985, column: 6)
!18159 = !DILocation(line: 1985, column: 6, scope: !18143)
!18160 = !DILocalVariable(name: "__ret_warn_on", scope: !18161, file: !172, line: 1986, type: !401)
!18161 = distinct !DILexicalBlock(scope: !18162, file: !172, line: 1986, column: 3)
!18162 = distinct !DILexicalBlock(scope: !18158, file: !172, line: 1985, column: 14)
!18163 = !DILocation(line: 1986, column: 3, scope: !18161)
!18164 = !DILocation(line: 1986, column: 3, scope: !18165)
!18165 = distinct !DILexicalBlock(scope: !18161, file: !172, line: 1986, column: 3)
!18166 = !DILocation(line: 1986, column: 3, scope: !18167)
!18167 = distinct !DILexicalBlock(scope: !18165, file: !172, line: 1986, column: 3)
!18168 = !DILocation(line: 1986, column: 3, scope: !18169)
!18169 = distinct !DILexicalBlock(scope: !18167, file: !172, line: 1986, column: 3)
!18170 = !DILocation(line: 1986, column: 3, scope: !18171)
!18171 = distinct !DILexicalBlock(scope: !18167, file: !172, line: 1986, column: 3)
!18172 = !{i32 -2141546257, i32 -2141546228, i32 -2141546182, i32 -2141546124, i32 -2141546070, i32 -2141546016, i32 -2141545961, i32 -2141545930}
!18173 = !DILocation(line: 1986, column: 3, scope: !18174)
!18174 = distinct !DILexicalBlock(scope: !18167, file: !172, line: 1986, column: 3)
!18175 = !{i32 -2141545528, i32 -2141545521, i32 -2141545469, i32 -2141545438, i32 -2141545408}
!18176 = !DILocation(line: 1986, column: 3, scope: !18177)
!18177 = distinct !DILexicalBlock(scope: !18167, file: !172, line: 1986, column: 3)
!18178 = !DILocation(line: 1987, column: 8, scope: !18162)
!18179 = !DILocation(line: 1987, column: 14, scope: !18162)
!18180 = !DILocation(line: 1987, column: 21, scope: !18162)
!18181 = !DILocation(line: 1987, column: 6, scope: !18162)
!18182 = !DILocation(line: 1988, column: 2, scope: !18162)
!18183 = !DILocalVariable(name: "__ret_warn_on", scope: !18184, file: !172, line: 1989, type: !401)
!18184 = distinct !DILexicalBlock(scope: !18185, file: !172, line: 1989, column: 3)
!18185 = distinct !DILexicalBlock(scope: !18158, file: !172, line: 1988, column: 9)
!18186 = !DILocation(line: 1989, column: 3, scope: !18184)
!18187 = !DILocation(line: 1989, column: 3, scope: !18188)
!18188 = distinct !DILexicalBlock(scope: !18184, file: !172, line: 1989, column: 3)
!18189 = !DILocation(line: 1989, column: 3, scope: !18190)
!18190 = distinct !DILexicalBlock(scope: !18188, file: !172, line: 1989, column: 3)
!18191 = !DILocation(line: 1989, column: 3, scope: !18192)
!18192 = distinct !DILexicalBlock(scope: !18190, file: !172, line: 1989, column: 3)
!18193 = !DILocation(line: 1989, column: 3, scope: !18194)
!18194 = distinct !DILexicalBlock(scope: !18190, file: !172, line: 1989, column: 3)
!18195 = !{i32 -2141544756, i32 -2141544727, i32 -2141544681, i32 -2141544623, i32 -2141544569, i32 -2141544515, i32 -2141544460, i32 -2141544429}
!18196 = !DILocation(line: 1989, column: 3, scope: !18197)
!18197 = distinct !DILexicalBlock(scope: !18190, file: !172, line: 1989, column: 3)
!18198 = !{i32 -2141544027, i32 -2141544020, i32 -2141543968, i32 -2141543937, i32 -2141543907}
!18199 = !DILocation(line: 1989, column: 3, scope: !18200)
!18200 = distinct !DILexicalBlock(scope: !18190, file: !172, line: 1989, column: 3)
!18201 = !DILocation(line: 1990, column: 8, scope: !18185)
!18202 = !DILocation(line: 1990, column: 14, scope: !18185)
!18203 = !DILocation(line: 1990, column: 20, scope: !18185)
!18204 = !DILocation(line: 1990, column: 6, scope: !18185)
!18205 = !DILocation(line: 1992, column: 7, scope: !18206)
!18206 = distinct !DILexicalBlock(scope: !18143, file: !172, line: 1992, column: 6)
!18207 = !DILocation(line: 1992, column: 6, scope: !18143)
!18208 = !DILocation(line: 1993, column: 3, scope: !18206)
!18209 = !DILocation(line: 1996, column: 28, scope: !18143)
!18210 = !DILocation(line: 1996, column: 32, scope: !18143)
!18211 = !DILocation(line: 1996, column: 9, scope: !18143)
!18212 = !DILocation(line: 1996, column: 2, scope: !18143)
!18213 = !DILocation(line: 1997, column: 1, scope: !18143)
!18214 = distinct !DISubprogram(name: "qtd_list_free", scope: !9723, file: !9723, line: 555, type: !18215, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18215 = !DISubroutineType(types: !18216)
!18216 = !{null, !5814, !5343, !365}
!18217 = !DILocalVariable(name: "ehci", arg: 1, scope: !18214, file: !9723, line: 556, type: !5814)
!18218 = !DILocation(line: 556, column: 20, scope: !18214)
!18219 = !DILocalVariable(name: "urb", arg: 2, scope: !18214, file: !9723, line: 557, type: !5343)
!18220 = !DILocation(line: 557, column: 15, scope: !18214)
!18221 = !DILocalVariable(name: "qtd_list", arg: 3, scope: !18214, file: !9723, line: 558, type: !365)
!18222 = !DILocation(line: 558, column: 20, scope: !18214)
!18223 = !DILocalVariable(name: "entry", scope: !18214, file: !9723, line: 560, type: !365)
!18224 = !DILocation(line: 560, column: 20, scope: !18214)
!18225 = !DILocalVariable(name: "temp", scope: !18214, file: !9723, line: 560, type: !365)
!18226 = !DILocation(line: 560, column: 28, scope: !18214)
!18227 = !DILocation(line: 562, column: 2, scope: !18228)
!18228 = distinct !DILexicalBlock(scope: !18214, file: !9723, line: 562, column: 2)
!18229 = !DILocation(line: 562, column: 2, scope: !18230)
!18230 = distinct !DILexicalBlock(scope: !18228, file: !9723, line: 562, column: 2)
!18231 = !DILocalVariable(name: "qtd", scope: !18232, file: !9723, line: 563, type: !5993)
!18232 = distinct !DILexicalBlock(scope: !18230, file: !9723, line: 562, column: 45)
!18233 = !DILocation(line: 563, column: 20, scope: !18232)
!18234 = !DILocalVariable(name: "__mptr", scope: !18235, file: !9723, line: 565, type: !341)
!18235 = distinct !DILexicalBlock(scope: !18232, file: !9723, line: 565, column: 9)
!18236 = !DILocation(line: 565, column: 9, scope: !18235)
!18237 = !DILocation(line: 565, column: 9, scope: !18238)
!18238 = distinct !DILexicalBlock(scope: !18235, file: !9723, line: 565, column: 9)
!18239 = !DILocation(line: 565, column: 7, scope: !18232)
!18240 = !DILocation(line: 566, column: 14, scope: !18232)
!18241 = !DILocation(line: 566, column: 19, scope: !18232)
!18242 = !DILocation(line: 566, column: 3, scope: !18232)
!18243 = !DILocation(line: 567, column: 18, scope: !18232)
!18244 = !DILocation(line: 567, column: 24, scope: !18232)
!18245 = !DILocation(line: 567, column: 3, scope: !18232)
!18246 = !DILocation(line: 568, column: 2, scope: !18232)
!18247 = distinct !{!18247, !18227, !18248}
!18248 = !DILocation(line: 568, column: 2, scope: !18228)
!18249 = !DILocation(line: 569, column: 1, scope: !18214)
!18250 = distinct !DISubprogram(name: "usb_endpoint_maxp", scope: !34, file: !34, line: 647, type: !18251, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18251 = !DISubroutineType(types: !18252)
!18252 = !{!401, !18253}
!18253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18254, size: 64)
!18254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5078)
!18255 = !DILocalVariable(name: "epd", arg: 1, scope: !18250, file: !34, line: 647, type: !18253)
!18256 = !DILocation(line: 647, column: 75, scope: !18250)
!18257 = !DILocation(line: 649, column: 9, scope: !18250)
!18258 = !DILocation(line: 649, column: 44, scope: !18250)
!18259 = !DILocation(line: 649, column: 2, scope: !18250)
!18260 = distinct !DISubprogram(name: "qh_append_tds", scope: !9723, file: !9723, line: 1020, type: !18261, scopeLine: 1027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18261 = !DISubroutineType(types: !18262)
!18262 = !{!5884, !5814, !5343, !365, !401, !1024}
!18263 = !DILocalVariable(name: "ehci", arg: 1, scope: !18260, file: !9723, line: 1021, type: !5814)
!18264 = !DILocation(line: 1021, column: 20, scope: !18260)
!18265 = !DILocalVariable(name: "urb", arg: 2, scope: !18260, file: !9723, line: 1022, type: !5343)
!18266 = !DILocation(line: 1022, column: 15, scope: !18260)
!18267 = !DILocalVariable(name: "qtd_list", arg: 3, scope: !18260, file: !9723, line: 1023, type: !365)
!18268 = !DILocation(line: 1023, column: 20, scope: !18260)
!18269 = !DILocalVariable(name: "epnum", arg: 4, scope: !18260, file: !9723, line: 1024, type: !401)
!18270 = !DILocation(line: 1024, column: 8, scope: !18260)
!18271 = !DILocalVariable(name: "ptr", arg: 5, scope: !18260, file: !9723, line: 1025, type: !1024)
!18272 = !DILocation(line: 1025, column: 11, scope: !18260)
!18273 = !DILocalVariable(name: "qh", scope: !18260, file: !9723, line: 1028, type: !5884)
!18274 = !DILocation(line: 1028, column: 19, scope: !18260)
!18275 = !DILocalVariable(name: "qh_addr_mask", scope: !18260, file: !9723, line: 1029, type: !5103)
!18276 = !DILocation(line: 1029, column: 11, scope: !18260)
!18277 = !DILocation(line: 1029, column: 38, scope: !18260)
!18278 = !DILocation(line: 1029, column: 26, scope: !18260)
!18279 = !DILocation(line: 1031, column: 27, scope: !18260)
!18280 = !DILocation(line: 1031, column: 26, scope: !18260)
!18281 = !DILocation(line: 1031, column: 7, scope: !18260)
!18282 = !DILocation(line: 1031, column: 5, scope: !18260)
!18283 = !DILocation(line: 1032, column: 6, scope: !18284)
!18284 = distinct !DILexicalBlock(scope: !18260, file: !9723, line: 1032, column: 6)
!18285 = !DILocation(line: 1032, column: 6, scope: !18260)
!18286 = !DILocation(line: 1034, column: 17, scope: !18287)
!18287 = distinct !DILexicalBlock(scope: !18284, file: !9723, line: 1032, column: 29)
!18288 = !DILocation(line: 1034, column: 23, scope: !18287)
!18289 = !DILocation(line: 1034, column: 8, scope: !18287)
!18290 = !DILocation(line: 1034, column: 6, scope: !18287)
!18291 = !DILocation(line: 1035, column: 10, scope: !18287)
!18292 = !DILocation(line: 1035, column: 4, scope: !18287)
!18293 = !DILocation(line: 1035, column: 8, scope: !18287)
!18294 = !DILocation(line: 1036, column: 2, scope: !18287)
!18295 = !DILocation(line: 1037, column: 6, scope: !18296)
!18296 = distinct !DILexicalBlock(scope: !18260, file: !9723, line: 1037, column: 6)
!18297 = !DILocation(line: 1037, column: 6, scope: !18260)
!18298 = !DILocalVariable(name: "qtd", scope: !18299, file: !9723, line: 1038, type: !5993)
!18299 = distinct !DILexicalBlock(scope: !18296, file: !9723, line: 1037, column: 27)
!18300 = !DILocation(line: 1038, column: 20, scope: !18299)
!18301 = !DILocation(line: 1040, column: 7, scope: !18302)
!18302 = distinct !DILexicalBlock(scope: !18299, file: !9723, line: 1040, column: 7)
!18303 = !DILocation(line: 1040, column: 7, scope: !18299)
!18304 = !DILocation(line: 1041, column: 8, scope: !18302)
!18305 = !DILocation(line: 1041, column: 4, scope: !18302)
!18306 = !DILocalVariable(name: "__mptr", scope: !18307, file: !9723, line: 1043, type: !341)
!18307 = distinct !DILexicalBlock(scope: !18302, file: !9723, line: 1043, column: 10)
!18308 = !DILocation(line: 1043, column: 10, scope: !18307)
!18309 = !DILocation(line: 1043, column: 10, scope: !18310)
!18310 = distinct !DILexicalBlock(scope: !18307, file: !9723, line: 1043, column: 10)
!18311 = !DILocation(line: 1043, column: 8, scope: !18302)
!18312 = !DILocation(line: 1047, column: 7, scope: !18313)
!18313 = distinct !DILexicalBlock(scope: !18299, file: !9723, line: 1047, column: 7)
!18314 = !DILocation(line: 1047, column: 7, scope: !18299)
!18315 = !DILocation(line: 1050, column: 29, scope: !18316)
!18316 = distinct !DILexicalBlock(scope: !18317, file: !9723, line: 1050, column: 29)
!18317 = distinct !DILexicalBlock(scope: !18313, file: !9723, line: 1047, column: 30)
!18318 = !DILocation(line: 1050, column: 56, scope: !18316)
!18319 = !DILocation(line: 1050, column: 29, scope: !18317)
!18320 = !DILocation(line: 1051, column: 26, scope: !18316)
!18321 = !DILocation(line: 1051, column: 25, scope: !18316)
!18322 = !DILocation(line: 1051, column: 5, scope: !18316)
!18323 = !DILocation(line: 1051, column: 9, scope: !18316)
!18324 = !DILocation(line: 1051, column: 13, scope: !18316)
!18325 = !DILocation(line: 1051, column: 22, scope: !18316)
!18326 = !DILocation(line: 1052, column: 3, scope: !18317)
!18327 = !DILocation(line: 1057, column: 7, scope: !18328)
!18328 = distinct !DILexicalBlock(scope: !18299, file: !9723, line: 1057, column: 7)
!18329 = !DILocation(line: 1057, column: 7, scope: !18299)
!18330 = !DILocalVariable(name: "dummy", scope: !18331, file: !9723, line: 1058, type: !5993)
!18331 = distinct !DILexicalBlock(scope: !18328, file: !9723, line: 1057, column: 29)
!18332 = !DILocation(line: 1058, column: 22, scope: !18331)
!18333 = !DILocalVariable(name: "dma", scope: !18331, file: !9723, line: 1059, type: !2064)
!18334 = !DILocation(line: 1059, column: 16, scope: !18331)
!18335 = !DILocalVariable(name: "token", scope: !18331, file: !9723, line: 1060, type: !5103)
!18336 = !DILocation(line: 1060, column: 13, scope: !18331)
!18337 = !DILocation(line: 1067, column: 12, scope: !18331)
!18338 = !DILocation(line: 1067, column: 17, scope: !18331)
!18339 = !DILocation(line: 1067, column: 10, scope: !18331)
!18340 = !DILocation(line: 1068, column: 20, scope: !18331)
!18341 = !DILocation(line: 1068, column: 4, scope: !18331)
!18342 = !DILocation(line: 1068, column: 9, scope: !18331)
!18343 = !DILocation(line: 1068, column: 18, scope: !18331)
!18344 = !DILocation(line: 1070, column: 12, scope: !18331)
!18345 = !DILocation(line: 1070, column: 16, scope: !18331)
!18346 = !DILocation(line: 1070, column: 10, scope: !18331)
!18347 = !DILocation(line: 1072, column: 10, scope: !18331)
!18348 = !DILocation(line: 1072, column: 17, scope: !18331)
!18349 = !DILocation(line: 1072, column: 8, scope: !18331)
!18350 = !DILocation(line: 1073, column: 5, scope: !18331)
!18351 = !DILocation(line: 1073, column: 14, scope: !18331)
!18352 = !DILocation(line: 1073, column: 13, scope: !18331)
!18353 = !DILocation(line: 1074, column: 21, scope: !18331)
!18354 = !DILocation(line: 1074, column: 4, scope: !18331)
!18355 = !DILocation(line: 1074, column: 11, scope: !18331)
!18356 = !DILocation(line: 1074, column: 19, scope: !18331)
!18357 = !DILocation(line: 1076, column: 15, scope: !18331)
!18358 = !DILocation(line: 1076, column: 20, scope: !18331)
!18359 = !DILocation(line: 1076, column: 4, scope: !18331)
!18360 = !DILocation(line: 1077, column: 15, scope: !18331)
!18361 = !DILocation(line: 1077, column: 22, scope: !18331)
!18362 = !DILocation(line: 1077, column: 32, scope: !18331)
!18363 = !DILocation(line: 1077, column: 4, scope: !18331)
!18364 = !DILocation(line: 1078, column: 21, scope: !18331)
!18365 = !DILocation(line: 1078, column: 32, scope: !18331)
!18366 = !DILocation(line: 1078, column: 36, scope: !18331)
!18367 = !DILocation(line: 1078, column: 4, scope: !18331)
!18368 = !DILocation(line: 1080, column: 18, scope: !18331)
!18369 = !DILocation(line: 1080, column: 24, scope: !18331)
!18370 = !DILocation(line: 1080, column: 29, scope: !18331)
!18371 = !DILocation(line: 1080, column: 34, scope: !18331)
!18372 = !DILocation(line: 1080, column: 4, scope: !18331)
!18373 = !DILocation(line: 1081, column: 16, scope: !18331)
!18374 = !DILocation(line: 1081, column: 4, scope: !18331)
!18375 = !DILocation(line: 1081, column: 8, scope: !18331)
!18376 = !DILocation(line: 1081, column: 14, scope: !18331)
!18377 = !DILocation(line: 1084, column: 10, scope: !18331)
!18378 = !DILocation(line: 1084, column: 15, scope: !18331)
!18379 = !DILocation(line: 1084, column: 8, scope: !18331)
!18380 = !DILocalVariable(name: "__mptr", scope: !18381, file: !9723, line: 1085, type: !341)
!18381 = distinct !DILexicalBlock(scope: !18331, file: !9723, line: 1085, column: 10)
!18382 = !DILocation(line: 1085, column: 10, scope: !18381)
!18383 = !DILocation(line: 1085, column: 10, scope: !18384)
!18384 = distinct !DILexicalBlock(scope: !18381, file: !9723, line: 1085, column: 10)
!18385 = !DILocation(line: 1085, column: 8, scope: !18331)
!18386 = !DILocation(line: 1087, column: 19, scope: !18331)
!18387 = !DILocation(line: 1087, column: 4, scope: !18331)
!18388 = !DILocation(line: 1087, column: 9, scope: !18331)
!18389 = !DILocation(line: 1087, column: 17, scope: !18331)
!18390 = !DILocation(line: 1090, column: 4, scope: !18331)
!18391 = !{i32 -2139915946}
!18392 = !DILocation(line: 1091, column: 22, scope: !18331)
!18393 = !DILocation(line: 1091, column: 4, scope: !18331)
!18394 = !DILocation(line: 1091, column: 11, scope: !18331)
!18395 = !DILocation(line: 1091, column: 20, scope: !18331)
!18396 = !DILocation(line: 1093, column: 18, scope: !18331)
!18397 = !DILocation(line: 1093, column: 4, scope: !18331)
!18398 = !DILocation(line: 1093, column: 9, scope: !18331)
!18399 = !DILocation(line: 1093, column: 16, scope: !18331)
!18400 = !DILocation(line: 1094, column: 3, scope: !18331)
!18401 = !DILocation(line: 1095, column: 2, scope: !18299)
!18402 = !DILocation(line: 1096, column: 9, scope: !18260)
!18403 = !DILocation(line: 1096, column: 2, scope: !18260)
!18404 = distinct !DISubprogram(name: "qh_make", scope: !9723, file: !9723, line: 760, type: !18405, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18405 = !DISubroutineType(types: !18406)
!18406 = !{!5884, !5814, !5343, !946}
!18407 = !DILocalVariable(name: "ehci", arg: 1, scope: !18404, file: !9723, line: 761, type: !5814)
!18408 = !DILocation(line: 761, column: 20, scope: !18404)
!18409 = !DILocalVariable(name: "urb", arg: 2, scope: !18404, file: !9723, line: 762, type: !5343)
!18410 = !DILocation(line: 762, column: 15, scope: !18404)
!18411 = !DILocalVariable(name: "flags", arg: 3, scope: !18404, file: !9723, line: 763, type: !946)
!18412 = !DILocation(line: 763, column: 10, scope: !18404)
!18413 = !DILocalVariable(name: "qh", scope: !18404, file: !9723, line: 765, type: !5884)
!18414 = !DILocation(line: 765, column: 19, scope: !18404)
!18415 = !DILocation(line: 765, column: 39, scope: !18404)
!18416 = !DILocation(line: 765, column: 45, scope: !18404)
!18417 = !DILocation(line: 765, column: 24, scope: !18404)
!18418 = !DILocalVariable(name: "ep", scope: !18404, file: !9723, line: 766, type: !5245)
!18419 = !DILocation(line: 766, column: 28, scope: !18404)
!18420 = !DILocalVariable(name: "info1", scope: !18404, file: !9723, line: 767, type: !303)
!18421 = !DILocation(line: 767, column: 8, scope: !18404)
!18422 = !DILocalVariable(name: "info2", scope: !18404, file: !9723, line: 767, type: !303)
!18423 = !DILocation(line: 767, column: 19, scope: !18404)
!18424 = !DILocalVariable(name: "is_input", scope: !18404, file: !9723, line: 768, type: !401)
!18425 = !DILocation(line: 768, column: 8, scope: !18404)
!18426 = !DILocalVariable(name: "type", scope: !18404, file: !9723, line: 768, type: !401)
!18427 = !DILocation(line: 768, column: 18, scope: !18404)
!18428 = !DILocalVariable(name: "maxp", scope: !18404, file: !9723, line: 769, type: !401)
!18429 = !DILocation(line: 769, column: 8, scope: !18404)
!18430 = !DILocalVariable(name: "mult", scope: !18404, file: !9723, line: 770, type: !401)
!18431 = !DILocation(line: 770, column: 8, scope: !18404)
!18432 = !DILocalVariable(name: "tt", scope: !18404, file: !9723, line: 771, type: !5058)
!18433 = !DILocation(line: 771, column: 18, scope: !18404)
!18434 = !DILocation(line: 771, column: 23, scope: !18404)
!18435 = !DILocation(line: 771, column: 28, scope: !18404)
!18436 = !DILocation(line: 771, column: 33, scope: !18404)
!18437 = !DILocalVariable(name: "hw", scope: !18404, file: !9723, line: 772, type: !5888)
!18438 = !DILocation(line: 772, column: 21, scope: !18404)
!18439 = !DILocation(line: 774, column: 7, scope: !18440)
!18440 = distinct !DILexicalBlock(scope: !18404, file: !9723, line: 774, column: 6)
!18441 = !DILocation(line: 774, column: 6, scope: !18404)
!18442 = !DILocation(line: 775, column: 10, scope: !18440)
!18443 = !DILocation(line: 775, column: 3, scope: !18440)
!18444 = !DILocation(line: 780, column: 11, scope: !18404)
!18445 = !DILocation(line: 780, column: 40, scope: !18404)
!18446 = !DILocation(line: 780, column: 8, scope: !18404)
!18447 = !DILocation(line: 781, column: 11, scope: !18404)
!18448 = !DILocation(line: 781, column: 38, scope: !18404)
!18449 = !DILocation(line: 781, column: 8, scope: !18404)
!18450 = !DILocation(line: 783, column: 13, scope: !18404)
!18451 = !DILocation(line: 783, column: 11, scope: !18404)
!18452 = !DILocation(line: 784, column: 9, scope: !18404)
!18453 = !DILocation(line: 784, column: 7, scope: !18404)
!18454 = !DILocation(line: 785, column: 26, scope: !18404)
!18455 = !DILocation(line: 785, column: 31, scope: !18404)
!18456 = !DILocation(line: 785, column: 36, scope: !18404)
!18457 = !DILocation(line: 785, column: 41, scope: !18404)
!18458 = !DILocation(line: 785, column: 7, scope: !18404)
!18459 = !DILocation(line: 785, column: 5, scope: !18404)
!18460 = !DILocation(line: 786, column: 29, scope: !18404)
!18461 = !DILocation(line: 786, column: 33, scope: !18404)
!18462 = !DILocation(line: 786, column: 9, scope: !18404)
!18463 = !DILocation(line: 786, column: 7, scope: !18404)
!18464 = !DILocation(line: 787, column: 34, scope: !18404)
!18465 = !DILocation(line: 787, column: 38, scope: !18404)
!18466 = !DILocation(line: 787, column: 9, scope: !18404)
!18467 = !DILocation(line: 787, column: 7, scope: !18404)
!18468 = !DILocation(line: 792, column: 6, scope: !18469)
!18469 = distinct !DILexicalBlock(scope: !18404, file: !9723, line: 792, column: 6)
!18470 = !DILocation(line: 792, column: 11, scope: !18469)
!18471 = !DILocation(line: 792, column: 6, scope: !18404)
!18472 = !DILocation(line: 794, column: 3, scope: !18473)
!18473 = distinct !DILexicalBlock(scope: !18469, file: !9723, line: 792, column: 19)
!18474 = !DILocation(line: 805, column: 6, scope: !18475)
!18475 = distinct !DILexicalBlock(scope: !18404, file: !9723, line: 805, column: 6)
!18476 = !DILocation(line: 805, column: 11, scope: !18475)
!18477 = !DILocation(line: 805, column: 6, scope: !18404)
!18478 = !DILocalVariable(name: "tmp", scope: !18479, file: !9723, line: 806, type: !7)
!18479 = distinct !DILexicalBlock(scope: !18475, file: !9723, line: 805, column: 30)
!18480 = !DILocation(line: 806, column: 12, scope: !18479)
!18481 = !DILocation(line: 808, column: 18, scope: !18479)
!18482 = !DILocation(line: 808, column: 3, scope: !18479)
!18483 = !DILocation(line: 808, column: 7, scope: !18479)
!18484 = !DILocation(line: 808, column: 10, scope: !18479)
!18485 = !DILocation(line: 808, column: 16, scope: !18479)
!18486 = !DILocation(line: 810, column: 3, scope: !18479)
!18487 = !DILocation(line: 810, column: 7, scope: !18479)
!18488 = !DILocation(line: 810, column: 10, scope: !18479)
!18489 = !DILocation(line: 810, column: 16, scope: !18479)
!18490 = !DILocation(line: 812, column: 7, scope: !18491)
!18491 = distinct !DILexicalBlock(scope: !18479, file: !9723, line: 812, column: 7)
!18492 = !DILocation(line: 812, column: 12, scope: !18491)
!18493 = !DILocation(line: 812, column: 17, scope: !18491)
!18494 = !DILocation(line: 812, column: 23, scope: !18491)
!18495 = !DILocation(line: 812, column: 7, scope: !18479)
!18496 = !DILocation(line: 813, column: 4, scope: !18497)
!18497 = distinct !DILexicalBlock(scope: !18491, file: !9723, line: 812, column: 42)
!18498 = !DILocation(line: 813, column: 8, scope: !18497)
!18499 = !DILocation(line: 813, column: 11, scope: !18497)
!18500 = !DILocation(line: 813, column: 19, scope: !18497)
!18501 = !DILocation(line: 814, column: 4, scope: !18497)
!18502 = !DILocation(line: 814, column: 8, scope: !18497)
!18503 = !DILocation(line: 814, column: 15, scope: !18497)
!18504 = !DILocation(line: 816, column: 8, scope: !18505)
!18505 = distinct !DILexicalBlock(scope: !18497, file: !9723, line: 816, column: 8)
!18506 = !DILocation(line: 816, column: 13, scope: !18505)
!18507 = !DILocation(line: 816, column: 22, scope: !18505)
!18508 = !DILocation(line: 816, column: 26, scope: !18505)
!18509 = !DILocation(line: 816, column: 29, scope: !18505)
!18510 = !DILocation(line: 816, column: 34, scope: !18505)
!18511 = !DILocation(line: 816, column: 43, scope: !18505)
!18512 = !DILocation(line: 816, column: 8, scope: !18497)
!18513 = !DILocation(line: 821, column: 5, scope: !18514)
!18514 = distinct !DILexicalBlock(scope: !18505, file: !9723, line: 816, column: 48)
!18515 = !DILocation(line: 821, column: 10, scope: !18514)
!18516 = !DILocation(line: 821, column: 19, scope: !18514)
!18517 = !DILocation(line: 822, column: 4, scope: !18514)
!18518 = !DILocation(line: 822, column: 15, scope: !18519)
!18519 = distinct !DILexicalBlock(scope: !18505, file: !9723, line: 822, column: 15)
!18520 = !DILocation(line: 822, column: 20, scope: !18519)
!18521 = !DILocation(line: 822, column: 31, scope: !18519)
!18522 = !DILocation(line: 822, column: 37, scope: !18519)
!18523 = !DILocation(line: 822, column: 51, scope: !18519)
!18524 = !DILocation(line: 822, column: 29, scope: !18519)
!18525 = !DILocation(line: 822, column: 15, scope: !18505)
!18526 = !DILocation(line: 823, column: 21, scope: !18527)
!18527 = distinct !DILexicalBlock(scope: !18519, file: !9723, line: 822, column: 57)
!18528 = !DILocation(line: 823, column: 27, scope: !18527)
!18529 = !DILocation(line: 823, column: 41, scope: !18527)
!18530 = !DILocation(line: 823, column: 5, scope: !18527)
!18531 = !DILocation(line: 823, column: 10, scope: !18527)
!18532 = !DILocation(line: 823, column: 19, scope: !18527)
!18533 = !DILocation(line: 824, column: 4, scope: !18527)
!18534 = !DILocation(line: 825, column: 20, scope: !18497)
!18535 = !DILocation(line: 825, column: 25, scope: !18497)
!18536 = !DILocation(line: 825, column: 34, scope: !18497)
!18537 = !DILocation(line: 825, column: 4, scope: !18497)
!18538 = !DILocation(line: 825, column: 8, scope: !18497)
!18539 = !DILocation(line: 825, column: 11, scope: !18497)
!18540 = !DILocation(line: 825, column: 18, scope: !18497)
!18541 = !DILocalVariable(name: "__UNIQUE_ID___x330", scope: !18542, file: !9723, line: 828, type: !7)
!18542 = distinct !DILexicalBlock(scope: !18497, file: !9723, line: 828, column: 10)
!18543 = !DILocation(line: 828, column: 10, scope: !18542)
!18544 = !DILocalVariable(name: "__UNIQUE_ID___y331", scope: !18542, file: !9723, line: 828, type: !7)
!18545 = !DILocation(line: 828, column: 8, scope: !18497)
!18546 = !DILocalVariable(name: "__UNIQUE_ID___x332", scope: !18547, file: !9723, line: 832, type: !7)
!18547 = distinct !DILexicalBlock(scope: !18497, file: !9723, line: 832, column: 24)
!18548 = !DILocation(line: 832, column: 24, scope: !18547)
!18549 = !DILocalVariable(name: "__UNIQUE_ID___y333", scope: !18547, file: !9723, line: 832, type: !7)
!18550 = !DILocation(line: 832, column: 24, scope: !18497)
!18551 = !DILocation(line: 832, column: 4, scope: !18497)
!18552 = !DILocation(line: 832, column: 8, scope: !18497)
!18553 = !DILocation(line: 832, column: 11, scope: !18497)
!18554 = !DILocation(line: 832, column: 22, scope: !18497)
!18555 = !DILocation(line: 833, column: 23, scope: !18497)
!18556 = !DILocation(line: 833, column: 27, scope: !18497)
!18557 = !DILocation(line: 833, column: 30, scope: !18497)
!18558 = !DILocation(line: 833, column: 41, scope: !18497)
!18559 = !DILocation(line: 833, column: 4, scope: !18497)
!18560 = !DILocation(line: 833, column: 8, scope: !18497)
!18561 = !DILocation(line: 833, column: 11, scope: !18497)
!18562 = !DILocation(line: 833, column: 21, scope: !18497)
!18563 = !DILocation(line: 834, column: 3, scope: !18497)
!18564 = !DILocalVariable(name: "think_time", scope: !18565, file: !9723, line: 835, type: !401)
!18565 = distinct !DILexicalBlock(scope: !18491, file: !9723, line: 834, column: 10)
!18566 = !DILocation(line: 835, column: 9, scope: !18565)
!18567 = !DILocation(line: 838, column: 40, scope: !18565)
!18568 = !DILocation(line: 838, column: 45, scope: !18565)
!18569 = !DILocation(line: 838, column: 50, scope: !18565)
!18570 = !DILocation(line: 839, column: 6, scope: !18565)
!18571 = !DILocation(line: 839, column: 19, scope: !18565)
!18572 = !DILocation(line: 838, column: 21, scope: !18565)
!18573 = !DILocation(line: 839, column: 25, scope: !18565)
!18574 = !DILocation(line: 838, column: 19, scope: !18565)
!18575 = !DILocation(line: 838, column: 17, scope: !18565)
!18576 = !DILocation(line: 838, column: 4, scope: !18565)
!18577 = !DILocation(line: 838, column: 8, scope: !18565)
!18578 = !DILocation(line: 838, column: 15, scope: !18565)
!18579 = !DILocation(line: 842, column: 8, scope: !18580)
!18580 = distinct !DILexicalBlock(scope: !18565, file: !9723, line: 842, column: 8)
!18581 = !DILocation(line: 842, column: 8, scope: !18565)
!18582 = !DILocation(line: 843, column: 22, scope: !18583)
!18583 = distinct !DILexicalBlock(scope: !18580, file: !9723, line: 842, column: 18)
!18584 = !DILocation(line: 843, column: 26, scope: !18583)
!18585 = !DILocation(line: 843, column: 29, scope: !18583)
!18586 = !DILocation(line: 843, column: 35, scope: !18583)
!18587 = !DILocation(line: 843, column: 5, scope: !18583)
!18588 = !DILocation(line: 843, column: 9, scope: !18583)
!18589 = !DILocation(line: 843, column: 12, scope: !18583)
!18590 = !DILocation(line: 843, column: 20, scope: !18583)
!18591 = !DILocation(line: 844, column: 5, scope: !18583)
!18592 = !DILocation(line: 844, column: 9, scope: !18583)
!18593 = !DILocation(line: 844, column: 12, scope: !18583)
!18594 = !DILocation(line: 844, column: 18, scope: !18583)
!18595 = !DILocation(line: 845, column: 4, scope: !18583)
!18596 = !DILocation(line: 846, column: 5, scope: !18597)
!18597 = distinct !DILexicalBlock(scope: !18580, file: !9723, line: 845, column: 11)
!18598 = !DILocation(line: 846, column: 9, scope: !18597)
!18599 = !DILocation(line: 846, column: 12, scope: !18597)
!18600 = !DILocation(line: 846, column: 18, scope: !18597)
!18601 = !DILocation(line: 847, column: 5, scope: !18597)
!18602 = !DILocation(line: 847, column: 9, scope: !18597)
!18603 = !DILocation(line: 847, column: 12, scope: !18597)
!18604 = !DILocation(line: 847, column: 20, scope: !18597)
!18605 = !DILocation(line: 850, column: 17, scope: !18565)
!18606 = !DILocation(line: 850, column: 22, scope: !18565)
!18607 = !DILocation(line: 850, column: 26, scope: !18565)
!18608 = !DILocation(line: 850, column: 15, scope: !18565)
!18609 = !DILocation(line: 851, column: 22, scope: !18565)
!18610 = !DILocation(line: 851, column: 4, scope: !18565)
!18611 = !DILocation(line: 851, column: 8, scope: !18565)
!18612 = !DILocation(line: 851, column: 11, scope: !18565)
!18613 = !DILocation(line: 851, column: 20, scope: !18565)
!18614 = !DILocation(line: 854, column: 8, scope: !18615)
!18615 = distinct !DILexicalBlock(scope: !18565, file: !9723, line: 854, column: 8)
!18616 = !DILocation(line: 854, column: 13, scope: !18615)
!18617 = !DILocation(line: 854, column: 24, scope: !18615)
!18618 = !DILocation(line: 854, column: 30, scope: !18615)
!18619 = !DILocation(line: 854, column: 22, scope: !18615)
!18620 = !DILocation(line: 854, column: 8, scope: !18565)
!18621 = !DILocation(line: 855, column: 21, scope: !18615)
!18622 = !DILocation(line: 855, column: 27, scope: !18615)
!18623 = !DILocation(line: 855, column: 5, scope: !18615)
!18624 = !DILocation(line: 855, column: 10, scope: !18615)
!18625 = !DILocation(line: 855, column: 19, scope: !18615)
!18626 = !DILocation(line: 856, column: 20, scope: !18565)
!18627 = !DILocation(line: 856, column: 25, scope: !18565)
!18628 = !DILocation(line: 856, column: 4, scope: !18565)
!18629 = !DILocation(line: 856, column: 8, scope: !18565)
!18630 = !DILocation(line: 856, column: 11, scope: !18565)
!18631 = !DILocation(line: 856, column: 18, scope: !18565)
!18632 = !DILocalVariable(name: "__UNIQUE_ID___x334", scope: !18633, file: !9723, line: 859, type: !7)
!18633 = distinct !DILexicalBlock(scope: !18565, file: !9723, line: 859, column: 10)
!18634 = !DILocation(line: 859, column: 10, scope: !18633)
!18635 = !DILocalVariable(name: "__UNIQUE_ID___y335", scope: !18633, file: !9723, line: 859, type: !7)
!18636 = !DILocation(line: 859, column: 8, scope: !18565)
!18637 = !DILocation(line: 861, column: 10, scope: !18565)
!18638 = !DILocation(line: 861, column: 8, scope: !18565)
!18639 = !DILocalVariable(name: "__UNIQUE_ID___x336", scope: !18640, file: !9723, line: 864, type: !7)
!18640 = distinct !DILexicalBlock(scope: !18565, file: !9723, line: 864, column: 23)
!18641 = !DILocation(line: 864, column: 23, scope: !18640)
!18642 = !DILocalVariable(name: "__UNIQUE_ID___y337", scope: !18640, file: !9723, line: 864, type: !7)
!18643 = !DILocation(line: 864, column: 23, scope: !18565)
!18644 = !DILocation(line: 864, column: 4, scope: !18565)
!18645 = !DILocation(line: 864, column: 8, scope: !18565)
!18646 = !DILocation(line: 864, column: 11, scope: !18565)
!18647 = !DILocation(line: 864, column: 21, scope: !18565)
!18648 = !DILocation(line: 865, column: 24, scope: !18565)
!18649 = !DILocation(line: 865, column: 28, scope: !18565)
!18650 = !DILocation(line: 865, column: 31, scope: !18565)
!18651 = !DILocation(line: 865, column: 41, scope: !18565)
!18652 = !DILocation(line: 865, column: 4, scope: !18565)
!18653 = !DILocation(line: 865, column: 8, scope: !18565)
!18654 = !DILocation(line: 865, column: 11, scope: !18565)
!18655 = !DILocation(line: 865, column: 22, scope: !18565)
!18656 = !DILocation(line: 867, column: 2, scope: !18479)
!18657 = !DILocation(line: 870, column: 16, scope: !18404)
!18658 = !DILocation(line: 870, column: 21, scope: !18404)
!18659 = !DILocation(line: 870, column: 2, scope: !18404)
!18660 = !DILocation(line: 870, column: 6, scope: !18404)
!18661 = !DILocation(line: 870, column: 9, scope: !18404)
!18662 = !DILocation(line: 870, column: 14, scope: !18404)
!18663 = !DILocation(line: 871, column: 14, scope: !18404)
!18664 = !DILocation(line: 871, column: 19, scope: !18404)
!18665 = !DILocation(line: 871, column: 2, scope: !18404)
!18666 = !DILocation(line: 871, column: 6, scope: !18404)
!18667 = !DILocation(line: 871, column: 9, scope: !18404)
!18668 = !DILocation(line: 871, column: 12, scope: !18404)
!18669 = !DILocation(line: 874, column: 10, scope: !18404)
!18670 = !DILocation(line: 874, column: 15, scope: !18404)
!18671 = !DILocation(line: 874, column: 20, scope: !18404)
!18672 = !DILocation(line: 874, column: 2, scope: !18404)
!18673 = !DILocation(line: 876, column: 9, scope: !18674)
!18674 = distinct !DILexicalBlock(scope: !18404, file: !9723, line: 874, column: 27)
!18675 = !DILocation(line: 876, column: 3, scope: !18674)
!18676 = !DILocation(line: 881, column: 7, scope: !18677)
!18677 = distinct !DILexicalBlock(scope: !18674, file: !9723, line: 881, column: 7)
!18678 = !DILocation(line: 881, column: 12, scope: !18677)
!18679 = !DILocation(line: 881, column: 7, scope: !18674)
!18680 = !DILocation(line: 882, column: 10, scope: !18677)
!18681 = !DILocation(line: 882, column: 4, scope: !18677)
!18682 = !DILocation(line: 883, column: 7, scope: !18683)
!18683 = distinct !DILexicalBlock(scope: !18674, file: !9723, line: 883, column: 7)
!18684 = !DILocation(line: 883, column: 12, scope: !18683)
!18685 = !DILocation(line: 883, column: 7, scope: !18674)
!18686 = !DILocation(line: 884, column: 10, scope: !18687)
!18687 = distinct !DILexicalBlock(scope: !18683, file: !9723, line: 883, column: 29)
!18688 = !DILocation(line: 885, column: 10, scope: !18687)
!18689 = !DILocation(line: 886, column: 3, scope: !18687)
!18690 = !DILocation(line: 887, column: 12, scope: !18674)
!18691 = !DILocation(line: 887, column: 17, scope: !18674)
!18692 = !DILocation(line: 887, column: 9, scope: !18674)
!18693 = !DILocation(line: 889, column: 9, scope: !18674)
!18694 = !DILocation(line: 897, column: 13, scope: !18695)
!18695 = distinct !DILexicalBlock(scope: !18674, file: !9723, line: 894, column: 7)
!18696 = !DILocation(line: 897, column: 18, scope: !18695)
!18697 = !DILocation(line: 897, column: 23, scope: !18695)
!18698 = !DILocation(line: 897, column: 30, scope: !18695)
!18699 = !DILocation(line: 897, column: 10, scope: !18695)
!18700 = !DILocation(line: 902, column: 7, scope: !18701)
!18701 = distinct !DILexicalBlock(scope: !18674, file: !9723, line: 902, column: 7)
!18702 = !DILocation(line: 902, column: 10, scope: !18701)
!18703 = !DILocation(line: 902, column: 13, scope: !18701)
!18704 = !DILocation(line: 902, column: 17, scope: !18701)
!18705 = !DILocation(line: 902, column: 36, scope: !18701)
!18706 = !DILocation(line: 902, column: 24, scope: !18701)
!18707 = !DILocation(line: 902, column: 43, scope: !18701)
!18708 = !DILocation(line: 902, column: 48, scope: !18701)
!18709 = !DILocation(line: 902, column: 21, scope: !18701)
!18710 = !DILocation(line: 902, column: 7, scope: !18674)
!18711 = !DILocation(line: 903, column: 13, scope: !18701)
!18712 = !DILocation(line: 903, column: 17, scope: !18701)
!18713 = !DILocation(line: 903, column: 22, scope: !18701)
!18714 = !DILocation(line: 903, column: 29, scope: !18701)
!18715 = !DILocation(line: 903, column: 10, scope: !18701)
!18716 = !DILocation(line: 903, column: 4, scope: !18701)
!18717 = !DILocation(line: 907, column: 3, scope: !18674)
!18718 = !DILocation(line: 910, column: 9, scope: !18674)
!18719 = !DILocation(line: 911, column: 7, scope: !18720)
!18720 = distinct !DILexicalBlock(scope: !18674, file: !9723, line: 911, column: 7)
!18721 = !DILocation(line: 911, column: 12, scope: !18720)
!18722 = !DILocation(line: 911, column: 7, scope: !18674)
!18723 = !DILocation(line: 912, column: 10, scope: !18724)
!18724 = distinct !DILexicalBlock(scope: !18720, file: !9723, line: 911, column: 29)
!18725 = !DILocation(line: 913, column: 10, scope: !18724)
!18726 = !DILocation(line: 914, column: 10, scope: !18724)
!18727 = !DILocation(line: 915, column: 10, scope: !18724)
!18728 = !DILocation(line: 916, column: 3, scope: !18724)
!18729 = !DILocation(line: 916, column: 14, scope: !18730)
!18730 = distinct !DILexicalBlock(scope: !18720, file: !9723, line: 916, column: 14)
!18731 = !DILocation(line: 916, column: 19, scope: !18730)
!18732 = !DILocation(line: 916, column: 14, scope: !18720)
!18733 = !DILocation(line: 917, column: 10, scope: !18734)
!18734 = distinct !DILexicalBlock(scope: !18730, file: !9723, line: 916, column: 33)
!18735 = !DILocation(line: 924, column: 13, scope: !18734)
!18736 = !DILocation(line: 924, column: 18, scope: !18734)
!18737 = !DILocation(line: 924, column: 10, scope: !18734)
!18738 = !DILocation(line: 925, column: 10, scope: !18734)
!18739 = !DILocation(line: 926, column: 3, scope: !18734)
!18740 = !DILocation(line: 927, column: 13, scope: !18741)
!18741 = distinct !DILexicalBlock(scope: !18730, file: !9723, line: 926, column: 10)
!18742 = !DILocation(line: 927, column: 18, scope: !18741)
!18743 = !DILocation(line: 927, column: 10, scope: !18741)
!18744 = !DILocation(line: 928, column: 13, scope: !18741)
!18745 = !DILocation(line: 928, column: 18, scope: !18741)
!18746 = !DILocation(line: 928, column: 10, scope: !18741)
!18747 = !DILocation(line: 930, column: 3, scope: !18674)
!18748 = !DILocation(line: 932, column: 3, scope: !18674)
!18749 = !DILabel(scope: !18674, name: "done", file: !9723, line: 934)
!18750 = !DILocation(line: 934, column: 1, scope: !18674)
!18751 = !DILocation(line: 935, column: 14, scope: !18674)
!18752 = !DILocation(line: 935, column: 20, scope: !18674)
!18753 = !DILocation(line: 935, column: 3, scope: !18674)
!18754 = !DILocation(line: 936, column: 3, scope: !18674)
!18755 = !DILocation(line: 942, column: 2, scope: !18404)
!18756 = !DILocation(line: 942, column: 6, scope: !18404)
!18757 = !DILocation(line: 942, column: 15, scope: !18404)
!18758 = !DILocation(line: 943, column: 7, scope: !18404)
!18759 = !DILocation(line: 943, column: 11, scope: !18404)
!18760 = !DILocation(line: 943, column: 5, scope: !18404)
!18761 = !DILocation(line: 944, column: 29, scope: !18404)
!18762 = !DILocation(line: 944, column: 35, scope: !18404)
!18763 = !DILocation(line: 944, column: 17, scope: !18404)
!18764 = !DILocation(line: 944, column: 2, scope: !18404)
!18765 = !DILocation(line: 944, column: 6, scope: !18404)
!18766 = !DILocation(line: 944, column: 15, scope: !18404)
!18767 = !DILocation(line: 945, column: 29, scope: !18404)
!18768 = !DILocation(line: 945, column: 35, scope: !18404)
!18769 = !DILocation(line: 945, column: 17, scope: !18404)
!18770 = !DILocation(line: 945, column: 2, scope: !18404)
!18771 = !DILocation(line: 945, column: 6, scope: !18404)
!18772 = !DILocation(line: 945, column: 15, scope: !18404)
!18773 = !DILocation(line: 946, column: 16, scope: !18404)
!18774 = !DILocation(line: 946, column: 15, scope: !18404)
!18775 = !DILocation(line: 946, column: 2, scope: !18404)
!18776 = !DILocation(line: 946, column: 6, scope: !18404)
!18777 = !DILocation(line: 946, column: 13, scope: !18404)
!18778 = !DILocation(line: 947, column: 2, scope: !18404)
!18779 = !DILocation(line: 948, column: 9, scope: !18404)
!18780 = !DILocation(line: 948, column: 2, scope: !18404)
!18781 = !DILocation(line: 949, column: 1, scope: !18404)
!18782 = distinct !DISubprogram(name: "list_splice_tail", scope: !9075, file: !9075, line: 464, type: !10276, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18783 = !DILocalVariable(name: "list", arg: 1, scope: !18782, file: !9075, line: 464, type: !365)
!18784 = !DILocation(line: 464, column: 55, scope: !18782)
!18785 = !DILocalVariable(name: "head", arg: 2, scope: !18782, file: !9075, line: 465, type: !365)
!18786 = !DILocation(line: 465, column: 23, scope: !18782)
!18787 = !DILocation(line: 467, column: 18, scope: !18788)
!18788 = distinct !DILexicalBlock(scope: !18782, file: !9075, line: 467, column: 6)
!18789 = !DILocation(line: 467, column: 7, scope: !18788)
!18790 = !DILocation(line: 467, column: 6, scope: !18782)
!18791 = !DILocation(line: 468, column: 17, scope: !18788)
!18792 = !DILocation(line: 468, column: 23, scope: !18788)
!18793 = !DILocation(line: 468, column: 29, scope: !18788)
!18794 = !DILocation(line: 468, column: 35, scope: !18788)
!18795 = !DILocation(line: 468, column: 3, scope: !18788)
!18796 = !DILocation(line: 469, column: 1, scope: !18782)
!18797 = distinct !DISubprogram(name: "usb_pipe_endpoint", scope: !172, file: !172, line: 1970, type: !18798, scopeLine: 1971, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18798 = !DISubroutineType(types: !18799)
!18799 = !{!5245, !5047, !7}
!18800 = !DILocalVariable(name: "dev", arg: 1, scope: !18797, file: !172, line: 1970, type: !5047)
!18801 = !DILocation(line: 1970, column: 38, scope: !18797)
!18802 = !DILocalVariable(name: "pipe", arg: 2, scope: !18797, file: !172, line: 1970, type: !7)
!18803 = !DILocation(line: 1970, column: 56, scope: !18797)
!18804 = !DILocalVariable(name: "eps", scope: !18797, file: !172, line: 1972, type: !5493)
!18805 = !DILocation(line: 1972, column: 29, scope: !18797)
!18806 = !DILocation(line: 1973, column: 8, scope: !18797)
!18807 = !DILocation(line: 1973, column: 27, scope: !18797)
!18808 = !DILocation(line: 1973, column: 32, scope: !18797)
!18809 = !DILocation(line: 1973, column: 40, scope: !18797)
!18810 = !DILocation(line: 1973, column: 45, scope: !18797)
!18811 = !DILocation(line: 1973, column: 6, scope: !18797)
!18812 = !DILocation(line: 1974, column: 9, scope: !18797)
!18813 = !DILocation(line: 1974, column: 13, scope: !18797)
!18814 = !DILocation(line: 1974, column: 2, scope: !18797)
!18815 = distinct !DISubprogram(name: "usb_endpoint_maxp_mult", scope: !34, file: !34, line: 659, type: !18251, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18816 = !DILocalVariable(name: "epd", arg: 1, scope: !18815, file: !34, line: 659, type: !18253)
!18817 = !DILocation(line: 659, column: 62, scope: !18815)
!18818 = !DILocalVariable(name: "maxp", scope: !18815, file: !34, line: 661, type: !401)
!18819 = !DILocation(line: 661, column: 6, scope: !18815)
!18820 = !DILocation(line: 661, column: 13, scope: !18815)
!18821 = !DILocation(line: 663, column: 9, scope: !18815)
!18822 = !DILocation(line: 663, column: 32, scope: !18815)
!18823 = !DILocation(line: 663, column: 2, scope: !18815)
!18824 = distinct !DISubprogram(name: "__ilog2_u32", scope: !12408, file: !12408, line: 22, type: !18825, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18825 = !DISubroutineType(types: !18826)
!18826 = !{!401, !303}
!18827 = !DILocalVariable(name: "x", arg: 1, scope: !18828, file: !7857, line: 324, type: !7)
!18828 = distinct !DISubprogram(name: "fls", scope: !7857, file: !7857, line: 324, type: !18829, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18829 = !DISubroutineType(types: !18830)
!18830 = !{!401, !7}
!18831 = !DILocation(line: 324, column: 45, scope: !18828, inlinedAt: !18832)
!18832 = distinct !DILocation(line: 24, column: 9, scope: !18824)
!18833 = !DILocalVariable(name: "r", scope: !18828, file: !7857, line: 326, type: !401)
!18834 = !DILocation(line: 326, column: 6, scope: !18828, inlinedAt: !18832)
!18835 = !DILocalVariable(name: "n", arg: 1, scope: !18824, file: !12408, line: 22, type: !303)
!18836 = !DILocation(line: 22, column: 21, scope: !18824)
!18837 = !DILocation(line: 24, column: 13, scope: !18824)
!18838 = !DILocation(line: 340, column: 14, scope: !18828, inlinedAt: !18832)
!18839 = !DILocation(line: 338, column: 2, scope: !18828, inlinedAt: !18832)
!18840 = !{i32 334312}
!18841 = !DILocation(line: 351, column: 9, scope: !18828, inlinedAt: !18832)
!18842 = !DILocation(line: 351, column: 11, scope: !18828, inlinedAt: !18832)
!18843 = !DILocation(line: 24, column: 16, scope: !18824)
!18844 = !DILocation(line: 24, column: 2, scope: !18824)
!18845 = distinct !DISubprogram(name: "__rounddown_pow_of_two", scope: !12408, file: !12408, line: 65, type: !18846, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18846 = !DISubroutineType(types: !18847)
!18847 = !{!465, !465}
!18848 = !DILocalVariable(name: "n", arg: 1, scope: !18845, file: !12408, line: 65, type: !465)
!18849 = !DILocation(line: 65, column: 52, scope: !18845)
!18850 = !DILocation(line: 67, column: 26, scope: !18845)
!18851 = !DILocation(line: 67, column: 17, scope: !18845)
!18852 = !DILocation(line: 67, column: 29, scope: !18845)
!18853 = !DILocation(line: 67, column: 13, scope: !18845)
!18854 = !DILocation(line: 67, column: 2, scope: !18845)
!18855 = distinct !DISubprogram(name: "fls_long", scope: !18856, file: !18856, line: 182, type: !18857, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18856 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!18857 = !DISubroutineType(types: !18858)
!18858 = !{!7, !465}
!18859 = !DILocation(line: 366, column: 40, scope: !12370, inlinedAt: !18860)
!18860 = distinct !DILocation(line: 186, column: 9, scope: !18855)
!18861 = !DILocation(line: 368, column: 6, scope: !12370, inlinedAt: !18860)
!18862 = !DILocalVariable(name: "l", arg: 1, scope: !18855, file: !18856, line: 182, type: !465)
!18863 = !DILocation(line: 182, column: 47, scope: !18855)
!18864 = !DILocation(line: 186, column: 15, scope: !18855)
!18865 = !DILocation(line: 374, column: 2, scope: !12370, inlinedAt: !18860)
!18866 = !DILocation(line: 376, column: 14, scope: !12370, inlinedAt: !18860)
!18867 = !DILocation(line: 377, column: 9, scope: !12370, inlinedAt: !18860)
!18868 = !DILocation(line: 377, column: 16, scope: !12370, inlinedAt: !18860)
!18869 = !DILocation(line: 186, column: 2, scope: !18855)
!18870 = distinct !DISubprogram(name: "iso_stream_find", scope: !6239, file: !6239, line: 1119, type: !18871, scopeLine: 1120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18871 = !DISubroutineType(types: !18872)
!18872 = !{!5922, !5814, !5343}
!18873 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !18874)
!18874 = distinct !DILocation(line: 1150, column: 2, scope: !18870)
!18875 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !18874)
!18876 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !18877)
!18877 = distinct !DILocation(line: 1132, column: 2, scope: !18878)
!18878 = distinct !DILexicalBlock(scope: !18879, file: !6239, line: 1132, column: 2)
!18879 = distinct !DILexicalBlock(scope: !18880, file: !6239, line: 1132, column: 2)
!18880 = distinct !DILexicalBlock(scope: !18881, file: !6239, line: 1132, column: 2)
!18881 = distinct !DILexicalBlock(scope: !18882, file: !6239, line: 1132, column: 2)
!18882 = distinct !DILexicalBlock(scope: !18870, file: !6239, line: 1132, column: 2)
!18883 = !DILocalVariable(name: "ehci", arg: 1, scope: !18870, file: !6239, line: 1119, type: !5814)
!18884 = !DILocation(line: 1119, column: 34, scope: !18870)
!18885 = !DILocalVariable(name: "urb", arg: 2, scope: !18870, file: !6239, line: 1119, type: !5343)
!18886 = !DILocation(line: 1119, column: 52, scope: !18870)
!18887 = !DILocalVariable(name: "epnum", scope: !18870, file: !6239, line: 1121, type: !7)
!18888 = !DILocation(line: 1121, column: 12, scope: !18870)
!18889 = !DILocalVariable(name: "stream", scope: !18870, file: !6239, line: 1122, type: !5922)
!18890 = !DILocation(line: 1122, column: 26, scope: !18870)
!18891 = !DILocalVariable(name: "ep", scope: !18870, file: !6239, line: 1123, type: !5245)
!18892 = !DILocation(line: 1123, column: 28, scope: !18870)
!18893 = !DILocalVariable(name: "flags", scope: !18870, file: !6239, line: 1124, type: !465)
!18894 = !DILocation(line: 1124, column: 17, scope: !18870)
!18895 = !DILocation(line: 1126, column: 10, scope: !18870)
!18896 = !DILocation(line: 1126, column: 8, scope: !18870)
!18897 = !DILocation(line: 1127, column: 6, scope: !18898)
!18898 = distinct !DILexicalBlock(scope: !18870, file: !6239, line: 1127, column: 6)
!18899 = !DILocation(line: 1127, column: 6, scope: !18870)
!18900 = !DILocation(line: 1128, column: 8, scope: !18898)
!18901 = !DILocation(line: 1128, column: 13, scope: !18898)
!18902 = !DILocation(line: 1128, column: 18, scope: !18898)
!18903 = !DILocation(line: 1128, column: 24, scope: !18898)
!18904 = !DILocation(line: 1128, column: 6, scope: !18898)
!18905 = !DILocation(line: 1128, column: 3, scope: !18898)
!18906 = !DILocation(line: 1130, column: 8, scope: !18898)
!18907 = !DILocation(line: 1130, column: 13, scope: !18898)
!18908 = !DILocation(line: 1130, column: 18, scope: !18898)
!18909 = !DILocation(line: 1130, column: 25, scope: !18898)
!18910 = !DILocation(line: 1130, column: 6, scope: !18898)
!18911 = !DILocation(line: 1132, column: 2, scope: !18870)
!18912 = !DILocation(line: 1132, column: 2, scope: !18882)
!18913 = !DILocalVariable(name: "__dummy", scope: !18914, file: !6239, line: 1132, type: !465)
!18914 = distinct !DILexicalBlock(scope: !18881, file: !6239, line: 1132, column: 2)
!18915 = !DILocation(line: 1132, column: 2, scope: !18914)
!18916 = !DILocalVariable(name: "__dummy2", scope: !18914, file: !6239, line: 1132, type: !465)
!18917 = !DILocation(line: 1132, column: 2, scope: !18881)
!18918 = !DILocation(line: 1132, column: 2, scope: !18880)
!18919 = !DILocation(line: 1132, column: 2, scope: !18920)
!18920 = distinct !DILexicalBlock(scope: !18880, file: !6239, line: 1132, column: 2)
!18921 = !DILocalVariable(name: "__dummy", scope: !18922, file: !6239, line: 1132, type: !465)
!18922 = distinct !DILexicalBlock(scope: !18923, file: !6239, line: 1132, column: 2)
!18923 = distinct !DILexicalBlock(scope: !18920, file: !6239, line: 1132, column: 2)
!18924 = !DILocation(line: 1132, column: 2, scope: !18922)
!18925 = !DILocalVariable(name: "__dummy2", scope: !18922, file: !6239, line: 1132, type: !465)
!18926 = !DILocation(line: 1132, column: 2, scope: !18923)
!18927 = !DILocation(line: 1132, column: 2, scope: !18879)
!18928 = !{i32 -2139814555}
!18929 = !DILocation(line: 1132, column: 2, scope: !18878)
!18930 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !18877)
!18931 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !18877)
!18932 = !DILocation(line: 1133, column: 11, scope: !18870)
!18933 = !DILocation(line: 1133, column: 15, scope: !18870)
!18934 = !DILocation(line: 1133, column: 9, scope: !18870)
!18935 = !DILocation(line: 1135, column: 6, scope: !18936)
!18936 = distinct !DILexicalBlock(scope: !18870, file: !6239, line: 1135, column: 6)
!18937 = !DILocation(line: 1135, column: 6, scope: !18870)
!18938 = !DILocation(line: 1136, column: 12, scope: !18939)
!18939 = distinct !DILexicalBlock(scope: !18936, file: !6239, line: 1135, column: 32)
!18940 = !DILocation(line: 1136, column: 10, scope: !18939)
!18941 = !DILocation(line: 1137, column: 7, scope: !18942)
!18942 = distinct !DILexicalBlock(scope: !18939, file: !6239, line: 1137, column: 7)
!18943 = !DILocation(line: 1137, column: 7, scope: !18939)
!18944 = !DILocation(line: 1138, column: 17, scope: !18945)
!18945 = distinct !DILexicalBlock(scope: !18942, file: !6239, line: 1137, column: 31)
!18946 = !DILocation(line: 1138, column: 4, scope: !18945)
!18947 = !DILocation(line: 1138, column: 8, scope: !18945)
!18948 = !DILocation(line: 1138, column: 15, scope: !18945)
!18949 = !DILocation(line: 1139, column: 20, scope: !18945)
!18950 = !DILocation(line: 1139, column: 26, scope: !18945)
!18951 = !DILocation(line: 1139, column: 34, scope: !18945)
!18952 = !DILocation(line: 1139, column: 4, scope: !18945)
!18953 = !DILocation(line: 1140, column: 3, scope: !18945)
!18954 = !DILocation(line: 1143, column: 2, scope: !18939)
!18955 = !DILocation(line: 1143, column: 13, scope: !18956)
!18956 = distinct !DILexicalBlock(scope: !18936, file: !6239, line: 1143, column: 13)
!18957 = !DILocation(line: 1143, column: 13, scope: !18936)
!18958 = !DILocation(line: 1147, column: 10, scope: !18959)
!18959 = distinct !DILexicalBlock(scope: !18956, file: !6239, line: 1143, column: 43)
!18960 = !DILocation(line: 1148, column: 2, scope: !18959)
!18961 = !DILocation(line: 1150, column: 26, scope: !18870)
!18962 = !DILocation(line: 1150, column: 32, scope: !18870)
!18963 = !DILocation(line: 1150, column: 38, scope: !18870)
!18964 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !18874)
!18965 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !18874)
!18966 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !18874)
!18967 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !18874)
!18968 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !18874)
!18969 = !DILocation(line: 1151, column: 9, scope: !18870)
!18970 = !DILocation(line: 1151, column: 2, scope: !18870)
!18971 = distinct !DISubprogram(name: "itd_urb_transaction", scope: !6239, file: !6239, line: 1228, type: !18972, scopeLine: 1234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!18972 = !DISubroutineType(types: !18973)
!18973 = !{!401, !5922, !5814, !5343, !946}
!18974 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !18975)
!18975 = distinct !DILocation(line: 1276, column: 5, scope: !18976)
!18976 = distinct !DILexicalBlock(scope: !18977, file: !6239, line: 1274, column: 14)
!18977 = distinct !DILexicalBlock(scope: !18978, file: !6239, line: 1274, column: 8)
!18978 = distinct !DILexicalBlock(scope: !18979, file: !6239, line: 1268, column: 10)
!18979 = distinct !DILexicalBlock(scope: !18980, file: !6239, line: 1261, column: 7)
!18980 = distinct !DILexicalBlock(scope: !18981, file: !6239, line: 1255, column: 33)
!18981 = distinct !DILexicalBlock(scope: !18982, file: !6239, line: 1255, column: 2)
!18982 = distinct !DILexicalBlock(scope: !18971, file: !6239, line: 1255, column: 2)
!18983 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !18975)
!18984 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !18985)
!18985 = distinct !DILocation(line: 1273, column: 4, scope: !18986)
!18986 = distinct !DILexicalBlock(scope: !18987, file: !6239, line: 1273, column: 4)
!18987 = distinct !DILexicalBlock(scope: !18988, file: !6239, line: 1273, column: 4)
!18988 = distinct !DILexicalBlock(scope: !18989, file: !6239, line: 1273, column: 4)
!18989 = distinct !DILexicalBlock(scope: !18990, file: !6239, line: 1273, column: 4)
!18990 = distinct !DILexicalBlock(scope: !18978, file: !6239, line: 1273, column: 4)
!18991 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !18992)
!18992 = distinct !DILocation(line: 1270, column: 4, scope: !18978)
!18993 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !18992)
!18994 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !18995)
!18995 = distinct !DILocation(line: 1286, column: 2, scope: !18971)
!18996 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !18995)
!18997 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !18998)
!18998 = distinct !DILocation(line: 1254, column: 2, scope: !18999)
!18999 = distinct !DILexicalBlock(scope: !19000, file: !6239, line: 1254, column: 2)
!19000 = distinct !DILexicalBlock(scope: !19001, file: !6239, line: 1254, column: 2)
!19001 = distinct !DILexicalBlock(scope: !19002, file: !6239, line: 1254, column: 2)
!19002 = distinct !DILexicalBlock(scope: !19003, file: !6239, line: 1254, column: 2)
!19003 = distinct !DILexicalBlock(scope: !18971, file: !6239, line: 1254, column: 2)
!19004 = !DILocalVariable(name: "stream", arg: 1, scope: !18971, file: !6239, line: 1229, type: !5922)
!19005 = !DILocation(line: 1229, column: 26, scope: !18971)
!19006 = !DILocalVariable(name: "ehci", arg: 2, scope: !18971, file: !6239, line: 1230, type: !5814)
!19007 = !DILocation(line: 1230, column: 20, scope: !18971)
!19008 = !DILocalVariable(name: "urb", arg: 3, scope: !18971, file: !6239, line: 1231, type: !5343)
!19009 = !DILocation(line: 1231, column: 15, scope: !18971)
!19010 = !DILocalVariable(name: "mem_flags", arg: 4, scope: !18971, file: !6239, line: 1232, type: !946)
!19011 = !DILocation(line: 1232, column: 10, scope: !18971)
!19012 = !DILocalVariable(name: "itd", scope: !18971, file: !6239, line: 1235, type: !5907)
!19013 = !DILocation(line: 1235, column: 20, scope: !18971)
!19014 = !DILocalVariable(name: "itd_dma", scope: !18971, file: !6239, line: 1236, type: !2064)
!19015 = !DILocation(line: 1236, column: 14, scope: !18971)
!19016 = !DILocalVariable(name: "i", scope: !18971, file: !6239, line: 1237, type: !401)
!19017 = !DILocation(line: 1237, column: 8, scope: !18971)
!19018 = !DILocalVariable(name: "num_itds", scope: !18971, file: !6239, line: 1238, type: !7)
!19019 = !DILocation(line: 1238, column: 12, scope: !18971)
!19020 = !DILocalVariable(name: "sched", scope: !18971, file: !6239, line: 1239, type: !19021)
!19021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19022, size: 64)
!19022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_iso_sched", file: !6, line: 459, size: 192, elements: !19023)
!19023 = !{!19024, !19025, !19026, !19027}
!19024 = !DIDerivedType(tag: DW_TAG_member, name: "td_list", scope: !19022, file: !6, line: 460, baseType: !361, size: 128)
!19025 = !DIDerivedType(tag: DW_TAG_member, name: "span", scope: !19022, file: !6, line: 461, baseType: !7, size: 32, offset: 128)
!19026 = !DIDerivedType(tag: DW_TAG_member, name: "first_packet", scope: !19022, file: !6, line: 462, baseType: !7, size: 32, offset: 160)
!19027 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !19022, file: !6, line: 463, baseType: !19028, offset: 192)
!19028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !19029, elements: !1272)
!19029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ehci_iso_packet", file: !6, line: 446, size: 192, elements: !19030)
!19030 = !{!19031, !19032, !19033, !19034}
!19031 = !DIDerivedType(tag: DW_TAG_member, name: "bufp", scope: !19029, file: !6, line: 448, baseType: !558, size: 64)
!19032 = !DIDerivedType(tag: DW_TAG_member, name: "transaction", scope: !19029, file: !6, line: 449, baseType: !5103, size: 32, offset: 64)
!19033 = !DIDerivedType(tag: DW_TAG_member, name: "cross", scope: !19029, file: !6, line: 450, baseType: !1182, size: 8, offset: 96)
!19034 = !DIDerivedType(tag: DW_TAG_member, name: "buf1", scope: !19029, file: !6, line: 452, baseType: !303, size: 32, offset: 128)
!19035 = !DILocation(line: 1239, column: 25, scope: !18971)
!19036 = !DILocalVariable(name: "flags", scope: !18971, file: !6239, line: 1240, type: !465)
!19037 = !DILocation(line: 1240, column: 17, scope: !18971)
!19038 = !DILocation(line: 1242, column: 26, scope: !18971)
!19039 = !DILocation(line: 1242, column: 31, scope: !18971)
!19040 = !DILocation(line: 1242, column: 50, scope: !18971)
!19041 = !DILocation(line: 1242, column: 10, scope: !18971)
!19042 = !DILocation(line: 1242, column: 8, scope: !18971)
!19043 = !DILocation(line: 1243, column: 6, scope: !19044)
!19044 = distinct !DILexicalBlock(scope: !18971, file: !6239, line: 1243, column: 6)
!19045 = !DILocation(line: 1243, column: 6, scope: !18971)
!19046 = !DILocation(line: 1244, column: 3, scope: !19044)
!19047 = !DILocation(line: 1246, column: 17, scope: !18971)
!19048 = !DILocation(line: 1246, column: 23, scope: !18971)
!19049 = !DILocation(line: 1246, column: 30, scope: !18971)
!19050 = !DILocation(line: 1246, column: 38, scope: !18971)
!19051 = !DILocation(line: 1246, column: 2, scope: !18971)
!19052 = !DILocation(line: 1248, column: 6, scope: !19053)
!19053 = distinct !DILexicalBlock(scope: !18971, file: !6239, line: 1248, column: 6)
!19054 = !DILocation(line: 1248, column: 11, scope: !19053)
!19055 = !DILocation(line: 1248, column: 20, scope: !19053)
!19056 = !DILocation(line: 1248, column: 6, scope: !18971)
!19057 = !DILocation(line: 1249, column: 19, scope: !19053)
!19058 = !DILocation(line: 1249, column: 26, scope: !19053)
!19059 = !DILocation(line: 1249, column: 31, scope: !19053)
!19060 = !DILocation(line: 1249, column: 36, scope: !19053)
!19061 = !DILocation(line: 1249, column: 16, scope: !19053)
!19062 = !DILocation(line: 1249, column: 12, scope: !19053)
!19063 = !DILocation(line: 1249, column: 3, scope: !19053)
!19064 = !DILocation(line: 1251, column: 14, scope: !19053)
!19065 = !DILocation(line: 1251, column: 19, scope: !19053)
!19066 = !DILocation(line: 1251, column: 12, scope: !19053)
!19067 = !DILocation(line: 1254, column: 2, scope: !18971)
!19068 = !DILocation(line: 1254, column: 2, scope: !19003)
!19069 = !DILocalVariable(name: "__dummy", scope: !19070, file: !6239, line: 1254, type: !465)
!19070 = distinct !DILexicalBlock(scope: !19002, file: !6239, line: 1254, column: 2)
!19071 = !DILocation(line: 1254, column: 2, scope: !19070)
!19072 = !DILocalVariable(name: "__dummy2", scope: !19070, file: !6239, line: 1254, type: !465)
!19073 = !DILocation(line: 1254, column: 2, scope: !19002)
!19074 = !DILocation(line: 1254, column: 2, scope: !19001)
!19075 = !DILocation(line: 1254, column: 2, scope: !19076)
!19076 = distinct !DILexicalBlock(scope: !19001, file: !6239, line: 1254, column: 2)
!19077 = !DILocalVariable(name: "__dummy", scope: !19078, file: !6239, line: 1254, type: !465)
!19078 = distinct !DILexicalBlock(scope: !19079, file: !6239, line: 1254, column: 2)
!19079 = distinct !DILexicalBlock(scope: !19076, file: !6239, line: 1254, column: 2)
!19080 = !DILocation(line: 1254, column: 2, scope: !19078)
!19081 = !DILocalVariable(name: "__dummy2", scope: !19078, file: !6239, line: 1254, type: !465)
!19082 = !DILocation(line: 1254, column: 2, scope: !19079)
!19083 = !DILocation(line: 1254, column: 2, scope: !19000)
!19084 = !{i32 -2139812248}
!19085 = !DILocation(line: 1254, column: 2, scope: !18999)
!19086 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !18998)
!19087 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !18998)
!19088 = !DILocation(line: 1255, column: 9, scope: !18982)
!19089 = !DILocation(line: 1255, column: 7, scope: !18982)
!19090 = !DILocation(line: 1255, column: 14, scope: !18981)
!19091 = !DILocation(line: 1255, column: 18, scope: !18981)
!19092 = !DILocation(line: 1255, column: 16, scope: !18981)
!19093 = !DILocation(line: 1255, column: 2, scope: !18982)
!19094 = !DILocation(line: 1261, column: 7, scope: !18979)
!19095 = !DILocation(line: 1261, column: 7, scope: !18980)
!19096 = !DILocalVariable(name: "__mptr", scope: !19097, file: !6239, line: 1262, type: !341)
!19097 = distinct !DILexicalBlock(scope: !19098, file: !6239, line: 1262, column: 10)
!19098 = distinct !DILexicalBlock(scope: !18979, file: !6239, line: 1261, column: 48)
!19099 = !DILocation(line: 1262, column: 10, scope: !19097)
!19100 = !DILocation(line: 1262, column: 10, scope: !19101)
!19101 = distinct !DILexicalBlock(scope: !19097, file: !6239, line: 1262, column: 10)
!19102 = !DILocation(line: 1262, column: 8, scope: !19098)
!19103 = !DILocation(line: 1264, column: 8, scope: !19104)
!19104 = distinct !DILexicalBlock(scope: !19098, file: !6239, line: 1264, column: 8)
!19105 = !DILocation(line: 1264, column: 13, scope: !19104)
!19106 = !DILocation(line: 1264, column: 22, scope: !19104)
!19107 = !DILocation(line: 1264, column: 28, scope: !19104)
!19108 = !DILocation(line: 1264, column: 19, scope: !19104)
!19109 = !DILocation(line: 1264, column: 8, scope: !19098)
!19110 = !DILocation(line: 1265, column: 5, scope: !19104)
!19111 = !DILocation(line: 1266, column: 14, scope: !19098)
!19112 = !DILocation(line: 1266, column: 19, scope: !19098)
!19113 = !DILocation(line: 1266, column: 4, scope: !19098)
!19114 = !DILocation(line: 1267, column: 14, scope: !19098)
!19115 = !DILocation(line: 1267, column: 19, scope: !19098)
!19116 = !DILocation(line: 1267, column: 12, scope: !19098)
!19117 = !DILocation(line: 1268, column: 3, scope: !19098)
!19118 = !DILocation(line: 1268, column: 10, scope: !18979)
!19119 = !DILabel(scope: !18978, name: "alloc_itd", file: !6239, line: 1269)
!19120 = !DILocation(line: 1269, column: 2, scope: !18978)
!19121 = !DILocation(line: 1270, column: 28, scope: !18978)
!19122 = !DILocation(line: 1270, column: 34, scope: !18978)
!19123 = !DILocation(line: 1270, column: 40, scope: !18978)
!19124 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !18992)
!19125 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !18992)
!19126 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !18992)
!19127 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !18992)
!19128 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !18992)
!19129 = !DILocation(line: 1271, column: 25, scope: !18978)
!19130 = !DILocation(line: 1271, column: 31, scope: !18978)
!19131 = !DILocation(line: 1271, column: 41, scope: !18978)
!19132 = !DILocation(line: 1271, column: 10, scope: !18978)
!19133 = !DILocation(line: 1271, column: 8, scope: !18978)
!19134 = !DILocation(line: 1273, column: 4, scope: !18978)
!19135 = !DILocation(line: 1273, column: 4, scope: !18990)
!19136 = !DILocalVariable(name: "__dummy", scope: !19137, file: !6239, line: 1273, type: !465)
!19137 = distinct !DILexicalBlock(scope: !18989, file: !6239, line: 1273, column: 4)
!19138 = !DILocation(line: 1273, column: 4, scope: !19137)
!19139 = !DILocalVariable(name: "__dummy2", scope: !19137, file: !6239, line: 1273, type: !465)
!19140 = !DILocation(line: 1273, column: 4, scope: !18989)
!19141 = !DILocation(line: 1273, column: 4, scope: !18988)
!19142 = !DILocation(line: 1273, column: 4, scope: !19143)
!19143 = distinct !DILexicalBlock(scope: !18988, file: !6239, line: 1273, column: 4)
!19144 = !DILocalVariable(name: "__dummy", scope: !19145, file: !6239, line: 1273, type: !465)
!19145 = distinct !DILexicalBlock(scope: !19146, file: !6239, line: 1273, column: 4)
!19146 = distinct !DILexicalBlock(scope: !19143, file: !6239, line: 1273, column: 4)
!19147 = !DILocation(line: 1273, column: 4, scope: !19145)
!19148 = !DILocalVariable(name: "__dummy2", scope: !19145, file: !6239, line: 1273, type: !465)
!19149 = !DILocation(line: 1273, column: 4, scope: !19146)
!19150 = !DILocation(line: 1273, column: 4, scope: !18987)
!19151 = !{i32 -2139809275}
!19152 = !DILocation(line: 1273, column: 4, scope: !18986)
!19153 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !18985)
!19154 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !18985)
!19155 = !DILocation(line: 1274, column: 9, scope: !18977)
!19156 = !DILocation(line: 1274, column: 8, scope: !18978)
!19157 = !DILocation(line: 1275, column: 20, scope: !18976)
!19158 = !DILocation(line: 1275, column: 28, scope: !18976)
!19159 = !DILocation(line: 1275, column: 5, scope: !18976)
!19160 = !DILocation(line: 1276, column: 29, scope: !18976)
!19161 = !DILocation(line: 1276, column: 35, scope: !18976)
!19162 = !DILocation(line: 1276, column: 41, scope: !18976)
!19163 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !18975)
!19164 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !18975)
!19165 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !18975)
!19166 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !18975)
!19167 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !18975)
!19168 = !DILocation(line: 1277, column: 5, scope: !18976)
!19169 = !DILocation(line: 1281, column: 10, scope: !18980)
!19170 = !DILocation(line: 1281, column: 3, scope: !18980)
!19171 = !DILocation(line: 1282, column: 18, scope: !18980)
!19172 = !DILocation(line: 1282, column: 3, scope: !18980)
!19173 = !DILocation(line: 1282, column: 8, scope: !18980)
!19174 = !DILocation(line: 1282, column: 16, scope: !18980)
!19175 = !DILocation(line: 1283, column: 3, scope: !18980)
!19176 = !DILocation(line: 1283, column: 8, scope: !18980)
!19177 = !DILocation(line: 1283, column: 14, scope: !18980)
!19178 = !DILocation(line: 1284, column: 13, scope: !18980)
!19179 = !DILocation(line: 1284, column: 18, scope: !18980)
!19180 = !DILocation(line: 1284, column: 29, scope: !18980)
!19181 = !DILocation(line: 1284, column: 36, scope: !18980)
!19182 = !DILocation(line: 1284, column: 3, scope: !18980)
!19183 = !DILocation(line: 1285, column: 2, scope: !18980)
!19184 = !DILocation(line: 1255, column: 29, scope: !18981)
!19185 = !DILocation(line: 1255, column: 2, scope: !18981)
!19186 = distinct !{!19186, !19093, !19187}
!19187 = !DILocation(line: 1285, column: 2, scope: !18982)
!19188 = !DILocation(line: 1286, column: 26, scope: !18971)
!19189 = !DILocation(line: 1286, column: 32, scope: !18971)
!19190 = !DILocation(line: 1286, column: 38, scope: !18971)
!19191 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !18995)
!19192 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !18995)
!19193 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !18995)
!19194 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !18995)
!19195 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !18995)
!19196 = !DILocation(line: 1289, column: 16, scope: !18971)
!19197 = !DILocation(line: 1289, column: 2, scope: !18971)
!19198 = !DILocation(line: 1289, column: 7, scope: !18971)
!19199 = !DILocation(line: 1289, column: 14, scope: !18971)
!19200 = !DILocation(line: 1290, column: 2, scope: !18971)
!19201 = !DILocation(line: 1290, column: 7, scope: !18971)
!19202 = !DILocation(line: 1290, column: 19, scope: !18971)
!19203 = !DILocation(line: 1291, column: 2, scope: !18971)
!19204 = !DILocation(line: 1292, column: 1, scope: !18971)
!19205 = distinct !DISubprogram(name: "iso_stream_schedule", scope: !6239, file: !6239, line: 1460, type: !19206, scopeLine: 1465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!19206 = !DISubroutineType(types: !19207)
!19207 = !{!401, !5814, !5343, !5922}
!19208 = !DILocalVariable(name: "ehci", arg: 1, scope: !19205, file: !6239, line: 1461, type: !5814)
!19209 = !DILocation(line: 1461, column: 20, scope: !19205)
!19210 = !DILocalVariable(name: "urb", arg: 2, scope: !19205, file: !6239, line: 1462, type: !5343)
!19211 = !DILocation(line: 1462, column: 15, scope: !19205)
!19212 = !DILocalVariable(name: "stream", arg: 3, scope: !19205, file: !6239, line: 1463, type: !5922)
!19213 = !DILocation(line: 1463, column: 26, scope: !19205)
!19214 = !DILocalVariable(name: "now", scope: !19205, file: !6239, line: 1466, type: !303)
!19215 = !DILocation(line: 1466, column: 8, scope: !19205)
!19216 = !DILocalVariable(name: "base", scope: !19205, file: !6239, line: 1466, type: !303)
!19217 = !DILocation(line: 1466, column: 13, scope: !19205)
!19218 = !DILocalVariable(name: "next", scope: !19205, file: !6239, line: 1466, type: !303)
!19219 = !DILocation(line: 1466, column: 19, scope: !19205)
!19220 = !DILocalVariable(name: "start", scope: !19205, file: !6239, line: 1466, type: !303)
!19221 = !DILocation(line: 1466, column: 25, scope: !19205)
!19222 = !DILocalVariable(name: "period", scope: !19205, file: !6239, line: 1466, type: !303)
!19223 = !DILocation(line: 1466, column: 32, scope: !19205)
!19224 = !DILocalVariable(name: "span", scope: !19205, file: !6239, line: 1466, type: !303)
!19225 = !DILocation(line: 1466, column: 40, scope: !19205)
!19226 = !DILocalVariable(name: "now2", scope: !19205, file: !6239, line: 1466, type: !303)
!19227 = !DILocation(line: 1466, column: 46, scope: !19205)
!19228 = !DILocalVariable(name: "wrap", scope: !19205, file: !6239, line: 1467, type: !303)
!19229 = !DILocation(line: 1467, column: 8, scope: !19205)
!19230 = !DILocalVariable(name: "skip", scope: !19205, file: !6239, line: 1467, type: !303)
!19231 = !DILocation(line: 1467, column: 18, scope: !19205)
!19232 = !DILocalVariable(name: "status", scope: !19205, file: !6239, line: 1468, type: !401)
!19233 = !DILocation(line: 1468, column: 8, scope: !19205)
!19234 = !DILocalVariable(name: "mod", scope: !19205, file: !6239, line: 1469, type: !7)
!19235 = !DILocation(line: 1469, column: 12, scope: !19205)
!19236 = !DILocation(line: 1469, column: 18, scope: !19205)
!19237 = !DILocation(line: 1469, column: 24, scope: !19205)
!19238 = !DILocation(line: 1469, column: 38, scope: !19205)
!19239 = !DILocalVariable(name: "sched", scope: !19205, file: !6239, line: 1470, type: !19021)
!19240 = !DILocation(line: 1470, column: 25, scope: !19205)
!19241 = !DILocation(line: 1470, column: 33, scope: !19205)
!19242 = !DILocation(line: 1470, column: 38, scope: !19205)
!19243 = !DILocalVariable(name: "empty", scope: !19205, file: !6239, line: 1471, type: !626)
!19244 = !DILocation(line: 1471, column: 9, scope: !19205)
!19245 = !DILocation(line: 1471, column: 29, scope: !19205)
!19246 = !DILocation(line: 1471, column: 37, scope: !19205)
!19247 = !DILocation(line: 1471, column: 17, scope: !19205)
!19248 = !DILocalVariable(name: "new_stream", scope: !19205, file: !6239, line: 1472, type: !626)
!19249 = !DILocation(line: 1472, column: 9, scope: !19205)
!19250 = !DILocation(line: 1474, column: 11, scope: !19205)
!19251 = !DILocation(line: 1474, column: 19, scope: !19205)
!19252 = !DILocation(line: 1474, column: 9, scope: !19205)
!19253 = !DILocation(line: 1475, column: 9, scope: !19205)
!19254 = !DILocation(line: 1475, column: 16, scope: !19205)
!19255 = !DILocation(line: 1475, column: 7, scope: !19205)
!19256 = !DILocation(line: 1476, column: 7, scope: !19257)
!19257 = distinct !DILexicalBlock(scope: !19205, file: !6239, line: 1476, column: 6)
!19258 = !DILocation(line: 1476, column: 15, scope: !19257)
!19259 = !DILocation(line: 1476, column: 6, scope: !19205)
!19260 = !DILocation(line: 1477, column: 8, scope: !19257)
!19261 = !DILocation(line: 1477, column: 3, scope: !19257)
!19262 = !DILocation(line: 1480, column: 6, scope: !19263)
!19263 = distinct !DILexicalBlock(scope: !19205, file: !6239, line: 1480, column: 6)
!19264 = !DILocation(line: 0, scope: !19263)
!19265 = !DILocation(line: 1480, column: 6, scope: !19205)
!19266 = !DILocation(line: 1484, column: 7, scope: !19267)
!19267 = distinct !DILexicalBlock(scope: !19268, file: !6239, line: 1484, column: 7)
!19268 = distinct !DILexicalBlock(scope: !19263, file: !6239, line: 1481, column: 34)
!19269 = !DILocation(line: 1484, column: 15, scope: !19267)
!19270 = !DILocation(line: 1484, column: 18, scope: !19267)
!19271 = !DILocation(line: 1484, column: 24, scope: !19267)
!19272 = !DILocation(line: 1484, column: 7, scope: !19268)
!19273 = !DILocalVariable(name: "done", scope: !19274, file: !6239, line: 1485, type: !401)
!19274 = distinct !DILexicalBlock(scope: !19267, file: !6239, line: 1484, column: 37)
!19275 = !DILocation(line: 1485, column: 9, scope: !19274)
!19276 = !DILocalVariable(name: "tt", scope: !19274, file: !6239, line: 1486, type: !6096)
!19277 = !DILocation(line: 1486, column: 20, scope: !19274)
!19278 = !DILocation(line: 1486, column: 33, scope: !19274)
!19279 = !DILocation(line: 1486, column: 41, scope: !19274)
!19280 = !DILocation(line: 1486, column: 44, scope: !19274)
!19281 = !DILocation(line: 1486, column: 25, scope: !19274)
!19282 = !DILocation(line: 1488, column: 15, scope: !19283)
!19283 = distinct !DILexicalBlock(scope: !19274, file: !6239, line: 1488, column: 8)
!19284 = !DILocation(line: 1488, column: 8, scope: !19283)
!19285 = !DILocation(line: 1488, column: 8, scope: !19274)
!19286 = !DILocation(line: 1489, column: 22, scope: !19287)
!19287 = distinct !DILexicalBlock(scope: !19283, file: !6239, line: 1488, column: 20)
!19288 = !DILocation(line: 1489, column: 14, scope: !19287)
!19289 = !DILocation(line: 1489, column: 12, scope: !19287)
!19290 = !DILocation(line: 1490, column: 5, scope: !19287)
!19291 = !DILocation(line: 1492, column: 22, scope: !19274)
!19292 = !DILocation(line: 1492, column: 28, scope: !19274)
!19293 = !DILocation(line: 1492, column: 39, scope: !19274)
!19294 = !DILocation(line: 1492, column: 4, scope: !19274)
!19295 = !DILocation(line: 1494, column: 18, scope: !19274)
!19296 = !DILocation(line: 1494, column: 24, scope: !19274)
!19297 = !DILocation(line: 1494, column: 16, scope: !19274)
!19298 = !DILocation(line: 1494, column: 14, scope: !19274)
!19299 = !DILocation(line: 1494, column: 39, scope: !19274)
!19300 = !DILocation(line: 1494, column: 48, scope: !19274)
!19301 = !DILocation(line: 1494, column: 55, scope: !19274)
!19302 = !DILocation(line: 1494, column: 45, scope: !19274)
!19303 = !DILocation(line: 1494, column: 10, scope: !19274)
!19304 = !DILocation(line: 1501, column: 11, scope: !19274)
!19305 = !DILocation(line: 1501, column: 9, scope: !19274)
!19306 = !DILocation(line: 1502, column: 13, scope: !19274)
!19307 = !DILocation(line: 1502, column: 10, scope: !19274)
!19308 = !DILocation(line: 1503, column: 4, scope: !19274)
!19309 = !DILocation(line: 1504, column: 10, scope: !19310)
!19310 = distinct !DILexicalBlock(scope: !19274, file: !6239, line: 1503, column: 7)
!19311 = !DILocation(line: 1506, column: 9, scope: !19312)
!19312 = distinct !DILexicalBlock(scope: !19310, file: !6239, line: 1506, column: 9)
!19313 = !DILocation(line: 1506, column: 17, scope: !19312)
!19314 = !DILocation(line: 1506, column: 9, scope: !19310)
!19315 = !DILocation(line: 1507, column: 22, scope: !19316)
!19316 = distinct !DILexicalBlock(scope: !19317, file: !6239, line: 1507, column: 10)
!19317 = distinct !DILexicalBlock(scope: !19312, file: !6239, line: 1506, column: 28)
!19318 = !DILocation(line: 1507, column: 28, scope: !19316)
!19319 = !DILocation(line: 1507, column: 36, scope: !19316)
!19320 = !DILocation(line: 1507, column: 10, scope: !19316)
!19321 = !DILocation(line: 1507, column: 10, scope: !19317)
!19322 = !DILocation(line: 1508, column: 12, scope: !19316)
!19323 = !DILocation(line: 1508, column: 7, scope: !19316)
!19324 = !DILocation(line: 1509, column: 5, scope: !19317)
!19325 = !DILocation(line: 1510, column: 11, scope: !19326)
!19326 = distinct !DILexicalBlock(scope: !19327, file: !6239, line: 1510, column: 10)
!19327 = distinct !DILexicalBlock(scope: !19312, file: !6239, line: 1509, column: 12)
!19328 = !DILocation(line: 1510, column: 17, scope: !19326)
!19329 = !DILocation(line: 1510, column: 22, scope: !19326)
!19330 = !DILocation(line: 1510, column: 10, scope: !19327)
!19331 = !DILocation(line: 1511, column: 7, scope: !19326)
!19332 = !DILocation(line: 1512, column: 23, scope: !19333)
!19333 = distinct !DILexicalBlock(scope: !19327, file: !6239, line: 1512, column: 10)
!19334 = !DILocation(line: 1512, column: 29, scope: !19333)
!19335 = !DILocation(line: 1512, column: 37, scope: !19333)
!19336 = !DILocation(line: 1513, column: 8, scope: !19333)
!19337 = !DILocation(line: 1513, column: 15, scope: !19333)
!19338 = !DILocation(line: 1512, column: 10, scope: !19333)
!19339 = !DILocation(line: 1512, column: 10, scope: !19327)
!19340 = !DILocation(line: 1514, column: 12, scope: !19333)
!19341 = !DILocation(line: 1514, column: 7, scope: !19333)
!19342 = !DILocation(line: 1516, column: 4, scope: !19310)
!19343 = !DILocation(line: 1516, column: 13, scope: !19274)
!19344 = !DILocation(line: 1516, column: 21, scope: !19274)
!19345 = !DILocation(line: 1516, column: 19, scope: !19274)
!19346 = !DILocation(line: 1516, column: 26, scope: !19274)
!19347 = !DILocation(line: 1516, column: 30, scope: !19274)
!19348 = !DILocation(line: 1516, column: 29, scope: !19274)
!19349 = !DILocation(line: 0, scope: !19274)
!19350 = distinct !{!19350, !19308, !19351}
!19351 = !DILocation(line: 1516, column: 34, scope: !19274)
!19352 = !DILocation(line: 1519, column: 9, scope: !19353)
!19353 = distinct !DILexicalBlock(scope: !19274, file: !6239, line: 1519, column: 8)
!19354 = !DILocation(line: 1519, column: 8, scope: !19274)
!19355 = !DILocation(line: 1521, column: 12, scope: !19356)
!19356 = distinct !DILexicalBlock(scope: !19353, file: !6239, line: 1519, column: 15)
!19357 = !DILocation(line: 1522, column: 5, scope: !19356)
!19358 = !DILocation(line: 1524, column: 24, scope: !19274)
!19359 = !DILocation(line: 1524, column: 30, scope: !19274)
!19360 = !DILocation(line: 1525, column: 7, scope: !19274)
!19361 = !DILocation(line: 1525, column: 15, scope: !19274)
!19362 = !DILocation(line: 1525, column: 18, scope: !19274)
!19363 = !DILocation(line: 1525, column: 25, scope: !19274)
!19364 = !DILocation(line: 1524, column: 36, scope: !19274)
!19365 = !DILocation(line: 1524, column: 23, scope: !19274)
!19366 = !DILocation(line: 1524, column: 4, scope: !19274)
!19367 = !DILocation(line: 1524, column: 12, scope: !19274)
!19368 = !DILocation(line: 1524, column: 15, scope: !19274)
!19369 = !DILocation(line: 1524, column: 21, scope: !19274)
!19370 = !DILocation(line: 1526, column: 26, scope: !19274)
!19371 = !DILocation(line: 1526, column: 34, scope: !19274)
!19372 = !DILocation(line: 1526, column: 37, scope: !19274)
!19373 = !DILocation(line: 1527, column: 7, scope: !19274)
!19374 = !DILocation(line: 1527, column: 15, scope: !19274)
!19375 = !DILocation(line: 1527, column: 18, scope: !19274)
!19376 = !DILocation(line: 1527, column: 28, scope: !19274)
!19377 = !DILocation(line: 1526, column: 43, scope: !19274)
!19378 = !DILocation(line: 1526, column: 4, scope: !19274)
!19379 = !DILocation(line: 1526, column: 12, scope: !19274)
!19380 = !DILocation(line: 1526, column: 15, scope: !19274)
!19381 = !DILocation(line: 1526, column: 24, scope: !19274)
!19382 = !DILocation(line: 1528, column: 26, scope: !19274)
!19383 = !DILocation(line: 1528, column: 32, scope: !19274)
!19384 = !DILocation(line: 1528, column: 4, scope: !19274)
!19385 = !DILocation(line: 1528, column: 12, scope: !19274)
!19386 = !DILocation(line: 1528, column: 15, scope: !19274)
!19387 = !DILocation(line: 1528, column: 24, scope: !19274)
!19388 = !DILocation(line: 1529, column: 34, scope: !19274)
!19389 = !DILocation(line: 1529, column: 40, scope: !19274)
!19390 = !DILocation(line: 1529, column: 4, scope: !19274)
!19391 = !DILocation(line: 1530, column: 3, scope: !19274)
!19392 = !DILocation(line: 1534, column: 13, scope: !19393)
!19393 = distinct !DILexicalBlock(scope: !19267, file: !6239, line: 1533, column: 8)
!19394 = !DILocation(line: 1534, column: 21, scope: !19393)
!19395 = !DILocation(line: 1534, column: 24, scope: !19393)
!19396 = !DILocation(line: 1534, column: 30, scope: !19393)
!19397 = !DILocation(line: 1534, column: 38, scope: !19393)
!19398 = !DILocation(line: 1534, column: 46, scope: !19393)
!19399 = !DILocation(line: 1534, column: 49, scope: !19393)
!19400 = !DILocation(line: 1534, column: 36, scope: !19393)
!19401 = !DILocation(line: 1534, column: 10, scope: !19393)
!19402 = !DILocation(line: 1537, column: 25, scope: !19268)
!19403 = !DILocation(line: 1537, column: 3, scope: !19268)
!19404 = !DILocation(line: 1537, column: 11, scope: !19268)
!19405 = !DILocation(line: 1537, column: 23, scope: !19268)
!19406 = !DILocation(line: 1538, column: 14, scope: !19268)
!19407 = !DILocation(line: 1539, column: 2, scope: !19268)
!19408 = !DILocation(line: 1541, column: 30, scope: !19205)
!19409 = !DILocation(line: 1541, column: 8, scope: !19205)
!19410 = !DILocation(line: 1541, column: 39, scope: !19205)
!19411 = !DILocation(line: 1541, column: 43, scope: !19205)
!19412 = !DILocation(line: 1541, column: 36, scope: !19205)
!19413 = !DILocation(line: 1541, column: 6, scope: !19205)
!19414 = !DILocation(line: 1544, column: 6, scope: !19415)
!19415 = distinct !DILexicalBlock(scope: !19205, file: !6239, line: 1544, column: 6)
!19416 = !DILocation(line: 1544, column: 12, scope: !19415)
!19417 = !DILocation(line: 1544, column: 6, scope: !19205)
!19418 = !DILocation(line: 1545, column: 10, scope: !19415)
!19419 = !DILocation(line: 1545, column: 16, scope: !19415)
!19420 = !DILocation(line: 1545, column: 22, scope: !19415)
!19421 = !DILocation(line: 1545, column: 14, scope: !19415)
!19422 = !DILocation(line: 1545, column: 8, scope: !19415)
!19423 = !DILocation(line: 1545, column: 3, scope: !19415)
!19424 = !DILocation(line: 1547, column: 11, scope: !19415)
!19425 = !DILocation(line: 1547, column: 15, scope: !19415)
!19426 = !DILocation(line: 1547, column: 19, scope: !19415)
!19427 = !DILocation(line: 1547, column: 24, scope: !19415)
!19428 = !DILocation(line: 1547, column: 8, scope: !19415)
!19429 = !DILocation(line: 1550, column: 6, scope: !19430)
!19430 = distinct !DILexicalBlock(scope: !19205, file: !6239, line: 1550, column: 6)
!19431 = !DILocation(line: 1550, column: 12, scope: !19430)
!19432 = !DILocation(line: 1550, column: 23, scope: !19430)
!19433 = !DILocation(line: 1550, column: 6, scope: !19205)
!19434 = !DILocation(line: 1551, column: 26, scope: !19430)
!19435 = !DILocation(line: 1551, column: 30, scope: !19430)
!19436 = !DILocation(line: 1551, column: 3, scope: !19430)
!19437 = !DILocation(line: 1551, column: 9, scope: !19430)
!19438 = !DILocation(line: 1551, column: 24, scope: !19430)
!19439 = !DILocation(line: 1557, column: 9, scope: !19205)
!19440 = !DILocation(line: 1557, column: 15, scope: !19205)
!19441 = !DILocation(line: 1557, column: 30, scope: !19205)
!19442 = !DILocation(line: 1557, column: 7, scope: !19205)
!19443 = !DILocation(line: 1558, column: 10, scope: !19205)
!19444 = !DILocation(line: 1558, column: 17, scope: !19205)
!19445 = !DILocation(line: 1558, column: 15, scope: !19205)
!19446 = !DILocation(line: 1558, column: 26, scope: !19205)
!19447 = !DILocation(line: 1558, column: 30, scope: !19205)
!19448 = !DILocation(line: 1558, column: 23, scope: !19205)
!19449 = !DILocation(line: 1558, column: 7, scope: !19205)
!19450 = !DILocation(line: 1559, column: 11, scope: !19205)
!19451 = !DILocation(line: 1559, column: 19, scope: !19205)
!19452 = !DILocation(line: 1559, column: 33, scope: !19205)
!19453 = !DILocation(line: 1559, column: 31, scope: !19205)
!19454 = !DILocation(line: 1559, column: 42, scope: !19205)
!19455 = !DILocation(line: 1559, column: 46, scope: !19205)
!19456 = !DILocation(line: 1559, column: 39, scope: !19205)
!19457 = !DILocation(line: 1559, column: 8, scope: !19205)
!19458 = !DILocation(line: 1561, column: 6, scope: !19459)
!19459 = distinct !DILexicalBlock(scope: !19205, file: !6239, line: 1561, column: 6)
!19460 = !DILocation(line: 1561, column: 6, scope: !19205)
!19461 = !DILocation(line: 1562, column: 3, scope: !19459)
!19462 = !DILocation(line: 1570, column: 10, scope: !19205)
!19463 = !DILocation(line: 1570, column: 16, scope: !19205)
!19464 = !DILocation(line: 1570, column: 14, scope: !19205)
!19465 = !DILocation(line: 1570, column: 25, scope: !19205)
!19466 = !DILocation(line: 1570, column: 29, scope: !19205)
!19467 = !DILocation(line: 1570, column: 22, scope: !19205)
!19468 = !DILocation(line: 1570, column: 7, scope: !19205)
!19469 = !DILocation(line: 1573, column: 6, scope: !19470)
!19470 = distinct !DILexicalBlock(scope: !19205, file: !6239, line: 1573, column: 6)
!19471 = !DILocation(line: 0, scope: !19470)
!19472 = !DILocation(line: 1573, column: 6, scope: !19205)
!19473 = !DILocation(line: 1576, column: 10, scope: !19474)
!19474 = distinct !DILexicalBlock(scope: !19470, file: !6239, line: 1573, column: 42)
!19475 = !DILocation(line: 1577, column: 3, scope: !19474)
!19476 = !DILocation(line: 1581, column: 6, scope: !19477)
!19477 = distinct !DILexicalBlock(scope: !19205, file: !6239, line: 1581, column: 6)
!19478 = !DILocation(line: 1581, column: 6, scope: !19205)
!19479 = !DILocation(line: 1584, column: 7, scope: !19480)
!19480 = distinct !DILexicalBlock(scope: !19481, file: !6239, line: 1584, column: 7)
!19481 = distinct !DILexicalBlock(scope: !19477, file: !6239, line: 1581, column: 48)
!19482 = !DILocation(line: 0, scope: !19480)
!19483 = !DILocation(line: 1584, column: 7, scope: !19481)
!19484 = !DILocation(line: 1586, column: 4, scope: !19480)
!19485 = !DILocation(line: 1589, column: 7, scope: !19486)
!19486 = distinct !DILexicalBlock(scope: !19481, file: !6239, line: 1589, column: 7)
!19487 = !DILocation(line: 1589, column: 7, scope: !19481)
!19488 = !DILocation(line: 1590, column: 4, scope: !19486)
!19489 = !DILocation(line: 1593, column: 2, scope: !19481)
!19490 = !DILocation(line: 1594, column: 7, scope: !19491)
!19491 = distinct !DILexicalBlock(scope: !19492, file: !6239, line: 1594, column: 7)
!19492 = distinct !DILexicalBlock(scope: !19477, file: !6239, line: 1593, column: 9)
!19493 = !DILocation(line: 1594, column: 12, scope: !19491)
!19494 = !DILocation(line: 1594, column: 27, scope: !19491)
!19495 = !DILocation(line: 1594, column: 7, scope: !19492)
!19496 = !DILocation(line: 1595, column: 4, scope: !19491)
!19497 = !DILocation(line: 1596, column: 10, scope: !19492)
!19498 = !DILocation(line: 1596, column: 8, scope: !19492)
!19499 = !DILocation(line: 1597, column: 11, scope: !19492)
!19500 = !DILocation(line: 1597, column: 8, scope: !19492)
!19501 = !DILocation(line: 1601, column: 10, scope: !19205)
!19502 = !DILocation(line: 1601, column: 17, scope: !19205)
!19503 = !DILocation(line: 1601, column: 15, scope: !19205)
!19504 = !DILocation(line: 1601, column: 25, scope: !19205)
!19505 = !DILocation(line: 1601, column: 23, scope: !19205)
!19506 = !DILocation(line: 1601, column: 32, scope: !19205)
!19507 = !DILocation(line: 1601, column: 40, scope: !19205)
!19508 = !DILocation(line: 1601, column: 39, scope: !19205)
!19509 = !DILocation(line: 1601, column: 37, scope: !19205)
!19510 = !DILocation(line: 1601, column: 7, scope: !19205)
!19511 = !DILocation(line: 1602, column: 6, scope: !19512)
!19512 = distinct !DILexicalBlock(scope: !19205, file: !6239, line: 1602, column: 6)
!19513 = !DILocation(line: 1602, column: 14, scope: !19512)
!19514 = !DILocation(line: 1602, column: 11, scope: !19512)
!19515 = !DILocation(line: 1602, column: 6, scope: !19205)
!19516 = !DILocation(line: 1608, column: 10, scope: !19517)
!19517 = distinct !DILexicalBlock(scope: !19512, file: !6239, line: 1602, column: 20)
!19518 = !DILocation(line: 1608, column: 17, scope: !19517)
!19519 = !DILocation(line: 1608, column: 15, scope: !19517)
!19520 = !DILocation(line: 1608, column: 8, scope: !19517)
!19521 = !DILocation(line: 1611, column: 7, scope: !19522)
!19522 = distinct !DILexicalBlock(scope: !19517, file: !6239, line: 1611, column: 7)
!19523 = !DILocation(line: 1611, column: 7, scope: !19517)
!19524 = !DILocation(line: 1612, column: 11, scope: !19525)
!19525 = distinct !DILexicalBlock(scope: !19522, file: !6239, line: 1611, column: 14)
!19526 = !DILocation(line: 1612, column: 9, scope: !19525)
!19527 = !DILocation(line: 1613, column: 11, scope: !19525)
!19528 = !DILocation(line: 1614, column: 19, scope: !19525)
!19529 = !DILocation(line: 1614, column: 27, scope: !19525)
!19530 = !DILocation(line: 1614, column: 4, scope: !19525)
!19531 = !DILocation(line: 1615, column: 10, scope: !19525)
!19532 = !DILocation(line: 1616, column: 3, scope: !19525)
!19533 = !DILocation(line: 1617, column: 2, scope: !19517)
!19534 = !DILocation(line: 1618, column: 21, scope: !19205)
!19535 = !DILocation(line: 1618, column: 28, scope: !19205)
!19536 = !DILocation(line: 1618, column: 26, scope: !19205)
!19537 = !DILocation(line: 1618, column: 2, scope: !19205)
!19538 = !DILocation(line: 1618, column: 7, scope: !19205)
!19539 = !DILocation(line: 1618, column: 19, scope: !19205)
!19540 = !DILocation(line: 1619, column: 6, scope: !19541)
!19541 = distinct !DILexicalBlock(scope: !19205, file: !6239, line: 1619, column: 6)
!19542 = !DILocation(line: 1619, column: 6, scope: !19205)
!19543 = !DILocation(line: 1620, column: 25, scope: !19541)
!19544 = !DILocation(line: 1620, column: 30, scope: !19541)
!19545 = !DILocation(line: 1620, column: 3, scope: !19541)
!19546 = !DILocation(line: 1620, column: 10, scope: !19541)
!19547 = !DILocation(line: 1620, column: 23, scope: !19541)
!19548 = !DILocation(line: 1621, column: 2, scope: !19205)
!19549 = !DILabel(scope: !19205, name: "do_ASAP", file: !6239, line: 1623)
!19550 = !DILocation(line: 1623, column: 2, scope: !19205)
!19551 = !DILocation(line: 1625, column: 10, scope: !19205)
!19552 = !DILocation(line: 1625, column: 19, scope: !19205)
!19553 = !DILocation(line: 1625, column: 27, scope: !19205)
!19554 = !DILocation(line: 1625, column: 25, scope: !19205)
!19555 = !DILocation(line: 1625, column: 36, scope: !19205)
!19556 = !DILocation(line: 1625, column: 43, scope: !19205)
!19557 = !DILocation(line: 1625, column: 33, scope: !19205)
!19558 = !DILocation(line: 1625, column: 15, scope: !19205)
!19559 = !DILocation(line: 1625, column: 8, scope: !19205)
!19560 = !DILocation(line: 1625, column: 2, scope: !19205)
!19561 = !DILabel(scope: !19205, name: "use_start", file: !6239, line: 1627)
!19562 = !DILocation(line: 1627, column: 2, scope: !19205)
!19563 = !DILocation(line: 1629, column: 6, scope: !19564)
!19564 = distinct !DILexicalBlock(scope: !19205, file: !6239, line: 1629, column: 6)
!19565 = !DILocation(line: 1629, column: 6, scope: !19205)
!19566 = !DILocation(line: 1632, column: 10, scope: !19567)
!19567 = distinct !DILexicalBlock(scope: !19564, file: !6239, line: 1629, column: 53)
!19568 = !DILocation(line: 1633, column: 3, scope: !19567)
!19569 = !DILocation(line: 1636, column: 11, scope: !19205)
!19570 = !DILocation(line: 1636, column: 8, scope: !19205)
!19571 = !DILocation(line: 1637, column: 25, scope: !19205)
!19572 = !DILocation(line: 1637, column: 33, scope: !19205)
!19573 = !DILocation(line: 1637, column: 31, scope: !19205)
!19574 = !DILocation(line: 1637, column: 42, scope: !19205)
!19575 = !DILocation(line: 1637, column: 46, scope: !19205)
!19576 = !DILocation(line: 1637, column: 39, scope: !19205)
!19577 = !DILocation(line: 1637, column: 2, scope: !19205)
!19578 = !DILocation(line: 1637, column: 10, scope: !19205)
!19579 = !DILocation(line: 1637, column: 22, scope: !19205)
!19580 = !DILocation(line: 1640, column: 21, scope: !19205)
!19581 = !DILocation(line: 1640, column: 30, scope: !19205)
!19582 = !DILocation(line: 1640, column: 34, scope: !19205)
!19583 = !DILocation(line: 1640, column: 27, scope: !19205)
!19584 = !DILocation(line: 1640, column: 2, scope: !19205)
!19585 = !DILocation(line: 1640, column: 7, scope: !19205)
!19586 = !DILocation(line: 1640, column: 19, scope: !19205)
!19587 = !DILocation(line: 1641, column: 7, scope: !19588)
!19588 = distinct !DILexicalBlock(scope: !19205, file: !6239, line: 1641, column: 6)
!19589 = !DILocation(line: 1641, column: 15, scope: !19588)
!19590 = !DILocation(line: 1641, column: 6, scope: !19205)
!19591 = !DILocation(line: 1642, column: 3, scope: !19588)
!19592 = !DILocation(line: 1642, column: 8, scope: !19588)
!19593 = !DILocation(line: 1642, column: 20, scope: !19588)
!19594 = !DILocation(line: 1643, column: 9, scope: !19205)
!19595 = !DILocation(line: 1643, column: 2, scope: !19205)
!19596 = !DILabel(scope: !19205, name: "fail", file: !6239, line: 1645)
!19597 = !DILocation(line: 1645, column: 2, scope: !19205)
!19598 = !DILocation(line: 1646, column: 17, scope: !19205)
!19599 = !DILocation(line: 1646, column: 25, scope: !19205)
!19600 = !DILocation(line: 1646, column: 2, scope: !19205)
!19601 = !DILocation(line: 1647, column: 2, scope: !19205)
!19602 = !DILocation(line: 1647, column: 7, scope: !19205)
!19603 = !DILocation(line: 1647, column: 14, scope: !19205)
!19604 = !DILocation(line: 1648, column: 9, scope: !19205)
!19605 = !DILocation(line: 1648, column: 2, scope: !19205)
!19606 = !DILocation(line: 1649, column: 1, scope: !19205)
!19607 = distinct !DISubprogram(name: "itd_link_urb", scope: !6239, file: !6239, line: 1730, type: !19608, scopeLine: 1736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!19608 = !DISubroutineType(types: !19609)
!19609 = !{null, !5814, !5343, !7, !5922}
!19610 = !DILocalVariable(name: "ehci", arg: 1, scope: !19607, file: !6239, line: 1731, type: !5814)
!19611 = !DILocation(line: 1731, column: 20, scope: !19607)
!19612 = !DILocalVariable(name: "urb", arg: 2, scope: !19607, file: !6239, line: 1732, type: !5343)
!19613 = !DILocation(line: 1732, column: 15, scope: !19607)
!19614 = !DILocalVariable(name: "mod", arg: 3, scope: !19607, file: !6239, line: 1733, type: !7)
!19615 = !DILocation(line: 1733, column: 12, scope: !19607)
!19616 = !DILocalVariable(name: "stream", arg: 4, scope: !19607, file: !6239, line: 1734, type: !5922)
!19617 = !DILocation(line: 1734, column: 26, scope: !19607)
!19618 = !DILocalVariable(name: "packet", scope: !19607, file: !6239, line: 1737, type: !401)
!19619 = !DILocation(line: 1737, column: 8, scope: !19607)
!19620 = !DILocalVariable(name: "next_uframe", scope: !19607, file: !6239, line: 1738, type: !7)
!19621 = !DILocation(line: 1738, column: 12, scope: !19607)
!19622 = !DILocalVariable(name: "uframe", scope: !19607, file: !6239, line: 1738, type: !7)
!19623 = !DILocation(line: 1738, column: 25, scope: !19607)
!19624 = !DILocalVariable(name: "frame", scope: !19607, file: !6239, line: 1738, type: !7)
!19625 = !DILocation(line: 1738, column: 33, scope: !19607)
!19626 = !DILocalVariable(name: "iso_sched", scope: !19607, file: !6239, line: 1739, type: !19021)
!19627 = !DILocation(line: 1739, column: 25, scope: !19607)
!19628 = !DILocation(line: 1739, column: 37, scope: !19607)
!19629 = !DILocation(line: 1739, column: 42, scope: !19607)
!19630 = !DILocalVariable(name: "itd", scope: !19607, file: !6239, line: 1740, type: !5907)
!19631 = !DILocation(line: 1740, column: 20, scope: !19607)
!19632 = !DILocation(line: 1742, column: 16, scope: !19607)
!19633 = !DILocation(line: 1742, column: 24, scope: !19607)
!19634 = !DILocation(line: 1742, column: 39, scope: !19607)
!19635 = !DILocation(line: 1742, column: 43, scope: !19607)
!19636 = !DILocation(line: 1742, column: 36, scope: !19607)
!19637 = !DILocation(line: 1742, column: 14, scope: !19607)
!19638 = !DILocation(line: 1744, column: 6, scope: !19639)
!19639 = distinct !DILexicalBlock(scope: !19607, file: !6239, line: 1744, column: 6)
!19640 = !DILocation(line: 1744, column: 6, scope: !19607)
!19641 = !DILocation(line: 1746, column: 8, scope: !19639)
!19642 = !DILocation(line: 1746, column: 16, scope: !19639)
!19643 = !DILocation(line: 1745, column: 15, scope: !19639)
!19644 = !DILocation(line: 1745, column: 3, scope: !19639)
!19645 = !DILocation(line: 1745, column: 22, scope: !19639)
!19646 = !DILocation(line: 1745, column: 27, scope: !19639)
!19647 = !DILocation(line: 1746, column: 5, scope: !19639)
!19648 = !DILocation(line: 1748, column: 18, scope: !19649)
!19649 = distinct !DILexicalBlock(scope: !19607, file: !6239, line: 1748, column: 6)
!19650 = !DILocation(line: 1748, column: 6, scope: !19649)
!19651 = !DILocation(line: 1748, column: 25, scope: !19649)
!19652 = !DILocation(line: 1748, column: 30, scope: !19649)
!19653 = !DILocation(line: 1748, column: 50, scope: !19649)
!19654 = !DILocation(line: 1748, column: 6, scope: !19607)
!19655 = !DILocation(line: 1749, column: 7, scope: !19656)
!19656 = distinct !DILexicalBlock(scope: !19657, file: !6239, line: 1749, column: 7)
!19657 = distinct !DILexicalBlock(scope: !19649, file: !6239, line: 1748, column: 56)
!19658 = !DILocation(line: 1749, column: 13, scope: !19656)
!19659 = !DILocation(line: 1749, column: 25, scope: !19656)
!19660 = !DILocation(line: 1749, column: 7, scope: !19657)
!19661 = !DILocation(line: 1750, column: 4, scope: !19656)
!19662 = !DILocation(line: 1751, column: 2, scope: !19657)
!19663 = !DILocation(line: 1753, column: 14, scope: !19607)
!19664 = !DILocation(line: 1753, column: 2, scope: !19607)
!19665 = !DILocation(line: 1753, column: 21, scope: !19607)
!19666 = !DILocation(line: 1753, column: 26, scope: !19607)
!19667 = !DILocation(line: 1753, column: 45, scope: !19607)
!19668 = !DILocation(line: 1756, column: 16, scope: !19669)
!19669 = distinct !DILexicalBlock(scope: !19607, file: !6239, line: 1756, column: 2)
!19670 = !DILocation(line: 1756, column: 27, scope: !19669)
!19671 = !DILocation(line: 1756, column: 14, scope: !19669)
!19672 = !DILocation(line: 1756, column: 45, scope: !19669)
!19673 = !DILocation(line: 1756, column: 7, scope: !19669)
!19674 = !DILocation(line: 1757, column: 4, scope: !19675)
!19675 = distinct !DILexicalBlock(scope: !19669, file: !6239, line: 1756, column: 2)
!19676 = !DILocation(line: 1757, column: 13, scope: !19675)
!19677 = !DILocation(line: 1757, column: 18, scope: !19675)
!19678 = !DILocation(line: 1757, column: 11, scope: !19675)
!19679 = !DILocation(line: 1756, column: 2, scope: !19669)
!19680 = !DILocation(line: 1758, column: 7, scope: !19681)
!19681 = distinct !DILexicalBlock(scope: !19682, file: !6239, line: 1758, column: 7)
!19682 = distinct !DILexicalBlock(scope: !19675, file: !6239, line: 1757, column: 38)
!19683 = !DILocation(line: 1758, column: 11, scope: !19681)
!19684 = !DILocation(line: 1758, column: 7, scope: !19682)
!19685 = !DILocalVariable(name: "__mptr", scope: !19686, file: !6239, line: 1764, type: !341)
!19686 = distinct !DILexicalBlock(scope: !19687, file: !6239, line: 1764, column: 10)
!19687 = distinct !DILexicalBlock(scope: !19681, file: !6239, line: 1758, column: 20)
!19688 = !DILocation(line: 1764, column: 10, scope: !19686)
!19689 = !DILocation(line: 1764, column: 10, scope: !19690)
!19690 = distinct !DILexicalBlock(scope: !19686, file: !6239, line: 1764, column: 10)
!19691 = !DILocation(line: 1764, column: 8, scope: !19687)
!19692 = !DILocation(line: 1766, column: 20, scope: !19687)
!19693 = !DILocation(line: 1766, column: 25, scope: !19687)
!19694 = !DILocation(line: 1766, column: 36, scope: !19687)
!19695 = !DILocation(line: 1766, column: 44, scope: !19687)
!19696 = !DILocation(line: 1766, column: 4, scope: !19687)
!19697 = !DILocation(line: 1767, column: 18, scope: !19687)
!19698 = !DILocation(line: 1767, column: 4, scope: !19687)
!19699 = !DILocation(line: 1767, column: 9, scope: !19687)
!19700 = !DILocation(line: 1767, column: 16, scope: !19687)
!19701 = !DILocation(line: 1768, column: 15, scope: !19687)
!19702 = !DILocation(line: 1768, column: 4, scope: !19687)
!19703 = !DILocation(line: 1768, column: 9, scope: !19687)
!19704 = !DILocation(line: 1768, column: 13, scope: !19687)
!19705 = !DILocation(line: 1769, column: 13, scope: !19687)
!19706 = !DILocation(line: 1769, column: 19, scope: !19687)
!19707 = !DILocation(line: 1769, column: 27, scope: !19687)
!19708 = !DILocation(line: 1769, column: 4, scope: !19687)
!19709 = !DILocation(line: 1770, column: 3, scope: !19687)
!19710 = !DILocation(line: 1772, column: 12, scope: !19682)
!19711 = !DILocation(line: 1772, column: 24, scope: !19682)
!19712 = !DILocation(line: 1772, column: 10, scope: !19682)
!19713 = !DILocation(line: 1773, column: 11, scope: !19682)
!19714 = !DILocation(line: 1773, column: 23, scope: !19682)
!19715 = !DILocation(line: 1773, column: 9, scope: !19682)
!19716 = !DILocation(line: 1775, column: 13, scope: !19682)
!19717 = !DILocation(line: 1775, column: 19, scope: !19682)
!19718 = !DILocation(line: 1775, column: 24, scope: !19682)
!19719 = !DILocation(line: 1775, column: 35, scope: !19682)
!19720 = !DILocation(line: 1775, column: 43, scope: !19682)
!19721 = !DILocation(line: 1775, column: 3, scope: !19682)
!19722 = !DILocation(line: 1777, column: 18, scope: !19682)
!19723 = !DILocation(line: 1777, column: 26, scope: !19682)
!19724 = !DILocation(line: 1777, column: 15, scope: !19682)
!19725 = !DILocation(line: 1778, column: 18, scope: !19682)
!19726 = !DILocation(line: 1778, column: 22, scope: !19682)
!19727 = !DILocation(line: 1778, column: 15, scope: !19682)
!19728 = !DILocation(line: 1779, column: 9, scope: !19682)
!19729 = !DILocation(line: 1782, column: 9, scope: !19730)
!19730 = distinct !DILexicalBlock(scope: !19682, file: !6239, line: 1782, column: 7)
!19731 = !DILocation(line: 1782, column: 21, scope: !19730)
!19732 = !DILocation(line: 1782, column: 30, scope: !19730)
!19733 = !DILocation(line: 1782, column: 27, scope: !19730)
!19734 = !DILocation(line: 1783, column: 5, scope: !19730)
!19735 = !DILocation(line: 1783, column: 8, scope: !19730)
!19736 = !DILocation(line: 1783, column: 18, scope: !19730)
!19737 = !DILocation(line: 1783, column: 23, scope: !19730)
!19738 = !DILocation(line: 1783, column: 15, scope: !19730)
!19739 = !DILocation(line: 1782, column: 7, scope: !19682)
!19740 = !DILocation(line: 1784, column: 13, scope: !19741)
!19741 = distinct !DILexicalBlock(scope: !19730, file: !6239, line: 1783, column: 42)
!19742 = !DILocation(line: 1784, column: 19, scope: !19741)
!19743 = !DILocation(line: 1784, column: 28, scope: !19741)
!19744 = !DILocation(line: 1784, column: 34, scope: !19741)
!19745 = !DILocation(line: 1784, column: 48, scope: !19741)
!19746 = !DILocation(line: 1784, column: 25, scope: !19741)
!19747 = !DILocation(line: 1784, column: 54, scope: !19741)
!19748 = !DILocation(line: 1784, column: 4, scope: !19741)
!19749 = !DILocation(line: 1785, column: 8, scope: !19741)
!19750 = !DILocation(line: 1786, column: 3, scope: !19741)
!19751 = !DILocation(line: 1756, column: 2, scope: !19675)
!19752 = distinct !{!19752, !19679, !19753}
!19753 = !DILocation(line: 1787, column: 2, scope: !19669)
!19754 = !DILocation(line: 1788, column: 24, scope: !19607)
!19755 = !DILocation(line: 1788, column: 2, scope: !19607)
!19756 = !DILocation(line: 1788, column: 10, scope: !19607)
!19757 = !DILocation(line: 1788, column: 22, scope: !19607)
!19758 = !DILocation(line: 1791, column: 17, scope: !19607)
!19759 = !DILocation(line: 1791, column: 25, scope: !19607)
!19760 = !DILocation(line: 1791, column: 2, scope: !19607)
!19761 = !DILocation(line: 1792, column: 16, scope: !19607)
!19762 = !DILocation(line: 1792, column: 2, scope: !19607)
!19763 = !DILocation(line: 1792, column: 7, scope: !19607)
!19764 = !DILocation(line: 1792, column: 14, scope: !19607)
!19765 = !DILocation(line: 1794, column: 4, scope: !19607)
!19766 = !DILocation(line: 1794, column: 10, scope: !19607)
!19767 = !DILocation(line: 1794, column: 2, scope: !19607)
!19768 = !DILocation(line: 1795, column: 18, scope: !19607)
!19769 = !DILocation(line: 1795, column: 2, scope: !19607)
!19770 = !DILocation(line: 1796, column: 1, scope: !19607)
!19771 = distinct !DISubprogram(name: "iso_stream_alloc", scope: !6239, file: !6239, line: 995, type: !19772, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!19772 = !DISubroutineType(types: !19773)
!19773 = !{!5922, !946}
!19774 = !DILocalVariable(name: "mem_flags", arg: 1, scope: !19771, file: !6239, line: 995, type: !946)
!19775 = !DILocation(line: 995, column: 24, scope: !19771)
!19776 = !DILocalVariable(name: "stream", scope: !19771, file: !6239, line: 997, type: !5922)
!19777 = !DILocation(line: 997, column: 26, scope: !19771)
!19778 = !DILocation(line: 999, column: 36, scope: !19771)
!19779 = !DILocation(line: 999, column: 11, scope: !19771)
!19780 = !DILocation(line: 999, column: 9, scope: !19771)
!19781 = !DILocation(line: 1000, column: 6, scope: !19782)
!19782 = distinct !DILexicalBlock(scope: !19771, file: !6239, line: 1000, column: 6)
!19783 = !DILocation(line: 1000, column: 6, scope: !19771)
!19784 = !DILocation(line: 1001, column: 19, scope: !19785)
!19785 = distinct !DILexicalBlock(scope: !19782, file: !6239, line: 1000, column: 30)
!19786 = !DILocation(line: 1001, column: 27, scope: !19785)
!19787 = !DILocation(line: 1001, column: 3, scope: !19785)
!19788 = !DILocation(line: 1002, column: 19, scope: !19785)
!19789 = !DILocation(line: 1002, column: 27, scope: !19785)
!19790 = !DILocation(line: 1002, column: 3, scope: !19785)
!19791 = !DILocation(line: 1003, column: 3, scope: !19785)
!19792 = !DILocation(line: 1003, column: 11, scope: !19785)
!19793 = !DILocation(line: 1003, column: 23, scope: !19785)
!19794 = !DILocation(line: 1004, column: 3, scope: !19785)
!19795 = !DILocation(line: 1004, column: 11, scope: !19785)
!19796 = !DILocation(line: 1004, column: 14, scope: !19785)
!19797 = !DILocation(line: 1004, column: 20, scope: !19785)
!19798 = !DILocation(line: 1005, column: 2, scope: !19785)
!19799 = !DILocation(line: 1006, column: 9, scope: !19771)
!19800 = !DILocation(line: 1006, column: 2, scope: !19771)
!19801 = !DILocalVariable(name: "ehci", arg: 1, scope: !6268, file: !6239, line: 1011, type: !5814)
!19802 = !DILocation(line: 1011, column: 20, scope: !6268)
!19803 = !DILocalVariable(name: "stream", arg: 2, scope: !6268, file: !6239, line: 1012, type: !5922)
!19804 = !DILocation(line: 1012, column: 26, scope: !6268)
!19805 = !DILocalVariable(name: "urb", arg: 3, scope: !6268, file: !6239, line: 1013, type: !5343)
!19806 = !DILocation(line: 1013, column: 15, scope: !6268)
!19807 = !DILocalVariable(name: "dev", scope: !6268, file: !6239, line: 1018, type: !5047)
!19808 = !DILocation(line: 1018, column: 21, scope: !6268)
!19809 = !DILocation(line: 1018, column: 27, scope: !6268)
!19810 = !DILocation(line: 1018, column: 32, scope: !6268)
!19811 = !DILocalVariable(name: "buf1", scope: !6268, file: !6239, line: 1019, type: !303)
!19812 = !DILocation(line: 1019, column: 8, scope: !6268)
!19813 = !DILocalVariable(name: "epnum", scope: !6268, file: !6239, line: 1020, type: !7)
!19814 = !DILocation(line: 1020, column: 12, scope: !6268)
!19815 = !DILocalVariable(name: "maxp", scope: !6268, file: !6239, line: 1020, type: !7)
!19816 = !DILocation(line: 1020, column: 19, scope: !6268)
!19817 = !DILocalVariable(name: "is_input", scope: !6268, file: !6239, line: 1021, type: !401)
!19818 = !DILocation(line: 1021, column: 8, scope: !6268)
!19819 = !DILocalVariable(name: "tmp", scope: !6268, file: !6239, line: 1022, type: !7)
!19820 = !DILocation(line: 1022, column: 12, scope: !6268)
!19821 = !DILocation(line: 1028, column: 10, scope: !6268)
!19822 = !DILocation(line: 1028, column: 8, scope: !6268)
!19823 = !DILocation(line: 1029, column: 13, scope: !6268)
!19824 = !DILocation(line: 1029, column: 11, scope: !6268)
!19825 = !DILocation(line: 1030, column: 28, scope: !6268)
!19826 = !DILocation(line: 1030, column: 33, scope: !6268)
!19827 = !DILocation(line: 1030, column: 37, scope: !6268)
!19828 = !DILocation(line: 1030, column: 9, scope: !6268)
!19829 = !DILocation(line: 1030, column: 7, scope: !6268)
!19830 = !DILocation(line: 1031, column: 9, scope: !6268)
!19831 = !DILocation(line: 1031, column: 7, scope: !6268)
!19832 = !DILocation(line: 1034, column: 6, scope: !19833)
!19833 = distinct !DILexicalBlock(scope: !6268, file: !6239, line: 1034, column: 6)
!19834 = !DILocation(line: 1034, column: 11, scope: !19833)
!19835 = !DILocation(line: 1034, column: 17, scope: !19833)
!19836 = !DILocation(line: 1034, column: 6, scope: !6268)
!19837 = !DILocalVariable(name: "multi", scope: !19838, file: !6239, line: 1035, type: !7)
!19838 = distinct !DILexicalBlock(scope: !19833, file: !6239, line: 1034, column: 36)
!19839 = !DILocation(line: 1035, column: 12, scope: !19838)
!19840 = !DILocation(line: 1035, column: 44, scope: !19838)
!19841 = !DILocation(line: 1035, column: 49, scope: !19838)
!19842 = !DILocation(line: 1035, column: 53, scope: !19838)
!19843 = !DILocation(line: 1035, column: 20, scope: !19838)
!19844 = !DILocation(line: 1037, column: 3, scope: !19838)
!19845 = !DILocation(line: 1037, column: 11, scope: !19838)
!19846 = !DILocation(line: 1037, column: 21, scope: !19838)
!19847 = !DILocation(line: 1039, column: 11, scope: !19838)
!19848 = !DILocation(line: 1039, column: 8, scope: !19838)
!19849 = !DILocation(line: 1040, column: 11, scope: !19838)
!19850 = !DILocation(line: 1040, column: 8, scope: !19838)
!19851 = !DILocation(line: 1042, column: 30, scope: !19838)
!19852 = !DILocation(line: 1042, column: 37, scope: !19838)
!19853 = !DILocation(line: 1042, column: 43, scope: !19838)
!19854 = !DILocation(line: 1042, column: 51, scope: !19838)
!19855 = !DILocation(line: 1042, column: 56, scope: !19838)
!19856 = !DILocation(line: 1042, column: 49, scope: !19838)
!19857 = !DILocation(line: 1042, column: 18, scope: !19838)
!19858 = !DILocation(line: 1042, column: 3, scope: !19838)
!19859 = !DILocation(line: 1042, column: 11, scope: !19838)
!19860 = !DILocation(line: 1042, column: 16, scope: !19838)
!19861 = !DILocation(line: 1043, column: 30, scope: !19838)
!19862 = !DILocation(line: 1043, column: 36, scope: !19838)
!19863 = !DILocation(line: 1043, column: 18, scope: !19838)
!19864 = !DILocation(line: 1043, column: 3, scope: !19838)
!19865 = !DILocation(line: 1043, column: 11, scope: !19838)
!19866 = !DILocation(line: 1043, column: 16, scope: !19838)
!19867 = !DILocation(line: 1044, column: 30, scope: !19838)
!19868 = !DILocation(line: 1044, column: 36, scope: !19838)
!19869 = !DILocation(line: 1044, column: 18, scope: !19838)
!19870 = !DILocation(line: 1044, column: 3, scope: !19838)
!19871 = !DILocation(line: 1044, column: 11, scope: !19838)
!19872 = !DILocation(line: 1044, column: 16, scope: !19838)
!19873 = !DILocation(line: 1049, column: 22, scope: !19838)
!19874 = !DILocation(line: 1049, column: 3, scope: !19838)
!19875 = !DILocation(line: 1049, column: 11, scope: !19838)
!19876 = !DILocation(line: 1049, column: 14, scope: !19838)
!19877 = !DILocation(line: 1049, column: 20, scope: !19838)
!19878 = !DILocalVariable(name: "__UNIQUE_ID___x352", scope: !19879, file: !6239, line: 1052, type: !7)
!19879 = distinct !DILexicalBlock(scope: !19838, file: !6239, line: 1052, column: 9)
!19880 = !DILocation(line: 1052, column: 9, scope: !19879)
!19881 = !DILocalVariable(name: "__UNIQUE_ID___y353", scope: !19879, file: !6239, line: 1052, type: !7)
!19882 = !DILocation(line: 1052, column: 7, scope: !19838)
!19883 = !DILocalVariable(name: "__UNIQUE_ID___x354", scope: !19884, file: !6239, line: 1056, type: !7)
!19884 = distinct !DILexicalBlock(scope: !19838, file: !6239, line: 1056, column: 27)
!19885 = !DILocation(line: 1056, column: 27, scope: !19884)
!19886 = !DILocalVariable(name: "__UNIQUE_ID___y355", scope: !19884, file: !6239, line: 1056, type: !7)
!19887 = !DILocation(line: 1056, column: 27, scope: !19838)
!19888 = !DILocation(line: 1056, column: 3, scope: !19838)
!19889 = !DILocation(line: 1056, column: 11, scope: !19838)
!19890 = !DILocation(line: 1056, column: 14, scope: !19838)
!19891 = !DILocation(line: 1056, column: 25, scope: !19838)
!19892 = !DILocation(line: 1058, column: 21, scope: !19838)
!19893 = !DILocation(line: 1058, column: 26, scope: !19838)
!19894 = !DILocation(line: 1058, column: 3, scope: !19838)
!19895 = !DILocation(line: 1058, column: 11, scope: !19838)
!19896 = !DILocation(line: 1058, column: 19, scope: !19838)
!19897 = !DILocation(line: 1059, column: 23, scope: !19838)
!19898 = !DILocation(line: 1059, column: 28, scope: !19838)
!19899 = !DILocation(line: 1059, column: 37, scope: !19838)
!19900 = !DILocation(line: 1059, column: 3, scope: !19838)
!19901 = !DILocation(line: 1059, column: 11, scope: !19838)
!19902 = !DILocation(line: 1059, column: 14, scope: !19838)
!19903 = !DILocation(line: 1059, column: 21, scope: !19838)
!19904 = !DILocation(line: 1060, column: 23, scope: !19838)
!19905 = !DILocation(line: 1060, column: 31, scope: !19838)
!19906 = !DILocation(line: 1060, column: 34, scope: !19838)
!19907 = !DILocation(line: 1060, column: 40, scope: !19838)
!19908 = !DILocation(line: 1061, column: 5, scope: !19838)
!19909 = !DILocation(line: 1061, column: 13, scope: !19838)
!19910 = !DILocation(line: 1061, column: 16, scope: !19838)
!19911 = !DILocation(line: 1060, column: 44, scope: !19838)
!19912 = !DILocation(line: 1060, column: 3, scope: !19838)
!19913 = !DILocation(line: 1060, column: 11, scope: !19838)
!19914 = !DILocation(line: 1060, column: 21, scope: !19838)
!19915 = !DILocation(line: 1063, column: 2, scope: !19838)
!19916 = !DILocalVariable(name: "addr", scope: !19917, file: !6239, line: 1064, type: !303)
!19917 = distinct !DILexicalBlock(scope: !19833, file: !6239, line: 1063, column: 9)
!19918 = !DILocation(line: 1064, column: 8, scope: !19917)
!19919 = !DILocalVariable(name: "think_time", scope: !19917, file: !6239, line: 1065, type: !401)
!19920 = !DILocation(line: 1065, column: 8, scope: !19917)
!19921 = !DILocalVariable(name: "hs_transfers", scope: !19917, file: !6239, line: 1066, type: !401)
!19922 = !DILocation(line: 1066, column: 8, scope: !19917)
!19923 = !DILocation(line: 1068, column: 10, scope: !19917)
!19924 = !DILocation(line: 1068, column: 15, scope: !19917)
!19925 = !DILocation(line: 1068, column: 22, scope: !19917)
!19926 = !DILocation(line: 1068, column: 8, scope: !19917)
!19927 = !DILocation(line: 1072, column: 12, scope: !19928)
!19928 = distinct !DILexicalBlock(scope: !19917, file: !6239, line: 1069, column: 7)
!19929 = !DILocation(line: 1072, column: 17, scope: !19928)
!19930 = !DILocation(line: 1072, column: 21, scope: !19928)
!19931 = !DILocation(line: 1072, column: 26, scope: !19928)
!19932 = !DILocation(line: 1072, column: 33, scope: !19928)
!19933 = !DILocation(line: 1072, column: 9, scope: !19928)
!19934 = !DILocation(line: 1073, column: 11, scope: !19917)
!19935 = !DILocation(line: 1073, column: 17, scope: !19917)
!19936 = !DILocation(line: 1073, column: 8, scope: !19917)
!19937 = !DILocation(line: 1074, column: 11, scope: !19917)
!19938 = !DILocation(line: 1074, column: 16, scope: !19917)
!19939 = !DILocation(line: 1074, column: 8, scope: !19917)
!19940 = !DILocation(line: 1075, column: 22, scope: !19917)
!19941 = !DILocation(line: 1075, column: 3, scope: !19917)
!19942 = !DILocation(line: 1075, column: 11, scope: !19917)
!19943 = !DILocation(line: 1075, column: 14, scope: !19917)
!19944 = !DILocation(line: 1075, column: 20, scope: !19917)
!19945 = !DILocation(line: 1076, column: 16, scope: !19917)
!19946 = !DILocation(line: 1076, column: 21, scope: !19917)
!19947 = !DILocation(line: 1076, column: 25, scope: !19917)
!19948 = !DILocation(line: 1076, column: 14, scope: !19917)
!19949 = !DILocation(line: 1077, column: 25, scope: !19917)
!19950 = !DILocation(line: 1077, column: 3, scope: !19917)
!19951 = !DILocation(line: 1077, column: 11, scope: !19917)
!19952 = !DILocation(line: 1077, column: 14, scope: !19917)
!19953 = !DILocation(line: 1077, column: 23, scope: !19917)
!19954 = !DILocalVariable(name: "__UNIQUE_ID___x356", scope: !19955, file: !6239, line: 1079, type: !7)
!19955 = distinct !DILexicalBlock(scope: !19917, file: !6239, line: 1079, column: 18)
!19956 = !DILocation(line: 1079, column: 18, scope: !19955)
!19957 = !DILocalVariable(name: "__UNIQUE_ID___y357", scope: !19955, file: !6239, line: 1079, type: !7)
!19958 = !DILocation(line: 1079, column: 16, scope: !19917)
!19959 = !DILocation(line: 1080, column: 7, scope: !19960)
!19960 = distinct !DILexicalBlock(scope: !19917, file: !6239, line: 1080, column: 7)
!19961 = !DILocation(line: 1080, column: 7, scope: !19917)
!19962 = !DILocalVariable(name: "tmp", scope: !19963, file: !6239, line: 1081, type: !303)
!19963 = distinct !DILexicalBlock(scope: !19960, file: !6239, line: 1080, column: 17)
!19964 = !DILocation(line: 1081, column: 8, scope: !19963)
!19965 = !DILocation(line: 1083, column: 9, scope: !19963)
!19966 = !DILocation(line: 1084, column: 25, scope: !19963)
!19967 = !DILocation(line: 1084, column: 33, scope: !19963)
!19968 = !DILocation(line: 1084, column: 36, scope: !19963)
!19969 = !DILocation(line: 1084, column: 4, scope: !19963)
!19970 = !DILocation(line: 1084, column: 12, scope: !19963)
!19971 = !DILocation(line: 1084, column: 15, scope: !19963)
!19972 = !DILocation(line: 1084, column: 23, scope: !19963)
!19973 = !DILocation(line: 1085, column: 4, scope: !19963)
!19974 = !DILocation(line: 1085, column: 12, scope: !19963)
!19975 = !DILocation(line: 1085, column: 15, scope: !19963)
!19976 = !DILocation(line: 1085, column: 21, scope: !19963)
!19977 = !DILocation(line: 1086, column: 4, scope: !19963)
!19978 = !DILocation(line: 1086, column: 12, scope: !19963)
!19979 = !DILocation(line: 1086, column: 15, scope: !19963)
!19980 = !DILocation(line: 1086, column: 23, scope: !19963)
!19981 = !DILocation(line: 1089, column: 17, scope: !19963)
!19982 = !DILocation(line: 1089, column: 30, scope: !19963)
!19983 = !DILocation(line: 1089, column: 13, scope: !19963)
!19984 = !DILocation(line: 1089, column: 36, scope: !19963)
!19985 = !DILocation(line: 1089, column: 8, scope: !19963)
!19986 = !DILocation(line: 1090, column: 26, scope: !19963)
!19987 = !DILocation(line: 1090, column: 30, scope: !19963)
!19988 = !DILocation(line: 1090, column: 4, scope: !19963)
!19989 = !DILocation(line: 1090, column: 12, scope: !19963)
!19990 = !DILocation(line: 1090, column: 15, scope: !19963)
!19991 = !DILocation(line: 1090, column: 23, scope: !19963)
!19992 = !DILocation(line: 1091, column: 3, scope: !19963)
!19993 = !DILocation(line: 1092, column: 35, scope: !19960)
!19994 = !DILocation(line: 1092, column: 48, scope: !19960)
!19995 = !DILocation(line: 1092, column: 25, scope: !19960)
!19996 = !DILocation(line: 1092, column: 4, scope: !19960)
!19997 = !DILocation(line: 1092, column: 12, scope: !19960)
!19998 = !DILocation(line: 1092, column: 15, scope: !19960)
!19999 = !DILocation(line: 1092, column: 23, scope: !19960)
!20000 = !DILocalVariable(name: "__UNIQUE_ID___x358", scope: !20001, file: !6239, line: 1095, type: !7)
!20001 = distinct !DILexicalBlock(scope: !19917, file: !6239, line: 1095, column: 9)
!20002 = !DILocation(line: 1095, column: 9, scope: !20001)
!20003 = !DILocalVariable(name: "__UNIQUE_ID___y359", scope: !20001, file: !6239, line: 1095, type: !7)
!20004 = !DILocation(line: 1095, column: 7, scope: !19917)
!20005 = !DILocalVariable(name: "__UNIQUE_ID___x360", scope: !20006, file: !6239, line: 1099, type: !7)
!20006 = distinct !DILexicalBlock(scope: !19917, file: !6239, line: 1099, column: 26)
!20007 = !DILocation(line: 1099, column: 26, scope: !20006)
!20008 = !DILocalVariable(name: "__UNIQUE_ID___y361", scope: !20006, file: !6239, line: 1099, type: !7)
!20009 = !DILocation(line: 1099, column: 26, scope: !19917)
!20010 = !DILocation(line: 1099, column: 3, scope: !19917)
!20011 = !DILocation(line: 1099, column: 11, scope: !19917)
!20012 = !DILocation(line: 1099, column: 14, scope: !19917)
!20013 = !DILocation(line: 1099, column: 24, scope: !19917)
!20014 = !DILocation(line: 1100, column: 27, scope: !19917)
!20015 = !DILocation(line: 1100, column: 35, scope: !19917)
!20016 = !DILocation(line: 1100, column: 38, scope: !19917)
!20017 = !DILocation(line: 1100, column: 48, scope: !19917)
!20018 = !DILocation(line: 1100, column: 3, scope: !19917)
!20019 = !DILocation(line: 1100, column: 11, scope: !19917)
!20020 = !DILocation(line: 1100, column: 14, scope: !19917)
!20021 = !DILocation(line: 1100, column: 25, scope: !19917)
!20022 = !DILocation(line: 1102, column: 23, scope: !19917)
!20023 = !DILocation(line: 1102, column: 28, scope: !19917)
!20024 = !DILocation(line: 1102, column: 3, scope: !19917)
!20025 = !DILocation(line: 1102, column: 11, scope: !19917)
!20026 = !DILocation(line: 1102, column: 14, scope: !19917)
!20027 = !DILocation(line: 1102, column: 21, scope: !19917)
!20028 = !DILocation(line: 1103, column: 21, scope: !19917)
!20029 = !DILocation(line: 1103, column: 26, scope: !19917)
!20030 = !DILocation(line: 1103, column: 35, scope: !19917)
!20031 = !DILocation(line: 1103, column: 3, scope: !19917)
!20032 = !DILocation(line: 1103, column: 11, scope: !19917)
!20033 = !DILocation(line: 1103, column: 19, scope: !19917)
!20034 = !DILocation(line: 1104, column: 24, scope: !19917)
!20035 = !DILocation(line: 1104, column: 32, scope: !19917)
!20036 = !DILocation(line: 1104, column: 35, scope: !19917)
!20037 = !DILocation(line: 1104, column: 43, scope: !19917)
!20038 = !DILocation(line: 1104, column: 51, scope: !19917)
!20039 = !DILocation(line: 1104, column: 54, scope: !19917)
!20040 = !DILocation(line: 1104, column: 41, scope: !19917)
!20041 = !DILocation(line: 1105, column: 5, scope: !19917)
!20042 = !DILocation(line: 1105, column: 13, scope: !19917)
!20043 = !DILocation(line: 1105, column: 16, scope: !19917)
!20044 = !DILocation(line: 1104, column: 63, scope: !19917)
!20045 = !DILocation(line: 1104, column: 3, scope: !19917)
!20046 = !DILocation(line: 1104, column: 11, scope: !19917)
!20047 = !DILocation(line: 1104, column: 21, scope: !19917)
!20048 = !DILocation(line: 1108, column: 33, scope: !19917)
!20049 = !DILocation(line: 1108, column: 39, scope: !19917)
!20050 = !DILocation(line: 1108, column: 21, scope: !19917)
!20051 = !DILocation(line: 1108, column: 3, scope: !19917)
!20052 = !DILocation(line: 1108, column: 11, scope: !19917)
!20053 = !DILocation(line: 1108, column: 19, scope: !19917)
!20054 = !DILocation(line: 1111, column: 20, scope: !6268)
!20055 = !DILocation(line: 1111, column: 2, scope: !6268)
!20056 = !DILocation(line: 1111, column: 10, scope: !6268)
!20057 = !DILocation(line: 1111, column: 13, scope: !6268)
!20058 = !DILocation(line: 1111, column: 18, scope: !6268)
!20059 = !DILocation(line: 1112, column: 18, scope: !6268)
!20060 = !DILocation(line: 1112, column: 23, scope: !6268)
!20061 = !DILocation(line: 1112, column: 2, scope: !6268)
!20062 = !DILocation(line: 1112, column: 10, scope: !6268)
!20063 = !DILocation(line: 1112, column: 13, scope: !6268)
!20064 = !DILocation(line: 1112, column: 16, scope: !6268)
!20065 = !DILocation(line: 1114, column: 29, scope: !6268)
!20066 = !DILocation(line: 1114, column: 40, scope: !6268)
!20067 = !DILocation(line: 1114, column: 38, scope: !6268)
!20068 = !DILocation(line: 1114, column: 2, scope: !6268)
!20069 = !DILocation(line: 1114, column: 10, scope: !6268)
!20070 = !DILocation(line: 1114, column: 27, scope: !6268)
!20071 = !DILocation(line: 1115, column: 17, scope: !6268)
!20072 = !DILocation(line: 1115, column: 2, scope: !6268)
!20073 = !DILocation(line: 1115, column: 10, scope: !6268)
!20074 = !DILocation(line: 1115, column: 15, scope: !6268)
!20075 = !DILocation(line: 1116, column: 1, scope: !6268)
!20076 = distinct !DISubprogram(name: "iso_sched_alloc", scope: !6239, file: !6239, line: 1159, type: !20077, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!20077 = !DISubroutineType(types: !20078)
!20078 = !{!19021, !7, !946}
!20079 = !DILocalVariable(name: "packets", arg: 1, scope: !20076, file: !6239, line: 1159, type: !7)
!20080 = !DILocation(line: 1159, column: 26, scope: !20076)
!20081 = !DILocalVariable(name: "mem_flags", arg: 2, scope: !20076, file: !6239, line: 1159, type: !946)
!20082 = !DILocation(line: 1159, column: 41, scope: !20076)
!20083 = !DILocalVariable(name: "iso_sched", scope: !20076, file: !6239, line: 1161, type: !19021)
!20084 = !DILocation(line: 1161, column: 25, scope: !20076)
!20085 = !DILocalVariable(name: "size", scope: !20076, file: !6239, line: 1162, type: !401)
!20086 = !DILocation(line: 1162, column: 8, scope: !20076)
!20087 = !DILocation(line: 1164, column: 10, scope: !20076)
!20088 = !DILocation(line: 1164, column: 18, scope: !20076)
!20089 = !DILocation(line: 1164, column: 7, scope: !20076)
!20090 = !DILocation(line: 1165, column: 22, scope: !20076)
!20091 = !DILocation(line: 1165, column: 28, scope: !20076)
!20092 = !DILocation(line: 1165, column: 14, scope: !20076)
!20093 = !DILocation(line: 1165, column: 12, scope: !20076)
!20094 = !DILocation(line: 1166, column: 6, scope: !20095)
!20095 = distinct !DILexicalBlock(scope: !20076, file: !6239, line: 1166, column: 6)
!20096 = !DILocation(line: 1166, column: 6, scope: !20076)
!20097 = !DILocation(line: 1167, column: 19, scope: !20095)
!20098 = !DILocation(line: 1167, column: 30, scope: !20095)
!20099 = !DILocation(line: 1167, column: 3, scope: !20095)
!20100 = !DILocation(line: 1169, column: 9, scope: !20076)
!20101 = !DILocation(line: 1169, column: 2, scope: !20076)
!20102 = distinct !DISubprogram(name: "itd_sched_init", scope: !6239, file: !6239, line: 1173, type: !20103, scopeLine: 1179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!20103 = !DISubroutineType(types: !20104)
!20104 = !{null, !5814, !19021, !5922, !5343}
!20105 = !DILocalVariable(name: "ehci", arg: 1, scope: !20102, file: !6239, line: 1174, type: !5814)
!20106 = !DILocation(line: 1174, column: 20, scope: !20102)
!20107 = !DILocalVariable(name: "iso_sched", arg: 2, scope: !20102, file: !6239, line: 1175, type: !19021)
!20108 = !DILocation(line: 1175, column: 25, scope: !20102)
!20109 = !DILocalVariable(name: "stream", arg: 3, scope: !20102, file: !6239, line: 1176, type: !5922)
!20110 = !DILocation(line: 1176, column: 26, scope: !20102)
!20111 = !DILocalVariable(name: "urb", arg: 4, scope: !20102, file: !6239, line: 1177, type: !5343)
!20112 = !DILocation(line: 1177, column: 15, scope: !20102)
!20113 = !DILocalVariable(name: "i", scope: !20102, file: !6239, line: 1180, type: !7)
!20114 = !DILocation(line: 1180, column: 11, scope: !20102)
!20115 = !DILocalVariable(name: "dma", scope: !20102, file: !6239, line: 1181, type: !2064)
!20116 = !DILocation(line: 1181, column: 13, scope: !20102)
!20117 = !DILocation(line: 1181, column: 19, scope: !20102)
!20118 = !DILocation(line: 1181, column: 24, scope: !20102)
!20119 = !DILocation(line: 1184, column: 20, scope: !20102)
!20120 = !DILocation(line: 1184, column: 25, scope: !20102)
!20121 = !DILocation(line: 1184, column: 45, scope: !20102)
!20122 = !DILocation(line: 1184, column: 53, scope: !20102)
!20123 = !DILocation(line: 1184, column: 43, scope: !20102)
!20124 = !DILocation(line: 1184, column: 2, scope: !20102)
!20125 = !DILocation(line: 1184, column: 13, scope: !20102)
!20126 = !DILocation(line: 1184, column: 18, scope: !20102)
!20127 = !DILocation(line: 1189, column: 9, scope: !20128)
!20128 = distinct !DILexicalBlock(scope: !20102, file: !6239, line: 1189, column: 2)
!20129 = !DILocation(line: 1189, column: 7, scope: !20128)
!20130 = !DILocation(line: 1189, column: 14, scope: !20131)
!20131 = distinct !DILexicalBlock(scope: !20128, file: !6239, line: 1189, column: 2)
!20132 = !DILocation(line: 1189, column: 18, scope: !20131)
!20133 = !DILocation(line: 1189, column: 23, scope: !20131)
!20134 = !DILocation(line: 1189, column: 16, scope: !20131)
!20135 = !DILocation(line: 1189, column: 2, scope: !20128)
!20136 = !DILocalVariable(name: "uframe", scope: !20137, file: !6239, line: 1190, type: !20138)
!20137 = distinct !DILexicalBlock(scope: !20131, file: !6239, line: 1189, column: 47)
!20138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19029, size: 64)
!20139 = !DILocation(line: 1190, column: 27, scope: !20137)
!20140 = !DILocation(line: 1190, column: 37, scope: !20137)
!20141 = !DILocation(line: 1190, column: 48, scope: !20137)
!20142 = !DILocation(line: 1190, column: 55, scope: !20137)
!20143 = !DILocalVariable(name: "length", scope: !20137, file: !6239, line: 1191, type: !7)
!20144 = !DILocation(line: 1191, column: 13, scope: !20137)
!20145 = !DILocalVariable(name: "buf", scope: !20137, file: !6239, line: 1192, type: !2064)
!20146 = !DILocation(line: 1192, column: 15, scope: !20137)
!20147 = !DILocalVariable(name: "trans", scope: !20137, file: !6239, line: 1193, type: !303)
!20148 = !DILocation(line: 1193, column: 9, scope: !20137)
!20149 = !DILocation(line: 1195, column: 12, scope: !20137)
!20150 = !DILocation(line: 1195, column: 17, scope: !20137)
!20151 = !DILocation(line: 1195, column: 32, scope: !20137)
!20152 = !DILocation(line: 1195, column: 35, scope: !20137)
!20153 = !DILocation(line: 1195, column: 10, scope: !20137)
!20154 = !DILocation(line: 1196, column: 9, scope: !20137)
!20155 = !DILocation(line: 1196, column: 15, scope: !20137)
!20156 = !DILocation(line: 1196, column: 20, scope: !20137)
!20157 = !DILocation(line: 1196, column: 35, scope: !20137)
!20158 = !DILocation(line: 1196, column: 38, scope: !20137)
!20159 = !DILocation(line: 1196, column: 13, scope: !20137)
!20160 = !DILocation(line: 1196, column: 7, scope: !20137)
!20161 = !DILocation(line: 1198, column: 9, scope: !20137)
!20162 = !DILocation(line: 1199, column: 12, scope: !20137)
!20163 = !DILocation(line: 1199, column: 16, scope: !20137)
!20164 = !DILocation(line: 1199, column: 9, scope: !20137)
!20165 = !DILocation(line: 1200, column: 7, scope: !20166)
!20166 = distinct !DILexicalBlock(scope: !20137, file: !6239, line: 1200, column: 7)
!20167 = !DILocation(line: 1201, column: 5, scope: !20166)
!20168 = !DILocation(line: 1201, column: 10, scope: !20166)
!20169 = !DILocation(line: 1201, column: 15, scope: !20166)
!20170 = !DILocation(line: 1201, column: 30, scope: !20166)
!20171 = !DILocation(line: 1200, column: 7, scope: !20137)
!20172 = !DILocation(line: 1202, column: 10, scope: !20166)
!20173 = !DILocation(line: 1202, column: 4, scope: !20166)
!20174 = !DILocation(line: 1203, column: 12, scope: !20137)
!20175 = !DILocation(line: 1203, column: 19, scope: !20137)
!20176 = !DILocation(line: 1203, column: 9, scope: !20137)
!20177 = !DILocation(line: 1204, column: 37, scope: !20137)
!20178 = !DILocation(line: 1204, column: 43, scope: !20137)
!20179 = !DILocation(line: 1204, column: 25, scope: !20137)
!20180 = !DILocation(line: 1204, column: 3, scope: !20137)
!20181 = !DILocation(line: 1204, column: 11, scope: !20137)
!20182 = !DILocation(line: 1204, column: 23, scope: !20137)
!20183 = !DILocation(line: 1207, column: 19, scope: !20137)
!20184 = !DILocation(line: 1207, column: 23, scope: !20137)
!20185 = !DILocation(line: 1207, column: 3, scope: !20137)
!20186 = !DILocation(line: 1207, column: 11, scope: !20137)
!20187 = !DILocation(line: 1207, column: 16, scope: !20137)
!20188 = !DILocation(line: 1208, column: 10, scope: !20137)
!20189 = !DILocation(line: 1208, column: 7, scope: !20137)
!20190 = !DILocation(line: 1209, column: 7, scope: !20191)
!20191 = distinct !DILexicalBlock(scope: !20137, file: !6239, line: 1209, column: 7)
!20192 = !DILocation(line: 1209, column: 7, scope: !20137)
!20193 = !DILocation(line: 1210, column: 4, scope: !20191)
!20194 = !DILocation(line: 1210, column: 12, scope: !20191)
!20195 = !DILocation(line: 1210, column: 18, scope: !20191)
!20196 = !DILocation(line: 1211, column: 2, scope: !20137)
!20197 = !DILocation(line: 1189, column: 43, scope: !20131)
!20198 = !DILocation(line: 1189, column: 2, scope: !20131)
!20199 = distinct !{!20199, !20135, !20200}
!20200 = !DILocation(line: 1211, column: 2, scope: !20128)
!20201 = !DILocation(line: 1212, column: 1, scope: !20102)
!20202 = distinct !DISubprogram(name: "iso_sched_free", scope: !6239, file: !6239, line: 1215, type: !20203, scopeLine: 1219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!20203 = !DISubroutineType(types: !20204)
!20204 = !{null, !5922, !19021}
!20205 = !DILocalVariable(name: "stream", arg: 1, scope: !20202, file: !6239, line: 1216, type: !5922)
!20206 = !DILocation(line: 1216, column: 26, scope: !20202)
!20207 = !DILocalVariable(name: "iso_sched", arg: 2, scope: !20202, file: !6239, line: 1217, type: !19021)
!20208 = !DILocation(line: 1217, column: 25, scope: !20202)
!20209 = !DILocation(line: 1220, column: 7, scope: !20210)
!20210 = distinct !DILexicalBlock(scope: !20202, file: !6239, line: 1220, column: 6)
!20211 = !DILocation(line: 1220, column: 6, scope: !20202)
!20212 = !DILocation(line: 1221, column: 3, scope: !20210)
!20213 = !DILocation(line: 1223, column: 15, scope: !20202)
!20214 = !DILocation(line: 1223, column: 26, scope: !20202)
!20215 = !DILocation(line: 1223, column: 36, scope: !20202)
!20216 = !DILocation(line: 1223, column: 44, scope: !20202)
!20217 = !DILocation(line: 1223, column: 2, scope: !20202)
!20218 = !DILocation(line: 1224, column: 8, scope: !20202)
!20219 = !DILocation(line: 1224, column: 2, scope: !20202)
!20220 = !DILocation(line: 1225, column: 1, scope: !20202)
!20221 = distinct !DISubprogram(name: "list_splice", scope: !9075, file: !9075, line: 452, type: !20222, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!20222 = !DISubroutineType(types: !20223)
!20223 = !{null, !10173, !365}
!20224 = !DILocalVariable(name: "list", arg: 1, scope: !20221, file: !9075, line: 452, type: !10173)
!20225 = !DILocation(line: 452, column: 56, scope: !20221)
!20226 = !DILocalVariable(name: "head", arg: 2, scope: !20221, file: !9075, line: 453, type: !365)
!20227 = !DILocation(line: 453, column: 23, scope: !20221)
!20228 = !DILocation(line: 455, column: 18, scope: !20229)
!20229 = distinct !DILexicalBlock(scope: !20221, file: !9075, line: 455, column: 6)
!20230 = !DILocation(line: 455, column: 7, scope: !20229)
!20231 = !DILocation(line: 455, column: 6, scope: !20221)
!20232 = !DILocation(line: 456, column: 17, scope: !20229)
!20233 = !DILocation(line: 456, column: 23, scope: !20229)
!20234 = !DILocation(line: 456, column: 29, scope: !20229)
!20235 = !DILocation(line: 456, column: 35, scope: !20229)
!20236 = !DILocation(line: 456, column: 3, scope: !20229)
!20237 = !DILocation(line: 457, column: 1, scope: !20221)
!20238 = distinct !DISubprogram(name: "hcd_periodic_completion_in_progress", scope: !261, file: !261, line: 420, type: !20239, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!20239 = !DISubroutineType(types: !20240)
!20240 = !{!626, !342, !5245}
!20241 = !DILocalVariable(name: "hcd", arg: 1, scope: !20238, file: !261, line: 420, type: !342)
!20242 = !DILocation(line: 420, column: 72, scope: !20238)
!20243 = !DILocalVariable(name: "ep", arg: 2, scope: !20238, file: !261, line: 421, type: !5245)
!20244 = !DILocation(line: 421, column: 29, scope: !20238)
!20245 = !DILocation(line: 423, column: 9, scope: !20238)
!20246 = !DILocation(line: 423, column: 14, scope: !20238)
!20247 = !DILocation(line: 423, column: 27, scope: !20238)
!20248 = !DILocation(line: 423, column: 44, scope: !20238)
!20249 = !DILocation(line: 423, column: 41, scope: !20238)
!20250 = !DILocation(line: 423, column: 2, scope: !20238)
!20251 = distinct !DISubprogram(name: "itd_slot_ok", scope: !6239, file: !6239, line: 1353, type: !20252, scopeLine: 1358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!20252 = !DISubroutineType(types: !20253)
!20253 = !{!401, !5814, !5922, !7}
!20254 = !DILocalVariable(name: "ehci", arg: 1, scope: !20251, file: !6239, line: 1354, type: !5814)
!20255 = !DILocation(line: 1354, column: 20, scope: !20251)
!20256 = !DILocalVariable(name: "stream", arg: 2, scope: !20251, file: !6239, line: 1355, type: !5922)
!20257 = !DILocation(line: 1355, column: 26, scope: !20251)
!20258 = !DILocalVariable(name: "uframe", arg: 3, scope: !20251, file: !6239, line: 1356, type: !7)
!20259 = !DILocation(line: 1356, column: 12, scope: !20251)
!20260 = !DILocalVariable(name: "usecs", scope: !20251, file: !6239, line: 1359, type: !7)
!20261 = !DILocation(line: 1359, column: 12, scope: !20251)
!20262 = !DILocation(line: 1362, column: 10, scope: !20251)
!20263 = !DILocation(line: 1362, column: 16, scope: !20251)
!20264 = !DILocation(line: 1362, column: 38, scope: !20251)
!20265 = !DILocation(line: 1362, column: 46, scope: !20251)
!20266 = !DILocation(line: 1362, column: 49, scope: !20251)
!20267 = !DILocation(line: 1362, column: 36, scope: !20251)
!20268 = !DILocation(line: 1362, column: 8, scope: !20251)
!20269 = !DILocation(line: 1364, column: 17, scope: !20270)
!20270 = distinct !DILexicalBlock(scope: !20251, file: !6239, line: 1364, column: 2)
!20271 = !DILocation(line: 1364, column: 25, scope: !20270)
!20272 = !DILocation(line: 1364, column: 28, scope: !20270)
!20273 = !DILocation(line: 1364, column: 39, scope: !20270)
!20274 = !DILocation(line: 1364, column: 14, scope: !20270)
!20275 = !DILocation(line: 1364, column: 7, scope: !20270)
!20276 = !DILocation(line: 1364, column: 44, scope: !20277)
!20277 = distinct !DILexicalBlock(scope: !20270, file: !6239, line: 1364, column: 2)
!20278 = !DILocation(line: 1364, column: 51, scope: !20277)
!20279 = !DILocation(line: 1364, column: 2, scope: !20270)
!20280 = !DILocation(line: 1366, column: 7, scope: !20281)
!20281 = distinct !DILexicalBlock(scope: !20282, file: !6239, line: 1366, column: 7)
!20282 = distinct !DILexicalBlock(scope: !20277, file: !6239, line: 1365, column: 37)
!20283 = !DILocation(line: 1366, column: 13, scope: !20281)
!20284 = !DILocation(line: 1366, column: 23, scope: !20281)
!20285 = !DILocation(line: 1366, column: 33, scope: !20281)
!20286 = !DILocation(line: 1366, column: 31, scope: !20281)
!20287 = !DILocation(line: 1366, column: 7, scope: !20282)
!20288 = !DILocation(line: 1367, column: 4, scope: !20281)
!20289 = !DILocation(line: 1368, column: 2, scope: !20282)
!20290 = !DILocation(line: 1365, column: 14, scope: !20277)
!20291 = !DILocation(line: 1365, column: 22, scope: !20277)
!20292 = !DILocation(line: 1365, column: 25, scope: !20277)
!20293 = !DILocation(line: 1365, column: 11, scope: !20277)
!20294 = !DILocation(line: 1364, column: 2, scope: !20277)
!20295 = distinct !{!20295, !20279, !20296}
!20296 = !DILocation(line: 1368, column: 2, scope: !20270)
!20297 = !DILocation(line: 1369, column: 2, scope: !20251)
!20298 = !DILocation(line: 1370, column: 1, scope: !20251)
!20299 = distinct !DISubprogram(name: "sitd_slot_ok", scope: !6239, file: !6239, line: 1373, type: !20300, scopeLine: 1380, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!20300 = !DISubroutineType(types: !20301)
!20301 = !{!401, !5814, !5922, !7, !19021, !6096}
!20302 = !DILocalVariable(name: "ehci", arg: 1, scope: !20299, file: !6239, line: 1374, type: !5814)
!20303 = !DILocation(line: 1374, column: 20, scope: !20299)
!20304 = !DILocalVariable(name: "stream", arg: 2, scope: !20299, file: !6239, line: 1375, type: !5922)
!20305 = !DILocation(line: 1375, column: 26, scope: !20299)
!20306 = !DILocalVariable(name: "uframe", arg: 3, scope: !20299, file: !6239, line: 1376, type: !7)
!20307 = !DILocation(line: 1376, column: 12, scope: !20299)
!20308 = !DILocalVariable(name: "sched", arg: 4, scope: !20299, file: !6239, line: 1377, type: !19021)
!20309 = !DILocation(line: 1377, column: 25, scope: !20299)
!20310 = !DILocalVariable(name: "tt", arg: 5, scope: !20299, file: !6239, line: 1378, type: !6096)
!20311 = !DILocation(line: 1378, column: 19, scope: !20299)
!20312 = !DILocalVariable(name: "mask", scope: !20299, file: !6239, line: 1381, type: !7)
!20313 = !DILocation(line: 1381, column: 12, scope: !20299)
!20314 = !DILocalVariable(name: "tmp", scope: !20299, file: !6239, line: 1381, type: !7)
!20315 = !DILocation(line: 1381, column: 18, scope: !20299)
!20316 = !DILocalVariable(name: "frame", scope: !20299, file: !6239, line: 1382, type: !7)
!20317 = !DILocation(line: 1382, column: 12, scope: !20299)
!20318 = !DILocalVariable(name: "uf", scope: !20299, file: !6239, line: 1382, type: !7)
!20319 = !DILocation(line: 1382, column: 19, scope: !20299)
!20320 = !DILocation(line: 1384, column: 9, scope: !20299)
!20321 = !DILocation(line: 1384, column: 17, scope: !20299)
!20322 = !DILocation(line: 1384, column: 20, scope: !20299)
!20323 = !DILocation(line: 1384, column: 32, scope: !20299)
!20324 = !DILocation(line: 1384, column: 39, scope: !20299)
!20325 = !DILocation(line: 1384, column: 28, scope: !20299)
!20326 = !DILocation(line: 1384, column: 7, scope: !20299)
!20327 = !DILocation(line: 1387, column: 8, scope: !20328)
!20328 = distinct !DILexicalBlock(scope: !20299, file: !6239, line: 1387, column: 6)
!20329 = !DILocation(line: 1387, column: 16, scope: !20328)
!20330 = !DILocation(line: 1387, column: 19, scope: !20328)
!20331 = !DILocation(line: 1387, column: 27, scope: !20328)
!20332 = !DILocation(line: 1387, column: 39, scope: !20328)
!20333 = !DILocation(line: 1387, column: 46, scope: !20328)
!20334 = !DILocation(line: 1387, column: 35, scope: !20328)
!20335 = !DILocation(line: 1387, column: 52, scope: !20328)
!20336 = !DILocation(line: 1387, column: 6, scope: !20299)
!20337 = !DILocation(line: 1388, column: 3, scope: !20328)
!20338 = !DILocation(line: 1391, column: 6, scope: !20339)
!20339 = distinct !DILexicalBlock(scope: !20299, file: !6239, line: 1391, column: 6)
!20340 = !DILocation(line: 1391, column: 11, scope: !20339)
!20341 = !DILocation(line: 1391, column: 6, scope: !20299)
!20342 = !DILocation(line: 1392, column: 3, scope: !20339)
!20343 = !DILocation(line: 1395, column: 12, scope: !20299)
!20344 = !DILocation(line: 1395, column: 20, scope: !20299)
!20345 = !DILocation(line: 1395, column: 23, scope: !20299)
!20346 = !DILocation(line: 1395, column: 34, scope: !20299)
!20347 = !DILocation(line: 1395, column: 9, scope: !20299)
!20348 = !DILocation(line: 1396, column: 10, scope: !20299)
!20349 = !DILocation(line: 1396, column: 17, scope: !20299)
!20350 = !DILocation(line: 1396, column: 8, scope: !20299)
!20351 = !DILocation(line: 1402, column: 7, scope: !20299)
!20352 = !DILocation(line: 1402, column: 14, scope: !20299)
!20353 = !DILocation(line: 1402, column: 5, scope: !20299)
!20354 = !DILocation(line: 1403, column: 20, scope: !20355)
!20355 = distinct !DILexicalBlock(scope: !20299, file: !6239, line: 1403, column: 6)
!20356 = !DILocation(line: 1403, column: 27, scope: !20355)
!20357 = !DILocation(line: 1403, column: 35, scope: !20355)
!20358 = !DILocation(line: 1403, column: 39, scope: !20355)
!20359 = !DILocation(line: 1403, column: 43, scope: !20355)
!20360 = !DILocation(line: 1403, column: 50, scope: !20355)
!20361 = !DILocation(line: 1403, column: 7, scope: !20355)
!20362 = !DILocation(line: 1403, column: 6, scope: !20299)
!20363 = !DILocation(line: 1404, column: 3, scope: !20355)
!20364 = !DILocation(line: 1414, column: 2, scope: !20299)
!20365 = !DILocalVariable(name: "max_used", scope: !20366, file: !6239, line: 1415, type: !7)
!20366 = distinct !DILexicalBlock(scope: !20299, file: !6239, line: 1414, column: 5)
!20367 = !DILocation(line: 1415, column: 12, scope: !20366)
!20368 = !DILocalVariable(name: "i", scope: !20366, file: !6239, line: 1416, type: !7)
!20369 = !DILocation(line: 1416, column: 12, scope: !20366)
!20370 = !DILocation(line: 1419, column: 8, scope: !20366)
!20371 = !DILocation(line: 1419, column: 6, scope: !20366)
!20372 = !DILocation(line: 1420, column: 14, scope: !20366)
!20373 = !DILocation(line: 1420, column: 20, scope: !20366)
!20374 = !DILocation(line: 1420, column: 42, scope: !20366)
!20375 = !DILocation(line: 1420, column: 50, scope: !20366)
!20376 = !DILocation(line: 1420, column: 53, scope: !20366)
!20377 = !DILocation(line: 1420, column: 40, scope: !20366)
!20378 = !DILocation(line: 1420, column: 12, scope: !20366)
!20379 = !DILocation(line: 1421, column: 14, scope: !20380)
!20380 = distinct !DILexicalBlock(scope: !20366, file: !6239, line: 1421, column: 3)
!20381 = !DILocation(line: 1421, column: 22, scope: !20380)
!20382 = !DILocation(line: 1421, column: 25, scope: !20380)
!20383 = !DILocation(line: 1421, column: 33, scope: !20380)
!20384 = !DILocation(line: 1421, column: 12, scope: !20380)
!20385 = !DILocation(line: 1421, column: 8, scope: !20380)
!20386 = !DILocation(line: 1421, column: 41, scope: !20387)
!20387 = distinct !DILexicalBlock(scope: !20380, file: !6239, line: 1421, column: 3)
!20388 = !DILocation(line: 1421, column: 3, scope: !20380)
!20389 = !DILocation(line: 1422, column: 8, scope: !20390)
!20390 = distinct !DILexicalBlock(scope: !20391, file: !6239, line: 1422, column: 8)
!20391 = distinct !DILexicalBlock(scope: !20387, file: !6239, line: 1421, column: 63)
!20392 = !DILocation(line: 1422, column: 14, scope: !20390)
!20393 = !DILocation(line: 1422, column: 24, scope: !20390)
!20394 = !DILocation(line: 1422, column: 30, scope: !20390)
!20395 = !DILocation(line: 1422, column: 28, scope: !20390)
!20396 = !DILocation(line: 1422, column: 8, scope: !20391)
!20397 = !DILocation(line: 1423, column: 5, scope: !20390)
!20398 = !DILocation(line: 1424, column: 3, scope: !20391)
!20399 = !DILocation(line: 1421, column: 50, scope: !20387)
!20400 = !DILocation(line: 1421, column: 59, scope: !20387)
!20401 = !DILocation(line: 1421, column: 3, scope: !20387)
!20402 = distinct !{!20402, !20388, !20403}
!20403 = !DILocation(line: 1424, column: 3, scope: !20380)
!20404 = !DILocation(line: 1427, column: 7, scope: !20405)
!20405 = distinct !DILexicalBlock(scope: !20366, file: !6239, line: 1427, column: 7)
!20406 = !DILocation(line: 1427, column: 15, scope: !20405)
!20407 = !DILocation(line: 1427, column: 18, scope: !20405)
!20408 = !DILocation(line: 1427, column: 7, scope: !20366)
!20409 = !DILocation(line: 1428, column: 15, scope: !20410)
!20410 = distinct !DILexicalBlock(scope: !20405, file: !6239, line: 1427, column: 27)
!20411 = !DILocation(line: 1428, column: 21, scope: !20410)
!20412 = !DILocation(line: 1429, column: 6, scope: !20410)
!20413 = !DILocation(line: 1429, column: 14, scope: !20410)
!20414 = !DILocation(line: 1429, column: 17, scope: !20410)
!20415 = !DILocation(line: 1428, column: 41, scope: !20410)
!20416 = !DILocation(line: 1428, column: 13, scope: !20410)
!20417 = !DILocation(line: 1430, column: 9, scope: !20410)
!20418 = !DILocation(line: 1430, column: 16, scope: !20410)
!20419 = !DILocation(line: 1430, column: 7, scope: !20410)
!20420 = !DILocation(line: 1431, column: 8, scope: !20410)
!20421 = !DILocation(line: 1432, column: 14, scope: !20422)
!20422 = distinct !DILexicalBlock(scope: !20410, file: !6239, line: 1432, column: 4)
!20423 = !DILocation(line: 1432, column: 21, scope: !20422)
!20424 = !DILocation(line: 1432, column: 26, scope: !20422)
!20425 = !DILocation(line: 1432, column: 11, scope: !20422)
!20426 = !DILocation(line: 1432, column: 9, scope: !20422)
!20427 = !DILocation(line: 1432, column: 31, scope: !20428)
!20428 = distinct !DILexicalBlock(scope: !20422, file: !6239, line: 1432, column: 4)
!20429 = !DILocation(line: 1432, column: 33, scope: !20428)
!20430 = !DILocation(line: 1432, column: 4, scope: !20422)
!20431 = !DILocation(line: 1433, column: 10, scope: !20432)
!20432 = distinct !DILexicalBlock(scope: !20433, file: !6239, line: 1433, column: 9)
!20433 = distinct !DILexicalBlock(scope: !20428, file: !6239, line: 1432, column: 56)
!20434 = !DILocation(line: 1433, column: 18, scope: !20432)
!20435 = !DILocation(line: 1433, column: 21, scope: !20432)
!20436 = !DILocation(line: 1433, column: 31, scope: !20432)
!20437 = !DILocation(line: 1433, column: 29, scope: !20432)
!20438 = !DILocation(line: 1433, column: 36, scope: !20432)
!20439 = !DILocation(line: 1433, column: 9, scope: !20433)
!20440 = !DILocation(line: 1434, column: 6, scope: !20432)
!20441 = !DILocation(line: 1435, column: 9, scope: !20442)
!20442 = distinct !DILexicalBlock(scope: !20433, file: !6239, line: 1435, column: 9)
!20443 = !DILocation(line: 1435, column: 15, scope: !20442)
!20444 = !DILocation(line: 1435, column: 25, scope: !20442)
!20445 = !DILocation(line: 1435, column: 28, scope: !20442)
!20446 = !DILocation(line: 1435, column: 27, scope: !20442)
!20447 = !DILocation(line: 1435, column: 33, scope: !20442)
!20448 = !DILocation(line: 1435, column: 31, scope: !20442)
!20449 = !DILocation(line: 1435, column: 9, scope: !20433)
!20450 = !DILocation(line: 1436, column: 6, scope: !20442)
!20451 = !DILocation(line: 1437, column: 4, scope: !20433)
!20452 = !DILocation(line: 1432, column: 39, scope: !20428)
!20453 = !DILocation(line: 1432, column: 48, scope: !20428)
!20454 = !DILocation(line: 1432, column: 4, scope: !20428)
!20455 = distinct !{!20455, !20430, !20456}
!20456 = !DILocation(line: 1437, column: 4, scope: !20422)
!20457 = !DILocation(line: 1438, column: 3, scope: !20410)
!20458 = !DILocation(line: 1440, column: 13, scope: !20366)
!20459 = !DILocation(line: 1440, column: 21, scope: !20366)
!20460 = !DILocation(line: 1440, column: 24, scope: !20366)
!20461 = !DILocation(line: 1440, column: 10, scope: !20366)
!20462 = !DILocation(line: 1441, column: 2, scope: !20366)
!20463 = !DILocation(line: 1441, column: 11, scope: !20299)
!20464 = !DILocation(line: 1441, column: 18, scope: !20299)
!20465 = distinct !{!20465, !20364, !20466}
!20466 = !DILocation(line: 1441, column: 39, scope: !20299)
!20467 = !DILocation(line: 1443, column: 25, scope: !20299)
!20468 = !DILocation(line: 1443, column: 32, scope: !20299)
!20469 = !DILocation(line: 1443, column: 2, scope: !20299)
!20470 = !DILocation(line: 1443, column: 10, scope: !20299)
!20471 = !DILocation(line: 1443, column: 13, scope: !20299)
!20472 = !DILocation(line: 1443, column: 21, scope: !20299)
!20473 = !DILocation(line: 1444, column: 31, scope: !20299)
!20474 = !DILocation(line: 1444, column: 37, scope: !20299)
!20475 = !DILocation(line: 1444, column: 45, scope: !20299)
!20476 = !DILocation(line: 1444, column: 48, scope: !20299)
!20477 = !DILocation(line: 1444, column: 19, scope: !20299)
!20478 = !DILocation(line: 1444, column: 2, scope: !20299)
!20479 = !DILocation(line: 1444, column: 10, scope: !20299)
!20480 = !DILocation(line: 1444, column: 17, scope: !20299)
!20481 = !DILocation(line: 1445, column: 2, scope: !20299)
!20482 = !DILocation(line: 1446, column: 1, scope: !20299)
!20483 = distinct !DISubprogram(name: "reserve_release_iso_bandwidth", scope: !6239, file: !6239, line: 1296, type: !20484, scopeLine: 1298, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!20484 = !DISubroutineType(types: !20485)
!20485 = !{null, !5814, !5922, !401}
!20486 = !DILocalVariable(name: "ehci", arg: 1, scope: !20483, file: !6239, line: 1296, type: !5814)
!20487 = !DILocation(line: 1296, column: 60, scope: !20483)
!20488 = !DILocalVariable(name: "stream", arg: 2, scope: !20483, file: !6239, line: 1297, type: !5922)
!20489 = !DILocation(line: 1297, column: 27, scope: !20483)
!20490 = !DILocalVariable(name: "sign", arg: 3, scope: !20483, file: !6239, line: 1297, type: !401)
!20491 = !DILocation(line: 1297, column: 39, scope: !20483)
!20492 = !DILocalVariable(name: "uframe", scope: !20483, file: !6239, line: 1299, type: !7)
!20493 = !DILocation(line: 1299, column: 12, scope: !20483)
!20494 = !DILocalVariable(name: "i", scope: !20483, file: !6239, line: 1300, type: !7)
!20495 = !DILocation(line: 1300, column: 12, scope: !20483)
!20496 = !DILocalVariable(name: "j", scope: !20483, file: !6239, line: 1300, type: !7)
!20497 = !DILocation(line: 1300, column: 15, scope: !20483)
!20498 = !DILocalVariable(name: "s_mask", scope: !20483, file: !6239, line: 1301, type: !7)
!20499 = !DILocation(line: 1301, column: 12, scope: !20483)
!20500 = !DILocalVariable(name: "c_mask", scope: !20483, file: !6239, line: 1301, type: !7)
!20501 = !DILocation(line: 1301, column: 20, scope: !20483)
!20502 = !DILocalVariable(name: "m", scope: !20483, file: !6239, line: 1301, type: !7)
!20503 = !DILocation(line: 1301, column: 28, scope: !20483)
!20504 = !DILocalVariable(name: "usecs", scope: !20483, file: !6239, line: 1302, type: !401)
!20505 = !DILocation(line: 1302, column: 8, scope: !20483)
!20506 = !DILocation(line: 1302, column: 16, scope: !20483)
!20507 = !DILocation(line: 1302, column: 24, scope: !20483)
!20508 = !DILocation(line: 1302, column: 27, scope: !20483)
!20509 = !DILocalVariable(name: "c_usecs", scope: !20483, file: !6239, line: 1303, type: !401)
!20510 = !DILocation(line: 1303, column: 8, scope: !20483)
!20511 = !DILocation(line: 1303, column: 18, scope: !20483)
!20512 = !DILocation(line: 1303, column: 26, scope: !20483)
!20513 = !DILocation(line: 1303, column: 29, scope: !20483)
!20514 = !DILocalVariable(name: "tt_usecs", scope: !20483, file: !6239, line: 1304, type: !401)
!20515 = !DILocation(line: 1304, column: 8, scope: !20483)
!20516 = !DILocation(line: 1304, column: 19, scope: !20483)
!20517 = !DILocation(line: 1304, column: 27, scope: !20483)
!20518 = !DILocation(line: 1304, column: 30, scope: !20483)
!20519 = !DILocalVariable(name: "tt", scope: !20483, file: !6239, line: 1305, type: !6096)
!20520 = !DILocation(line: 1305, column: 19, scope: !20483)
!20521 = !DILocation(line: 1307, column: 6, scope: !20522)
!20522 = distinct !DILexicalBlock(scope: !20483, file: !6239, line: 1307, column: 6)
!20523 = !DILocation(line: 1307, column: 14, scope: !20522)
!20524 = !DILocation(line: 1307, column: 17, scope: !20522)
!20525 = !DILocation(line: 1307, column: 23, scope: !20522)
!20526 = !DILocation(line: 1307, column: 6, scope: !20483)
!20527 = !DILocation(line: 1308, column: 3, scope: !20522)
!20528 = !DILocation(line: 1309, column: 11, scope: !20483)
!20529 = !DILocation(line: 1309, column: 19, scope: !20483)
!20530 = !DILocation(line: 1309, column: 22, scope: !20483)
!20531 = !DILocation(line: 1309, column: 31, scope: !20483)
!20532 = !DILocation(line: 1309, column: 9, scope: !20483)
!20533 = !DILocation(line: 1311, column: 16, scope: !20483)
!20534 = !DILocation(line: 1311, column: 22, scope: !20483)
!20535 = !DILocation(line: 1311, column: 36, scope: !20483)
!20536 = !DILocation(line: 1311, column: 44, scope: !20483)
!20537 = !DILocation(line: 1311, column: 2, scope: !20483)
!20538 = !DILocation(line: 1313, column: 6, scope: !20539)
!20539 = distinct !DILexicalBlock(scope: !20483, file: !6239, line: 1313, column: 6)
!20540 = !DILocation(line: 1313, column: 11, scope: !20539)
!20541 = !DILocation(line: 1313, column: 6, scope: !20483)
!20542 = !DILocation(line: 1314, column: 12, scope: !20543)
!20543 = distinct !DILexicalBlock(scope: !20539, file: !6239, line: 1313, column: 16)
!20544 = !DILocation(line: 1314, column: 11, scope: !20543)
!20545 = !DILocation(line: 1314, column: 9, scope: !20543)
!20546 = !DILocation(line: 1315, column: 14, scope: !20543)
!20547 = !DILocation(line: 1315, column: 13, scope: !20543)
!20548 = !DILocation(line: 1315, column: 11, scope: !20543)
!20549 = !DILocation(line: 1316, column: 15, scope: !20543)
!20550 = !DILocation(line: 1316, column: 14, scope: !20543)
!20551 = !DILocation(line: 1316, column: 12, scope: !20543)
!20552 = !DILocation(line: 1317, column: 2, scope: !20543)
!20553 = !DILocation(line: 1319, column: 7, scope: !20554)
!20554 = distinct !DILexicalBlock(scope: !20483, file: !6239, line: 1319, column: 6)
!20555 = !DILocation(line: 1319, column: 15, scope: !20554)
!20556 = !DILocation(line: 1319, column: 6, scope: !20483)
!20557 = !DILocation(line: 1320, column: 12, scope: !20558)
!20558 = distinct !DILexicalBlock(scope: !20559, file: !6239, line: 1320, column: 3)
!20559 = distinct !DILexicalBlock(scope: !20554, file: !6239, line: 1319, column: 23)
!20560 = !DILocation(line: 1320, column: 21, scope: !20558)
!20561 = !DILocation(line: 1320, column: 29, scope: !20558)
!20562 = !DILocation(line: 1320, column: 32, scope: !20558)
!20563 = !DILocation(line: 1320, column: 19, scope: !20558)
!20564 = !DILocation(line: 1320, column: 10, scope: !20558)
!20565 = !DILocation(line: 1320, column: 8, scope: !20558)
!20566 = !DILocation(line: 1320, column: 42, scope: !20567)
!20567 = distinct !DILexicalBlock(scope: !20558, file: !6239, line: 1320, column: 3)
!20568 = !DILocation(line: 1320, column: 44, scope: !20567)
!20569 = !DILocation(line: 1320, column: 3, scope: !20558)
!20570 = !DILocation(line: 1322, column: 26, scope: !20567)
!20571 = !DILocation(line: 1322, column: 4, scope: !20567)
!20572 = !DILocation(line: 1322, column: 10, scope: !20567)
!20573 = !DILocation(line: 1322, column: 20, scope: !20567)
!20574 = !DILocation(line: 1322, column: 23, scope: !20567)
!20575 = !DILocation(line: 1321, column: 10, scope: !20567)
!20576 = !DILocation(line: 1321, column: 18, scope: !20567)
!20577 = !DILocation(line: 1321, column: 21, scope: !20567)
!20578 = !DILocation(line: 1321, column: 7, scope: !20567)
!20579 = !DILocation(line: 1320, column: 3, scope: !20567)
!20580 = distinct !{!20580, !20569, !20581}
!20581 = !DILocation(line: 1322, column: 26, scope: !20558)
!20582 = !DILocation(line: 1324, column: 2, scope: !20559)
!20583 = !DILocation(line: 1325, column: 12, scope: !20584)
!20584 = distinct !DILexicalBlock(scope: !20554, file: !6239, line: 1324, column: 9)
!20585 = !DILocation(line: 1325, column: 20, scope: !20584)
!20586 = !DILocation(line: 1325, column: 23, scope: !20584)
!20587 = !DILocation(line: 1325, column: 10, scope: !20584)
!20588 = !DILocation(line: 1326, column: 12, scope: !20584)
!20589 = !DILocation(line: 1326, column: 19, scope: !20584)
!20590 = !DILocation(line: 1326, column: 10, scope: !20584)
!20591 = !DILocation(line: 1329, column: 12, scope: !20592)
!20592 = distinct !DILexicalBlock(scope: !20584, file: !6239, line: 1329, column: 3)
!20593 = !DILocation(line: 1329, column: 10, scope: !20592)
!20594 = !DILocation(line: 1329, column: 8, scope: !20592)
!20595 = !DILocation(line: 1329, column: 20, scope: !20596)
!20596 = distinct !DILexicalBlock(scope: !20592, file: !6239, line: 1329, column: 3)
!20597 = !DILocation(line: 1329, column: 22, scope: !20596)
!20598 = !DILocation(line: 1329, column: 3, scope: !20592)
!20599 = !DILocation(line: 1331, column: 14, scope: !20600)
!20600 = distinct !DILexicalBlock(scope: !20601, file: !6239, line: 1331, column: 4)
!20601 = distinct !DILexicalBlock(scope: !20596, file: !6239, line: 1330, column: 33)
!20602 = !DILocation(line: 1331, column: 22, scope: !20600)
!20603 = !DILocation(line: 1331, column: 25, scope: !20600)
!20604 = !DILocation(line: 1331, column: 12, scope: !20600)
!20605 = !DILocation(line: 1331, column: 44, scope: !20600)
!20606 = !DILocation(line: 1331, column: 41, scope: !20600)
!20607 = !DILocation(line: 1331, column: 37, scope: !20600)
!20608 = !DILocation(line: 1331, column: 9, scope: !20600)
!20609 = !DILocation(line: 1331, column: 48, scope: !20610)
!20610 = distinct !DILexicalBlock(scope: !20600, file: !6239, line: 1331, column: 4)
!20611 = !DILocation(line: 1331, column: 50, scope: !20610)
!20612 = !DILocation(line: 1331, column: 4, scope: !20600)
!20613 = !DILocation(line: 1333, column: 9, scope: !20614)
!20614 = distinct !DILexicalBlock(scope: !20615, file: !6239, line: 1333, column: 9)
!20615 = distinct !DILexicalBlock(scope: !20610, file: !6239, line: 1332, column: 22)
!20616 = !DILocation(line: 1333, column: 18, scope: !20614)
!20617 = !DILocation(line: 1333, column: 16, scope: !20614)
!20618 = !DILocation(line: 1333, column: 9, scope: !20615)
!20619 = !DILocation(line: 1334, column: 30, scope: !20614)
!20620 = !DILocation(line: 1334, column: 6, scope: !20614)
!20621 = !DILocation(line: 1334, column: 12, scope: !20614)
!20622 = !DILocation(line: 1334, column: 22, scope: !20614)
!20623 = !DILocation(line: 1334, column: 24, scope: !20614)
!20624 = !DILocation(line: 1334, column: 23, scope: !20614)
!20625 = !DILocation(line: 1334, column: 27, scope: !20614)
!20626 = !DILocation(line: 1335, column: 14, scope: !20627)
!20627 = distinct !DILexicalBlock(scope: !20614, file: !6239, line: 1335, column: 14)
!20628 = !DILocation(line: 1335, column: 23, scope: !20627)
!20629 = !DILocation(line: 1335, column: 21, scope: !20627)
!20630 = !DILocation(line: 1335, column: 14, scope: !20614)
!20631 = !DILocation(line: 1336, column: 30, scope: !20627)
!20632 = !DILocation(line: 1336, column: 6, scope: !20627)
!20633 = !DILocation(line: 1336, column: 12, scope: !20627)
!20634 = !DILocation(line: 1336, column: 22, scope: !20627)
!20635 = !DILocation(line: 1336, column: 24, scope: !20627)
!20636 = !DILocation(line: 1336, column: 23, scope: !20627)
!20637 = !DILocation(line: 1336, column: 27, scope: !20627)
!20638 = !DILocation(line: 1337, column: 4, scope: !20615)
!20639 = !DILocation(line: 1332, column: 7, scope: !20610)
!20640 = !DILocation(line: 1332, column: 14, scope: !20610)
!20641 = !DILocation(line: 1331, column: 4, scope: !20610)
!20642 = distinct !{!20642, !20612, !20643}
!20643 = !DILocation(line: 1337, column: 4, scope: !20600)
!20644 = !DILocation(line: 1338, column: 3, scope: !20601)
!20645 = !DILocation(line: 1330, column: 10, scope: !20596)
!20646 = !DILocation(line: 1330, column: 18, scope: !20596)
!20647 = !DILocation(line: 1330, column: 21, scope: !20596)
!20648 = !DILocation(line: 1330, column: 7, scope: !20596)
!20649 = !DILocation(line: 1329, column: 3, scope: !20596)
!20650 = distinct !{!20650, !20598, !20651}
!20651 = !DILocation(line: 1338, column: 3, scope: !20592)
!20652 = !DILocation(line: 1340, column: 16, scope: !20584)
!20653 = !DILocation(line: 1340, column: 24, scope: !20584)
!20654 = !DILocation(line: 1340, column: 27, scope: !20584)
!20655 = !DILocation(line: 1340, column: 8, scope: !20584)
!20656 = !DILocation(line: 1340, column: 6, scope: !20584)
!20657 = !DILocation(line: 1341, column: 7, scope: !20658)
!20658 = distinct !DILexicalBlock(scope: !20584, file: !6239, line: 1341, column: 7)
!20659 = !DILocation(line: 1341, column: 12, scope: !20658)
!20660 = !DILocation(line: 1341, column: 7, scope: !20584)
!20661 = !DILocation(line: 1342, column: 19, scope: !20658)
!20662 = !DILocation(line: 1342, column: 27, scope: !20658)
!20663 = !DILocation(line: 1342, column: 30, scope: !20658)
!20664 = !DILocation(line: 1342, column: 40, scope: !20658)
!20665 = !DILocation(line: 1342, column: 44, scope: !20658)
!20666 = !DILocation(line: 1342, column: 4, scope: !20658)
!20667 = !DILocation(line: 1344, column: 14, scope: !20658)
!20668 = !DILocation(line: 1344, column: 22, scope: !20658)
!20669 = !DILocation(line: 1344, column: 25, scope: !20658)
!20670 = !DILocation(line: 1344, column: 4, scope: !20658)
!20671 = !DILocation(line: 1346, column: 12, scope: !20672)
!20672 = distinct !DILexicalBlock(scope: !20584, file: !6239, line: 1346, column: 3)
!20673 = !DILocation(line: 1346, column: 19, scope: !20672)
!20674 = !DILocation(line: 1346, column: 10, scope: !20672)
!20675 = !DILocation(line: 1346, column: 8, scope: !20672)
!20676 = !DILocation(line: 1346, column: 25, scope: !20677)
!20677 = distinct !DILexicalBlock(scope: !20672, file: !6239, line: 1346, column: 3)
!20678 = !DILocation(line: 1346, column: 27, scope: !20677)
!20679 = !DILocation(line: 1346, column: 3, scope: !20672)
!20680 = !DILocation(line: 1348, column: 24, scope: !20677)
!20681 = !DILocation(line: 1348, column: 4, scope: !20677)
!20682 = !DILocation(line: 1348, column: 8, scope: !20677)
!20683 = !DILocation(line: 1348, column: 18, scope: !20677)
!20684 = !DILocation(line: 1348, column: 21, scope: !20677)
!20685 = !DILocation(line: 1347, column: 10, scope: !20677)
!20686 = !DILocation(line: 1347, column: 18, scope: !20677)
!20687 = !DILocation(line: 1347, column: 21, scope: !20677)
!20688 = !DILocation(line: 1347, column: 7, scope: !20677)
!20689 = !DILocation(line: 1346, column: 3, scope: !20677)
!20690 = distinct !{!20690, !20679, !20691}
!20691 = !DILocation(line: 1348, column: 24, scope: !20672)
!20692 = !DILocation(line: 1350, column: 1, scope: !20483)
!20693 = distinct !DISubprogram(name: "itd_init", scope: !6239, file: !6239, line: 1654, type: !20694, scopeLine: 1656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!20694 = !DISubroutineType(types: !20695)
!20695 = !{null, !5814, !5922, !5907}
!20696 = !DILocalVariable(name: "ehci", arg: 1, scope: !20693, file: !6239, line: 1654, type: !5814)
!20697 = !DILocation(line: 1654, column: 27, scope: !20693)
!20698 = !DILocalVariable(name: "stream", arg: 2, scope: !20693, file: !6239, line: 1654, type: !5922)
!20699 = !DILocation(line: 1654, column: 57, scope: !20693)
!20700 = !DILocalVariable(name: "itd", arg: 3, scope: !20693, file: !6239, line: 1655, type: !5907)
!20701 = !DILocation(line: 1655, column: 20, scope: !20693)
!20702 = !DILocalVariable(name: "i", scope: !20693, file: !6239, line: 1657, type: !401)
!20703 = !DILocation(line: 1657, column: 6, scope: !20693)
!20704 = !DILocation(line: 1660, column: 17, scope: !20693)
!20705 = !DILocation(line: 1660, column: 2, scope: !20693)
!20706 = !DILocation(line: 1660, column: 7, scope: !20693)
!20707 = !DILocation(line: 1660, column: 15, scope: !20693)
!20708 = !DILocation(line: 1661, column: 20, scope: !20693)
!20709 = !DILocation(line: 1661, column: 28, scope: !20693)
!20710 = !DILocation(line: 1661, column: 2, scope: !20693)
!20711 = !DILocation(line: 1661, column: 7, scope: !20693)
!20712 = !DILocation(line: 1661, column: 18, scope: !20693)
!20713 = !DILocation(line: 1662, column: 20, scope: !20693)
!20714 = !DILocation(line: 1662, column: 28, scope: !20693)
!20715 = !DILocation(line: 1662, column: 2, scope: !20693)
!20716 = !DILocation(line: 1662, column: 7, scope: !20693)
!20717 = !DILocation(line: 1662, column: 18, scope: !20693)
!20718 = !DILocation(line: 1663, column: 20, scope: !20693)
!20719 = !DILocation(line: 1663, column: 28, scope: !20693)
!20720 = !DILocation(line: 1663, column: 2, scope: !20693)
!20721 = !DILocation(line: 1663, column: 7, scope: !20693)
!20722 = !DILocation(line: 1663, column: 18, scope: !20693)
!20723 = !DILocation(line: 1665, column: 9, scope: !20724)
!20724 = distinct !DILexicalBlock(scope: !20693, file: !6239, line: 1665, column: 2)
!20725 = !DILocation(line: 1665, column: 7, scope: !20724)
!20726 = !DILocation(line: 1665, column: 14, scope: !20727)
!20727 = distinct !DILexicalBlock(scope: !20724, file: !6239, line: 1665, column: 2)
!20728 = !DILocation(line: 1665, column: 16, scope: !20727)
!20729 = !DILocation(line: 1665, column: 2, scope: !20724)
!20730 = !DILocation(line: 1666, column: 3, scope: !20727)
!20731 = !DILocation(line: 1666, column: 8, scope: !20727)
!20732 = !DILocation(line: 1666, column: 14, scope: !20727)
!20733 = !DILocation(line: 1666, column: 17, scope: !20727)
!20734 = !DILocation(line: 1665, column: 22, scope: !20727)
!20735 = !DILocation(line: 1665, column: 2, scope: !20727)
!20736 = distinct !{!20736, !20729, !20737}
!20737 = !DILocation(line: 1666, column: 20, scope: !20724)
!20738 = !DILocation(line: 1669, column: 1, scope: !20693)
!20739 = distinct !DISubprogram(name: "itd_patch", scope: !6239, file: !6239, line: 1672, type: !20740, scopeLine: 1679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!20740 = !DISubroutineType(types: !20741)
!20741 = !{null, !5814, !5907, !19021, !7, !1062}
!20742 = !DILocalVariable(name: "ehci", arg: 1, scope: !20739, file: !6239, line: 1673, type: !5814)
!20743 = !DILocation(line: 1673, column: 20, scope: !20739)
!20744 = !DILocalVariable(name: "itd", arg: 2, scope: !20739, file: !6239, line: 1674, type: !5907)
!20745 = !DILocation(line: 1674, column: 20, scope: !20739)
!20746 = !DILocalVariable(name: "iso_sched", arg: 3, scope: !20739, file: !6239, line: 1675, type: !19021)
!20747 = !DILocation(line: 1675, column: 25, scope: !20739)
!20748 = !DILocalVariable(name: "index", arg: 4, scope: !20739, file: !6239, line: 1676, type: !7)
!20749 = !DILocation(line: 1676, column: 12, scope: !20739)
!20750 = !DILocalVariable(name: "uframe", arg: 5, scope: !20739, file: !6239, line: 1677, type: !1062)
!20751 = !DILocation(line: 1677, column: 8, scope: !20739)
!20752 = !DILocalVariable(name: "uf", scope: !20739, file: !6239, line: 1680, type: !20138)
!20753 = !DILocation(line: 1680, column: 26, scope: !20739)
!20754 = !DILocation(line: 1680, column: 32, scope: !20739)
!20755 = !DILocation(line: 1680, column: 43, scope: !20739)
!20756 = !DILocation(line: 1680, column: 50, scope: !20739)
!20757 = !DILocalVariable(name: "pg", scope: !20739, file: !6239, line: 1681, type: !7)
!20758 = !DILocation(line: 1681, column: 12, scope: !20739)
!20759 = !DILocation(line: 1681, column: 17, scope: !20739)
!20760 = !DILocation(line: 1681, column: 22, scope: !20739)
!20761 = !DILocation(line: 1685, column: 9, scope: !20739)
!20762 = !DILocation(line: 1686, column: 23, scope: !20739)
!20763 = !DILocation(line: 1686, column: 2, scope: !20739)
!20764 = !DILocation(line: 1686, column: 7, scope: !20739)
!20765 = !DILocation(line: 1686, column: 13, scope: !20739)
!20766 = !DILocation(line: 1686, column: 21, scope: !20739)
!20767 = !DILocation(line: 1688, column: 32, scope: !20739)
!20768 = !DILocation(line: 1688, column: 36, scope: !20739)
!20769 = !DILocation(line: 1688, column: 2, scope: !20739)
!20770 = !DILocation(line: 1688, column: 7, scope: !20739)
!20771 = !DILocation(line: 1688, column: 22, scope: !20739)
!20772 = !DILocation(line: 1688, column: 30, scope: !20739)
!20773 = !DILocation(line: 1689, column: 45, scope: !20739)
!20774 = !DILocation(line: 1689, column: 51, scope: !20739)
!20775 = !DILocation(line: 1689, column: 54, scope: !20739)
!20776 = !DILocation(line: 1689, column: 33, scope: !20739)
!20777 = !DILocation(line: 1689, column: 2, scope: !20739)
!20778 = !DILocation(line: 1689, column: 7, scope: !20739)
!20779 = !DILocation(line: 1689, column: 22, scope: !20739)
!20780 = !DILocation(line: 1689, column: 30, scope: !20739)
!20781 = !DILocation(line: 1690, column: 34, scope: !20739)
!20782 = !DILocation(line: 1690, column: 40, scope: !20739)
!20783 = !DILocation(line: 1690, column: 44, scope: !20739)
!20784 = !DILocation(line: 1690, column: 49, scope: !20739)
!20785 = !DILocation(line: 1690, column: 22, scope: !20739)
!20786 = !DILocation(line: 1690, column: 2, scope: !20739)
!20787 = !DILocation(line: 1690, column: 7, scope: !20739)
!20788 = !DILocation(line: 1690, column: 15, scope: !20739)
!20789 = !DILocation(line: 1690, column: 19, scope: !20739)
!20790 = !DILocation(line: 1691, column: 37, scope: !20739)
!20791 = !DILocation(line: 1691, column: 49, scope: !20739)
!20792 = !DILocation(line: 1691, column: 53, scope: !20739)
!20793 = !DILocation(line: 1691, column: 58, scope: !20739)
!20794 = !DILocation(line: 1691, column: 43, scope: !20739)
!20795 = !DILocation(line: 1691, column: 25, scope: !20739)
!20796 = !DILocation(line: 1691, column: 2, scope: !20739)
!20797 = !DILocation(line: 1691, column: 7, scope: !20739)
!20798 = !DILocation(line: 1691, column: 18, scope: !20739)
!20799 = !DILocation(line: 1691, column: 22, scope: !20739)
!20800 = !DILocation(line: 1694, column: 6, scope: !20801)
!20801 = distinct !DILexicalBlock(scope: !20739, file: !6239, line: 1694, column: 6)
!20802 = !DILocation(line: 1694, column: 6, scope: !20739)
!20803 = !DILocalVariable(name: "bufp", scope: !20804, file: !6239, line: 1695, type: !558)
!20804 = distinct !DILexicalBlock(scope: !20801, file: !6239, line: 1694, column: 27)
!20805 = !DILocation(line: 1695, column: 7, scope: !20804)
!20806 = !DILocation(line: 1695, column: 14, scope: !20804)
!20807 = !DILocation(line: 1695, column: 18, scope: !20804)
!20808 = !DILocation(line: 1695, column: 23, scope: !20804)
!20809 = !DILocation(line: 1697, column: 13, scope: !20804)
!20810 = !DILocation(line: 1697, column: 3, scope: !20804)
!20811 = !DILocation(line: 1697, column: 8, scope: !20804)
!20812 = !DILocation(line: 1697, column: 11, scope: !20804)
!20813 = !DILocation(line: 1698, column: 35, scope: !20804)
!20814 = !DILocation(line: 1698, column: 41, scope: !20804)
!20815 = !DILocation(line: 1698, column: 46, scope: !20804)
!20816 = !DILocation(line: 1698, column: 23, scope: !20804)
!20817 = !DILocation(line: 1698, column: 3, scope: !20804)
!20818 = !DILocation(line: 1698, column: 8, scope: !20804)
!20819 = !DILocation(line: 1698, column: 16, scope: !20804)
!20820 = !DILocation(line: 1698, column: 20, scope: !20804)
!20821 = !DILocation(line: 1699, column: 38, scope: !20804)
!20822 = !DILocation(line: 1699, column: 50, scope: !20804)
!20823 = !DILocation(line: 1699, column: 55, scope: !20804)
!20824 = !DILocation(line: 1699, column: 44, scope: !20804)
!20825 = !DILocation(line: 1699, column: 26, scope: !20804)
!20826 = !DILocation(line: 1699, column: 3, scope: !20804)
!20827 = !DILocation(line: 1699, column: 8, scope: !20804)
!20828 = !DILocation(line: 1699, column: 19, scope: !20804)
!20829 = !DILocation(line: 1699, column: 23, scope: !20804)
!20830 = !DILocation(line: 1700, column: 2, scope: !20804)
!20831 = !DILocation(line: 1701, column: 1, scope: !20739)
!20832 = distinct !DISubprogram(name: "itd_link", scope: !6239, file: !6239, line: 1704, type: !20833, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!20833 = !DISubroutineType(types: !20834)
!20834 = !{null, !5814, !7, !5907}
!20835 = !DILocalVariable(name: "ehci", arg: 1, scope: !20832, file: !6239, line: 1704, type: !5814)
!20836 = !DILocation(line: 1704, column: 27, scope: !20832)
!20837 = !DILocalVariable(name: "frame", arg: 2, scope: !20832, file: !6239, line: 1704, type: !7)
!20838 = !DILocation(line: 1704, column: 42, scope: !20832)
!20839 = !DILocalVariable(name: "itd", arg: 3, scope: !20832, file: !6239, line: 1704, type: !5907)
!20840 = !DILocation(line: 1704, column: 66, scope: !20832)
!20841 = !DILocalVariable(name: "prev", scope: !20832, file: !6239, line: 1706, type: !6030)
!20842 = !DILocation(line: 1706, column: 21, scope: !20832)
!20843 = !DILocation(line: 1706, column: 29, scope: !20832)
!20844 = !DILocation(line: 1706, column: 35, scope: !20832)
!20845 = !DILocation(line: 1706, column: 43, scope: !20832)
!20846 = !DILocalVariable(name: "hw_p", scope: !20832, file: !6239, line: 1707, type: !5988)
!20847 = !DILocation(line: 1707, column: 12, scope: !20832)
!20848 = !DILocation(line: 1707, column: 20, scope: !20832)
!20849 = !DILocation(line: 1707, column: 26, scope: !20832)
!20850 = !DILocation(line: 1707, column: 35, scope: !20832)
!20851 = !DILocalVariable(name: "here", scope: !20832, file: !6239, line: 1708, type: !5903)
!20852 = !DILocation(line: 1708, column: 20, scope: !20832)
!20853 = !DILocation(line: 1708, column: 28, scope: !20832)
!20854 = !DILocation(line: 1708, column: 27, scope: !20832)
!20855 = !DILocalVariable(name: "type", scope: !20832, file: !6239, line: 1709, type: !5103)
!20856 = !DILocation(line: 1709, column: 11, scope: !20832)
!20857 = !DILocation(line: 1712, column: 2, scope: !20832)
!20858 = !DILocation(line: 1712, column: 14, scope: !20832)
!20859 = !DILocation(line: 1713, column: 10, scope: !20860)
!20860 = distinct !DILexicalBlock(scope: !20832, file: !6239, line: 1712, column: 19)
!20861 = !DILocation(line: 1713, column: 8, scope: !20860)
!20862 = !DILocation(line: 1714, column: 7, scope: !20863)
!20863 = distinct !DILexicalBlock(scope: !20860, file: !6239, line: 1714, column: 7)
!20864 = !DILocation(line: 1714, column: 27, scope: !20863)
!20865 = !DILocation(line: 1714, column: 15, scope: !20863)
!20866 = !DILocation(line: 1714, column: 12, scope: !20863)
!20867 = !DILocation(line: 1714, column: 7, scope: !20860)
!20868 = !DILocation(line: 1715, column: 4, scope: !20863)
!20869 = !DILocation(line: 1716, column: 31, scope: !20860)
!20870 = !DILocation(line: 1716, column: 37, scope: !20860)
!20871 = !DILocation(line: 1716, column: 43, scope: !20860)
!20872 = !DILocation(line: 1716, column: 10, scope: !20860)
!20873 = !DILocation(line: 1716, column: 8, scope: !20860)
!20874 = !DILocation(line: 1717, column: 31, scope: !20860)
!20875 = !DILocation(line: 1717, column: 44, scope: !20860)
!20876 = !DILocation(line: 1717, column: 10, scope: !20860)
!20877 = !DILocation(line: 1717, column: 8, scope: !20860)
!20878 = !DILocation(line: 1718, column: 11, scope: !20860)
!20879 = !DILocation(line: 1718, column: 10, scope: !20860)
!20880 = distinct !{!20880, !20857, !20881}
!20881 = !DILocation(line: 1719, column: 2, scope: !20832)
!20882 = !DILocation(line: 1721, column: 2, scope: !20832)
!20883 = !DILocation(line: 1721, column: 7, scope: !20832)
!20884 = !DILocation(line: 1721, column: 18, scope: !20832)
!20885 = !DILocation(line: 1722, column: 18, scope: !20832)
!20886 = !DILocation(line: 1722, column: 17, scope: !20832)
!20887 = !DILocation(line: 1722, column: 2, scope: !20832)
!20888 = !DILocation(line: 1722, column: 7, scope: !20832)
!20889 = !DILocation(line: 1722, column: 15, scope: !20832)
!20890 = !DILocation(line: 1723, column: 14, scope: !20832)
!20891 = !DILocation(line: 1723, column: 2, scope: !20832)
!20892 = !DILocation(line: 1723, column: 8, scope: !20832)
!20893 = !DILocation(line: 1723, column: 12, scope: !20832)
!20894 = !DILocation(line: 1724, column: 15, scope: !20832)
!20895 = !DILocation(line: 1724, column: 2, scope: !20832)
!20896 = !DILocation(line: 1724, column: 7, scope: !20832)
!20897 = !DILocation(line: 1724, column: 13, scope: !20832)
!20898 = !DILocation(line: 1725, column: 2, scope: !20832)
!20899 = !{i32 -2139805999}
!20900 = !DILocation(line: 1726, column: 22, scope: !20832)
!20901 = !DILocation(line: 1726, column: 28, scope: !20832)
!20902 = !DILocation(line: 1726, column: 33, scope: !20832)
!20903 = !DILocation(line: 1726, column: 10, scope: !20832)
!20904 = !DILocation(line: 1726, column: 3, scope: !20832)
!20905 = !DILocation(line: 1726, column: 8, scope: !20832)
!20906 = !DILocation(line: 1727, column: 1, scope: !20832)
!20907 = distinct !DISubprogram(name: "sitd_urb_transaction", scope: !6239, file: !6239, line: 2021, type: !18972, scopeLine: 2027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!20908 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !20909)
!20909 = distinct !DILocation(line: 2068, column: 5, scope: !20910)
!20910 = distinct !DILexicalBlock(scope: !20911, file: !6239, line: 2066, column: 15)
!20911 = distinct !DILexicalBlock(scope: !20912, file: !6239, line: 2066, column: 8)
!20912 = distinct !DILexicalBlock(scope: !20913, file: !6239, line: 2060, column: 10)
!20913 = distinct !DILexicalBlock(scope: !20914, file: !6239, line: 2053, column: 7)
!20914 = distinct !DILexicalBlock(scope: !20915, file: !6239, line: 2042, column: 47)
!20915 = distinct !DILexicalBlock(scope: !20916, file: !6239, line: 2042, column: 2)
!20916 = distinct !DILexicalBlock(scope: !20907, file: !6239, line: 2042, column: 2)
!20917 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !20909)
!20918 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !20919)
!20919 = distinct !DILocation(line: 2065, column: 4, scope: !20920)
!20920 = distinct !DILexicalBlock(scope: !20921, file: !6239, line: 2065, column: 4)
!20921 = distinct !DILexicalBlock(scope: !20922, file: !6239, line: 2065, column: 4)
!20922 = distinct !DILexicalBlock(scope: !20923, file: !6239, line: 2065, column: 4)
!20923 = distinct !DILexicalBlock(scope: !20924, file: !6239, line: 2065, column: 4)
!20924 = distinct !DILexicalBlock(scope: !20912, file: !6239, line: 2065, column: 4)
!20925 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !20926)
!20926 = distinct !DILocation(line: 2062, column: 4, scope: !20912)
!20927 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !20926)
!20928 = !DILocation(line: 407, column: 64, scope: !6710, inlinedAt: !20929)
!20929 = distinct !DILocation(line: 2083, column: 2, scope: !20907)
!20930 = !DILocation(line: 407, column: 84, scope: !6710, inlinedAt: !20929)
!20931 = !DILocation(line: 327, column: 67, scope: !6696, inlinedAt: !20932)
!20932 = distinct !DILocation(line: 2041, column: 2, scope: !20933)
!20933 = distinct !DILexicalBlock(scope: !20934, file: !6239, line: 2041, column: 2)
!20934 = distinct !DILexicalBlock(scope: !20935, file: !6239, line: 2041, column: 2)
!20935 = distinct !DILexicalBlock(scope: !20936, file: !6239, line: 2041, column: 2)
!20936 = distinct !DILexicalBlock(scope: !20937, file: !6239, line: 2041, column: 2)
!20937 = distinct !DILexicalBlock(scope: !20907, file: !6239, line: 2041, column: 2)
!20938 = !DILocalVariable(name: "stream", arg: 1, scope: !20907, file: !6239, line: 2022, type: !5922)
!20939 = !DILocation(line: 2022, column: 26, scope: !20907)
!20940 = !DILocalVariable(name: "ehci", arg: 2, scope: !20907, file: !6239, line: 2023, type: !5814)
!20941 = !DILocation(line: 2023, column: 20, scope: !20907)
!20942 = !DILocalVariable(name: "urb", arg: 3, scope: !20907, file: !6239, line: 2024, type: !5343)
!20943 = !DILocation(line: 2024, column: 15, scope: !20907)
!20944 = !DILocalVariable(name: "mem_flags", arg: 4, scope: !20907, file: !6239, line: 2025, type: !946)
!20945 = !DILocation(line: 2025, column: 10, scope: !20907)
!20946 = !DILocalVariable(name: "sitd", scope: !20907, file: !6239, line: 2028, type: !5961)
!20947 = !DILocation(line: 2028, column: 20, scope: !20907)
!20948 = !DILocalVariable(name: "sitd_dma", scope: !20907, file: !6239, line: 2029, type: !2064)
!20949 = !DILocation(line: 2029, column: 14, scope: !20907)
!20950 = !DILocalVariable(name: "i", scope: !20907, file: !6239, line: 2030, type: !401)
!20951 = !DILocation(line: 2030, column: 8, scope: !20907)
!20952 = !DILocalVariable(name: "iso_sched", scope: !20907, file: !6239, line: 2031, type: !19021)
!20953 = !DILocation(line: 2031, column: 25, scope: !20907)
!20954 = !DILocalVariable(name: "flags", scope: !20907, file: !6239, line: 2032, type: !465)
!20955 = !DILocation(line: 2032, column: 17, scope: !20907)
!20956 = !DILocation(line: 2034, column: 30, scope: !20907)
!20957 = !DILocation(line: 2034, column: 35, scope: !20907)
!20958 = !DILocation(line: 2034, column: 54, scope: !20907)
!20959 = !DILocation(line: 2034, column: 14, scope: !20907)
!20960 = !DILocation(line: 2034, column: 12, scope: !20907)
!20961 = !DILocation(line: 2035, column: 6, scope: !20962)
!20962 = distinct !DILexicalBlock(scope: !20907, file: !6239, line: 2035, column: 6)
!20963 = !DILocation(line: 2035, column: 16, scope: !20962)
!20964 = !DILocation(line: 2035, column: 6, scope: !20907)
!20965 = !DILocation(line: 2036, column: 3, scope: !20962)
!20966 = !DILocation(line: 2038, column: 18, scope: !20907)
!20967 = !DILocation(line: 2038, column: 24, scope: !20907)
!20968 = !DILocation(line: 2038, column: 35, scope: !20907)
!20969 = !DILocation(line: 2038, column: 43, scope: !20907)
!20970 = !DILocation(line: 2038, column: 2, scope: !20907)
!20971 = !DILocation(line: 2041, column: 2, scope: !20907)
!20972 = !DILocation(line: 2041, column: 2, scope: !20937)
!20973 = !DILocalVariable(name: "__dummy", scope: !20974, file: !6239, line: 2041, type: !465)
!20974 = distinct !DILexicalBlock(scope: !20936, file: !6239, line: 2041, column: 2)
!20975 = !DILocation(line: 2041, column: 2, scope: !20974)
!20976 = !DILocalVariable(name: "__dummy2", scope: !20974, file: !6239, line: 2041, type: !465)
!20977 = !DILocation(line: 2041, column: 2, scope: !20936)
!20978 = !DILocation(line: 2041, column: 2, scope: !20935)
!20979 = !DILocation(line: 2041, column: 2, scope: !20980)
!20980 = distinct !DILexicalBlock(scope: !20935, file: !6239, line: 2041, column: 2)
!20981 = !DILocalVariable(name: "__dummy", scope: !20982, file: !6239, line: 2041, type: !465)
!20982 = distinct !DILexicalBlock(scope: !20983, file: !6239, line: 2041, column: 2)
!20983 = distinct !DILexicalBlock(scope: !20980, file: !6239, line: 2041, column: 2)
!20984 = !DILocation(line: 2041, column: 2, scope: !20982)
!20985 = !DILocalVariable(name: "__dummy2", scope: !20982, file: !6239, line: 2041, type: !465)
!20986 = !DILocation(line: 2041, column: 2, scope: !20983)
!20987 = !DILocation(line: 2041, column: 2, scope: !20934)
!20988 = !{i32 -2139800112}
!20989 = !DILocation(line: 2041, column: 2, scope: !20933)
!20990 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !20932)
!20991 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !20932)
!20992 = !DILocation(line: 2042, column: 9, scope: !20916)
!20993 = !DILocation(line: 2042, column: 7, scope: !20916)
!20994 = !DILocation(line: 2042, column: 14, scope: !20915)
!20995 = !DILocation(line: 2042, column: 18, scope: !20915)
!20996 = !DILocation(line: 2042, column: 23, scope: !20915)
!20997 = !DILocation(line: 2042, column: 16, scope: !20915)
!20998 = !DILocation(line: 2042, column: 2, scope: !20916)
!20999 = !DILocation(line: 2053, column: 7, scope: !20913)
!21000 = !DILocation(line: 2053, column: 7, scope: !20914)
!21001 = !DILocalVariable(name: "__mptr", scope: !21002, file: !6239, line: 2054, type: !341)
!21002 = distinct !DILexicalBlock(scope: !21003, file: !6239, line: 2054, column: 11)
!21003 = distinct !DILexicalBlock(scope: !20913, file: !6239, line: 2053, column: 48)
!21004 = !DILocation(line: 2054, column: 11, scope: !21002)
!21005 = !DILocation(line: 2054, column: 11, scope: !21006)
!21006 = distinct !DILexicalBlock(scope: !21002, file: !6239, line: 2054, column: 11)
!21007 = !DILocation(line: 2054, column: 9, scope: !21003)
!21008 = !DILocation(line: 2056, column: 8, scope: !21009)
!21009 = distinct !DILexicalBlock(scope: !21003, file: !6239, line: 2056, column: 8)
!21010 = !DILocation(line: 2056, column: 14, scope: !21009)
!21011 = !DILocation(line: 2056, column: 23, scope: !21009)
!21012 = !DILocation(line: 2056, column: 29, scope: !21009)
!21013 = !DILocation(line: 2056, column: 20, scope: !21009)
!21014 = !DILocation(line: 2056, column: 8, scope: !21003)
!21015 = !DILocation(line: 2057, column: 5, scope: !21009)
!21016 = !DILocation(line: 2058, column: 14, scope: !21003)
!21017 = !DILocation(line: 2058, column: 20, scope: !21003)
!21018 = !DILocation(line: 2058, column: 4, scope: !21003)
!21019 = !DILocation(line: 2059, column: 15, scope: !21003)
!21020 = !DILocation(line: 2059, column: 21, scope: !21003)
!21021 = !DILocation(line: 2059, column: 13, scope: !21003)
!21022 = !DILocation(line: 2060, column: 3, scope: !21003)
!21023 = !DILocation(line: 2060, column: 10, scope: !20913)
!21024 = !DILabel(scope: !20912, name: "alloc_sitd", file: !6239, line: 2061)
!21025 = !DILocation(line: 2061, column: 2, scope: !20912)
!21026 = !DILocation(line: 2062, column: 28, scope: !20912)
!21027 = !DILocation(line: 2062, column: 34, scope: !20912)
!21028 = !DILocation(line: 2062, column: 40, scope: !20912)
!21029 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !20926)
!21030 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !20926)
!21031 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !20926)
!21032 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !20926)
!21033 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !20926)
!21034 = !DILocation(line: 2063, column: 26, scope: !20912)
!21035 = !DILocation(line: 2063, column: 32, scope: !20912)
!21036 = !DILocation(line: 2063, column: 43, scope: !20912)
!21037 = !DILocation(line: 2063, column: 11, scope: !20912)
!21038 = !DILocation(line: 2063, column: 9, scope: !20912)
!21039 = !DILocation(line: 2065, column: 4, scope: !20912)
!21040 = !DILocation(line: 2065, column: 4, scope: !20924)
!21041 = !DILocalVariable(name: "__dummy", scope: !21042, file: !6239, line: 2065, type: !465)
!21042 = distinct !DILexicalBlock(scope: !20923, file: !6239, line: 2065, column: 4)
!21043 = !DILocation(line: 2065, column: 4, scope: !21042)
!21044 = !DILocalVariable(name: "__dummy2", scope: !21042, file: !6239, line: 2065, type: !465)
!21045 = !DILocation(line: 2065, column: 4, scope: !20923)
!21046 = !DILocation(line: 2065, column: 4, scope: !20922)
!21047 = !DILocation(line: 2065, column: 4, scope: !21048)
!21048 = distinct !DILexicalBlock(scope: !20922, file: !6239, line: 2065, column: 4)
!21049 = !DILocalVariable(name: "__dummy", scope: !21050, file: !6239, line: 2065, type: !465)
!21050 = distinct !DILexicalBlock(scope: !21051, file: !6239, line: 2065, column: 4)
!21051 = distinct !DILexicalBlock(scope: !21048, file: !6239, line: 2065, column: 4)
!21052 = !DILocation(line: 2065, column: 4, scope: !21050)
!21053 = !DILocalVariable(name: "__dummy2", scope: !21050, file: !6239, line: 2065, type: !465)
!21054 = !DILocation(line: 2065, column: 4, scope: !21051)
!21055 = !DILocation(line: 2065, column: 4, scope: !20921)
!21056 = !{i32 -2139797118}
!21057 = !DILocation(line: 2065, column: 4, scope: !20920)
!21058 = !DILocation(line: 329, column: 10, scope: !6696, inlinedAt: !20919)
!21059 = !DILocation(line: 329, column: 16, scope: !6696, inlinedAt: !20919)
!21060 = !DILocation(line: 2066, column: 9, scope: !20911)
!21061 = !DILocation(line: 2066, column: 8, scope: !20912)
!21062 = !DILocation(line: 2067, column: 20, scope: !20910)
!21063 = !DILocation(line: 2067, column: 28, scope: !20910)
!21064 = !DILocation(line: 2067, column: 5, scope: !20910)
!21065 = !DILocation(line: 2068, column: 29, scope: !20910)
!21066 = !DILocation(line: 2068, column: 35, scope: !20910)
!21067 = !DILocation(line: 2068, column: 41, scope: !20910)
!21068 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !20909)
!21069 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !20909)
!21070 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !20909)
!21071 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !20909)
!21072 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !20909)
!21073 = !DILocation(line: 2069, column: 5, scope: !20910)
!21074 = !DILocation(line: 2073, column: 10, scope: !20914)
!21075 = !DILocation(line: 2073, column: 3, scope: !20914)
!21076 = !DILocation(line: 2074, column: 20, scope: !20914)
!21077 = !DILocation(line: 2074, column: 3, scope: !20914)
!21078 = !DILocation(line: 2074, column: 9, scope: !20914)
!21079 = !DILocation(line: 2074, column: 18, scope: !20914)
!21080 = !DILocation(line: 2075, column: 3, scope: !20914)
!21081 = !DILocation(line: 2075, column: 9, scope: !20914)
!21082 = !DILocation(line: 2075, column: 15, scope: !20914)
!21083 = !DILocation(line: 2076, column: 13, scope: !20914)
!21084 = !DILocation(line: 2076, column: 19, scope: !20914)
!21085 = !DILocation(line: 2076, column: 31, scope: !20914)
!21086 = !DILocation(line: 2076, column: 42, scope: !20914)
!21087 = !DILocation(line: 2076, column: 3, scope: !20914)
!21088 = !DILocation(line: 2077, column: 2, scope: !20914)
!21089 = !DILocation(line: 2042, column: 43, scope: !20915)
!21090 = !DILocation(line: 2042, column: 2, scope: !20915)
!21091 = distinct !{!21091, !20998, !21092}
!21092 = !DILocation(line: 2077, column: 2, scope: !20916)
!21093 = !DILocation(line: 2080, column: 16, scope: !20907)
!21094 = !DILocation(line: 2080, column: 2, scope: !20907)
!21095 = !DILocation(line: 2080, column: 7, scope: !20907)
!21096 = !DILocation(line: 2080, column: 14, scope: !20907)
!21097 = !DILocation(line: 2081, column: 2, scope: !20907)
!21098 = !DILocation(line: 2081, column: 7, scope: !20907)
!21099 = !DILocation(line: 2081, column: 19, scope: !20907)
!21100 = !DILocation(line: 2083, column: 26, scope: !20907)
!21101 = !DILocation(line: 2083, column: 32, scope: !20907)
!21102 = !DILocation(line: 2083, column: 38, scope: !20907)
!21103 = !DILocation(line: 409, column: 2, scope: !6983, inlinedAt: !20929)
!21104 = !DILocation(line: 409, column: 2, scope: !6988, inlinedAt: !20929)
!21105 = !DILocation(line: 409, column: 2, scope: !6989, inlinedAt: !20929)
!21106 = !DILocation(line: 409, column: 2, scope: !6996, inlinedAt: !20929)
!21107 = !DILocation(line: 409, column: 2, scope: !6999, inlinedAt: !20929)
!21108 = !DILocation(line: 2084, column: 2, scope: !20907)
!21109 = !DILocation(line: 2085, column: 1, scope: !20907)
!21110 = distinct !DISubprogram(name: "sitd_link_urb", scope: !6239, file: !6239, line: 2131, type: !19608, scopeLine: 2137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!21111 = !DILocalVariable(name: "ehci", arg: 1, scope: !21110, file: !6239, line: 2132, type: !5814)
!21112 = !DILocation(line: 2132, column: 20, scope: !21110)
!21113 = !DILocalVariable(name: "urb", arg: 2, scope: !21110, file: !6239, line: 2133, type: !5343)
!21114 = !DILocation(line: 2133, column: 15, scope: !21110)
!21115 = !DILocalVariable(name: "mod", arg: 3, scope: !21110, file: !6239, line: 2134, type: !7)
!21116 = !DILocation(line: 2134, column: 12, scope: !21110)
!21117 = !DILocalVariable(name: "stream", arg: 4, scope: !21110, file: !6239, line: 2135, type: !5922)
!21118 = !DILocation(line: 2135, column: 26, scope: !21110)
!21119 = !DILocalVariable(name: "packet", scope: !21110, file: !6239, line: 2138, type: !401)
!21120 = !DILocation(line: 2138, column: 8, scope: !21110)
!21121 = !DILocalVariable(name: "next_uframe", scope: !21110, file: !6239, line: 2139, type: !7)
!21122 = !DILocation(line: 2139, column: 12, scope: !21110)
!21123 = !DILocalVariable(name: "sched", scope: !21110, file: !6239, line: 2140, type: !19021)
!21124 = !DILocation(line: 2140, column: 25, scope: !21110)
!21125 = !DILocation(line: 2140, column: 33, scope: !21110)
!21126 = !DILocation(line: 2140, column: 38, scope: !21110)
!21127 = !DILocalVariable(name: "sitd", scope: !21110, file: !6239, line: 2141, type: !5961)
!21128 = !DILocation(line: 2141, column: 20, scope: !21110)
!21129 = !DILocation(line: 2143, column: 16, scope: !21110)
!21130 = !DILocation(line: 2143, column: 24, scope: !21110)
!21131 = !DILocation(line: 2143, column: 14, scope: !21110)
!21132 = !DILocation(line: 2145, column: 18, scope: !21133)
!21133 = distinct !DILexicalBlock(scope: !21110, file: !6239, line: 2145, column: 6)
!21134 = !DILocation(line: 2145, column: 26, scope: !21133)
!21135 = !DILocation(line: 2145, column: 6, scope: !21133)
!21136 = !DILocation(line: 2145, column: 6, scope: !21110)
!21137 = !DILocation(line: 2148, column: 8, scope: !21133)
!21138 = !DILocation(line: 2148, column: 16, scope: !21133)
!21139 = !DILocation(line: 2147, column: 15, scope: !21133)
!21140 = !DILocation(line: 2147, column: 3, scope: !21133)
!21141 = !DILocation(line: 2147, column: 22, scope: !21133)
!21142 = !DILocation(line: 2147, column: 27, scope: !21133)
!21143 = !DILocation(line: 2148, column: 5, scope: !21133)
!21144 = !DILocation(line: 2150, column: 18, scope: !21145)
!21145 = distinct !DILexicalBlock(scope: !21110, file: !6239, line: 2150, column: 6)
!21146 = !DILocation(line: 2150, column: 6, scope: !21145)
!21147 = !DILocation(line: 2150, column: 25, scope: !21145)
!21148 = !DILocation(line: 2150, column: 30, scope: !21145)
!21149 = !DILocation(line: 2150, column: 50, scope: !21145)
!21150 = !DILocation(line: 2150, column: 6, scope: !21110)
!21151 = !DILocation(line: 2151, column: 7, scope: !21152)
!21152 = distinct !DILexicalBlock(scope: !21153, file: !6239, line: 2151, column: 7)
!21153 = distinct !DILexicalBlock(scope: !21145, file: !6239, line: 2150, column: 56)
!21154 = !DILocation(line: 2151, column: 13, scope: !21152)
!21155 = !DILocation(line: 2151, column: 25, scope: !21152)
!21156 = !DILocation(line: 2151, column: 7, scope: !21153)
!21157 = !DILocation(line: 2152, column: 4, scope: !21152)
!21158 = !DILocation(line: 2153, column: 2, scope: !21153)
!21159 = !DILocation(line: 2155, column: 14, scope: !21110)
!21160 = !DILocation(line: 2155, column: 2, scope: !21110)
!21161 = !DILocation(line: 2155, column: 21, scope: !21110)
!21162 = !DILocation(line: 2155, column: 26, scope: !21110)
!21163 = !DILocation(line: 2155, column: 45, scope: !21110)
!21164 = !DILocation(line: 2158, column: 16, scope: !21165)
!21165 = distinct !DILexicalBlock(scope: !21110, file: !6239, line: 2158, column: 2)
!21166 = !DILocation(line: 2158, column: 23, scope: !21165)
!21167 = !DILocation(line: 2158, column: 14, scope: !21165)
!21168 = !DILocation(line: 2158, column: 42, scope: !21165)
!21169 = !DILocation(line: 2158, column: 7, scope: !21165)
!21170 = !DILocation(line: 2159, column: 4, scope: !21171)
!21171 = distinct !DILexicalBlock(scope: !21165, file: !6239, line: 2158, column: 2)
!21172 = !DILocation(line: 2159, column: 13, scope: !21171)
!21173 = !DILocation(line: 2159, column: 18, scope: !21171)
!21174 = !DILocation(line: 2159, column: 11, scope: !21171)
!21175 = !DILocation(line: 2158, column: 2, scope: !21165)
!21176 = !DILocation(line: 2163, column: 3, scope: !21177)
!21177 = distinct !DILexicalBlock(scope: !21171, file: !6239, line: 2160, column: 14)
!21178 = !DILocation(line: 2163, column: 3, scope: !21179)
!21179 = distinct !DILexicalBlock(scope: !21180, file: !6239, line: 2163, column: 3)
!21180 = distinct !DILexicalBlock(scope: !21177, file: !6239, line: 2163, column: 3)
!21181 = !DILocation(line: 2163, column: 3, scope: !21180)
!21182 = !DILocation(line: 2163, column: 3, scope: !21183)
!21183 = distinct !DILexicalBlock(scope: !21179, file: !6239, line: 2163, column: 3)
!21184 = !DILocation(line: 2163, column: 3, scope: !21185)
!21185 = distinct !DILexicalBlock(scope: !21183, file: !6239, line: 2163, column: 3)
!21186 = !DILocation(line: 2163, column: 3, scope: !21187)
!21187 = distinct !DILexicalBlock(scope: !21183, file: !6239, line: 2163, column: 3)
!21188 = !{i32 -2139796238, i32 -2139796209, i32 -2139796163, i32 -2139796105, i32 -2139796051, i32 -2139795997, i32 -2139795942, i32 -2139795911}
!21189 = !DILocation(line: 2163, column: 3, scope: !21190)
!21190 = distinct !DILexicalBlock(scope: !21191, file: !6239, line: 2163, column: 3)
!21191 = distinct !DILexicalBlock(scope: !21183, file: !6239, line: 2163, column: 3)
!21192 = !{i32 -2139795458, i32 -2139795451, i32 -2139795397, i32 -2139795366, i32 -2139795336}
!21193 = !DILocation(line: 2163, column: 3, scope: !21191)
!21194 = !DILocalVariable(name: "__mptr", scope: !21195, file: !6239, line: 2167, type: !341)
!21195 = distinct !DILexicalBlock(scope: !21177, file: !6239, line: 2167, column: 10)
!21196 = !DILocation(line: 2167, column: 10, scope: !21195)
!21197 = !DILocation(line: 2167, column: 10, scope: !21198)
!21198 = distinct !DILexicalBlock(scope: !21195, file: !6239, line: 2167, column: 10)
!21199 = !DILocation(line: 2167, column: 8, scope: !21177)
!21200 = !DILocation(line: 2169, column: 19, scope: !21177)
!21201 = !DILocation(line: 2169, column: 25, scope: !21177)
!21202 = !DILocation(line: 2169, column: 37, scope: !21177)
!21203 = !DILocation(line: 2169, column: 45, scope: !21177)
!21204 = !DILocation(line: 2169, column: 3, scope: !21177)
!21205 = !DILocation(line: 2170, column: 18, scope: !21177)
!21206 = !DILocation(line: 2170, column: 3, scope: !21177)
!21207 = !DILocation(line: 2170, column: 9, scope: !21177)
!21208 = !DILocation(line: 2170, column: 16, scope: !21177)
!21209 = !DILocation(line: 2171, column: 15, scope: !21177)
!21210 = !DILocation(line: 2171, column: 3, scope: !21177)
!21211 = !DILocation(line: 2171, column: 9, scope: !21177)
!21212 = !DILocation(line: 2171, column: 13, scope: !21177)
!21213 = !DILocation(line: 2173, column: 14, scope: !21177)
!21214 = !DILocation(line: 2173, column: 20, scope: !21177)
!21215 = !DILocation(line: 2173, column: 28, scope: !21177)
!21216 = !DILocation(line: 2173, column: 34, scope: !21177)
!21217 = !DILocation(line: 2173, column: 41, scope: !21177)
!21218 = !DILocation(line: 2173, column: 3, scope: !21177)
!21219 = !DILocation(line: 2174, column: 13, scope: !21177)
!21220 = !DILocation(line: 2174, column: 20, scope: !21177)
!21221 = !DILocation(line: 2174, column: 32, scope: !21177)
!21222 = !DILocation(line: 2174, column: 41, scope: !21177)
!21223 = !DILocation(line: 2174, column: 47, scope: !21177)
!21224 = !DILocation(line: 2174, column: 61, scope: !21177)
!21225 = !DILocation(line: 2174, column: 38, scope: !21177)
!21226 = !DILocation(line: 2175, column: 5, scope: !21177)
!21227 = !DILocation(line: 2174, column: 3, scope: !21177)
!21228 = !DILocation(line: 2177, column: 18, scope: !21177)
!21229 = !DILocation(line: 2177, column: 26, scope: !21177)
!21230 = !DILocation(line: 2177, column: 15, scope: !21177)
!21231 = !DILocation(line: 2178, column: 2, scope: !21177)
!21232 = !DILocation(line: 2160, column: 10, scope: !21171)
!21233 = !DILocation(line: 2158, column: 2, scope: !21171)
!21234 = distinct !{!21234, !21175, !21235}
!21235 = !DILocation(line: 2178, column: 2, scope: !21165)
!21236 = !DILocation(line: 2179, column: 24, scope: !21110)
!21237 = !DILocation(line: 2179, column: 39, scope: !21110)
!21238 = !DILocation(line: 2179, column: 43, scope: !21110)
!21239 = !DILocation(line: 2179, column: 36, scope: !21110)
!21240 = !DILocation(line: 2179, column: 2, scope: !21110)
!21241 = !DILocation(line: 2179, column: 10, scope: !21110)
!21242 = !DILocation(line: 2179, column: 22, scope: !21110)
!21243 = !DILocation(line: 2182, column: 17, scope: !21110)
!21244 = !DILocation(line: 2182, column: 25, scope: !21110)
!21245 = !DILocation(line: 2182, column: 2, scope: !21110)
!21246 = !DILocation(line: 2183, column: 16, scope: !21110)
!21247 = !DILocation(line: 2183, column: 2, scope: !21110)
!21248 = !DILocation(line: 2183, column: 7, scope: !21110)
!21249 = !DILocation(line: 2183, column: 14, scope: !21110)
!21250 = !DILocation(line: 2185, column: 4, scope: !21110)
!21251 = !DILocation(line: 2185, column: 10, scope: !21110)
!21252 = !DILocation(line: 2185, column: 2, scope: !21110)
!21253 = !DILocation(line: 2186, column: 18, scope: !21110)
!21254 = !DILocation(line: 2186, column: 2, scope: !21110)
!21255 = !DILocation(line: 2187, column: 1, scope: !21110)
!21256 = distinct !DISubprogram(name: "sitd_sched_init", scope: !6239, file: !6239, line: 1972, type: !20103, scopeLine: 1978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!21257 = !DILocalVariable(name: "ehci", arg: 1, scope: !21256, file: !6239, line: 1973, type: !5814)
!21258 = !DILocation(line: 1973, column: 20, scope: !21256)
!21259 = !DILocalVariable(name: "iso_sched", arg: 2, scope: !21256, file: !6239, line: 1974, type: !19021)
!21260 = !DILocation(line: 1974, column: 25, scope: !21256)
!21261 = !DILocalVariable(name: "stream", arg: 3, scope: !21256, file: !6239, line: 1975, type: !5922)
!21262 = !DILocation(line: 1975, column: 26, scope: !21256)
!21263 = !DILocalVariable(name: "urb", arg: 4, scope: !21256, file: !6239, line: 1976, type: !5343)
!21264 = !DILocation(line: 1976, column: 15, scope: !21256)
!21265 = !DILocalVariable(name: "i", scope: !21256, file: !6239, line: 1979, type: !7)
!21266 = !DILocation(line: 1979, column: 11, scope: !21256)
!21267 = !DILocalVariable(name: "dma", scope: !21256, file: !6239, line: 1980, type: !2064)
!21268 = !DILocation(line: 1980, column: 13, scope: !21256)
!21269 = !DILocation(line: 1980, column: 19, scope: !21256)
!21270 = !DILocation(line: 1980, column: 24, scope: !21256)
!21271 = !DILocation(line: 1983, column: 20, scope: !21256)
!21272 = !DILocation(line: 1983, column: 25, scope: !21256)
!21273 = !DILocation(line: 1983, column: 45, scope: !21256)
!21274 = !DILocation(line: 1983, column: 53, scope: !21256)
!21275 = !DILocation(line: 1983, column: 56, scope: !21256)
!21276 = !DILocation(line: 1983, column: 43, scope: !21256)
!21277 = !DILocation(line: 1983, column: 2, scope: !21256)
!21278 = !DILocation(line: 1983, column: 13, scope: !21256)
!21279 = !DILocation(line: 1983, column: 18, scope: !21256)
!21280 = !DILocation(line: 1988, column: 9, scope: !21281)
!21281 = distinct !DILexicalBlock(scope: !21256, file: !6239, line: 1988, column: 2)
!21282 = !DILocation(line: 1988, column: 7, scope: !21281)
!21283 = !DILocation(line: 1988, column: 14, scope: !21284)
!21284 = distinct !DILexicalBlock(scope: !21281, file: !6239, line: 1988, column: 2)
!21285 = !DILocation(line: 1988, column: 18, scope: !21284)
!21286 = !DILocation(line: 1988, column: 23, scope: !21284)
!21287 = !DILocation(line: 1988, column: 16, scope: !21284)
!21288 = !DILocation(line: 1988, column: 2, scope: !21281)
!21289 = !DILocalVariable(name: "packet", scope: !21290, file: !6239, line: 1989, type: !20138)
!21290 = distinct !DILexicalBlock(scope: !21284, file: !6239, line: 1988, column: 47)
!21291 = !DILocation(line: 1989, column: 27, scope: !21290)
!21292 = !DILocation(line: 1989, column: 37, scope: !21290)
!21293 = !DILocation(line: 1989, column: 48, scope: !21290)
!21294 = !DILocation(line: 1989, column: 55, scope: !21290)
!21295 = !DILocalVariable(name: "length", scope: !21290, file: !6239, line: 1990, type: !7)
!21296 = !DILocation(line: 1990, column: 13, scope: !21290)
!21297 = !DILocalVariable(name: "buf", scope: !21290, file: !6239, line: 1991, type: !2064)
!21298 = !DILocation(line: 1991, column: 15, scope: !21290)
!21299 = !DILocalVariable(name: "trans", scope: !21290, file: !6239, line: 1992, type: !303)
!21300 = !DILocation(line: 1992, column: 9, scope: !21290)
!21301 = !DILocation(line: 1994, column: 12, scope: !21290)
!21302 = !DILocation(line: 1994, column: 17, scope: !21290)
!21303 = !DILocation(line: 1994, column: 32, scope: !21290)
!21304 = !DILocation(line: 1994, column: 35, scope: !21290)
!21305 = !DILocation(line: 1994, column: 42, scope: !21290)
!21306 = !DILocation(line: 1994, column: 10, scope: !21290)
!21307 = !DILocation(line: 1995, column: 9, scope: !21290)
!21308 = !DILocation(line: 1995, column: 15, scope: !21290)
!21309 = !DILocation(line: 1995, column: 20, scope: !21290)
!21310 = !DILocation(line: 1995, column: 35, scope: !21290)
!21311 = !DILocation(line: 1995, column: 38, scope: !21290)
!21312 = !DILocation(line: 1995, column: 13, scope: !21290)
!21313 = !DILocation(line: 1995, column: 7, scope: !21290)
!21314 = !DILocation(line: 1997, column: 9, scope: !21290)
!21315 = !DILocation(line: 1998, column: 9, scope: !21316)
!21316 = distinct !DILexicalBlock(scope: !21290, file: !6239, line: 1998, column: 7)
!21317 = !DILocation(line: 1998, column: 11, scope: !21316)
!21318 = !DILocation(line: 1998, column: 19, scope: !21316)
!21319 = !DILocation(line: 1998, column: 24, scope: !21316)
!21320 = !DILocation(line: 1998, column: 16, scope: !21316)
!21321 = !DILocation(line: 1999, column: 5, scope: !21316)
!21322 = !DILocation(line: 1999, column: 10, scope: !21316)
!21323 = !DILocation(line: 1999, column: 15, scope: !21316)
!21324 = !DILocation(line: 1999, column: 30, scope: !21316)
!21325 = !DILocation(line: 1998, column: 7, scope: !21290)
!21326 = !DILocation(line: 2000, column: 10, scope: !21316)
!21327 = !DILocation(line: 2000, column: 4, scope: !21316)
!21328 = !DILocation(line: 2001, column: 12, scope: !21290)
!21329 = !DILocation(line: 2001, column: 19, scope: !21290)
!21330 = !DILocation(line: 2001, column: 9, scope: !21290)
!21331 = !DILocation(line: 2002, column: 37, scope: !21290)
!21332 = !DILocation(line: 2002, column: 43, scope: !21290)
!21333 = !DILocation(line: 2002, column: 25, scope: !21290)
!21334 = !DILocation(line: 2002, column: 3, scope: !21290)
!21335 = !DILocation(line: 2002, column: 11, scope: !21290)
!21336 = !DILocation(line: 2002, column: 23, scope: !21290)
!21337 = !DILocation(line: 2005, column: 18, scope: !21290)
!21338 = !DILocation(line: 2005, column: 3, scope: !21290)
!21339 = !DILocation(line: 2005, column: 11, scope: !21290)
!21340 = !DILocation(line: 2005, column: 16, scope: !21290)
!21341 = !DILocation(line: 2006, column: 19, scope: !21290)
!21342 = !DILocation(line: 2006, column: 25, scope: !21290)
!21343 = !DILocation(line: 2006, column: 23, scope: !21290)
!21344 = !DILocation(line: 2006, column: 33, scope: !21290)
!21345 = !DILocation(line: 2006, column: 18, scope: !21290)
!21346 = !DILocation(line: 2006, column: 3, scope: !21290)
!21347 = !DILocation(line: 2006, column: 11, scope: !21290)
!21348 = !DILocation(line: 2006, column: 16, scope: !21290)
!21349 = !DILocation(line: 2007, column: 7, scope: !21350)
!21350 = distinct !DILexicalBlock(scope: !21290, file: !6239, line: 2007, column: 7)
!21351 = !DILocation(line: 2007, column: 15, scope: !21350)
!21352 = !DILocation(line: 2007, column: 24, scope: !21350)
!21353 = !DILocation(line: 2007, column: 28, scope: !21350)
!21354 = !DILocation(line: 2007, column: 20, scope: !21350)
!21355 = !DILocation(line: 2007, column: 7, scope: !21290)
!21356 = !DILocation(line: 2008, column: 4, scope: !21350)
!21357 = !DILocation(line: 2008, column: 12, scope: !21350)
!21358 = !DILocation(line: 2008, column: 18, scope: !21350)
!21359 = !DILocation(line: 2011, column: 7, scope: !21360)
!21360 = distinct !DILexicalBlock(scope: !21290, file: !6239, line: 2011, column: 7)
!21361 = !DILocation(line: 2011, column: 15, scope: !21360)
!21362 = !DILocation(line: 2011, column: 32, scope: !21360)
!21363 = !DILocation(line: 2011, column: 7, scope: !21290)
!21364 = !DILocation(line: 2012, column: 4, scope: !21360)
!21365 = !DILocation(line: 2013, column: 13, scope: !21290)
!21366 = !DILocation(line: 2013, column: 20, scope: !21290)
!21367 = !DILocation(line: 2013, column: 27, scope: !21290)
!21368 = !DILocation(line: 2013, column: 10, scope: !21290)
!21369 = !DILocation(line: 2014, column: 7, scope: !21370)
!21370 = distinct !DILexicalBlock(scope: !21290, file: !6239, line: 2014, column: 7)
!21371 = !DILocation(line: 2014, column: 14, scope: !21370)
!21372 = !DILocation(line: 2014, column: 7, scope: !21290)
!21373 = !DILocation(line: 2015, column: 11, scope: !21370)
!21374 = !DILocation(line: 2015, column: 4, scope: !21370)
!21375 = !DILocation(line: 2016, column: 19, scope: !21290)
!21376 = !DILocation(line: 2016, column: 3, scope: !21290)
!21377 = !DILocation(line: 2016, column: 11, scope: !21290)
!21378 = !DILocation(line: 2016, column: 16, scope: !21290)
!21379 = !DILocation(line: 2017, column: 2, scope: !21290)
!21380 = !DILocation(line: 1988, column: 43, scope: !21284)
!21381 = !DILocation(line: 1988, column: 2, scope: !21284)
!21382 = distinct !{!21382, !21288, !21383}
!21383 = !DILocation(line: 2017, column: 2, scope: !21281)
!21384 = !DILocation(line: 2018, column: 1, scope: !21256)
!21385 = distinct !DISubprogram(name: "sitd_patch", scope: !6239, file: !6239, line: 2090, type: !21386, scopeLine: 2097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!21386 = !DISubroutineType(types: !21387)
!21387 = !{null, !5814, !5922, !5961, !19021, !7}
!21388 = !DILocalVariable(name: "ehci", arg: 1, scope: !21385, file: !6239, line: 2091, type: !5814)
!21389 = !DILocation(line: 2091, column: 20, scope: !21385)
!21390 = !DILocalVariable(name: "stream", arg: 2, scope: !21385, file: !6239, line: 2092, type: !5922)
!21391 = !DILocation(line: 2092, column: 26, scope: !21385)
!21392 = !DILocalVariable(name: "sitd", arg: 3, scope: !21385, file: !6239, line: 2093, type: !5961)
!21393 = !DILocation(line: 2093, column: 20, scope: !21385)
!21394 = !DILocalVariable(name: "iso_sched", arg: 4, scope: !21385, file: !6239, line: 2094, type: !19021)
!21395 = !DILocation(line: 2094, column: 25, scope: !21385)
!21396 = !DILocalVariable(name: "index", arg: 5, scope: !21385, file: !6239, line: 2095, type: !7)
!21397 = !DILocation(line: 2095, column: 12, scope: !21385)
!21398 = !DILocalVariable(name: "uf", scope: !21385, file: !6239, line: 2098, type: !20138)
!21399 = !DILocation(line: 2098, column: 26, scope: !21385)
!21400 = !DILocation(line: 2098, column: 32, scope: !21385)
!21401 = !DILocation(line: 2098, column: 43, scope: !21385)
!21402 = !DILocation(line: 2098, column: 50, scope: !21385)
!21403 = !DILocalVariable(name: "bufp", scope: !21385, file: !6239, line: 2099, type: !558)
!21404 = !DILocation(line: 2099, column: 8, scope: !21385)
!21405 = !DILocation(line: 2101, column: 18, scope: !21385)
!21406 = !DILocation(line: 2101, column: 2, scope: !21385)
!21407 = !DILocation(line: 2101, column: 8, scope: !21385)
!21408 = !DILocation(line: 2101, column: 16, scope: !21385)
!21409 = !DILocation(line: 2102, column: 26, scope: !21385)
!21410 = !DILocation(line: 2102, column: 34, scope: !21385)
!21411 = !DILocation(line: 2102, column: 2, scope: !21385)
!21412 = !DILocation(line: 2102, column: 8, scope: !21385)
!21413 = !DILocation(line: 2102, column: 24, scope: !21385)
!21414 = !DILocation(line: 2103, column: 20, scope: !21385)
!21415 = !DILocation(line: 2103, column: 28, scope: !21385)
!21416 = !DILocation(line: 2103, column: 2, scope: !21385)
!21417 = !DILocation(line: 2103, column: 8, scope: !21385)
!21418 = !DILocation(line: 2103, column: 18, scope: !21385)
!21419 = !DILocation(line: 2104, column: 21, scope: !21385)
!21420 = !DILocation(line: 2104, column: 25, scope: !21385)
!21421 = !DILocation(line: 2104, column: 2, scope: !21385)
!21422 = !DILocation(line: 2104, column: 8, scope: !21385)
!21423 = !DILocation(line: 2104, column: 19, scope: !21385)
!21424 = !DILocation(line: 2105, column: 25, scope: !21385)
!21425 = !DILocation(line: 2105, column: 2, scope: !21385)
!21426 = !DILocation(line: 2105, column: 8, scope: !21385)
!21427 = !DILocation(line: 2105, column: 23, scope: !21385)
!21428 = !DILocation(line: 2107, column: 9, scope: !21385)
!21429 = !DILocation(line: 2107, column: 13, scope: !21385)
!21430 = !DILocation(line: 2107, column: 7, scope: !21385)
!21431 = !DILocation(line: 2108, column: 32, scope: !21385)
!21432 = !DILocation(line: 2108, column: 38, scope: !21385)
!21433 = !DILocation(line: 2108, column: 20, scope: !21385)
!21434 = !DILocation(line: 2108, column: 2, scope: !21385)
!21435 = !DILocation(line: 2108, column: 8, scope: !21385)
!21436 = !DILocation(line: 2108, column: 18, scope: !21385)
!21437 = !DILocation(line: 2109, column: 35, scope: !21385)
!21438 = !DILocation(line: 2109, column: 41, scope: !21385)
!21439 = !DILocation(line: 2109, column: 46, scope: !21385)
!21440 = !DILocation(line: 2109, column: 23, scope: !21385)
!21441 = !DILocation(line: 2109, column: 2, scope: !21385)
!21442 = !DILocation(line: 2109, column: 8, scope: !21385)
!21443 = !DILocation(line: 2109, column: 21, scope: !21385)
!21444 = !DILocation(line: 2111, column: 32, scope: !21385)
!21445 = !DILocation(line: 2111, column: 38, scope: !21385)
!21446 = !DILocation(line: 2111, column: 42, scope: !21385)
!21447 = !DILocation(line: 2111, column: 20, scope: !21385)
!21448 = !DILocation(line: 2111, column: 2, scope: !21385)
!21449 = !DILocation(line: 2111, column: 8, scope: !21385)
!21450 = !DILocation(line: 2111, column: 18, scope: !21385)
!21451 = !DILocation(line: 2112, column: 6, scope: !21452)
!21452 = distinct !DILexicalBlock(scope: !21385, file: !6239, line: 2112, column: 6)
!21453 = !DILocation(line: 2112, column: 10, scope: !21452)
!21454 = !DILocation(line: 2112, column: 6, scope: !21385)
!21455 = !DILocation(line: 2113, column: 8, scope: !21452)
!21456 = !DILocation(line: 2113, column: 3, scope: !21452)
!21457 = !DILocation(line: 2114, column: 35, scope: !21385)
!21458 = !DILocation(line: 2114, column: 41, scope: !21385)
!21459 = !DILocation(line: 2114, column: 46, scope: !21385)
!21460 = !DILocation(line: 2114, column: 23, scope: !21385)
!21461 = !DILocation(line: 2114, column: 2, scope: !21385)
!21462 = !DILocation(line: 2114, column: 8, scope: !21385)
!21463 = !DILocation(line: 2114, column: 21, scope: !21385)
!21464 = !DILocation(line: 2115, column: 16, scope: !21385)
!21465 = !DILocation(line: 2115, column: 2, scope: !21385)
!21466 = !DILocation(line: 2115, column: 8, scope: !21385)
!21467 = !DILocation(line: 2115, column: 14, scope: !21385)
!21468 = !DILocation(line: 2116, column: 1, scope: !21385)
!21469 = distinct !DISubprogram(name: "sitd_link", scope: !6239, file: !6239, line: 2119, type: !21470, scopeLine: 2120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!21470 = !DISubroutineType(types: !21471)
!21471 = !{null, !5814, !7, !5961}
!21472 = !DILocalVariable(name: "ehci", arg: 1, scope: !21469, file: !6239, line: 2119, type: !5814)
!21473 = !DILocation(line: 2119, column: 28, scope: !21469)
!21474 = !DILocalVariable(name: "frame", arg: 2, scope: !21469, file: !6239, line: 2119, type: !7)
!21475 = !DILocation(line: 2119, column: 43, scope: !21469)
!21476 = !DILocalVariable(name: "sitd", arg: 3, scope: !21469, file: !6239, line: 2119, type: !5961)
!21477 = !DILocation(line: 2119, column: 68, scope: !21469)
!21478 = !DILocation(line: 2122, column: 2, scope: !21469)
!21479 = !DILocation(line: 2122, column: 8, scope: !21469)
!21480 = !DILocation(line: 2122, column: 20, scope: !21469)
!21481 = !DILocation(line: 2122, column: 26, scope: !21469)
!21482 = !DILocation(line: 2122, column: 34, scope: !21469)
!21483 = !DILocation(line: 2123, column: 18, scope: !21469)
!21484 = !DILocation(line: 2123, column: 24, scope: !21469)
!21485 = !DILocation(line: 2123, column: 33, scope: !21469)
!21486 = !DILocation(line: 2123, column: 2, scope: !21469)
!21487 = !DILocation(line: 2123, column: 8, scope: !21469)
!21488 = !DILocation(line: 2123, column: 16, scope: !21469)
!21489 = !DILocation(line: 2124, column: 30, scope: !21469)
!21490 = !DILocation(line: 2124, column: 2, scope: !21469)
!21491 = !DILocation(line: 2124, column: 8, scope: !21469)
!21492 = !DILocation(line: 2124, column: 16, scope: !21469)
!21493 = !DILocation(line: 2124, column: 23, scope: !21469)
!21494 = !DILocation(line: 2124, column: 28, scope: !21469)
!21495 = !DILocation(line: 2125, column: 16, scope: !21469)
!21496 = !DILocation(line: 2125, column: 2, scope: !21469)
!21497 = !DILocation(line: 2125, column: 8, scope: !21469)
!21498 = !DILocation(line: 2125, column: 14, scope: !21469)
!21499 = !DILocation(line: 2126, column: 2, scope: !21469)
!21500 = !{i32 -2139796581}
!21501 = !DILocation(line: 2127, column: 38, scope: !21469)
!21502 = !DILocation(line: 2127, column: 44, scope: !21469)
!21503 = !DILocation(line: 2127, column: 50, scope: !21469)
!21504 = !DILocation(line: 2127, column: 59, scope: !21469)
!21505 = !DILocation(line: 2127, column: 26, scope: !21469)
!21506 = !DILocation(line: 2127, column: 2, scope: !21469)
!21507 = !DILocation(line: 2127, column: 8, scope: !21469)
!21508 = !DILocation(line: 2127, column: 17, scope: !21469)
!21509 = !DILocation(line: 2127, column: 24, scope: !21469)
!21510 = !DILocation(line: 2128, column: 1, scope: !21469)
!21511 = distinct !DISubprogram(name: "usb_endpoint_type", scope: !34, file: !34, line: 481, type: !18251, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!21512 = !DILocalVariable(name: "epd", arg: 1, scope: !21511, file: !34, line: 481, type: !18253)
!21513 = !DILocation(line: 481, column: 75, scope: !21511)
!21514 = !DILocation(line: 483, column: 9, scope: !21511)
!21515 = !DILocation(line: 483, column: 14, scope: !21511)
!21516 = !DILocation(line: 483, column: 27, scope: !21511)
!21517 = !DILocation(line: 483, column: 2, scope: !21511)
!21518 = distinct !DISubprogram(name: "usb_endpoint_num", scope: !34, file: !34, line: 469, type: !18251, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!21519 = !DILocalVariable(name: "epd", arg: 1, scope: !21518, file: !34, line: 469, type: !18253)
!21520 = !DILocation(line: 469, column: 74, scope: !21518)
!21521 = !DILocation(line: 471, column: 9, scope: !21518)
!21522 = !DILocation(line: 471, column: 14, scope: !21518)
!21523 = !DILocation(line: 471, column: 31, scope: !21518)
!21524 = !DILocation(line: 471, column: 2, scope: !21518)
!21525 = distinct !DISubprogram(name: "usb_endpoint_dir_out", scope: !34, file: !34, line: 503, type: !18251, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!21526 = !DILocalVariable(name: "epd", arg: 1, scope: !21525, file: !34, line: 504, type: !18253)
!21527 = !DILocation(line: 504, column: 43, scope: !21525)
!21528 = !DILocation(line: 506, column: 11, scope: !21525)
!21529 = !DILocation(line: 506, column: 16, scope: !21525)
!21530 = !DILocation(line: 506, column: 33, scope: !21525)
!21531 = !DILocation(line: 506, column: 58, scope: !21525)
!21532 = !DILocation(line: 506, column: 2, scope: !21525)
!21533 = distinct !DISubprogram(name: "unlink_empty_async_suspended", scope: !9723, file: !9723, line: 1457, type: !6235, scopeLine: 1458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!21534 = !DILocalVariable(name: "ehci", arg: 1, scope: !21533, file: !9723, line: 1457, type: !5814)
!21535 = !DILocation(line: 1457, column: 59, scope: !21533)
!21536 = !DILocalVariable(name: "qh", scope: !21533, file: !9723, line: 1459, type: !5884)
!21537 = !DILocation(line: 1459, column: 19, scope: !21533)
!21538 = !DILocation(line: 1461, column: 2, scope: !21533)
!21539 = !DILocation(line: 1461, column: 9, scope: !21533)
!21540 = !DILocation(line: 1461, column: 15, scope: !21533)
!21541 = !DILocation(line: 1461, column: 22, scope: !21533)
!21542 = !DILocation(line: 1461, column: 30, scope: !21533)
!21543 = !DILocation(line: 1462, column: 8, scope: !21544)
!21544 = distinct !DILexicalBlock(scope: !21533, file: !9723, line: 1461, column: 34)
!21545 = !DILocation(line: 1462, column: 14, scope: !21544)
!21546 = !DILocation(line: 1462, column: 21, scope: !21544)
!21547 = !DILocation(line: 1462, column: 29, scope: !21544)
!21548 = !DILocation(line: 1462, column: 6, scope: !21544)
!21549 = !DILocalVariable(name: "__ret_warn_on", scope: !21550, file: !9723, line: 1463, type: !401)
!21550 = distinct !DILexicalBlock(scope: !21544, file: !9723, line: 1463, column: 3)
!21551 = !DILocation(line: 1463, column: 3, scope: !21550)
!21552 = !DILocation(line: 1463, column: 3, scope: !21553)
!21553 = distinct !DILexicalBlock(scope: !21550, file: !9723, line: 1463, column: 3)
!21554 = !DILocation(line: 1463, column: 3, scope: !21555)
!21555 = distinct !DILexicalBlock(scope: !21553, file: !9723, line: 1463, column: 3)
!21556 = !DILocation(line: 1463, column: 3, scope: !21557)
!21557 = distinct !DILexicalBlock(scope: !21555, file: !9723, line: 1463, column: 3)
!21558 = !DILocation(line: 1463, column: 3, scope: !21559)
!21559 = distinct !DILexicalBlock(scope: !21555, file: !9723, line: 1463, column: 3)
!21560 = !{i32 -2139910044, i32 -2139910015, i32 -2139909969, i32 -2139909911, i32 -2139909857, i32 -2139909803, i32 -2139909748, i32 -2139909717}
!21561 = !DILocation(line: 1463, column: 3, scope: !21562)
!21562 = distinct !DILexicalBlock(scope: !21555, file: !9723, line: 1463, column: 3)
!21563 = !{i32 -2139909309, i32 -2139909302, i32 -2139909250, i32 -2139909219, i32 -2139909189}
!21564 = !DILocation(line: 1463, column: 3, scope: !21565)
!21565 = distinct !DILexicalBlock(scope: !21555, file: !9723, line: 1463, column: 3)
!21566 = !DILocation(line: 1464, column: 23, scope: !21544)
!21567 = !DILocation(line: 1464, column: 29, scope: !21544)
!21568 = !DILocation(line: 1464, column: 3, scope: !21544)
!21569 = distinct !{!21569, !21538, !21570}
!21570 = !DILocation(line: 1465, column: 2, scope: !21533)
!21571 = !DILocation(line: 1466, column: 1, scope: !21533)
!21572 = distinct !DISubprogram(name: "ehci_handover_companion_ports", scope: !6489, file: !6489, line: 33, type: !6235, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!21573 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !21574)
!21574 = distinct !DILocation(line: 122, column: 2, scope: !21572)
!21575 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !21576)
!21576 = distinct !DILocation(line: 103, column: 4, scope: !21577)
!21577 = distinct !DILexicalBlock(scope: !21578, file: !6489, line: 98, column: 43)
!21578 = distinct !DILexicalBlock(scope: !21579, file: !6489, line: 98, column: 7)
!21579 = distinct !DILexicalBlock(scope: !21572, file: !6489, line: 97, column: 17)
!21580 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !21581)
!21581 = distinct !DILocation(line: 99, column: 4, scope: !21577)
!21582 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !21583)
!21583 = distinct !DILocation(line: 95, column: 2, scope: !21572)
!21584 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !21585)
!21585 = distinct !DILocation(line: 89, column: 2, scope: !21572)
!21586 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !21587)
!21587 = distinct !DILocation(line: 85, column: 5, scope: !21588)
!21588 = distinct !DILexicalBlock(scope: !21589, file: !6489, line: 80, column: 9)
!21589 = distinct !DILexicalBlock(scope: !21590, file: !6489, line: 78, column: 13)
!21590 = distinct !DILexicalBlock(scope: !21591, file: !6489, line: 76, column: 8)
!21591 = distinct !DILexicalBlock(scope: !21592, file: !6489, line: 71, column: 43)
!21592 = distinct !DILexicalBlock(scope: !21593, file: !6489, line: 71, column: 7)
!21593 = distinct !DILexicalBlock(scope: !21572, file: !6489, line: 70, column: 17)
!21594 = !DILocation(line: 402, column: 57, scope: !6493, inlinedAt: !21595)
!21595 = distinct !DILocation(line: 81, column: 5, scope: !21588)
!21596 = !DILocation(line: 377, column: 55, scope: !6500, inlinedAt: !21597)
!21597 = distinct !DILocation(line: 68, column: 2, scope: !21572)
!21598 = !DILocalVariable(name: "ehci", arg: 1, scope: !21572, file: !6489, line: 33, type: !5814)
!21599 = !DILocation(line: 33, column: 60, scope: !21572)
!21600 = !DILocalVariable(name: "reg", scope: !21572, file: !6489, line: 35, type: !2542)
!21601 = !DILocation(line: 35, column: 15, scope: !21572)
!21602 = !DILocalVariable(name: "status", scope: !21572, file: !6489, line: 36, type: !303)
!21603 = !DILocation(line: 36, column: 7, scope: !21572)
!21604 = !DILocalVariable(name: "port", scope: !21572, file: !6489, line: 37, type: !401)
!21605 = !DILocation(line: 37, column: 7, scope: !21572)
!21606 = !DILocalVariable(name: "buf", scope: !21572, file: !6489, line: 38, type: !5103)
!21607 = !DILocation(line: 38, column: 10, scope: !21572)
!21608 = !DILocalVariable(name: "hcd", scope: !21572, file: !6489, line: 39, type: !342)
!21609 = !DILocation(line: 39, column: 18, scope: !21572)
!21610 = !DILocation(line: 39, column: 36, scope: !21572)
!21611 = !DILocation(line: 39, column: 24, scope: !21572)
!21612 = !DILocation(line: 41, column: 7, scope: !21613)
!21613 = distinct !DILexicalBlock(scope: !21572, file: !6489, line: 41, column: 6)
!21614 = !DILocation(line: 41, column: 13, scope: !21613)
!21615 = !DILocation(line: 41, column: 6, scope: !21572)
!21616 = !DILocation(line: 42, column: 3, scope: !21613)
!21617 = !DILocation(line: 51, column: 7, scope: !21618)
!21618 = distinct !DILexicalBlock(scope: !21572, file: !6489, line: 51, column: 6)
!21619 = !DILocation(line: 51, column: 6, scope: !21572)
!21620 = !DILocation(line: 52, column: 3, scope: !21618)
!21621 = !DILocation(line: 55, column: 9, scope: !21572)
!21622 = !DILocation(line: 55, column: 7, scope: !21572)
!21623 = !DILocation(line: 56, column: 2, scope: !21572)
!21624 = !DILocation(line: 56, column: 13, scope: !21572)
!21625 = !DILocation(line: 57, column: 16, scope: !21626)
!21626 = distinct !DILexicalBlock(scope: !21627, file: !6489, line: 57, column: 7)
!21627 = distinct !DILexicalBlock(scope: !21572, file: !6489, line: 56, column: 17)
!21628 = !DILocation(line: 57, column: 23, scope: !21626)
!21629 = !DILocation(line: 57, column: 29, scope: !21626)
!21630 = !DILocation(line: 57, column: 7, scope: !21626)
!21631 = !DILocation(line: 57, column: 7, scope: !21627)
!21632 = !DILocation(line: 58, column: 11, scope: !21633)
!21633 = distinct !DILexicalBlock(scope: !21626, file: !6489, line: 57, column: 43)
!21634 = !DILocation(line: 58, column: 17, scope: !21633)
!21635 = !DILocation(line: 58, column: 23, scope: !21633)
!21636 = !DILocation(line: 58, column: 35, scope: !21633)
!21637 = !DILocation(line: 58, column: 8, scope: !21633)
!21638 = !DILocation(line: 59, column: 24, scope: !21633)
!21639 = !DILocation(line: 59, column: 30, scope: !21633)
!21640 = !DILocation(line: 59, column: 13, scope: !21633)
!21641 = !DILocation(line: 59, column: 35, scope: !21633)
!21642 = !DILocation(line: 59, column: 11, scope: !21633)
!21643 = !DILocation(line: 60, column: 10, scope: !21644)
!21644 = distinct !DILexicalBlock(scope: !21633, file: !6489, line: 60, column: 8)
!21645 = !DILocation(line: 60, column: 17, scope: !21644)
!21646 = !DILocation(line: 60, column: 8, scope: !21633)
!21647 = !DILocation(line: 61, column: 21, scope: !21644)
!21648 = !DILocation(line: 61, column: 27, scope: !21644)
!21649 = !DILocation(line: 61, column: 5, scope: !21644)
!21650 = !DILocation(line: 62, column: 3, scope: !21633)
!21651 = distinct !{!21651, !21623, !21652}
!21652 = !DILocation(line: 63, column: 2, scope: !21572)
!21653 = !DILocation(line: 66, column: 2, scope: !21572)
!21654 = !DILocation(line: 68, column: 17, scope: !21572)
!21655 = !DILocation(line: 68, column: 23, scope: !21572)
!21656 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !21597)
!21657 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !21597)
!21658 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !21597)
!21659 = !DILocation(line: 69, column: 9, scope: !21572)
!21660 = !DILocation(line: 69, column: 7, scope: !21572)
!21661 = !DILocation(line: 70, column: 2, scope: !21572)
!21662 = !DILocation(line: 70, column: 13, scope: !21572)
!21663 = !DILocation(line: 71, column: 16, scope: !21592)
!21664 = !DILocation(line: 71, column: 23, scope: !21592)
!21665 = !DILocation(line: 71, column: 29, scope: !21592)
!21666 = !DILocation(line: 71, column: 7, scope: !21592)
!21667 = !DILocation(line: 71, column: 7, scope: !21593)
!21668 = !DILocation(line: 72, column: 11, scope: !21591)
!21669 = !DILocation(line: 72, column: 17, scope: !21591)
!21670 = !DILocation(line: 72, column: 23, scope: !21591)
!21671 = !DILocation(line: 72, column: 35, scope: !21591)
!21672 = !DILocation(line: 72, column: 8, scope: !21591)
!21673 = !DILocation(line: 73, column: 24, scope: !21591)
!21674 = !DILocation(line: 73, column: 30, scope: !21591)
!21675 = !DILocation(line: 73, column: 13, scope: !21591)
!21676 = !DILocation(line: 73, column: 35, scope: !21591)
!21677 = !DILocation(line: 73, column: 11, scope: !21591)
!21678 = !DILocation(line: 76, column: 8, scope: !21590)
!21679 = !DILocation(line: 76, column: 15, scope: !21590)
!21680 = !DILocation(line: 76, column: 8, scope: !21591)
!21681 = !DILocation(line: 77, column: 15, scope: !21590)
!21682 = !DILocation(line: 77, column: 22, scope: !21590)
!21683 = !DILocation(line: 77, column: 28, scope: !21590)
!21684 = !DILocation(line: 77, column: 5, scope: !21590)
!21685 = !DILocation(line: 78, column: 22, scope: !21589)
!21686 = !DILocation(line: 78, column: 29, scope: !21589)
!21687 = !DILocation(line: 78, column: 35, scope: !21589)
!21688 = !DILocation(line: 78, column: 13, scope: !21589)
!21689 = !DILocation(line: 78, column: 13, scope: !21590)
!21690 = !DILocation(line: 79, column: 17, scope: !21589)
!21691 = !DILocation(line: 79, column: 23, scope: !21589)
!21692 = !DILocation(line: 79, column: 30, scope: !21589)
!21693 = !DILocation(line: 79, column: 42, scope: !21589)
!21694 = !DILocation(line: 79, column: 5, scope: !21589)
!21695 = !DILocation(line: 81, column: 22, scope: !21588)
!21696 = !DILocation(line: 81, column: 28, scope: !21588)
!21697 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !21595)
!21698 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !21595)
!21699 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !21595)
!21700 = !DILocation(line: 82, column: 22, scope: !21588)
!21701 = !DILocation(line: 83, column: 28, scope: !21588)
!21702 = !DILocation(line: 83, column: 33, scope: !21588)
!21703 = !DILocation(line: 82, column: 5, scope: !21588)
!21704 = !DILocation(line: 85, column: 20, scope: !21588)
!21705 = !DILocation(line: 85, column: 26, scope: !21588)
!21706 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !21587)
!21707 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !21587)
!21708 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !21587)
!21709 = !DILocation(line: 87, column: 3, scope: !21591)
!21710 = distinct !{!21710, !21661, !21711}
!21711 = !DILocation(line: 88, column: 2, scope: !21572)
!21712 = !DILocation(line: 89, column: 19, scope: !21572)
!21713 = !DILocation(line: 89, column: 25, scope: !21572)
!21714 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !21585)
!21715 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !21585)
!21716 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !21585)
!21717 = !DILocation(line: 91, column: 7, scope: !21718)
!21718 = distinct !DILexicalBlock(scope: !21572, file: !6489, line: 91, column: 6)
!21719 = !DILocation(line: 91, column: 13, scope: !21718)
!21720 = !DILocation(line: 91, column: 6, scope: !21572)
!21721 = !DILocation(line: 92, column: 3, scope: !21718)
!21722 = !DILocation(line: 93, column: 2, scope: !21572)
!21723 = !DILocation(line: 95, column: 17, scope: !21572)
!21724 = !DILocation(line: 95, column: 23, scope: !21572)
!21725 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !21583)
!21726 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !21583)
!21727 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !21583)
!21728 = !DILocation(line: 96, column: 9, scope: !21572)
!21729 = !DILocation(line: 96, column: 7, scope: !21572)
!21730 = !DILocation(line: 97, column: 2, scope: !21572)
!21731 = !DILocation(line: 97, column: 13, scope: !21572)
!21732 = !DILocation(line: 98, column: 16, scope: !21578)
!21733 = !DILocation(line: 98, column: 23, scope: !21578)
!21734 = !DILocation(line: 98, column: 29, scope: !21578)
!21735 = !DILocation(line: 98, column: 7, scope: !21578)
!21736 = !DILocation(line: 98, column: 7, scope: !21579)
!21737 = !DILocation(line: 99, column: 21, scope: !21577)
!21738 = !DILocation(line: 99, column: 27, scope: !21577)
!21739 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !21581)
!21740 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !21581)
!21741 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !21581)
!21742 = !DILocation(line: 100, column: 21, scope: !21577)
!21743 = !DILocation(line: 101, column: 9, scope: !21577)
!21744 = !DILocation(line: 101, column: 14, scope: !21577)
!21745 = !DILocation(line: 102, column: 6, scope: !21577)
!21746 = !DILocation(line: 100, column: 4, scope: !21577)
!21747 = !DILocation(line: 103, column: 19, scope: !21577)
!21748 = !DILocation(line: 103, column: 25, scope: !21577)
!21749 = !DILocation(line: 379, column: 2, scope: !6532, inlinedAt: !21576)
!21750 = !DILocation(line: 379, column: 2, scope: !6535, inlinedAt: !21576)
!21751 = !DILocation(line: 379, column: 2, scope: !6538, inlinedAt: !21576)
!21752 = !DILocation(line: 109, column: 11, scope: !21577)
!21753 = !DILocation(line: 109, column: 17, scope: !21577)
!21754 = !DILocation(line: 109, column: 23, scope: !21577)
!21755 = !DILocation(line: 109, column: 35, scope: !21577)
!21756 = !DILocation(line: 109, column: 8, scope: !21577)
!21757 = !DILocation(line: 110, column: 24, scope: !21577)
!21758 = !DILocation(line: 110, column: 30, scope: !21577)
!21759 = !DILocation(line: 110, column: 13, scope: !21577)
!21760 = !DILocation(line: 110, column: 35, scope: !21577)
!21761 = !DILocation(line: 110, column: 11, scope: !21577)
!21762 = !DILocation(line: 111, column: 8, scope: !21763)
!21763 = distinct !DILexicalBlock(scope: !21577, file: !6489, line: 111, column: 8)
!21764 = !DILocation(line: 111, column: 15, scope: !21763)
!21765 = !DILocation(line: 111, column: 8, scope: !21577)
!21766 = !DILocation(line: 112, column: 17, scope: !21763)
!21767 = !DILocation(line: 112, column: 23, scope: !21763)
!21768 = !DILocation(line: 112, column: 30, scope: !21763)
!21769 = !DILocation(line: 112, column: 42, scope: !21763)
!21770 = !DILocation(line: 112, column: 5, scope: !21763)
!21771 = !DILocation(line: 116, column: 17, scope: !21772)
!21772 = distinct !DILexicalBlock(scope: !21763, file: !6489, line: 113, column: 9)
!21773 = !DILocation(line: 116, column: 23, scope: !21772)
!21774 = !DILocation(line: 116, column: 30, scope: !21772)
!21775 = !DILocation(line: 116, column: 42, scope: !21772)
!21776 = !DILocation(line: 116, column: 5, scope: !21772)
!21777 = !DILocation(line: 118, column: 3, scope: !21577)
!21778 = distinct !{!21778, !21730, !21779}
!21779 = !DILocation(line: 119, column: 2, scope: !21572)
!21780 = !DILocation(line: 121, column: 2, scope: !21572)
!21781 = !DILocation(line: 121, column: 8, scope: !21572)
!21782 = !DILocation(line: 121, column: 20, scope: !21572)
!21783 = !DILocation(line: 122, column: 19, scope: !21572)
!21784 = !DILocation(line: 122, column: 25, scope: !21572)
!21785 = !DILocation(line: 404, column: 2, scope: !6567, inlinedAt: !21574)
!21786 = !DILocation(line: 404, column: 2, scope: !6570, inlinedAt: !21574)
!21787 = !DILocation(line: 404, column: 2, scope: !6573, inlinedAt: !21574)
!21788 = !DILocation(line: 123, column: 1, scope: !21572)
!21789 = distinct !DISubprogram(name: "persist_enabled_on_companion", scope: !6489, file: !6489, line: 24, type: !21790, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!21790 = !DISubroutineType(types: !21791)
!21791 = !{!401, !5047, !341}
!21792 = !DILocalVariable(name: "udev", arg: 1, scope: !21789, file: !6489, line: 24, type: !5047)
!21793 = !DILocation(line: 24, column: 60, scope: !21789)
!21794 = !DILocalVariable(name: "unused", arg: 2, scope: !21789, file: !6489, line: 24, type: !341)
!21795 = !DILocation(line: 24, column: 72, scope: !21789)
!21796 = !DILocation(line: 26, column: 10, scope: !21789)
!21797 = !DILocation(line: 26, column: 16, scope: !21789)
!21798 = !DILocation(line: 26, column: 25, scope: !21789)
!21799 = !DILocation(line: 26, column: 28, scope: !21789)
!21800 = !DILocation(line: 26, column: 34, scope: !21789)
!21801 = !DILocation(line: 26, column: 50, scope: !21789)
!21802 = !DILocation(line: 27, column: 3, scope: !21789)
!21803 = !DILocation(line: 27, column: 9, scope: !21789)
!21804 = !DILocation(line: 27, column: 14, scope: !21789)
!21805 = !DILocation(line: 27, column: 24, scope: !21789)
!21806 = !DILocation(line: 27, column: 30, scope: !21789)
!21807 = !DILocation(line: 0, scope: !21789)
!21808 = !DILocation(line: 26, column: 2, scope: !21789)
!21809 = distinct !DISubprogram(name: "drop_tt", scope: !6239, file: !6239, line: 159, type: !21810, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !389)
!21810 = !DISubroutineType(types: !21811)
!21811 = !{null, !5047}
!21812 = !DILocalVariable(name: "udev", arg: 1, scope: !21809, file: !6239, line: 159, type: !5047)
!21813 = !DILocation(line: 159, column: 40, scope: !21809)
!21814 = !DILocalVariable(name: "utt", scope: !21809, file: !6239, line: 161, type: !5058)
!21815 = !DILocation(line: 161, column: 18, scope: !21809)
!21816 = !DILocation(line: 161, column: 24, scope: !21809)
!21817 = !DILocation(line: 161, column: 30, scope: !21809)
!21818 = !DILocalVariable(name: "tt", scope: !21809, file: !6239, line: 162, type: !6096)
!21819 = !DILocation(line: 162, column: 19, scope: !21809)
!21820 = !DILocalVariable(name: "tt_index", scope: !21809, file: !6239, line: 162, type: !6095)
!21821 = !DILocation(line: 162, column: 25, scope: !21809)
!21822 = !DILocalVariable(name: "ptt", scope: !21809, file: !6239, line: 162, type: !6095)
!21823 = !DILocation(line: 162, column: 37, scope: !21809)
!21824 = !DILocalVariable(name: "cnt", scope: !21809, file: !6239, line: 163, type: !401)
!21825 = !DILocation(line: 163, column: 8, scope: !21809)
!21826 = !DILocalVariable(name: "i", scope: !21809, file: !6239, line: 163, type: !401)
!21827 = !DILocation(line: 163, column: 13, scope: !21809)
!21828 = !DILocation(line: 165, column: 7, scope: !21829)
!21829 = distinct !DILexicalBlock(scope: !21809, file: !6239, line: 165, column: 6)
!21830 = !DILocation(line: 165, column: 11, scope: !21829)
!21831 = !DILocation(line: 165, column: 15, scope: !21829)
!21832 = !DILocation(line: 165, column: 20, scope: !21829)
!21833 = !DILocation(line: 165, column: 6, scope: !21809)
!21834 = !DILocation(line: 166, column: 3, scope: !21829)
!21835 = !DILocation(line: 168, column: 6, scope: !21809)
!21836 = !DILocation(line: 169, column: 6, scope: !21837)
!21837 = distinct !DILexicalBlock(scope: !21809, file: !6239, line: 169, column: 6)
!21838 = !DILocation(line: 169, column: 11, scope: !21837)
!21839 = !DILocation(line: 169, column: 6, scope: !21809)
!21840 = !DILocation(line: 170, column: 14, scope: !21841)
!21841 = distinct !DILexicalBlock(scope: !21837, file: !6239, line: 169, column: 18)
!21842 = !DILocation(line: 170, column: 19, scope: !21841)
!21843 = !DILocation(line: 170, column: 12, scope: !21841)
!21844 = !DILocation(line: 171, column: 10, scope: !21841)
!21845 = !DILocation(line: 171, column: 19, scope: !21841)
!21846 = !DILocation(line: 171, column: 25, scope: !21841)
!21847 = !DILocation(line: 171, column: 32, scope: !21841)
!21848 = !DILocation(line: 171, column: 7, scope: !21841)
!21849 = !DILocation(line: 174, column: 10, scope: !21850)
!21850 = distinct !DILexicalBlock(scope: !21841, file: !6239, line: 174, column: 3)
!21851 = !DILocation(line: 174, column: 8, scope: !21850)
!21852 = !DILocation(line: 174, column: 15, scope: !21853)
!21853 = distinct !DILexicalBlock(scope: !21850, file: !6239, line: 174, column: 3)
!21854 = !DILocation(line: 174, column: 19, scope: !21853)
!21855 = !DILocation(line: 174, column: 24, scope: !21853)
!21856 = !DILocation(line: 174, column: 29, scope: !21853)
!21857 = !DILocation(line: 174, column: 17, scope: !21853)
!21858 = !DILocation(line: 174, column: 3, scope: !21850)
!21859 = !DILocation(line: 175, column: 13, scope: !21853)
!21860 = !DILocation(line: 175, column: 22, scope: !21853)
!21861 = !DILocation(line: 175, column: 12, scope: !21853)
!21862 = !DILocation(line: 175, column: 11, scope: !21853)
!21863 = !DILocation(line: 175, column: 8, scope: !21853)
!21864 = !DILocation(line: 175, column: 4, scope: !21853)
!21865 = !DILocation(line: 174, column: 39, scope: !21853)
!21866 = !DILocation(line: 174, column: 3, scope: !21853)
!21867 = distinct !{!21867, !21858, !21868}
!21868 = !DILocation(line: 175, column: 23, scope: !21850)
!21869 = !DILocation(line: 176, column: 2, scope: !21841)
!21870 = !DILocation(line: 177, column: 12, scope: !21871)
!21871 = distinct !DILexicalBlock(scope: !21837, file: !6239, line: 176, column: 9)
!21872 = !DILocation(line: 178, column: 30, scope: !21871)
!21873 = !DILocation(line: 178, column: 35, scope: !21871)
!21874 = !DILocation(line: 178, column: 9, scope: !21871)
!21875 = !DILocation(line: 178, column: 7, scope: !21871)
!21876 = !DILocation(line: 181, column: 8, scope: !21809)
!21877 = !DILocation(line: 181, column: 7, scope: !21809)
!21878 = !DILocation(line: 181, column: 5, scope: !21809)
!21879 = !DILocation(line: 182, column: 7, scope: !21880)
!21880 = distinct !DILexicalBlock(scope: !21809, file: !6239, line: 182, column: 6)
!21881 = !DILocation(line: 182, column: 10, scope: !21880)
!21882 = !DILocation(line: 182, column: 26, scope: !21880)
!21883 = !DILocation(line: 182, column: 30, scope: !21880)
!21884 = !DILocation(line: 182, column: 14, scope: !21880)
!21885 = !DILocation(line: 182, column: 6, scope: !21809)
!21886 = !DILocation(line: 183, column: 3, scope: !21880)
!21887 = !DILocation(line: 185, column: 12, scope: !21809)
!21888 = !DILocation(line: 185, column: 16, scope: !21809)
!21889 = !DILocation(line: 185, column: 2, scope: !21809)
!21890 = !DILocation(line: 186, column: 3, scope: !21809)
!21891 = !DILocation(line: 186, column: 7, scope: !21809)
!21892 = !DILocation(line: 187, column: 8, scope: !21809)
!21893 = !DILocation(line: 187, column: 2, scope: !21809)
!21894 = !DILocation(line: 188, column: 6, scope: !21895)
!21895 = distinct !DILexicalBlock(scope: !21809, file: !6239, line: 188, column: 6)
!21896 = !DILocation(line: 188, column: 10, scope: !21895)
!21897 = !DILocation(line: 188, column: 6, scope: !21809)
!21898 = !DILocation(line: 189, column: 3, scope: !21899)
!21899 = distinct !DILexicalBlock(scope: !21895, file: !6239, line: 188, column: 16)
!21900 = !DILocation(line: 189, column: 8, scope: !21899)
!21901 = !DILocation(line: 189, column: 15, scope: !21899)
!21902 = !DILocation(line: 190, column: 9, scope: !21899)
!21903 = !DILocation(line: 190, column: 3, scope: !21899)
!21904 = !DILocation(line: 191, column: 2, scope: !21899)
!21905 = !DILocation(line: 192, column: 1, scope: !21809)
